openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Database for MySQL
  description: Azure Database for MySQL provides a managed database service for app development and deployment that allows you to stand up a MySQL database in minutes and scale on the fly - on the cloud you trust most.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the server configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationTagsParameter:
      name: tags
      in: query
      description: The tags of the server configuration.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationKeywordParameter:
      name: keyword
      in: query
      description: The keyword of the server configuration.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationPageParameter:
      name: page
      in: query
      description: The page of the server configuration.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    ConfigurationPageSizeParameter:
      name: pageSize
      in: query
      description: The pageSize of the server configuration.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    BackupNameParameter:
      name: backupName
      in: path
      description: The name of the backup.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        type: string
    ServerNameParameter:
      name: serverName
      in: path
      description: The name of the server.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9][-a-z0-9]*(?<!-)$
        type: string
    LocationNameParameter:
      name: locationName
      in: path
      description: The name of the location.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[ \w]+$
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    MaintenanceNameParameter:
      name: maintenanceName
      in: path
      description: The name of the maintenance.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9-_]*$
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AdministratorNameParameter:
      name: administratorName
      in: path
      description: The name of the Azure AD Administrator.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - ActiveDirectory
        x-ms-enum:
          name: AdministratorName
          modelAsString: true
        type: string
    AdvancedThreatProtectionNameParameter:
      name: advancedThreatProtectionName
      in: path
      description: The name of the Advanced Threat Protection state.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - Default
        x-ms-enum:
          name: AdvancedThreatProtectionName
          modelAsString: true
        pattern: ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*
        type: string
    FirewallRuleNameParameter:
      name: firewallRuleName
      in: path
      description: The name of the server firewall rule.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$
        type: string
    DatabaseNameParameter:
      name: databaseName
      in: path
      description: The name of the database.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    BackupRequestBase:
      description: BackupRequestBase is the base for all backup request.
      required:
        - backupSettings
      type: object
      properties:
        backupSettings:
          $ref: '#/components/schemas/BackupSettings'
          description: Backup Settings
    BackupAndExportRequest:
      description: BackupAndExport API Request
      required:
        - backupSettings
        - targetDetails
      properties:
        backupSettings:
          $ref: '#/components/schemas/BackupSettings'
          description: Backup Settings
        targetDetails:
          $ref: '#/components/schemas/BackupStoreDetails'
          description: Backup Target Store Details
      type: object
    BackupStoreDetails:
      description: Details about the target where the backup content will be stored.
      required:
        - objectType
      type: object
      properties:
        objectType:
          description: Type of the specific object - used for deserializing
          type: string
      discriminator:
        propertyName: objectType
    FullBackupStoreDetails:
      description: FullBackupStoreDetails is used for scenarios where backup data is streamed/copied over to a storage destination.
      required:
        - sasUriList
      properties:
        objectType:
          description: Type of the specific object - used for deserializing
          type: string
        sasUriList:
          description: SASUriList of storage containers where backup data is to be streamed/copied.
          type: array
          items:
            type: string
      type: object
    BackupSettings:
      description: Backup Settings
      type: object
      required:
        - backupName
      properties:
        backupName:
          $ref: '#/components/schemas/BackupName'
        backupFormat:
          description: Backup Format for the current backup. (CollatedFormat is INTERNAL â€“ DO NOT USE)
          enum:
            - CollatedFormat
            - Raw
          type: string
          x-ms-enum:
            name: BackupFormat
            modelAsString: true
    ValidateBackupResponseProperties:
      description: ValidateBackup Response Properties
      type: object
      properties:
        numberOfContainers:
          format: int32
          description: Estimated no of storage containers required for resource data to be backed up.
          type: integer
    BackupAndExportResponseProperties:
      description: BackupAndExport Response Properties
      type: object
      properties:
        datasourceSizeInBytes:
          format: int64
          description: Size of datasource in bytes
          type: integer
        dataTransferredInBytes:
          format: int64
          description: Data transferred in bytes
          type: integer
        backupMetadata:
          description: Metadata related to backup to be stored for restoring resource in key-value pairs.
          type: string
    BackupAndExportResponse:
      description: Represents BackupAndExport API Response
      properties:
        status:
          description: The operation status
          type: string
          enum:
            - Pending
            - InProgress
            - Succeeded
            - Failed
            - CancelInProgress
            - Canceled
          x-ms-enum:
            name: OperationStatus
            modelAsString: false
            values:
              - value: Pending
                description: The operation has been accepted but hasn't started.
              - value: InProgress
                description: The operation is running
              - value: Succeeded
                description: The operation Succeeded
              - value: Failed
                description: The operation Failed
              - value: CancelInProgress
                description: The cancellation in progress
              - value: Canceled
                description: The operation has been Canceled
        startTime:
          description: Start time
          type: string
          format: date-time
        endTime:
          description: End time
          type: string
          format: date-time
        percentComplete:
          description: Operation progress (0-100).
          type: number
          format: double
          minimum: 0
          maximum: 100
        properties:
          $ref: '#/components/schemas/BackupAndExportResponseProperties'
          x-ms-client-flatten: true
          description: The response properties of a backup and export operation.
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    ValidateBackupResponse:
      description: Represents ValidateBackup API Response
      properties:
        properties:
          $ref: '#/components/schemas/ValidateBackupResponseProperties'
          x-ms-client-flatten: true
          description: The response properties of a pre backup operation.
      type: object
    ConfigurationProperties:
      type: object
      properties:
        value:
          type: string
          description: Value of the configuration.
        currentValue:
          type: string
          description: Current value of the configuration.
        description:
          type: string
          readOnly: true
          description: Description of the configuration.
        documentationLink:
          type: string
          readOnly: true
          description: The link used to get the document from community or Azure site.
        defaultValue:
          type: string
          readOnly: true
          description: Default value of the configuration.
        dataType:
          type: string
          readOnly: true
          description: Data type of the configuration.
        allowedValues:
          type: string
          readOnly: true
          description: Allowed values of the configuration.
        source:
          type: string
          description: Source of the configuration.
          enum:
            - system-default
            - user-override
          x-ms-enum:
            name: ConfigurationSource
            modelAsString: true
        isReadOnly:
          type: string
          readOnly: true
          description: If is the configuration read only.
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: IsReadOnly
            modelAsString: true
        isConfigPendingRestart:
          type: string
          readOnly: true
          description: If is the configuration pending restart or not.
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: IsConfigPendingRestart
            modelAsString: true
        isDynamicConfig:
          type: string
          readOnly: true
          description: If is the configuration dynamic.
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: IsDynamicConfig
            modelAsString: true
      description: The properties of a configuration.
    Configuration:
      description: Represents a Configuration.
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          x-ms-client-flatten: true
          description: The properties of a configuration.
      type: object
    ConfigurationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
          description: The list of server configurations.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of server configurations.
    ConfigurationForBatchUpdate:
      description: Represents a Configuration.
      properties:
        name:
          type: string
          description: Name of the configuration.
        properties:
          type: object
          properties:
            value:
              type: string
              description: Value of the configuration.
            source:
              type: string
              description: Source of the configuration.
          x-ms-client-flatten: true
          description: The properties can be updated for a configuration.
      type: object
    ConfigurationListForBatchUpdate:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationForBatchUpdate'
          x-ms-identifiers: []
          description: The list of server configurations.
        resetAllToDefault:
          type: string
          description: Whether to reset all server parameters to default.
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: ResetAllToDefault
            modelAsString: true
      description: A list of server configurations to update.
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    provisioningStateProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of backup resource.
      description: The properties of a server backup.
    ServerBackupPropertiesV2:
      type: object
      properties:
        backupNameV2:
          type: string
          description: Backup name
        backupType:
          type: string
          enum:
            - FULL
          x-ms-enum:
            name: backupType
            modelAsString: true
        completedTime:
          type: string
          format: date-time
          description: Backup completed time (ISO8601 format).
        source:
          type: string
          description: Backup source
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of backup resource.
      description: The properties of a server backup.
    ServerBackupV2:
      description: Server backup properties
      properties:
        properties:
          $ref: '#/components/schemas/ServerBackupPropertiesV2'
          x-ms-client-flatten: true
          description: The properties of a server backup.
      type: object
    Provisioning:
      description: Server backup properties
      properties:
        properties:
          $ref: '#/components/schemas/provisioningStateProperties'
          x-ms-client-flatten: true
          description: The properties of provisioning.
      type: object
    ServerBackupV2ListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServerBackupV2'
          description: The list of backups of a server.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of server backups.
    LogFileProperties:
      type: object
      properties:
        sizeInKB:
          type: integer
          format: int64
          description: The size in kb of the logFile.
        createdTime:
          type: string
          format: date-time
          description: Creation timestamp of the log file.
        type:
          type: string
          description: Type of the log file.
        lastModifiedTime:
          type: string
          format: date-time
          description: Last modified timestamp of the log file.
        url:
          type: string
          description: The url to download the log file from.
      description: The properties of a logFile.
    LogFile:
      description: Represents a logFile.
      properties:
        properties:
          $ref: '#/components/schemas/LogFileProperties'
          x-ms-client-flatten: true
          description: The properties of a logFile.
      type: object
    LogFileListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LogFile'
          description: The list of logFiles in a server
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A List of logFiles.
    BackupName:
      type: string
      description: The name of the backup.
      pattern: (^[a-z0-9]$)|(^[a-z0-9][a-z0-9-]*[a-z0-9]$)
    OperationStatusExtendedResult:
      description: Represents Operation Results API Response
      properties:
        properties:
          $ref: '#/components/schemas/extendedData'
          description: The extended properties of Operation Results
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    extendedData:
      additionalProperties: true
      description: A name-value pair that represents extended info.
      properties: {}
      type: object
    OperationProgressResult:
      description: Represents Operation Results API Response
      properties:
        properties:
          description: The response properties specific to the operation
          $ref: '#/components/schemas/OperationProgressResponseType'
          x-ms-client-flatten: true
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    OperationProgressResponseType:
      description: Represents the response properties specific to the operation
      type: object
      discriminator:
        propertyName: objectType
      required:
        - objectType
      properties:
        objectType:
          description: Identifies the type of source operation
          type: string
          enum:
            - BackupAndExportResponse
            - ImportFromStorageResponse
          x-ms-enum:
            name: ObjectType
            modelAsString: true
    BackupAndExportResponseType:
      description: BackupAndExport Response Properties
      x-ms-discriminator-value: BackupAndExportResponse
      properties:
        datasourceSizeInBytes:
          format: int64
          description: Size of datasource in bytes
          type: integer
        dataTransferredInBytes:
          format: int64
          description: Data transferred in bytes
          type: integer
        backupMetadata:
          description: Metadata related to backup to be stored for restoring resource in key-value pairs.
          type: string
        objectType:
          description: Identifies the type of source operation
          type: string
          enum:
            - BackupAndExportResponse
            - ImportFromStorageResponse
          x-ms-enum:
            name: ObjectType
            modelAsString: true
      type: object
    ImportFromStorageResponseType:
      description: ImportFromStorage Response Properties
      x-ms-discriminator-value: ImportFromStorageResponse
      properties:
        estimatedCompletionTime:
          description: The estimated time of operation completion.
          type: string
          format: date-time
        objectType:
          description: Identifies the type of source operation
          type: string
          enum:
            - BackupAndExportResponse
            - ImportFromStorageResponse
          x-ms-enum:
            name: ObjectType
            modelAsString: true
      type: object
    Maintenance:
      required:
        - properties
      description: Represents a maintenance.
      properties:
        properties:
          $ref: '#/components/schemas/MaintenanceProperties'
          x-ms-client-flatten: true
          description: The properties of a maintenance
      type: object
    MaintenanceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Maintenance'
          x-ms-identifiers: []
          description: The list of maintenances in a server.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of maintenances.
    MaintenanceProperties:
      type: object
      properties:
        maintenanceType:
          $ref: '#/components/schemas/MaintenanceType'
          description: A string defines maintenance type.
        maintenanceState:
          $ref: '#/components/schemas/MaintenanceState'
          description: A string describes the maintenance status
        maintenanceStartTime:
          type: string
          format: date-time
          description: The start time for a maintenance.
        maintenanceEndTime:
          type: string
          format: date-time
          readOnly: true
          description: The end time for a maintenance.
        maintenanceExecutionStartTime:
          type: string
          format: date-time
          readOnly: true
          description: The start time for a maintenance execution.
        maintenanceExecutionEndTime:
          type: string
          format: date-time
          readOnly: true
          description: The end time for a maintenance execution.
        maintenanceAvailableScheduleMinTime:
          type: string
          format: date-time
          readOnly: true
          description: The min time the maintenance can be rescheduled.
        maintenanceAvailableScheduleMaxTime:
          type: string
          format: date-time
          readOnly: true
          description: The max time the maintenance can be rescheduled.
        maintenanceTitle:
          type: string
          readOnly: true
          description: The maintenance title.
        maintenanceDescription:
          type: string
          readOnly: true
          description: The maintenance description.
        provisioningState:
          $ref: '#/components/schemas/MaintenanceProvisioningState'
          description: Provisioning state of the Maintenance.
      description: The properties of a maintenance resource.
    MaintenanceProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: MaintenanceProvisioningState
        modelAsString: true
    MaintenanceState:
      type: string
      readOnly: true
      description: The current status of this maintenance.
      enum:
        - Scheduled
        - ReScheduled
        - InPreparation
        - Processing
        - Completed
        - Canceled
      x-ms-enum:
        name: MaintenanceState
        modelAsString: true
    MaintenanceType:
      type: string
      readOnly: true
      description: The type of this maintenance.
      enum:
        - RoutineMaintenance
        - MinorVersionUpgrade
        - SecurityPatches
        - HotFixes
      x-ms-enum:
        name: MaintenanceType
        modelAsString: true
    MaintenanceUpdate:
      description: Represents a maintenance update parameter.
      properties:
        properties:
          $ref: '#/components/schemas/MaintenancePropertiesForUpdate'
          x-ms-client-flatten: true
          description: The properties of a maintenance update parameter
      type: object
    MaintenancePropertiesForUpdate:
      type: object
      properties:
        maintenanceStartTime:
          type: string
          format: date-time
          description: The start time for a maintenance.
      description: The properties of a maintenance update parameter.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for private endpoint.
      description: The private endpoint resource.
    PrivateEndpointConnection:
      description: The private endpoint connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        groupIds:
          description: The group ids for the private endpoint resource.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The private endpoint resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the private endpoint connection.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connections associated with the specified resource.
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources.
    ServerBackupProperties:
      type: object
      properties:
        backupType:
          type: string
          description: Backup type.
        completedTime:
          type: string
          format: date-time
          description: Backup completed time (ISO8601 format).
        source:
          type: string
          description: Backup source
      description: The properties of a server backup.
    ServerBackup:
      description: Server backup properties
      properties:
        properties:
          $ref: '#/components/schemas/ServerBackupProperties'
          x-ms-client-flatten: true
          description: The properties of a server backup.
      type: object
    ServerBackupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServerBackup'
          description: The list of backups of a server.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of server backups.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: REST API operation definition.
      properties:
        name:
          type: string
          description: The name of the operation being performed on this particular object.
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: The localized display information for this particular operation or action.
        origin:
          type: string
          description: The intended executor of the operation.
        properties:
          type: object
          additionalProperties:
            type: object
          x-ms-client-flatten: false
          description: Additional descriptions for the operation.
      type: object
    OperationListResult:
      description: A list of resource provider operations.
      type: object
      properties:
        value:
          description: Collection of available operation details
          uniqueItems: false
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/Operation'
        nextLink:
          description: URL client should use to fetch the next page (per server side paging).
          type: string
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AdministratorProperties:
      type: object
      properties:
        administratorType:
          type: string
          description: Type of the sever administrator.
          enum:
            - ActiveDirectory
          x-ms-enum:
            name: AdministratorType
            modelAsString: true
        login:
          type: string
          description: Login name of the server administrator.
        sid:
          type: string
          description: SID (object ID) of the server administrator.
        tenantId:
          type: string
          description: Tenant ID of the administrator.
        identityResourceId:
          type: string
          description: The resource id of the identity used for AAD Authentication.
      description: The properties of an administrator.
    AzureADAdministrator:
      description: Represents a Administrator.
      properties:
        properties:
          $ref: '#/components/schemas/AdministratorProperties'
          x-ms-client-flatten: true
          description: The properties of an administrator.
      type: object
    AdministratorListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AzureADAdministrator'
          description: The list of azure ad administrator of a server
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A List of azure ad administrators.
    AdvancedThreatProtectionState:
      description: Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled on the server.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: AdvancedThreatProtectionState
        modelAsString: true
    AdvancedThreatProtectionProperties:
      description: Properties of an Advanced Threat Protection setting.
      type: object
      properties:
        creationTime:
          description: Specifies the UTC creation time of the policy.
          type: string
          format: date-time
          readOnly: true
        state:
          description: Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
          $ref: '#/components/schemas/AdvancedThreatProtectionState'
        provisioningState:
          $ref: '#/components/schemas/AdvancedThreatProtectionProvisioningState'
          description: Provisioning state of the Threat Protection.
    AdvancedThreatProtection:
      description: A server's Advanced Threat Protection.
      properties:
        properties:
          $ref: '#/components/schemas/AdvancedThreatProtectionProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    AdvancedThreatProtectionUpdateProperties:
      type: object
      properties:
        state:
          description: Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
          $ref: '#/components/schemas/AdvancedThreatProtectionState'
      required:
        - state
      description: Properties of Advanced Threat Protection that can be updated.
    AdvancedThreatProtectionForUpdate:
      description: Parameters allowed to update advanced threat protection for a server.
      properties:
        properties:
          $ref: '#/components/schemas/AdvancedThreatProtectionUpdateProperties'
          description: Resource update properties.
          x-ms-client-flatten: true
      type: object
    AdvancedThreatProtectionListResult:
      description: A list of the server's Advanced Threat Protection configurations.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/AdvancedThreatProtection'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    AdvancedThreatProtectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Updating
        - Canceled
        - Failed
      x-ms-enum:
        name: AdvancedThreatProtectionProvisioningState
        modelAsString: true
    ServerVersion:
      type: string
      description: The version of a server.
      enum:
        - '5.7'
        - 8.0.21
      x-ms-enum:
        name: ServerVersion
        modelAsString: true
    EnableStatusEnum:
      type: string
      description: Enum to indicate whether value is 'Enabled' or 'Disabled'
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: EnableStatusEnum
        modelAsString: true
    ReplicationRole:
      type: string
      enum:
        - None
        - Source
        - Replica
      x-ms-enum:
        name: ReplicationRole
        modelAsString: true
      description: The replication role.
    DataEncryption:
      type: object
      description: The date encryption for cmk.
      properties:
        primaryUserAssignedIdentityId:
          type: string
          description: Primary user identity resource id
        primaryKeyURI:
          type: string
          description: Primary key uri
        geoBackupUserAssignedIdentityId:
          type: string
          description: Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
        geoBackupKeyURI:
          type: string
          description: Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
        type:
          type: string
          description: The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
          enum:
            - AzureKeyVault
            - SystemManaged
          x-ms-enum:
            name: DataEncryptionType
            modelAsString: false
    MaintenancePolicy:
      type: object
      description: Maintenance policy of a server.
      properties:
        patchStrategy:
          $ref: '#/components/schemas/PatchStrategy'
          description: The patch strategy of this server
    MaintenanceWindow:
      type: object
      description: Maintenance window of a server.
      properties:
        customWindow:
          type: string
          description: indicates whether custom window is enabled or disabled
        startHour:
          type: integer
          format: int32
          description: start hour for maintenance window
        startMinute:
          type: integer
          format: int32
          description: start minute for maintenance window
        dayOfWeek:
          type: integer
          format: int32
          description: day of week for maintenance window
    Backup:
      type: object
      properties:
        backupRetentionDays:
          type: integer
          format: int32
          description: Backup retention days for the server.
        backupIntervalHours:
          type: integer
          format: int32
          description: Backup interval hours for the server.
        geoRedundantBackup:
          $ref: '#/components/schemas/EnableStatusEnum'
          description: Whether or not geo redundant backup is enabled.
          default: Disabled
        earliestRestoreDate:
          type: string
          format: date-time
          readOnly: true
          description: Earliest restore point creation time (ISO8601 format)
      description: Storage Profile properties of a server
    Storage:
      type: object
      properties:
        storageSizeGB:
          type: integer
          format: int32
          description: Max storage size allowed for a server.
        iops:
          type: integer
          format: int32
          description: Storage IOPS for a server.
        autoGrow:
          description: Enable Storage Auto Grow or not.
          $ref: '#/components/schemas/EnableStatusEnum'
          default: Disabled
        logOnDisk:
          description: Enable Log On Disk or not.
          $ref: '#/components/schemas/EnableStatusEnum'
          default: Disabled
        storageSku:
          type: string
          readOnly: true
          description: The sku name of the server storage.
        autoIoScaling:
          description: Enable IO Auto Scaling or not.
          $ref: '#/components/schemas/EnableStatusEnum'
          default: Enabled
        storageRedundancy:
          description: The redundant type of the server storage. The parameter is used for server creation.
          $ref: '#/components/schemas/StorageRedundancyEnum'
          default: LocalRedundancy
          x-ms-mutability:
            - create
            - read
      description: Storage Profile properties of a server
    MySQLServerSku:
      type: object
      properties:
        name:
          type: string
          description: The name of the sku, e.g. Standard_D32s_v3.
        tier:
          type: string
          description: The tier of the particular SKU, e.g. GeneralPurpose.
          enum:
            - Burstable
            - GeneralPurpose
            - MemoryOptimized
          x-ms-enum:
            name: ServerSkuTier
            modelAsString: true
      required:
        - name
        - tier
      description: Billing information related properties of a server.
    Network:
      type: object
      properties:
        publicNetworkAccess:
          $ref: '#/components/schemas/EnableStatusEnum'
          description: Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
        delegatedSubnetResourceId:
          type: string
          description: Delegated subnet resource id used to setup vnet for a server.
        privateDnsZoneResourceId:
          type: string
          description: Private DNS zone resource id.
      description: Network related properties of a server
    HighAvailability:
      type: object
      properties:
        mode:
          type: string
          enum:
            - Disabled
            - ZoneRedundant
            - SameZone
          x-ms-enum:
            name: HighAvailabilityMode
            modelAsString: true
          description: High availability mode for a server.
        state:
          type: string
          readOnly: true
          description: The state of server high availability.
          enum:
            - NotEnabled
            - CreatingStandby
            - Healthy
            - FailingOver
            - RemovingStandby
          x-ms-enum:
            name: HighAvailabilityState
            modelAsString: true
        standbyAvailabilityZone:
          type: string
          description: Availability zone of the standby server.
      description: High availability properties of a server
    HighAvailabilityValidationEstimation:
      type: object
      properties:
        estimatedDowntime:
          type: integer
          readOnly: true
          format: int32
          description: Estimated seconds of downtime for the deployment.
        scheduledStandbyAvailabilityZone:
          type: string
          readOnly: true
          description: Scheduled Availability zone of the standby server.
        expectedStandbyAvailabilityZone:
          type: string
          description: Expected Availability zone of the standby server.
      description: High availability validation properties of a server
    ImportSourceProperties:
      type: object
      properties:
        storageType:
          type: string
          enum:
            - AzureBlob
          x-ms-enum:
            name: ImportSourceStorageType
            modelAsString: true
          description: Storage type of import source.
          x-ms-mutability:
            - create
            - read
        storageUrl:
          type: string
          description: Uri of the import source storage.
          x-ms-mutability:
            - create
            - read
        sasToken:
          type: string
          x-ms-secret: true
          description: Sas token for accessing source storage. Read and list permissions are required for sas token.
          x-ms-mutability:
            - create
        dataDirPath:
          type: string
          description: Relative path of data directory in storage.
          x-ms-mutability:
            - create
            - read
      description: Import source related properties.
    ServerProperties:
      type: object
      properties:
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
          x-ms-mutability:
            - create
            - read
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          description: The password of the administrator login (required for server creation).
          x-ms-mutability:
            - create
            - update
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        availabilityZone:
          type: string
          description: availability Zone information of the server.
          x-ms-mutability:
            - create
            - read
        createMode:
          type: string
          description: The mode to create a new MySQL server.
          enum:
            - Default
            - PointInTimeRestore
            - Replica
            - GeoRestore
          x-ms-enum:
            name: CreateMode
            modelAsString: true
          x-ms-mutability:
            - create
        sourceServerResourceId:
          type: string
          description: The source MySQL server id.
          x-ms-mutability:
            - create
            - read
        restorePointInTime:
          type: string
          format: date-time
          description: Restore point creation time (ISO8601 format), specifying the time to restore from.
          x-ms-mutability:
            - create
        replicationRole:
          $ref: '#/components/schemas/ReplicationRole'
          description: The replication role.
        replicaCapacity:
          type: integer
          format: int32
          minimum: 0
          readOnly: true
          description: The maximum number of replicas that a primary server can have.
        dataEncryption:
          $ref: '#/components/schemas/DataEncryption'
          description: The Data Encryption for CMK.
        state:
          type: string
          readOnly: true
          description: The state of a server.
          enum:
            - Ready
            - Dropping
            - Disabled
            - Starting
            - Stopping
            - Stopped
            - Updating
          x-ms-enum:
            name: ServerState
            modelAsString: true
        fullyQualifiedDomainName:
          type: string
          description: The fully qualified domain name of a server.
          readOnly: true
        databasePort:
          type: integer
          format: int32
          description: The server database port. Can only be specified when the server is being created.
          x-ms-mutability:
            - create
            - read
        storage:
          $ref: '#/components/schemas/Storage'
          description: Storage related properties of a server.
        backup:
          $ref: '#/components/schemas/Backup'
          description: Backup related properties of a server.
        highAvailability:
          $ref: '#/components/schemas/HighAvailability'
          description: High availability related properties of a server.
        network:
          $ref: '#/components/schemas/Network'
          description: Network related properties of a server.
          x-ms-mutability:
            - create
            - read
        privateEndpointConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: PrivateEndpointConnections related properties of a server.
          readOnly: true
        maintenancePolicy:
          $ref: '#/components/schemas/MaintenancePolicy'
          description: Maintenance policy of a server.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: 'Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.'
          x-ms-mutability:
            - update
            - read
        importSourceProperties:
          $ref: '#/components/schemas/ImportSourceProperties'
          description: Source properties for import from storage.
      description: The properties of a server.
    Server:
      description: Represents a server.
      properties:
        identity:
          $ref: '#/components/schemas/MySQLServerIdentity'
          description: The cmk identity for the server.
        sku:
          $ref: '#/components/schemas/MySQLServerSku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerProperties'
          x-ms-client-flatten: true
          description: Properties of the server.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ServerPropertiesForUpdate:
      type: object
      properties:
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          description: The password of the administrator login.
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        storage:
          $ref: '#/components/schemas/Storage'
          description: Storage related properties of a server.
        backup:
          $ref: '#/components/schemas/Backup'
          description: Backup related properties of a server.
        highAvailability:
          $ref: '#/components/schemas/HighAvailability'
          description: High availability related properties of a server.
        maintenancePolicy:
          $ref: '#/components/schemas/MaintenancePolicy'
          description: Maintenance policy of a server.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: Maintenance window of a server.
        replicationRole:
          $ref: '#/components/schemas/ReplicationRole'
          description: The replication role of the server.
        dataEncryption:
          $ref: '#/components/schemas/DataEncryption'
          description: The Data Encryption for CMK.
        network:
          $ref: '#/components/schemas/Network'
          description: Network related properties of a server
      description: The properties that can be updated for a server.
    ServerForUpdate:
      description: Parameters allowed to update for a server.
      properties:
        identity:
          $ref: '#/components/schemas/MySQLServerIdentity'
          description: The cmk identity for the server.
        sku:
          $ref: '#/components/schemas/MySQLServerSku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerPropertiesForUpdate'
          x-ms-client-flatten: true
          description: The properties that can be updated for a server.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      type: object
    ServerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: The list of servers
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of servers.
    ServerRestartParameter:
      type: object
      properties:
        restartWithFailover:
          $ref: '#/components/schemas/EnableStatusEnum'
          description: Whether or not failover to standby server when restarting a server with high availability enabled.
        maxFailoverSeconds:
          type: integer
          format: int32
          description: The maximum allowed failover time in seconds.
      description: Server restart parameters.
    ServerGtidSetParameter:
      type: object
      properties:
        gtidSet:
          type: string
          description: The Gtid set of server.
      description: 'Server Gtid set parameters: Replication with Global Transaction Identifiers.'
    ServerDetachVNetParameter:
      type: object
      properties:
        publicNetworkAccess:
          $ref: '#/components/schemas/EnableStatusEnum'
          description: Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
      description: Parameters to detach Vnet.
    MySQLServerIdentity:
      x-ms-client-flatten: true
      type: object
      properties:
        principalId:
          type: string
          description: ObjectId from the KeyVault
          readOnly: true
        tenantId:
          type: string
          description: TenantId from the KeyVault
          readOnly: true
        type:
          type: string
          description: Type of managed service identity.
          enum:
            - UserAssigned
          x-ms-enum:
            name: ManagedServiceIdentityType
            modelAsString: true
        userAssignedIdentities:
          type: object
          additionalProperties:
            type: object
            description: ''
            items:
              $ref: '#/components/schemas/UserAssignedIdentity'
          description: Metadata of user assigned identity.
      description: Properties to configure Identity for Bring your Own Keys
    UserAssignedIdentity:
      type: object
      properties:
        principalId:
          description: Principal Id of user assigned identity
          type: string
          x-ms-client-name: PrincipalId
          readOnly: true
        clientId:
          description: Client Id of user assigned identity
          type: string
          x-ms-client-name: ClientId
          readOnly: true
      description: Metadata of user assigned identity.
    StorageRedundancyEnum:
      type: string
      description: Enum to indicate whether storage sku value is 'ZoneRedundancy' or 'LocalRedundancy'
      enum:
        - LocalRedundancy
        - ZoneRedundancy
      x-ms-enum:
        name: StorageRedundancyEnum
        modelAsString: true
    PatchStrategy:
      type: string
      description: Enum to indicate the patch strategy of a server
      enum:
        - Regular
        - VirtualCanary
      x-ms-enum:
        name: PatchStrategy
        modelAsString: true
    FirewallRuleProperties:
      type: object
      properties:
        startIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The start IP address of the server firewall rule. Must be IPv4 format.
        endIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The end IP address of the server firewall rule. Must be IPv4 format.
      required:
        - startIpAddress
        - endIpAddress
      description: The properties of a server firewall rule.
    FirewallRule:
      required:
        - properties
      description: Represents a server firewall rule.
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          x-ms-client-flatten: true
          description: The properties of a firewall rule.
      type: object
    FirewallRuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The list of firewall rules in a server.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of firewall rules.
    VirtualNetworkSubnetUsageParameter:
      type: object
      properties:
        virtualNetworkResourceId:
          type: string
          description: Virtual network resource id.
      description: Virtual network subnet usage parameter
    DelegatedSubnetUsage:
      type: object
      properties:
        subnetName:
          type: string
          readOnly: true
          description: name of the subnet
        usage:
          type: integer
          format: int64
          readOnly: true
          description: Number of used delegated subnets
      description: Delegated subnet usage data.
    VirtualNetworkSubnetUsageResult:
      type: object
      properties:
        location:
          type: string
          readOnly: true
          description: The location name.
        subscriptionId:
          type: string
          readOnly: true
          description: The subscription id.
        delegatedSubnetsUsage:
          description: A list of delegated subnet usage
          type: array
          items:
            $ref: '#/components/schemas/DelegatedSubnetUsage'
          x-ms-identifiers: []
          readOnly: true
      description: Virtual network subnet usage data.
    SkuCapability:
      type: object
      properties:
        name:
          type: string
          description: vCore name
          readOnly: true
        vCores:
          type: integer
          format: int64
          description: supported vCores
          readOnly: true
        supportedIops:
          type: integer
          format: int64
          description: supported IOPS
          readOnly: true
        supportedMemoryPerVCoreMB:
          type: integer
          format: int64
          description: supported memory per vCore in MB
          readOnly: true
      description: Sku capability
    SkuCapabilityV2:
      type: object
      properties:
        name:
          type: string
          description: vCore name
          readOnly: true
        vCores:
          type: integer
          format: int64
          description: supported vCores
          readOnly: true
        supportedIops:
          type: integer
          format: int64
          description: supported IOPS
          readOnly: true
        supportedMemoryPerVCoreMB:
          type: integer
          format: int64
          description: supported memory per vCore in MB
          readOnly: true
        supportedZones:
          type: array
          items:
            type: string
          description: Supported zones
          readOnly: true
        supportedHAMode:
          type: array
          items:
            type: string
          description: Supported high availability mode
          readOnly: true
      description: Sku capability
    ServerVersionCapability:
      type: object
      properties:
        name:
          type: string
          description: server version
          readOnly: true
        supportedSkus:
          description: A list of supported Skus
          type: array
          items:
            $ref: '#/components/schemas/SkuCapability'
          x-ms-identifiers: []
          readOnly: true
      description: Server version capabilities.
    ServerVersionCapabilityV2:
      type: object
      properties:
        name:
          type: string
          description: server version
          readOnly: true
      description: Server version capabilities.
    StorageEditionCapability:
      type: object
      properties:
        name:
          type: string
          description: storage edition name
          readOnly: true
        minStorageSize:
          type: integer
          format: int64
          description: The minimal supported storage size.
          readOnly: true
        maxStorageSize:
          type: integer
          format: int64
          description: The maximum supported storage size.
          readOnly: true
        minBackupRetentionDays:
          type: integer
          format: int64
          description: Minimal backup retention days
          readOnly: true
        maxBackupRetentionDays:
          type: integer
          format: int64
          description: Maximum backup retention days
          readOnly: true
        minBackupIntervalHours:
          type: integer
          format: int64
          description: Minimal backup interval hours
          readOnly: true
        maxBackupIntervalHours:
          type: integer
          format: int64
          description: Maximum backup interval hours
          readOnly: true
      description: storage edition capability
    ServerEditionCapability:
      type: object
      properties:
        name:
          type: string
          description: Server edition name
          readOnly: true
        supportedStorageEditions:
          description: A list of supported storage editions
          type: array
          items:
            $ref: '#/components/schemas/StorageEditionCapability'
          x-ms-identifiers: []
          readOnly: true
        supportedServerVersions:
          description: A list of supported server versions.
          type: array
          items:
            $ref: '#/components/schemas/ServerVersionCapability'
          x-ms-identifiers: []
          readOnly: true
      description: Server edition capabilities.
    ServerEditionCapabilityV2:
      type: object
      properties:
        name:
          type: string
          description: Server edition name
          readOnly: true
        defaultSku:
          type: string
          description: Default Sku name
          readOnly: true
        defaultStorageSize:
          type: integer
          format: int32
          description: Default storage size
          readOnly: true
        supportedStorageEditions:
          description: A list of supported storage editions
          type: array
          items:
            $ref: '#/components/schemas/StorageEditionCapability'
          x-ms-identifiers: []
          readOnly: true
        supportedSkus:
          description: A list of supported Skus
          type: array
          items:
            $ref: '#/components/schemas/SkuCapabilityV2'
          x-ms-identifiers: []
          readOnly: true
      description: Server edition capabilities.
    CapabilityProperties:
      type: object
      properties:
        zone:
          type: string
          description: zone name
          readOnly: true
        supportedHAMode:
          type: array
          items:
            type: string
          description: Supported high availability mode
          readOnly: true
        supportedGeoBackupRegions:
          type: array
          items:
            type: string
          description: supported geo backup regions
          readOnly: true
        supportedFlexibleServerEditions:
          description: A list of supported flexible server editions.
          type: array
          items:
            $ref: '#/components/schemas/ServerEditionCapability'
          x-ms-identifiers: []
          readOnly: true
      description: Location capabilities.
    CapabilityPropertiesV2:
      type: object
      properties:
        supportedGeoBackupRegions:
          type: array
          items:
            type: string
          description: supported geo backup regions
          readOnly: true
        supportedFlexibleServerEditions:
          description: A list of supported flexible server editions.
          type: array
          items:
            $ref: '#/components/schemas/ServerEditionCapabilityV2'
          x-ms-identifiers: []
          readOnly: true
        supportedServerVersions:
          description: A list of supported server versions.
          type: array
          items:
            $ref: '#/components/schemas/ServerVersionCapabilityV2'
          x-ms-identifiers: []
          readOnly: true
      description: Location capability.
    Capability:
      description: Represents a location capability set.
      properties:
        properties:
          $ref: '#/components/schemas/CapabilityPropertiesV2'
          x-ms-client-flatten: true
          description: The properties of a location capability set.
      type: object
    CapabilitiesListResult:
      type: object
      properties:
        value:
          description: A list of supported capabilities.
          type: array
          items:
            $ref: '#/components/schemas/CapabilityProperties'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
      description: location capability
    CapabilitySetsList:
      type: object
      properties:
        value:
          description: A list of supported capability sets.
          type: array
          items:
            $ref: '#/components/schemas/Capability'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
      description: location capability set
    GetPrivateDnsZoneSuffixResponse:
      type: object
      properties:
        privateDnsZoneSuffix:
          type: string
          description: Represents the private DNS zone suffix.
      description: The response of get private dns zone suffix.
    NameAvailabilityRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Resource name to verify.
        type:
          type: string
          description: Resource type used for verification.
      description: Request from client to check resource name availability.
    NameAvailability:
      type: object
      properties:
        message:
          type: string
          description: Error Message.
        nameAvailable:
          type: boolean
          description: Indicates whether the resource name is available.
        reason:
          type: string
          description: Reason for name being unavailable.
      description: Represents a resource name availability.
    OperationDisplay:
      type: object
      properties:
        provider:
          type: string
          description: Operation resource provider name.
        resource:
          type: string
          description: Resource on which the operation is performed.
        operation:
          type: string
          description: Localized friendly name for the operation.
        description:
          type: string
          description: Operation description.
      description: Display metadata associated with the operation.
    DatabaseProperties:
      type: object
      properties:
        charset:
          type: string
          description: The charset of the database.
        collation:
          type: string
          description: The collation of the database.
      description: The properties of a database.
    Database:
      description: Represents a Database.
      properties:
        properties:
          $ref: '#/components/schemas/DatabaseProperties'
          x-ms-client-flatten: true
          description: The properties of a database.
      type: object
    DatabaseListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Database'
          description: The list of databases housed in a server
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A List of databases.
  x-stackQL-resources:
    backup_and_exports:
      id: azure.mysql.backup_and_exports
      name: backup_and_exports
      title: backup_and_exports
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1backupAndExport?api-version=2023-12-30/post'
            operationId: BackupAndExport_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupAndExportResponse
        validate_backup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1validateBackup?api-version=2023-12-30/post'
            operationId: BackupAndExport_ValidateBackup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateBackupResponse
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_and_exports/methods/create'
        update: []
        replace: []
        delete: []
    configurations:
      id: azure.mysql.configurations
      name: configurations
      title: configurations
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1configurations~1{configurationName}?api-version=2023-12-30/put'
            operationId: Configurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1configurations~1{configurationName}?api-version=2023-12-30/patch'
            operationId: Configurations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1configurations~1{configurationName}?api-version=2023-12-30/get'
            operationId: Configurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        batch_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1updateConfigurations?api-version=2023-12-30/post'
            operationId: Configurations_BatchUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationListResult
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1configurations?api-version=2023-12-30/get'
            operationId: Configurations_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/configurations/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/update'
        replace: []
        delete: []
    long_running_backups:
      id: azure.mysql.long_running_backups
      name: long_running_backups
      title: long_running_backups
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1backupsV2~1{backupName}?api-version=2023-12-30/put'
            operationId: LongRunningBackup_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackupV2
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1backupsV2~1{backupName}?api-version=2023-12-30/get'
            operationId: LongRunningBackups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackupV2
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1backupsV2?api-version=2023-12-30/get'
            operationId: LongRunningBackups_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackupV2ListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/long_running_backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/long_running_backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/long_running_backups/methods/create'
        update: []
        replace: []
        delete: []
    log_files:
      id: azure.mysql.log_files
      name: log_files
      title: log_files
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1logFiles?api-version=2023-12-30/get'
            operationId: LogFiles_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogFileListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_files/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    maintenances:
      id: azure.mysql.maintenances
      name: maintenances
      title: maintenances
      methods:
        read:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1maintenances~1{maintenanceName}?api-version=2023-12-30/get'
            operationId: Maintenances_Read
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Maintenance
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1maintenances~1{maintenanceName}?api-version=2023-12-30/patch'
            operationId: Maintenances_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Maintenance
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1maintenances?api-version=2023-12-30/get'
            operationId: Maintenances_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MaintenanceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/maintenances/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/maintenances/methods/update'
        replace: []
        delete: []
    backups:
      id: azure.mysql.backups
      name: backups
      title: backups
      methods:
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1backups~1{backupName}?api-version=2023-12-30/put'
            operationId: Backups_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackup
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1backups~1{backupName}?api-version=2023-12-30/get'
            operationId: Backups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackup
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1backups?api-version=2023-12-30/get'
            operationId: Backups_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackupListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list_by_server'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/backups/methods/put'
        delete: []
    azure_ad_administrators:
      id: azure.mysql.azure_ad_administrators
      name: azure_ad_administrators
      title: azure_ad_administrators
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1administrators~1{administratorName}?api-version=2023-12-30/put'
            operationId: AzureADAdministrators_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AzureADAdministrator
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1administrators~1{administratorName}?api-version=2023-12-30/delete'
            operationId: AzureADAdministrators_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1administrators~1{administratorName}?api-version=2023-12-30/get'
            operationId: AzureADAdministrators_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AzureADAdministrator
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1administrators?api-version=2023-12-30/get'
            operationId: AzureADAdministrators_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AdministratorListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/azure_ad_administrators/methods/get'
          - $ref: '#/components/x-stackQL-resources/azure_ad_administrators/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/azure_ad_administrators/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/azure_ad_administrators/methods/delete'
    advanced_threat_protection_settings:
      id: azure.mysql.advanced_threat_protection_settings
      name: advanced_threat_protection_settings
      title: advanced_threat_protection_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1advancedThreatProtectionSettings~1{advancedThreatProtectionName}?api-version=2024-06-01-preview/get'
            operationId: AdvancedThreatProtectionSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AdvancedThreatProtection
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1advancedThreatProtectionSettings~1{advancedThreatProtectionName}?api-version=2024-06-01-preview/patch'
            operationId: AdvancedThreatProtectionSettings_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AdvancedThreatProtection
        update_put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1advancedThreatProtectionSettings~1{advancedThreatProtectionName}?api-version=2024-06-01-preview/put'
            operationId: AdvancedThreatProtectionSettings_UpdatePut
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AdvancedThreatProtection
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1advancedThreatProtectionSettings?api-version=2024-06-01-preview/get'
            operationId: AdvancedThreatProtectionSettings_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AdvancedThreatProtectionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/advanced_threat_protection_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/advanced_threat_protection_settings/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/advanced_threat_protection_settings/methods/update'
        replace: []
        delete: []
    servers:
      id: azure.mysql.servers
      name: servers
      title: servers
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}?api-version=2024-06-01-preview/put'
            operationId: Servers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}?api-version=2024-06-01-preview/patch'
            operationId: Servers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}?api-version=2024-06-01-preview/delete'
            operationId: Servers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}?api-version=2024-06-01-preview/get'
            operationId: Servers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers?api-version=2024-06-01-preview/get'
            operationId: Servers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1flexibleServers?api-version=2024-06-01-preview/get'
            operationId: Servers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
        failover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1failover?api-version=2024-06-01-preview/post'
            operationId: Servers_Failover
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_estimate_high_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1validateEstimateHighAvailability?api-version=2024-06-01-preview/post'
            operationId: Servers_ValidateEstimateHighAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HighAvailabilityValidationEstimation
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1restart?api-version=2024-06-01-preview/post'
            operationId: Servers_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1start?api-version=2024-06-01-preview/post'
            operationId: Servers_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1stop?api-version=2024-06-01-preview/post'
            operationId: Servers_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_gtid:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1resetGtid?api-version=2024-06-01-preview/post'
            operationId: Servers_ResetGtid
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        detach_v_net:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1detachVNet?api-version=2024-06-01-preview/post'
            operationId: Servers_DetachVNet
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/servers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/servers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/servers/methods/delete'
    replicas:
      id: azure.mysql.replicas
      name: replicas
      title: replicas
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1replicas?api-version=2024-06-01-preview/get'
            operationId: Replicas_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replicas/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    servers_migrations:
      id: azure.mysql.servers_migrations
      name: servers_migrations
      title: servers_migrations
      methods:
        cutover_migration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1cutoverMigration?api-version=2024-06-01-preview/post'
            operationId: ServersMigration_CutoverMigration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    firewall_rules:
      id: azure.mysql.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2023-12-30/put'
            operationId: FirewallRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2023-12-30/delete'
            operationId: FirewallRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2023-12-30/get'
            operationId: FirewallRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1firewallRules?api-version=2023-12-30/get'
            operationId: FirewallRules_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    location_based_capabilities:
      id: azure.mysql.location_based_capabilities
      name: location_based_capabilities
      title: location_based_capabilities
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1locations~1{locationName}~1capabilities?api-version=2023-12-30/get'
            operationId: LocationBasedCapabilities_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CapabilitiesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_based_capabilities/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    location_based_capability_sets:
      id: azure.mysql.location_based_capability_sets
      name: location_based_capability_sets
      title: location_based_capability_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1locations~1{locationName}~1capabilitySets?api-version=2023-12-30/get'
            operationId: LocationBasedCapabilitySet_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CapabilitySetsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1locations~1{locationName}~1capabilitySets~1{capabilitySetName}?api-version=2023-12-30/get'
            operationId: LocationBasedCapabilitySet_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Capability
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_based_capability_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/location_based_capability_sets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.mysql.operations
      name: operations
      title: operations
      methods:
        check_virtual_network_subnet_usage_execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1locations~1{locationName}~1checkVirtualNetworkSubnetUsage?api-version=2023-12-30/post'
            operationId: Operations_CheckVirtualNetworkSubnetUsageExecute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkSubnetUsageResult
        check_name_availability_execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1locations~1{locationName}~1checkNameAvailability?api-version=2023-12-30/post'
            operationId: Operations_CheckNameAvailabilityExecute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailability
        check_name_availability_without_location_execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1checkNameAvailability?api-version=2023-12-30/post'
            operationId: Operations_CheckNameAvailabilityWithoutLocationExecute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailability
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBforMySQL~1operations?api-version=2023-12-30/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operation_results:
      id: azure.mysql.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1locations~1{locationName}~1operationResults~1{operationId}?api-version=2023-12-30/get'
            operationId: OperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatusExtendedResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operation_progress:
      id: azure.mysql.operation_progress
      name: operation_progress
      title: operation_progress
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMySQL~1locations~1{locationName}~1operationProgress~1{operationId}?api-version=2023-12-30/get'
            operationId: OperationProgress_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationProgressResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_progress/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    executes:
      id: azure.mysql.executes
      name: executes
      title: executes
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBforMySQL~1getPrivateDnsZoneSuffix?api-version=2023-12-30/post'
            operationId: Execute_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GetPrivateDnsZoneSuffixResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    databases:
      id: azure.mysql.databases
      name: databases
      title: databases
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1databases~1{databaseName}?api-version=2023-12-30/put'
            operationId: Databases_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1databases~1{databaseName}?api-version=2023-12-30/delete'
            operationId: Databases_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1databases~1{databaseName}?api-version=2023-12-30/get'
            operationId: Databases_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMySQL~1flexibleServers~1{serverName}~1databases?api-version=2023-12-30/get'
            operationId: Databases_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/databases/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/delete'
    vw_configurations:
      id: azure.mysql.vw_configurations
      name: vw_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.value') as "value",
              JSON_EXTRACT(properties, '$.currentValue') as "current_value",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.documentationLink') as "documentation_link",
              JSON_EXTRACT(properties, '$.defaultValue') as "default_value",
              JSON_EXTRACT(properties, '$.dataType') as "data_type",
              JSON_EXTRACT(properties, '$.allowedValues') as "allowed_values",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.isReadOnly') as "is_read_only",
              JSON_EXTRACT(properties, '$.isConfigPendingRestart') as "is_config_pending_restart",
              JSON_EXTRACT(properties, '$.isDynamicConfig') as "is_dynamic_config",
              subscriptionId,
              resourceGroupName,
              serverName,
              configurationName
              FROM azure.mysql.configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.value') as "value",
                json_extract_path_text(properties, '$.currentValue') as "current_value",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.documentationLink') as "documentation_link",
                json_extract_path_text(properties, '$.defaultValue') as "default_value",
                json_extract_path_text(properties, '$.dataType') as "data_type",
                json_extract_path_text(properties, '$.allowedValues') as "allowed_values",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.isReadOnly') as "is_read_only",
                json_extract_path_text(properties, '$.isConfigPendingRestart') as "is_config_pending_restart",
                json_extract_path_text(properties, '$.isDynamicConfig') as "is_dynamic_config",
                subscriptionId,
                resourceGroupName,
                serverName,
                configurationName
                FROM azure.mysql.configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_long_running_backups:
      id: azure.mysql.vw_long_running_backups
      name: vw_long_running_backups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.backupNameV2') as "backup_name_v2",
              JSON_EXTRACT(properties, '$.backupType') as "backup_type",
              JSON_EXTRACT(properties, '$.completedTime') as "completed_time",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              serverName,
              backupName
              FROM azure.mysql.long_running_backups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.backupNameV2') as "backup_name_v2",
                json_extract_path_text(properties, '$.backupType') as "backup_type",
                json_extract_path_text(properties, '$.completedTime') as "completed_time",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                serverName,
                backupName
                FROM azure.mysql.long_running_backups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_backups:
      id: azure.mysql.vw_backups
      name: vw_backups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.backupType') as "backup_type",
              JSON_EXTRACT(properties, '$.completedTime') as "completed_time",
              JSON_EXTRACT(properties, '$.source') as "source",
              subscriptionId,
              resourceGroupName,
              serverName,
              backupName
              FROM azure.mysql.backups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.backupType') as "backup_type",
                json_extract_path_text(properties, '$.completedTime') as "completed_time",
                json_extract_path_text(properties, '$.source') as "source",
                subscriptionId,
                resourceGroupName,
                serverName,
                backupName
                FROM azure.mysql.backups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_azure_ad_administrators:
      id: azure.mysql.vw_azure_ad_administrators
      name: vw_azure_ad_administrators
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.administratorType') as "administrator_type",
              JSON_EXTRACT(properties, '$.login') as "login",
              JSON_EXTRACT(properties, '$.sid') as "sid",
              JSON_EXTRACT(properties, '$.tenantId') as "tenant_id",
              JSON_EXTRACT(properties, '$.identityResourceId') as "identity_resource_id",
              subscriptionId,
              resourceGroupName,
              serverName,
              administratorName
              FROM azure.mysql.azure_ad_administrators
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.administratorType') as "administrator_type",
                json_extract_path_text(properties, '$.login') as "login",
                json_extract_path_text(properties, '$.sid') as "sid",
                json_extract_path_text(properties, '$.tenantId') as "tenant_id",
                json_extract_path_text(properties, '$.identityResourceId') as "identity_resource_id",
                subscriptionId,
                resourceGroupName,
                serverName,
                administratorName
                FROM azure.mysql.azure_ad_administrators
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_advanced_threat_protection_settings:
      id: azure.mysql.vw_advanced_threat_protection_settings
      name: vw_advanced_threat_protection_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              serverName,
              advancedThreatProtectionName
              FROM azure.mysql.advanced_threat_protection_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                serverName,
                advancedThreatProtectionName
                FROM azure.mysql.advanced_threat_protection_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_servers:
      id: azure.mysql.vw_servers
      name: vw_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              sku as sku,
              tags as tags,
              JSON_EXTRACT(properties, '$.administratorLogin') as "administrator_login",
              JSON_EXTRACT(properties, '$.administratorLoginPassword') as "administrator_login_password",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.availabilityZone') as "availability_zone",
              JSON_EXTRACT(properties, '$.createMode') as "create_mode",
              JSON_EXTRACT(properties, '$.sourceServerResourceId') as "source_server_resource_id",
              JSON_EXTRACT(properties, '$.restorePointInTime') as "restore_point_in_time",
              JSON_EXTRACT(properties, '$.replicationRole') as "replication_role",
              JSON_EXTRACT(properties, '$.replicaCapacity') as "replica_capacity",
              JSON_EXTRACT(properties, '$.dataEncryption') as "data_encryption",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
              JSON_EXTRACT(properties, '$.databasePort') as "database_port",
              JSON_EXTRACT(properties, '$.storage') as "storage",
              JSON_EXTRACT(properties, '$.backup') as "backup",
              JSON_EXTRACT(properties, '$.highAvailability') as "high_availability",
              JSON_EXTRACT(properties, '$.network') as "network",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.maintenancePolicy') as "maintenance_policy",
              JSON_EXTRACT(properties, '$.maintenanceWindow') as "maintenance_window",
              JSON_EXTRACT(properties, '$.importSourceProperties') as "import_source_properties",
              subscriptionId,
              resourceGroupName,
              serverName
              FROM azure.mysql.servers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                sku as sku,
                tags as tags,
                json_extract_path_text(properties, '$.administratorLogin') as "administrator_login",
                json_extract_path_text(properties, '$.administratorLoginPassword') as "administrator_login_password",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.availabilityZone') as "availability_zone",
                json_extract_path_text(properties, '$.createMode') as "create_mode",
                json_extract_path_text(properties, '$.sourceServerResourceId') as "source_server_resource_id",
                json_extract_path_text(properties, '$.restorePointInTime') as "restore_point_in_time",
                json_extract_path_text(properties, '$.replicationRole') as "replication_role",
                json_extract_path_text(properties, '$.replicaCapacity') as "replica_capacity",
                json_extract_path_text(properties, '$.dataEncryption') as "data_encryption",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
                json_extract_path_text(properties, '$.databasePort') as "database_port",
                json_extract_path_text(properties, '$.storage') as "storage",
                json_extract_path_text(properties, '$.backup') as "backup",
                json_extract_path_text(properties, '$.highAvailability') as "high_availability",
                json_extract_path_text(properties, '$.network') as "network",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.maintenancePolicy') as "maintenance_policy",
                json_extract_path_text(properties, '$.maintenanceWindow') as "maintenance_window",
                json_extract_path_text(properties, '$.importSourceProperties') as "import_source_properties",
                subscriptionId,
                resourceGroupName,
                serverName
                FROM azure.mysql.servers
                WHERE subscriptionId = 'replace-me';
    vw_firewall_rules:
      id: azure.mysql.vw_firewall_rules
      name: vw_firewall_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startIpAddress') as "start_ip_address",
              JSON_EXTRACT(properties, '$.endIpAddress') as "end_ip_address",
              subscriptionId,
              resourceGroupName,
              serverName,
              firewallRuleName
              FROM azure.mysql.firewall_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startIpAddress') as "start_ip_address",
                json_extract_path_text(properties, '$.endIpAddress') as "end_ip_address",
                subscriptionId,
                resourceGroupName,
                serverName,
                firewallRuleName
                FROM azure.mysql.firewall_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_location_based_capability_sets:
      id: azure.mysql.vw_location_based_capability_sets
      name: vw_location_based_capability_sets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.supportedGeoBackupRegions') as "supported_geo_backup_regions",
              JSON_EXTRACT(properties, '$.supportedFlexibleServerEditions') as "supported_flexible_server_editions",
              JSON_EXTRACT(properties, '$.supportedServerVersions') as "supported_server_versions",
              subscriptionId,
              locationName,
              capabilitySetName
              FROM azure.mysql.location_based_capability_sets
              WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.supportedGeoBackupRegions') as "supported_geo_backup_regions",
                json_extract_path_text(properties, '$.supportedFlexibleServerEditions') as "supported_flexible_server_editions",
                json_extract_path_text(properties, '$.supportedServerVersions') as "supported_server_versions",
                subscriptionId,
                locationName,
                capabilitySetName
                FROM azure.mysql.location_based_capability_sets
                WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me';
    vw_operation_results:
      id: azure.mysql.vw_operation_results
      name: vw_operation_results
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              resourceId as resource_id,
              status as status,
              percentComplete as percent_complete,
              startTime as start_time,
              endTime as end_time,
              operations as operations,
              error as error,
              subscriptionId,
              locationName,
              operationId
              FROM azure.mysql.operation_results
              WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me' AND operationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                resourceId as resource_id,
                status as status,
                percentComplete as percent_complete,
                startTime as start_time,
                endTime as end_time,
                operations as operations,
                error as error,
                subscriptionId,
                locationName,
                operationId
                FROM azure.mysql.operation_results
                WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me' AND operationId = 'replace-me';
    vw_operation_progress:
      id: azure.mysql.vw_operation_progress
      name: vw_operation_progress
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              resourceId as resource_id,
              status as status,
              percentComplete as percent_complete,
              startTime as start_time,
              endTime as end_time,
              operations as operations,
              error as error,
              JSON_EXTRACT(properties, '$.objectType') as "object_type",
              subscriptionId,
              locationName,
              operationId
              FROM azure.mysql.operation_progress
              WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me' AND operationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                resourceId as resource_id,
                status as status,
                percentComplete as percent_complete,
                startTime as start_time,
                endTime as end_time,
                operations as operations,
                error as error,
                json_extract_path_text(properties, '$.objectType') as "object_type",
                subscriptionId,
                locationName,
                operationId
                FROM azure.mysql.operation_progress
                WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me' AND operationId = 'replace-me';
    vw_databases:
      id: azure.mysql.vw_databases
      name: vw_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.charset') as "charset",
              JSON_EXTRACT(properties, '$.collation') as "collation",
              subscriptionId,
              resourceGroupName,
              serverName,
              databaseName
              FROM azure.mysql.databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.charset') as "charset",
                json_extract_path_text(properties, '$.collation') as "collation",
                subscriptionId,
                resourceGroupName,
                serverName,
                databaseName
                FROM azure.mysql.databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backupAndExport?api-version=2023-12-30:
    post:
      tags:
        - BackupAndExport
      operationId: BackupAndExport_Create
      description: Exports the backup of the given server by creating a backup if not existing.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for creating and exporting backup of the given server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupAndExportRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupAndExportResponse'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: URL to retrieve the final result after operation completes.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/validateBackup?api-version=2023-12-30:
    post:
      tags:
        - BackupAndExport
      operationId: BackupAndExport_ValidateBackup
      description: Validates if backup can be performed for given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateBackupResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}?api-version=2023-12-30:
    put:
      tags:
        - Configurations
      operationId: Configurations_CreateOrUpdate
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Configurations
      operationId: Configurations_Update
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - Configurations
      operationId: Configurations_Get
      description: Gets information about a configuration of server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/updateConfigurations?api-version=2023-12-30:
    post:
      tags:
        - Configurations
      operationId: Configurations_BatchUpdate
      description: Update a list of configurations in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The parameters for updating a list of server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationListForBatchUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations?api-version=2023-12-30:
    get:
      tags:
        - Configurations
      operationId: Configurations_ListByServer
      description: List all the configurations in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationTagsParameter'
        - $ref: '#/components/parameters/ConfigurationKeywordParameter'
        - $ref: '#/components/parameters/ConfigurationPageParameter'
        - $ref: '#/components/parameters/ConfigurationPageSizeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backupsV2/{backupName}?api-version=2023-12-30:
    put:
      tags:
        - backupsV2
      operationId: LongRunningBackup_Create
      description: Create backup for a given server with specified backup name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      requestBody:
        description: The required parameters for creating and exporting backup of the given server.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerBackupV2'
      responses:
        '200':
          description: Successfully backup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackupV2'
        '201':
          description: Successfully backup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackupV2'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: URL to retrieve the final result after operation completes.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - backupsV2
      operationId: LongRunningBackups_Get
      description: Get backup for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackupV2'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backupsV2?api-version=2023-12-30:
    get:
      tags:
        - backupsV2
      operationId: LongRunningBackups_List
      description: List all the backups for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackupV2ListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/logFiles?api-version=2023-12-30:
    get:
      tags:
        - LogFiles
      operationId: LogFiles_ListByServer
      description: List all the server log files in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogFileListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/maintenances/{maintenanceName}?api-version=2023-12-30:
    get:
      tags:
        - Maintenances
      operationId: Maintenances_Read
      description: Read maintenance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/MaintenanceNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Maintenance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Maintenances
      operationId: Maintenances_Update
      description: Update maintenances.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/MaintenanceNameParameter'
      requestBody:
        description: The required parameters for update maintenance on a server.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Maintenance'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/maintenances?api-version=2023-12-30:
    get:
      tags:
        - Maintenances
      operationId: Maintenances_List
      description: List maintenances.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}?api-version=2023-12-30:
    put:
      tags:
        - Backups
      operationId: Backups_Put
      description: Create backup for a given server with specified backup name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Backups
      operationId: Backups_Get
      description: List all the backups for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups?api-version=2023-12-30:
    get:
      tags:
        - Backups
      operationId: Backups_ListByServer
      description: List all the backups for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/administrators/{administratorName}?api-version=2023-12-30:
    put:
      tags:
        - AzureADAdministrators
      operationId: AzureADAdministrators_CreateOrUpdate
      description: Creates or updates an existing Azure Active Directory administrator.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdministratorNameParameter'
      requestBody:
        description: The required parameters for creating or updating an aad administrator.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureADAdministrator'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureADAdministrator'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureADAdministrator'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - AzureADAdministrators
      operationId: AzureADAdministrators_Delete
      description: Deletes an Azure AD Administrator.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdministratorNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - AzureADAdministrators
      operationId: AzureADAdministrators_Get
      description: Gets information about an azure ad administrator.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdministratorNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureADAdministrator'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/administrators?api-version=2023-12-30:
    get:
      tags:
        - AzureADAdministrators
      operationId: AzureADAdministrators_ListByServer
      description: List all the AAD administrators in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/advancedThreatProtectionSettings/{advancedThreatProtectionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - AdvancedThreatProtectionSettings
      description: Get a server's Advanced Threat Protection state
      operationId: AdvancedThreatProtectionSettings_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvancedThreatProtectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the server's Advanced Threat Protection state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedThreatProtection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - AdvancedThreatProtectionSettings
      description: Updates a server's Advanced Threat Protection state.
      operationId: AdvancedThreatProtectionSettings_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvancedThreatProtectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The server's Advanced Threat Protection body to update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedThreatProtectionForUpdate'
      responses:
        '200':
          description: Successfully updated the server's Advanced Threat Protection state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedThreatProtection'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: URL to retrieve the final result after operation completes.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - AdvancedThreatProtectionSettings
      description: Updates a server's Advanced Threat Protection state.
      operationId: AdvancedThreatProtectionSettings_UpdatePut
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvancedThreatProtectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The server's Advanced Threat Protection body to update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedThreatProtection'
      responses:
        '200':
          description: Successfully updated the server's Advanced Threat Protection state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedThreatProtection'
        '201':
          description: Successfully created the server's Advanced Threat Protection settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedThreatProtection'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: URL to retrieve the final result after operation completes.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/advancedThreatProtectionSettings?api-version=2024-06-01-preview:
    get:
      tags:
        - AdvancedThreatProtectionSettings
      description: Gets a list of server's Advanced Threat Protection states.
      operationId: AdvancedThreatProtectionSettings_List
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the server's Advanced Threat Protection states.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedThreatProtectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}?api-version=2024-06-01-preview:
    put:
      tags:
        - Servers
      operationId: Servers_Create
      description: Creates a new server or updates an existing server. The update action will overwrite the existing server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Servers
      operationId: Servers_Update
      description: Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerForUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Servers
      operationId: Servers_Delete
      description: Deletes a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - Servers
      operationId: Servers_Get
      description: Gets information about a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers?api-version=2024-06-01-preview:
    get:
      tags:
        - Servers
      operationId: Servers_ListByResourceGroup
      description: List all the servers in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers?api-version=2024-06-01-preview:
    get:
      tags:
        - Servers
      operationId: Servers_List
      description: List all the servers in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/failover?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerFailover
      operationId: Servers_Failover
      description: Manual failover a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/validateEstimateHighAvailability?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerValidateEstimateHighAvailability
      operationId: Servers_ValidateEstimateHighAvailability
      description: Validate a deployment of high availability.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for validation of high availability deployment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HighAvailabilityValidationEstimation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighAvailabilityValidationEstimation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/restart?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerRestart
      operationId: Servers_Restart
      description: Restarts a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for restarting a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerRestartParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/start?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerStart
      operationId: Servers_Start
      description: Starts a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/stop?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerStop
      operationId: Servers_Stop
      description: Stops a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/resetGtid?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerResetGtid
      operationId: Servers_ResetGtid
      description: Resets GTID on a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for resetting GTID on a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGtidSetParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/detachVNet?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerDetachVNet
      operationId: Servers_DetachVNet
      description: Detach VNet on a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for detach vnet on a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerDetachVNetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/replicas?api-version=2024-06-01-preview:
    get:
      tags:
        - Servers
      operationId: Replicas_ListByServer
      description: List all the replicas for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/cutoverMigration?api-version=2024-06-01-preview:
    post:
      tags:
        - ServerMigration
      operationId: ServersMigration_CutoverMigration
      description: Cutover migration for MySQL import, it will switch source elastic server DNS to flexible server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: URL to retrieve the final result after operation completes.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}?api-version=2023-12-30:
    put:
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Creates a new firewall rule or updates an existing firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes a firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      description: Gets information about a server firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules?api-version=2023-12-30:
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByServer
      description: List all the firewall rules in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities?api-version=2023-12-30:
    get:
      tags:
        - LocationBasedCapabilities
      operationId: LocationBasedCapabilities_List
      description: Get capabilities at specified location in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilitySets?api-version=2023-12-30:
    get:
      tags:
        - LocationBasedCapability
      operationId: LocationBasedCapabilitySet_List
      description: Get capabilities at specified location in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilitySetsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilitySets/{capabilitySetName}?api-version=2023-12-30:
    get:
      tags:
        - LocationBasedCapability
      operationId: LocationBasedCapabilitySet_Get
      description: Get capabilities at specified location in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - name: capabilitySetName
          in: path
          description: Name of capability set
          required: true
          schema:
            default: default
            pattern: ^[a-z0-9][-a-z0-9]*(?<!-)$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage?api-version=2023-12-30:
    post:
      tags:
        - CheckVirtualNetworkSubnetUsage
      operationId: Operations_CheckVirtualNetworkSubnetUsageExecute
      description: Get virtual network subnet usage for a given vNet resource id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkSubnetUsageParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkSubnetUsageResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckVirtualNetworkSubnetUsage_Execute
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability?api-version=2023-12-30:
    post:
      tags:
        - CheckNameAvailability
      operationId: Operations_CheckNameAvailabilityExecute
      description: Check the availability of name for server
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      requestBody:
        description: The required parameters for checking if server name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckNameAvailability_Execute
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability?api-version=2023-12-30:
    post:
      tags:
        - CheckNameAvailability
      operationId: Operations_CheckNameAvailabilityWithoutLocationExecute
      description: Check the availability of name for server
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if server name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckNameAvailabilityWithoutLocation_Execute
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/operationResults/{operationId}?api-version=2023-12-30:
    get:
      tags:
        - OperationResults
      summary: Get the operation result for a long running operation.
      operationId: OperationResults_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusExtendedResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/operationProgress/{operationId}?api-version=2023-12-30:
    get:
      tags:
        - OperationProgress
      summary: Get the operation result for a long running operation.
      operationId: OperationProgress_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationProgressResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.DBforMySQL/getPrivateDnsZoneSuffix?api-version=2023-12-30:
    post:
      tags:
        - GetPrivateDnsZoneSuffix
      operationId: Execute_Get
      description: Get private DNS zone suffix in the cloud.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPrivateDnsZoneSuffixResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: GetPrivateDnsZoneSuffix_Execute
  /providers/Microsoft.DBforMySQL/operations?api-version=2023-12-30:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available REST API operations.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}?api-version=2023-12-30:
    put:
      tags:
        - Databases
      operationId: Databases_CreateOrUpdate
      description: Creates a new database or updates an existing database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      requestBody:
        description: The required parameters for creating or updating a database.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Databases
      operationId: Databases_Delete
      description: Deletes a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - Databases
      operationId: Databases_Get
      description: Gets information about a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases?api-version=2023-12-30:
    get:
      tags:
        - Databases
      operationId: Databases_ListByServer
      description: List all the databases in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
