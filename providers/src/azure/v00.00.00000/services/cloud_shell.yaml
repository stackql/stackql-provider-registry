openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Cloud Shell Client
  description: Cloud Shell Client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API version
      required: false
      x-ms-parameter-location: client
      schema:
        type: string
    ConsoleNameParameter:
      name: consoleName
      in: path
      description: The name of the console
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    LocationParameter:
      name: location
      in: path
      description: The provider location
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    UserSettingsNameParameter:
      name: userSettingsName
      in: path
      description: The name of the user settings
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
  schemas:
    CloudShellConsole:
      description: Cloud shell console
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/ConsoleProperties'
      type: object
    ConsoleProperties:
      description: Cloud shell console properties.
      type: object
      required:
        - osType
        - provisioningState
        - uri
      properties:
        osType:
          description: The operating system type of the cloud shell.
          type: string
          enum:
            - Linux
            - Windows
          x-ms-enum:
            name: osType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the console.
          type: string
          enum:
            - NotSpecified
            - Accepted
            - Pending
            - Updating
            - Creating
            - Repairing
            - Failed
            - Canceled
            - Succeeded
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        uri:
          description: Uri of the console.
          type: string
    ConsoleCreateProperties:
      description: Cloud shell properties for creating a console.
      type: object
      required:
        - osType
      properties:
        osType:
          description: The operating system type of the cloud shell.
          type: string
          enum:
            - Linux
            - Windows
          x-ms-enum:
            name: osType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the console.
          type: string
          enum:
            - NotSpecified
            - Accepted
            - Pending
            - Updating
            - Creating
            - Repairing
            - Failed
            - Canceled
            - Succeeded
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        uri:
          description: Uri of the console.
          type: string
    ConsoleDefinition:
      description: Console definition
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/ConsoleCreateProperties'
      type: object
    Resource:
      description: The Resource model definition.
      x-ms-azure-resource: true
      properties: {}
      type: object
    UserSettingsResponse:
      description: Response to get user settings
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/UserProperties'
      type: object
    CloudShellUserSettings:
      description: Cloud shell user settings.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/UserProperties'
      type: object
    CloudShellPatchUserSettings:
      description: Cloud shell patch operation user settings.
      properties:
        properties:
          $ref: '#/components/schemas/UserProperties'
      type: object
    UserProperties:
      description: The cloud shell user settings properties.
      type: object
      required:
        - preferredOsType
        - preferredLocation
        - storageProfile
        - terminalSettings
        - preferredShellType
      properties:
        preferredOsType:
          description: The operating system type of the cloud shell. Deprecated, use preferredShellType.
          type: string
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: osType
            modelAsString: true
        preferredLocation:
          description: The preferred location of the cloud shell.
          type: string
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
        terminalSettings:
          $ref: '#/components/schemas/TerminalSettings'
        preferredShellType:
          description: The shell type of the cloud shell.
          type: string
          enum:
            - bash
            - pwsh
            - powershell
          x-ms-enum:
            name: shellType
            modelAsString: true
    StorageProfile:
      description: The storage profile of the user settings.
      type: object
      properties:
        storageAccountResourceId:
          type: string
          description: Full resource ID of storage account.
        fileShareName:
          type: string
          description: Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
        diskSizeInGB:
          type: integer
          format: int32
          description: Size of file share
    TerminalSettings:
      description: Settings for terminal appearance.
      type: object
      properties:
        fontSize:
          type: string
          description: Size of terminal font.
          enum:
            - NotSpecified
            - Small
            - Medium
            - Large
          x-ms-enum:
            name: fontSize
            modelAsString: true
        fontStyle:
          type: string
          description: Style of terminal font.
          enum:
            - NotSpecified
            - Monospace
            - Courier
          x-ms-enum:
            name: fontStyle
            modelAsString: true
    ErrorResponse:
      title: ErrorResponse
      description: Contains details when the response code indicates an error.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorDetail'
      required:
        - error
    ErrorDetail:
      title: ErrorDetail
      type: object
      properties:
        code:
          description: The error's code.
          type: string
        message:
          description: A human readable error message.
          type: string
      required:
        - code
        - message
  x-stackQL-resources:
    user_settings_with_locations:
      id: azure.cloud_shell.user_settings_with_locations
      name: user_settings_with_locations
      title: user_settings_with_locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1userSettings~1{userSettingsName}?api-version=2018-10-01/get'
            operationId: UserSettingsWithLocation_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSettingsResponse
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1userSettings~1{userSettingsName}?api-version=2018-10-01/delete'
            operationId: UserSettingsWithLocation_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_settings_with_locations/methods/get'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_settings_with_locations/methods/delete'
    user_settings:
      id: azure.cloud_shell.user_settings
      name: user_settings
      title: user_settings
      methods:
        patch_with_location:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1userSettings~1{userSettingsName}?api-version=2018-10-01/patch'
            operationId: UserSettings_PatchWithLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSettingsResponse
        put_with_location:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1userSettings~1{userSettingsName}?api-version=2018-10-01/put'
            operationId: UserSettings_PutWithLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSettingsResponse
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1userSettings~1{userSettingsName}?api-version=2018-10-01/get'
            operationId: UserSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSettingsResponse
        patch:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1userSettings~1{userSettingsName}?api-version=2018-10-01/patch'
            operationId: UserSettings_Patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSettingsResponse
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1userSettings~1{userSettingsName}?api-version=2018-10-01/delete'
            operationId: UserSettings_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1userSettings~1{userSettingsName}?api-version=2018-10-01/put'
            operationId: UserSettings_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSettingsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_settings/methods/get'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/user_settings/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/user_settings/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_settings/methods/delete'
    console_with_locations:
      id: azure.cloud_shell.console_with_locations
      name: console_with_locations
      title: console_with_locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1consoles~1{consoleName}?api-version=2018-10-01/get'
            operationId: ConsoleWithLocation_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudShellConsole
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1consoles~1{consoleName}?api-version=2018-10-01/delete'
            operationId: ConsoleWithLocation_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/console_with_locations/methods/get'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/console_with_locations/methods/delete'
    consoles:
      id: azure.cloud_shell.consoles
      name: consoles
      title: consoles
      methods:
        put_with_location:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1consoles~1{consoleName}?api-version=2018-10-01/put'
            operationId: Console_PutWithLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudShellConsole
        keep_alive_with_location:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1locations~1{location}~1consoles~1{consoleName}~1keepAlive?api-version=2018-10-01/post'
            operationId: Console_KeepAliveWithLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1consoles~1{consoleName}?api-version=2018-10-01/get'
            operationId: Console_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudShellConsole
        put:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1consoles~1{consoleName}?api-version=2018-10-01/put'
            operationId: Console_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudShellConsole
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1consoles~1{consoleName}?api-version=2018-10-01/delete'
            operationId: Console_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        keep_alive:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1consoles~1{consoleName}~1keepAlive?api-version=2018-10-01/post'
            operationId: Console_KeepAlive
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/delete'
    vw_user_settings_with_locations:
      id: azure.cloud_shell.vw_user_settings_with_locations
      name: vw_user_settings_with_locations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.preferredOsType') as "preferred_os_type",
              JSON_EXTRACT(properties, '$.preferredLocation') as "preferred_location",
              JSON_EXTRACT(properties, '$.storageProfile') as "storage_profile",
              JSON_EXTRACT(properties, '$.terminalSettings') as "terminal_settings",
              JSON_EXTRACT(properties, '$.preferredShellType') as "preferred_shell_type",
              location,
              userSettingsName
              FROM azure.cloud_shell.user_settings_with_locations
              WHERE location = 'replace-me' AND userSettingsName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.preferredOsType') as "preferred_os_type",
                json_extract_path_text(properties, '$.preferredLocation') as "preferred_location",
                json_extract_path_text(properties, '$.storageProfile') as "storage_profile",
                json_extract_path_text(properties, '$.terminalSettings') as "terminal_settings",
                json_extract_path_text(properties, '$.preferredShellType') as "preferred_shell_type",
                location,
                userSettingsName
                FROM azure.cloud_shell.user_settings_with_locations
                WHERE location = 'replace-me' AND userSettingsName = 'replace-me';
    vw_user_settings:
      id: azure.cloud_shell.vw_user_settings
      name: vw_user_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.preferredOsType') as "preferred_os_type",
              JSON_EXTRACT(properties, '$.preferredLocation') as "preferred_location",
              JSON_EXTRACT(properties, '$.storageProfile') as "storage_profile",
              JSON_EXTRACT(properties, '$.terminalSettings') as "terminal_settings",
              JSON_EXTRACT(properties, '$.preferredShellType') as "preferred_shell_type",
              userSettingsName
              FROM azure.cloud_shell.user_settings
              WHERE userSettingsName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.preferredOsType') as "preferred_os_type",
                json_extract_path_text(properties, '$.preferredLocation') as "preferred_location",
                json_extract_path_text(properties, '$.storageProfile') as "storage_profile",
                json_extract_path_text(properties, '$.terminalSettings') as "terminal_settings",
                json_extract_path_text(properties, '$.preferredShellType') as "preferred_shell_type",
                userSettingsName
                FROM azure.cloud_shell.user_settings
                WHERE userSettingsName = 'replace-me';
    vw_console_with_locations:
      id: azure.cloud_shell.vw_console_with_locations
      name: vw_console_with_locations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.osType') as "os_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.uri') as "uri",
              location,
              consoleName
              FROM azure.cloud_shell.console_with_locations
              WHERE location = 'replace-me' AND consoleName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.osType') as "os_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.uri') as "uri",
                location,
                consoleName
                FROM azure.cloud_shell.console_with_locations
                WHERE location = 'replace-me' AND consoleName = 'replace-me';
    vw_consoles:
      id: azure.cloud_shell.vw_consoles
      name: vw_consoles
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.osType') as "os_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.uri') as "uri",
              consoleName
              FROM azure.cloud_shell.consoles
              WHERE consoleName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.osType') as "os_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.uri') as "uri",
                consoleName
                FROM azure.cloud_shell.consoles
                WHERE consoleName = 'replace-me';
paths:
  /providers/Microsoft.Portal/locations/{location}/userSettings/{userSettingsName}?api-version=2018-10-01:
    get:
      operationId: UserSettingsWithLocation_Get
      summary: Get user settings.
      description: Get current user settings for current signed in user. This operation returns settings for the user's cloud shell preferences including preferred location, storage profile, shell type, font and size settings.
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsResponse'
          headers:
            x-ms-console-required-location-code:
              schema:
                type: string
              description: normalized required location code
            x-ms-console-preview-user:
              schema:
                type: boolean
              description: indicates whether user is a previous usr.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: getUserSettingsWithLocation
    patch:
      operationId: UserSettings_PatchWithLocation
      summary: patch user settings.
      description: Patch cloud shell settings for current signed in user
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The properties of the user settings to be updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudShellPatchUserSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: patchUserSettingsWithLocation
    delete:
      operationId: UserSettingsWithLocation_Delete
      summary: delete user settings.
      description: Delete cloud shell settings for current signed in user
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: deleteUserSettingsWithLocation
    put:
      operationId: UserSettings_PutWithLocation
      summary: put user settings.
      description: Create or update cloud shell settings for current signed in user
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The properties of the user settings to be created or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudShellUserSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: putUserSettingsWithLocation
  /providers/Microsoft.Portal/locations/{location}/consoles/{consoleName}?api-version=2018-10-01:
    get:
      operationId: ConsoleWithLocation_Get
      summary: Get console
      description: Gets the console for the user.
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudShellConsole'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: getConsoleWithLocation
    put:
      operationId: Console_PutWithLocation
      summary: Put console
      description: Puts a request for a console
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudShellConsole'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudShellConsole'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: putConsoleWithLocation
    delete:
      operationId: ConsoleWithLocation_Delete
      summary: Delete console
      description: Deletes the console
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: deleteConsoleWithLocation
  /providers/Microsoft.Portal/locations/{location}/consoles/{consoleName}/keepAlive?api-version=2018-10-01:
    post:
      operationId: Console_KeepAliveWithLocation
      summary: Keep alive
      description: Keep console alive
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          headers:
            x-ms-console-remaining-seconds:
              schema:
                format: int32
                type: integer
              description: Remaining time left in session, in seconds.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: keepAliveWithLocation
  /providers/Microsoft.Portal/userSettings/{userSettingsName}?api-version=2018-10-01:
    get:
      operationId: UserSettings_Get
      summary: Get user settings.
      description: Get current user settings for current signed in user. This operation returns settings for the user's cloud shell preferences including preferred location, storage profile, shell type, font and size settings.
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsResponse'
          headers:
            x-ms-console-required-location-code:
              schema:
                type: string
              description: normalized required location code
            x-ms-console-preview-user:
              schema:
                type: boolean
              description: indicates whether user is a previous usr.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: GetUserSettings
    patch:
      operationId: UserSettings_Patch
      summary: patch user settings.
      description: Patch cloud shell settings for current signed in user
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
      requestBody:
        description: The properties of the user settings to be updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudShellPatchUserSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: PatchUserSettings
    delete:
      operationId: UserSettings_Delete
      summary: delete user settings.
      description: Delete cloud shell settings for current signed in user
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: DeleteUserSettings
    put:
      operationId: UserSettings_Put
      summary: put user settings.
      description: Create or update cloud shell settings for current signed in user
      parameters:
        - $ref: '#/components/parameters/UserSettingsNameParameter'
      requestBody:
        description: The properties of the user settings to be created or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudShellUserSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: PutUserSettings
  /providers/Microsoft.Portal/consoles/{consoleName}?api-version=2018-10-01:
    get:
      operationId: Console_Get
      summary: Get console
      description: Gets the console for the user.
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudShellConsole'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: GetConsole
    put:
      operationId: Console_Put
      summary: Put console
      description: Puts a request for a console
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
      requestBody:
        description: The console definition.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsoleDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudShellConsole'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudShellConsole'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: PutConsole
    delete:
      operationId: Console_Delete
      summary: Delete console
      description: Deletes the console
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: DeleteConsole
  /providers/Microsoft.Portal/consoles/{consoleName}/keepAlive?api-version=2018-10-01:
    post:
      operationId: Console_KeepAlive
      summary: Keep alive
      description: Keep console alive
      parameters:
        - $ref: '#/components/parameters/ConsoleNameParameter'
      responses:
        '200':
          description: OK
          headers:
            x-ms-console-remaining-seconds:
              schema:
                format: int32
                type: integer
              description: Remaining time left in session, in seconds.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: KeepAlive
