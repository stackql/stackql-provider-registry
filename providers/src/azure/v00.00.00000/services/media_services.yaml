openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Media Services
  description: 'Azure Media Services includes: Account Filters, Asset Filters, Assets, Content Key Policies, Jobs, Live Events, Live Outputs, Streaming Endpoints, Streaming Locators, Streaming Policies and Transforms'
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionId:
      name: subscriptionId
      in: path
      description: The unique identifier for a Microsoft Azure subscription.
      required: true
      schema:
        type: string
    ResourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group within the Azure subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    MediaServicesAccountName:
      name: accountName
      in: path
      description: The Media Services account name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersion:
      name: api-version
      in: query
      description: The version of the API to be used with the client request.
      required: false
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LiveEventName:
      name: liveEventName
      in: path
      description: The name of the live event, maximum length is 32.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 32
        type: string
    StreamingResourceAutoStart:
      name: autoStart
      in: query
      description: The flag indicates if the resource should be automatically started on creation.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    LiveOutputName:
      name: liveOutputName
      in: path
      description: The name of the live output.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 256
        type: string
    StreamingEndpointName:
      name: streamingEndpointName
      in: path
      description: The name of the streaming endpoint, maximum length is 24.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 24
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction:
      properties:
        bestEffort:
          type: boolean
          description: Indicates whether this restriction is enforced on a Best Effort basis.
        configurationData:
          type: integer
          format: int32
          description: Configures the restriction control bits. Must be between 0 and 3 inclusive.
      type: object
      required:
        - bestEffort
        - configurationData
      description: Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.
    ContentKeyPolicyPlayReadyContentKeyLocation:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base class for content key ID location. A derived class must be used to represent the location.
    ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader'
      description: Specifies that the content key ID is in the PlayReady header.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
    ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier'
      required:
        - keyId
      description: Specifies that the content key ID is specified in the PlayReady configuration.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        keyId:
          type: string
          format: uuid
          description: The content key ID.
          nullable: true
      type: object
    ContentKeyPolicyPlayReadyPlayRight:
      properties:
        firstPlayExpiration:
          type: string
          format: duration
          description: The amount of time that the license is valid after the license is first used to play content.
        scmsRestriction:
          type: integer
          format: int32
          description: Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.
        agcAndColorStripeRestriction:
          type: integer
          format: int32
          description: Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.
        explicitAnalogTelevisionOutputRestriction:
          $ref: '#/components/schemas/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction'
          description: Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive.
        digitalVideoOnlyContentRestriction:
          type: boolean
          description: Enables the Image Constraint For Analog Component Video Restriction in the license.
        imageConstraintForAnalogComponentVideoRestriction:
          type: boolean
          description: Enables the Image Constraint For Analog Component Video Restriction in the license.
        imageConstraintForAnalogComputerMonitorRestriction:
          type: boolean
          description: Enables the Image Constraint For Analog Component Video Restriction in the license.
        allowPassingVideoContentToUnknownOutput:
          type: string
          enum:
            - Unknown
            - NotAllowed
            - Allowed
            - AllowedWithVideoConstriction
          x-ms-enum:
            name: ContentKeyPolicyPlayReadyUnknownOutputPassingOption
            values:
              - value: Unknown
                description: Represents a ContentKeyPolicyPlayReadyUnknownOutputPassingOption that is unavailable in current API version.
              - value: NotAllowed
                description: Passing the video portion of protected content to an Unknown Output is not allowed.
              - value: Allowed
                description: Passing the video portion of protected content to an Unknown Output is allowed.
              - value: AllowedWithVideoConstriction
                description: Passing the video portion of protected content to an Unknown Output is allowed but with constrained resolution.
            modelAsString: true
          description: Configures Unknown output handling settings of the license.
        uncompressedDigitalVideoOpl:
          type: integer
          format: int32
          description: Specifies the output protection level for uncompressed digital video.
        compressedDigitalVideoOpl:
          type: integer
          format: int32
          description: Specifies the output protection level for compressed digital video.
        analogVideoOpl:
          type: integer
          format: int32
          description: Specifies the output protection level for compressed digital audio.
        compressedDigitalAudioOpl:
          type: integer
          format: int32
          description: Specifies the output protection level for compressed digital audio.
        uncompressedDigitalAudioOpl:
          type: integer
          format: int32
          description: Specifies the output protection level for uncompressed digital audio.
      type: object
      required:
        - digitalVideoOnlyContentRestriction
        - imageConstraintForAnalogComponentVideoRestriction
        - imageConstraintForAnalogComputerMonitorRestriction
        - allowPassingVideoContentToUnknownOutput
      description: Configures the Play Right in the PlayReady license.
    ContentKeyPolicyTokenClaim:
      properties:
        claimType:
          type: string
          description: Token claim type.
        claimValue:
          type: string
          description: Token claim value.
      type: object
      description: Represents a token claim.
    ContentKeyPolicyPlayReadyLicense:
      properties:
        allowTestDevices:
          type: boolean
          description: A flag indicating whether test devices can use the license.
        securityLevel:
          type: string
          enum:
            - Unknown
            - SL150
            - SL2000
            - SL3000
          x-ms-enum:
            name: SecurityLevel
            values:
              - value: Unknown
                description: Represents a SecurityLevel that is unavailable in current API version.
              - value: SL150
                description: For clients under development or test. No protection against unauthorized use.
              - value: SL2000
                description: For hardened devices and applications consuming commercial content. Software or hardware protection.
              - value: SL3000
                description: For hardened devices only. Hardware protection.
            modelAsString: true
          description: The security level.
        beginDate:
          type: string
          format: date-time
          description: The begin date of license
        expirationDate:
          type: string
          format: date-time
          description: The expiration date of license.
        relativeBeginDate:
          type: string
          format: duration
          description: The relative begin date of license.
        relativeExpirationDate:
          type: string
          format: duration
          description: The relative expiration date of license.
        gracePeriod:
          type: string
          format: duration
          description: The grace period of license.
        playRight:
          $ref: '#/components/schemas/ContentKeyPolicyPlayReadyPlayRight'
          description: The license PlayRight
        licenseType:
          type: string
          enum:
            - Unknown
            - NonPersistent
            - Persistent
          x-ms-enum:
            name: ContentKeyPolicyPlayReadyLicenseType
            values:
              - value: Unknown
                description: Represents a ContentKeyPolicyPlayReadyLicenseType that is unavailable in current API version.
              - value: NonPersistent
                description: Non persistent license.
              - value: Persistent
                description: Persistent license. Allows offline playback.
            modelAsString: true
          description: The license type.
        contentKeyLocation:
          $ref: '#/components/schemas/ContentKeyPolicyPlayReadyContentKeyLocation'
          description: The content key location.
        contentType:
          type: string
          enum:
            - Unknown
            - Unspecified
            - UltraVioletDownload
            - UltraVioletStreaming
          x-ms-enum:
            name: ContentKeyPolicyPlayReadyContentType
            values:
              - value: Unknown
                description: Represents a ContentKeyPolicyPlayReadyContentType that is unavailable in current API version.
              - value: Unspecified
                description: Unspecified content type.
              - value: UltraVioletDownload
                description: Ultraviolet download content type.
              - value: UltraVioletStreaming
                description: Ultraviolet streaming content type.
            modelAsString: true
          description: The PlayReady content type.
      type: object
      required:
        - allowTestDevices
        - licenseType
        - contentKeyLocation
        - contentType
      description: The PlayReady license
    ContentKeyPolicyRestriction:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.
    ContentKeyPolicyOpenRestriction:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyOpenRestriction'
      description: Represents an open restriction. License or key will be delivered on every request.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
    ContentKeyPolicyUnknownRestriction:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyUnknownRestriction'
      description: Represents a ContentKeyPolicyRestriction that is unavailable in the current API version.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
    ContentKeyPolicyConfiguration:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base class for Content Key Policy configuration. A derived class must be used to create a configuration.
    ContentKeyPolicyRestrictionTokenKey:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base class for Content Key Policy key for token validation. A derived class must be used to create a token key.
    ContentKeyPolicySymmetricTokenKey:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicySymmetricTokenKey'
      required:
        - keyValue
      description: Specifies a symmetric key for token validation.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        keyValue:
          type: string
          format: byte
          description: The key value of the key
          nullable: true
      type: object
    ContentKeyPolicyRsaTokenKey:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyRsaTokenKey'
      required:
        - exponent
        - modulus
      description: Specifies a RSA key for token validation
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        exponent:
          type: string
          format: byte
          description: The RSA Parameter exponent
          nullable: true
        modulus:
          type: string
          format: byte
          description: The RSA Parameter modulus
          nullable: true
      type: object
    ContentKeyPolicyX509CertificateTokenKey:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey'
      required:
        - rawBody
      description: Specifies a certificate for token validation.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        rawBody:
          type: string
          format: byte
          description: The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)
          nullable: true
      type: object
    ContentKeyPolicyTokenRestriction:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyTokenRestriction'
      required:
        - issuer
        - audience
        - primaryVerificationKey
        - restrictionTokenType
      description: Represents a token restriction. Provided token must match these requirements for successful license or key delivery.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        issuer:
          type: string
          description: The token issuer.
        audience:
          type: string
          description: The audience for the token.
        primaryVerificationKey:
          $ref: '#/components/schemas/ContentKeyPolicyRestrictionTokenKey'
          description: The primary verification key.
          nullable: true
          x-nullable: true
        alternateVerificationKeys:
          type: array
          items:
            $ref: '#/components/schemas/ContentKeyPolicyRestrictionTokenKey'
          x-ms-identifiers: []
          description: A list of alternative verification keys.
        requiredClaims:
          type: array
          items:
            $ref: '#/components/schemas/ContentKeyPolicyTokenClaim'
          x-ms-identifiers: []
          description: A list of required token claims.
        restrictionTokenType:
          type: string
          enum:
            - Unknown
            - Swt
            - Jwt
          x-ms-enum:
            name: ContentKeyPolicyRestrictionTokenType
            values:
              - value: Unknown
                description: Represents a ContentKeyPolicyRestrictionTokenType that is unavailable in current API version.
              - value: Swt
                description: Simple Web Token.
              - value: Jwt
                description: JSON Web Token.
            modelAsString: true
          description: The type of token.
        openIdConnectDiscoveryDocument:
          type: string
          description: The OpenID connect discovery document.
      type: object
    ContentKeyPolicyClearKeyConfiguration:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration'
      description: Represents a configuration for non-DRM keys.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
    ContentKeyPolicyUnknownConfiguration:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyUnknownConfiguration'
      description: Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
    ContentKeyPolicyWidevineConfiguration:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyWidevineConfiguration'
      required:
        - widevineTemplate
      description: Specifies a configuration for Widevine licenses.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        widevineTemplate:
          type: string
          description: The Widevine template.
      type: object
    ContentKeyPolicyPlayReadyConfiguration:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration'
      required:
        - licenses
      description: Specifies a configuration for PlayReady licenses.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/ContentKeyPolicyPlayReadyLicense'
          x-ms-identifiers: []
          description: The PlayReady licenses.
        responseCustomData:
          type: string
          description: The custom response data.
      type: object
    ContentKeyPolicyFairPlayOfflineRentalConfiguration:
      properties:
        playbackDurationSeconds:
          type: integer
          format: int64
          description: Playback duration
        storageDurationSeconds:
          type: integer
          format: int64
          description: Storage duration
      type: object
      required:
        - playbackDurationSeconds
        - storageDurationSeconds
    ContentKeyPolicyFairPlayConfiguration:
      x-ms-discriminator-value: '#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration'
      required:
        - ask
        - fairPlayPfxPassword
        - fairPlayPfx
        - rentalAndLeaseKeyType
        - rentalDuration
      description: Specifies a configuration for FairPlay licenses.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        ask:
          type: string
          format: byte
          description: The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded.
          nullable: true
        fairPlayPfxPassword:
          type: string
          description: The password encrypting FairPlay certificate in PKCS 12 (pfx) format.
          nullable: true
        fairPlayPfx:
          type: string
          description: The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).
          nullable: true
        rentalAndLeaseKeyType:
          type: string
          enum:
            - Unknown
            - Undefined
            - DualExpiry
            - PersistentUnlimited
            - PersistentLimited
          x-ms-enum:
            name: ContentKeyPolicyFairPlayRentalAndLeaseKeyType
            values:
              - value: Unknown
                description: Represents a ContentKeyPolicyFairPlayRentalAndLeaseKeyType that is unavailable in current API version.
              - value: Undefined
                description: Key duration is not specified.
              - value: DualExpiry
                description: Dual expiry for offline rental.
              - value: PersistentUnlimited
                description: Content key can be persisted with an unlimited duration
              - value: PersistentLimited
                description: Content key can be persisted and the valid duration is limited by the Rental Duration value
            modelAsString: true
          description: The rental and lease key type.
        rentalDuration:
          type: integer
          format: int64
          description: The rental duration. Must be greater than or equal to 0.
        offlineRentalConfiguration:
          $ref: '#/components/schemas/ContentKeyPolicyFairPlayOfflineRentalConfiguration'
          description: Offline rental policy
      type: object
    ContentKeyPolicyOption:
      properties:
        policyOptionId:
          type: string
          format: uuid
          description: The legacy Policy Option ID.
          readOnly: true
          nullable: false
        name:
          type: string
          description: The Policy Option description.
        configuration:
          $ref: '#/components/schemas/ContentKeyPolicyConfiguration'
          description: The key delivery configuration.
        restriction:
          $ref: '#/components/schemas/ContentKeyPolicyRestriction'
          description: The requirements that must be met to deliver keys with this configuration
      type: object
      required:
        - configuration
        - restriction
      description: Represents a policy option.
    ContentKeyPolicyProperties:
      properties:
        policyId:
          type: string
          format: uuid
          description: The legacy Policy ID.
          readOnly: true
          nullable: false
        created:
          type: string
          format: date-time
          description: The creation date of the Policy
          readOnly: true
          nullable: false
        lastModified:
          type: string
          format: date-time
          description: The last modified date of the Policy
          readOnly: true
          nullable: false
        description:
          type: string
          description: A description for the Policy.
        options:
          type: array
          items:
            $ref: '#/components/schemas/ContentKeyPolicyOption'
          x-ms-identifiers:
            - policyOptionId
          description: The Key Policy options.
      type: object
      required:
        - options
      description: The properties of the Content Key Policy.
    ContentKeyPolicy:
      description: A Content Key Policy resource.
      properties:
        properties:
          $ref: '#/components/schemas/ContentKeyPolicyProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    ContentKeyPolicyCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ContentKeyPolicy'
          description: A collection of ContentKeyPolicy items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of ContentKeyPolicy items.
    OperationDisplay:
      properties:
        provider:
          type: string
          description: The service provider.
        resource:
          type: string
          description: Resource on which the operation is performed.
        operation:
          type: string
          description: The operation type.
        description:
          type: string
          description: The operation description.
      type: object
      description: Operation details.
    MetricDimension:
      properties:
        name:
          type: string
          description: The metric dimension name.
          readOnly: true
        displayName:
          type: string
          description: The display name for the dimension.
          readOnly: true
        toBeExportedForShoebox:
          type: boolean
          description: Whether to export metric to shoebox.
          readOnly: true
          nullable: false
      type: object
      description: A metric dimension.
    MetricSpecification:
      properties:
        name:
          type: string
          description: The metric name.
          readOnly: true
        displayName:
          type: string
          description: The metric display name.
          readOnly: true
        displayDescription:
          type: string
          description: The metric display description.
          readOnly: true
        unit:
          type: string
          enum:
            - Bytes
            - Count
            - Milliseconds
          x-ms-enum:
            name: MetricUnit
            values:
              - value: Bytes
                description: The number of bytes.
              - value: Count
                description: The count.
              - value: Milliseconds
                description: The number of milliseconds.
            modelAsString: true
          description: The metric unit
          readOnly: true
          nullable: false
        aggregationType:
          type: string
          enum:
            - Average
            - Count
            - Total
          x-ms-enum:
            name: MetricAggregationType
            values:
              - value: Average
                description: The average.
              - value: Count
                description: The count of a number of items, usually requests.
              - value: Total
                description: The sum.
            modelAsString: true
          description: The metric aggregation type
          readOnly: true
          nullable: false
        lockAggregationType:
          type: string
          enum:
            - Average
            - Count
            - Total
          x-ms-enum:
            name: MetricAggregationType
            values:
              - value: Average
                description: The average.
              - value: Count
                description: The count of a number of items, usually requests.
              - value: Total
                description: The sum.
            modelAsString: true
          description: The metric lock aggregation type
          readOnly: true
          nullable: true
        supportedAggregationTypes:
          type: array
          items:
            type: string
          description: Supported aggregation types.
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
          description: The metric dimensions.
          readOnly: true
        enableRegionalMdmAccount:
          type: boolean
          description: Indicates whether regional MDM account is enabled.
          readOnly: true
          nullable: false
        sourceMdmAccount:
          type: string
          description: The source MDM account.
          readOnly: true
        sourceMdmNamespace:
          type: string
          description: The source MDM namespace.
          readOnly: true
        supportedTimeGrainTypes:
          type: array
          items:
            type: string
          description: The supported time grain types.
          readOnly: true
      type: object
      description: A metric emitted by service.
    Properties:
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: The service specifications.
          readOnly: true
      type: object
      description: The service specification property.
    ServiceSpecification:
      properties:
        logSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - name
          description: List of log specifications.
          readOnly: true
        metricSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          x-ms-identifiers:
            - name
          description: List of metric specifications.
          readOnly: true
      type: object
      description: The service metric specifications.
    LogSpecification:
      properties:
        name:
          type: string
          description: The diagnostic log category name.
          readOnly: true
        displayName:
          type: string
          description: The diagnostic log category display name.
          readOnly: true
        blobDuration:
          type: string
          description: The time range for requests in each blob.
          readOnly: true
      type: object
      description: A diagnostic log emitted by service.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    EntityNameAvailabilityCheckOutput:
      properties:
        nameAvailable:
          type: boolean
          description: Specifies if the name is available.
        reason:
          type: string
          description: Specifies the reason if the name is not available.
        message:
          type: string
          description: Specifies the detailed reason if the name is not available.
      type: object
      required:
        - nameAvailable
      description: The response from the check name availability request.
    StorageAccount:
      properties:
        id:
          type: string
          description: The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.
        type:
          type: string
          enum:
            - Primary
            - Secondary
          x-ms-enum:
            name: StorageAccountType
            values:
              - value: Primary
                description: The primary storage account for the Media Services account.
              - value: Secondary
                description: A secondary storage account for the Media Services account.
            modelAsString: true
          description: The type of the storage account.
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: The storage account identity.
        status:
          type: string
          description: The current status of the storage account mapping.
          readOnly: true
      type: object
      required:
        - type
      description: The storage account details.
    SyncStorageKeysInput:
      properties:
        id:
          type: string
          description: The ID of the storage account resource.
      type: object
      description: The input to the sync storage keys request.
    MediaServiceProperties:
      properties:
        mediaServiceId:
          type: string
          format: uuid
          description: The Media Services account ID.
          readOnly: true
          nullable: false
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          description: The storage accounts for this resource.
        storageAuthentication:
          type: string
          enum:
            - System
            - ManagedIdentity
          x-ms-enum:
            name: StorageAuthentication
            values:
              - value: System
                description: System authentication.
              - value: ManagedIdentity
                description: Managed Identity authentication.
            modelAsString: true
          nullable: true
        encryption:
          $ref: '#/components/schemas/AccountEncryption'
          description: The account encryption properties.
        keyDelivery:
          $ref: '#/components/schemas/KeyDelivery'
          description: The Key Delivery properties for Media Services account.
        publicNetworkAccess:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            values:
              - value: Enabled
                description: Public network access is enabled.
              - value: Disabled
                description: Public network access is disabled.
            modelAsString: true
          description: Whether or not public network access is allowed for resources under the Media Services account.
          nullable: true
        provisioningState:
          type: string
          enum:
            - Failed
            - InProgress
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            values:
              - value: Failed
                description: Provisioning state failed.
              - value: InProgress
                description: Provisioning state in progress.
              - value: Succeeded
                description: Provisioning state succeeded.
            modelAsString: true
          description: Provisioning state of the Media Services account.
          readOnly: true
          nullable: false
        privateEndpointConnections:
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: The Private Endpoint Connections created for the Media Service account.
          type: array
          readOnly: true
        minimumTlsVersion:
          type: string
          enum:
            - Tls10
            - Tls11
            - Tls12
            - Tls13
          x-ms-enum:
            name: MinimumTlsVersion
            values:
              - value: Tls10
                description: Minimum TLS version is TLS 1.0.
              - value: Tls11
                description: Minimum TLS version is TLS 1.1.
              - value: Tls12
                description: Minimum TLS version is TLS 1.2.
              - value: Tls13
                description: Minimum TLS version is TLS 1.3.
            modelAsString: true
          default: Tls12
          description: The minimum TLS version allowed for this account's requests. This is an optional property. If unspecified, a secure default value will be used.
      type: object
      description: Properties of the Media Services account.
    MediaService:
      description: A Media Services account.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/MediaServiceProperties'
          description: The resource properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
        identity:
          $ref: '#/components/schemas/MediaServiceIdentity'
          description: The Managed Identity for the Media Services account.
      type: object
    MediaServiceUpdate:
      description: A Media Services account update.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          $ref: '#/components/schemas/MediaServiceProperties'
          description: The resource properties.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/MediaServiceIdentity'
          description: The Managed Identity for the Media Services account.
      type: object
    ListEdgePoliciesInput:
      properties:
        deviceId:
          type: string
          description: Unique identifier of the edge device.
      type: object
    EdgeUsageDataEventHub:
      properties:
        name:
          type: string
          description: Name of the Event Hub where usage will be reported.
        namespace:
          type: string
          description: Namespace of the Event Hub where usage will be reported.
        token:
          type: string
          description: SAS token needed to interact with Event Hub.
      type: object
    EdgeUsageDataCollectionPolicy:
      properties:
        dataCollectionFrequency:
          type: string
          description: Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H.
        dataReportingFrequency:
          type: string
          description: Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H.
        maxAllowedUnreportedUsageDuration:
          type: string
          description: Maximum time for which the functionality of the device will not be hampered for not reporting the usage data.
        eventHubDetails:
          $ref: '#/components/schemas/EdgeUsageDataEventHub'
          description: Details of Event Hub where the usage will be reported.
      type: object
    EdgePolicies:
      properties:
        usageDataCollectionPolicy:
          $ref: '#/components/schemas/EdgeUsageDataCollectionPolicy'
      type: object
    MediaServiceIdentity:
      properties:
        type:
          type: string
          description: The identity type.
        principalId:
          type: string
          format: uuid
          description: The Principal ID of the identity.
          readOnly: true
          nullable: true
        tenantId:
          type: string
          format: uuid
          description: The Tenant ID of the identity.
          readOnly: true
          nullable: true
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedManagedIdentities'
          description: The user assigned managed identities.
      type: object
      required:
        - type
    UserAssignedManagedIdentity:
      properties:
        clientId:
          type: string
          format: uuid
          description: The client ID.
          readOnly: true
          nullable: true
        principalId:
          type: string
          format: uuid
          description: The principal ID.
          readOnly: true
          nullable: true
      type: object
    UserAssignedManagedIdentities:
      description: The User Assigned Managed Identities.
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedManagedIdentity'
      properties: {}
      type: object
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    ResourceIdentity:
      properties:
        userAssignedIdentity:
          type: string
          description: The user assigned managed identity's ARM ID to use when accessing a resource.
        useSystemAssignedIdentity:
          type: boolean
          description: Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.
      type: object
      required:
        - useSystemAssignedIdentity
    AccountEncryption:
      properties:
        type:
          type: string
          enum:
            - SystemKey
            - CustomerKey
          x-ms-enum:
            name: AccountEncryptionKeyType
            values:
              - value: SystemKey
                description: The Account Key is encrypted with a System Key.
              - value: CustomerKey
                description: The Account Key is encrypted with a Customer Key.
            modelAsString: true
          description: The type of key used to encrypt the Account Key.
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: The properties of the key used to encrypt the account.
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: The Key Vault identity.
        status:
          type: string
          description: The current status of the Key Vault mapping.
          readOnly: true
      type: object
      required:
        - type
    AccessControl:
      properties:
        defaultAction:
          type: string
          enum:
            - Allow
            - Deny
          x-ms-enum:
            name: DefaultAction
            values:
              - value: Allow
                description: All public IP addresses are allowed.
              - value: Deny
                description: Public IP addresses are blocked.
            modelAsString: true
          description: The behavior for IP access control in Key Delivery.
        ipAllowList:
          type: array
          items:
            type: string
          description: The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty.
      type: object
    KeyDelivery:
      properties:
        accessControl:
          $ref: '#/components/schemas/AccessControl'
          description: The access control properties for Key Delivery.
      type: object
    MediaServiceOperationStatus:
      properties:
        name:
          type: string
          description: Operation identifier.
        id:
          type: string
          description: Operation resource ID.
        startTime:
          type: string
          format: date-time
          description: Operation start time.
        endTime:
          type: string
          format: date-time
          description: Operation end time.
        status:
          type: string
          description: Operation status.
        error:
          $ref: '#/components/schemas/ErrorDetail'
          nullable: true
          x-nullable: true
      type: object
      required:
        - name
        - status
      description: Status of media service operation.
    OperationCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: A collection of Operation items.
      type: object
      description: A collection of Operation items.
    MediaServiceCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MediaService'
          description: A collection of MediaService items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of MediaService items.
    CheckNameAvailabilityInput:
      description: The input to the check name availability request.
      properties:
        name:
          description: The account name.
          type: string
        type:
          description: The account type. For a Media Services account, this should be 'MediaServices'.
          type: string
      type: object
    Preset:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base type for all Presets, which define the recipe or instructions on how the input media files should be processed.
    Codec:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        label:
          type: string
          description: An optional label for the codec. The label can be used to control muxing behavior.
      type: object
      required:
        - '@odata.type'
      description: Describes the basic properties of all codecs.
    Audio:
      x-ms-discriminator-value: '#Microsoft.Media.Audio'
      description: Defines the common properties for all audio codecs.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        label:
          type: string
          description: An optional label for the codec. The label can be used to control muxing behavior.
        channels:
          type: integer
          format: int32
          description: The number of channels in the audio.
        samplingRate:
          type: integer
          format: int32
          description: The sampling rate to use for encoding in hertz.
        bitrate:
          type: integer
          format: int32
          description: The bitrate, in bits per second, of the output encoded audio.
      type: object
    AacAudio:
      x-ms-discriminator-value: '#Microsoft.Media.AacAudio'
      description: Describes Advanced Audio Codec (AAC) audio encoding settings.
      properties:
        channels:
          type: integer
          format: int32
          description: The number of channels in the audio.
        samplingRate:
          type: integer
          format: int32
          description: The sampling rate to use for encoding in hertz.
        bitrate:
          type: integer
          format: int32
          description: The bitrate, in bits per second, of the output encoded audio.
        profile:
          type: string
          enum:
            - AacLc
            - HeAacV1
            - HeAacV2
          x-ms-enum:
            name: AacAudioProfile
            values:
              - value: AacLc
                description: Specifies that the output audio is to be encoded into AAC Low Complexity profile (AAC-LC).
              - value: HeAacV1
                description: Specifies that the output audio is to be encoded into HE-AAC v1 profile.
              - value: HeAacV2
                description: Specifies that the output audio is to be encoded into HE-AAC v2 profile.
            modelAsString: true
          description: The encoding profile to be used when encoding audio with AAC.
      type: object
    DDAudio:
      description: 'Describes Dolby Digital Audio Codec (AC3) audio encoding settings. The current implementation for Dolby Digital Audio support are: Audio channel numbers at 1((mono), 2(stereo), 6(5.1side); Audio sampling frequency rates at: 32K/44.1K/48K Hz; Audio bitrate values as AC3 specification supports: 32000, 40000, 48000, 56000, 64000, 80000, 96000, 112000, 128000, 160000, 192000, 224000, 256000, 320000, 384000, 448000, 512000, 576000, 640000 bps.'
      x-ms-discriminator-value: '#Microsoft.Media.DDAudio'
      properties:
        channels:
          type: integer
          format: int32
          description: The number of channels in the audio.
        samplingRate:
          type: integer
          format: int32
          description: The sampling rate to use for encoding in hertz.
        bitrate:
          type: integer
          format: int32
          description: The bitrate, in bits per second, of the output encoded audio.
      type: object
    Fade:
      description: Describes the properties of a Fade effect applied to the input media.
      properties:
        duration:
          description: The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value to stream duration (For example, 10% to fade 10% of stream duration)
          format: duration
          type: string
        fadeColor:
          description: 'The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000'
          type: string
        start:
          description: The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Default is 0
          type: string
      required:
        - fadeColor
        - duration
      type: object
    Layer:
      properties:
        width:
          type: string
          description: The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.
        height:
          type: string
          description: The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.
        label:
          type: string
          description: The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.
      type: object
      description: The encoder can be configured to produce video and/or images (thumbnails) at different resolutions, by specifying a layer for each desired resolution. A layer represents the properties for the video or image at a resolution.
    H265VideoLayer:
      required:
        - bitrate
      description: Describes the settings to be used when encoding the input video into a desired output bitrate layer.
      properties:
        width:
          type: string
          description: The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.
        height:
          type: string
          description: The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.
        label:
          type: string
          description: The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.
        bitrate:
          type: integer
          format: int32
          description: 'The average bitrate in bits per second at which to encode the input video when generating this layer. For example: a target bitrate of 3000Kbps or 3Mbps means this value should be 3000000 This is a required field.'
        maxBitrate:
          type: integer
          format: int32
          description: The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.
        bFrames:
          type: integer
          format: int32
          description: The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level.
        frameRate:
          type: string
          description: The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.
        slices:
          type: integer
          format: int32
          description: The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame.
        adaptiveBFrame:
          type: boolean
          description: Specifies whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use.
      type: object
    H265Layer:
      description: Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.265 video codec.
      properties:
        bitrate:
          type: integer
          format: int32
          description: 'The average bitrate in bits per second at which to encode the input video when generating this layer. For example: a target bitrate of 3000Kbps or 3Mbps means this value should be 3000000 This is a required field.'
        maxBitrate:
          type: integer
          format: int32
          description: The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.
        bFrames:
          type: integer
          format: int32
          description: The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level.
        frameRate:
          type: string
          description: The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.
        slices:
          type: integer
          format: int32
          description: The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame.
        adaptiveBFrame:
          type: boolean
          description: Specifies whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use.
        profile:
          type: string
          enum:
            - Auto
            - Main
            - Main10
          x-ms-enum:
            name: H265VideoProfile
            values:
              - value: Auto
                description: Tells the encoder to automatically determine the appropriate H.265 profile.
              - value: Main
                description: Main profile (https://x265.readthedocs.io/en/default/cli.html?highlight=profile#profile-level-tier)
              - description: Main 10 profile (https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding#Main_10)
                value: Main10
            modelAsString: true
          description: We currently support Main. Default is Auto.
        level:
          type: string
          description: We currently support Level up to 6.2. The value can be Auto, or a number that matches the H.265 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer.
        bufferWindow:
          type: string
          format: duration
          description: The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S).
        crf:
          description: The value of CRF to be used when encoding this layer. This setting takes effect when RateControlMode of video codec is set at CRF mode. The range of CRF value is between 0 and 51, where lower values would result in better quality, at the expense of higher file sizes. Higher values mean more compression, but at some point quality degradation will be noticed. Default value is 28.
          format: float
          type: number
        referenceFrames:
          type: integer
          format: int32
          description: The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting.
      type: object
    Video:
      x-ms-discriminator-value: '#Microsoft.Media.Video'
      description: Describes the basic properties for encoding the input video.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        label:
          type: string
          description: An optional label for the codec. The label can be used to control muxing behavior.
        keyFrameInterval:
          type: string
          format: duration
          description: The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.
        stretchMode:
          type: string
          enum:
            - None
            - AutoSize
            - AutoFit
          x-ms-enum:
            name: StretchMode
            values:
              - value: None
                description: Strictly respect the output resolution without considering the pixel aspect ratio or display aspect ratio of the input video.
              - value: AutoSize
                description: Override the output resolution, and change it to match the display aspect ratio of the input, without padding. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the value in the preset is overridden, and the output will be at 1280x720, which maintains the input aspect ratio of 16:9.
              - value: AutoFit
                description: Pad the output (with either letterbox or pillar box) to honor the output resolution, while ensuring that the active video region in the output has the same aspect ratio as the input. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the output will be at 1280x1280, which contains an inner rectangle of 1280x720 at aspect ratio of 16:9, and pillar box regions 280 pixels wide at the left and right.
            modelAsString: true
          description: The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
        syncMode:
          type: string
          enum:
            - Auto
            - Passthrough
            - Cfr
            - Vfr
          x-ms-enum:
            name: VideoSyncMode
            values:
              - value: Auto
                description: This is the default method. Chooses between Cfr and Vfr depending on muxer capabilities. For output format MP4, the default mode is Cfr.
              - value: Passthrough
                description: 'The presentation timestamps on frames are passed through from the input file to the output file writer. Recommended when the input source has variable frame rate, and are attempting to produce multiple layers for adaptive streaming in the output which have aligned GOP boundaries. Note: if two or more frames in the input have duplicate timestamps, then the output will also have the same behavior'
              - value: Cfr
                description: Input frames will be repeated and/or dropped as needed to achieve exactly the requested constant frame rate. Recommended when the output frame rate is explicitly set at a specified value
              - value: Vfr
                description: Similar to the Passthrough mode, but if the input has frames that have duplicate timestamps, then only one frame is passed through to the output, and others are dropped. Recommended when the number of output frames is expected to be equal to the number of input frames. For example, the output is used to calculate a quality metric like PSNR against the input
            modelAsString: true
          description: The Video Sync Mode
      type: object
    H265Video:
      x-ms-discriminator-value: '#Microsoft.Media.H265Video'
      description: Describes all the properties for encoding a video with the H.265 codec.
      properties:
        keyFrameInterval:
          type: string
          format: duration
          description: The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.
        stretchMode:
          type: string
          enum:
            - None
            - AutoSize
            - AutoFit
          x-ms-enum:
            name: StretchMode
            values:
              - value: None
                description: Strictly respect the output resolution without considering the pixel aspect ratio or display aspect ratio of the input video.
              - value: AutoSize
                description: Override the output resolution, and change it to match the display aspect ratio of the input, without padding. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the value in the preset is overridden, and the output will be at 1280x720, which maintains the input aspect ratio of 16:9.
              - value: AutoFit
                description: Pad the output (with either letterbox or pillar box) to honor the output resolution, while ensuring that the active video region in the output has the same aspect ratio as the input. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the output will be at 1280x1280, which contains an inner rectangle of 1280x720 at aspect ratio of 16:9, and pillar box regions 280 pixels wide at the left and right.
            modelAsString: true
          description: The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
        syncMode:
          type: string
          enum:
            - Auto
            - Passthrough
            - Cfr
            - Vfr
          x-ms-enum:
            name: VideoSyncMode
            values:
              - value: Auto
                description: This is the default method. Chooses between Cfr and Vfr depending on muxer capabilities. For output format MP4, the default mode is Cfr.
              - value: Passthrough
                description: 'The presentation timestamps on frames are passed through from the input file to the output file writer. Recommended when the input source has variable frame rate, and are attempting to produce multiple layers for adaptive streaming in the output which have aligned GOP boundaries. Note: if two or more frames in the input have duplicate timestamps, then the output will also have the same behavior'
              - value: Cfr
                description: Input frames will be repeated and/or dropped as needed to achieve exactly the requested constant frame rate. Recommended when the output frame rate is explicitly set at a specified value
              - value: Vfr
                description: Similar to the Passthrough mode, but if the input has frames that have duplicate timestamps, then only one frame is passed through to the output, and others are dropped. Recommended when the number of output frames is expected to be equal to the number of input frames. For example, the output is used to calculate a quality metric like PSNR against the input
            modelAsString: true
          description: The Video Sync Mode
        sceneChangeDetection:
          type: boolean
          description: Specifies whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video.
        complexity:
          type: string
          enum:
            - Speed
            - Balanced
            - Quality
          x-ms-enum:
            name: H265Complexity
            values:
              - value: Speed
                description: Tells the encoder to use settings that are optimized for faster encoding. Quality is sacrificed to decrease encoding time.
              - value: Balanced
                description: Tells the encoder to use settings that achieve a balance between speed and quality.
              - value: Quality
                description: Tells the encoder to use settings that are optimized to produce higher quality output at the expense of slower overall encode time.
            modelAsString: true
          description: Tells the encoder how to choose its encoding settings.  Quality will provide for a higher compression ratio but at a higher cost and longer compute time.  Speed will produce a relatively larger file but is faster and more economical. The default value is Balanced.
        layers:
          type: array
          items:
            $ref: '#/components/schemas/H265Layer'
          x-ms-identifiers: []
          description: The collection of output H.265 layers to be produced by the encoder.
      type: object
    TrackDescriptor:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base type for all TrackDescriptor types, which define the metadata and selection for tracks that should be processed by a Job
    AudioTrackDescriptor:
      x-ms-discriminator-value: '#Microsoft.Media.AudioTrackDescriptor'
      description: A TrackSelection to select audio tracks.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        channelMapping:
          type: string
          enum:
            - FrontLeft
            - FrontRight
            - Center
            - LowFrequencyEffects
            - BackLeft
            - BackRight
            - StereoLeft
            - StereoRight
          x-ms-enum:
            name: ChannelMapping
            values:
              - value: FrontLeft
                description: The Front Left Channel.
              - value: FrontRight
                description: The Front Right Channel.
              - value: Center
                description: The Center Channel.
              - value: LowFrequencyEffects
                description: Low Frequency Effects Channel.  Sometimes referred to as the subwoofer.
              - value: BackLeft
                description: The Back Left Channel.  Sometimes referred to as the Left Surround Channel.
              - value: BackRight
                description: The Back Right Channel.  Sometimes referred to as the Right Surround Channel.
              - value: StereoLeft
                description: The Left Stereo channel.  Sometimes referred to as Down Mix Left.
              - value: StereoRight
                description: The Right Stereo channel.  Sometimes referred to as Down Mix Right.
            modelAsString: true
          description: Optional designation for single channel audio tracks.  Can be used to combine the tracks into stereo or multi-channel audio tracks.
      type: object
    SelectAudioTrackByAttribute:
      x-ms-discriminator-value: '#Microsoft.Media.SelectAudioTrackByAttribute'
      required:
        - attribute
        - filter
      description: Select audio tracks from the input by specifying an attribute and an attribute filter.
      properties:
        channelMapping:
          type: string
          enum:
            - FrontLeft
            - FrontRight
            - Center
            - LowFrequencyEffects
            - BackLeft
            - BackRight
            - StereoLeft
            - StereoRight
          x-ms-enum:
            name: ChannelMapping
            values:
              - value: FrontLeft
                description: The Front Left Channel.
              - value: FrontRight
                description: The Front Right Channel.
              - value: Center
                description: The Center Channel.
              - value: LowFrequencyEffects
                description: Low Frequency Effects Channel.  Sometimes referred to as the subwoofer.
              - value: BackLeft
                description: The Back Left Channel.  Sometimes referred to as the Left Surround Channel.
              - value: BackRight
                description: The Back Right Channel.  Sometimes referred to as the Right Surround Channel.
              - value: StereoLeft
                description: The Left Stereo channel.  Sometimes referred to as Down Mix Left.
              - value: StereoRight
                description: The Right Stereo channel.  Sometimes referred to as Down Mix Right.
            modelAsString: true
          description: Optional designation for single channel audio tracks.  Can be used to combine the tracks into stereo or multi-channel audio tracks.
        attribute:
          type: string
          enum:
            - Bitrate
            - Language
          x-ms-enum:
            name: TrackAttribute
            values:
              - value: Bitrate
                description: The bitrate of the track.
              - value: Language
                description: The language of the track.
            modelAsString: true
          description: The TrackAttribute to filter the tracks by.
        filter:
          type: string
          enum:
            - All
            - Top
            - Bottom
            - ValueEquals
          x-ms-enum:
            name: AttributeFilter
            values:
              - value: All
                description: All tracks will be included.
              - value: Top
                description: The first track will be included when the attribute is sorted in descending order.  Generally used to select the largest bitrate.
              - value: Bottom
                description: The first track will be included when the attribute is sorted in ascending order.  Generally used to select the smallest bitrate.
              - value: ValueEquals
                description: Any tracks that have an attribute equal to the value given will be included.
            modelAsString: true
          description: The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
        filterValue:
          type: string
          description: The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property.
      type: object
    SelectAudioTrackById:
      x-ms-discriminator-value: '#Microsoft.Media.SelectAudioTrackById'
      required:
        - trackId
      description: Select audio tracks from the input by specifying a track identifier.
      properties:
        channelMapping:
          type: string
          enum:
            - FrontLeft
            - FrontRight
            - Center
            - LowFrequencyEffects
            - BackLeft
            - BackRight
            - StereoLeft
            - StereoRight
          x-ms-enum:
            name: ChannelMapping
            values:
              - value: FrontLeft
                description: The Front Left Channel.
              - value: FrontRight
                description: The Front Right Channel.
              - value: Center
                description: The Center Channel.
              - value: LowFrequencyEffects
                description: Low Frequency Effects Channel.  Sometimes referred to as the subwoofer.
              - value: BackLeft
                description: The Back Left Channel.  Sometimes referred to as the Left Surround Channel.
              - value: BackRight
                description: The Back Right Channel.  Sometimes referred to as the Right Surround Channel.
              - value: StereoLeft
                description: The Left Stereo channel.  Sometimes referred to as Down Mix Left.
              - value: StereoRight
                description: The Right Stereo channel.  Sometimes referred to as Down Mix Right.
            modelAsString: true
          description: Optional designation for single channel audio tracks.  Can be used to combine the tracks into stereo or multi-channel audio tracks.
        trackId:
          type: integer
          format: int64
          description: Track identifier to select
      type: object
    InputDefinition:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        includedTracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackDescriptor'
          x-ms-identifiers: []
          description: The list of TrackDescriptors which define the metadata and selection of tracks in the input.
      type: object
      required:
        - '@odata.type'
      description: Base class for defining an input. Use sub classes of this class to specify tracks selections and related metadata.
    FromAllInputFile:
      x-ms-discriminator-value: '#Microsoft.Media.FromAllInputFile'
      description: An InputDefinition that looks across all of the files provided to select tracks specified by the IncludedTracks property. Generally used with the AudioTrackByAttribute and VideoTrackByAttribute to allow selection of a single track across a set of input files.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        includedTracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackDescriptor'
          x-ms-identifiers: []
          description: The list of TrackDescriptors which define the metadata and selection of tracks in the input.
      type: object
    FromEachInputFile:
      x-ms-discriminator-value: '#Microsoft.Media.FromEachInputFile'
      description: An InputDefinition that looks at each input file provided to select tracks specified by the IncludedTracks property. Generally used with the AudioTrackByAttribute and VideoTrackByAttribute to select tracks from each file given.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        includedTracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackDescriptor'
          x-ms-identifiers: []
          description: The list of TrackDescriptors which define the metadata and selection of tracks in the input.
      type: object
    InputFile:
      x-ms-discriminator-value: '#Microsoft.Media.InputFile'
      description: An InputDefinition for a single file.  TrackSelections are scoped to the file specified.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        includedTracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackDescriptor'
          x-ms-identifiers: []
          description: The list of TrackDescriptors which define the metadata and selection of tracks in the input.
        filename:
          type: string
          description: Name of the file that this input definition applies to.
      type: object
    FaceDetectorPreset:
      x-ms-discriminator-value: '#Microsoft.Media.FaceDetectorPreset'
      description: Describes all the settings to be used when analyzing a video in order to detect (and optionally redact) all the faces present.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        resolution:
          type: string
          enum:
            - SourceResolution
            - StandardDefinition
          x-ms-enum:
            name: AnalysisResolution
            values:
              - value: SourceResolution
              - value: StandardDefinition
            modelAsString: true
          description: Specifies the maximum resolution at which your video is analyzed. The default behavior is "SourceResolution," which will keep the input video at its original resolution when analyzed. Using "StandardDefinition" will resize input videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to "StandardDefinition" will reduce the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics for details). However, faces that end up being too small in the resized video may not be detected.
        mode:
          type: string
          enum:
            - Analyze
            - Redact
            - Combined
          x-ms-enum:
            name: FaceRedactorMode
            values:
              - value: Analyze
                description: Analyze mode detects faces and outputs a metadata file with the results. Allows editing of the metadata file before faces are blurred with Redact mode.
              - value: Redact
                description: Redact mode consumes the metadata file from Analyze mode and redacts the faces found.
              - value: Combined
                description: Combined mode does the Analyze and Redact steps in one pass when editing the analyzed faces is not desired.
            modelAsString: true
          description: 'This mode provides the ability to choose between the following settings: 1) Analyze - For detection only.This mode generates a metadata JSON file marking appearances of faces throughout the video.Where possible, appearances of the same person are assigned the same ID. 2) Combined - Additionally redacts(blurs) detected faces. 3) Redact - This enables a 2-pass process, allowing for selective redaction of a subset of detected faces.It takes in the metadata file from a prior analyze pass, along with the source video, and a user-selected subset of IDs that require redaction.'
        blurType:
          type: string
          enum:
            - Box
            - Low
            - Med
            - High
            - Black
          x-ms-enum:
            name: BlurType
            values:
              - value: Box
                description: 'Box: debug filter, bounding box only'
              - value: Low
                description: 'Low: box-car blur filter'
              - value: Med
                description: 'Med: Gaussian blur filter'
              - value: High
                description: 'High: Confuse blur filter'
              - value: Black
                description: 'Black: Black out filter'
            modelAsString: true
          description: Blur type
        experimentalOptions:
          type: object
          additionalProperties:
            type: string
          description: Dictionary containing key value pairs for parameters not exposed in the preset itself
      type: object
    AudioAnalyzerPreset:
      x-ms-discriminator-value: '#Microsoft.Media.AudioAnalyzerPreset'
      description: The Audio Analyzer preset applies a pre-defined set of AI-based analysis operations, including speech transcription. Currently, the preset supports processing of content with a single audio track.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        audioLanguage:
          type: string
          description: 'The language for the audio payload in the input using the BCP-47 format of ''language tag-region'' (e.g: ''en-US'').  If you know the language of your content, it is recommended that you specify it. The language must be specified explicitly for AudioAnalysisMode::Basic, since automatic language detection is not included in basic mode. If the language isn''t specified or set to null, automatic language detection will choose the first language detected and process with the selected language for the duration of the file. It does not currently support dynamically switching between languages after the first language is detected. The automatic detection works best with audio recordings with clearly discernable speech. If automatic detection fails to find the language, transcription would fallback to ''en-US''." The list of supported languages is available here: https://go.microsoft.com/fwlink/?linkid=2109463'
        mode:
          type: string
          enum:
            - Standard
            - Basic
          x-ms-enum:
            name: AudioAnalysisMode
            values:
              - value: Standard
                description: Performs all operations included in the Basic mode, additionally performing language detection and speaker diarization.
              - value: Basic
                description: This mode performs speech-to-text transcription and generation of a VTT subtitle/caption file. The output of this mode includes an Insights JSON file including only the keywords, transcription,and timing information. Automatic language detection and speaker diarization are not included in this mode.
            modelAsString: true
          description: Determines the set of audio analysis operations to be performed. If unspecified, the Standard AudioAnalysisMode would be chosen.
        experimentalOptions:
          type: object
          additionalProperties:
            type: string
          description: Dictionary containing key value pairs for parameters not exposed in the preset itself
      type: object
    Overlay:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        inputLabel:
          type: string
          description: The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats.
        start:
          type: string
          format: duration
          description: The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the beginning of the input video.
        end:
          type: string
          format: duration
          description: The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format. For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is greater than the input video duration, else the overlay will last as long as the overlay media duration.
        fadeInDuration:
          type: string
          format: duration
          description: The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S).
        fadeOutDuration:
          type: string
          format: duration
          description: The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S).
        audioGainLevel:
          type: number
          format: double
          description: The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.
      type: object
      required:
        - '@odata.type'
        - inputLabel
      description: Base type for all overlays - image, audio or video.
    AudioOverlay:
      x-ms-discriminator-value: '#Microsoft.Media.AudioOverlay'
      description: Describes the properties of an audio overlay.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        inputLabel:
          type: string
          description: The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats.
        start:
          type: string
          format: duration
          description: The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the beginning of the input video.
        end:
          type: string
          format: duration
          description: The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format. For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is greater than the input video duration, else the overlay will last as long as the overlay media duration.
        fadeInDuration:
          type: string
          format: duration
          description: The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S).
        fadeOutDuration:
          type: string
          format: duration
          description: The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S).
        audioGainLevel:
          type: number
          format: double
          description: The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.
      type: object
    CopyVideo:
      x-ms-discriminator-value: '#Microsoft.Media.CopyVideo'
      description: A codec flag, which tells the encoder to copy the input video bitstream without re-encoding.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        label:
          type: string
          description: An optional label for the codec. The label can be used to control muxing behavior.
      type: object
    Image:
      x-ms-discriminator-value: '#Microsoft.Media.Image'
      required:
        - start
      description: Describes the basic properties for generating thumbnails from the input video
      properties:
        keyFrameInterval:
          type: string
          format: duration
          description: The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.
        stretchMode:
          type: string
          enum:
            - None
            - AutoSize
            - AutoFit
          x-ms-enum:
            name: StretchMode
            values:
              - value: None
                description: Strictly respect the output resolution without considering the pixel aspect ratio or display aspect ratio of the input video.
              - value: AutoSize
                description: Override the output resolution, and change it to match the display aspect ratio of the input, without padding. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the value in the preset is overridden, and the output will be at 1280x720, which maintains the input aspect ratio of 16:9.
              - value: AutoFit
                description: Pad the output (with either letterbox or pillar box) to honor the output resolution, while ensuring that the active video region in the output has the same aspect ratio as the input. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the output will be at 1280x1280, which contains an inner rectangle of 1280x720 at aspect ratio of 16:9, and pillar box regions 280 pixels wide at the left and right.
            modelAsString: true
          description: The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
        syncMode:
          type: string
          enum:
            - Auto
            - Passthrough
            - Cfr
            - Vfr
          x-ms-enum:
            name: VideoSyncMode
            values:
              - value: Auto
                description: This is the default method. Chooses between Cfr and Vfr depending on muxer capabilities. For output format MP4, the default mode is Cfr.
              - value: Passthrough
                description: 'The presentation timestamps on frames are passed through from the input file to the output file writer. Recommended when the input source has variable frame rate, and are attempting to produce multiple layers for adaptive streaming in the output which have aligned GOP boundaries. Note: if two or more frames in the input have duplicate timestamps, then the output will also have the same behavior'
              - value: Cfr
                description: Input frames will be repeated and/or dropped as needed to achieve exactly the requested constant frame rate. Recommended when the output frame rate is explicitly set at a specified value
              - value: Vfr
                description: Similar to the Passthrough mode, but if the input has frames that have duplicate timestamps, then only one frame is passed through to the output, and others are dropped. Recommended when the number of output frames is expected to be equal to the number of input frames. For example, the output is used to calculate a quality metric like PSNR against the input
            modelAsString: true
          description: The Video Sync Mode
        start:
          type: string
          description: The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro {Best}.
        step:
          type: string
          description: 'The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time.'
        range:
          type: string
          description: The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream.
      type: object
    Format:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        filenamePattern:
          type: string
          description: 'The file naming pattern used for the creation of output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {AudioStream} - string "Audio" plus audio stream number(start from 1). {Bitrate} - The audio/video bitrate in kbps. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename.'
      type: object
      required:
        - '@odata.type'
        - filenamePattern
      description: Base class for output.
    ImageFormat:
      x-ms-discriminator-value: '#Microsoft.Media.ImageFormat'
      description: Describes the properties for an output image file.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        filenamePattern:
          type: string
          description: 'The file naming pattern used for the creation of output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {AudioStream} - string "Audio" plus audio stream number(start from 1). {Bitrate} - The audio/video bitrate in kbps. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename.'
      type: object
    JpgFormat:
      x-ms-discriminator-value: '#Microsoft.Media.JpgFormat'
      description: Describes the settings for producing JPEG thumbnails.
      properties: {}
      type: object
    PngFormat:
      x-ms-discriminator-value: '#Microsoft.Media.PngFormat'
      description: Describes the settings for producing PNG thumbnails.
      properties: {}
      type: object
    CopyAudio:
      x-ms-discriminator-value: '#Microsoft.Media.CopyAudio'
      description: A codec flag, which tells the encoder to copy the input audio bitstream.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        label:
          type: string
          description: An optional label for the codec. The label can be used to control muxing behavior.
      type: object
    Deinterlace:
      properties:
        parity:
          type: string
          enum:
            - Auto
            - TopFieldFirst
            - BottomFieldFirst
          x-ms-enum:
            name: DeinterlaceParity
            values:
              - value: Auto
                description: Automatically detect the order of fields
              - value: TopFieldFirst
                description: Apply top field first processing of input video.
              - value: BottomFieldFirst
                description: Apply bottom field first processing of input video.
            modelAsString: true
          description: The field parity for de-interlacing, defaults to Auto.
        mode:
          type: string
          enum:
            - 'Off'
            - AutoPixelAdaptive
          x-ms-enum:
            name: DeinterlaceMode
            values:
              - value: 'Off'
                description: Disables de-interlacing of the source video.
              - value: AutoPixelAdaptive
                description: Apply automatic pixel adaptive de-interlacing on each frame in the input video.
            modelAsString: true
          description: The deinterlacing mode. Defaults to AutoPixelAdaptive.
      type: object
      description: Describes the de-interlacing settings.
    Rectangle:
      properties:
        left:
          type: string
          description: The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).
        top:
          type: string
          description: The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).
        width:
          type: string
          description: The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).
        height:
          type: string
          description: The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).
      type: object
      description: Describes the properties of a rectangular window applied to the input media before processing it.
    Filters:
      properties:
        deinterlace:
          $ref: '#/components/schemas/Deinterlace'
          description: The de-interlacing settings.
        rotation:
          type: string
          enum:
            - Auto
            - None
            - Rotate0
            - Rotate90
            - Rotate180
            - Rotate270
          x-ms-enum:
            name: Rotation
            values:
              - value: Auto
                description: Automatically detect and rotate as needed.
              - value: None
                description: Do not rotate the video.  If the output format supports it, any metadata about rotation is kept intact.
              - value: Rotate0
                description: Do not rotate the video but remove any metadata about the rotation.
              - value: Rotate90
                description: Rotate 90 degrees clockwise.
              - value: Rotate180
                description: Rotate 180 degrees clockwise.
              - value: Rotate270
                description: Rotate 270 degrees clockwise.
            modelAsString: true
          description: The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto
        crop:
          $ref: '#/components/schemas/Rectangle'
          description: The parameters for the rectangular window with which to crop the input video.
        fadeIn:
          $ref: '#/components/schemas/Fade'
        fadeOut:
          $ref: '#/components/schemas/Fade'
        overlays:
          type: array
          items:
            $ref: '#/components/schemas/Overlay'
          x-ms-identifiers:
            - inputLabel
          description: The properties of overlays to be applied to the input video. These could be audio, image or video overlays.
      type: object
      description: Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding.
    VideoLayer:
      required:
        - bitrate
      description: Describes the settings to be used when encoding the input video into a desired output bitrate layer.
      properties:
        width:
          type: string
          description: The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.
        height:
          type: string
          description: The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.
        label:
          type: string
          description: The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.
        bitrate:
          type: integer
          format: int32
          description: The average bitrate in bits per second at which to encode the input video when generating this layer. This is a required field.
        maxBitrate:
          type: integer
          format: int32
          description: The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.
        bFrames:
          type: integer
          format: int32
          description: The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level.
        frameRate:
          type: string
          description: The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.
        slices:
          type: integer
          format: int32
          description: The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame.
        adaptiveBFrame:
          type: boolean
          description: Whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use.
      type: object
    H264Layer:
      description: Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.264 video codec.
      properties:
        bitrate:
          type: integer
          format: int32
          description: The average bitrate in bits per second at which to encode the input video when generating this layer. This is a required field.
        maxBitrate:
          type: integer
          format: int32
          description: The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.
        bFrames:
          type: integer
          format: int32
          description: The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level.
        frameRate:
          type: string
          description: The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.
        slices:
          type: integer
          format: int32
          description: The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame.
        adaptiveBFrame:
          type: boolean
          description: Whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use.
        profile:
          type: string
          enum:
            - Auto
            - Baseline
            - Main
            - High
            - High422
            - High444
          x-ms-enum:
            name: H264VideoProfile
            values:
              - value: Auto
                description: Tells the encoder to automatically determine the appropriate H.264 profile.
              - value: Baseline
                description: Baseline profile
              - value: Main
                description: Main profile
              - value: High
                description: High profile.
              - value: High422
                description: High 4:2:2 profile.
              - value: High444
                description: High 4:4:4 predictive profile.
            modelAsString: true
          description: We currently support Baseline, Main, High, High422, High444. Default is Auto.
        level:
          type: string
          description: We currently support Level up to 6.2. The value can be Auto, or a number that matches the H.264 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer.
        bufferWindow:
          type: string
          format: duration
          description: The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S).
        crf:
          description: The value of CRF to be used when encoding this layer. This setting takes effect when RateControlMode of video codec is set at CRF mode. The range of CRF value is between 0 and 51, where lower values would result in better quality, at the expense of higher file sizes. Higher values mean more compression, but at some point quality degradation will be noticed. Default value is 23.
          format: float
          type: number
        referenceFrames:
          type: integer
          format: int32
          description: The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting.
        entropyMode:
          type: string
          enum:
            - Cabac
            - Cavlc
          x-ms-enum:
            name: EntropyMode
            values:
              - value: Cabac
                description: Context Adaptive Binary Arithmetic Coder (CABAC) entropy encoding.
              - value: Cavlc
                description: Context Adaptive Variable Length Coder (CAVLC) entropy encoding.
            modelAsString: true
          description: The entropy mode to be used for this layer. If not specified, the encoder chooses the mode that is appropriate for the profile and level.
      type: object
    H264Video:
      x-ms-discriminator-value: '#Microsoft.Media.H264Video'
      description: Describes all the properties for encoding a video with the H.264 codec.
      properties:
        keyFrameInterval:
          type: string
          format: duration
          description: The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.
        stretchMode:
          type: string
          enum:
            - None
            - AutoSize
            - AutoFit
          x-ms-enum:
            name: StretchMode
            values:
              - value: None
                description: Strictly respect the output resolution without considering the pixel aspect ratio or display aspect ratio of the input video.
              - value: AutoSize
                description: Override the output resolution, and change it to match the display aspect ratio of the input, without padding. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the value in the preset is overridden, and the output will be at 1280x720, which maintains the input aspect ratio of 16:9.
              - value: AutoFit
                description: Pad the output (with either letterbox or pillar box) to honor the output resolution, while ensuring that the active video region in the output has the same aspect ratio as the input. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the output will be at 1280x1280, which contains an inner rectangle of 1280x720 at aspect ratio of 16:9, and pillar box regions 280 pixels wide at the left and right.
            modelAsString: true
          description: The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
        syncMode:
          type: string
          enum:
            - Auto
            - Passthrough
            - Cfr
            - Vfr
          x-ms-enum:
            name: VideoSyncMode
            values:
              - value: Auto
                description: This is the default method. Chooses between Cfr and Vfr depending on muxer capabilities. For output format MP4, the default mode is Cfr.
              - value: Passthrough
                description: 'The presentation timestamps on frames are passed through from the input file to the output file writer. Recommended when the input source has variable frame rate, and are attempting to produce multiple layers for adaptive streaming in the output which have aligned GOP boundaries. Note: if two or more frames in the input have duplicate timestamps, then the output will also have the same behavior'
              - value: Cfr
                description: Input frames will be repeated and/or dropped as needed to achieve exactly the requested constant frame rate. Recommended when the output frame rate is explicitly set at a specified value
              - value: Vfr
                description: Similar to the Passthrough mode, but if the input has frames that have duplicate timestamps, then only one frame is passed through to the output, and others are dropped. Recommended when the number of output frames is expected to be equal to the number of input frames. For example, the output is used to calculate a quality metric like PSNR against the input
            modelAsString: true
          description: The Video Sync Mode
        complexity:
          type: string
          enum:
            - Speed
            - Balanced
            - Quality
          x-ms-enum:
            name: H264Complexity
            values:
              - value: Speed
                description: Tells the encoder to use settings that are optimized for faster encoding. Quality is sacrificed to decrease encoding time.
              - value: Balanced
                description: Tells the encoder to use settings that achieve a balance between speed and quality.
              - value: Quality
                description: Tells the encoder to use settings that are optimized to produce higher quality output at the expense of slower overall encode time.
            modelAsString: true
          description: Tells the encoder how to choose its encoding settings. The default value is Balanced.
        layers:
          type: array
          items:
            $ref: '#/components/schemas/H264Layer'
          x-ms-identifiers: []
          description: The collection of output H.264 layers to be produced by the encoder.
        rateControlMode:
          description: The video rate control mode
          enum:
            - ABR
            - CBR
            - CRF
          type: string
          x-ms-enum:
            modelAsString: true
            name: H264RateControlMode
            values:
              - description: 'Average Bitrate (ABR) mode that hits the target bitrate: Default mode.'
                value: ABR
              - description: Constant Bitrate (CBR) mode that tightens bitrate variations around target bitrate.
                value: CBR
              - description: Constant Rate Factor (CRF) mode that targets at constant subjective quality.
                value: CRF
        sceneChangeDetection:
          type: boolean
          description: Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video.
      type: object
    JpgImage:
      x-ms-discriminator-value: '#Microsoft.Media.JpgImage'
      description: Describes the properties for producing a series of JPEG images from the input video.
      properties:
        start:
          type: string
          description: The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro {Best}.
        step:
          type: string
          description: 'The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time.'
        range:
          type: string
          description: The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream.
        layers:
          type: array
          items:
            $ref: '#/components/schemas/JpgLayer'
          x-ms-identifiers: []
          description: A collection of output JPEG image layers to be produced by the encoder.
        spriteColumn:
          type: integer
          format: int32
          description: 'Sets the number of columns used in thumbnail sprite image.  The number of rows are automatically calculated and a VTT file is generated with the coordinate mappings for each thumbnail in the sprite. Note: this value should be a positive integer and a proper value is recommended so that the output image resolution will not go beyond JPEG maximum pixel resolution limit 65535x65535.'
      type: object
    JpgLayer:
      description: Describes the settings to produce a JPEG image from the input video.
      properties:
        width:
          type: string
          description: The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.
        height:
          type: string
          description: The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.
        label:
          type: string
          description: The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.
        quality:
          type: integer
          format: int32
          description: The compression quality of the JPEG output. Range is from 0-100 and the default is 70.
      type: object
    MultiBitrateFormat:
      x-ms-discriminator-value: '#Microsoft.Media.MultiBitrateFormat'
      description: Describes the properties for producing a collection of GOP aligned multi-bitrate files. The default behavior is to produce one output file for each video layer which is muxed together with all the audios. The exact output files produced can be controlled by specifying the outputFiles collection.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        filenamePattern:
          type: string
          description: 'The file naming pattern used for the creation of output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {AudioStream} - string "Audio" plus audio stream number(start from 1). {Bitrate} - The audio/video bitrate in kbps. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename.'
        outputFiles:
          type: array
          items:
            $ref: '#/components/schemas/OutputFile'
          x-ms-identifiers: []
          description: The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together .
      type: object
    OutputFile:
      properties:
        labels:
          type: array
          items:
            type: string
          description: The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented by a1.
      type: object
      required:
        - labels
      description: Represents an output file produced.
    Mp4Format:
      x-ms-discriminator-value: '#Microsoft.Media.Mp4Format'
      description: Describes the properties for an output ISO MP4 file.
      properties:
        outputFiles:
          type: array
          items:
            $ref: '#/components/schemas/OutputFile'
          x-ms-identifiers: []
          description: The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together .
      type: object
    PngImage:
      x-ms-discriminator-value: '#Microsoft.Media.PngImage'
      description: Describes the properties for producing a series of PNG images from the input video.
      properties:
        start:
          type: string
          description: The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro {Best}.
        step:
          type: string
          description: 'The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time.'
        range:
          type: string
          description: The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream.
        layers:
          type: array
          items:
            $ref: '#/components/schemas/PngLayer'
          x-ms-identifiers: []
          description: A collection of output PNG image layers to be produced by the encoder.
      type: object
    PngLayer:
      description: Describes the settings to produce a PNG image from the input video.
      properties:
        width:
          type: string
          description: The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.
        height:
          type: string
          description: The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.
        label:
          type: string
          description: The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.
      type: object
    BuiltInStandardEncoderPreset:
      x-ms-discriminator-value: '#Microsoft.Media.BuiltInStandardEncoderPreset'
      required:
        - presetName
      description: Describes a built-in preset for encoding the input video with the Standard Encoder.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        configurations:
          $ref: '#/components/schemas/PresetConfigurations'
          description: Optional configuration settings for encoder. Configurations is only supported for ContentAwareEncoding and H265ContentAwareEncoding BuiltInStandardEncoderPreset.
        presetName:
          type: string
          enum:
            - H264SingleBitrateSD
            - H264SingleBitrate720p
            - H264SingleBitrate1080p
            - AdaptiveStreaming
            - AACGoodQualityAudio
            - DDGoodQualityAudio
            - ContentAwareEncodingExperimental
            - ContentAwareEncoding
            - CopyAllBitrateNonInterleaved
            - H264MultipleBitrate1080p
            - H264MultipleBitrate720p
            - H264MultipleBitrateSD
            - H265ContentAwareEncoding
            - H265AdaptiveStreaming
            - H265SingleBitrate720p
            - H265SingleBitrate1080p
            - H265SingleBitrate4K
          x-ms-enum:
            name: EncoderNamedPreset
            values:
              - value: H264SingleBitrateSD
                description: Produces an MP4 file where the video is encoded with H.264 codec at 2200 kbps and a picture height of 480 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps.
              - value: H264SingleBitrate720p
                description: Produces an MP4 file where the video is encoded with H.264 codec at 4500 kbps and a picture height of 720 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps.
              - value: H264SingleBitrate1080p
                description: Produces an MP4 file where the video is encoded with H.264 codec at 6750 kbps and a picture height of 1080 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps.
              - value: AdaptiveStreaming
                description: Produces a set of GOP aligned MP4 files with H.264 video and stereo AAC audio. Auto-generates a bitrate ladder based on the input resolution, bitrate and frame rate. The auto-generated preset will never exceed the input resolution. For example, if the input is 720p, output will remain 720p at best.
              - value: AACGoodQualityAudio
                description: Produces a single MP4 file containing only AAC stereo audio encoded at 192 kbps.
              - value: DDGoodQualityAudio
                description: Produces a single MP4 file containing only DD(Digital Dolby) stereo audio encoded at 192 kbps.
              - value: ContentAwareEncodingExperimental
                description: Exposes an experimental preset for content-aware encoding. Given any input content, the service attempts to automatically determine the optimal number of layers, appropriate bitrate and resolution settings for delivery by adaptive streaming. The underlying algorithms will continue to evolve over time. The output will contain MP4 files with video and audio interleaved.
              - value: ContentAwareEncoding
                description: Produces a set of GOP-aligned MP4s by using content-aware encoding. Given any input content, the service performs an initial lightweight analysis of the input content, and uses the results to determine the optimal number of layers, appropriate bitrate and resolution settings for delivery by adaptive streaming. This preset is particularly effective for low and medium complexity videos, where the output files will be at lower bitrates but at a quality that still delivers a good experience to viewers. The output will contain MP4 files with video and audio interleaved.
              - value: CopyAllBitrateNonInterleaved
                description: Copy all video and audio streams from the input asset as non-interleaved video and audio output files. This preset can be used to clip an existing asset or convert a group of key frame (GOP) aligned MP4 files as an asset that can be streamed.
              - value: H264MultipleBitrate1080p
                description: Produces a set of 8 GOP-aligned MP4 files, ranging from 6000 kbps to 400 kbps, and stereo AAC audio. Resolution starts at 1080p and goes down to 180p.
              - value: H264MultipleBitrate720p
                description: Produces a set of 6 GOP-aligned MP4 files, ranging from 3400 kbps to 400 kbps, and stereo AAC audio. Resolution starts at 720p and goes down to 180p.
              - value: H264MultipleBitrateSD
                description: Produces a set of 5 GOP-aligned MP4 files, ranging from 1900kbps to 400 kbps, and stereo AAC audio. Resolution starts at 480p and goes down to 240p.
              - value: H265ContentAwareEncoding
                description: Produces a set of GOP-aligned MP4s by using content-aware encoding. Given any input content, the service performs an initial lightweight analysis of the input content, and uses the results to determine the optimal number of layers, appropriate bitrate and resolution settings for delivery by adaptive streaming. This preset is particularly effective for low and medium complexity videos, where the output files will be at lower bitrates but at a quality that still delivers a good experience to viewers. The output will contain MP4 files with video and audio interleaved.
              - value: H265AdaptiveStreaming
                description: Produces a set of GOP aligned MP4 files with H.265 video and stereo AAC audio. Auto-generates a bitrate ladder based on the input resolution, bitrate and frame rate. The auto-generated preset will never exceed the input resolution. For example, if the input is 720p, output will remain 720p at best.
              - value: H265SingleBitrate720p
                description: Produces an MP4 file where the video is encoded with H.265 codec at 1800 kbps and a picture height of 720 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps.
              - value: H265SingleBitrate1080p
                description: Produces an MP4 file where the video is encoded with H.265 codec at 3500 kbps and a picture height of 1080 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps.
              - description: Produces an MP4 file where the video is encoded with H.265 codec at 9500 kbps and a picture height of 2160 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps.
                value: H265SingleBitrate4K
            modelAsString: true
          description: The built-in preset to be used for encoding videos.
      type: object
    StandardEncoderPreset:
      x-ms-discriminator-value: '#Microsoft.Media.StandardEncoderPreset'
      required:
        - codecs
        - formats
      description: Describes all the settings to be used when encoding the input video with the Standard Encoder.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        experimentalOptions:
          additionalProperties:
            type: string
          description: Dictionary containing key value pairs for parameters not exposed in the preset itself
          type: object
        filters:
          $ref: '#/components/schemas/Filters'
          description: One or more filtering operations that are applied to the input media before encoding.
        codecs:
          type: array
          items:
            $ref: '#/components/schemas/Codec'
          x-ms-identifiers: []
          description: The list of codecs to be used when encoding the input video.
        formats:
          type: array
          items:
            $ref: '#/components/schemas/Format'
          x-ms-identifiers: []
          description: The list of outputs to be produced by the encoder.
      type: object
    VideoAnalyzerPreset:
      x-ms-discriminator-value: '#Microsoft.Media.VideoAnalyzerPreset'
      description: A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file.
      properties:
        audioLanguage:
          type: string
          description: 'The language for the audio payload in the input using the BCP-47 format of ''language tag-region'' (e.g: ''en-US'').  If you know the language of your content, it is recommended that you specify it. The language must be specified explicitly for AudioAnalysisMode::Basic, since automatic language detection is not included in basic mode. If the language isn''t specified or set to null, automatic language detection will choose the first language detected and process with the selected language for the duration of the file. It does not currently support dynamically switching between languages after the first language is detected. The automatic detection works best with audio recordings with clearly discernable speech. If automatic detection fails to find the language, transcription would fallback to ''en-US''." The list of supported languages is available here: https://go.microsoft.com/fwlink/?linkid=2109463'
        mode:
          type: string
          enum:
            - Standard
            - Basic
          x-ms-enum:
            name: AudioAnalysisMode
            values:
              - value: Standard
                description: Performs all operations included in the Basic mode, additionally performing language detection and speaker diarization.
              - value: Basic
                description: This mode performs speech-to-text transcription and generation of a VTT subtitle/caption file. The output of this mode includes an Insights JSON file including only the keywords, transcription,and timing information. Automatic language detection and speaker diarization are not included in this mode.
            modelAsString: true
          description: Determines the set of audio analysis operations to be performed. If unspecified, the Standard AudioAnalysisMode would be chosen.
        experimentalOptions:
          type: object
          additionalProperties:
            type: string
          description: Dictionary containing key value pairs for parameters not exposed in the preset itself
        insightsToExtract:
          type: string
          enum:
            - AudioInsightsOnly
            - VideoInsightsOnly
            - AllInsights
          x-ms-enum:
            name: InsightsType
            values:
              - value: AudioInsightsOnly
                description: Generate audio only insights. Ignore video even if present. Fails if no audio is present.
              - value: VideoInsightsOnly
                description: Generate video only insights. Ignore audio if present. Fails if no video is present.
              - value: AllInsights
                description: Generate both audio and video insights. Fails if either audio or video Insights fail.
            modelAsString: true
          description: Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out.
      type: object
    TransportStreamFormat:
      x-ms-discriminator-value: '#Microsoft.Media.TransportStreamFormat'
      description: Describes the properties for generating an MPEG-2 Transport Stream (ISO/IEC 13818-1) output video file(s).
      properties:
        outputFiles:
          type: array
          items:
            $ref: '#/components/schemas/OutputFile'
          x-ms-identifiers: []
          description: The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together .
      type: object
    VideoOverlay:
      x-ms-discriminator-value: '#Microsoft.Media.VideoOverlay'
      description: Describes the properties of a video overlay.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        inputLabel:
          type: string
          description: The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats.
        start:
          type: string
          format: duration
          description: The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the beginning of the input video.
        end:
          type: string
          format: duration
          description: The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format. For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is greater than the input video duration, else the overlay will last as long as the overlay media duration.
        fadeInDuration:
          type: string
          format: duration
          description: The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S).
        fadeOutDuration:
          type: string
          format: duration
          description: The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S).
        audioGainLevel:
          type: number
          format: double
          description: The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.
        position:
          $ref: '#/components/schemas/Rectangle'
          description: The location in the input video where the overlay is applied.
        opacity:
          type: number
          format: double
          description: The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque.
        cropRectangle:
          $ref: '#/components/schemas/Rectangle'
          description: An optional rectangular window used to crop the overlay image or video.
      type: object
    VideoTrackDescriptor:
      x-ms-discriminator-value: '#Microsoft.Media.VideoTrackDescriptor'
      description: A TrackSelection to select video tracks.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
    SelectVideoTrackByAttribute:
      x-ms-discriminator-value: '#Microsoft.Media.SelectVideoTrackByAttribute'
      required:
        - attribute
        - filter
      description: Select video tracks from the input by specifying an attribute and an attribute filter.
      properties:
        attribute:
          type: string
          enum:
            - Bitrate
            - Language
          x-ms-enum:
            name: TrackAttribute
            values:
              - value: Bitrate
                description: The bitrate of the track.
              - value: Language
                description: The language of the track.
            modelAsString: true
          description: The TrackAttribute to filter the tracks by.
        filter:
          type: string
          enum:
            - All
            - Top
            - Bottom
            - ValueEquals
          x-ms-enum:
            name: AttributeFilter
            values:
              - value: All
                description: All tracks will be included.
              - value: Top
                description: The first track will be included when the attribute is sorted in descending order.  Generally used to select the largest bitrate.
              - value: Bottom
                description: The first track will be included when the attribute is sorted in ascending order.  Generally used to select the smallest bitrate.
              - value: ValueEquals
                description: Any tracks that have an attribute equal to the value given will be included.
            modelAsString: true
          description: The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
        filterValue:
          type: string
          description: 'The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property. For TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: ''1500000'').  The TrackAttribute.Language is not supported for video tracks.'
      type: object
    SelectVideoTrackById:
      x-ms-discriminator-value: '#Microsoft.Media.SelectVideoTrackById'
      required:
        - trackId
      description: Select video tracks from the input by specifying a track identifier.
      properties:
        trackId:
          type: integer
          format: int64
          description: Track identifier to select
      type: object
    TransformOutput:
      properties:
        onError:
          type: string
          enum:
            - StopProcessingJob
            - ContinueJob
          x-ms-enum:
            name: OnErrorType
            values:
              - value: StopProcessingJob
                description: Tells the service that if this TransformOutput fails, then any other incomplete TransformOutputs can be stopped.
              - value: ContinueJob
                description: Tells the service that if this TransformOutput fails, then allow any other TransformOutput to continue.
            modelAsString: true
          description: A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with 'ContinueJob'. The default is 'StopProcessingJob'.
        relativePriority:
          type: string
          enum:
            - Low
            - Normal
            - High
          x-ms-enum:
            name: Priority
            values:
              - value: Low
                description: Used for TransformOutputs that can be generated after Normal and High priority TransformOutputs.
              - value: Normal
                description: Used for TransformOutputs that can be generated at Normal priority.
              - value: High
                description: Used for TransformOutputs that should take precedence over others.
            modelAsString: true
          description: Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.
        preset:
          $ref: '#/components/schemas/Preset'
          description: Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.
      type: object
      required:
        - preset
      description: Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output.
    TransformProperties:
      properties:
        created:
          type: string
          format: date-time
          description: The UTC date and time when the Transform was created, in 'YYYY-MM-DDThh:mm:ssZ' format.
          readOnly: true
          nullable: false
        description:
          type: string
          description: An optional verbose description of the Transform.
        lastModified:
          type: string
          format: date-time
          description: The UTC date and time when the Transform was last updated, in 'YYYY-MM-DDThh:mm:ssZ' format.
          readOnly: true
          nullable: false
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/TransformOutput'
          x-ms-identifiers: []
          description: An array of one or more TransformOutputs that the Transform should generate.
      type: object
      required:
        - outputs
      description: A Transform.
    Transform:
      description: A Transform encapsulates the rules or instructions for generating desired outputs from input media, such as by transcoding or by extracting insights. After the Transform is created, it can be applied to input media by creating Jobs.
      properties:
        properties:
          $ref: '#/components/schemas/TransformProperties'
          description: The resource properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    JobInput:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base class for inputs to a Job.
    JobInputClip:
      x-ms-discriminator-value: '#Microsoft.Media.JobInputClip'
      description: Represents input files for a Job.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        files:
          type: array
          items:
            type: string
          description: List of files. Required for JobInputHttp. Maximum of 4000 characters each. Query strings will not be returned in service responses to prevent sensitive data exposure.
        start:
          $ref: '#/components/schemas/ClipTime'
          description: Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media.
        end:
          $ref: '#/components/schemas/ClipTime'
          description: Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media.
        label:
          type: string
          description: A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.
        inputDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/InputDefinition'
          x-ms-identifiers: []
          description: Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata.
      type: object
    ClipTime:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base class for specifying a clip time. Use sub classes of this class to specify the time position in the media.
    AbsoluteClipTime:
      x-ms-discriminator-value: '#Microsoft.Media.AbsoluteClipTime'
      required:
        - time
      description: Specifies the clip time as an absolute time position in the media file.  The absolute time can point to a different position depending on whether the media file starts from a timestamp of zero or not.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        time:
          type: string
          format: duration
          description: The time position on the timeline of the input media. It is usually specified as an ISO8601 period. e.g PT30S for 30 seconds.
      type: object
    UtcClipTime:
      x-ms-discriminator-value: '#Microsoft.Media.UtcClipTime'
      required:
        - time
      description: Specifies the clip time as a Utc time position in the media file.  The Utc time can point to a different position depending on whether the media file starts from a timestamp of zero or not.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        time:
          type: string
          format: date-time
          description: The time position on the timeline of the input media based on Utc time.
      type: object
    JobInputs:
      x-ms-discriminator-value: '#Microsoft.Media.JobInputs'
      description: Describes a list of inputs to a Job.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/JobInput'
          x-ms-identifiers: []
          description: List of inputs to a Job.
      type: object
    JobInputAsset:
      x-ms-discriminator-value: '#Microsoft.Media.JobInputAsset'
      required:
        - assetName
      description: Represents an Asset for input into a Job.
      properties:
        files:
          type: array
          items:
            type: string
          description: List of files. Required for JobInputHttp. Maximum of 4000 characters each. Query strings will not be returned in service responses to prevent sensitive data exposure.
        start:
          $ref: '#/components/schemas/ClipTime'
          description: Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media.
        end:
          $ref: '#/components/schemas/ClipTime'
          description: Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media.
        label:
          type: string
          description: A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.
        inputDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/InputDefinition'
          x-ms-identifiers: []
          description: Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata.
        assetName:
          type: string
          description: The name of the input Asset.
      type: object
    JobInputHttp:
      x-ms-discriminator-value: '#Microsoft.Media.JobInputHttp'
      description: Represents HTTPS job input.
      properties:
        files:
          type: array
          items:
            type: string
          description: List of files. Required for JobInputHttp. Maximum of 4000 characters each. Query strings will not be returned in service responses to prevent sensitive data exposure.
        start:
          $ref: '#/components/schemas/ClipTime'
          description: Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media.
        end:
          $ref: '#/components/schemas/ClipTime'
          description: Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media.
        label:
          type: string
          description: A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.
        inputDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/InputDefinition'
          x-ms-identifiers: []
          description: Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata.
        baseUri:
          type: string
          description: Base URI for HTTPS job input. It will be concatenated with provided file names. If no base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000 characters. The query strings will not be returned in service responses to prevent sensitive data exposure.
      type: object
    JobOutput:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        error:
          $ref: '#/components/schemas/JobError'
          description: If the JobOutput is in the Error state, it contains the details of the error.
          readOnly: true
        presetOverride:
          $ref: '#/components/schemas/Preset'
          description: A preset used to override the preset in the corresponding transform output.
        state:
          type: string
          enum:
            - Canceled
            - Canceling
            - Error
            - Finished
            - Processing
            - Queued
            - Scheduled
          x-ms-enum:
            name: JobState
            values:
              - value: Canceled
                description: The job was canceled. This is a final state for the job.
              - value: Canceling
                description: The job is in the process of being canceled. This is a transient state for the job.
              - value: Error
                description: The job has encountered an error. This is a final state for the job.
              - value: Finished
                description: The job is finished. This is a final state for the job.
              - value: Processing
                description: The job is processing. This is a transient state for the job.
              - value: Queued
                description: The job is in a queued state, waiting for resources to become available. This is a transient state.
              - value: Scheduled
                description: The job is being scheduled to run on an available resource. This is a transient state, between queued and processing states.
            modelAsString: true
          description: Describes the state of the JobOutput.
          readOnly: true
          nullable: false
        progress:
          type: integer
          format: int32
          description: If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
          readOnly: true
          nullable: false
        label:
          type: string
          description: A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
        startTime:
          type: string
          format: date-time
          description: The UTC date and time at which this Job Output began processing.
          readOnly: true
          nullable: true
        endTime:
          type: string
          format: date-time
          description: The UTC date and time at which this Job Output finished processing.
          readOnly: true
          nullable: true
      type: object
      required:
        - '@odata.type'
      description: Describes all the properties of a JobOutput.
    JobError:
      properties:
        code:
          type: string
          enum:
            - ServiceError
            - ServiceTransientError
            - DownloadNotAccessible
            - DownloadTransientError
            - UploadNotAccessible
            - UploadTransientError
            - ConfigurationUnsupported
            - ContentMalformed
            - ContentUnsupported
            - IdentityUnsupported
          x-ms-enum:
            name: JobErrorCode
            values:
              - value: ServiceError
                description: Fatal service error, please contact support.
              - value: ServiceTransientError
                description: Transient error, please retry, if retry is unsuccessful, please contact support.
              - value: DownloadNotAccessible
                description: While trying to download the input files, the files were not accessible, please check the availability of the source.
              - value: DownloadTransientError
                description: While trying to download the input files, there was an issue during transfer (storage service, network errors), see details and check your source.
              - value: UploadNotAccessible
                description: While trying to upload the output files, the destination was not reachable, please check the availability of the destination.
              - value: UploadTransientError
                description: While trying to upload the output files, there was an issue during transfer (storage service, network errors), see details and check your destination.
              - value: ConfigurationUnsupported
                description: There was a problem with the combination of input files and the configuration settings applied, fix the configuration settings and retry with the same input, or change input to match the configuration.
              - value: ContentMalformed
                description: 'There was a problem with the input content (for example: zero byte files, or corrupt/non-decodable files), check the input files.'
              - value: ContentUnsupported
                description: There was a problem with the format of the input (not valid media file, or an unsupported file/codec), check the validity of the input files.
              - description: There was an error verifying to the account identity. Check and fix the identity configurations and retry. If unsuccessful, please contact support.
                value: IdentityUnsupported
            modelAsString: true
          description: Error code describing the error.
          readOnly: true
          nullable: false
        message:
          type: string
          description: A human-readable language-dependent representation of the error.
          readOnly: true
        category:
          type: string
          enum:
            - Service
            - Download
            - Upload
            - Configuration
            - Content
            - Account
          x-ms-enum:
            name: JobErrorCategory
            values:
              - value: Service
                description: The error is service related.
              - value: Download
                description: The error is download related.
              - value: Upload
                description: The error is upload related.
              - value: Configuration
                description: The error is configuration related.
              - value: Content
                description: The error is related to data in the input files.
              - description: The error is related to account information.
                value: Account
            modelAsString: true
          description: Helps with categorization of errors.
          readOnly: true
          nullable: false
        retry:
          type: string
          enum:
            - DoNotRetry
            - MayRetry
          x-ms-enum:
            name: JobRetry
            values:
              - value: DoNotRetry
                description: Issue needs to be investigated and then the job resubmitted with corrections or retried once the underlying issue has been corrected.
              - value: MayRetry
                description: Issue may be resolved after waiting for a period of time and resubmitting the same Job.
            modelAsString: true
          description: Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.
          readOnly: true
          nullable: false
        details:
          type: array
          items:
            $ref: '#/components/schemas/JobErrorDetail'
          x-ms-identifiers:
            - code
          description: An array of details about specific errors that led to this reported error.
          readOnly: true
      type: object
      description: Details of JobOutput errors.
    JobOutputAsset:
      x-ms-discriminator-value: '#Microsoft.Media.JobOutputAsset'
      required:
        - assetName
      description: Represents an Asset used as a JobOutput.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        error:
          $ref: '#/components/schemas/JobError'
          description: If the JobOutput is in the Error state, it contains the details of the error.
          readOnly: true
        presetOverride:
          $ref: '#/components/schemas/Preset'
          description: A preset used to override the preset in the corresponding transform output.
        state:
          type: string
          enum:
            - Canceled
            - Canceling
            - Error
            - Finished
            - Processing
            - Queued
            - Scheduled
          x-ms-enum:
            name: JobState
            values:
              - value: Canceled
                description: The job was canceled. This is a final state for the job.
              - value: Canceling
                description: The job is in the process of being canceled. This is a transient state for the job.
              - value: Error
                description: The job has encountered an error. This is a final state for the job.
              - value: Finished
                description: The job is finished. This is a final state for the job.
              - value: Processing
                description: The job is processing. This is a transient state for the job.
              - value: Queued
                description: The job is in a queued state, waiting for resources to become available. This is a transient state.
              - value: Scheduled
                description: The job is being scheduled to run on an available resource. This is a transient state, between queued and processing states.
            modelAsString: true
          description: Describes the state of the JobOutput.
          readOnly: true
          nullable: false
        progress:
          type: integer
          format: int32
          description: If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
          readOnly: true
          nullable: false
        label:
          type: string
          description: A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
        startTime:
          type: string
          format: date-time
          description: The UTC date and time at which this Job Output began processing.
          readOnly: true
          nullable: true
        endTime:
          type: string
          format: date-time
          description: The UTC date and time at which this Job Output finished processing.
          readOnly: true
          nullable: true
        assetName:
          type: string
          description: The name of the output Asset.
      type: object
    JobErrorDetail:
      properties:
        code:
          type: string
          description: Code describing the error detail.
          readOnly: true
        message:
          type: string
          description: A human-readable representation of the error.
          readOnly: true
      type: object
      description: Details of JobOutput errors.
    JobProperties:
      properties:
        created:
          type: string
          format: date-time
          description: The UTC date and time when the customer has created the Job, in 'YYYY-MM-DDThh:mm:ssZ' format.
          readOnly: true
          nullable: false
        state:
          type: string
          enum:
            - Canceled
            - Canceling
            - Error
            - Finished
            - Processing
            - Queued
            - Scheduled
          x-ms-enum:
            name: JobState
            values:
              - value: Canceled
                description: The job was canceled. This is a final state for the job.
              - value: Canceling
                description: The job is in the process of being canceled. This is a transient state for the job.
              - value: Error
                description: The job has encountered an error. This is a final state for the job.
              - value: Finished
                description: The job is finished. This is a final state for the job.
              - value: Processing
                description: The job is processing. This is a transient state for the job.
              - value: Queued
                description: The job is in a queued state, waiting for resources to become available. This is a transient state.
              - value: Scheduled
                description: The job is being scheduled to run on an available resource. This is a transient state, between queued and processing states.
            modelAsString: true
          description: The current state of the job.
          readOnly: true
          nullable: false
        description:
          type: string
          description: Optional customer supplied description of the Job.
        input:
          $ref: '#/components/schemas/JobInput'
          description: The inputs for the Job.
        lastModified:
          type: string
          format: date-time
          description: The UTC date and time when the customer has last updated the Job, in 'YYYY-MM-DDThh:mm:ssZ' format.
          readOnly: true
          nullable: false
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/JobOutput'
          x-ms-identifiers: []
          description: The outputs for the Job.
        priority:
          type: string
          enum:
            - Low
            - Normal
            - High
          x-ms-enum:
            name: Priority
            values:
              - value: Low
                description: Used for TransformOutputs that can be generated after Normal and High priority TransformOutputs.
              - value: Normal
                description: Used for TransformOutputs that can be generated at Normal priority.
              - value: High
                description: Used for TransformOutputs that should take precedence over others.
            modelAsString: true
          description: Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.
        correlationData:
          type: object
          additionalProperties:
            type: string
          description: Customer provided key, value pairs that will be returned in Job and JobOutput state events.
        startTime:
          type: string
          format: date-time
          description: The UTC date and time at which this Job began processing.
          readOnly: true
          nullable: true
        endTime:
          type: string
          format: date-time
          description: The UTC date and time at which this Job finished processing.
          readOnly: true
          nullable: true
      type: object
      required:
        - input
        - outputs
      description: Properties of the Job.
    JobInputSequence:
      x-ms-discriminator-value: '#Microsoft.Media.JobInputSequence'
      description: A Sequence contains an ordered list of Clips where each clip is a JobInput.  The Sequence will be treated as a single input.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/JobInputClip'
          x-ms-identifiers: []
          description: JobInputs that make up the timeline.
      type: object
    Job:
      description: A Job resource type. The progress and state can be obtained by polling a Job or subscribing to events using EventGrid.
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The resource properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    PresetConfigurations:
      description: An object of optional configuration settings for encoder.
      properties:
        complexity:
          description: 'Allows you to configure the encoder settings to control the balance between speed and quality. Example: set Complexity as Speed for faster encoding but less compression efficiency.'
          enum:
            - Speed
            - Balanced
            - Quality
          type: string
          x-ms-enum:
            modelAsString: true
            name: Complexity
            values:
              - description: Configures the encoder to use settings optimized for faster encoding. Quality is sacrificed to decrease encoding time.
                value: Speed
              - description: Configures the encoder to use settings that achieve a balance between speed and quality.
                value: Balanced
              - description: Configures the encoder to use settings optimized to produce higher quality output at the expense of slower overall encode time.
                value: Quality
        interleaveOutput:
          description: 'Sets the interleave mode of the output to control how audio and video are stored in the container format. Example: set InterleavedOutput as NonInterleavedOutput to produce audio-only and video-only outputs in separate MP4 files.'
          enum:
            - NonInterleavedOutput
            - InterleavedOutput
          type: string
          x-ms-enum:
            modelAsString: true
            name: InterleaveOutput
            values:
              - description: The output is video-only or audio-only.
                value: NonInterleavedOutput
              - description: The output includes both audio and video.
                value: InterleavedOutput
        keyFrameIntervalInSeconds:
          description: 'The key frame interval in seconds. Example: set KeyFrameIntervalInSeconds as 2 to reduce the playback buffering for some players.'
          format: float
          type: number
        maxBitrateBps:
          description: 'The maximum bitrate in bits per second (threshold for the top video layer). Example: set MaxBitrateBps as 6000000 to avoid producing very high bitrate outputs for contents with high complexity.'
          format: int32
          type: integer
        maxHeight:
          description: 'The maximum height of output video layers. Example: set MaxHeight as 720 to produce output layers up to 720P even if the input is 4K.'
          format: int32
          type: integer
        maxLayers:
          description: 'The maximum number of output video layers. Example: set MaxLayers as 4 to make sure at most 4 output layers are produced to control the overall cost of the encoding job.'
          format: int32
          type: integer
        minBitrateBps:
          description: 'The minimum bitrate in bits per second (threshold for the bottom video layer). Example: set MinBitrateBps as 200000 to have a bottom layer that covers users with low network bandwidth.'
          format: int32
          type: integer
        minHeight:
          description: 'The minimum height of output video layers. Example: set MinHeight as 360 to avoid output layers of smaller resolutions like 180P.'
          format: int32
          type: integer
      type: object
    TransformCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Transform'
          description: A collection of Transform items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of Transform items.
    JobCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Job'
          description: A collection of Job items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of Job items.
    TrackPropertyCondition:
      properties:
        property:
          type: string
          enum:
            - Unknown
            - FourCC
          x-ms-enum:
            name: TrackPropertyType
            values:
              - value: Unknown
                description: Unknown track property
              - value: FourCC
                description: Track FourCC
            modelAsString: true
          description: Track property type
        operation:
          type: string
          enum:
            - Unknown
            - Equal
          x-ms-enum:
            name: TrackPropertyCompareOperation
            values:
              - value: Unknown
                description: Unknown track property compare operation
              - value: Equal
                description: Equal operation
            modelAsString: true
          description: Track property condition operation
        value:
          type: string
          description: Track property value
      type: object
      required:
        - property
        - operation
      description: Class to specify one track property condition
    TrackSelection:
      properties:
        trackSelections:
          type: array
          items:
            $ref: '#/components/schemas/TrackPropertyCondition'
          x-ms-identifiers: []
          description: TrackSelections is a track property condition list which can specify track(s)
      type: object
      description: Class to select a track
    DefaultKey:
      properties:
        label:
          type: string
          description: Label can be used to specify Content Key when creating a Streaming Locator
        policyName:
          type: string
          description: Policy used by Default Key
      type: object
      description: Class to specify properties of default content key for each encryption scheme
    StreamingPolicyContentKey:
      properties:
        label:
          type: string
          description: Label can be used to specify Content Key when creating a Streaming Locator
        policyName:
          type: string
          description: Policy used by Content Key
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackSelection'
          x-ms-identifiers: []
          description: Tracks which use this content key
      type: object
      description: Class to specify properties of content key
    StreamingPolicyContentKeys:
      properties:
        defaultKey:
          $ref: '#/components/schemas/DefaultKey'
          description: Default content key for an encryption scheme
        keyToTrackMappings:
          type: array
          items:
            $ref: '#/components/schemas/StreamingPolicyContentKey'
          x-ms-identifiers: []
          description: Representing tracks needs separate content key
      type: object
      description: Class to specify properties of all content keys in Streaming Policy
    StreamingPolicyPlayReadyConfiguration:
      properties:
        customLicenseAcquisitionUrlTemplate:
          type: string
          description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
        playReadyCustomAttributes:
          type: string
          description: Custom attributes for PlayReady
      type: object
      description: Class to specify configurations of PlayReady in Streaming Policy
    StreamingPolicyWidevineConfiguration:
      properties:
        customLicenseAcquisitionUrlTemplate:
          type: string
          description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
      type: object
      description: Class to specify configurations of Widevine in Streaming Policy
    StreamingPolicyFairPlayConfiguration:
      properties:
        customLicenseAcquisitionUrlTemplate:
          type: string
          description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
        allowPersistentLicense:
          type: boolean
          description: All license to be persistent or not
      type: object
      required:
        - allowPersistentLicense
      description: Class to specify configurations of FairPlay in Streaming Policy
    CbcsDrmConfiguration:
      properties:
        fairPlay:
          $ref: '#/components/schemas/StreamingPolicyFairPlayConfiguration'
          description: FairPlay configurations
        playReady:
          $ref: '#/components/schemas/StreamingPolicyPlayReadyConfiguration'
          description: PlayReady configurations
        widevine:
          $ref: '#/components/schemas/StreamingPolicyWidevineConfiguration'
          description: Widevine configurations
      type: object
      description: Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy
    CencDrmConfiguration:
      properties:
        playReady:
          $ref: '#/components/schemas/StreamingPolicyPlayReadyConfiguration'
          description: PlayReady configurations
        widevine:
          $ref: '#/components/schemas/StreamingPolicyWidevineConfiguration'
          description: Widevine configurations
      type: object
      description: Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy
    ClearKeyEncryptionConfiguration:
      properties:
        customKeysAcquisitionUrlTemplate:
          type: string
          description: Template for the URL of the custom service delivering content keys to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token value is {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId.
      type: object
      description: Class to specify ClearKey configuration of common encryption schemes in Streaming Policy
    EnabledProtocols:
      properties:
        download:
          type: boolean
          description: Enable Download protocol or not
        dash:
          type: boolean
          description: Enable DASH protocol or not
        hls:
          type: boolean
          description: Enable HLS protocol or not
        smoothStreaming:
          type: boolean
          description: Enable SmoothStreaming protocol or not
      type: object
      required:
        - download
        - dash
        - hls
        - smoothStreaming
      description: Class to specify which protocols are enabled
    NoEncryption:
      properties:
        enabledProtocols:
          $ref: '#/components/schemas/EnabledProtocols'
          description: Representing supported protocols
      type: object
      description: Class for NoEncryption scheme
    EnvelopeEncryption:
      properties:
        enabledProtocols:
          $ref: '#/components/schemas/EnabledProtocols'
          description: Representing supported protocols
        clearTracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackSelection'
          x-ms-identifiers: []
          description: Representing which tracks should not be encrypted
        contentKeys:
          $ref: '#/components/schemas/StreamingPolicyContentKeys'
          description: Representing default content key for each encryption scheme and separate content keys for specific tracks
        customKeyAcquisitionUrlTemplate:
          type: string
          description: Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
      type: object
      description: Class for EnvelopeEncryption encryption scheme
    CommonEncryptionCenc:
      properties:
        enabledProtocols:
          $ref: '#/components/schemas/EnabledProtocols'
          description: Representing supported protocols
        clearTracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackSelection'
          x-ms-identifiers: []
          description: Representing which tracks should not be encrypted
        contentKeys:
          $ref: '#/components/schemas/StreamingPolicyContentKeys'
          description: Representing default content key for each encryption scheme and separate content keys for specific tracks
        drm:
          $ref: '#/components/schemas/CencDrmConfiguration'
          description: Configuration of DRMs for CommonEncryptionCenc encryption scheme
        clearKeyEncryptionConfiguration:
          $ref: '#/components/schemas/ClearKeyEncryptionConfiguration'
          description: Optional configuration supporting ClearKey in CommonEncryptionCenc encryption scheme.
      type: object
      description: Class for envelope encryption scheme
    CommonEncryptionCbcs:
      properties:
        enabledProtocols:
          $ref: '#/components/schemas/EnabledProtocols'
          description: Representing supported protocols
        clearTracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackSelection'
          x-ms-identifiers: []
          description: Representing which tracks should not be encrypted
        contentKeys:
          $ref: '#/components/schemas/StreamingPolicyContentKeys'
          description: Representing default content key for each encryption scheme and separate content keys for specific tracks
        drm:
          $ref: '#/components/schemas/CbcsDrmConfiguration'
          description: Configuration of DRMs for current encryption scheme
        clearKeyEncryptionConfiguration:
          $ref: '#/components/schemas/ClearKeyEncryptionConfiguration'
          description: Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme.
      type: object
      description: Class for CommonEncryptionCbcs encryption scheme
    StreamingPolicyProperties:
      properties:
        created:
          type: string
          format: date-time
          description: Creation time of Streaming Policy
          readOnly: true
          nullable: false
        defaultContentKeyPolicyName:
          type: string
          description: Default ContentKey used by current Streaming Policy
        envelopeEncryption:
          $ref: '#/components/schemas/EnvelopeEncryption'
          description: Configuration of EnvelopeEncryption
        commonEncryptionCenc:
          $ref: '#/components/schemas/CommonEncryptionCenc'
          description: Configuration of CommonEncryptionCenc
        commonEncryptionCbcs:
          $ref: '#/components/schemas/CommonEncryptionCbcs'
          description: Configuration of CommonEncryptionCbcs
        noEncryption:
          $ref: '#/components/schemas/NoEncryption'
          description: Configurations of NoEncryption
      type: object
      description: Class to specify properties of Streaming Policy
    StreamingPolicy:
      description: A Streaming Policy resource
      properties:
        properties:
          $ref: '#/components/schemas/StreamingPolicyProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    StreamingLocatorContentKey:
      properties:
        id:
          type: string
          format: uuid
          description: ID of Content Key
        type:
          type: string
          enum:
            - CommonEncryptionCenc
            - CommonEncryptionCbcs
            - EnvelopeEncryption
          x-ms-enum:
            name: StreamingLocatorContentKeyType
            values:
              - value: CommonEncryptionCenc
                description: Common Encryption using CENC
              - value: CommonEncryptionCbcs
                description: Common Encryption using CBCS
              - value: EnvelopeEncryption
                description: Envelope Encryption
            modelAsString: true
          description: Encryption type of Content Key
          readOnly: true
          nullable: false
        labelReferenceInStreamingPolicy:
          type: string
          description: Label of Content Key as specified in the Streaming Policy
        value:
          type: string
          description: Value of Content Key
        policyName:
          type: string
          description: ContentKeyPolicy used by Content Key
          readOnly: true
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackSelection'
          x-ms-identifiers: []
          description: Tracks which use this Content Key
          readOnly: true
      type: object
      required:
        - id
      description: Class for content key in Streaming Locator
    StreamingPath:
      properties:
        streamingProtocol:
          type: string
          enum:
            - Hls
            - Dash
            - SmoothStreaming
            - Download
          x-ms-enum:
            name: StreamingPolicyStreamingProtocol
            values:
              - value: Hls
                description: HLS protocol
              - value: Dash
                description: DASH protocol
              - value: SmoothStreaming
                description: SmoothStreaming protocol
              - value: Download
                description: Download protocol
            modelAsString: true
          description: Streaming protocol
        encryptionScheme:
          type: string
          enum:
            - NoEncryption
            - EnvelopeEncryption
            - CommonEncryptionCenc
            - CommonEncryptionCbcs
          x-ms-enum:
            name: EncryptionScheme
            values:
              - value: NoEncryption
                description: NoEncryption scheme
              - value: EnvelopeEncryption
                description: EnvelopeEncryption scheme
              - value: CommonEncryptionCenc
                description: CommonEncryptionCenc scheme
              - value: CommonEncryptionCbcs
                description: CommonEncryptionCbcs scheme
            modelAsString: true
          description: Encryption scheme
        paths:
          type: array
          items:
            type: string
          description: Streaming paths for each protocol and encryptionScheme pair
      type: object
      required:
        - streamingProtocol
        - encryptionScheme
      description: Class of paths for streaming
    StreamingLocatorProperties:
      properties:
        assetName:
          type: string
          description: Asset Name
        created:
          type: string
          format: date-time
          description: The creation time of the Streaming Locator.
          readOnly: true
          nullable: false
        startTime:
          type: string
          format: date-time
          description: The start time of the Streaming Locator.
        endTime:
          type: string
          format: date-time
          description: The end time of the Streaming Locator.
        streamingLocatorId:
          type: string
          format: uuid
          description: The StreamingLocatorId of the Streaming Locator.
        streamingPolicyName:
          type: string
          description: 'Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: ''Predefined_DownloadOnly'', ''Predefined_ClearStreamingOnly'', ''Predefined_DownloadAndClearStreaming'', ''Predefined_ClearKey'', ''Predefined_MultiDrmCencStreaming'' and ''Predefined_MultiDrmStreaming'''
        defaultContentKeyPolicyName:
          type: string
          description: Name of the default ContentKeyPolicy used by this Streaming Locator.
        contentKeys:
          type: array
          items:
            $ref: '#/components/schemas/StreamingLocatorContentKey'
          description: The ContentKeys used by this Streaming Locator.
        alternativeMediaId:
          type: string
          description: Alternative Media ID of this Streaming Locator
        filters:
          type: array
          items:
            type: string
          description: A list of asset or account filters which apply to this streaming locator
      type: object
      required:
        - assetName
        - streamingPolicyName
      description: Properties of the Streaming Locator.
    ListContentKeysResponse:
      properties:
        contentKeys:
          type: array
          items:
            $ref: '#/components/schemas/StreamingLocatorContentKey'
          description: ContentKeys used by current Streaming Locator
      type: object
      description: Class of response for listContentKeys action
    ListPathsResponse:
      properties:
        streamingPaths:
          type: array
          items:
            $ref: '#/components/schemas/StreamingPath'
          x-ms-identifiers: []
          description: Streaming Paths supported by current Streaming Locator
        downloadPaths:
          type: array
          items:
            type: string
          description: Download Paths supported by current Streaming Locator
      type: object
      description: Class of response for listPaths action
    StreamingLocator:
      description: A Streaming Locator resource
      properties:
        properties:
          $ref: '#/components/schemas/StreamingLocatorProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    StreamingPolicyCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StreamingPolicy'
          description: A collection of StreamingPolicy items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of StreamingPolicy items.
    StreamingLocatorCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StreamingLocator'
          description: A collection of StreamingLocator items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of StreamingLocator items.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Hls:
      type: object
      properties:
        fragmentsPerTsSegment:
          format: int32
          type: integer
          description: The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not affect the packing ratio for HLS CMAF output.
      description: HTTP Live Streaming (HLS) packing setting for the live output.
    LiveOutputProperties:
      type: object
      required:
        - assetName
        - archiveWindowLength
      properties:
        description:
          type: string
          description: The description of the live output.
        assetName:
          type: string
          description: The asset that the live output will write to.
        archiveWindowLength:
          format: duration
          type: string
          description: ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.
        rewindWindowLength:
          format: duration
          type: string
          description: ISO 8601 time between 1 minute to the duration of archiveWindowLength to control seek-able window length during Live. The service won't use this property once LiveOutput stops. The archived VOD will have full content with original ArchiveWindowLength. For example, use PT1H30M to indicate 1 hour and 30 minutes of rewind window length. Service will use implicit default value 30m only if Live Event enables LL.
        manifestName:
          type: string
          description: The manifest file name. If not provided, the service will generate one automatically.
        hls:
          type: object
          $ref: '#/components/schemas/Hls'
          description: HTTP Live Streaming (HLS) packing setting for the live output.
        outputSnapTime:
          type: integer
          format: int64
          description: The initial timestamp that the live output will start at, any content before this value will not be archived.
        created:
          readOnly: true
          format: date-time
          type: string
          description: The creation time the live output.
        lastModified:
          readOnly: true
          format: date-time
          type: string
          description: The time the live output was last modified.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state of the live output.
        resourceState:
          description: The resource state of the live output.
          readOnly: true
          type: string
          enum:
            - Creating
            - Running
            - Deleting
          x-ms-enum:
            name: LiveOutputResourceState
            values:
              - value: Creating
                description: Live output is being created. No content is archived in the asset until the live output is in running state.
              - value: Running
                description: Live output is running and archiving live streaming content to the asset if there is valid input from a contribution encoder.
              - value: Deleting
                description: Live output is being deleted. The live asset is being converted from live to on-demand asset. Any streaming URLs created on the live output asset continue to work.
            modelAsString: true
      description: The JSON object that contains the properties required to create a live output.
    LiveOutput:
      description: The Live Output.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LiveOutputProperties'
          description: Live output properties.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    LiveOutputListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LiveOutput'
          description: The result of the List LiveOutput operation.
        '@odata.count':
          type: integer
          format: int32
          description: The number of result.
        '@odata.nextLink':
          type: string
          description: The link to the next set of results. Not empty if value contains incomplete list of live outputs.
      description: The LiveOutput list result.
      title: LiveOutputListResult
    LiveEventEndpoint:
      type: object
      properties:
        protocol:
          type: string
          description: The endpoint protocol.
        url:
          type: string
          description: The endpoint URL.
      description: The live event endpoint.
    LiveEventTimedMetadataEndpoint:
      properties:
        url:
          type: string
          description: The metadata endpoint URL.
      type: object
      description: The live event metadata insertion endpoint.
    LiveEventInputAccessControl:
      type: object
      properties:
        ip:
          type: object
          $ref: '#/components/schemas/IPAccessControl'
          description: The IP access control properties.
      description: The IP access control for live event input.
    LiveEventInput:
      type: object
      required:
        - streamingProtocol
      properties:
        streamingProtocol:
          type: string
          description: The input protocol for the live event. This is specified at creation time and cannot be updated.
          enum:
            - FragmentedMP4
            - RTMP
          x-ms-enum:
            name: LiveEventInputProtocol
            values:
              - value: FragmentedMP4
                description: Smooth Streaming input will be sent by the contribution encoder to the live event.
              - value: RTMP
                description: RTMP input will be sent by the contribution encoder to the live event.
            modelAsString: true
        accessControl:
          type: object
          $ref: '#/components/schemas/LiveEventInputAccessControl'
          description: Access control for live event input.
        keyFrameIntervalDuration:
          type: string
          description: ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events.
        accessToken:
          type: string
          description: A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If omitted, the service will generate a unique value.
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventEndpoint'
          x-ms-identifiers: []
          description: The input endpoints for the live event.
        timedMetadataEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventTimedMetadataEndpoint'
          x-ms-identifiers: []
          description: The metadata endpoints for the live event.
      description: The live event input.
    IPRange:
      type: object
      properties:
        name:
          type: string
          description: The friendly name for the IP address range.
        address:
          type: string
          description: The IP address.
        subnetPrefixLength:
          format: int32
          type: integer
          description: The subnet mask prefix length (see CIDR notation).
      description: The IP address range in the CIDR scheme.
    IPAccessControl:
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/IPRange'
          x-ms-identifiers:
            - name
          description: The IP allow list.
      description: The IP access control.
    LiveEventPreviewAccessControl:
      type: object
      properties:
        ip:
          type: object
          $ref: '#/components/schemas/IPAccessControl'
          description: The IP access control properties.
      description: The IP access control for the live event preview endpoint.
    LiveEventPreview:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventEndpoint'
          x-ms-identifiers: []
          description: The endpoints for preview. Do not share the preview URL with the live event audience.
        accessControl:
          type: object
          $ref: '#/components/schemas/LiveEventPreviewAccessControl'
          description: The access control for live event preview.
        previewLocator:
          type: string
          description: The identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created.
        streamingPolicyName:
          type: string
          description: The name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated.
        alternativeMediaId:
          type: string
          description: An alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.
      description: Live event preview settings.
    LiveEventEncoding:
      type: object
      properties:
        encodingType:
          type: string
          description: Live event type. When encodingType is set to PassthroughBasic or PassthroughStandard, the service simply passes through the incoming video and audio layer(s) to the output. When encodingType is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers. See https://go.microsoft.com/fwlink/?linkid=2095101 for more information. This property cannot be modified after the live event is created.
          enum:
            - None
            - Standard
            - Premium1080p
            - PassthroughBasic
            - PassthroughStandard
          x-ms-enum:
            name: LiveEventEncodingType
            values:
              - value: None
                description: This is the same as PassthroughStandard, please see description below. This enumeration value is being deprecated.
              - value: Standard
                description: A contribution live encoder sends a single bitrate stream to the live event and Media Services creates multiple bitrate streams. The output cannot exceed 720p in resolution.
              - value: Premium1080p
                description: A contribution live encoder sends a single bitrate stream to the live event and Media Services creates multiple bitrate streams. The output cannot exceed 1080p in resolution.
              - value: PassthroughBasic
                description: The ingested stream passes through the live event from the contribution encoder without any further processing. In the PassthroughBasic mode, ingestion is limited to up to 5Mbps and only 1 concurrent live output is allowed. Live transcription is not available.
              - value: PassthroughStandard
                description: The ingested stream passes through the live event from the contribution encoder without any further processing. Live transcription is available. Ingestion bitrate limits are much higher and up to 3 concurrent live outputs are allowed.
            modelAsString: true
        presetName:
          type: string
          description: The optional encoding preset name, used when encodingType is not None. This value is specified at creation time and cannot be updated. If the encodingType is set to Standard, then the default preset name is ‘Default720p’. Else if the encodingType is set to Premium1080p, the default preset is ‘Default1080p’.
        stretchMode:
          type: string
          enum:
            - None
            - AutoSize
            - AutoFit
          x-ms-enum:
            name: StretchMode
            values:
              - value: None
                description: Strictly respects the output resolution specified in the encoding preset without considering the pixel aspect ratio or display aspect ratio of the input video.
              - value: AutoSize
                description: Override the output resolution, and change it to match the display aspect ratio of the input, without padding. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the value in the preset is overridden, and the output will be at 1280x720, which maintains the input aspect ratio of 16:9.
              - value: AutoFit
                description: Pad the output (with either letterbox or pillar box) to honor the output resolution, while ensuring that the active video region in the output has the same aspect ratio as the input. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the output will be at 1280x1280, which contains an inner rectangle of 1280x720 at aspect ratio of 16:9, and pillar box regions 280 pixels wide at the left and right.
            modelAsString: true
          description: Specifies how the input video will be resized to fit the desired output resolution(s). Default is None
        keyFrameInterval:
          type: string
          format: duration
          description: Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for the video and audio tracks of an encoding live event. For example, use PT2S to indicate 2 seconds. For the video track it also defines the key frame interval, or the length of a GoP (group of pictures).   If this value is not set for an encoding live event, the fragment duration defaults to 2 seconds. The value cannot be set for pass-through live events.
      description: Specifies the live event type and optional encoding settings for encoding live events.
    LiveEventInputTrackSelection:
      type: object
      properties:
        property:
          type: string
          description: Property name to select. This property is reserved for future use, any value set on this property will be ignored.
        operation:
          type: string
          description: Comparing operation. This property is reserved for future use, any value set on this property will be ignored.
        value:
          type: string
          description: Property value to select. This property is reserved for future use, any value set on this property will be ignored.
      description: A track selection condition. This property is reserved for future use, any value set on this property will be ignored.
    LiveEventOutputTranscriptionTrack:
      type: object
      required:
        - trackName
      properties:
        trackName:
          type: string
          description: The output track name. This property is reserved for future use, any value set on this property will be ignored.
      description: Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
    LiveEventTranscription:
      type: object
      properties:
        language:
          type: string
          description: 'Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: ''en-US''). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages.'
        inputTrackSelection:
          type: array
          description: Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.
          items:
            $ref: '#/components/schemas/LiveEventInputTrackSelection'
          x-ms-identifiers: []
        outputTranscriptionTrack:
          type: object
          $ref: '#/components/schemas/LiveEventOutputTranscriptionTrack'
          description: Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
      description: Describes the transcription tracks in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.
    CrossSiteAccessPolicies:
      type: object
      properties:
        clientAccessPolicy:
          type: string
          description: The content of clientaccesspolicy.xml used by Silverlight.
        crossDomainPolicy:
          type: string
          description: The content of crossdomain.xml used by Silverlight.
      description: The client access policy.
    LiveEventActionInput:
      type: object
      properties:
        removeOutputsOnStop:
          type: boolean
          description: The flag indicates whether live outputs are automatically deleted when live event is being stopped. Deleting live outputs do not delete the underlying assets.
      description: The LiveEvent action input parameter definition.
    LiveEventProperties:
      type: object
      required:
        - input
      properties:
        description:
          type: string
          description: A description for the live event.
        input:
          type: object
          $ref: '#/components/schemas/LiveEventInput'
          description: Live event input settings. It defines how the live event receives input from a contribution encoder.
        preview:
          type: object
          $ref: '#/components/schemas/LiveEventPreview'
          description: Live event preview settings. Preview allows live event producers to preview the live streaming content without creating any live output.
        encoding:
          type: object
          $ref: '#/components/schemas/LiveEventEncoding'
          description: Encoding settings for the live event. It configures whether a live encoder is used for the live event and settings for the live encoder if it is used.
        transcriptions:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventTranscription'
          x-ms-identifiers:
            - language
          description: Live transcription settings for the live event. See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state of the live event.
        resourceState:
          readOnly: true
          type: string
          description: The resource state of the live event. See https://go.microsoft.com/fwlink/?linkid=2139012 for more information.
          enum:
            - Stopped
            - Allocating
            - StandBy
            - Starting
            - Running
            - Stopping
            - Deleting
          x-ms-enum:
            name: LiveEventResourceState
            values:
              - value: Stopped
                description: This is the initial state of the live event after creation (unless autostart was set to true.) No billing occurs in this state. In this state, the live event properties can be updated but streaming is not allowed.
              - value: Allocating
                description: Allocate action was called on the live event and resources are being provisioned for this live event. Once allocation completes successfully, the live event will transition to StandBy state.
              - value: StandBy
                description: Live event resources have been provisioned and is ready to start. Billing occurs in this state. Most properties can still be updated, however ingest or streaming is not allowed during this state.
              - value: Starting
                description: The live event is being started and resources are being allocated. No billing occurs in this state. Updates or streaming are not allowed during this state. If an error occurs, the live event returns to the Stopped state.
              - value: Running
                description: The live event resources have been allocated, ingest and preview URLs have been generated, and it is capable of receiving live streams. At this point, billing is active. You must explicitly call Stop on the live event resource to halt further billing.
              - value: Stopping
                description: The live event is being stopped and resources are being de-provisioned. No billing occurs in this transient state. Updates or streaming are not allowed during this state.
              - value: Deleting
                description: The live event is being deleted. No billing occurs in this transient state. Updates or streaming are not allowed during this state.
            modelAsString: true
        crossSiteAccessPolicies:
          type: object
          $ref: '#/components/schemas/CrossSiteAccessPolicies'
          description: Live event cross site access policies.
        useStaticHostname:
          type: boolean
          description: Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. This value can only be updated if the live event is in Standby state
        hostnamePrefix:
          type: string
          description: When useStaticHostname is set to true, the hostnamePrefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center.
        streamOptions:
          type: array
          items:
            type: string
            enum:
              - Default
              - LowLatency
              - LowLatencyV2
            x-ms-enum:
              name: StreamOptionsFlag
              values:
                - value: Default
                  description: Live streaming with no special latency optimizations.
                - value: LowLatency
                  description: The live event provides lower end to end latency by reducing its internal buffers.
                - value: LowLatencyV2
                  description: The live event is optimized for end to end latency. This option is only available for encoding live events with RTMP input. The outputs can be streamed using HLS or DASH formats. The outputs' archive or DVR rewind length is limited to 6 hours. Use "LowLatency" stream option for all other scenarios.
              modelAsString: true
          description: The options to use for the LiveEvent. This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'.
        created:
          readOnly: true
          format: date-time
          type: string
          description: The creation time for the live event
        lastModified:
          readOnly: true
          format: date-time
          type: string
          description: The last modified time of the live event.
      description: The live event properties.
    LiveEvent:
      description: The live event.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LiveEventProperties'
          description: The live event properties.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    LiveEventListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LiveEvent'
          description: The result of the List Live Event operation.
        '@odata.count':
          type: integer
          format: int32
          description: The number of result.
        '@odata.nextLink':
          type: string
          description: The link to the next set of results. Not empty if value contains incomplete list of live outputs.
      description: The LiveEvent list result.
      title: LiveEventListResult
    AkamaiSignatureHeaderAuthenticationKey:
      type: object
      properties:
        identifier:
          type: string
          description: identifier of the key
        base64Key:
          type: string
          description: authentication key
        expiration:
          format: date-time
          type: string
          description: The expiration time of the authentication key.
      description: Akamai Signature Header authentication key.
    AkamaiAccessControl:
      type: object
      properties:
        akamaiSignatureHeaderAuthenticationKeyList:
          type: array
          items:
            $ref: '#/components/schemas/AkamaiSignatureHeaderAuthenticationKey'
          x-ms-identifiers: []
          description: authentication key list
      description: Akamai access control
    StreamingEndpointAccessControl:
      type: object
      properties:
        akamai:
          type: object
          $ref: '#/components/schemas/AkamaiAccessControl'
          description: The access control of Akamai
        ip:
          type: object
          $ref: '#/components/schemas/IPAccessControl'
          description: The IP access control of the streaming endpoint.
      description: Streaming endpoint access control definition.
    StreamingEntityScaleUnit:
      type: object
      properties:
        scaleUnit:
          type: integer
          format: int32
          description: The scale unit number of the streaming endpoint.
      description: scale units definition
    StreamingEndpointProperties:
      type: object
      required:
        - scaleUnits
      properties:
        description:
          type: string
          description: The streaming endpoint description.
        scaleUnits:
          type: integer
          format: int32
          description: The number of scale units. Use the Scale operation to adjust this value.
        availabilitySetName:
          type: string
          description: This feature is deprecated, do not set a value for this property.
        accessControl:
          type: object
          $ref: '#/components/schemas/StreamingEndpointAccessControl'
          description: The access control definition of the streaming endpoint.
        maxCacheAge:
          type: integer
          format: int64
          description: Max cache age
        customHostNames:
          type: array
          items:
            type: string
            description: custom host name
          description: The custom host names of the streaming endpoint
        hostName:
          readOnly: true
          type: string
          description: The streaming endpoint host name.
        cdnEnabled:
          type: boolean
          description: The CDN enabled flag.
        cdnProvider:
          type: string
          description: The CDN provider name.
        cdnProfile:
          type: string
          description: The CDN profile name.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state of the streaming endpoint.
        resourceState:
          readOnly: true
          type: string
          description: The resource state of the streaming endpoint.
          enum:
            - Stopped
            - Starting
            - Running
            - Stopping
            - Deleting
            - Scaling
          x-ms-enum:
            name: StreamingEndpointResourceState
            values:
              - value: Stopped
                description: The initial state of a streaming endpoint after creation. Content is not ready to be streamed from this endpoint.
              - value: Starting
                description: The streaming endpoint is transitioning to the running state.
              - value: Running
                description: The streaming endpoint is running. It is able to stream content to clients
              - value: Stopping
                description: The streaming endpoint is transitioning to the stopped state.
              - value: Deleting
                description: The streaming endpoint is being deleted.
              - value: Scaling
                description: The streaming endpoint is increasing or decreasing scale units.
            modelAsString: true
        crossSiteAccessPolicies:
          type: object
          $ref: '#/components/schemas/CrossSiteAccessPolicies'
          description: The streaming endpoint access policies.
        freeTrialEndTime:
          readOnly: true
          format: date-time
          type: string
          description: The free trial expiration time.
        created:
          readOnly: true
          format: date-time
          type: string
          description: The exact time the streaming endpoint was created.
        lastModified:
          readOnly: true
          format: date-time
          type: string
          description: The exact time the streaming endpoint was last modified.
      description: The streaming endpoint properties.
    StreamingEndpoint:
      description: The streaming endpoint.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StreamingEndpointProperties'
          description: The streaming endpoint properties.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
        sku:
          $ref: '#/components/schemas/ArmStreamingEndpointCurrentSku'
          description: The streaming endpoint sku.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StreamingEndpointListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StreamingEndpoint'
          description: The result of the List StreamingEndpoint operation.
        '@odata.count':
          type: integer
          format: int32
          description: The number of result.
        '@odata.nextLink':
          type: string
          description: The link to the next set of results. Not empty if value contains incomplete list of streaming endpoints.
      description: The streaming endpoint list result.
      title: StreamingEndpointListResult
    ArmStreamingEndpointCurrentSku:
      properties:
        name:
          type: string
          readOnly: true
          description: The streaming endpoint sku name.
        capacity:
          type: integer
          format: int32
          description: The streaming endpoint sku capacity.
      description: The streaming endpoint current sku.
      type: object
    ArmStreamingEndpointSku:
      properties:
        name:
          type: string
          readOnly: true
          description: The streaming endpoint sku name.
      description: The streaming endpoint sku.
      type: object
    ArmStreamingEndpointCapacity:
      properties:
        scaleType:
          type: string
          readOnly: true
        default:
          type: integer
          format: int32
          description: The streaming endpoint default capacity.
        minimum:
          type: integer
          format: int32
          description: The streaming endpoint minimum capacity.
        maximum:
          type: integer
          format: int32
          description: The streaming endpoint maximum capacity.
      description: The streaming endpoint sku capacity.
      type: object
    ArmStreamingEndpointSkuInfo:
      properties:
        resourceType:
          type: string
        capacity:
          $ref: '#/components/schemas/ArmStreamingEndpointCapacity'
        sku:
          $ref: '#/components/schemas/ArmStreamingEndpointSku'
      type: object
    StreamingEndpointSkuInfoListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArmStreamingEndpointSkuInfo'
          x-ms-identifiers: []
          description: The result of the List StreamingEndpoint skus.
      type: object
    AsyncOperationResult:
      properties:
        error:
          description: The error object
          $ref: '#/components/schemas/ErrorDetail'
        name:
          type: string
          description: Operation Id of the async operation.
        status:
          description: Operation status of the async operation.
          type: string
          enum:
            - Succeeded
            - Failed
            - InProgress
          x-ms-enum:
            name: AsyncOperationStatus
            modelAsString: true
      description: The status of an async operation.
      type: object
    LiveEventIngestInterruption:
      properties:
        begin:
          description: UTC time of interruption start, encoder disconnected.
          format: date-time
          type: string
        end:
          description: UTC time of interruption end, encoder re-connected.
          format: date-time
          type: string
        duration:
          format: duration
          type: string
          description: Duration of interruption in ISO 8601 time. For example, use PT1H30M to indicate 1 hour and 30 minutes.
        reason:
          description: Interruption reason.
          type: string
      description: The live event ingest interruption data.
      type: object
    LiveEventIngestion:
      properties:
        streamName:
          description: Ingestion stream name.
          type: string
        begin:
          description: Ingestion begin time in UTC.
          format: date-time
          type: string
        end:
          description: Ingestion end time in UTC. Empty if it's not stopped yet.
          format: date-time
          type: string
        endReason:
          description: Reason why ingestion stops. Empty if it's not stopped yet. E.g) Service Stopped. No Ingestion.
          type: string
        ingestInterruptions:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventIngestInterruption'
          x-ms-identifiers: []
          description: IngestInterruption entry list.
      description: The live event ingestion telemetry data.
      type: object
    LiveEventTrackStatus:
      properties:
        trackId:
          description: Track Id.
          type: string
        expectedBitrate:
          description: Expected bitrate for this track.
          type: integer
          format: int64
        incomingBitrate:
          description: Average incoming bitrate for last 20 seconds when live event is running.
          type: integer
          format: int64
        ingestDrift:
          description: Current ingest drift value in seconds for last 1 minute.
          type: string
        requestReceived:
          description: Total number of timed metadata request received.
          type: integer
          format: int64
        requestSucceeded:
          description: Total number of successful timed metadata request received.
          type: integer
          format: int64
      description: The live event track status.
      type: object
    LiveEventStatus:
      properties:
        state:
          type: string
          description: Current state of the live event. See https://go.microsoft.com/fwlink/?linkid=2139012 for more information.
          enum:
            - Stopped
            - Running
          x-ms-enum:
            name: LiveEventState
            values:
              - value: Stopped
                description: This is the initial state of the live event after creation (unless autostart was set to true.) No billing occurs in this state. In this state, the live event properties can be updated but streaming is not allowed.
              - value: Running
                description: The live event resources have been allocated, ingest and preview URLs have been generated, and it is capable of receiving live streams. At this point, billing is active. You must explicitly call Stop on the live event resource to halt further billing.
            modelAsString: true
        healthStatus:
          description: Health status of last 20 seconds.
          enum:
            - Excellent
            - Good
            - Poor
          x-ms-enum:
            name: LiveEventHealthStatus
            values:
              - value: Excellent
                description: Incoming bitrate >= 75% of target bitrate AND no Ingest warning and error AND ABS(IngestDrift) is equal to 0.
              - value: Good
                description: Incoming bitrate >= 20% AND no Ingest Error or warning exception discontinuities which gap < 10 seconds.
              - value: Poor
                description: Otherwise.
            modelAsString: true
          type: string
        healthDescriptions:
          description: List of strings justifying the health status.
          type: array
          items:
            type: string
        lastUpdatedTime:
          description: Last updated UTC time of this status.
          format: date-time
          type: string
        ingestion:
          description: Live event ingestion entry.
          $ref: '#/components/schemas/LiveEventIngestion'
        trackStatus:
          description: Track entry list.
          type: array
          items:
            $ref: '#/components/schemas/LiveEventTrackStatus'
          x-ms-identifiers: []
      description: The live event status.
      type: object
    LiveEventGetStatusResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventStatus'
          x-ms-identifiers: []
          description: The result of the get live event status.
      description: Get live event status result.
      type: object
    LiveEventStreamEventData:
      properties:
        trackName:
          description: 'Name of the track. '
          type: string
        streamId:
          description: Stream ID in the format "trackName_bitrate"
          type: string
        trackId:
          description: Track index.
          type: integer
          format: int32
        mediaType:
          description: Type of the track.
          enum:
            - audio
            - video
          x-ms-enum:
            name: LiveEventStreamEventMediaType
            modelAsString: true
          type: string
        bitrate:
          description: Bitrate of the track.
          type: integer
          format: int64
        mediaTimestamp:
          description: Fragment timestamp in timescale.
          type: string
        timescale:
          description: Timescale in which timestamps are expressed.
          type: string
        previousFragmentTimestamp:
          description: Previous fragment timestamp in timescale.
          type: string
        previousFragmentDuration:
          description: Previous fragment duration in timescale.
          type: string
        currentFragmentTimestamp:
          description: Current fragment timestamp in timescale.
          type: string
        fragmentOneTimestamp:
          description: Timestamp of first fragment used to make a comparison, in timescale.
          type: string
        fragmentOneDuration:
          description: Duration of first fragment used to make a comparison, in timescale.
          type: string
        fragmentTwoTimestamp:
          description: Timestamp of second fragment used to make a comparison, in timescale.
          type: string
        fragmentTwoDuration:
          description: Duration of second fragment used to make a comparison, in timescale.
          type: string
        fragmentDropReason:
          description: Reason the fragment was dropped.
          type: string
        discontinuityGap:
          description: Length of the discontinuity gap in timescale.
          type: integer
          format: int64
        streamName:
          description: Identifier of the stream or connection. Encoder or customer is responsible to add this ID in the ingest URL.
          type: string
        resultCode:
          description: Result code.
          type: string
        resultMessage:
          description: Result message.
          type: string
        duration:
          description: Fragment duration.
          type: string
        resolution:
          description: Width x Height for video, null otherwise.
          type: string
        minTime:
          description: The smaller timestamp of the two fragments compared.
          type: string
        minTimeMediaType:
          description: The media type of the smaller timestamp of two fragments compared.
          enum:
            - Audio
            - Video
          x-ms-enum:
            name: LiveEventStreamEventMinTimeMediaType
            modelAsString: true
          type: string
        maxTime:
          description: The larger timestamp of the two fragments compared.
          type: string
        maxTimeMediaType:
          description: The media type of the larger timestamp of two fragments compared.
          enum:
            - Audio
            - Video
          x-ms-enum:
            name: LiveEventStreamEventMaxTimeMediaType
            modelAsString: true
          type: string
        timescaleOfMinTime:
          description: Timescale of the fragment with the smaller timestamp.
          type: string
        timescaleOfMaxTime:
          description: Timescale of the fragment with the larger timestamp.
          type: string
        remoteIp:
          description: Truncated IP of the encoder.
          type: string
        remotePort:
          description: Port of the encoder.
          type: string
      description: The live event stream event data.
      type: object
    LiveEventStreamEvent:
      properties:
        eventType:
          description: 'The type of the stream event. Format: StreamEvent/{eventType}'
          enum:
            - StreamEvent/BeginIngest
            - StreamEvent/EndIngest
            - StreamEvent/FirstChunkReceived
            - StreamEvent/ChunkDropped
            - StreamEvent/UnalignedKeyFrames
            - StreamEvent/UnalignedPresentation
            - StreamEvent/Discontinuity
            - StreamEvent/InvalidConnection
          x-ms-enum:
            name: LiveEventStreamEventType
            values:
              - value: StreamEvent/BeginIngest
                description: Ingest session begins.
              - value: StreamEvent/EndIngest
                description: Ingest session ends.
              - value: StreamEvent/FirstChunkReceived
                description: First fragment received on ingest media track.
              - value: StreamEvent/ChunkDropped
                description: Fragment dropped.
              - value: StreamEvent/UnalignedKeyFrames
                description: Unaligned video keyframes detected.
              - value: StreamEvent/UnalignedPresentation
                description: Unaligned presentation detected, meaning two fragments across two quality levels are not time aligned.
              - value: StreamEvent/Discontinuity
                description: Timestamp discontinuity detected.
              - value: StreamEvent/InvalidConnection
                description: Ingest session denied.
            modelAsString: true
          type: string
        eventTime:
          description: The time event raised.
          format: date-time
          type: string
        eventLevel:
          description: Event level.
          type: string
          enum:
            - Critical
            - Error
            - Warning
            - Information
          x-ms-enum:
            name: LiveEventStreamEventLevel
            modelAsString: true
        data:
          description: Event data based on event type.
          $ref: '#/components/schemas/LiveEventStreamEventData'
      description: The live event stream event.
      type: object
    LiveEventGetStreamEventsResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventStreamEvent'
          x-ms-identifiers: []
          description: The result of the get live event stream events.
      description: Get live event stream events result.
      type: object
    LiveEventTrackEventData:
      properties:
        trackName:
          description: Name of the track.
          type: string
        trackType:
          description: Type of the track.
          enum:
            - audio
            - video
          x-ms-enum:
            name: LiveEventTrackEventTrackType
            modelAsString: true
          type: string
        bitrate:
          description: Bitrate of the track.
          type: integer
          format: int64
        incomingBitrate:
          description: Calculated bitrate based on data chunks coming from encoder.
          type: integer
          format: int64
        lastTimestamp:
          description: Latest timestamp received for a track in last 20 seconds.
          type: string
        timescale:
          description: Timescale in which timestamps are expressed.
          type: string
        overlapCount:
          description: Number of data chunks that had overlapped timestamps in last 20 seconds.
          type: integer
          format: int64
        discontinuityCount:
          description: Number of discontinuities detected in the last 20 seconds.
          type: integer
          format: int64
        nonincreasingCount:
          description: Number of data chunks with timestamps in the past that were received in last 20 seconds.
          type: integer
          format: int64
        unexpectedBitrate:
          description: If expected and actual bitrates differ by more than allowed limit in last 20 seconds.
          type: boolean
        state:
          description: State of the live event.
          type: string
        healthy:
          description: Indicates whether ingest is healthy.
          type: boolean
        lastFragmentArrivalTime:
          description: The last timestamp in UTC that a fragment arrived at the ingest endpoint.
          format: date-time
          type: string
        ingestDriftValue:
          description: Indicates the speed of delay, in seconds-per-minute, of the incoming audio or video data during the last minute. The value is greater than zero if data is arriving to the live event slower than expected in the last minute; zero if data arrived with no delay; and "n/a" if no audio or video data was received. For example, if you have a contribution encoder sending in live content, and it is slowing down due to processing issues, or network latency, it may be only able to deliver a total of 58 seconds of audio or video in a one-minute period. This would be reported as two seconds-per-minute of drift. If the encoder is able to catch up and send all 60 seconds or more of data every minute, you will see this value reported as 0. If there was a disconnection or discontinuity from the encoder, this value may still display as 0, as it does not account for breaks in the data - only data that is delayed in timestamps.
          type: string
        transcriptionState:
          description: This value is "On" for audio track heartbeats if live transcription is turned on, otherwise you will see an empty string. This state is only applicable to track type of "audio" for Live transcription. All other tracks will have an empty value.
          type: string
        transcriptionLanguage:
          description: The language code (in BCP-47 format) of the transcription language. For example, "de-de" indicates German (Germany). The value is empty for the video track heartbeats, or when live transcription is turned off.
          type: string
      description: The live event track ingest heart beat event data.
      type: object
    LiveEventTrackEvent:
      properties:
        eventType:
          description: The type of the track event.
          enum:
            - TrackEvent/IngestHeartbeat
          x-ms-enum:
            name: LiveEventTrackEventType
            values:
              - value: TrackEvent/IngestHeartbeat
                description: Track heartbeat received.
            modelAsString: true
          type: string
        eventTime:
          description: The time event raised.
          format: date-time
          type: string
        data:
          description: Event data.
          $ref: '#/components/schemas/LiveEventTrackEventData'
      description: The live event track event.
      type: object
    LiveEventGetTrackIngestHeartbeatsResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LiveEventTrackEvent'
          x-ms-identifiers: []
          description: The result of the get live event track events.
      description: Get live event track ingest heart beats result.
      type: object
    PresentationTimeRange:
      properties:
        startTimestamp:
          type: integer
          format: int64
          description: The absolute start time boundary.
        endTimestamp:
          type: integer
          format: int64
          description: The absolute end time boundary.
        presentationWindowDuration:
          type: integer
          format: int64
          description: The relative to end sliding window.
        liveBackoffDuration:
          type: integer
          format: int64
          description: The relative to end right edge.
        timescale:
          type: integer
          format: int64
          description: The time scale of time stamps.
        forceEndTimestamp:
          type: boolean
          description: The indicator of forcing existing of end time stamp.
      type: object
      description: The presentation time range, this is asset related and not recommended for Account Filter.
    FilterTrackPropertyCondition:
      properties:
        property:
          type: string
          enum:
            - Unknown
            - Type
            - Name
            - Language
            - FourCC
            - Bitrate
          x-ms-enum:
            name: FilterTrackPropertyType
            values:
              - value: Unknown
                description: The unknown track property type.
              - value: Type
                description: The type.
              - value: Name
                description: The name.
              - value: Language
                description: The language.
              - value: FourCC
                description: The fourCC.
              - value: Bitrate
                description: The bitrate.
            modelAsString: true
          description: The track property type.
        value:
          type: string
          description: The track property value.
        operation:
          type: string
          enum:
            - Equal
            - NotEqual
          x-ms-enum:
            name: FilterTrackPropertyCompareOperation
            values:
              - value: Equal
                description: The equal operation.
              - value: NotEqual
                description: The not equal operation.
            modelAsString: true
          description: The track property condition operation.
      type: object
      required:
        - property
        - value
        - operation
      description: The class to specify one track property condition.
    FirstQuality:
      properties:
        bitrate:
          type: integer
          format: int32
          description: The first quality bitrate.
      type: object
      required:
        - bitrate
      description: Filter First Quality
    FilterTrackSelection:
      properties:
        trackSelections:
          type: array
          items:
            $ref: '#/components/schemas/FilterTrackPropertyCondition'
          x-ms-identifiers: []
          description: The track selections.
      type: object
      required:
        - trackSelections
      description: Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation.
    MediaFilterProperties:
      properties:
        presentationTimeRange:
          $ref: '#/components/schemas/PresentationTimeRange'
          description: The presentation time range.
        firstQuality:
          $ref: '#/components/schemas/FirstQuality'
          description: The first quality.
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/FilterTrackSelection'
          x-ms-identifiers: []
          description: The tracks selection conditions.
      type: object
      description: The Media Filter properties.
    AccountFilter:
      description: An Account Filter.
      properties:
        properties:
          $ref: '#/components/schemas/MediaFilterProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    AccountFilterCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccountFilter'
          description: A collection of AccountFilter items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of AccountFilter items.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
    AssetProperties:
      properties:
        assetId:
          type: string
          format: uuid
          description: The Asset ID.
          readOnly: true
          nullable: false
        created:
          type: string
          format: date-time
          description: The creation date of the Asset.
          readOnly: true
          nullable: false
        lastModified:
          type: string
          format: date-time
          description: The last modified date of the Asset.
          readOnly: true
          nullable: false
        alternateId:
          type: string
          description: The alternate ID of the Asset.
        description:
          type: string
          description: The Asset description.
        container:
          type: string
          description: The name of the asset blob container.
        storageAccountName:
          type: string
          description: The name of the storage account.
        storageEncryptionFormat:
          type: string
          enum:
            - None
            - MediaStorageClientEncryption
          x-ms-enum:
            name: AssetStorageEncryptionFormat
            values:
              - value: None
                description: The Asset does not use client-side storage encryption (this is the only allowed value for new Assets).
              - value: MediaStorageClientEncryption
                description: The Asset is encrypted with Media Services client-side encryption.
            modelAsString: true
          description: The Asset encryption format. One of None or MediaStorageEncryption.
          readOnly: true
          nullable: false
        encryptionScope:
          type: string
          description: The Asset container encryption scope in the storage account.
      type: object
      description: The Asset properties.
    AssetContainerSas:
      properties:
        assetContainerSasUrls:
          type: array
          items:
            type: string
          description: The list of Asset container SAS URLs.
      type: object
      description: The Asset Storage container SAS URLs.
    AssetFileEncryptionMetadata:
      properties:
        initializationVector:
          type: string
          description: The Asset File initialization vector.
        assetFileName:
          type: string
          description: The Asset File name.
        assetFileId:
          type: string
          format: uuid
          description: The Asset File Id.
      type: object
      required:
        - assetFileId
      description: The Asset File Storage encryption metadata.
    StorageEncryptedAssetDecryptionData:
      properties:
        key:
          type: string
          format: byte
          description: The Asset File storage encryption key.
        assetFileEncryptionMetadata:
          type: array
          items:
            $ref: '#/components/schemas/AssetFileEncryptionMetadata'
          x-ms-identifiers:
            - assetFileId
          description: Asset File encryption metadata.
      type: object
      description: Data needed to decrypt asset files encrypted with legacy storage encryption.
    ListStreamingLocatorsResponse:
      properties:
        streamingLocators:
          type: array
          items:
            $ref: '#/components/schemas/AssetStreamingLocator'
          x-ms-identifiers:
            - name
          description: The list of Streaming Locators.
          readOnly: true
      type: object
      description: The Streaming Locators associated with this Asset.
    AssetStreamingLocator:
      properties:
        name:
          type: string
          description: Streaming Locator name.
          readOnly: true
        assetName:
          type: string
          description: Asset Name.
          readOnly: true
        created:
          type: string
          format: date-time
          description: The creation time of the Streaming Locator.
          readOnly: true
          nullable: false
        startTime:
          type: string
          format: date-time
          description: The start time of the Streaming Locator.
          readOnly: true
          nullable: false
        endTime:
          type: string
          format: date-time
          description: The end time of the Streaming Locator.
          readOnly: true
          nullable: false
        streamingLocatorId:
          type: string
          format: uuid
          description: StreamingLocatorId of the Streaming Locator.
          readOnly: true
          nullable: false
        streamingPolicyName:
          type: string
          description: Name of the Streaming Policy used by this Streaming Locator.
          readOnly: true
        defaultContentKeyPolicyName:
          type: string
          description: Name of the default ContentKeyPolicy used by this Streaming Locator.
          readOnly: true
      type: object
      description: Properties of the Streaming Locator.
    Asset:
      description: An Asset.
      properties:
        properties:
          $ref: '#/components/schemas/AssetProperties'
          description: The resource properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    AssetFilter:
      description: An Asset Filter.
      properties:
        properties:
          $ref: '#/components/schemas/MediaFilterProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to this resource.
          readOnly: true
      type: object
    HlsSettings:
      properties:
        default:
          type: boolean
          description: The default for the HLS setting.
        forced:
          type: boolean
          description: The forced for the HLS setting.
        characteristics:
          type: string
          description: The characteristics for the HLS setting.
      type: object
      description: The HLS setting for a track.
    DashSettings:
      properties:
        role:
          type: string
          description: The role for the DASH setting.
      type: object
      description: The DASH setting for a track.
    TrackBase:
      discriminator:
        propertyName: '@odata.type'
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@odata.type'
      description: Base type for concrete track types. A derived type must be used to represent the Track.
    AudioTrack:
      x-ms-discriminator-value: '#Microsoft.Media.AudioTrack'
      description: Represents an audio track in the asset.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        fileName:
          type: string
          description: The file name to the source file. This file is located in the storage container of the asset.
        displayName:
          type: string
          description: The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.
        languageCode:
          type: string
          description: The RFC5646 language code for the audio track.
        hlsSettings:
          $ref: '#/components/schemas/HlsSettings'
          description: The HLS specific setting for the audio track.
        dashSettings:
          $ref: '#/components/schemas/DashSettings'
          description: The DASH specific setting for the audio track.
        mpeg4TrackId:
          type: integer
          format: int32
          description: The MPEG-4 audio track ID for the audio track.
          nullable: true
        bitRate:
          type: integer
          format: int32
          description: The stream bit rate for the audio track.
          readOnly: true
          nullable: false
      type: object
    VideoTrack:
      x-ms-discriminator-value: '#Microsoft.Media.VideoTrack'
      description: Represents a video track in the asset.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
      type: object
    TextTrack:
      x-ms-discriminator-value: '#Microsoft.Media.TextTrack'
      description: Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks.
      properties:
        '@odata.type':
          type: string
          description: The discriminator for derived types.
        fileName:
          type: string
          description: The file name to the source file. This file is located in the storage container of the asset.
        displayName:
          type: string
          description: The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.
        languageCode:
          type: string
          description: The RFC5646 language code for the text track.
          readOnly: true
        playerVisibility:
          type: string
          enum:
            - Hidden
            - Visible
          x-ms-enum:
            name: Visibility
            values:
              - value: Hidden
                description: The track is hidden to video player.
              - value: Visible
                description: The track is visible to video player.
            modelAsString: true
          description: When PlayerVisibility is set to "Visible", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to "Hidden", the text will not be available to the client. The default value is "Visible".
        hlsSettings:
          $ref: '#/components/schemas/HlsSettings'
          description: The HLS specific setting for the text track.
      type: object
    AssetTrackProperties:
      properties:
        track:
          $ref: '#/components/schemas/TrackBase'
          description: Detailed information about a track in the asset.
        provisioningState:
          type: string
          enum:
            - Failed
            - InProgress
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            values:
              - value: Failed
                description: Provisioning state failed.
              - value: InProgress
                description: Provisioning state in progress.
              - value: Succeeded
                description: Provisioning state succeeded.
            modelAsString: true
          description: Provisioning state of the asset track.
          readOnly: true
          nullable: false
      type: object
      description: Properties of a video, audio or text track in the asset.
    AssetTrack:
      description: An Asset Track resource.
      properties:
        properties:
          $ref: '#/components/schemas/AssetTrackProperties'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    AssetTrackOperationStatus:
      properties:
        name:
          type: string
          description: Operation identifier.
        id:
          type: string
          description: Operation resource ID.
        startTime:
          type: string
          format: date-time
          description: Operation start time.
        endTime:
          type: string
          format: date-time
          description: Operation end time.
        status:
          type: string
          description: Operation status.
        error:
          $ref: '#/components/schemas/ErrorDetail'
          nullable: true
          x-nullable: true
      type: object
      required:
        - name
        - status
      description: Status of asset track operation.
    AssetCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
          description: A collection of Asset items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of Asset items.
    ListContainerSasInput:
      description: The parameters to the list SAS request.
      properties:
        permissions:
          description: The permissions to set on the SAS URL.
          type: string
          enum:
            - Read
            - ReadWrite
            - ReadWriteDelete
          x-ms-enum:
            name: AssetContainerPermission
            values:
              - value: Read
                description: The SAS URL will allow read access to the container.
              - value: ReadWrite
                description: The SAS URL will allow read and write access to the container.
              - value: ReadWriteDelete
                description: The SAS URL will allow read, write and delete access to the container.
            modelAsString: true
        expiryTime:
          description: The SAS URL expiration time.  This must be less than 24 hours from the current time.
          type: string
          format: date-time
      type: object
    AssetFilterCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AssetFilter'
          description: A collection of AssetFilter items.
        '@odata.nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of AssetFilter items.
    AssetTrackCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AssetTrack'
          description: A collection of AssetTrack items.
      type: object
      description: A collection of AssetTrack items.
  x-stackQL-resources:
    content_key_policies:
      id: azure.media_services.content_key_policies
      name: content_key_policies
      title: content_key_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1contentKeyPolicies?api-version=2023-01-01/get'
            operationId: ContentKeyPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContentKeyPolicyCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1contentKeyPolicies~1{contentKeyPolicyName}?api-version=2023-01-01/get'
            operationId: ContentKeyPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContentKeyPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1contentKeyPolicies~1{contentKeyPolicyName}?api-version=2023-01-01/put'
            operationId: ContentKeyPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContentKeyPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1contentKeyPolicies~1{contentKeyPolicyName}?api-version=2023-01-01/delete'
            operationId: ContentKeyPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1contentKeyPolicies~1{contentKeyPolicyName}?api-version=2023-01-01/patch'
            operationId: ContentKeyPolicies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContentKeyPolicy
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content_key_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/content_key_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/content_key_policies/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/content_key_policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/content_key_policies/methods/delete'
    content_key_policies_policy_properties_with_secrets:
      id: azure.media_services.content_key_policies_policy_properties_with_secrets
      name: content_key_policies_policy_properties_with_secrets
      title: content_key_policies_policy_properties_with_secrets
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1contentKeyPolicies~1{contentKeyPolicyName}~1getPolicyPropertiesWithSecrets?api-version=2023-01-01/post'
            operationId: ContentKeyPoliciesPolicyPropertiesWithSecrets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContentKeyPolicyProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content_key_policies_policy_properties_with_secrets/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.media_services.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Media~1operations?api-version=2023-01-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    mediaservices:
      id: azure.media_services.mediaservices
      name: mediaservices
      title: mediaservices
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices?api-version=2023-01-01/get'
            operationId: Mediaservices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MediaServiceCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}?api-version=2023-01-01/get'
            operationId: Mediaservices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MediaService
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}?api-version=2023-01-01/put'
            operationId: Mediaservices_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MediaService
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}?api-version=2023-01-01/delete'
            operationId: Mediaservices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}?api-version=2023-01-01/patch'
            operationId: Mediaservices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '202'
            schemaRef: MediaService
        sync_storage_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1syncStorageKeys?api-version=2023-01-01/post'
            operationId: Mediaservices_SyncStorageKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Media~1mediaservices?api-version=2023-01-01/get'
            operationId: Mediaservices_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MediaServiceCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mediaservices/methods/get'
          - $ref: '#/components/x-stackQL-resources/mediaservices/methods/list'
          - $ref: '#/components/x-stackQL-resources/mediaservices/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/mediaservices/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/mediaservices/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mediaservices/methods/delete'
    mediaservices_edge_policies:
      id: azure.media_services.mediaservices_edge_policies
      name: mediaservices_edge_policies
      title: mediaservices_edge_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1listEdgePolicies?api-version=2023-01-01/post'
            operationId: MediaservicesEdgePolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EdgePolicies
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mediaservices_edge_policies/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_link_resources:
      id: azure.media_services.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1privateLinkResources?api-version=2023-01-01/get'
            operationId: PrivateLinkResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1privateLinkResources~1{name}?api-version=2023-01-01/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connections:
      id: azure.media_services.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1privateEndpointConnections?api-version=2023-01-01/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1privateEndpointConnections~1{name}?api-version=2023-01-01/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1privateEndpointConnections~1{name}?api-version=2023-01-01/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1privateEndpointConnections~1{name}?api-version=2023-01-01/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    locations:
      id: azure.media_services.locations
      name: locations
      title: locations
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Media~1locations~1{locationName}~1checkNameAvailability?api-version=2023-01-01/post'
            operationId: Locations_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EntityNameAvailabilityCheckOutput
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    operation_status:
      id: azure.media_services.operation_status
      name: operation_status
      title: operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks~1{trackName}~1operationStatuses~1{operationId}?api-version=2023-01-01/get'
            operationId: OperationStatuses_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetTrackOperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operation_results:
      id: azure.media_services.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks~1{trackName}~1operationResults~1{operationId}?api-version=2023-01-01/get'
            operationId: OperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetTrack
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    transforms:
      id: azure.media_services.transforms
      name: transforms
      title: transforms
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms?api-version=2022-07-01/get'
            operationId: Transforms_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TransformCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}?api-version=2022-07-01/get'
            operationId: Transforms_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Transform
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}?api-version=2022-07-01/put'
            operationId: Transforms_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Transform
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}?api-version=2022-07-01/delete'
            operationId: Transforms_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}?api-version=2022-07-01/patch'
            operationId: Transforms_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Transform
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/transforms/methods/get'
          - $ref: '#/components/x-stackQL-resources/transforms/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/transforms/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/transforms/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/transforms/methods/delete'
    jobs:
      id: azure.media_services.jobs
      name: jobs
      title: jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}~1jobs?api-version=2022-07-01/get'
            operationId: Jobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}~1jobs~1{jobName}?api-version=2022-07-01/get'
            operationId: Jobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}~1jobs~1{jobName}?api-version=2022-07-01/put'
            operationId: Jobs_Create
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: Job
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}~1jobs~1{jobName}?api-version=2022-07-01/delete'
            operationId: Jobs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}~1jobs~1{jobName}?api-version=2022-07-01/patch'
            operationId: Jobs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
        cancel_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1transforms~1{transformName}~1jobs~1{jobName}~1cancelJob?api-version=2022-07-01/post'
            operationId: Jobs_CancelJob
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
    streaming_policies:
      id: azure.media_services.streaming_policies
      name: streaming_policies
      title: streaming_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingPolicies?api-version=2023-01-01/get'
            operationId: StreamingPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingPolicyCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingPolicies~1{streamingPolicyName}?api-version=2023-01-01/get'
            operationId: StreamingPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingPolicy
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingPolicies~1{streamingPolicyName}?api-version=2023-01-01/put'
            operationId: StreamingPolicies_Create
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: StreamingPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingPolicies~1{streamingPolicyName}?api-version=2023-01-01/delete'
            operationId: StreamingPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/streaming_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/streaming_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/streaming_policies/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/streaming_policies/methods/delete'
    streaming_locators:
      id: azure.media_services.streaming_locators
      name: streaming_locators
      title: streaming_locators
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingLocators?api-version=2023-01-01/get'
            operationId: StreamingLocators_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingLocatorCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingLocators~1{streamingLocatorName}?api-version=2023-01-01/get'
            operationId: StreamingLocators_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingLocator
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingLocators~1{streamingLocatorName}?api-version=2023-01-01/put'
            operationId: StreamingLocators_Create
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: StreamingLocator
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingLocators~1{streamingLocatorName}?api-version=2023-01-01/delete'
            operationId: StreamingLocators_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/streaming_locators/methods/get'
          - $ref: '#/components/x-stackQL-resources/streaming_locators/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/streaming_locators/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/streaming_locators/methods/delete'
    streaming_locators_content_keys:
      id: azure.media_services.streaming_locators_content_keys
      name: streaming_locators_content_keys
      title: streaming_locators_content_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingLocators~1{streamingLocatorName}~1listContentKeys?api-version=2023-01-01/post'
            operationId: StreamingLocatorsContentKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListContentKeysResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/streaming_locators_content_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    streaming_locators_paths:
      id: azure.media_services.streaming_locators_paths
      name: streaming_locators_paths
      title: streaming_locators_paths
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1streamingLocators~1{streamingLocatorName}~1listPaths?api-version=2023-01-01/post'
            operationId: StreamingLocatorsPaths_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListPathsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/streaming_locators_paths/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    live_events:
      id: azure.media_services.live_events
      name: live_events
      title: live_events
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents?api-version=2022-11-01/get'
            operationId: LiveEvents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEventListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}?api-version=2022-11-01/get'
            operationId: LiveEvents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEvent
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}?api-version=2022-11-01/put'
            operationId: LiveEvents_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEvent
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}?api-version=2022-11-01/patch'
            operationId: LiveEvents_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEvent
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}?api-version=2022-11-01/delete'
            operationId: LiveEvents_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        allocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1allocate?api-version=2022-11-01/post'
            operationId: LiveEvents_Allocate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1start?api-version=2022-11-01/post'
            operationId: LiveEvents_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1stop?api-version=2022-11-01/post'
            operationId: LiveEvents_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1reset?api-version=2022-11-01/post'
            operationId: LiveEvents_Reset
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        async_operation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEventOperations~1{operationId}?api-version=2022-11-01/get'
            operationId: LiveEvents_AsyncOperation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AsyncOperationResult
        operation_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1operationLocations~1{operationId}?api-version=2022-11-01/get'
            operationId: LiveEvents_OperationLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEvent
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_events/methods/get'
          - $ref: '#/components/x-stackQL-resources/live_events/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/live_events/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/live_events/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_events/methods/delete'
    live_events_get_status:
      id: azure.media_services.live_events_get_status
      name: live_events_get_status
      title: live_events_get_status
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1getStatus?api-version=2022-11-01/post'
            operationId: LiveEventsGetStatus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEventGetStatusResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_events_get_status/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    live_events_get_stream_events:
      id: azure.media_services.live_events_get_stream_events
      name: live_events_get_stream_events
      title: live_events_get_stream_events
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1getStreamEvents?api-version=2022-11-01/post'
            operationId: LiveEventsGetStreamEvents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEventGetStreamEventsResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_events_get_stream_events/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    live_events_get_track_ingest_heartbeats:
      id: azure.media_services.live_events_get_track_ingest_heartbeats
      name: live_events_get_track_ingest_heartbeats
      title: live_events_get_track_ingest_heartbeats
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1getTrackIngestHeartbeats?api-version=2022-11-01/post'
            operationId: LiveEventsGetTrackIngestHeartbeats_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveEventGetTrackIngestHeartbeatsResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_events_get_track_ingest_heartbeats/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    live_outputs:
      id: azure.media_services.live_outputs
      name: live_outputs
      title: live_outputs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1liveOutputs?api-version=2022-11-01/get'
            operationId: LiveOutputs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveOutputListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1liveOutputs~1{liveOutputName}?api-version=2022-11-01/get'
            operationId: LiveOutputs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveOutput
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1liveOutputs~1{liveOutputName}?api-version=2022-11-01/put'
            operationId: LiveOutputs_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveOutput
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1liveOutputs~1{liveOutputName}?api-version=2022-11-01/delete'
            operationId: LiveOutputs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        async_operation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveOutputOperations~1{operationId}?api-version=2022-11-01/get'
            operationId: LiveOutputs_AsyncOperation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AsyncOperationResult
        operation_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1liveEvents~1{liveEventName}~1liveOutputs~1{liveOutputName}~1operationLocations~1{operationId}?api-version=2022-11-01/get'
            operationId: LiveOutputs_OperationLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LiveOutput
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_outputs/methods/get'
          - $ref: '#/components/x-stackQL-resources/live_outputs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/live_outputs/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_outputs/methods/delete'
    streaming_endpoints:
      id: azure.media_services.streaming_endpoints
      name: streaming_endpoints
      title: streaming_endpoints
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints?api-version=2022-11-01/get'
            operationId: StreamingEndpoints_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingEndpointListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}?api-version=2022-11-01/get'
            operationId: StreamingEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingEndpoint
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}?api-version=2022-11-01/put'
            operationId: StreamingEndpoints_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingEndpoint
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}?api-version=2022-11-01/patch'
            operationId: StreamingEndpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingEndpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}?api-version=2022-11-01/delete'
            operationId: StreamingEndpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        skus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}~1skus?api-version=2022-11-01/get'
            operationId: StreamingEndpoints_Skus
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingEndpointSkuInfoListResult
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}~1start?api-version=2022-11-01/post'
            operationId: StreamingEndpoints_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}~1stop?api-version=2022-11-01/post'
            operationId: StreamingEndpoints_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        scale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}~1scale?api-version=2022-11-01/post'
            operationId: StreamingEndpoints_Scale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        async_operation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpointOperations~1{operationId}?api-version=2022-11-01/get'
            operationId: StreamingEndpoints_AsyncOperation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AsyncOperationResult
        operation_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaservices~1{accountName}~1streamingEndpoints~1{streamingEndpointName}~1operationLocations~1{operationId}?api-version=2022-11-01/get'
            operationId: StreamingEndpoints_OperationLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingEndpoint
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/streaming_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/streaming_endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/streaming_endpoints/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/streaming_endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/streaming_endpoints/methods/delete'
    account_filters:
      id: azure.media_services.account_filters
      name: account_filters
      title: account_filters
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1accountFilters?api-version=2023-01-01/get'
            operationId: AccountFilters_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountFilterCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1accountFilters~1{filterName}?api-version=2023-01-01/get'
            operationId: AccountFilters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountFilter
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1accountFilters~1{filterName}?api-version=2023-01-01/put'
            operationId: AccountFilters_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountFilter
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1accountFilters~1{filterName}?api-version=2023-01-01/delete'
            operationId: AccountFilters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1accountFilters~1{filterName}?api-version=2023-01-01/patch'
            operationId: AccountFilters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountFilter
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_filters/methods/get'
          - $ref: '#/components/x-stackQL-resources/account_filters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/account_filters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/account_filters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/account_filters/methods/delete'
    assets:
      id: azure.media_services.assets
      name: assets
      title: assets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets?api-version=2023-01-01/get'
            operationId: Assets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}?api-version=2023-01-01/get'
            operationId: Assets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Asset
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}?api-version=2023-01-01/put'
            operationId: Assets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Asset
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}?api-version=2023-01-01/delete'
            operationId: Assets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}?api-version=2023-01-01/patch'
            operationId: Assets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Asset
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/get'
          - $ref: '#/components/x-stackQL-resources/assets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/assets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/delete'
    assets_container_sas:
      id: azure.media_services.assets_container_sas
      name: assets_container_sas
      title: assets_container_sas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1listContainerSas?api-version=2023-01-01/post'
            operationId: AssetsContainerSas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetContainerSas
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets_container_sas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    assets_encryption_keys:
      id: azure.media_services.assets_encryption_keys
      name: assets_encryption_keys
      title: assets_encryption_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1getEncryptionKey?api-version=2023-01-01/post'
            operationId: AssetsEncryptionKey_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageEncryptedAssetDecryptionData
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets_encryption_keys/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    assets_streaming_locators:
      id: azure.media_services.assets_streaming_locators
      name: assets_streaming_locators
      title: assets_streaming_locators
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1listStreamingLocators?api-version=2023-01-01/post'
            operationId: AssetsStreamingLocators_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListStreamingLocatorsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets_streaming_locators/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    asset_filters:
      id: azure.media_services.asset_filters
      name: asset_filters
      title: asset_filters
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1assetFilters?api-version=2023-01-01/get'
            operationId: AssetFilters_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetFilterCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1assetFilters~1{filterName}?api-version=2023-01-01/get'
            operationId: AssetFilters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetFilter
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1assetFilters~1{filterName}?api-version=2023-01-01/put'
            operationId: AssetFilters_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetFilter
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1assetFilters~1{filterName}?api-version=2023-01-01/delete'
            operationId: AssetFilters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1assetFilters~1{filterName}?api-version=2023-01-01/patch'
            operationId: AssetFilters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetFilter
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/asset_filters/methods/get'
          - $ref: '#/components/x-stackQL-resources/asset_filters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/asset_filters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/asset_filters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/asset_filters/methods/delete'
    tracks:
      id: azure.media_services.tracks
      name: tracks
      title: tracks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks?api-version=2023-01-01/get'
            operationId: Tracks_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetTrackCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks~1{trackName}?api-version=2023-01-01/get'
            operationId: Tracks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetTrack
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks~1{trackName}?api-version=2023-01-01/put'
            operationId: Tracks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssetTrack
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks~1{trackName}?api-version=2023-01-01/delete'
            operationId: Tracks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks~1{trackName}?api-version=2023-01-01/patch'
            operationId: Tracks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '202'
            schemaRef: AssetTrack
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tracks/methods/get'
          - $ref: '#/components/x-stackQL-resources/tracks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tracks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/tracks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tracks/methods/delete'
    tracks_track_data:
      id: azure.media_services.tracks_track_data
      name: tracks_track_data
      title: tracks_track_data
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1mediaServices~1{accountName}~1assets~1{assetName}~1tracks~1{trackName}~1updateTrackData?api-version=2023-01-01/post'
            operationId: TracksTrackData_Update
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vw_content_key_policies:
      id: azure.media_services.vw_content_key_policies
      name: vw_content_key_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.policyId') as "policy_id",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              contentKeyPolicyName
              FROM azure.media_services.content_key_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.policyId') as "policy_id",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                contentKeyPolicyName
                FROM azure.media_services.content_key_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_mediaservices:
      id: azure.media_services.vw_mediaservices
      name: vw_mediaservices
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              identity as identity,
              JSON_EXTRACT(properties, '$.mediaServiceId') as "media_service_id",
              JSON_EXTRACT(properties, '$.storageAccounts') as "storage_accounts",
              JSON_EXTRACT(properties, '$.storageAuthentication') as "storage_authentication",
              JSON_EXTRACT(properties, '$.encryption') as "encryption",
              JSON_EXTRACT(properties, '$.keyDelivery') as "key_delivery",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.minimumTlsVersion') as "minimum_tls_version",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.media_services.mediaservices
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                identity as identity,
                json_extract_path_text(properties, '$.mediaServiceId') as "media_service_id",
                json_extract_path_text(properties, '$.storageAccounts') as "storage_accounts",
                json_extract_path_text(properties, '$.storageAuthentication') as "storage_authentication",
                json_extract_path_text(properties, '$.encryption') as "encryption",
                json_extract_path_text(properties, '$.keyDelivery') as "key_delivery",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.minimumTlsVersion') as "minimum_tls_version",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.media_services.mediaservices
                WHERE subscriptionId = 'replace-me';
    vw_private_link_resources:
      id: azure.media_services.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              accountName,
              name
              FROM azure.media_services.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                accountName,
                name
                FROM azure.media_services.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.media_services.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              name
              FROM azure.media_services.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                name
                FROM azure.media_services.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_operation_results:
      id: azure.media_services.vw_operation_results
      name: vw_operation_results
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.track') as "track",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              assetName,
              trackName,
              operationId
              FROM azure.media_services.operation_results
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND assetName = 'replace-me' AND trackName = 'replace-me' AND operationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.track') as "track",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                assetName,
                trackName,
                operationId
                FROM azure.media_services.operation_results
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND assetName = 'replace-me' AND trackName = 'replace-me' AND operationId = 'replace-me';
    vw_transforms:
      id: azure.media_services.vw_transforms
      name: vw_transforms
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              subscriptionId,
              resourceGroupName,
              accountName,
              transformName
              FROM azure.media_services.transforms
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                subscriptionId,
                resourceGroupName,
                accountName,
                transformName
                FROM azure.media_services.transforms
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_jobs:
      id: azure.media_services.vw_jobs
      name: vw_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.input') as "input",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.priority') as "priority",
              JSON_EXTRACT(properties, '$.correlationData') as "correlation_data",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              subscriptionId,
              resourceGroupName,
              accountName,
              transformName,
              jobName
              FROM azure.media_services.jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND transformName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.input') as "input",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.priority') as "priority",
                json_extract_path_text(properties, '$.correlationData') as "correlation_data",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                subscriptionId,
                resourceGroupName,
                accountName,
                transformName,
                jobName
                FROM azure.media_services.jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND transformName = 'replace-me';
    vw_streaming_policies:
      id: azure.media_services.vw_streaming_policies
      name: vw_streaming_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.defaultContentKeyPolicyName') as "default_content_key_policy_name",
              JSON_EXTRACT(properties, '$.envelopeEncryption') as "envelope_encryption",
              JSON_EXTRACT(properties, '$.commonEncryptionCenc') as "common_encryption_cenc",
              JSON_EXTRACT(properties, '$.commonEncryptionCbcs') as "common_encryption_cbcs",
              JSON_EXTRACT(properties, '$.noEncryption') as "no_encryption",
              subscriptionId,
              resourceGroupName,
              accountName,
              streamingPolicyName
              FROM azure.media_services.streaming_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.defaultContentKeyPolicyName') as "default_content_key_policy_name",
                json_extract_path_text(properties, '$.envelopeEncryption') as "envelope_encryption",
                json_extract_path_text(properties, '$.commonEncryptionCenc') as "common_encryption_cenc",
                json_extract_path_text(properties, '$.commonEncryptionCbcs') as "common_encryption_cbcs",
                json_extract_path_text(properties, '$.noEncryption') as "no_encryption",
                subscriptionId,
                resourceGroupName,
                accountName,
                streamingPolicyName
                FROM azure.media_services.streaming_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_streaming_locators:
      id: azure.media_services.vw_streaming_locators
      name: vw_streaming_locators
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.assetName') as "asset_name",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.streamingLocatorId') as "streaming_locator_id",
              JSON_EXTRACT(properties, '$.streamingPolicyName') as "streaming_policy_name",
              JSON_EXTRACT(properties, '$.defaultContentKeyPolicyName') as "default_content_key_policy_name",
              JSON_EXTRACT(properties, '$.contentKeys') as "content_keys",
              JSON_EXTRACT(properties, '$.alternativeMediaId') as "alternative_media_id",
              JSON_EXTRACT(properties, '$.filters') as "filters",
              subscriptionId,
              resourceGroupName,
              accountName,
              streamingLocatorName
              FROM azure.media_services.streaming_locators
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.assetName') as "asset_name",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.streamingLocatorId') as "streaming_locator_id",
                json_extract_path_text(properties, '$.streamingPolicyName') as "streaming_policy_name",
                json_extract_path_text(properties, '$.defaultContentKeyPolicyName') as "default_content_key_policy_name",
                json_extract_path_text(properties, '$.contentKeys') as "content_keys",
                json_extract_path_text(properties, '$.alternativeMediaId') as "alternative_media_id",
                json_extract_path_text(properties, '$.filters') as "filters",
                subscriptionId,
                resourceGroupName,
                accountName,
                streamingLocatorName
                FROM azure.media_services.streaming_locators
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_live_events:
      id: azure.media_services.vw_live_events
      name: vw_live_events
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.input') as "input",
              JSON_EXTRACT(properties, '$.preview') as "preview",
              JSON_EXTRACT(properties, '$.encoding') as "encoding",
              JSON_EXTRACT(properties, '$.transcriptions') as "transcriptions",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.crossSiteAccessPolicies') as "cross_site_access_policies",
              JSON_EXTRACT(properties, '$.useStaticHostname') as "use_static_hostname",
              JSON_EXTRACT(properties, '$.hostnamePrefix') as "hostname_prefix",
              JSON_EXTRACT(properties, '$.streamOptions') as "stream_options",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              subscriptionId,
              resourceGroupName,
              accountName,
              liveEventName
              FROM azure.media_services.live_events
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.input') as "input",
                json_extract_path_text(properties, '$.preview') as "preview",
                json_extract_path_text(properties, '$.encoding') as "encoding",
                json_extract_path_text(properties, '$.transcriptions') as "transcriptions",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.crossSiteAccessPolicies') as "cross_site_access_policies",
                json_extract_path_text(properties, '$.useStaticHostname') as "use_static_hostname",
                json_extract_path_text(properties, '$.hostnamePrefix') as "hostname_prefix",
                json_extract_path_text(properties, '$.streamOptions') as "stream_options",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                subscriptionId,
                resourceGroupName,
                accountName,
                liveEventName
                FROM azure.media_services.live_events
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_live_outputs:
      id: azure.media_services.vw_live_outputs
      name: vw_live_outputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.assetName') as "asset_name",
              JSON_EXTRACT(properties, '$.archiveWindowLength') as "archive_window_length",
              JSON_EXTRACT(properties, '$.rewindWindowLength') as "rewind_window_length",
              JSON_EXTRACT(properties, '$.manifestName') as "manifest_name",
              JSON_EXTRACT(properties, '$.hls') as "hls",
              JSON_EXTRACT(properties, '$.outputSnapTime') as "output_snap_time",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              liveEventName,
              liveOutputName
              FROM azure.media_services.live_outputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND liveEventName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.assetName') as "asset_name",
                json_extract_path_text(properties, '$.archiveWindowLength') as "archive_window_length",
                json_extract_path_text(properties, '$.rewindWindowLength') as "rewind_window_length",
                json_extract_path_text(properties, '$.manifestName') as "manifest_name",
                json_extract_path_text(properties, '$.hls') as "hls",
                json_extract_path_text(properties, '$.outputSnapTime') as "output_snap_time",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                liveEventName,
                liveOutputName
                FROM azure.media_services.live_outputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND liveEventName = 'replace-me';
    vw_streaming_endpoints:
      id: azure.media_services.vw_streaming_endpoints
      name: vw_streaming_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              systemData as system_data,
              sku as sku,
              tags as tags,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.scaleUnits') as "scale_units",
              JSON_EXTRACT(properties, '$.availabilitySetName') as "availability_set_name",
              JSON_EXTRACT(properties, '$.accessControl') as "access_control",
              JSON_EXTRACT(properties, '$.maxCacheAge') as "max_cache_age",
              JSON_EXTRACT(properties, '$.customHostNames') as "custom_host_names",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.cdnEnabled') as "cdn_enabled",
              JSON_EXTRACT(properties, '$.cdnProvider') as "cdn_provider",
              JSON_EXTRACT(properties, '$.cdnProfile') as "cdn_profile",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.crossSiteAccessPolicies') as "cross_site_access_policies",
              JSON_EXTRACT(properties, '$.freeTrialEndTime') as "free_trial_end_time",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              subscriptionId,
              resourceGroupName,
              accountName,
              streamingEndpointName
              FROM azure.media_services.streaming_endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                systemData as system_data,
                sku as sku,
                tags as tags,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.scaleUnits') as "scale_units",
                json_extract_path_text(properties, '$.availabilitySetName') as "availability_set_name",
                json_extract_path_text(properties, '$.accessControl') as "access_control",
                json_extract_path_text(properties, '$.maxCacheAge') as "max_cache_age",
                json_extract_path_text(properties, '$.customHostNames') as "custom_host_names",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.cdnEnabled') as "cdn_enabled",
                json_extract_path_text(properties, '$.cdnProvider') as "cdn_provider",
                json_extract_path_text(properties, '$.cdnProfile') as "cdn_profile",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.crossSiteAccessPolicies') as "cross_site_access_policies",
                json_extract_path_text(properties, '$.freeTrialEndTime') as "free_trial_end_time",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                subscriptionId,
                resourceGroupName,
                accountName,
                streamingEndpointName
                FROM azure.media_services.streaming_endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_account_filters:
      id: azure.media_services.vw_account_filters
      name: vw_account_filters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.presentationTimeRange') as "presentation_time_range",
              JSON_EXTRACT(properties, '$.firstQuality') as "first_quality",
              JSON_EXTRACT(properties, '$.tracks') as "tracks",
              subscriptionId,
              resourceGroupName,
              accountName,
              filterName
              FROM azure.media_services.account_filters
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.presentationTimeRange') as "presentation_time_range",
                json_extract_path_text(properties, '$.firstQuality') as "first_quality",
                json_extract_path_text(properties, '$.tracks') as "tracks",
                subscriptionId,
                resourceGroupName,
                accountName,
                filterName
                FROM azure.media_services.account_filters
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_assets:
      id: azure.media_services.vw_assets
      name: vw_assets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.assetId') as "asset_id",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              JSON_EXTRACT(properties, '$.alternateId') as "alternate_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.container') as "container",
              JSON_EXTRACT(properties, '$.storageAccountName') as "storage_account_name",
              JSON_EXTRACT(properties, '$.storageEncryptionFormat') as "storage_encryption_format",
              JSON_EXTRACT(properties, '$.encryptionScope') as "encryption_scope",
              subscriptionId,
              resourceGroupName,
              accountName,
              assetName
              FROM azure.media_services.assets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.assetId') as "asset_id",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                json_extract_path_text(properties, '$.alternateId') as "alternate_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.container') as "container",
                json_extract_path_text(properties, '$.storageAccountName') as "storage_account_name",
                json_extract_path_text(properties, '$.storageEncryptionFormat') as "storage_encryption_format",
                json_extract_path_text(properties, '$.encryptionScope') as "encryption_scope",
                subscriptionId,
                resourceGroupName,
                accountName,
                assetName
                FROM azure.media_services.assets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_asset_filters:
      id: azure.media_services.vw_asset_filters
      name: vw_asset_filters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.presentationTimeRange') as "presentation_time_range",
              JSON_EXTRACT(properties, '$.firstQuality') as "first_quality",
              JSON_EXTRACT(properties, '$.tracks') as "tracks",
              subscriptionId,
              resourceGroupName,
              accountName,
              assetName,
              filterName
              FROM azure.media_services.asset_filters
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND assetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.presentationTimeRange') as "presentation_time_range",
                json_extract_path_text(properties, '$.firstQuality') as "first_quality",
                json_extract_path_text(properties, '$.tracks') as "tracks",
                subscriptionId,
                resourceGroupName,
                accountName,
                assetName,
                filterName
                FROM azure.media_services.asset_filters
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND assetName = 'replace-me';
    vw_tracks:
      id: azure.media_services.vw_tracks
      name: vw_tracks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.track') as "track",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              assetName,
              trackName
              FROM azure.media_services.tracks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND assetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.track') as "track",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                assetName,
                trackName
                FROM azure.media_services.tracks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND assetName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies?api-version=2023-01-01:
    get:
      summary: List Content Key Policies
      description: Lists the Content Key Policies in the account
      operationId: ContentKeyPolicies_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentKeyPolicyCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: Specifies the key by which the result collection should be ordered.
          required: false
          schema:
            type: string
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
      x-ms-odata: '#/components/schemas/ContentKeyPolicy'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}?api-version=2023-01-01:
    get:
      summary: Get a Content Key Policy
      description: Get the details of a Content Key Policy in the Media Services account
      operationId: ContentKeyPolicies_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentKeyPolicy'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: contentKeyPolicyName
          in: path
          description: The Content Key Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create or update an Content Key Policy
      description: Create or update a Content Key Policy in the Media Services account
      operationId: ContentKeyPolicies_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentKeyPolicy'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentKeyPolicy'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: contentKeyPolicyName
          in: path
          description: The Content Key Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentKeyPolicy'
    delete:
      summary: Delete a Content Key Policy
      description: Deletes a Content Key Policy in the Media Services account
      operationId: ContentKeyPolicies_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: contentKeyPolicyName
          in: path
          description: The Content Key Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    patch:
      summary: Update a Content Key Policy
      description: Updates an existing Content Key Policy in the Media Services account
      operationId: ContentKeyPolicies_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentKeyPolicy'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: contentKeyPolicyName
          in: path
          description: The Content Key Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentKeyPolicy'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}/getPolicyPropertiesWithSecrets?api-version=2023-01-01:
    post:
      summary: Get a Content Key Policy with secrets
      description: Get a Content Key Policy including secret values
      operationId: ContentKeyPoliciesPolicyPropertiesWithSecrets_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentKeyPolicyProperties'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: contentKeyPolicyName
          in: path
          description: The Content Key Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-original-operationId: ContentKeyPolicies_GetPolicyPropertiesWithSecrets
  /providers/Microsoft.Media/operations?api-version=2023-01-01:
    get:
      summary: List Operations
      description: Lists all the Media Services operations.
      operationId: Operations_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices?api-version=2023-01-01:
    get:
      summary: List Media Services accounts
      description: List Media Services accounts in the resource group
      operationId: Mediaservices_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaServiceCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}?api-version=2023-01-01:
    get:
      summary: Get a Media Services account
      description: Get the details of a Media Services account
      operationId: Mediaservices_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create or update a Media Services account
      description: Creates or updates a Media Services account
      operationId: Mediaservices_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaService'
      x-ms-long-running-operation: true
    delete:
      summary: Delete a Media Services account.
      description: Deletes a Media Services account
      operationId: Mediaservices_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    patch:
      summary: Update a Media Services account
      description: Updates an existing Media Services account
      operationId: Mediaservices_Update
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaServiceUpdate'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/syncStorageKeys?api-version=2023-01-01:
    post:
      summary: Synchronizes Storage Account Keys
      description: Synchronizes storage account keys for a storage account associated with the Media Service account.
      operationId: Mediaservices_SyncStorageKeys
      responses:
        '200':
          description: OK
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncStorageKeysInput'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/listEdgePolicies?api-version=2023-01-01:
    post:
      summary: List the media edge policies associated with the Media Services account.
      description: List all the media edge policies associated with the Media Services account.
      operationId: MediaservicesEdgePolicies_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgePolicies'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEdgePoliciesInput'
      x-ms-original-operationId: Mediaservices_ListEdgePolicies
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateLinkResources?api-version=2023-01-01:
    get:
      summary: Get list of group IDs.
      description: List supported group IDs.
      operationId: PrivateLinkResources_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateLinkResources/{name}?api-version=2023-01-01:
    get:
      summary: Get group ID.
      description: Get details of a group ID.
      operationId: PrivateLinkResources_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateEndpointConnections?api-version=2023-01-01:
    get:
      summary: List private endpoint connections.
      description: List all private endpoint connections.
      operationId: PrivateEndpointConnections_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateEndpointConnections/{name}?api-version=2023-01-01:
    get:
      summary: Get private endpoint connection.
      description: Get the details of a private endpoint connection.
      operationId: PrivateEndpointConnections_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Update a private endpoint connection.
      description: Update an existing private endpoint connection.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
    delete:
      summary: Delete a private endpoint connection.
      description: Deletes a private endpoint connection.
      operationId: PrivateEndpointConnections_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The Media Services account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability?api-version=2023-01-01:
    post:
      summary: Check Name Availability
      description: Checks whether the Media Service resource name is available.
      operationId: Locations_CheckNameAvailability
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNameAvailabilityCheckOutput'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - name: locationName
          in: path
          description: Location name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityInput'
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/mediaServicesOperationStatuses/{operationId}?api-version=2023-01-01:
    get:
      summary: Get operation status.
      description: Get media service operation status.
      operationId: MediaServicesOperationStatuses_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaServiceOperationStatus'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - name: locationName
          in: path
          description: Location name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation ID.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/mediaServicesOperationResults/{operationId}?api-version=2023-01-01:
    get:
      summary: Get operation result.
      description: Get media service operation result.
      operationId: MediaServicesOperationResults_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
        '202':
          description: Accepted
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - name: locationName
          in: path
          description: Location name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation Id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices?api-version=2023-01-01:
    get:
      summary: List Media Services accounts
      description: List Media Services accounts in the subscription.
      operationId: Mediaservices_ListBySubscription
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaServiceCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms?api-version=2022-07-01:
    get:
      summary: List Transforms
      description: Lists the Transforms in the account.
      operationId: Transforms_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Specifies the key by which the result collection should be ordered.
          required: false
          schema:
            type: string
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
      x-ms-odata: '#/components/schemas/Transform'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}?api-version=2022-07-01:
    get:
      summary: Get Transform
      description: Gets a Transform.
      operationId: Transforms_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create or Update Transform
      description: Creates or updates a new Transform.
      operationId: Transforms_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transform'
    delete:
      summary: Delete Transform
      description: Deletes a Transform.
      operationId: Transforms_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    patch:
      summary: Update Transform
      description: Updates a Transform.
      operationId: Transforms_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transform'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs?api-version=2022-07-01:
    get:
      summary: List Jobs
      description: Lists all of the Jobs for the Transform.
      operationId: Jobs_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Specifies the key by which the result collection should be ordered.
          required: false
          schema:
            type: string
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
      x-ms-odata: '#/components/schemas/Job'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}?api-version=2022-07-01:
    get:
      summary: Get Job
      description: Gets a Job.
      operationId: Jobs_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The Job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create Job
      description: Creates a Job.
      operationId: Jobs_Create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The Job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
    delete:
      summary: Delete Job
      description: Deletes a Job.
      operationId: Jobs_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The Job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    patch:
      summary: Update Job
      description: Update is only supported for description and priority. Updating Priority will take effect when the Job state is Queued or Scheduled and depending on the timing the priority update may be ignored.
      operationId: Jobs_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The Job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}/cancelJob?api-version=2022-07-01:
    post:
      summary: Cancel Job
      description: Cancel a Job.
      operationId: Jobs_CancelJob
      responses:
        '200':
          description: OK
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: transformName
          in: path
          description: The Transform name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The Job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies?api-version=2023-01-01:
    get:
      summary: List Streaming Policies
      description: Lists the Streaming Policies in the account
      operationId: StreamingPolicies_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingPolicyCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: Specifies the key by which the result collection should be ordered.
          required: false
          schema:
            type: string
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
      x-ms-odata: '#/components/schemas/StreamingPolicy'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies/{streamingPolicyName}?api-version=2023-01-01:
    get:
      summary: Get a Streaming Policy
      description: Get the details of a Streaming Policy in the Media Services account
      operationId: StreamingPolicies_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingPolicy'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingPolicyName
          in: path
          description: The Streaming Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create a Streaming Policy
      description: Create a Streaming Policy in the Media Services account
      operationId: StreamingPolicies_Create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingPolicy'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingPolicyName
          in: path
          description: The Streaming Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingPolicy'
    delete:
      summary: Delete a Streaming Policy
      description: Deletes a Streaming Policy in the Media Services account
      operationId: StreamingPolicies_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingPolicyName
          in: path
          description: The Streaming Policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators?api-version=2023-01-01:
    get:
      summary: List Streaming Locators
      description: Lists the Streaming Locators in the account
      operationId: StreamingLocators_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingLocatorCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: Specifies the key by which the result collection should be ordered.
          required: false
          schema:
            type: string
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
      x-ms-odata: '#/components/schemas/StreamingLocator'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}?api-version=2023-01-01:
    get:
      summary: Get a Streaming Locator
      description: Get the details of a Streaming Locator in the Media Services account
      operationId: StreamingLocators_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingLocator'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingLocatorName
          in: path
          description: The Streaming Locator name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create a Streaming Locator
      description: Create a Streaming Locator in the Media Services account
      operationId: StreamingLocators_Create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingLocator'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingLocatorName
          in: path
          description: The Streaming Locator name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingLocator'
    delete:
      summary: Delete a Streaming Locator
      description: Deletes a Streaming Locator in the Media Services account
      operationId: StreamingLocators_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingLocatorName
          in: path
          description: The Streaming Locator name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}/listContentKeys?api-version=2023-01-01:
    post:
      summary: List Content Keys
      description: List Content Keys used by this Streaming Locator
      operationId: StreamingLocatorsContentKeys_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContentKeysResponse'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingLocatorName
          in: path
          description: The Streaming Locator name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-original-operationId: StreamingLocators_ListContentKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}/listPaths?api-version=2023-01-01:
    post:
      summary: List Paths
      description: List Paths supported by this Streaming Locator
      operationId: StreamingLocatorsPaths_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPathsResponse'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: streamingLocatorName
          in: path
          description: The Streaming Locator name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-original-operationId: StreamingLocators_ListPaths
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents?api-version=2022-11-01:
    get:
      tags:
        - LiveEvents
      summary: List live events
      description: Lists all the live events in the account.
      operationId: LiveEvents_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEventListResult'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}?api-version=2022-11-01:
    get:
      tags:
        - LiveEvents
      summary: Get Live Event
      description: Gets properties of a live event.
      operationId: LiveEvents_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvent'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - LiveEvents
      summary: Create Live Event
      description: Creates a new live event.
      operationId: LiveEvents_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/StreamingResourceAutoStart'
      requestBody:
        description: Live event properties needed for creation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveEvent'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvent'
        '201':
          description: Created. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on monitoring asynchronous Azure operations using the Azure-AsyncOperation response header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvent'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - LiveEvents
      description: Updates settings on an existing live event.
      operationId: LiveEvents_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: Live event properties needed for patch.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveEvent'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvent'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvent'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - LiveEvents
      summary: Delete Live Event
      description: Deletes a live event.
      operationId: LiveEvents_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        '204':
          description: No content. The request has been accepted but the live event was not found.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/allocate?api-version=2022-11-01:
    post:
      tags:
        - LiveEvents
      summary: Allocate resources for a live event
      description: A live event is in StandBy state after allocation completes, and is ready to start.
      operationId: LiveEvents_Allocate
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/start?api-version=2022-11-01:
    post:
      tags:
        - LiveEvents
      summary: Start Live Event
      description: A live event in Stopped or StandBy state will be in Running state after the start operation completes.
      operationId: LiveEvents_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/stop?api-version=2022-11-01:
    post:
      tags:
        - LiveEvents
      summary: Stop Live Event
      description: Stops a running live event.
      operationId: LiveEvents_Stop
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: LiveEvent stop parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveEventActionInput'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/reset?api-version=2022-11-01:
    post:
      tags:
        - LiveEvents
      summary: Reset Live Event
      description: 'Resets an existing live event. All live outputs for the live event are deleted and the live event is stopped and will be started again. All assets used by the live outputs and streaming locators created on these assets are unaffected. '
      operationId: LiveEvents_Reset
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/getStatus?api-version=2022-11-01:
    post:
      tags:
        - LiveEvents
      summary: Get status of one live event
      description: Gets status telemetry of a live event.
      operationId: LiveEventsGetStatus_List
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEventGetStatusResult'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
          headers:
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        '304':
          description: Not Modified. The eTag in the request header is the same as the eTag in the storage container.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: LiveEvents_ListGetStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/getStreamEvents?api-version=2022-11-01:
    post:
      tags:
        - LiveEvents
      summary: Get stream events of one live event
      description: Get stream events telemetry of a live event.
      operationId: LiveEventsGetStreamEvents_List
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEventGetStreamEventsResult'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
          headers:
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        '304':
          description: Not Modified. The eTag in the request header is the same as the eTag in the storage container.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: LiveEvents_ListGetStreamEvents
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/getTrackIngestHeartbeats?api-version=2022-11-01:
    post:
      tags:
        - LiveEvents
      summary: Get track events of one live event
      description: Get track ingest heartbeat events telemetry of a live event.
      operationId: LiveEventsGetTrackIngestHeartbeats_List
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEventGetTrackIngestHeartbeatsResult'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
          headers:
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        '304':
          description: Not Modified. The eTag in the request header is the same as the eTag in the storage container.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: LiveEvents_ListGetTrackIngestHeartbeats
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEventOperations/{operationId}?api-version=2022-11-01:
    get:
      tags:
        - LiveEvents
      summary: Get operation status.
      description: Get a live event operation status.
      operationId: LiveEvents_AsyncOperation
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResult'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/operationLocations/{operationId}?api-version=2022-11-01:
    get:
      tags:
        - LiveEvents
      summary: Get operation status.
      description: Get a live event operation status.
      operationId: LiveEvents_OperationLocation
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvent'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/liveOutputs?api-version=2022-11-01:
    get:
      tags:
        - LiveOutputs
      summary: List Live Outputs
      description: Lists the live outputs of a live event.
      operationId: LiveOutputs_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveOutputListResult'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/liveOutputs/{liveOutputName}?api-version=2022-11-01:
    get:
      tags:
        - LiveOutputs
      summary: Get Live Output
      description: Gets a live output.
      operationId: LiveOutputs_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/LiveOutputName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveOutput'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - LiveOutputs
      summary: Create Live Output
      description: Creates a new live output.
      operationId: LiveOutputs_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/LiveOutputName'
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: Live Output properties needed for creation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveOutput'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveOutput'
        '201':
          description: Created. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on monitoring asynchronous Azure operations using the Azure-AsyncOperation response header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveOutput'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - LiveOutputs
      summary: Delete Live Output
      description: Deletes a live output. Deleting a live output does not delete the asset the live output is writing to.
      operationId: LiveOutputs_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/LiveOutputName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        '204':
          description: No content. The request has been accepted but the live output was not found.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveOutputOperations/{operationId}?api-version=2022-11-01:
    get:
      tags:
        - LiveOutputs
      summary: Get operation status.
      description: Get a Live Output operation status.
      operationId: LiveOutputs_AsyncOperation
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResult'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/liveOutputs/{liveOutputName}/operationLocations/{operationId}?api-version=2022-11-01:
    get:
      tags:
        - LiveOutputs
      summary: Get operation status.
      description: Get a Live Output operation status.
      operationId: LiveOutputs_OperationLocation
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/LiveEventName'
        - $ref: '#/components/parameters/LiveOutputName'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveOutput'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints?api-version=2022-11-01:
    get:
      tags:
        - StreamingEndpoints
      summary: List StreamingEndpoints
      description: Lists the streaming endpoints in the account.
      operationId: StreamingEndpoints_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpointListResult'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}?api-version=2022-11-01:
    get:
      tags:
        - StreamingEndpoints
      summary: Get StreamingEndpoint
      description: Gets a streaming endpoint.
      operationId: StreamingEndpoints_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpoint'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - StreamingEndpoints
      summary: Create StreamingEndpoint
      description: Creates a streaming endpoint.
      operationId: StreamingEndpoints_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/StreamingResourceAutoStart'
      requestBody:
        description: Streaming endpoint properties needed for creation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingEndpoint'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpoint'
        '201':
          description: Created. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on monitoring asynchronous Azure operations using the Azure-AsyncOperation response header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpoint'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - StreamingEndpoint
      summary: Update StreamingEndpoint
      description: Updates a existing streaming endpoint.
      operationId: StreamingEndpoints_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: Streaming endpoint properties needed for creation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingEndpoint'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpoint'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpoint'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - StreamingEndpoints
      summary: Delete StreamingEndpoint
      description: Deletes a streaming endpoint.
      operationId: StreamingEndpoints_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        '204':
          description: No content. The request has been accepted but the Streaming Endpoint was not found.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/skus?api-version=2022-11-01:
    get:
      tags:
        - StreamingEndpoints
      summary: List StreamingEndpoint skus
      description: List streaming endpoint supported skus.
      operationId: StreamingEndpoints_Skus
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpointSkuInfoListResult'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/start?api-version=2022-11-01:
    post:
      tags:
        - StreamingEndpoints
      summary: Start StreamingEndpoint
      description: Starts an existing streaming endpoint.
      operationId: StreamingEndpoints_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/stop?api-version=2022-11-01:
    post:
      tags:
        - StreamingEndpoints
      summary: Stop StreamingEndpoint
      description: Stops an existing streaming endpoint.
      operationId: StreamingEndpoints_Stop
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/scale?api-version=2022-11-01:
    post:
      tags:
        - StreamingEndpoints
      summary: Scale StreamingEndpoint
      description: Scales an existing streaming endpoint.
      operationId: StreamingEndpoints_Scale
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: Streaming endpoint scale parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingEntityScaleUnit'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpointOperations/{operationId}?api-version=2022-11-01:
    get:
      tags:
        - StreamingEndpoints
      summary: Get operation status.
      description: Get a streaming endpoint operation status.
      operationId: StreamingEndpoints_AsyncOperation
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResult'
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/operationLocations/{operationId}?api-version=2022-11-01:
    get:
      tags:
        - StreamingEndpoints
      summary: Get operation status.
      description: Get a streaming endpoint operation status.
      operationId: StreamingEndpoints_OperationLocation
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/StreamingEndpointName'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingEndpoint'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.
        default:
          description: The streaming error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/accountFilters?api-version=2023-01-01:
    get:
      summary: List Account Filters
      description: List Account Filters in the Media Services account.
      operationId: AccountFilters_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFilterCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/accountFilters/{filterName}?api-version=2023-01-01:
    get:
      summary: Get an Account Filter.
      description: Get the details of an Account Filter in the Media Services account.
      operationId: AccountFilters_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFilter'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: filterName
          in: path
          description: The Account Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create or update an Account Filter
      description: Creates or updates an Account Filter in the Media Services account.
      operationId: AccountFilters_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFilter'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFilter'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: filterName
          in: path
          description: The Account Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountFilter'
    delete:
      summary: Delete an Account Filter.
      description: Deletes an Account Filter in the Media Services account.
      operationId: AccountFilters_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: filterName
          in: path
          description: The Account Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    patch:
      summary: Update an Account Filter
      description: Updates an existing Account Filter in the Media Services account.
      operationId: AccountFilters_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFilter'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: filterName
          in: path
          description: The Account Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets?api-version=2023-01-01:
    get:
      summary: List Assets
      description: List Assets in the Media Services account with optional filtering and ordering
      operationId: Assets_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - $ref: '#/components/parameters/ApiVersion'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: Specifies the key by which the result collection should be ordered.
          required: false
          schema:
            type: string
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
      x-ms-odata: '#/components/schemas/Asset'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}?api-version=2023-01-01:
    get:
      summary: Get an Asset
      description: Get the details of an Asset in the Media Services account
      operationId: Assets_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create or update an Asset
      description: Creates or updates an Asset in the Media Services account
      operationId: Assets_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
    delete:
      summary: Delete an Asset.
      description: Deletes an Asset in the Media Services account
      operationId: Assets_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    patch:
      summary: Update an Asset
      description: Updates an existing Asset in the Media Services account
      operationId: Assets_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/listContainerSas?api-version=2023-01-01:
    post:
      summary: List the Asset URLs
      description: Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.
      operationId: AssetsContainerSas_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetContainerSas'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListContainerSasInput'
      x-ms-original-operationId: Assets_ListContainerSas
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/getEncryptionKey?api-version=2023-01-01:
    post:
      summary: Gets the Asset storage key
      description: Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API
      operationId: AssetsEncryptionKey_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageEncryptedAssetDecryptionData'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-original-operationId: Assets_GetEncryptionKey
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/listStreamingLocators?api-version=2023-01-01:
    post:
      summary: List Streaming Locators
      description: Lists Streaming Locators which are associated with this asset.
      operationId: AssetsStreamingLocators_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamingLocatorsResponse'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-original-operationId: Assets_ListStreamingLocators
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters?api-version=2023-01-01:
    get:
      summary: List Asset Filters
      description: List Asset Filters associated with the specified Asset.
      operationId: AssetFilters_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetFilterCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters/{filterName}?api-version=2023-01-01:
    get:
      summary: Get an Asset Filter.
      description: Get the details of an Asset Filter associated with the specified Asset.
      operationId: AssetFilters_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetFilter'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: filterName
          in: path
          description: The Asset Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create or update an Asset Filter
      description: Creates or updates an Asset Filter associated with the specified Asset.
      operationId: AssetFilters_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetFilter'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetFilter'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: filterName
          in: path
          description: The Asset Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetFilter'
    delete:
      summary: Delete an Asset Filter.
      description: Deletes an Asset Filter associated with the specified Asset.
      operationId: AssetFilters_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: filterName
          in: path
          description: The Asset Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    patch:
      summary: Update an Asset Filter
      description: Updates an existing Asset Filter associated with the specified Asset.
      operationId: AssetFilters_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetFilter'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: filterName
          in: path
          description: The Asset Filter name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/tracks?api-version=2023-01-01:
    get:
      summary: List Tracks in the Asset
      description: Lists the Tracks in the asset
      operationId: Tracks_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrackCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/tracks/{trackName}?api-version=2023-01-01:
    get:
      summary: Get a Track
      description: Get the details of a Track in the Asset
      operationId: Tracks_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrack'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: trackName
          in: path
          description: The Asset Track name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
    put:
      summary: Create or update a Track
      description: Create or update a Track in the asset
      operationId: Tracks_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrack'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrack'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: trackName
          in: path
          description: The Asset Track name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetTrack'
      x-ms-long-running-operation: true
    delete:
      summary: Delete a Track
      description: Deletes a Track in the asset
      operationId: Tracks_Delete
      responses:
        '202':
          description: Accepted
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: trackName
          in: path
          description: The Asset Track name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-long-running-operation: true
    patch:
      summary: Update an Track
      description: Updates an existing Track in the asset
      operationId: Tracks_Update
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrack'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: trackName
          in: path
          description: The Asset Track name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetTrack'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/tracks/{trackName}/updateTrackData?api-version=2023-01-01:
    post:
      summary: Update the track data
      description: Update the track data. Call this API after any changes are made to the track data stored in the asset container. For example, you have modified the WebVTT captions file in the Azure blob storage container for the asset, viewers will not see the new version of the captions unless this API is called. Note, the changes may not be reflected immediately. CDN cache may also need to be purged if applicable.
      operationId: TracksTrackData_Update
      responses:
        '202':
          description: Accepted
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: trackName
          in: path
          description: The Asset Track name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      x-ms-long-running-operation: true
      x-ms-original-operationId: Tracks_UpdateTrackData
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/tracks/{trackName}/operationStatuses/{operationId}?api-version=2023-01-01:
    get:
      summary: Get operation status.
      description: Get asset track operation status.
      operationId: OperationStatuses_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrackOperationStatus'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: trackName
          in: path
          description: The Asset Track name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation Id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/tracks/{trackName}/operationResults/{operationId}?api-version=2023-01-01:
    get:
      summary: Get operation result.
      description: Get asset track operation result.
      operationId: OperationResults_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrack'
        '202':
          description: Accepted
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/MediaServicesAccountName'
        - name: assetName
          in: path
          description: The Asset name.
          required: true
          schema:
            type: string
        - name: trackName
          in: path
          description: The Asset Track name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation Id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
