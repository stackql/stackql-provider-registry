openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Data Transfer service resource provider
  description: Azure Data Transfer service resource provider.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    flowNameParameter:
      name: flowName
      in: path
      description: The name for the flow that is to be onboarded.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9-]{3,64}$
        maxLength: 64
        minLength: 3
        type: string
    connectionNameParameter:
      name: connectionName
      in: path
      description: The name for the connection that is to be requested.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9-]{3,64}$
        maxLength: 64
        minLength: 3
        type: string
    pipelineNameParameter:
      name: pipelineName
      in: path
      description: The name for the pipeline that is to be requested.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9-]{3,64}$
        maxLength: 64
        minLength: 3
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    validateSchemaResult:
      type: object
      description: Result of the schema validation.
      properties:
        status:
          enum:
            - Succeeded
            - Failed
          type: string
          x-ms-enum:
            name: validateSchemaStatus
            modelAsString: true
          description: Validation status of the schema
        message:
          type: string
          description: Message describing the schema validation
    listApprovedSchemasRequest:
      type: object
      properties:
        pipeline:
          type: string
          description: The name of the pipeline to filter approved schemas.
        direction:
          description: The direction pipeline to filter approved schemas.
          enum:
            - Send
            - Receive
          type: string
          x-ms-enum:
            name: listApprovedSchemasDirection
            modelAsString: true
    selectedResource:
      type: object
      description: A resource selected from ARM
      properties:
        name:
          type: string
          description: Name of the connection
        id:
          type: string
          description: Id of the connection
        location:
          type: string
          description: Location of the connection
          x-ms-mutability:
            - create
            - read
        subscriptionName:
          type: string
          description: Name of the subscription with the connection
      required:
        - id
    flowProperties:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/selectedResource'
          description: The connection associated with this flow
        flowId:
          type: string
          description: Dataflow GUID associated with this flow
          readOnly: true
        keyVaultUri:
          type: string
          description: AME, PME, or TORUS only! AKV Chain Containing SAS Token
        linkStatus:
          enum:
            - Linked
            - Unlinked
          type: string
          x-ms-enum:
            name: linkStatusFlow
            modelAsString: true
          description: Link status of the current flow
          readOnly: true
        linkedFlowId:
          type: string
          description: Resource ID of the linked flow
          readOnly: true
        status:
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: flowStatus
            modelAsString: true
          description: Status of the current flow
        storageAccountName:
          type: string
          description: Storage Account
        storageAccountId:
          type: string
          format: arm-id
          description: Storage Account ID
          x-ms-arm-id-details:
            allowedResources:
              - scopes:
                  - '*'
                type: Microsoft.Storage/storageAccounts
        storageContainerName:
          type: string
          description: Storage Container Name
        serviceBusQueueId:
          type: string
          format: arm-id
          description: Service Bus Queue ID
          x-ms-arm-id-details:
            allowedResources:
              - scopes:
                  - '*'
                type: Microsoft.Storage/namespaces/queues
        flowType:
          $ref: '#/components/schemas/flowType'
          description: The flow type for this flow
        dataType:
          enum:
            - Blob
            - Table
          type: string
          x-ms-enum:
            name: dataType
            modelAsString: true
          description: Transfer Storage Blobs or Tables
        provisioningState:
          description: Provisioning state of the flow
          enum:
            - Failed
            - Succeeded
            - Canceled
            - Accepted
          type: string
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          readOnly: true
        policies:
          type: array
          description: The policies for this flow
          items:
            type: string
        schema:
          $ref: '#/components/schemas/schema'
          description: The selected schema for this flow
        messagingOptions:
          $ref: '#/components/schemas/messagingOptions'
          description: The messaging options for this flow
      description: Properties of flow
    flow:
      x-ms-azure-resource: true
      required:
        - location
      description: The flow resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/flowProperties'
        plan:
          $ref: '#/components/schemas/Plan'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed identity of the flow resource, if configured.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    pendingFlow:
      description: Pending flow object
      properties:
        subscriptionId:
          type: string
          description: Subscription ID of the pending flow.
          readOnly: true
        connectionId:
          type: string
          description: Connection ID of the pending flow.
          readOnly: true
        connection:
          $ref: '#/components/schemas/selectedResource'
          description: The connection associated with this flow
        flowId:
          type: string
          description: Dataflow GUID associated with this flow
          readOnly: true
        keyVaultUri:
          type: string
          description: AME, PME, or TORUS only! AKV Chain Containing SAS Token
        linkStatus:
          enum:
            - Linked
            - Unlinked
          type: string
          x-ms-enum:
            name: linkStatusFlow
            modelAsString: true
          description: Link status of the current flow
          readOnly: true
        linkedFlowId:
          type: string
          description: Resource ID of the linked flow
          readOnly: true
        status:
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: flowStatus
            modelAsString: true
          description: Status of the current flow
        storageAccountName:
          type: string
          description: Storage Account
        storageAccountId:
          type: string
          format: arm-id
          description: Storage Account ID
          x-ms-arm-id-details:
            allowedResources:
              - scopes:
                  - '*'
                type: Microsoft.Storage/storageAccounts
        storageContainerName:
          type: string
          description: Storage Container Name
        serviceBusQueueId:
          type: string
          format: arm-id
          description: Service Bus Queue ID
          x-ms-arm-id-details:
            allowedResources:
              - scopes:
                  - '*'
                type: Microsoft.Storage/namespaces/queues
        flowType:
          $ref: '#/components/schemas/flowType'
          description: The flow type for this flow
        dataType:
          enum:
            - Blob
            - Table
          type: string
          x-ms-enum:
            name: dataType
            modelAsString: true
          description: Transfer Storage Blobs or Tables
        provisioningState:
          description: Provisioning state of the flow
          enum:
            - Failed
            - Succeeded
            - Canceled
            - Accepted
          type: string
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          readOnly: true
        policies:
          type: array
          description: The policies for this flow
          items:
            type: string
        schema:
          $ref: '#/components/schemas/schema'
          description: The selected schema for this flow
        messagingOptions:
          $ref: '#/components/schemas/messagingOptions'
          description: The messaging options for this flow
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    flowsPatch:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed identity of the flow resource, if configured.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The flows resource patch definition.
    flowsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/flow'
          description: Flows array.
          x-ms-identifiers:
            - id
        nextLink:
          description: Link to next results
          type: string
      description: The flows list result.
    connectionProperties:
      type: object
      properties:
        pipeline:
          type: string
          description: Pipeline to use to transfer data
        direction:
          description: Direction of data movement
          enum:
            - Send
            - Receive
          type: string
          x-ms-enum:
            name: direction
            modelAsString: true
        justification:
          type: string
          description: Justification for the connection request
        status:
          description: Status of the connection
          enum:
            - InReview
            - Approved
            - Rejected
            - Accepted
          type: string
          x-ms-enum:
            name: status
            modelAsString: true
          readOnly: true
        statusReason:
          type: string
          description: Reason for status
          readOnly: true
        linkStatus:
          enum:
            - Linked
            - Unlinked
          type: string
          x-ms-enum:
            name: linkStatus
            modelAsString: true
          description: Link status of the current connection
          readOnly: true
        linkedConnectionId:
          type: string
          description: Resource ID of the linked connection
          readOnly: true
        flowTypes:
          $ref: '#/components/schemas/flowTypes'
          description: The flow types being requested for this connection
        requirementId:
          description: Requirement ID of the connection
          type: string
        remoteSubscriptionId:
          description: Subscription ID to link cloud subscriptions together
          type: string
        approver:
          description: Approver of this connection request
          type: string
          readOnly: true
        pin:
          description: PIN to link requests together
          type: string
        dateSubmitted:
          type: string
          format: date-time
          description: The timestamp that this connection request was submitted at
          readOnly: true
        primaryContact:
          type: string
          description: The primary contact for this connection request
        secondaryContacts:
          type: array
          description: The secondary contacts for this connection request
          items:
            type: string
        provisioningState:
          description: Provisioning state of the connection
          enum:
            - Failed
            - Succeeded
            - Canceled
            - Accepted
          type: string
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          readOnly: true
        policies:
          type: array
          description: The policies for this connection
          items:
            type: string
        schemas:
          description: The schemas for this connection
          $ref: '#/components/schemas/schemas'
      required:
        - pipeline
      description: Properties of connection
    connection:
      x-ms-azure-resource: true
      required:
        - location
      description: The connection resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/connectionProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    pendingConnection:
      description: Pending connection object
      properties:
        subscriptionId:
          type: string
          description: Subscription ID of the pending connection.
          readOnly: true
        pipeline:
          type: string
          description: Pipeline to use to transfer data
        direction:
          description: Direction of data movement
          enum:
            - Send
            - Receive
          type: string
          x-ms-enum:
            name: direction
            modelAsString: true
        justification:
          type: string
          description: Justification for the connection request
        status:
          description: Status of the connection
          enum:
            - InReview
            - Approved
            - Rejected
            - Accepted
          type: string
          x-ms-enum:
            name: status
            modelAsString: true
          readOnly: true
        statusReason:
          type: string
          description: Reason for status
          readOnly: true
        linkStatus:
          enum:
            - Linked
            - Unlinked
          type: string
          x-ms-enum:
            name: linkStatus
            modelAsString: true
          description: Link status of the current connection
          readOnly: true
        linkedConnectionId:
          type: string
          description: Resource ID of the linked connection
          readOnly: true
        flowTypes:
          $ref: '#/components/schemas/flowTypes'
          description: The flow types being requested for this connection
        requirementId:
          description: Requirement ID of the connection
          type: string
        remoteSubscriptionId:
          description: Subscription ID to link cloud subscriptions together
          type: string
        approver:
          description: Approver of this connection request
          type: string
          readOnly: true
        pin:
          description: PIN to link requests together
          type: string
        dateSubmitted:
          type: string
          format: date-time
          description: The timestamp that this connection request was submitted at
          readOnly: true
        primaryContact:
          type: string
          description: The primary contact for this connection request
        secondaryContacts:
          type: array
          description: The secondary contacts for this connection request
          items:
            type: string
        provisioningState:
          description: Provisioning state of the connection
          enum:
            - Failed
            - Succeeded
            - Canceled
            - Accepted
          type: string
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          readOnly: true
        policies:
          type: array
          description: The policies for this connection
          items:
            type: string
        schemas:
          description: The schemas for this connection
          $ref: '#/components/schemas/schemas'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    connectionsPatch:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The connections resource patch definition.
    connectionsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/connection'
          description: Connections array.
          x-ms-identifiers:
            - id
        nextLink:
          description: Link to next results
          type: string
      description: The connections list result.
    pendingConnectionsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/pendingConnection'
          description: Connections array.
          x-ms-identifiers:
            - id
        nextLink:
          description: Link to next results
          type: string
      description: The connections list result.
    pendingFlowsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/pendingFlow'
          description: flows array.
          x-ms-identifiers:
            - id
        nextLink:
          description: Link to next results
          type: string
      description: The connections list result.
    operationStatusProperties:
      type: object
      description: Operation status associated with the last patch request
      properties:
        status:
          enum:
            - Failed
            - Succeeded
          type: string
          x-ms-enum:
            name: operationStatusEnum
            modelAsString: true
          description: Operation status for the last patch request for this connection.
          readOnly: true
        id:
          type: string
          description: Operation status ID of the last patch request for this connection.
          readOnly: true
        message:
          type: string
          description: Message for the operation for the last patch request for this connection.
          readOnly: true
    internalMetadataProperties:
      type: object
      description: Internal metadata of the connection inside pipeline.
      properties:
        operationStatus:
          $ref: '#/components/schemas/operationStatusProperties'
        statusSetBy:
          type: string
          description: User that last set the approved status for this connection
          readOnly: true
      additionalProperties: {}
    pipelineConnection:
      description: Connection body inside a pipeline
      additionalProperties: {}
      required:
        - id
      properties:
        id:
          type: string
          description: Connection id inside pipeline
        name:
          type: string
          description: Connection name inside pipeline
          readOnly: true
        type:
          type: string
          description: Connection type inside pipeline
          readOnly: true
        location:
          type: string
          description: Connection location inside pipeline
          x-ms-mutability:
            - read
          readOnly: true
        etag:
          type: string
          description: Connection etag inside pipeline
          readOnly: true
        systemData:
          $ref: '#/components/schemas/systemData'
        properties:
          type: object
          description: Connection properties inside pipeline
          properties:
            internalMetadata:
              $ref: '#/components/schemas/internalMetadataProperties'
          additionalProperties: {}
      type: object
    pipelineProperties:
      type: object
      properties:
        remoteCloud:
          type: string
          description: Remote cloud of the data to be transferred or received
        displayName:
          type: string
          description: Display name of this pipeline
        connections:
          type: array
          items:
            $ref: '#/components/schemas/pipelineConnection'
          description: Connections associated with pipeline
          readOnly: true
          x-ms-identifiers:
            - id
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/subscriber'
          x-ms-identifiers: []
          description: Subscribers of this resource
        provisioningState:
          description: Provisioning state of the pipeline
          enum:
            - Failed
            - Succeeded
            - Canceled
            - Accepted
          type: string
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          readOnly: true
        policies:
          type: array
          description: The policies for this pipeline
          items:
            type: string
        flowTypes:
          $ref: '#/components/schemas/flowTypes'
          description: The flow types allowed for this pipeline
      required:
        - remoteCloud
      description: Properties of pipeline
    pipeline:
      x-ms-azure-resource: true
      required:
        - location
      description: The pipeline resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/pipelineProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    pipelinesPatch:
      description: The pipelines resource patch definition.
      properties:
        properties:
          type: object
          properties:
            connections:
              type: array
              items:
                $ref: '#/components/schemas/pipelineConnection'
              description: Connections associated with pipeline
              x-ms-identifiers:
                - id
            flowTypes:
              $ref: '#/components/schemas/flowTypes'
              description: The flow types allowed for this pipeline
          description: Properties of pipelines patch body.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    pipelinesListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/pipeline'
          description: Pipelines array.
          x-ms-identifiers:
            - id
        nextLink:
          description: Link to next results
          type: string
      description: The pipelines list result.
    subscriber:
      type: object
      properties:
        email:
          type: string
          description: Email of the subscriber
        notifications:
          type: integer
          format: int64
          description: Number specifying what notifications to receive
    schemas:
      type: array
      description: The schemas for this connection
      x-ms-identifiers:
        - connectionId
        - name
      items:
        $ref: '#/components/schemas/schema'
    schema:
      type: object
      description: The schema object.
      properties:
        id:
          type: string
          description: ID associated with this schema
        connectionId:
          type: string
          description: Connection ID associated with this schema
        status:
          enum:
            - New
            - Approved
          type: string
          x-ms-enum:
            name: schemaStatus
            modelAsString: true
          description: Status of the schema
        name:
          type: string
          description: Name of the schema
        content:
          type: string
          description: Content of the schema
        direction:
          description: The direction of the schema.
          enum:
            - Send
            - Receive
          type: string
          x-ms-enum:
            name: schemaDirection
            modelAsString: true
    schemasListResult:
      type: object
      properties:
        value:
          description: Schemas array.
          $ref: '#/components/schemas/schemas'
      description: The schemas list result.
    flowTypes:
      type: array
      description: The flow types that are allowed for this resource
      items:
        $ref: '#/components/schemas/flowType'
    flowType:
      enum:
        - Unknown
        - Complex
        - DevSecOps
        - Messaging
        - Mission
        - MicrosoftInternal
        - BasicFiles
        - Data
        - Standard
        - StreamingVideo
        - Opaque
        - MissionOpaqueXML
      type: string
      x-ms-enum:
        name: flowType
        modelAsString: true
      description: Flow type for the specified resource
    resourceBody:
      type: object
      properties:
        id:
          type: string
          description: ID of the resource.
        statusReason:
          type: string
          description: Reason for resource operation.
      required:
        - id
      description: The resource to reference.
    messagingOptions:
      type: object
      properties:
        billingTier:
          enum:
            - BlobTransport
            - Standard
            - Premium
          type: string
          x-ms-enum:
            name: flowBillingTier
            modelAsString: true
          description: Billing tier for this messaging flow
      description: The option associated with messaging flows.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    azure_data_transfer:
      id: azure.data_transfer.azure_data_transfer
      name: azure_data_transfer
      title: azure_data_transfer
      methods:
        validate_schema:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureDataTransfer~1validateSchema~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    azure_data_transfer_approved_schemas:
      id: azure.data_transfer.azure_data_transfer_approved_schemas
      name: azure_data_transfer_approved_schemas
      title: azure_data_transfer_approved_schemas
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureDataTransfer~1listApprovedSchemas~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/azure_data_transfer_approved_schemas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    flows:
      id: azure.data_transfer.flows
      name: flows
      title: flows
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1{flowName}~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1{flowName}~1?api-version=2024-05-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1{flowName}~1?api-version=2024-05-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1{flowName}~1?api-version=2024-05-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1{flowName}~1enable~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1{flowName}~1disable~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        link:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1{flowName}~1link~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_connection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1flows~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flows/methods/get'
          - $ref: '#/components/x-stackQL-resources/flows/methods/list_by_connection'
        insert:
          - $ref: '#/components/x-stackQL-resources/flows/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/flows/methods/delete'
    connections:
      id: azure.data_transfer.connections
      name: connections
      title: connections
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1?api-version=2024-05-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1?api-version=2024-05-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1?api-version=2024-05-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        link:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1link~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureDataTransfer~1connections~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/connections/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/connections/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connections/methods/delete'
    list_pending_connections:
      id: azure.data_transfer.list_pending_connections
      name: list_pending_connections
      title: list_pending_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1listPendingConnections~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/list_pending_connections/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    list_pending_flows:
      id: azure.data_transfer.list_pending_flows
      name: list_pending_flows
      title: list_pending_flows
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1connections~1{connectionName}~1listPendingFlows~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/list_pending_flows/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    pipelines:
      id: azure.data_transfer.pipelines
      name: pipelines
      title: pipelines
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1{pipelineName}~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1{pipelineName}~1?api-version=2024-05-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1{pipelineName}~1?api-version=2024-05-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1{pipelineName}~1?api-version=2024-05-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_connection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1{pipelineName}~1approveConnection~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reject_connection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1{pipelineName}~1rejectConnection~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/get'
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/delete'
    list_schemas:
      id: azure.data_transfer.list_schemas
      name: list_schemas
      title: list_schemas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureDataTransfer~1pipelines~1{pipelineName}~1listSchemas~1?api-version=2024-05-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/list_schemas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.data_transfer.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureDataTransfer~1operations~1?api-version=2024-05-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_flows:
      id: azure.data_transfer.vw_flows
      name: vw_flows
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              plan as plan,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.connection') as connection,
              JSON_EXTRACT(properties, '$.flowId') as flow_id,
              JSON_EXTRACT(properties, '$.keyVaultUri') as key_vault_uri,
              JSON_EXTRACT(properties, '$.linkStatus') as link_status,
              JSON_EXTRACT(properties, '$.linkedFlowId') as linked_flow_id,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.storageAccountName') as storage_account_name,
              JSON_EXTRACT(properties, '$.storageAccountId') as storage_account_id,
              JSON_EXTRACT(properties, '$.storageContainerName') as storage_container_name,
              JSON_EXTRACT(properties, '$.serviceBusQueueId') as service_bus_queue_id,
              JSON_EXTRACT(properties, '$.flowType') as flow_type,
              JSON_EXTRACT(properties, '$.dataType') as data_type,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.policies') as policies,
              JSON_EXTRACT(properties, '$.schema') as schema,
              JSON_EXTRACT(properties, '$.messagingOptions') as messaging_options,
              subscriptionId,
              resourceGroupName,
              connectionName,
              flowName
              FROM azure.data_transfer.flows
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND connectionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                plan as plan,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.connection') as connection,
                JSON_EXTRACT(properties, '$.flowId') as flow_id,
                JSON_EXTRACT(properties, '$.keyVaultUri') as key_vault_uri,
                JSON_EXTRACT(properties, '$.linkStatus') as link_status,
                JSON_EXTRACT(properties, '$.linkedFlowId') as linked_flow_id,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.storageAccountName') as storage_account_name,
                JSON_EXTRACT(properties, '$.storageAccountId') as storage_account_id,
                JSON_EXTRACT(properties, '$.storageContainerName') as storage_container_name,
                JSON_EXTRACT(properties, '$.serviceBusQueueId') as service_bus_queue_id,
                JSON_EXTRACT(properties, '$.flowType') as flow_type,
                JSON_EXTRACT(properties, '$.dataType') as data_type,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.policies') as policies,
                JSON_EXTRACT(properties, '$.schema') as schema,
                JSON_EXTRACT(properties, '$.messagingOptions') as messaging_options,
                subscriptionId,
                resourceGroupName,
                connectionName,
                flowName
                FROM azure.data_transfer.flows
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND connectionName = 'replace-me';
    vw_connections:
      id: azure.data_transfer.vw_connections
      name: vw_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.pipeline') as pipeline,
              JSON_EXTRACT(properties, '$.direction') as direction,
              JSON_EXTRACT(properties, '$.justification') as justification,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.statusReason') as status_reason,
              JSON_EXTRACT(properties, '$.linkStatus') as link_status,
              JSON_EXTRACT(properties, '$.linkedConnectionId') as linked_connection_id,
              JSON_EXTRACT(properties, '$.flowTypes') as flow_types,
              JSON_EXTRACT(properties, '$.requirementId') as requirement_id,
              JSON_EXTRACT(properties, '$.remoteSubscriptionId') as remote_subscription_id,
              JSON_EXTRACT(properties, '$.approver') as approver,
              JSON_EXTRACT(properties, '$.pin') as pin,
              JSON_EXTRACT(properties, '$.dateSubmitted') as date_submitted,
              JSON_EXTRACT(properties, '$.primaryContact') as primary_contact,
              JSON_EXTRACT(properties, '$.secondaryContacts') as secondary_contacts,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.policies') as policies,
              JSON_EXTRACT(properties, '$.schemas') as schemas,
              subscriptionId,
              resourceGroupName,
              connectionName
              FROM azure.data_transfer.connections
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.pipeline') as pipeline,
                JSON_EXTRACT(properties, '$.direction') as direction,
                JSON_EXTRACT(properties, '$.justification') as justification,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.statusReason') as status_reason,
                JSON_EXTRACT(properties, '$.linkStatus') as link_status,
                JSON_EXTRACT(properties, '$.linkedConnectionId') as linked_connection_id,
                JSON_EXTRACT(properties, '$.flowTypes') as flow_types,
                JSON_EXTRACT(properties, '$.requirementId') as requirement_id,
                JSON_EXTRACT(properties, '$.remoteSubscriptionId') as remote_subscription_id,
                JSON_EXTRACT(properties, '$.approver') as approver,
                JSON_EXTRACT(properties, '$.pin') as pin,
                JSON_EXTRACT(properties, '$.dateSubmitted') as date_submitted,
                JSON_EXTRACT(properties, '$.primaryContact') as primary_contact,
                JSON_EXTRACT(properties, '$.secondaryContacts') as secondary_contacts,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.policies') as policies,
                JSON_EXTRACT(properties, '$.schemas') as schemas,
                subscriptionId,
                resourceGroupName,
                connectionName
                FROM azure.data_transfer.connections
                WHERE subscriptionId = 'replace-me';
    vw_pipelines:
      id: azure.data_transfer.vw_pipelines
      name: vw_pipelines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.remoteCloud') as remote_cloud,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.connections') as connections,
              JSON_EXTRACT(properties, '$.subscribers') as subscribers,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.policies') as policies,
              JSON_EXTRACT(properties, '$.flowTypes') as flow_types,
              subscriptionId,
              resourceGroupName,
              pipelineName
              FROM azure.data_transfer.pipelines
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.remoteCloud') as remote_cloud,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.connections') as connections,
                JSON_EXTRACT(properties, '$.subscribers') as subscribers,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.policies') as policies,
                JSON_EXTRACT(properties, '$.flowTypes') as flow_types,
                subscriptionId,
                resourceGroupName,
                pipelineName
                FROM azure.data_transfer.pipelines
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.AzureDataTransfer/validateSchema/?api-version=2024-05-07:
    post:
      description: Validates a schema for Azure Data Transfer.
      operationId: AzureDataTransfer_validateSchema
      parameters: []
      requestBody:
        description: The schema to validate
        required: true
        x-ms-requestBody-name: schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        '200':
          description: Result of the schema validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateSchemaResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AzureDataTransfer/listApprovedSchemas/?api-version=2024-05-07:
    post:
      description: Lists approved schemas for Azure Data Transfer.
      operationId: AzureDataTransfer_listApprovedSchemas
      parameters: []
      requestBody:
        description: The request to list approved schemas.
        required: true
        x-ms-requestBody-name: pipeline
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listApprovedSchemasRequest'
      responses:
        '200':
          description: List of approved schemas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemasListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/?api-version=2024-05-07:
    get:
      description: Gets flow resource.
      operationId: Flows_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/flowNameParameter'
      responses:
        '200':
          description: Retrieved the flows resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Creates or updates the flow resource.
      operationId: Flows_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/flowNameParameter'
      requestBody:
        description: Flow body
        required: true
        x-ms-requestBody-name: flow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/flow'
      responses:
        '200':
          description: Created the flows resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
        '201':
          description: Accepted creation the flows resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Deletes the flow resource.
      operationId: Flows_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/flowNameParameter'
      responses:
        '202':
          description: Accepted delete the flows resource.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        '204':
          description: Deleted the flows resource.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      description: Updates the flow resource.
      operationId: Flows_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/flowNameParameter'
      requestBody:
        description: Flow body
        required: true
        x-ms-requestBody-name: flow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/flowsPatch'
      responses:
        '200':
          description: Updated the flows resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
        '202':
          description: Accepted update to the flows resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/enable/?api-version=2024-05-07:
    post:
      description: Enables the specified flow.
      operationId: Flows_Enable
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/flowNameParameter'
      responses:
        '200':
          description: Enables a flow.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
        '202':
          description: Enables a flow.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/disable/?api-version=2024-05-07:
    post:
      description: Disables the specified flow
      operationId: Flows_Disable
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/flowNameParameter'
      responses:
        '200':
          description: Disables a flow.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
        '202':
          description: Disables a flow.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/link/?api-version=2024-05-07:
    post:
      description: Links the specified flow.
      operationId: Flows_Link
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/flowNameParameter'
      requestBody:
        description: Flow body
        required: true
        x-ms-requestBody-name: flow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceBody'
      responses:
        '200':
          description: Links a flow.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flow'
        '202':
          description: Links a flow.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/?api-version=2024-05-07:
    get:
      description: Gets flows in a connection.
      operationId: Flows_ListByConnection
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      responses:
        '200':
          description: Listed all flows under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flowsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/?api-version=2024-05-07:
    get:
      description: Gets connection resource.
      operationId: Connections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      responses:
        '200':
          description: Retrieved the connections resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Creates or updates the connection resource.
      operationId: Connections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      requestBody:
        description: Connection body
        required: true
        x-ms-requestBody-name: connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connection'
      responses:
        '200':
          description: Created the connections resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
        '201':
          description: Accepted create of the connections resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Deletes the connection resource.
      operationId: Connections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      responses:
        '202':
          description: Accepted delete the connections resource.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        '204':
          description: Deleted the connections resource.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      description: Updates the connection resource.
      operationId: Connections_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      requestBody:
        description: Connection body
        required: true
        x-ms-requestBody-name: connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectionsPatch'
      responses:
        '200':
          description: Updated the connections resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
        '202':
          description: Accepted update to the connections resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/link/?api-version=2024-05-07:
    post:
      description: Links the connection to its pending connection.
      operationId: Connections_Link
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      requestBody:
        description: Connection body
        required: true
        x-ms-requestBody-name: connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceBody'
      responses:
        '200':
          description: Links a connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
        '202':
          description: Links a connection.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/listPendingConnections/?api-version=2024-05-07:
    post:
      description: Lists all pending connections for a connection.
      operationId: ListPendingConnections_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      responses:
        '200':
          description: Listed all pending connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pendingConnectionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/listPendingFlows/?api-version=2024-05-07:
    post:
      description: Lists all pending flows for a connection.
      operationId: ListPendingFlows_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
      responses:
        '200':
          description: Listed all connections under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pendingFlowsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/?api-version=2024-05-07:
    get:
      description: Gets connections in a resource group.
      operationId: Connections_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Listed all connections under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureDataTransfer/connections/?api-version=2024-05-07:
    get:
      description: Gets connections in a subscription.
      operationId: Connections_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Listed all connections under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/?api-version=2024-05-07:
    get:
      description: Gets pipeline resource.
      operationId: Pipelines_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/pipelineNameParameter'
      responses:
        '200':
          description: Retrieved the pipelines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Creates or updates the pipeline resource.
      operationId: Pipelines_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/pipelineNameParameter'
      requestBody:
        description: Pipeline body
        required: true
        x-ms-requestBody-name: pipeline
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pipeline'
      responses:
        '200':
          description: Created the pipelines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline'
        '201':
          description: Accepted create of the pipelines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Deletes the pipeline resource.
      operationId: Pipelines_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/pipelineNameParameter'
      responses:
        '202':
          description: Accepted delete of the pipelines resource.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        '204':
          description: Deleted the pipelines resource.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      description: Updates the pipeline resource.
      operationId: Pipelines_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/pipelineNameParameter'
      requestBody:
        description: Pipeline body
        required: true
        x-ms-requestBody-name: pipeline
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pipelinesPatch'
      responses:
        '200':
          description: Updated the pipelines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline'
        '202':
          description: Accepted update to the pipelines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline'
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/approveConnection/?api-version=2024-05-07:
    post:
      description: Approves the specified connection in a pipeline.
      operationId: Pipelines_ApproveConnection
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/pipelineNameParameter'
      requestBody:
        description: Connection body
        required: true
        x-ms-requestBody-name: connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceBody'
      responses:
        '200':
          description: Approves a connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
        '202':
          description: Approves a connection.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/rejectConnection/?api-version=2024-05-07:
    post:
      description: Rejects the specified connection in a pipeline.
      operationId: Pipelines_RejectConnection
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/pipelineNameParameter'
      requestBody:
        description: Connection body
        required: true
        x-ms-requestBody-name: connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceBody'
      responses:
        '200':
          description: Rejects a connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
        '202':
          description: Rejects a connection.
          headers:
            location:
              schema:
                type: string
              description: Location response header
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/listSchemas/?api-version=2024-05-07:
    post:
      description: Lists the schemas for the specified connection in a pipeline.
      operationId: ListSchemas_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/pipelineNameParameter'
      requestBody:
        description: Schema(s) to retrieve
        required: true
        x-ms-requestBody-name: schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        '200':
          description: Approves a connection.
          content:
            application/json:
              schema:
                description: The schemas for this connection
                $ref: '#/components/schemas/schemasListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/?api-version=2024-05-07:
    get:
      description: Gets pipelines in a resource group.
      operationId: Pipelines_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Listed all pipelines under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipelinesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureDataTransfer/pipelines/?api-version=2024-05-07:
    get:
      description: Gets pipelines in a subscription.
      operationId: Pipelines_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Listed all pipelines under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipelinesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AzureDataTransfer/operations/?api-version=2024-05-07:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Microsoft.AzureDataTransfer REST API operations.
      parameters: []
      responses:
        '200':
          description: Listed all of the available operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
