openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Kubernetes Fleet Manager
  description: Azure Kubernetes Fleet Manager (Fleet) enables at-scale management of multiple Azure Kubernetes Service (AKS) clusters
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    APIServerAccessProfile:
      type: object
      description: Access profile for the Fleet hub API server.
      properties:
        enablePrivateCluster:
          type: boolean
          description: Whether to create the Fleet hub as a private cluster or not.
          x-ms-mutability:
            - read
            - create
    AgentProfile:
      type: object
      description: Agent profile for the Fleet hub.
      properties:
        subnetId:
          $ref: '#/components/schemas/SubnetResourceId'
          description: The ID of the subnet which the Fleet hub node will join on startup. If this is not specified, a vnet and subnet will be generated and used.
          x-ms-mutability:
            - read
            - create
        vmSize:
          type: string
          description: The virtual machine size of the Fleet hub.
          x-ms-mutability:
            - read
            - create
    ClusterResourceId:
      type: string
      format: arm-id
      description: A type definition that refers the id to an Azure Resource Manager resource.
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ContainerService/managedClusters
    Fleet:
      description: The Fleet resource.
      properties:
        properties:
          $ref: '#/components/schemas/FleetProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        eTag:
          type: string
          description: If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
          readOnly: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: Managed identity.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    FleetCredentialResult:
      type: object
      description: One credential result item.
      properties:
        name:
          type: string
          description: The name of the credential.
          readOnly: true
        value:
          type: string
          format: byte
          description: Base64-encoded Kubernetes configuration file.
          readOnly: true
    FleetCredentialResults:
      type: object
      description: The Credential results response.
      properties:
        kubeconfigs:
          type: array
          description: Array of base64-encoded Kubernetes configuration files.
          items:
            $ref: '#/components/schemas/FleetCredentialResult'
          readOnly: true
          x-ms-identifiers:
            - name
    FleetHubProfile:
      type: object
      description: The FleetHubProfile configures the fleet hub.
      properties:
        dnsPrefix:
          type: string
          description: DNS prefix used to create the FQDN for the Fleet hub.
          minLength: 1
          maxLength: 54
          pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][a-zA-Z0-9-]{0,52}[a-zA-Z0-9]$
          x-ms-mutability:
            - read
            - create
        apiServerAccessProfile:
          $ref: '#/components/schemas/APIServerAccessProfile'
          description: The access profile for the Fleet hub API server.
          x-ms-mutability:
            - read
            - create
        agentProfile:
          $ref: '#/components/schemas/AgentProfile'
          description: The agent profile for the Fleet hub.
          x-ms-mutability:
            - read
            - create
        fqdn:
          type: string
          description: The FQDN of the Fleet hub.
          readOnly: true
        kubernetesVersion:
          type: string
          description: The Kubernetes version of the Fleet hub.
          readOnly: true
        portalFqdn:
          type: string
          description: The Azure Portal FQDN of the Fleet hub.
          readOnly: true
    FleetListResult:
      type: object
      description: The response of a Fleet list operation.
      properties:
        value:
          type: array
          description: The Fleet items on this page
          items:
            $ref: '#/components/schemas/Fleet'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    FleetMember:
      description: A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure.
      properties:
        properties:
          $ref: '#/components/schemas/FleetMemberProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        eTag:
          type: string
          description: If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
          readOnly: true
      type: object
    FleetMemberListResult:
      type: object
      description: The response of a FleetMember list operation.
      properties:
        value:
          type: array
          description: The FleetMember items on this page
          items:
            $ref: '#/components/schemas/FleetMember'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    FleetMemberProperties:
      type: object
      description: A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure.
      properties:
        clusterResourceId:
          $ref: '#/components/schemas/ClusterResourceId'
          description: 'The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}''.'
          x-ms-mutability:
            - read
            - create
        group:
          type: string
          description: The group this member belongs to for multi-cluster update management.
          minLength: 1
          maxLength: 50
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
        provisioningState:
          $ref: '#/components/schemas/FleetMemberProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - clusterResourceId
    FleetMemberProvisioningState:
      type: string
      description: The provisioning state of the last accepted operation.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Joining
        - Leaving
        - Updating
      x-ms-enum:
        name: FleetMemberProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Joining
            value: Joining
            description: The provisioning state of a member joining a fleet.
          - name: Leaving
            value: Leaving
            description: The provisioning state of a member leaving a fleet.
          - name: Updating
            value: Updating
            description: The provisioning state of a member being updated.
      readOnly: true
    FleetMemberUpdate:
      description: The type used for update operations of the FleetMember.
      properties:
        properties:
          $ref: '#/components/schemas/FleetMemberUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    FleetMemberUpdateProperties:
      type: object
      description: The updatable properties of the FleetMember.
      properties:
        group:
          type: string
          description: The group this member belongs to for multi-cluster update management.
          minLength: 1
          maxLength: 50
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
    FleetPatch:
      type: object
      description: Properties of a Fleet that can be patched.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: Managed identity.
    FleetProperties:
      type: object
      description: Fleet properties.
      properties:
        provisioningState:
          $ref: '#/components/schemas/FleetProvisioningState'
          description: The status of the last operation.
          readOnly: true
        hubProfile:
          $ref: '#/components/schemas/FleetHubProfile'
          description: The FleetHubProfile configures the Fleet's hub.
    FleetProvisioningState:
      type: string
      description: The provisioning state of the last accepted operation.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: FleetProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Creating
            value: Creating
            description: The provisioning state of a fleet being created.
          - name: Updating
            value: Updating
            description: The provisioning state of a fleet being updated.
          - name: Deleting
            value: Deleting
            description: The provisioning state of a fleet being deleted.
      readOnly: true
    FleetUpdateStrategy:
      description: Defines a multi-stage process to perform update operations across members of a Fleet.
      properties:
        properties:
          $ref: '#/components/schemas/FleetUpdateStrategyProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        eTag:
          type: string
          description: If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
          readOnly: true
      type: object
    FleetUpdateStrategyListResult:
      type: object
      description: The response of a FleetUpdateStrategy list operation.
      properties:
        value:
          type: array
          description: The FleetUpdateStrategy items on this page
          items:
            $ref: '#/components/schemas/FleetUpdateStrategy'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    FleetUpdateStrategyProperties:
      type: object
      description: The properties of the UpdateStrategy.
      properties:
        provisioningState:
          $ref: '#/components/schemas/FleetUpdateStrategyProvisioningState'
          description: The provisioning state of the UpdateStrategy resource.
          readOnly: true
        strategy:
          $ref: '#/components/schemas/UpdateRunStrategy'
          description: Defines the update sequence of the clusters.
          x-ms-mutability:
            - read
            - update
            - create
      required:
        - strategy
    FleetUpdateStrategyProvisioningState:
      type: string
      description: The provisioning state of the UpdateStrategy resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: FleetUpdateStrategyProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
      readOnly: true
    FleetUpdateStrategyResourceId:
      type: string
      format: arm-id
      description: A type definition that refers the id to an Azure Resource Manager resource.
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ContainerService/fleets/updateStrategies
    KubernetesVersion:
      type: string
    ManagedClusterUpdate:
      type: object
      description: The update to be applied to the ManagedClusters.
      properties:
        upgrade:
          $ref: '#/components/schemas/ManagedClusterUpgradeSpec'
          description: The upgrade to apply to the ManagedClusters.
        nodeImageSelection:
          $ref: '#/components/schemas/NodeImageSelection'
          description: The node image upgrade to be applied to the target nodes in update run.
          x-ms-mutability:
            - read
            - create
      required:
        - upgrade
    ManagedClusterUpgradeSpec:
      type: object
      description: The upgrade to apply to a ManagedCluster.
      properties:
        type:
          $ref: '#/components/schemas/ManagedClusterUpgradeType'
          description: ManagedClusterUpgradeType is the type of upgrade to be applied.
        kubernetesVersion:
          $ref: '#/components/schemas/KubernetesVersion'
          description: The Kubernetes version to upgrade the member clusters to.
      required:
        - type
    ManagedClusterUpgradeType:
      type: string
      description: The type of upgrade to perform when targeting ManagedClusters.
      enum:
        - Full
        - NodeImageOnly
        - ControlPlaneOnly
      x-ms-enum:
        name: ManagedClusterUpgradeType
        modelAsString: true
        values:
          - name: Full
            value: Full
            description: Full upgrades the control plane and all agent pools of the target ManagedClusters. Requires the ManagedClusterUpgradeSpec.KubernetesVersion property to be set.
          - name: NodeImageOnly
            value: NodeImageOnly
            description: NodeImageOnly upgrades only the node images of the target ManagedClusters. Requires the ManagedClusterUpgradeSpec.KubernetesVersion property to NOT be set.
          - name: ControlPlaneOnly
            value: ControlPlaneOnly
            description: ControlPlaneOnly upgrades only targets the KubernetesVersion of the ManagedClusters and will not be applied to the AgentPool. Requires the ManagedClusterUpgradeSpec.KubernetesVersion property to be set.
    MemberUpdateStatus:
      type: object
      description: The status of a member update operation.
      properties:
        status:
          $ref: '#/components/schemas/UpdateStatus'
          description: The status of the MemberUpdate operation.
          readOnly: true
        name:
          type: string
          description: The name of the FleetMember.
          readOnly: true
        clusterResourceId:
          type: string
          description: The Azure resource id of the target Kubernetes cluster.
          readOnly: true
        operationId:
          type: string
          description: The operation resource id of the latest attempt to perform the operation.
          readOnly: true
        message:
          type: string
          description: The status message after processing the member update operation.
          readOnly: true
    NodeImageSelection:
      type: object
      description: The node image upgrade to be applied to the target nodes in update run.
      properties:
        type:
          $ref: '#/components/schemas/NodeImageSelectionType'
          description: The node image upgrade type.
          x-ms-mutability:
            - read
            - create
      required:
        - type
    NodeImageSelectionStatus:
      type: object
      description: The node image upgrade specs for the update run.
      properties:
        selectedNodeImageVersions:
          type: array
          description: The image versions to upgrade the nodes to.
          items:
            $ref: '#/components/schemas/NodeImageVersion'
          readOnly: true
          x-ms-identifiers:
            - version
    NodeImageSelectionType:
      type: string
      description: The node image upgrade type.
      enum:
        - Latest
        - Consistent
      x-ms-enum:
        name: NodeImageSelectionType
        modelAsString: true
        values:
          - name: Latest
            value: Latest
            description: Use the latest image version when upgrading nodes. Clusters may use different image versions (e.g., 'AKSUbuntu-1804gen2containerd-2021.10.12' and 'AKSUbuntu-1804gen2containerd-2021.10.19') because, for example, the latest available version is different in different regions.
          - name: Consistent
            value: Consistent
            description: 'The image versions to upgrade nodes to are selected as described below: for each node pool in managed clusters affected by the update run, the system selects the latest image version such that it is available across all other node pools (in all other clusters) of the same image type. As a result, all node pools of the same image type will be upgraded to the same image version. For example, if the latest image version for image type ''AKSUbuntu-1804gen2containerd'' is ''AKSUbuntu-1804gen2containerd-2021.10.12'' for a node pool in cluster A in region X, and is ''AKSUbuntu-1804gen2containerd-2021.10.17'' for a node pool in cluster B in region Y, the system will upgrade both node pools to image version ''AKSUbuntu-1804gen2containerd-2021.10.12''.'
    NodeImageVersion:
      type: object
      description: The node upgrade image version.
      properties:
        version:
          type: string
          description: The image version to upgrade the nodes to (e.g., 'AKSUbuntu-1804gen2containerd-2022.12.13').
          readOnly: true
    SkipProperties:
      type: object
      description: The properties of a skip operation containing multiple skip requests.
      properties:
        targets:
          type: array
          description: The targets to skip.
          items:
            $ref: '#/components/schemas/SkipTarget'
          x-ms-identifiers:
            - type
            - name
      required:
        - targets
    SkipTarget:
      type: object
      description: The definition of a single skip request.
      properties:
        type:
          $ref: '#/components/schemas/TargetType'
          description: The skip target type.
        name:
          type: string
          description: |-
            The skip target's name. 
            To skip a member/group/stage, use the member/group/stage's name;
            Tp skip an after stage wait, use the parent stage's name.
      required:
        - type
        - name
    SubnetResourceId:
      type: string
      format: arm-id
      description: A type definition that refers the id to an Azure Resource Manager resource.
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.Network/virtualNetworks/subnets
    TargetType:
      type: string
      description: The target type of a skip request.
      enum:
        - Member
        - Group
        - Stage
        - AfterStageWait
      x-ms-enum:
        name: TargetType
        modelAsString: true
        values:
          - name: Member
            value: Member
            description: Skip the update of a member.
          - name: Group
            value: Group
            description: Skip the update of a group.
          - name: Stage
            value: Stage
            description: Skip the update of an entire stage including the after stage wait.
          - name: AfterStageWait
            value: AfterStageWait
            description: Skip the update of the after stage wait of a certain stage.
    UpdateGroup:
      type: object
      description: A group to be updated.
      properties:
        name:
          type: string
          description: |-
            Name of the group.
            It must match a group name of an existing fleet member. 
          minLength: 1
          maxLength: 50
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
      required:
        - name
    UpdateGroupStatus:
      type: object
      description: The status of a UpdateGroup.
      properties:
        status:
          $ref: '#/components/schemas/UpdateStatus'
          description: The status of the UpdateGroup.
          readOnly: true
        name:
          type: string
          description: The name of the UpdateGroup.
          readOnly: true
        members:
          type: array
          description: The list of member this UpdateGroup updates.
          items:
            $ref: '#/components/schemas/MemberUpdateStatus'
          readOnly: true
          x-ms-identifiers:
            - name
    UpdateRun:
      description: A multi-stage process to perform update operations across members of a Fleet.
      properties:
        properties:
          $ref: '#/components/schemas/UpdateRunProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        eTag:
          type: string
          description: If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
          readOnly: true
      type: object
    UpdateRunListResult:
      type: object
      description: The response of a UpdateRun list operation.
      properties:
        value:
          type: array
          description: The UpdateRun items on this page
          items:
            $ref: '#/components/schemas/UpdateRun'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    UpdateRunProperties:
      type: object
      description: The properties of the UpdateRun.
      properties:
        provisioningState:
          $ref: '#/components/schemas/UpdateRunProvisioningState'
          description: The provisioning state of the UpdateRun resource.
          readOnly: true
        updateStrategyId:
          $ref: '#/components/schemas/FleetUpdateStrategyResourceId'
          description: |-
            The resource id of the FleetUpdateStrategy resource to reference.

            When creating a new run, there are three ways to define a strategy for the run:
            1. Define a new strategy in place: Set the "strategy" field.
            2. Use an existing strategy: Set the "updateStrategyId" field. (since 2023-08-15-preview)
            3. Use the default strategy to update all the members one by one: Leave both "updateStrategyId" and "strategy" unset. (since 2023-08-15-preview)

            Setting both "updateStrategyId" and "strategy" is invalid.

            UpdateRuns created by "updateStrategyId" snapshot the referenced UpdateStrategy at the time of creation and store it in the "strategy" field. 
            Subsequent changes to the referenced FleetUpdateStrategy resource do not propagate.
            UpdateRunStrategy changes can be made directly on the "strategy" field before launching the UpdateRun.
        strategy:
          $ref: '#/components/schemas/UpdateRunStrategy'
          description: |-
            The strategy defines the order in which the clusters will be updated.
            If not set, all members will be updated sequentially. The UpdateRun status will show a single UpdateStage and a single UpdateGroup targeting all members.
            The strategy of the UpdateRun can be modified until the run is started.
        managedClusterUpdate:
          $ref: '#/components/schemas/ManagedClusterUpdate'
          description: The update to be applied to all clusters in the UpdateRun. The managedClusterUpdate can be modified until the run is started.
        status:
          $ref: '#/components/schemas/UpdateRunStatus'
          description: The status of the UpdateRun.
          readOnly: true
      required:
        - managedClusterUpdate
    UpdateRunProvisioningState:
      type: string
      description: The provisioning state of the UpdateRun resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: UpdateRunProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
      readOnly: true
    UpdateRunStatus:
      type: object
      description: The status of a UpdateRun.
      properties:
        status:
          $ref: '#/components/schemas/UpdateStatus'
          description: The status of the UpdateRun.
          readOnly: true
        stages:
          type: array
          description: The stages composing an update run. Stages are run sequentially withing an UpdateRun.
          items:
            $ref: '#/components/schemas/UpdateStageStatus'
          readOnly: true
          x-ms-identifiers:
            - name
        nodeImageSelection:
          $ref: '#/components/schemas/NodeImageSelectionStatus'
          description: The node image upgrade specs for the update run. It is only set in update run when `NodeImageSelection.type` is `Consistent`.
          readOnly: true
    UpdateRunStrategy:
      type: object
      description: |-
        Defines the update sequence of the clusters via stages and groups.

        Stages within a run are executed sequentially one after another.
        Groups within a stage are executed in parallel.
        Member clusters within a group are updated sequentially one after another.

        A valid strategy contains no duplicate groups within or across stages.
      properties:
        stages:
          type: array
          description: 'The list of stages that compose this update run. Min size: 1.'
          items:
            $ref: '#/components/schemas/UpdateStage'
          x-ms-identifiers:
            - name
      required:
        - stages
    UpdateStage:
      type: object
      description: Defines a stage which contains the groups to update and the steps to take (e.g., wait for a time period) before starting the next stage.
      properties:
        name:
          type: string
          description: The name of the stage. Must be unique within the UpdateRun.
          minLength: 1
          maxLength: 50
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
        groups:
          type: array
          description: 'Defines the groups to be executed in parallel in this stage. Duplicate groups are not allowed. Min size: 1.'
          items:
            $ref: '#/components/schemas/UpdateGroup'
          x-ms-identifiers:
            - name
        afterStageWaitInSeconds:
          type: integer
          format: int32
          description: The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified.
      required:
        - name
    UpdateStageStatus:
      type: object
      description: The status of a UpdateStage.
      properties:
        status:
          $ref: '#/components/schemas/UpdateStatus'
          description: The status of the UpdateStage.
          readOnly: true
        name:
          type: string
          description: The name of the UpdateStage.
          readOnly: true
        groups:
          type: array
          description: The list of groups to be updated as part of this UpdateStage.
          items:
            $ref: '#/components/schemas/UpdateGroupStatus'
          readOnly: true
          x-ms-identifiers:
            - name
        afterStageWaitStatus:
          $ref: '#/components/schemas/WaitStatus'
          description: The status of the wait period configured on the UpdateStage.
          readOnly: true
    UpdateState:
      type: string
      description: The state of the UpdateRun, UpdateStage, UpdateGroup, or MemberUpdate.
      enum:
        - NotStarted
        - Running
        - Stopping
        - Stopped
        - Skipped
        - Failed
        - Completed
      x-ms-enum:
        name: UpdateState
        modelAsString: true
        values:
          - name: NotStarted
            value: NotStarted
            description: The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has not been started.
          - name: Running
            value: Running
            description: The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that is running.
          - name: Stopping
            value: Stopping
            description: The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that is being stopped.
          - name: Stopped
            value: Stopped
            description: The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has stopped.
          - name: Skipped
            value: Skipped
            description: The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has been skipped.
          - name: Failed
            value: Failed
            description: The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has failed.
          - name: Completed
            value: Completed
            description: The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has completed.
    UpdateStatus:
      type: object
      description: The status for an operation or group of operations.
      properties:
        startTime:
          type: string
          format: date-time
          description: The time the operation or group was started.
          readOnly: true
        completedTime:
          type: string
          format: date-time
          description: The time the operation or group was completed.
          readOnly: true
        state:
          $ref: '#/components/schemas/UpdateState'
          description: The State of the operation or group.
          readOnly: true
        error:
          $ref: '#/components/schemas/ErrorDetail'
          description: The error details when a failure is encountered.
          readOnly: true
    WaitStatus:
      type: object
      description: The status of the wait duration.
      properties:
        status:
          $ref: '#/components/schemas/UpdateStatus'
          description: The status of the wait duration.
          readOnly: true
        waitDurationInSeconds:
          type: integer
          format: int32
          description: The wait duration configured in seconds.
          readOnly: true
  x-stackQL-resources:
    operations:
      id: azure.fleet.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ContainerService~1operations~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    fleets:
      id: azure.fleet.fleets
      name: fleets
      title: fleets
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerService~1fleets~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1?api-version=2024-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1?api-version=2024-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1?api-version=2024-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/get'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/delete'
    _credentials:
      id: azure.fleet._credentials
      name: _credentials
      title: _credentials
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1listCredentials~1?api-version=2024-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/_credentials/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    members:
      id: azure.fleet.members
      name: members
      title: members
      methods:
        list_by_fleet:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1members~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1members~1{fleetMemberName}~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1members~1{fleetMemberName}~1?api-version=2024-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1members~1{fleetMemberName}~1?api-version=2024-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1members~1{fleetMemberName}~1?api-version=2024-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/members/methods/get'
          - $ref: '#/components/x-stackQL-resources/members/methods/list_by_fleet'
        insert:
          - $ref: '#/components/x-stackQL-resources/members/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/members/methods/delete'
    update_runs:
      id: azure.fleet.update_runs
      name: update_runs
      title: update_runs
      methods:
        list_by_fleet:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateRuns~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateRuns~1{updateRunName}~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateRuns~1{updateRunName}~1?api-version=2024-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateRuns~1{updateRunName}~1?api-version=2024-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        skip:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateRuns~1{updateRunName}~1skip~1?api-version=2024-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateRuns~1{updateRunName}~1start~1?api-version=2024-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateRuns~1{updateRunName}~1stop~1?api-version=2024-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/update_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/update_runs/methods/list_by_fleet'
        insert:
          - $ref: '#/components/x-stackQL-resources/update_runs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/update_runs/methods/delete'
    update_strategies:
      id: azure.fleet.update_strategies
      name: update_strategies
      title: update_strategies
      methods:
        list_by_fleet:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateStrategies~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateStrategies~1{updateStrategyName}~1?api-version=2024-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateStrategies~1{updateStrategyName}~1?api-version=2024-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerService~1fleets~1{fleetName}~1updateStrategies~1{updateStrategyName}~1?api-version=2024-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/update_strategies/methods/get'
          - $ref: '#/components/x-stackQL-resources/update_strategies/methods/list_by_fleet'
        insert:
          - $ref: '#/components/x-stackQL-resources/update_strategies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/update_strategies/methods/delete'
    vw_fleets:
      id: azure.fleet.vw_fleets
      name: vw_fleets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              eTag as e_tag,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.hubProfile') as hub_profile,
              subscriptionId,
              resourceGroupName,
              fleetName
              FROM azure.fleet.fleets
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                eTag as e_tag,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.hubProfile') as hub_profile,
                subscriptionId,
                resourceGroupName,
                fleetName
                FROM azure.fleet.fleets
                WHERE subscriptionId = 'replace-me';
    vw_members:
      id: azure.fleet.vw_members
      name: vw_members
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              eTag as e_tag,
              JSON_EXTRACT(properties, '$.clusterResourceId') as cluster_resource_id,
              JSON_EXTRACT(properties, '$.group') as group,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              fleetName,
              fleetMemberName
              FROM azure.fleet.members
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND fleetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                eTag as e_tag,
                json_extract_path_text(properties, '$.clusterResourceId') as cluster_resource_id,
                JSON_EXTRACT(properties, '$.group') as group,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                fleetName,
                fleetMemberName
                FROM azure.fleet.members
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND fleetName = 'replace-me';
    vw_update_runs:
      id: azure.fleet.vw_update_runs
      name: vw_update_runs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              eTag as e_tag,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.updateStrategyId') as update_strategy_id,
              JSON_EXTRACT(properties, '$.strategy') as strategy,
              JSON_EXTRACT(properties, '$.managedClusterUpdate') as managed_cluster_update,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              fleetName,
              updateRunName
              FROM azure.fleet.update_runs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND fleetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                eTag as e_tag,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.updateStrategyId') as update_strategy_id,
                JSON_EXTRACT(properties, '$.strategy') as strategy,
                JSON_EXTRACT(properties, '$.managedClusterUpdate') as managed_cluster_update,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                fleetName,
                updateRunName
                FROM azure.fleet.update_runs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND fleetName = 'replace-me';
    vw_update_strategies:
      id: azure.fleet.vw_update_strategies
      name: vw_update_strategies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              eTag as e_tag,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.strategy') as strategy,
              subscriptionId,
              resourceGroupName,
              fleetName,
              updateStrategyName
              FROM azure.fleet.update_strategies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND fleetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                eTag as e_tag,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.strategy') as strategy,
                subscriptionId,
                resourceGroupName,
                fleetName,
                updateStrategyName
                FROM azure.fleet.update_strategies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND fleetName = 'replace-me';
paths:
  /providers/Microsoft.ContainerService/operations/?api-version=2024-04-01:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/fleets/?api-version=2024-04-01:
    get:
      operationId: Fleets_ListBySubscription
      tags:
        - Fleets
      description: Lists fleets in the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/?api-version=2024-04-01:
    get:
      operationId: Fleets_ListByResourceGroup
      tags:
        - Fleets
      description: Lists fleets in the specified subscription and resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/?api-version=2024-04-01:
    get:
      operationId: Fleets_Get
      tags:
        - Fleets
      description: Gets a Fleet.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Fleets_CreateOrUpdate
      tags:
        - Fleets
      description: Creates or updates a Fleet.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: The request should only proceed if no entity matches this string.
          required: false
          x-ms-client-name: ifNoneMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      responses:
        '200':
          description: Resource 'Fleet' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '201':
          description: Resource 'Fleet' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Fleets_Update
      tags:
        - Fleets
      description: Update a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FleetPatch'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      x-ms-long-running-operation: true
    delete:
      operationId: Fleets_Delete
      tags:
        - Fleets
      description: Delete a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/listCredentials/?api-version=2024-04-01:
    post:
      operationId: Fleets_ListCredentials
      tags:
        - Fleets
      description: Lists the user credentials of a Fleet.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetCredentialResults'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/members/?api-version=2024-04-01:
    get:
      operationId: FleetMembers_ListByFleet
      tags:
        - FleetMembers
      description: List FleetMember resources by Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetMemberListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/members/{fleetMemberName}/?api-version=2024-04-01:
    get:
      operationId: FleetMembers_Get
      tags:
        - FleetMembers
      description: Get a FleetMember
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: fleetMemberName
          in: path
          description: The name of the Fleet member resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetMember'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: FleetMembers_Create
      tags:
        - FleetMembers
      description: Create a FleetMember
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: The request should only proceed if no entity matches this string.
          required: false
          x-ms-client-name: ifNoneMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: fleetMemberName
          in: path
          description: The name of the Fleet member resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FleetMember'
      responses:
        '200':
          description: Resource 'FleetMember' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetMember'
        '201':
          description: Resource 'FleetMember' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetMember'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: FleetMembers_Update
      tags:
        - FleetMembers
      description: Update a FleetMember
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: fleetMemberName
          in: path
          description: The name of the Fleet member resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FleetMemberUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetMember'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      x-ms-long-running-operation: true
    delete:
      operationId: FleetMembers_Delete
      tags:
        - FleetMembers
      description: Delete a FleetMember
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: fleetMemberName
          in: path
          description: The name of the Fleet member resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/?api-version=2024-04-01:
    get:
      operationId: UpdateRuns_ListByFleet
      tags:
        - UpdateRuns
      description: List UpdateRun resources by Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRunListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}/?api-version=2024-04-01:
    get:
      operationId: UpdateRuns_Get
      tags:
        - UpdateRuns
      description: Get a UpdateRun
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateRunName
          in: path
          description: The name of the UpdateRun resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: UpdateRuns_CreateOrUpdate
      tags:
        - UpdateRuns
      description: Create a UpdateRun
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: The request should only proceed if no entity matches this string.
          required: false
          x-ms-client-name: ifNoneMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateRunName
          in: path
          description: The name of the UpdateRun resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRun'
      responses:
        '200':
          description: Resource 'UpdateRun' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
        '201':
          description: Resource 'UpdateRun' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: UpdateRuns_Delete
      tags:
        - UpdateRuns
      description: Delete a UpdateRun
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateRunName
          in: path
          description: The name of the UpdateRun resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}/skip/?api-version=2024-04-01:
    post:
      operationId: UpdateRuns_Skip
      tags:
        - UpdateRuns
      description: Skips one or a combination of member/group/stage/afterStageWait(s) of an update run.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateRunName
          in: path
          description: The name of the UpdateRun resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkipProperties'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}/start/?api-version=2024-04-01:
    post:
      operationId: UpdateRuns_Start
      tags:
        - UpdateRuns
      description: Starts an UpdateRun.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateRunName
          in: path
          description: The name of the UpdateRun resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}/stop/?api-version=2024-04-01:
    post:
      operationId: UpdateRuns_Stop
      tags:
        - UpdateRuns
      description: Stops an UpdateRun.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateRunName
          in: path
          description: The name of the UpdateRun resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRun'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateStrategies/?api-version=2024-04-01:
    get:
      operationId: FleetUpdateStrategies_ListByFleet
      tags:
        - FleetUpdateStrategies
      description: List FleetUpdateStrategy resources by Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetUpdateStrategyListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateStrategies/{updateStrategyName}/?api-version=2024-04-01:
    get:
      operationId: FleetUpdateStrategies_Get
      tags:
        - FleetUpdateStrategies
      description: Get a FleetUpdateStrategy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateStrategyName
          in: path
          description: The name of the UpdateStrategy resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetUpdateStrategy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: FleetUpdateStrategies_CreateOrUpdate
      tags:
        - FleetUpdateStrategies
      description: Create a FleetUpdateStrategy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: The request should only proceed if no entity matches this string.
          required: false
          x-ms-client-name: ifNoneMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateStrategyName
          in: path
          description: The name of the UpdateStrategy resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FleetUpdateStrategy'
      responses:
        '200':
          description: Resource 'FleetUpdateStrategy' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetUpdateStrategy'
        '201':
          description: Resource 'FleetUpdateStrategy' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetUpdateStrategy'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: FleetUpdateStrategies_Delete
      tags:
        - FleetUpdateStrategies
      description: Delete a FleetUpdateStrategy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: If-Match
          in: header
          description: The request should only proceed if an entity matches this string.
          required: false
          x-ms-client-name: ifMatch
          schema:
            type: string
        - name: fleetName
          in: path
          description: The name of the Fleet resource.
          required: true
          schema:
            minLength: 1
            maxLength: 63
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
        - name: updateStrategyName
          in: path
          description: The name of the UpdateStrategy resource.
          required: true
          schema:
            minLength: 1
            maxLength: 50
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
