openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Elastic San
  description: Azure Elastic storage area network (SAN) is Microsofts answer to the problem of workload optimization and integration between your large scale databases and performance-intensive mission-critical applications. Elastic SAN Preview is a fully integrated solution that simplifies deploying, scaling, managing, and configuring a SAN, while also offering built-in cloud capabilities like high availability.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ElasticSanNameParameter:
      name: elasticSanName
      in: path
      description: The name of the ElasticSan.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$
        minLength: 3
        maxLength: 24
        type: string
    VolumeGroupNameParameter:
      name: volumeGroupName
      in: path
      description: The name of the VolumeGroup.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$
        minLength: 3
        maxLength: 63
        type: string
    VolumeNameParameter:
      name: volumeName
      in: path
      description: The name of the Volume.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9]+(-[a-z0-9A-Z]+)*$
        minLength: 3
        maxLength: 63
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the Private Endpoint connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SnapshotNameParameter:
      name: snapshotName
      in: path
      description: The name of the volume snapshot within the given volume group.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9]+(?:[._-][a-z0-9]+)*$
        minLength: 1
        maxLength: 80
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: true
        values:
          - value: Premium
            description: Premium Tier
      description: The sku tier.
    Sku:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
        tier:
          $ref: '#/components/schemas/SkuTier'
      description: The SKU name. Required for account creation; optional for update.
    Identity:
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        userAssignedIdentities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
          description: Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume group. The key is the ARM resource identifier of the identity.
      required:
        - type
      description: Identity for the resource.
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      description: Properties of key vault.
      properties:
        keyName:
          type: string
          description: The name of KeyVault key.
          x-ms-client-name: KeyName
        keyVersion:
          type: string
          description: The version of KeyVault key.
          x-ms-client-name: KeyVersion
        keyVaultUri:
          type: string
          description: The Uri of KeyVault.
          x-ms-client-name: KeyVaultUri
          format: uri
        currentVersionedKeyIdentifier:
          type: string
          readOnly: true
          description: The object identifier of the current versioned Key Vault Key in use.
          x-ms-client-name: CurrentVersionedKeyIdentifier
        lastKeyRotationTimestamp:
          type: string
          readOnly: true
          format: date-time
          description: Timestamp of last rotation of the Key Vault Key.
          x-ms-client-name: LastKeyRotationTimestamp
        currentVersionedKeyExpirationTimestamp:
          type: string
          readOnly: true
          format: date-time
          description: This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.
          x-ms-client-name: CurrentVersionedKeyExpirationTimestamp
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ElasticSanList:
      type: object
      description: List of Elastic Sans
      properties:
        value:
          description: An array of Elastic San objects.
          type: array
          items:
            $ref: '#/components/schemas/ElasticSan'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    ElasticSan:
      description: Response for ElasticSan request.
      required:
        - properties
        - location
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of ElasticSan.
          $ref: '#/components/schemas/ElasticSanProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ElasticSanProperties:
      type: object
      description: Elastic San response properties.
      required:
        - baseSizeTiB
        - extendedCapacitySizeTiB
        - sku
      properties:
        sku:
          description: resource sku
          $ref: '#/components/schemas/Sku'
        availabilityZones:
          type: array
          description: 'Logical zone for Elastic San resource; example: ["1"].'
          items:
            $ref: '#/components/schemas/AvailabilityZone'
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        baseSizeTiB:
          description: Base size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
        extendedCapacitySizeTiB:
          description: Extended size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
        totalVolumeSizeGiB:
          description: Total size of the provisioned Volumes in GiB.
          type: integer
          format: int64
          readOnly: true
        volumeGroupCount:
          description: Total number of volume groups in this Elastic San appliance.
          type: integer
          format: int64
          readOnly: true
        totalIops:
          description: Total Provisioned IOPS of the Elastic San appliance.
          type: integer
          format: int64
          readOnly: true
        totalMBps:
          description: Total Provisioned MBps Elastic San appliance.
          type: integer
          format: int64
          readOnly: true
        totalSizeTiB:
          description: Total size of the Elastic San appliance in TB.
          type: integer
          format: int64
          readOnly: true
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: The list of Private Endpoint Connections.
        publicNetworkAccess:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          description: Allow or disallow public network access to ElasticSan. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.
    ElasticSanUpdate:
      description: Response for ElasticSan update request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of ElasticSan.
          $ref: '#/components/schemas/ElasticSanUpdateProperties'
        tags:
          type: object
          description: Update tags
          additionalProperties:
            type: string
      type: object
    ElasticSanUpdateProperties:
      type: object
      description: Elastic San update properties.
      properties:
        baseSizeTiB:
          description: Base size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - update
        extendedCapacitySizeTiB:
          description: Extended size of the Elastic San appliance in TiB.
          type: integer
          format: int64
          x-ms-mutability:
            - update
        publicNetworkAccess:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          description: Allow or disallow public network access to ElasticSan Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.
    AvailabilityZone:
      type: string
      description: Availability zone.
    SkuInformationList:
      description: List of SKU Information objects
      type: object
      properties:
        value:
          description: List of ResourceType Sku
          type: array
          items:
            $ref: '#/components/schemas/SkuInformation'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    SkuInformation:
      description: ElasticSAN SKU and its properties
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Sku Name
          $ref: '#/components/schemas/SkuName'
        tier:
          type: string
          description: Sku Tier
          $ref: '#/components/schemas/SkuTier'
        resourceType:
          readOnly: true
          type: string
          description: The type of the resource.
        locations:
          readOnly: true
          type: array
          items:
            type: string
          description: The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
        locationInfo:
          description: Availability of the SKU for the location/zone
          type: array
          items:
            $ref: '#/components/schemas/SkuLocationInfo'
          x-ms-identifiers: []
          readOnly: true
        capabilities:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SKUCapability'
          x-ms-identifiers: []
          description: The capability information in the specified SKU.
    SKUCapability:
      properties:
        name:
          readOnly: true
          type: string
          description: The name of capability.
        value:
          readOnly: true
          type: string
          description: A string value to indicate states of given capability.
      description: The capability information in the specified SKU.
      type: object
    SkuLocationInfo:
      description: The location info.
      type: object
      properties:
        location:
          description: The location.
          type: string
          readOnly: true
        zones:
          description: The zones.
          type: array
          items:
            type: string
          readOnly: true
    SkuName:
      type: string
      enum:
        - Premium_LRS
        - Premium_ZRS
      x-ms-enum:
        name: SkuName
        modelAsString: true
        values:
          - value: Premium_LRS
            description: Premium locally redundant storage
          - value: Premium_ZRS
            description: Premium zone redundant storage
      description: The sku name.
    IscsiTargetInfo:
      type: object
      description: Iscsi target information
      readOnly: true
      properties:
        targetIqn:
          type: string
          description: 'iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".'
          readOnly: true
        targetPortalHostname:
          type: string
          description: iSCSI Target Portal Host Name
          readOnly: true
        targetPortalPort:
          type: integer
          format: int32
          description: iSCSI Target Portal Port
          readOnly: true
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
        status:
          $ref: '#/components/schemas/OperationalStatus'
          description: Operational status of the iSCSI Target.
    VolumeGroup:
      description: Response for Volume Group request.
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        properties:
          x-ms-client-flatten: true
          description: Properties of VolumeGroup.
          $ref: '#/components/schemas/VolumeGroupProperties'
      type: object
    VolumeGroupList:
      type: object
      description: List of Volume Groups
      properties:
        value:
          description: An array of Volume Groups objects.
          type: array
          items:
            $ref: '#/components/schemas/VolumeGroup'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    VolumeGroupProperties:
      type: object
      description: VolumeGroup response properties.
      properties:
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        protocolType:
          description: Type of storage target
          $ref: '#/components/schemas/StorageTargetType'
        encryption:
          description: Type of encryption
          $ref: '#/components/schemas/EncryptionType'
        encryptionProperties:
          description: Encryption Properties describing Key Vault and Identity information
          $ref: '#/components/schemas/EncryptionProperties'
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: A collection of rules governing the accessibility from specific network locations.
          x-ms-mutability:
            - create
            - read
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: The list of Private Endpoint Connections.
        enforceDataIntegrityCheckForIscsi:
          type: boolean
          description: A boolean indicating whether or not Data Integrity Check is enabled
    EncryptionProperties:
      type: object
      properties:
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          x-ms-client-name: KeyVaultProperties
          description: Properties provided by key vault.
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
          x-ms-client-name: EncryptionIdentity
          description: The identity to be used with service-side encryption at rest.
      description: The encryption settings on the volume group.
    EncryptionIdentity:
      type: object
      properties:
        userAssignedIdentity:
          type: string
          description: Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
          x-ms-client-name: EncryptionUserAssignedIdentity
      description: Encryption identity for the volume group.
    UserAssignedIdentity:
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of the identity.
        clientId:
          readOnly: true
          type: string
          description: The client ID of the identity.
      description: UserAssignedIdentity for the resource.
    VolumeGroupUpdate:
      description: Volume Group request.
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        properties:
          x-ms-client-flatten: true
          description: Properties of VolumeGroup.
          $ref: '#/components/schemas/VolumeGroupUpdateProperties'
      type: object
    VolumeGroupUpdateProperties:
      type: object
      description: VolumeGroup response properties.
      properties:
        protocolType:
          description: Type of storage target
          $ref: '#/components/schemas/StorageTargetType'
        encryption:
          description: Type of encryption
          $ref: '#/components/schemas/EncryptionType'
        encryptionProperties:
          description: Encryption Properties describing Key Vault and Identity information
          $ref: '#/components/schemas/EncryptionProperties'
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: A collection of rules governing the accessibility from specific network locations.
          x-ms-mutability:
            - update
        enforceDataIntegrityCheckForIscsi:
          type: boolean
          description: A boolean indicating whether or not Data Integrity Check is enabled
    Volume:
      description: Response for Volume request.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of Volume.
          $ref: '#/components/schemas/VolumeProperties'
      type: object
    VolumeList:
      type: object
      description: List of Volumes
      properties:
        value:
          description: An array of Volume objects.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    VolumeProperties:
      type: object
      required:
        - sizeGiB
      description: Volume response properties.
      properties:
        volumeId:
          description: Unique Id of the volume in GUID format
          type: string
          readOnly: true
        creationData:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/SourceCreationData'
        sizeGiB:
          description: Volume size.
          type: integer
          format: int64
        storageTarget:
          description: Storage target information
          $ref: '#/components/schemas/IscsiTargetInfo'
        managedBy:
          description: Parent resource information.
          $ref: '#/components/schemas/ManagedByInfo'
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    ManagedByInfo:
      type: object
      description: Parent resource information.
      properties:
        resourceId:
          type: string
          x-ms-client-name: ResourceId
          description: Resource ID of the resource managing the volume, this is a restricted field and can only be set for internal use.
    VolumeUpdate:
      description: Response for Volume request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of Volume.
          $ref: '#/components/schemas/VolumeUpdateProperties'
      type: object
    VolumeUpdateProperties:
      type: object
      description: Volume response properties.
      properties:
        sizeGiB:
          description: Volume size.
          type: integer
          format: int64
        managedBy:
          description: Parent resource information.
          $ref: '#/components/schemas/ManagedByInfo'
    SourceCreationData:
      type: object
      description: Data source used when creating the volume.
      properties:
        createSource:
          type: string
          enum:
            - None
            - VolumeSnapshot
            - DiskSnapshot
            - Disk
            - DiskRestorePoint
          x-ms-enum:
            name: VolumeCreateOption
            modelAsString: true
          description: This enumerates the possible sources of a volume creation.
        sourceId:
          type: string
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
    ProvisioningState:
      type: string
      enum:
        - Invalid
        - Succeeded
        - Failed
        - Canceled
        - Pending
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: ProvisioningStates
        modelAsString: true
      description: Provisioning state of the iSCSI Target.
      readOnly: true
    OperationalStatus:
      type: string
      enum:
        - Invalid
        - Unknown
        - Healthy
        - Unhealthy
        - Updating
        - Running
        - Stopped
        - Stopped (deallocated)
      x-ms-enum:
        name: OperationalStatus
        modelAsString: true
      description: Operational status of the resource.
    StorageTargetType:
      type: string
      enum:
        - Iscsi
        - None
      x-ms-enum:
        name: StorageTargetType
        modelAsString: true
      description: Storage Target type.
    EncryptionType:
      type: string
      description: The type of key used to encrypt the data of the disk.
      enum:
        - EncryptionAtRestWithPlatformKey
        - EncryptionAtRestWithCustomerManagedKey
      x-ms-enum:
        name: EncryptionType
        modelAsString: true
        values:
          - value: EncryptionAtRestWithPlatformKey
            description: Volume is encrypted at rest with Platform managed key. It is the default encryption type.
          - value: EncryptionAtRestWithCustomerManagedKey
            description: Volume is encrypted at rest with Customer managed key that can be changed and revoked by a customer.
    NetworkRuleSet:
      type: object
      properties:
        virtualNetworkRules:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: The list of virtual network rules.
      description: A set of rules governing the network accessibility.
    VirtualNetworkRule:
      type: object
      properties:
        id:
          type: string
          x-ms-client-name: VirtualNetworkResourceId
          description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
        action:
          type: string
          enum:
            - Allow
          x-ms-enum:
            name: Action
            modelAsString: true
          default: Allow
          description: The action of virtual network rule.
      required:
        - id
      description: Virtual Network rule.
    PrivateEndpointConnection:
      description: ' Response for PrivateEndpoint Connection object'
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Private Endpoint Connection Properties.
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      description: ' Response for PrivateEndpoint connection properties'
      properties:
        provisioningState:
          description: Provisioning State of Private Endpoint connection resource
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        privateEndpoint:
          description: Private Endpoint resource
          $ref: '#/components/schemas/PrivateEndpoint'
        privateLinkServiceConnectionState:
          description: Private Link Service Connection State.
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
        groupIds:
          description: ' List of resources private endpoint is mapped'
          type: array
          items:
            type: string
      required:
        - privateLinkServiceConnectionState
    PrivateEndpoint:
      type: object
      description: Response for PrivateEndpoint
      properties:
        id:
          type: string
          description: The ARM identifier for Private Endpoint
          readOnly: true
    PrivateLinkServiceConnectionState:
      type: object
      description: Response for Private Link Service Connection state
      properties:
        status:
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Failed
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
      description: A list of private link resources
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
      description: List of private endpoint connections associated with SAN
    Snapshot:
      required:
        - properties
      description: Response for Volume Snapshot request.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of Volume Snapshot.
          $ref: '#/components/schemas/SnapshotProperties'
      type: object
    SnapshotList:
      type: object
      description: List of Snapshots
      properties:
        value:
          description: An array of Snapshot objects.
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    SnapshotProperties:
      type: object
      required:
        - creationData
      description: Properties for Snapshot.
      properties:
        creationData:
          description: Data used when creating a volume snapshot.
          $ref: '#/components/schemas/SnapshotCreationData'
        provisioningState:
          description: State of the operation on the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        sourceVolumeSizeGiB:
          description: Size of Source Volume
          type: integer
          format: int64
          readOnly: true
        volumeName:
          description: Source Volume Name of a snapshot
          type: string
          readOnly: true
    SnapshotCreationData:
      type: object
      required:
        - sourceId
      description: Data used when creating a volume snapshot.
      properties:
        sourceId:
          type: string
          description: Fully qualified resource ID of the volume. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}"
  x-stackQL-resources:
    operations:
      id: azure.elastic_san.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ElasticSan~1operations~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    skus:
      id: azure.elastic_san.skus
      name: skus
      title: skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ElasticSan~1skus~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list'
        insert: []
        update: []
        delete: []
    elastic_sans:
      id: azure.elastic_san.elastic_sans
      name: elastic_sans
      title: elastic_sans
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ElasticSan~1elasticSans~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2024-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2024-05-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2024-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/elastic_sans/methods/get'
          - $ref: '#/components/x-stackQL-resources/elastic_sans/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/elastic_sans/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/elastic_sans/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/elastic_sans/methods/delete'
    volume_groups:
      id: azure.elastic_san.volume_groups
      name: volume_groups
      title: volume_groups
      methods:
        list_by_elastic_san:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumeGroups~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2024-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2024-05-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2024-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/list_by_elastic_san'
        insert:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/delete'
    volumes:
      id: azure.elastic_san.volumes
      name: volumes
      title: volumes
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2024-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2024-05-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2024-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1{volumeName}~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_volume_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1volumes~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list_by_volume_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/delete'
    private_endpoint_connections:
      id: azure.elastic_san.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1privateEndpointConnections~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.elastic_san.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_elastic_san:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1privateLinkResources~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_elastic_san'
        insert: []
        update: []
        delete: []
    volume_snapshots:
      id: azure.elastic_san.volume_snapshots
      name: volume_snapshots
      title: volume_snapshots
      methods:
        list_by_volume_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1snapshots~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1snapshots~1{snapshotName}~1?api-version=2024-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1snapshots~1{snapshotName}~1?api-version=2024-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ElasticSan~1elasticSans~1{elasticSanName}~1volumegroups~1{volumeGroupName}~1snapshots~1{snapshotName}~1?api-version=2024-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_snapshots/methods/list_by_volume_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/volume_snapshots/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volume_snapshots/methods/delete'
paths:
  /providers/Microsoft.ElasticSan/operations/?api-version=2024-05-01:
    get:
      tags:
        - Elastic San Operations
      operationId: Operations_List
      description: Gets a list of ElasticSan operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/skus/?api-version=2024-05-01:
    get:
      tags:
        - Elastic San Skus
      summary: List all the available Skus in the region and information related to them
      operationId: Skus_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: Specify $filter='location eq <location>' to filter on location.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lists the available SKUs supported by Microsoft.ElasticSan for given subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuInformationList'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/elasticSans/?api-version=2024-05-01:
    get:
      tags:
        - ElasticSans
      operationId: ElasticSans_ListBySubscription
      description: Gets a list of ElasticSans in a subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved Elastic San by subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSanList'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/?api-version=2024-05-01:
    get:
      tags:
        - ElasticSan
      operationId: ElasticSans_ListByResourceGroup
      description: Gets a list of ElasticSan in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved elasticSans by resource group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSanList'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/?api-version=2024-05-01:
    put:
      tags:
        - ElasticSans
      operationId: ElasticSans_Create
      description: Create ElasticSan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      requestBody:
        description: Elastic San object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElasticSan'
      responses:
        '200':
          description: OK -- Resource Create or Update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        '201':
          description: Created -- Resource Create; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - ElasticSans
      operationId: ElasticSans_Update
      description: Update a Elastic San.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      requestBody:
        description: Elastic San object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElasticSanUpdate'
      responses:
        '200':
          description: OK -- ElasticSAN properties updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - ElasticSans
      operationId: ElasticSans_Delete
      description: Delete a Elastic San.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Delete operation completed successfully.
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent --ElasticSAN does not exist in the subscription.
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - ElasticSans
      operationId: ElasticSans_Get
      description: Get a ElasticSan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved ElasticSan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSan'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumeGroups/?api-version=2024-05-01:
    get:
      tags:
        - VolumeGroups
      description: List VolumeGroups.
      operationId: VolumeGroups_ListByElasticSan
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Operation completed successfully; retrieved Volume Group List.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupList'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/?api-version=2024-05-01:
    put:
      tags:
        - VolumeGroups
      description: Create a Volume Group.
      operationId: VolumeGroups_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      requestBody:
        description: Volume Group object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroup'
      responses:
        '200':
          description: OK -- Resource Create or Update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        '201':
          description: Created -- Resource Create; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - VolumeGroups
      description: Update an VolumeGroup.
      operationId: VolumeGroups_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      requestBody:
        description: Volume Group object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroupUpdate'
      responses:
        '200':
          description: OK -- Returned when the update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - VolumeGroups
      description: Delete an VolumeGroup.
      operationId: VolumeGroups_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      responses:
        '200':
          description: OK -- Delete operation completed successfully.
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent -- Resource does not exist in the subscription.
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - VolumeGroups
      description: Get an VolumeGroups.
      operationId: VolumeGroups_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved iSCSI Target.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroup'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}/?api-version=2024-05-01:
    put:
      tags:
        - Volumes
      description: Create a Volume.
      operationId: Volumes_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      requestBody:
        description: Volume object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      responses:
        '200':
          description: OK -- Resource Create or Update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '201':
          description: Created -- Resource Create; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Volumes
      description: Update an Volume.
      operationId: Volumes_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      requestBody:
        description: Volume object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeUpdate'
      responses:
        '200':
          description: OK -- Returned when the update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Volumes
      description: Delete an Volume.
      operationId: Volumes_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
        - name: x-ms-delete-snapshots
          in: header
          description: Optional, used to delete snapshots under volume. Allowed value are only true or false. Default value is false.
          required: false
          schema:
            enum:
              - 'true'
              - 'false'
            x-ms-enum:
              name: x-ms-delete-snapshots
              modelAsString: true
            type: string
        - name: x-ms-force-delete
          in: header
          description: Optional, used to delete volume if active sessions present. Allowed value are only true or false. Default value is false.
          required: false
          schema:
            enum:
              - 'true'
              - 'false'
            x-ms-enum:
              name: x-ms-force-delete
              modelAsString: true
            type: string
      responses:
        '200':
          description: Delete operation completed successfully.
        '202':
          description: Delete request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist in the subscription.
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Volumes
      description: Get an Volume.
      operationId: Volumes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved Volume.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/?api-version=2024-05-01:
    get:
      tags:
        - Volumes
      description: List Volumes in a VolumeGroup.
      operationId: Volumes_ListByVolumeGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved volumes in a volume group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeList'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2024-05-01:
    put:
      tags:
        - PrivateEndpointConnections
      description: Update the state of specified private endpoint connection associated with the Elastic San
      operationId: PrivateEndpointConnections_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: Private Endpoint Connection Approval object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK -- Resource Create or Update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Created -- Resource Create; operation will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error from Elastic SAN resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets the specified private endpoint connection associated with the Elastic San
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error from Elastic SAN resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes the specified private endpoint connection associated with the Elastic San
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully
        '202':
          description: Delete request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content -- The Private Endpoint Connection does not exist.
        default:
          description: Error from Elastic SAN resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateEndpointConnections/?api-version=2024-05-01:
    get:
      tags:
        - PrivateEndpointConnections
      description: List all Private Endpoint Connections associated with the Elastic San.
      operationId: PrivateEndpointConnections_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Successfully retrieved private endpoint connections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateLinkResources/?api-version=2024-05-01:
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByElasticSan
      description: Gets the private link resources that need to be created for a elastic San.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
      responses:
        '200':
          description: OK -- Successfully retrieved private endpoint connections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/snapshots/?api-version=2024-05-01:
    get:
      tags:
        - Snapshots
      description: List Snapshots in a VolumeGroup or List Snapshots by Volume (name) in a VolumeGroup using filter
      operationId: VolumeSnapshots_ListByVolumeGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - name: $filter
          in: query
          description: Specify $filter='volumeName eq <volume name>' to filter on volume.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Operation completed successfully; retrieved snapshots in a volume group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotList'
        default:
          description: Error from the ElasticSan Resource Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/snapshots/{snapshotName}/?api-version=2024-05-01:
    put:
      tags:
        - Snapshots
      description: Create a Volume Snapshot.
      operationId: VolumeSnapshots_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      requestBody:
        description: Snapshot object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
      responses:
        '200':
          description: OK -- Returned when the create operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        '201':
          description: Created -- Resource Created; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Snapshots
      description: Delete a Volume Snapshot.
      operationId: VolumeSnapshots_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      responses:
        '200':
          description: OK -- Delete operation completed successfully.
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent -- Resource does not exist in the subscription.
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Snapshots
      description: Get a Volume Snapshot.
      operationId: VolumeSnapshots_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ElasticSanNameParameter'
        - $ref: '#/components/parameters/VolumeGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved Volume Snapshot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        default:
          description: Error from the ElasticSan Resource Provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
