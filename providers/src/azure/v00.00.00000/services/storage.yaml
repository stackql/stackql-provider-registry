openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Storage Resource Provider
  description: The Storage Resource Provider (SRP) enables you to manage your storage account and related resources programmatically.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QueueServiceName:
      name: queueServiceName
      in: path
      description: The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: QueueServiceName
          modelAsString: false
        type: string
    QueueName:
      name: queueName
      in: path
      description: A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 63
        minLength: 3
        pattern: ^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$
        type: string
    networkSecurityPerimeterConfigurationName:
      name: networkSecurityPerimeterConfigurationName
      in: path
      description: The name for Network Security Perimeter configuration
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^.*$
        type: string
    TableServiceName:
      name: tableServiceName
      in: path
      description: The name of the Table Service within the specified storage account. Table Service Name must be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: TableServiceName
          modelAsString: false
        type: string
    TableName:
      name: tableName
      in: path
      description: A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 63
        minLength: 3
        pattern: ^[A-Za-z][A-Za-z0-9]{2,62}$
        type: string
    ResourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group within the user's subscription. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    StorageAccountName:
      name: accountName
      in: path
      description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9]+$
        maxLength: 24
        minLength: 3
        type: string
    DeletedAccountName:
      name: deletedAccountName
      in: path
      description: Name of the deleted storage account.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 24
        minLength: 3
        type: string
    ManagementPolicyName:
      name: managementPolicyName
      in: path
      description: The name of the Storage Account Management Policy. It should always be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: ManagementPolicyName
          modelAsString: true
        type: string
    MigrationName:
      name: migrationName
      in: path
      description: The name of the Storage Account Migration. It should always be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z][a-z0-9]*$
        enum:
          - default
        x-ms-enum:
          name: MigrationName
          modelAsString: true
        type: string
    EncryptionScopeName:
      name: encryptionScopeName
      in: path
      description: The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 63
        minLength: 3
        type: string
    ObjectReplicationPolicyId:
      name: objectReplicationPolicyId
      in: path
      description: For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    Username:
      name: username
      in: path
      description: The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 64
        type: string
    BlobInventoryPolicyName:
      name: blobInventoryPolicyName
      in: path
      description: The name of the storage account blob inventory policy. It should always be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: BlobInventoryPolicyName
          modelAsString: true
        type: string
    StorageTaskAssignmentName:
      name: storageTaskAssignmentName
      in: path
      description: The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9]{3,24}$
        maxLength: 24
        minLength: 3
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ContainerName:
      name: containerName
      in: path
      description: The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 63
        minLength: 3
        type: string
    ImmutabilityPolicyName:
      name: immutabilityPolicyName
      in: path
      description: The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: ImmutabilityPolicyName
          modelAsString: false
        type: string
    BlobServicesName:
      name: BlobServicesName
      in: path
      description: The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: BlobServicesName
          modelAsString: false
        type: string
    FileServicesName:
      name: FileServicesName
      in: path
      description: The name of the file Service within the specified storage account. File Service Name must be "default"
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: FileServicesName
          modelAsString: false
        type: string
    ShareName:
      name: shareName
      in: path
      description: The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 63
        minLength: 3
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ListQueueServices:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/QueueServiceProperties'
          description: List of queue services returned.
          readOnly: true
      type: object
    QueueServiceProperties:
      description: The properties of a storage account’s Queue service.
      properties:
        properties:
          properties:
            cors:
              $ref: '#/components/schemas/CorsRules'
              description: Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service.
          x-ms-client-flatten: true
          x-ms-client-name: QueueServiceProperties
          description: The properties of a storage account’s Queue service.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    StorageQueue:
      properties:
        properties:
          $ref: '#/components/schemas/QueueProperties'
          x-ms-client-flatten: true
          x-ms-client-name: QueueProperties
          description: Queue resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    QueueProperties:
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A name-value pair that represents queue metadata.
        approximateMessageCount:
          type: integer
          readOnly: true
          description: Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.
      type: object
    ListQueue:
      properties:
        properties:
          $ref: '#/components/schemas/ListQueueProperties'
          x-ms-client-flatten: true
          x-ms-client-name: QueueProperties
          description: List Queue resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ListQueueProperties:
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A name-value pair that represents queue metadata.
      type: object
    ListQueueResource:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ListQueue'
          description: List of queues returned.
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to list next page of queues
          readOnly: true
      description: Response schema. Contains list of queues returned
      type: object
    CorsRules:
      properties:
        corsRules:
          type: array
          items:
            description: 'Specifies a CORS rule for the Blob service. '
            $ref: '#/components/schemas/CorsRule'
          description: 'The List of CORS rules. You can include up to five CorsRule elements in the request. '
      description: 'Sets the CORS rules. You can include up to five CorsRule elements in the request. '
      type: object
    CorsRule:
      properties:
        allowedOrigins:
          type: array
          items:
            type: string
          description: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
        allowedMethods:
          type: array
          items:
            type: string
            enum:
              - DELETE
              - GET
              - HEAD
              - MERGE
              - POST
              - OPTIONS
              - PUT
              - PATCH
              - CONNECT
              - TRACE
            x-ms-enum:
              name: AllowedMethods
              modelAsString: true
          description: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
        maxAgeInSeconds:
          type: integer
          description: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
        exposedHeaders:
          type: array
          items:
            type: string
          description: Required if CorsRule element is present. A list of response headers to expose to CORS clients.
        allowedHeaders:
          type: array
          items:
            type: string
          description: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
      required:
        - allowedOrigins
        - allowedMethods
        - maxAgeInSeconds
        - exposedHeaders
        - allowedHeaders
      description: Specifies a CORS rule for the Blob service.
      type: object
    DeleteRetentionPolicy:
      properties:
        enabled:
          type: boolean
          description: Indicates whether DeleteRetentionPolicy is enabled.
        days:
          type: integer
          minimum: 1
          maximum: 365
          description: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
        allowPermanentDelete:
          type: boolean
          description: This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
      description: The service properties for soft delete.
      type: object
    SkuName:
      type: string
      description: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
      enum:
        - Standard_LRS
        - Standard_GRS
        - Standard_RAGRS
        - Standard_ZRS
        - Premium_LRS
        - Premium_ZRS
        - Standard_GZRS
        - Standard_RAGZRS
      x-ms-enum:
        name: SkuName
        modelAsString: true
    Tier:
      readOnly: true
      type: string
      description: The SKU tier. This is based on the SKU name.
      enum:
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
      description: An error response from the Storage service.
      type: object
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          description: A list of additional details about the error.
      description: An error response from the Storage service.
      type: object
    SignedIdentifier:
      properties:
        id:
          type: string
          description: An unique identifier of the stored access policy.
        accessPolicy:
          $ref: '#/components/schemas/AccessPolicy'
          description: Access policy
      type: object
    AccessPolicy:
      properties:
        startTime:
          type: string
          format: date-time
          description: Start time of the access policy
        expiryTime:
          type: string
          format: date-time
          description: Expiry time of the access policy
        permission:
          type: string
          description: List of abbreviated permissions.
      type: object
    StorageTaskReportSummary:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskReportInstance'
          x-ms-identifiers: []
          description: Gets storage tasks run result summary.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of storage task run results summary. Returned when the number of run instances and summary reports exceed maximum page size.
          readOnly: true
      description: Fetch Storage Tasks Run Summary.
    StorageTaskReportInstance:
      description: Storage Tasks run report instance
      properties:
        properties:
          $ref: '#/components/schemas/StorageTaskReportProperties'
      type: object
    StorageTaskReportProperties:
      type: object
      properties:
        taskAssignmentId:
          readOnly: true
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts/storageTaskAssignments
          description: Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.
        storageAccountId:
          readOnly: true
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
          description: Represents the Storage Account Id where the storage task definition was applied and executed.
        startTime:
          readOnly: true
          type: string
          description: Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        finishTime:
          readOnly: true
          type: string
          description: End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectsTargetedCount:
          readOnly: true
          type: string
          description: Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectsOperatedOnCount:
          readOnly: true
          type: string
          description: Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectFailedCount:
          readOnly: true
          type: string
          description: Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectsSucceededCount:
          readOnly: true
          type: string
          description: Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        runStatusError:
          readOnly: true
          type: string
          description: Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        runStatusEnum:
          readOnly: true
          type: string
          enum:
            - InProgress
            - Finished
          x-ms-enum:
            name: RunStatusEnum
            modelAsString: true
          description: Represents the status of the execution.
        summaryReportPath:
          readOnly: true
          type: string
          description: 'Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account. '
        taskId:
          readOnly: true
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.StorageActions/storageTasks
          description: Storage Task Arm Id.
        taskVersion:
          readOnly: true
          type: string
          description: Storage Task Version
        runResult:
          readOnly: true
          type: string
          enum:
            - Succeeded
            - Failed
          x-ms-enum:
            name: RunResult
            modelAsString: true
          description: Represents the overall result of the execution for the run instance
      description: Storage task execution report for a run instance.
    NetworkSecurityPerimeterConfiguration:
      description: The Network Security Perimeter configuration resource.
      readOnly: true
      properties:
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProperties'
          description: Properties of the Network Security Perimeter Configuration
          x-ms-client-flatten: true
      type: object
    NetworkSecurityPerimeterConfigurationList:
      description: Result of the List Network Security Perimeter configuration operation.
      type: object
      properties:
        value:
          description: A collection of Network Security Perimeter configurations
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    NetworkSecurityPerimeterConfigurationProperties:
      description: Properties of the Network Security Perimeter Configuration
      type: object
      readOnly: true
      properties:
        provisioningState:
          description: Provisioning state of Network Security Perimeter configuration propagation
          enum:
            - Accepted
            - Succeeded
            - Failed
            - Deleting
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: NetworkSecurityPerimeterConfigurationProvisioningState
            modelAsString: true
        provisioningIssues:
          description: List of Provisioning Issues if any
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ProvisioningIssue'
          x-ms-identifiers:
            - name
        networkSecurityPerimeter:
          $ref: '#/components/schemas/NetworkSecurityPerimeter'
          readOnly: true
        resourceAssociation:
          description: Information about resource association
          readOnly: true
          type: object
          properties:
            name:
              description: Name of the resource association
              type: string
            accessMode:
              description: Access Mode of the resource association
              enum:
                - Enforced
                - Learning
                - Audit
              type: string
              x-ms-enum:
                name: ResourceAssociationAccessMode
                modelAsString: true
        profile:
          description: Network Security Perimeter profile
          readOnly: true
          type: object
          properties:
            name:
              description: Name of the resource
              type: string
            accessRulesVersion:
              description: Current access rules version
              type: number
            accessRules:
              description: List of Access Rules
              type: array
              items:
                $ref: '#/components/schemas/NspAccessRule'
              x-ms-identifiers:
                - name
            diagnosticSettingsVersion:
              description: Diagnostic settings version
              type: number
            enabledLogCategories:
              description: Enabled logging categories
              type: array
              items:
                description: Logging category
                type: string
    ProvisioningIssue:
      description: Describes provisioning issue for given NetworkSecurityPerimeterConfiguration
      readOnly: true
      properties:
        name:
          description: Name of the issue
          type: string
        properties:
          description: Properties of provisioning issue
          type: object
          readOnly: true
          properties:
            issueType:
              description: Type of issue
              enum:
                - Unknown
                - ConfigurationPropagationFailure
              type: string
              x-ms-enum:
                name: IssueType
                modelAsString: true
            severity:
              description: Severity of the issue.
              enum:
                - Warning
                - Error
              type: string
              x-ms-enum:
                name: Severity
                modelAsString: true
            description:
              description: Description of the issue
              type: string
      type: object
    NspAccessRule:
      description: Information of Access Rule in Network Security Perimeter profile
      readOnly: true
      properties:
        name:
          description: Name of the resource
          type: string
        properties:
          description: Properties of Access Rule
          readOnly: true
          type: object
          properties:
            direction:
              description: Direction of Access Rule
              enum:
                - Inbound
                - Outbound
              type: string
              x-ms-enum:
                name: NspAccessRuleDirection
                modelAsString: true
            addressPrefixes:
              description: Address prefixes in the CIDR format for inbound rules
              type: array
              items:
                description: IP Address
                type: string
            subscriptions:
              description: Subscriptions for inbound rules
              type: array
              items:
                description: Subscription for inbound rule
                type: object
                readOnly: true
                properties:
                  id:
                    description: The ARM identifier of subscription
                    type: string
            networkSecurityPerimeters:
              description: NetworkSecurityPerimeters for inbound rules
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/NetworkSecurityPerimeter'
            fullyQualifiedDomainNames:
              description: FQDN for outbound rules
              type: array
              readOnly: true
              items:
                description: Fully qualified domain name
                type: string
      type: object
    NetworkSecurityPerimeter:
      description: NetworkSecurityPerimeter related information
      type: object
      readOnly: true
      properties:
        id:
          description: The ARM identifier of the resource
          type: string
        perimeterGuid:
          description: Guid of the resource
          type: string
        location:
          description: Location of the resource
          type: string
          x-ms-mutability:
            - create
            - read
    ListTableServices:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TableServiceProperties'
          description: List of table services returned.
          readOnly: true
      type: object
    TableServiceProperties:
      description: The properties of a storage account’s Table service.
      properties:
        properties:
          properties:
            cors:
              $ref: '#/components/schemas/CorsRules'
              description: Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service.
          x-ms-client-flatten: true
          x-ms-client-name: TableServiceProperties
          description: The properties of a storage account’s Table service.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    Table:
      description: Properties of the table, including Id, resource name, resource type.
      properties:
        properties:
          $ref: '#/components/schemas/TableProperties'
          x-ms-client-flatten: true
          x-ms-client-name: TableProperties
          description: Table resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TableProperties:
      properties:
        tableName:
          type: string
          readOnly: true
          description: Table name under the specified account
        signedIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/TableSignedIdentifier'
          description: List of stored access policies specified on the table.
      type: object
    ListTableResource:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Table'
          description: List of tables returned.
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of tables
          readOnly: true
      description: Response schema. Contains list of tables returned
      type: object
    TableSignedIdentifier:
      properties:
        id:
          type: string
          description: unique-64-character-value of the stored access policy.
        accessPolicy:
          $ref: '#/components/schemas/TableAccessPolicy'
          description: Access policy
      required:
        - id
      type: object
      description: Object to set Table Access Policy.
    TableAccessPolicy:
      properties:
        startTime:
          type: string
          format: date-time
          description: Start time of the access policy
        expiryTime:
          type: string
          format: date-time
          description: Expiry time of the access policy
        permission:
          type: string
          description: Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'
      required:
        - permission
      type: object
      description: Table Access Policy Properties Object.
    OperationProperties:
      description: Properties of operation, include metric specifications.
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: One property of operation, include metric specifications.
      type: object
    ServiceSpecification:
      description: One property of operation, include metric specifications.
      properties:
        metricSpecifications:
          description: Metric specifications of operation.
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
      type: object
    MetricSpecification:
      description: Metric specification of operation.
      properties:
        name:
          type: string
          description: Name of metric specification.
        displayName:
          type: string
          description: Display name of metric specification.
        displayDescription:
          type: string
          description: Display description of metric specification.
        unit:
          type: string
          description: Unit could be Bytes or Count.
        dimensions:
          description: Dimensions of blobs, including blob type and access tier.
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
        aggregationType:
          type: string
          description: Aggregation type could be Average.
        fillGapWithZero:
          type: boolean
          description: The property to decide fill gap with zero or not.
        category:
          type: string
          description: The category this metric specification belong to, could be Capacity.
        resourceIdDimensionNameOverride:
          type: string
          description: Account Resource Id.
      type: object
    Dimension:
      description: Dimension of blobs, possibly be blob type or access tier.
      properties:
        name:
          type: string
          description: Display name of dimension.
        displayName:
          type: string
          description: Display name of dimension.
      type: object
    StorageAccountCheckNameAvailabilityParameters:
      properties:
        name:
          type: string
          description: The storage account name.
        type:
          type: string
          enum:
            - Microsoft.Storage/storageAccounts
          x-ms-enum:
            name: Type
            modelAsString: false
          description: The type of resource, Microsoft.Storage/storageAccounts
      required:
        - name
        - type
      description: The parameters used to check the availability of the storage account name.
      type: object
    SKUCapability:
      properties:
        name:
          readOnly: true
          type: string
          description: The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
        value:
          readOnly: true
          type: string
          description: A string value to indicate states of given capability. Possibly 'true' or 'false'.
      description: The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
      type: object
    Restriction:
      properties:
        type:
          readOnly: true
          type: string
          description: The type of restrictions. As of now only possible value for this is location.
        values:
          readOnly: true
          type: array
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
        reasonCode:
          type: string
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: ReasonCode
            modelAsString: true
          description: The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
      description: The restriction because of which SKU cannot be used.
      type: object
    StorageSkuListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SkuInformation'
          description: Get the list result of storage SKUs and their properties.
      description: The response from the List Storage SKUs operation.
      type: object
    CheckNameAvailabilityResult:
      properties:
        nameAvailable:
          readOnly: true
          type: boolean
          description: Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.
        reason:
          readOnly: true
          type: string
          description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
          enum:
            - AccountNameInvalid
            - AlreadyExists
          x-ms-enum:
            name: Reason
            modelAsString: false
        message:
          readOnly: true
          type: string
          description: Gets an error message explaining the Reason value in more detail.
      description: The CheckNameAvailability operation response.
      type: object
    SkuInformation:
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
        tier:
          $ref: '#/components/schemas/Tier'
        resourceType:
          readOnly: true
          type: string
          description: The type of the resource, usually it is 'storageAccounts'.
        kind:
          readOnly: true
          type: string
          description: Indicates the type of storage account.
          enum:
            - Storage
            - StorageV2
            - BlobStorage
            - FileStorage
            - BlockBlobStorage
          x-ms-enum:
            name: Kind
            modelAsString: true
        locations:
          readOnly: true
          type: array
          items:
            type: string
          description: The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
        capabilities:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SKUCapability'
          description: The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/Restriction'
          description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
      required:
        - name
      description: Storage SKU and its properties
      type: object
    CustomDomain:
      properties:
        name:
          type: string
          description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
        useSubDomainName:
          type: boolean
          description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
      required:
        - name
      description: The custom domain assigned to this storage account. This can be set via Update.
      type: object
    SasPolicy:
      properties:
        sasExpirationPeriod:
          type: string
          example: 1.15:59:59
          description: The SAS expiration period, DD.HH:MM:SS.
        expirationAction:
          type: string
          enum:
            - Log
            - Block
          x-ms-enum:
            name: ExpirationAction
            modelAsString: true
          default: Log
          description: The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log' action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that do not adhere to the sas policy expiration period.
      required:
        - sasExpirationPeriod
        - expirationAction
      description: SasPolicy assigned to the storage account.
      type: object
    KeyPolicy:
      properties:
        keyExpirationPeriodInDays:
          type: integer
          description: The key expiration period in days.
          format: int32
      required:
        - keyExpirationPeriodInDays
      description: KeyPolicy assigned to the storage account.
      type: object
    KeyCreationTime:
      properties:
        key1:
          type: string
          format: date-time
          example: '2021-02-03T05:57:30.917Z'
        key2:
          type: string
          format: date-time
          example: '2021-02-03T05:57:30.917Z'
      description: Storage account keys creation time.
      type: object
    EncryptionService:
      properties:
        enabled:
          type: boolean
          description: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled.
        lastEnabledTime:
          readOnly: true
          type: string
          format: date-time
          description: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled.
        keyType:
          type: string
          description: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
          enum:
            - Service
            - Account
          x-ms-enum:
            name: KeyType
            modelAsString: true
          x-ms-mutability:
            - create
            - read
      description: A service that allows server-side encryption to be used.
      type: object
    EncryptionServices:
      properties:
        blob:
          $ref: '#/components/schemas/EncryptionService'
          description: The encryption function of the blob storage service.
        file:
          $ref: '#/components/schemas/EncryptionService'
          description: The encryption function of the file storage service.
        table:
          $ref: '#/components/schemas/EncryptionService'
          description: The encryption function of the table storage service.
        queue:
          $ref: '#/components/schemas/EncryptionService'
          description: The encryption function of the queue storage service.
      description: A list of services that support encryption.
      type: object
    Encryption:
      properties:
        services:
          $ref: '#/components/schemas/EncryptionServices'
          description: List of services which support encryption.
        keySource:
          type: string
          description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'
          enum:
            - Microsoft.Storage
            - Microsoft.Keyvault
          x-ms-enum:
            name: KeySource
            modelAsString: true
          default: Microsoft.Storage
        requireInfrastructureEncryption:
          type: boolean
          x-ms-client-name: RequireInfrastructureEncryption
          description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
        keyvaultproperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          x-ms-client-name: KeyVaultProperties
          description: Properties provided by key vault.
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
          x-ms-client-name: EncryptionIdentity
          description: The identity to be used with service-side encryption at rest.
      description: The encryption settings on the storage account.
      type: object
    EncryptionIdentity:
      properties:
        userAssignedIdentity:
          type: string
          description: Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
          x-ms-client-name: EncryptionUserAssignedIdentity
        federatedIdentityClientId:
          type: string
          description: ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account.
          x-ms-client-name: EncryptionFederatedIdentityClientId
      description: Encryption identity for the storage account.
      type: object
    UserAssignedIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of the identity.
        clientId:
          readOnly: true
          type: string
          description: The client ID of the identity.
      description: UserAssignedIdentity for the resource.
      type: object
    ResourceAccessRule:
      properties:
        tenantId:
          type: string
          description: Tenant Id
        resourceId:
          type: string
          description: Resource Id
      description: Resource Access Rule.
      type: object
    VirtualNetworkRule:
      properties:
        id:
          type: string
          x-ms-client-name: VirtualNetworkResourceId
          description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
        action:
          type: string
          enum:
            - Allow
          x-ms-enum:
            name: Action
            modelAsString: false
          default: Allow
          description: The action of virtual network rule.
        state:
          type: string
          enum:
            - Provisioning
            - Deprovisioning
            - Succeeded
            - Failed
            - NetworkSourceDeleted
          x-ms-enum:
            name: State
            modelAsString: true
          description: Gets the state of virtual network rule.
      required:
        - id
      description: Virtual Network rule.
      type: object
    IPRule:
      properties:
        value:
          type: string
          x-ms-client-name: IPAddressOrRange
          description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
        action:
          type: string
          enum:
            - Allow
          x-ms-enum:
            name: Action
            modelAsString: false
          default: Allow
          description: The action of IP ACL rule.
      required:
        - value
      description: IP rule with specific IP or IP range in CIDR format.
      type: object
    NetworkRuleSet:
      properties:
        bypass:
          type: string
          enum:
            - None
            - Logging
            - Metrics
            - AzureServices
          x-ms-enum:
            name: Bypass
            modelAsString: true
          x-ms-client-name: Bypass
          default: AzureServices
          description: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
        resourceAccessRules:
          type: array
          items:
            description: Resource Access Rules.
            $ref: '#/components/schemas/ResourceAccessRule'
          description: Sets the resource access rules
        virtualNetworkRules:
          type: array
          items:
            description: Virtual Network rule.
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: Sets the virtual network rules
        ipRules:
          type: array
          items:
            description: IP rule with specific IP or IP range in CIDR format.
            $ref: '#/components/schemas/IPRule'
          description: Sets the IP ACL rules
        defaultAction:
          type: string
          enum:
            - Allow
            - Deny
          x-ms-enum:
            name: DefaultAction
            modelAsString: false
          default: Allow
          description: Specifies the default action of allow or deny when no other rules match.
      required:
        - defaultAction
      description: Network rule set
      type: object
    AzureFilesIdentityBasedAuthentication:
      properties:
        directoryServiceOptions:
          type: string
          description: Indicates the directory service used. Note that this enum may be extended in the future.
          enum:
            - None
            - AADDS
            - AD
            - AADKERB
          x-ms-enum:
            name: DirectoryServiceOptions
            modelAsString: true
        activeDirectoryProperties:
          $ref: '#/components/schemas/ActiveDirectoryProperties'
          description: Required if directoryServiceOptions are AD, optional if they are AADKERB.
        defaultSharePermission:
          type: string
          description: Default share permission for users using Kerberos authentication if RBAC role is not assigned.
          enum:
            - None
            - StorageFileDataSmbShareReader
            - StorageFileDataSmbShareContributor
            - StorageFileDataSmbShareElevatedContributor
          x-ms-enum:
            name: DefaultSharePermission
            modelAsString: true
      required:
        - directoryServiceOptions
      description: Settings for Azure Files identity based authentication.
      type: object
    ActiveDirectoryProperties:
      properties:
        domainName:
          type: string
          description: Specifies the primary domain that the AD DNS server is authoritative for.
        netBiosDomainName:
          type: string
          description: Specifies the NetBIOS domain name.
        forestName:
          type: string
          description: Specifies the Active Directory forest to get.
        domainGuid:
          type: string
          description: Specifies the domain GUID.
        domainSid:
          type: string
          description: Specifies the security identifier (SID).
        azureStorageSid:
          type: string
          description: Specifies the security identifier (SID) for Azure Storage.
        samAccountName:
          type: string
          description: Specifies the Active Directory SAMAccountName for Azure Storage.
        accountType:
          type: string
          description: Specifies the Active Directory account type for Azure Storage.
          enum:
            - User
            - Computer
          x-ms-enum:
            name: AccountType
            modelAsString: true
      required:
        - domainName
        - domainGuid
      description: Settings properties for Active Directory (AD).
      type: object
    StorageAccountPropertiesCreateParameters:
      properties:
        allowedCopyScope:
          type: string
          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.
          enum:
            - PrivateLink
            - AAD
          x-ms-enum:
            name: AllowedCopyScope
            modelAsString: true
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'.
        sasPolicy:
          $ref: '#/components/schemas/SasPolicy'
          description: SasPolicy assigned to the storage account.
        keyPolicy:
          $ref: '#/components/schemas/KeyPolicy'
          description: KeyPolicy assigned to the storage account.
        customDomain:
          $ref: '#/components/schemas/CustomDomain'
          description: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption settings to be used for server-side encryption for the storage account.
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          x-ms-client-name: NetworkRuleSet
          description: Network rule set
        accessTier:
          type: string
          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.
          enum:
            - Hot
            - Cool
            - Premium
            - Cold
          x-ms-enum:
            name: AccessTier
            modelAsString: false
        azureFilesIdentityBasedAuthentication:
          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'
          description: Provides the identity based authentication settings for Azure Files.
        supportsHttpsTrafficOnly:
          type: boolean
          x-ms-client-name: EnableHttpsTrafficOnly
          description: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
        isSftpEnabled:
          type: boolean
          x-ms-client-name: IsSftpEnabled
          description: Enables Secure File Transfer Protocol, if set to true
        isLocalUserEnabled:
          type: boolean
          x-ms-client-name: IsLocalUserEnabled
          description: Enables local users feature, if set to true
        enableExtendedGroups:
          type: boolean
          x-ms-client-name: EnableExtendedGroups
          description: Enables extended group support with local users feature, if set to true
        isHnsEnabled:
          type: boolean
          x-ms-client-name: IsHnsEnabled
          description: Account HierarchicalNamespace enabled if sets to true.
        largeFileSharesState:
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: LargeFileSharesState
            modelAsString: true
          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
        routingPreference:
          $ref: '#/components/schemas/RoutingPreference'
          x-ms-client-name: RoutingPreference
          description: Maintains information about the network routing choice opted by the user for data transfer
        allowBlobPublicAccess:
          type: boolean
          x-ms-client-name: AllowBlobPublicAccess
          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property.
        minimumTlsVersion:
          type: string
          enum:
            - TLS1_0
            - TLS1_1
            - TLS1_2
            - TLS1_3
          x-ms-enum:
            name: MinimumTlsVersion
            modelAsString: true
          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
        allowSharedKeyAccess:
          type: boolean
          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.
        isNfsV3Enabled:
          type: boolean
          x-ms-client-name: EnableNfsV3
          description: NFS 3.0 protocol support enabled if set to true.
        allowCrossTenantReplication:
          type: boolean
          description: Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default.
        defaultToOAuthAuthentication:
          type: boolean
          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.
        immutableStorageWithVersioning:
          $ref: '#/components/schemas/ImmutableStorageAccount'
          x-ms-client-name: ImmutableStorageWithVersioning
          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default.
        dnsEndpointType:
          type: string
          enum:
            - Standard
            - AzureDnsZone
          x-ms-enum:
            name: DnsEndpointType
            modelAsString: true
          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.
      description: The parameters used to create the storage account.
      type: object
    ExtendedLocationType:
      type: string
      description: The type of extendedLocation.
      enum:
        - EdgeZone
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    ExtendedLocation:
      description: The complex type of the extended location.
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
      type: object
    StorageAccountCreateParameters:
      required:
        - sku
        - kind
        - location
      description: The parameters used when creating a storage account.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: Required. Gets or sets the SKU name.
        kind:
          type: string
          description: Required. Indicates the type of storage account.
          enum:
            - Storage
            - StorageV2
            - BlobStorage
            - FileStorage
            - BlockBlobStorage
          x-ms-enum:
            name: Kind
            modelAsString: true
        location:
          type: string
          description: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageAccountPropertiesCreateParameters'
          description: The parameters used to create the storage account.
      type: object
    Endpoints:
      properties:
        blob:
          readOnly: true
          type: string
          description: Gets the blob endpoint.
        queue:
          readOnly: true
          type: string
          description: Gets the queue endpoint.
        table:
          readOnly: true
          type: string
          description: Gets the table endpoint.
        file:
          readOnly: true
          type: string
          description: Gets the file endpoint.
        web:
          readOnly: true
          type: string
          description: Gets the web endpoint.
        dfs:
          readOnly: true
          type: string
          description: Gets the dfs endpoint.
        microsoftEndpoints:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/StorageAccountMicrosoftEndpoints'
          description: Gets the microsoft routing storage endpoints.
        internetEndpoints:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/StorageAccountInternetEndpoints'
          description: Gets the internet routing storage endpoints
      description: The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
      type: object
    StorageAccountMicrosoftEndpoints:
      properties:
        blob:
          readOnly: true
          type: string
          description: Gets the blob endpoint.
        queue:
          readOnly: true
          type: string
          description: Gets the queue endpoint.
        table:
          readOnly: true
          type: string
          description: Gets the table endpoint.
        file:
          readOnly: true
          type: string
          description: Gets the file endpoint.
        web:
          readOnly: true
          type: string
          description: Gets the web endpoint.
        dfs:
          readOnly: true
          type: string
          description: Gets the dfs endpoint.
      description: The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint.
      type: object
    StorageAccountInternetEndpoints:
      properties:
        blob:
          readOnly: true
          type: string
          description: Gets the blob endpoint.
        file:
          readOnly: true
          type: string
          description: Gets the file endpoint.
        web:
          readOnly: true
          type: string
          description: Gets the web endpoint.
        dfs:
          readOnly: true
          type: string
          description: Gets the dfs endpoint.
      description: The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.
      type: object
    GeoReplicationStats:
      properties:
        status:
          readOnly: true
          type: string
          description: 'The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.'
          enum:
            - Live
            - Bootstrap
            - Unavailable
          x-ms-enum:
            name: GeoReplicationStatus
            modelAsString: true
        lastSyncTime:
          readOnly: true
          type: string
          format: date-time
          description: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
        canFailover:
          readOnly: true
          type: boolean
          description: A boolean flag which indicates whether or not account failover is supported for the account.
        canPlannedFailover:
          readOnly: true
          type: boolean
          description: A boolean flag which indicates whether or not planned account failover is supported for the account.
        postFailoverRedundancy:
          readOnly: true
          type: string
          description: The redundancy type of the account after an account failover is performed.
          enum:
            - Standard_LRS
            - Standard_ZRS
          x-ms-enum:
            name: postFailoverRedundancy
            modelAsString: true
        postPlannedFailoverRedundancy:
          readOnly: true
          type: string
          description: The redundancy type of the account after a planned account failover is performed.
          enum:
            - Standard_GRS
            - Standard_GZRS
            - Standard_RAGRS
            - Standard_RAGZRS
          x-ms-enum:
            name: postPlannedFailoverRedundancy
            modelAsString: true
      description: Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
      type: object
    RoutingPreference:
      properties:
        routingChoice:
          type: string
          description: Routing Choice defines the kind of network routing opted by the user.
          enum:
            - MicrosoftRouting
            - InternetRouting
          x-ms-enum:
            name: RoutingChoice
            modelAsString: true
        publishMicrosoftEndpoints:
          type: boolean
          description: A boolean flag which indicates whether microsoft routing storage endpoints are to be published
        publishInternetEndpoints:
          type: boolean
          description: A boolean flag which indicates whether internet routing storage endpoints are to be published
      description: Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
      type: object
    ImmutableStorageAccount:
      type: object
      properties:
        enabled:
          type: boolean
          description: A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.
        immutabilityPolicy:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/AccountImmutabilityPolicyProperties'
          description: Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy.
      description: This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.
    AccountImmutabilityPolicyProperties:
      type: object
      properties:
        immutabilityPeriodSinceCreationInDays:
          type: integer
          minimum: 1
          maximum: 146000
          format: int32
          description: The immutability period for the blobs in the container since the policy creation, in days.
        state:
          type: string
          description: The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.
          enum:
            - Unlocked
            - Locked
            - Disabled
          x-ms-enum:
            name: AccountImmutabilityPolicyState
            modelAsString: true
        allowProtectedAppendWrites:
          type: boolean
          description: This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
      description: This defines account-level immutability policy properties.
    StorageAccountSkuConversionStatus:
      type: object
      properties:
        skuConversionStatus:
          readOnly: true
          type: string
          description: This property indicates the current sku conversion status.
          enum:
            - InProgress
            - Succeeded
            - Failed
          x-ms-enum:
            name: SkuConversionStatus
            modelAsString: true
        targetSkuName:
          $ref: '#/components/schemas/SkuName'
          description: This property represents the target sku name to which the account sku is being converted asynchronously.
        startTime:
          readOnly: true
          type: string
          description: This property represents the sku conversion start time.
        endTime:
          readOnly: true
          type: string
          description: This property represents the sku conversion end time.
      description: This defines the sku conversion status object for asynchronous sku conversions.
    BlobRestoreStatus:
      properties:
        status:
          readOnly: true
          type: string
          description: 'The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.'
          enum:
            - InProgress
            - Complete
            - Failed
          x-ms-enum:
            name: BlobRestoreProgressStatus
            modelAsString: true
        failureReason:
          readOnly: true
          type: string
          description: Failure reason when blob restore is failed.
        restoreId:
          readOnly: true
          type: string
          description: Id for tracking blob restore request.
        parameters:
          readOnly: true
          $ref: '#/components/schemas/BlobRestoreParameters'
          description: Blob restore request parameters.
      description: Blob restore status.
      type: object
    DeletedAccountProperties:
      properties:
        storageAccountResourceId:
          readOnly: true
          type: string
          description: Full resource id of the original storage account.
        location:
          readOnly: true
          type: string
          description: Location of the deleted account.
        restoreReference:
          readOnly: true
          type: string
          description: Can be used to attempt recovering this deleted account via PutStorageAccount API.
        creationTime:
          readOnly: true
          type: string
          description: Creation time of the deleted account.
        deletionTime:
          readOnly: true
          type: string
          description: Deletion time of the deleted account.
      description: Attributes of a deleted storage account.
      type: object
    StorageAccountProperties:
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: Gets the status of the storage account at the time the operation was called.
          enum:
            - Creating
            - ResolvingDNS
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            modelAsString: false
        primaryEndpoints:
          $ref: '#/components/schemas/Endpoints'
          readOnly: true
          description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
        primaryLocation:
          readOnly: true
          type: string
          description: Gets the location of the primary data center for the storage account.
        statusOfPrimary:
          readOnly: true
          type: string
          description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
          enum:
            - available
            - unavailable
          x-ms-enum:
            name: AccountStatus
            modelAsString: false
        lastGeoFailoverTime:
          readOnly: true
          type: string
          format: date-time
          description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        secondaryLocation:
          readOnly: true
          type: string
          description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        statusOfSecondary:
          readOnly: true
          type: string
          description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
          enum:
            - available
            - unavailable
          x-ms-enum:
            name: AccountStatus
            modelAsString: false
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Gets the creation date and time of the storage account in UTC.
        customDomain:
          $ref: '#/components/schemas/CustomDomain'
          readOnly: true
          description: Gets the custom domain the user assigned to this storage account.
        sasPolicy:
          $ref: '#/components/schemas/SasPolicy'
          readOnly: true
          description: SasPolicy assigned to the storage account.
        keyPolicy:
          $ref: '#/components/schemas/KeyPolicy'
          readOnly: true
          description: KeyPolicy assigned to the storage account.
        keyCreationTime:
          readOnly: true
          $ref: '#/components/schemas/KeyCreationTime'
          description: Storage account keys creation time.
        secondaryEndpoints:
          $ref: '#/components/schemas/Endpoints'
          readOnly: true
          description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
        encryption:
          $ref: '#/components/schemas/Encryption'
          readOnly: true
          description: Encryption settings to be used for server-side encryption for the storage account.
        accessTier:
          readOnly: true
          type: string
          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.
          enum:
            - Hot
            - Cool
            - Premium
            - Cold
          x-ms-enum:
            name: AccessTier
            modelAsString: false
        azureFilesIdentityBasedAuthentication:
          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'
          description: Provides the identity based authentication settings for Azure Files.
        supportsHttpsTrafficOnly:
          type: boolean
          x-ms-client-name: EnableHttpsTrafficOnly
          description: Allows https traffic only to storage service if sets to true.
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          x-ms-client-name: NetworkRuleSet
          description: Network rule set
          readOnly: true
        isSftpEnabled:
          type: boolean
          x-ms-client-name: IsSftpEnabled
          description: Enables Secure File Transfer Protocol, if set to true
        isLocalUserEnabled:
          type: boolean
          x-ms-client-name: IsLocalUserEnabled
          description: Enables local users feature, if set to true
        enableExtendedGroups:
          type: boolean
          x-ms-client-name: EnableExtendedGroups
          description: Enables extended group support with local users feature, if set to true
        isHnsEnabled:
          type: boolean
          x-ms-client-name: IsHnsEnabled
          description: Account HierarchicalNamespace enabled if sets to true.
        geoReplicationStats:
          $ref: '#/components/schemas/GeoReplicationStats'
          x-ms-client-name: GeoReplicationStats
          description: Geo Replication Stats
          readOnly: true
        failoverInProgress:
          type: boolean
          x-ms-client-name: FailoverInProgress
          description: If the failover is in progress, the value will be true, otherwise, it will be null.
          readOnly: true
        largeFileSharesState:
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: LargeFileSharesState
            modelAsString: true
          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of private endpoint connection associated with the specified storage account
        routingPreference:
          $ref: '#/components/schemas/RoutingPreference'
          x-ms-client-name: RoutingPreference
          description: Maintains information about the network routing choice opted by the user for data transfer
        blobRestoreStatus:
          $ref: '#/components/schemas/BlobRestoreStatus'
          x-ms-client-name: BlobRestoreStatus
          description: Blob restore status
          readOnly: true
        allowBlobPublicAccess:
          type: boolean
          x-ms-client-name: AllowBlobPublicAccess
          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property.
        minimumTlsVersion:
          type: string
          enum:
            - TLS1_0
            - TLS1_1
            - TLS1_2
            - TLS1_3
          x-ms-enum:
            name: MinimumTlsVersion
            modelAsString: true
          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
        allowSharedKeyAccess:
          type: boolean
          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.
        isNfsV3Enabled:
          type: boolean
          x-ms-client-name: EnableNfsV3
          description: NFS 3.0 protocol support enabled if set to true.
        allowCrossTenantReplication:
          type: boolean
          description: Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default.
        defaultToOAuthAuthentication:
          type: boolean
          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account.
        immutableStorageWithVersioning:
          $ref: '#/components/schemas/ImmutableStorageAccount'
          x-ms-client-name: ImmutableStorageWithVersioning
          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default.
        allowedCopyScope:
          type: string
          enum:
            - PrivateLink
            - AAD
          x-ms-enum:
            name: AllowedCopyScope
            modelAsString: true
          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.
        storageAccountSkuConversionStatus:
          $ref: '#/components/schemas/StorageAccountSkuConversionStatus'
          x-ms-client-name: StorageAccountSkuConversionStatus
          description: This property is readOnly and is set by server during asynchronous storage account sku conversion operations.
        dnsEndpointType:
          type: string
          enum:
            - Standard
            - AzureDnsZone
          x-ms-enum:
            name: DnsEndpointType
            modelAsString: true
          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.
        isSkuConversionBlocked:
          type: boolean
          x-ms-client-name: IsSkuConversionBlocked
          description: This property will be set to true or false on an event of ongoing migration. Default value is null.
          readOnly: true
        accountMigrationInProgress:
          type: boolean
          x-ms-client-name: AccountMigrationInProgress
          description: If customer initiated account migration is in progress, the value will be true else it will be null.
          readOnly: true
      description: Properties of the storage account.
      type: object
    DeletedAccount:
      description: Deleted storage account
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeletedAccountProperties'
          description: Properties of the deleted account.
      type: object
    StorageAccount:
      description: The storage account.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: Gets the SKU.
        kind:
          readOnly: true
          type: string
          description: Gets the Kind.
          enum:
            - Storage
            - StorageV2
            - BlobStorage
            - FileStorage
            - BlockBlobStorage
          x-ms-enum:
            name: Kind
            modelAsString: true
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageAccountProperties'
          description: Properties of the storage account.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StorageAccountKey:
      properties:
        keyName:
          readOnly: true
          type: string
          description: Name of the key.
        value:
          readOnly: true
          type: string
          description: Base 64-encoded value of the key.
        permissions:
          readOnly: true
          type: string
          description: Permissions for the key -- read-only or full permissions.
          enum:
            - Read
            - Full
          x-ms-enum:
            name: KeyPermission
            modelAsString: false
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Creation time of the key, in round trip date format.
      description: An access key for the storage account.
      type: object
    StorageAccountListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          description: Gets the list of storage accounts and their properties.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.
          readOnly: true
      description: The response from the List Storage Accounts operation.
      type: object
    DeletedAccountListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DeletedAccount'
          description: Gets the list of deleted accounts and their properties.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size.
          readOnly: true
      description: The response from the List Deleted Accounts operation.
      type: object
    StorageAccountListKeysResult:
      properties:
        keys:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageAccountKey'
          description: Gets the list of storage account keys and their properties for the specified storage account.
      description: The response from the ListKeys operation.
      type: object
    StorageAccountRegenerateKeyParameters:
      properties:
        keyName:
          type: string
          description: The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2.
      required:
        - keyName
      description: The parameters used to regenerate the storage account key.
      type: object
    StorageAccountPropertiesUpdateParameters:
      properties:
        customDomain:
          $ref: '#/components/schemas/CustomDomain'
          description: Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled.
        sasPolicy:
          $ref: '#/components/schemas/SasPolicy'
          description: SasPolicy assigned to the storage account.
        keyPolicy:
          $ref: '#/components/schemas/KeyPolicy'
          description: KeyPolicy assigned to the storage account.
        accessTier:
          type: string
          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.
          enum:
            - Hot
            - Cool
            - Premium
            - Cold
          x-ms-enum:
            name: AccessTier
            modelAsString: false
        azureFilesIdentityBasedAuthentication:
          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'
          description: Provides the identity based authentication settings for Azure Files.
        supportsHttpsTrafficOnly:
          type: boolean
          x-ms-client-name: EnableHttpsTrafficOnly
          description: Allows https traffic only to storage service if sets to true.
        isSftpEnabled:
          type: boolean
          x-ms-client-name: IsSftpEnabled
          description: Enables Secure File Transfer Protocol, if set to true
        isLocalUserEnabled:
          type: boolean
          x-ms-client-name: IsLocalUserEnabled
          description: Enables local users feature, if set to true
        enableExtendedGroups:
          type: boolean
          x-ms-client-name: EnableExtendedGroups
          description: Enables extended group support with local users feature, if set to true
        networkAcls:
          description: Network rule set
          x-ms-client-name: NetworkRuleSet
          $ref: '#/components/schemas/NetworkRuleSet'
        largeFileSharesState:
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: LargeFileSharesState
            modelAsString: true
          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
        routingPreference:
          $ref: '#/components/schemas/RoutingPreference'
          x-ms-client-name: RoutingPreference
          description: Maintains information about the network routing choice opted by the user for data transfer
        allowBlobPublicAccess:
          type: boolean
          x-ms-client-name: AllowBlobPublicAccess
          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property.
        minimumTlsVersion:
          type: string
          enum:
            - TLS1_0
            - TLS1_1
            - TLS1_2
            - TLS1_3
          x-ms-enum:
            name: MinimumTlsVersion
            modelAsString: true
          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
        allowSharedKeyAccess:
          type: boolean
          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.
        allowCrossTenantReplication:
          type: boolean
          description: Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default.
        defaultToOAuthAuthentication:
          type: boolean
          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'.
        immutableStorageWithVersioning:
          $ref: '#/components/schemas/ImmutableStorageAccount'
          x-ms-client-name: ImmutableStorageWithVersioning
          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default.
        allowedCopyScope:
          type: string
          enum:
            - PrivateLink
            - AAD
          x-ms-enum:
            name: AllowedCopyScope
            modelAsString: true
          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.
        dnsEndpointType:
          type: string
          enum:
            - Standard
            - AzureDnsZone
          x-ms-enum:
            name: DnsEndpointType
            modelAsString: true
          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.
      description: The parameters used when updating a storage account.
      type: object
    StorageAccountUpdateParameters:
      description: The parameters that can be provided when updating the storage account properties.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageAccountPropertiesUpdateParameters'
          description: The parameters used when updating a storage account.
        kind:
          type: string
          description: Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server.
          enum:
            - Storage
            - StorageV2
            - BlobStorage
            - FileStorage
            - BlockBlobStorage
          x-ms-enum:
            name: Kind
            modelAsString: true
      type: object
    BlobRestoreParameters:
      properties:
        timeToRestore:
          type: string
          format: date-time
          description: Restore blob to the specified time.
        blobRanges:
          type: array
          items:
            $ref: '#/components/schemas/BlobRestoreRange'
          description: Blob ranges to restore.
      required:
        - timeToRestore
        - blobRanges
      description: Blob restore parameters
      type: object
    BlobRestoreRange:
      properties:
        startRange:
          type: string
          description: Blob start range. This is inclusive. Empty means account start.
        endRange:
          type: string
          description: Blob end range. This is exclusive. Empty means account end.
      required:
        - startRange
        - endRange
      description: Blob range
      type: object
    UsageName:
      properties:
        value:
          readOnly: true
          type: string
          description: Gets a string describing the resource name.
        localizedValue:
          readOnly: true
          type: string
          description: Gets a localized string describing the resource name.
      description: The usage names that can be used; currently limited to StorageAccount.
      type: object
    Usage:
      properties:
        unit:
          readOnly: true
          type: string
          description: Gets the unit of measurement.
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountsPerSecond
            - BytesPerSecond
          x-ms-enum:
            name: UsageUnit
            modelAsString: false
        currentValue:
          readOnly: true
          type: integer
          format: int32
          description: Gets the current count of the allocated resources in the subscription.
        limit:
          readOnly: true
          type: integer
          format: int32
          description: Gets the maximum count of the resources that can be allocated in the subscription.
        name:
          $ref: '#/components/schemas/UsageName'
          readOnly: true
          description: Gets the name of the type of usage.
      description: Describes Storage Resource Usage.
      type: object
    UsageListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          description: Gets or sets the list of Storage Resource Usages.
      description: The response from the List Usages operation.
      type: object
    AccountSasParameters:
      properties:
        signedServices:
          type: string
          enum:
            - b
            - q
            - t
            - f
          x-ms-enum:
            name: Services
            modelAsString: true
          x-ms-client-name: Services
          description: 'The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).'
        signedResourceTypes:
          type: string
          enum:
            - s
            - c
            - o
          x-ms-enum:
            name: SignedResourceTypes
            modelAsString: true
          x-ms-client-name: ResourceTypes
          description: 'The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files.'
        signedPermission:
          type: string
          enum:
            - r
            - d
            - w
            - l
            - a
            - c
            - u
            - p
          x-ms-enum:
            name: Permissions
            modelAsString: true
          x-ms-client-name: Permissions
          description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
        signedIp:
          type: string
          x-ms-client-name: IPAddressOrRange
          description: An IP address or a range of IP addresses from which to accept requests.
        signedProtocol:
          type: string
          enum:
            - https,http
            - https
          x-ms-enum:
            name: HttpProtocol
            modelAsString: false
          x-ms-client-name: Protocols
          description: The protocol permitted for a request made with the account SAS.
        signedStart:
          type: string
          format: date-time
          x-ms-client-name: SharedAccessStartTime
          description: The time at which the SAS becomes valid.
        signedExpiry:
          type: string
          format: date-time
          x-ms-client-name: SharedAccessExpiryTime
          description: The time at which the shared access signature becomes invalid.
        keyToSign:
          type: string
          description: The key to sign the account SAS token with.
      required:
        - signedServices
        - signedResourceTypes
        - signedPermission
        - signedExpiry
      description: The parameters to list SAS credentials of a storage account.
      type: object
    ListAccountSasResponse:
      properties:
        accountSasToken:
          readOnly: true
          type: string
          description: List SAS credentials of storage account.
      description: The List SAS credentials operation response.
      type: object
    ServiceSasParameters:
      properties:
        canonicalizedResource:
          type: string
          description: The canonical path to the signed resource.
        signedResource:
          type: string
          enum:
            - b
            - c
            - f
            - s
          x-ms-enum:
            name: signedResource
            modelAsString: true
          x-ms-client-name: Resource
          description: 'The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).'
        signedPermission:
          type: string
          enum:
            - r
            - d
            - w
            - l
            - a
            - c
            - u
            - p
          x-ms-enum:
            name: Permissions
            modelAsString: true
          x-ms-client-name: Permissions
          description: 'The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
        signedIp:
          type: string
          x-ms-client-name: IPAddressOrRange
          description: An IP address or a range of IP addresses from which to accept requests.
        signedProtocol:
          type: string
          enum:
            - https,http
            - https
          x-ms-enum:
            name: HttpProtocol
            modelAsString: false
          x-ms-client-name: Protocols
          description: The protocol permitted for a request made with the account SAS.
        signedStart:
          type: string
          format: date-time
          x-ms-client-name: SharedAccessStartTime
          description: The time at which the SAS becomes valid.
        signedExpiry:
          type: string
          format: date-time
          x-ms-client-name: SharedAccessExpiryTime
          description: The time at which the shared access signature becomes invalid.
        signedIdentifier:
          type: string
          maxLength: 64
          x-ms-client-name: Identifier
          description: A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.
        startPk:
          type: string
          x-ms-client-name: PartitionKeyStart
          description: The start of partition key.
        endPk:
          type: string
          x-ms-client-name: PartitionKeyEnd
          description: The end of partition key.
        startRk:
          type: string
          x-ms-client-name: RowKeyStart
          description: The start of row key.
        endRk:
          type: string
          x-ms-client-name: RowKeyEnd
          description: The end of row key.
        keyToSign:
          type: string
          description: The key to sign the account SAS token with.
        rscc:
          type: string
          x-ms-client-name: CacheControl
          description: The response header override for cache control.
        rscd:
          type: string
          x-ms-client-name: ContentDisposition
          description: The response header override for content disposition.
        rsce:
          type: string
          x-ms-client-name: ContentEncoding
          description: The response header override for content encoding.
        rscl:
          type: string
          x-ms-client-name: ContentLanguage
          description: The response header override for content language.
        rsct:
          type: string
          x-ms-client-name: ContentType
          description: The response header override for content type.
      required:
        - canonicalizedResource
      description: The parameters to list service SAS credentials of a specific resource.
      type: object
    ListServiceSasResponse:
      properties:
        serviceSasToken:
          readOnly: true
          type: string
          description: List service SAS credentials of specific resource.
      description: The List service SAS credentials operation response.
      type: object
    ManagementPolicy:
      description: The Get Storage Account ManagementPolicies operation response.
      properties:
        properties:
          $ref: '#/components/schemas/ManagementPolicyProperties'
          x-ms-client-flatten: true
          description: Returns the Storage Account Data Policies Rules.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ManagementPolicyProperties:
      properties:
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: Returns the date and time the ManagementPolicies was last modified.
        policy:
          $ref: '#/components/schemas/ManagementPolicySchema'
          description: 'The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
      required:
        - policy
      description: The Storage Account ManagementPolicy properties.
      type: object
    ManagementPolicySchema:
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ManagementPolicyRule'
          description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
      required:
        - rules
      description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
      type: object
    ManagementPolicyRule:
      properties:
        enabled:
          type: boolean
          description: Rule is enabled if set to true.
        name:
          type: string
          description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
        type:
          type: string
          description: The valid value is Lifecycle
          enum:
            - Lifecycle
          x-ms-enum:
            name: RuleType
            modelAsString: true
        definition:
          $ref: '#/components/schemas/ManagementPolicyDefinition'
          description: An object that defines the Lifecycle rule.
      required:
        - name
        - type
        - definition
      description: An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
      type: object
    ManagementPolicyDefinition:
      properties:
        actions:
          $ref: '#/components/schemas/ManagementPolicyAction'
          description: An object that defines the action set.
        filters:
          $ref: '#/components/schemas/ManagementPolicyFilter'
          description: An object that defines the filter set.
      required:
        - actions
      description: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
      type: object
    ManagementPolicyFilter:
      properties:
        prefixMatch:
          type: array
          items:
            type: string
          description: An array of strings for prefixes to be match.
        blobTypes:
          type: array
          items:
            type: string
          description: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
        blobIndexMatch:
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
          description: An array of blob index tag based filters, there can be at most 10 tag filters
      required:
        - blobTypes
      description: 'Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. '
      type: object
    TagFilter:
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
          description: This is the filter tag name, it can have 1 - 128 characters
        op:
          type: string
          description: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
        value:
          type: string
          minLength: 0
          maxLength: 256
          description: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
      required:
        - name
        - op
        - value
      description: Blob index tag based filtering for blob objects
      type: object
    ManagementPolicyAction:
      properties:
        baseBlob:
          $ref: '#/components/schemas/ManagementPolicyBaseBlob'
          description: The management policy action for base blob
        snapshot:
          $ref: '#/components/schemas/ManagementPolicySnapShot'
          description: The management policy action for snapshot
        version:
          $ref: '#/components/schemas/ManagementPolicyVersion'
          description: The management policy action for version
      description: Actions are applied to the filtered blobs when the execution condition is met.
      type: object
    ManagementPolicyBaseBlob:
      properties:
        tierToCool:
          $ref: '#/components/schemas/DateAfterModification'
          description: The function to tier blobs to cool storage.
        tierToArchive:
          $ref: '#/components/schemas/DateAfterModification'
          description: The function to tier blobs to archive storage.
        tierToCold:
          $ref: '#/components/schemas/DateAfterModification'
          description: The function to tier blobs to cold storage.
        tierToHot:
          $ref: '#/components/schemas/DateAfterModification'
          description: The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts
        delete:
          $ref: '#/components/schemas/DateAfterModification'
          description: The function to delete the blob
        enableAutoTierToHotFromCool:
          type: boolean
          description: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
      description: Management policy action for base blob.
      type: object
    ManagementPolicySnapShot:
      properties:
        tierToCool:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blob snapshot to cool storage.
        tierToArchive:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blob snapshot to archive storage.
        tierToCold:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blobs to cold storage.
        tierToHot:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts
        delete:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to delete the blob snapshot
      description: Management policy action for snapshot.
      type: object
    ManagementPolicyVersion:
      properties:
        tierToCool:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blob version to cool storage.
        tierToArchive:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blob version to archive storage.
        tierToCold:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blobs to cold storage.
        tierToHot:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts
        delete:
          $ref: '#/components/schemas/DateAfterCreation'
          description: The function to delete the blob version
      description: Management policy action for blob version.
      type: object
    DateAfterModification:
      properties:
        daysAfterModificationGreaterThan:
          type: number
          multipleOf: 1
          minimum: 0
          description: Value indicating the age in days after last modification
        daysAfterLastAccessTimeGreaterThan:
          type: number
          multipleOf: 1
          minimum: 0
          description: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
        daysAfterLastTierChangeGreaterThan:
          type: number
          multipleOf: 1
          minimum: 0
          description: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
        daysAfterCreationGreaterThan:
          type: number
          multipleOf: 1
          minimum: 0
          description: Value indicating the age in days after blob creation.
      description: Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan.
      type: object
    DateAfterCreation:
      properties:
        daysAfterCreationGreaterThan:
          type: number
          multipleOf: 1
          minimum: 0
          description: Value indicating the age in days after creation
        daysAfterLastTierChangeGreaterThan:
          type: number
          multipleOf: 1
          minimum: 0
          description: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
      required:
        - daysAfterCreationGreaterThan
      description: Object to define snapshot and version action conditions.
      type: object
    EncryptionScope:
      description: The Encryption Scope resource.
      properties:
        properties:
          $ref: '#/components/schemas/EncryptionScopeProperties'
          x-ms-client-flatten: true
          x-ms-client-name: EncryptionScopeProperties
          description: Properties of the encryption scope.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    EncryptionScopeProperties:
      properties:
        source:
          type: string
          enum:
            - Microsoft.Storage
            - Microsoft.KeyVault
          x-ms-enum:
            name: EncryptionScopeSource
            modelAsString: true
          description: 'The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.'
        state:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EncryptionScopeState
            modelAsString: true
          description: 'The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.'
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Gets the creation date and time of the encryption scope in UTC.
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: Gets the last modification date and time of the encryption scope in UTC.
        keyVaultProperties:
          $ref: '#/components/schemas/EncryptionScopeKeyVaultProperties'
          description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
        requireInfrastructureEncryption:
          type: boolean
          description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
      description: Properties of the encryption scope.
      type: object
    EncryptionScopeKeyVaultProperties:
      properties:
        keyUri:
          type: string
          description: The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
        currentVersionedKeyIdentifier:
          type: string
          readOnly: true
          description: The object identifier of the current versioned Key Vault Key in use.
        lastKeyRotationTimestamp:
          type: string
          readOnly: true
          format: date-time
          description: Timestamp of last rotation of the Key Vault Key.
      description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
      type: object
    EncryptionScopeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EncryptionScope'
          description: List of encryption scopes requested.
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.
          readOnly: true
      description: List of encryption scopes requested, and if paging is required, a URL to the next page of encryption scopes.
      type: object
    ObjectReplicationPolicies:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ObjectReplicationPolicy'
          description: The replication policy between two storage accounts.
      description: List storage account object replication policies.
      type: object
    ObjectReplicationPolicy:
      description: The replication policy between two storage accounts. Multiple rules can be defined in one policy.
      properties:
        properties:
          $ref: '#/components/schemas/ObjectReplicationPolicyProperties'
          x-ms-client-flatten: true
          description: Returns the Storage Account Object Replication Policy.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ObjectReplicationPolicyProperties:
      properties:
        policyId:
          readOnly: true
          type: string
          description: A unique id for object replication policy.
        enabledTime:
          readOnly: true
          type: string
          format: date-time
          description: Indicates when the policy is enabled on the source account.
        sourceAccount:
          type: string
          description: Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false.
        destinationAccount:
          type: string
          description: Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ObjectReplicationPolicyRule'
          description: The storage account object replication rules.
      required:
        - sourceAccount
        - destinationAccount
      description: The Storage Account ObjectReplicationPolicy properties.
      type: object
    ObjectReplicationPolicyRule:
      properties:
        ruleId:
          type: string
          description: Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
        sourceContainer:
          type: string
          description: Required. Source container name.
        destinationContainer:
          type: string
          description: Required. Destination container name.
        filters:
          $ref: '#/components/schemas/ObjectReplicationPolicyFilter'
          description: Optional. An object that defines the filter set.
      required:
        - sourceContainer
        - destinationContainer
      description: The replication policy rule between two containers.
      type: object
    ObjectReplicationPolicyFilter:
      properties:
        prefixMatch:
          type: array
          items:
            type: string
          description: Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
        minCreationTime:
          type: string
          description: 'Blobs created after the time will be replicated to the destination. It must be in datetime format ''yyyy-MM-ddTHH:mm:ssZ''. Example: 2020-02-19T16:05:00Z'
      description: Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
      type: object
    LocalUsers:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LocalUser'
          description: The list of local users associated with the storage account.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of local users. Returned when total number of requested local users exceeds the maximum page size.
          readOnly: true
      description: List of local users requested, and if paging is required, a URL to the next page of local users.
    LocalUser:
      description: The local user associated with the storage accounts.
      properties:
        properties:
          $ref: '#/components/schemas/LocalUserProperties'
          x-ms-client-flatten: true
          description: Storage account local user properties.
        systemData:
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    LocalUserProperties:
      type: object
      properties:
        permissionScopes:
          type: array
          items:
            $ref: '#/components/schemas/PermissionScope'
          description: The permission scopes of the local user.
        homeDirectory:
          type: string
          description: Optional, local user home directory.
        sshAuthorizedKeys:
          $ref: '#/components/schemas/SshAuthorizedKeys'
        sid:
          readOnly: true
          type: string
          description: A unique Security Identifier that is generated by the server.
        hasSharedKey:
          type: boolean
          description: Indicates whether shared key exists. Set it to false to remove existing shared key.
        hasSshKey:
          type: boolean
          description: Indicates whether ssh key exists. Set it to false to remove existing SSH key.
        hasSshPassword:
          type: boolean
          description: Indicates whether ssh password exists. Set it to false to remove existing SSH password.
        userId:
          readOnly: true
          type: integer
          format: int32
          description: A unique Identifier that is generated by the server.
        groupId:
          type: integer
          format: int32
          description: An identifier for associating a group of users.
        allowAclAuthorization:
          type: boolean
          description: Indicates whether ACL authorization is allowed for this user. Set it to false to disallow using ACL authorization.
        extendedGroups:
          type: array
          items:
            type: integer
            format: int32
          description: Supplementary group membership. Only applicable for local users enabled for NFSv3 access.
        isNFSv3Enabled:
          type: boolean
          description: Indicates if the local user is enabled for access with NFSv3 protocol.
      description: The Storage Account Local User properties.
    LocalUserKeys:
      type: object
      properties:
        sshAuthorizedKeys:
          $ref: '#/components/schemas/SshAuthorizedKeys'
        sharedKey:
          x-ms-secret: true
          $ref: '#/components/schemas/SharedKey'
      description: The Storage Account Local User keys.
    LocalUserRegeneratePasswordResult:
      type: object
      properties:
        sshPassword:
          x-ms-secret: true
          readOnly: true
          type: string
          description: Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user.
      description: The secrets of Storage Account Local User.
    PermissionScope:
      type: object
      properties:
        permissions:
          type: string
          description: 'The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), Create (c), Modify Ownership (o), and Modify Permissions (p).'
        service:
          type: string
          description: The service used by the local user, e.g. blob, file.
        resourceName:
          type: string
          description: The name of resource, normally the container name or the file share name, used by the local user.
      required:
        - permissions
        - service
        - resourceName
    SshAuthorizedKeys:
      type: array
      items:
        $ref: '#/components/schemas/SshPublicKey'
      description: Optional, local user ssh authorized keys for SFTP.
    SshPublicKey:
      type: object
      properties:
        description:
          type: string
          description: Optional. It is used to store the function/usage of the key
        key:
          type: string
          description: 'Ssh public key base64 encoded. The format should be: ''<keyType> <keyData>'', e.g. ssh-rsa AAAABBBB'
    SharedKey:
      readOnly: true
      type: string
      description: Auto generated by the server for SMB authentication.
    ListBlobInventoryPolicy:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BlobInventoryPolicy'
          description: List of blob inventory policies.
          readOnly: true
      description: List of blob inventory policies returned.
      type: object
    BlobInventoryPolicy:
      description: The storage account blob inventory policy.
      properties:
        properties:
          $ref: '#/components/schemas/BlobInventoryPolicyProperties'
          x-ms-client-flatten: true
          description: Returns the storage account blob inventory policy rules.
        systemData:
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    BlobInventoryPolicyProperties:
      properties:
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: Returns the last modified date and time of the blob inventory policy.
        policy:
          $ref: '#/components/schemas/BlobInventoryPolicySchema'
          description: The storage account blob inventory policy object. It is composed of policy rules.
      required:
        - policy
      description: The storage account blob inventory policy properties.
      type: object
    BlobInventoryPolicySchema:
      properties:
        enabled:
          type: boolean
          description: Policy is enabled if set to true.
        destination:
          readOnly: true
          type: string
          description: Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'
        type:
          type: string
          description: The valid value is Inventory
          enum:
            - Inventory
          x-ms-enum:
            name: InventoryRuleType
            modelAsString: true
        rules:
          type: array
          items:
            $ref: '#/components/schemas/BlobInventoryPolicyRule'
          description: The storage account blob inventory policy rules. The rule is applied when it is enabled.
      required:
        - enabled
        - type
        - rules
      description: The storage account blob inventory policy rules.
      type: object
    BlobInventoryPolicyRule:
      properties:
        enabled:
          type: boolean
          description: Rule is enabled when set to true.
        name:
          type: string
          description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
        destination:
          type: string
          description: Container name where blob inventory files are stored. Must be pre-created.
        definition:
          $ref: '#/components/schemas/BlobInventoryPolicyDefinition'
          description: An object that defines the blob inventory policy rule.
      required:
        - name
        - enabled
        - destination
        - definition
      description: An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
      type: object
    BlobInventoryPolicyDefinition:
      properties:
        filters:
          $ref: '#/components/schemas/BlobInventoryPolicyFilter'
          description: An object that defines the filter set.
        format:
          type: string
          description: This is a required field, it specifies the format for the inventory files.
          enum:
            - Csv
            - Parquet
          x-ms-enum:
            name: format
            modelAsString: true
        schedule:
          type: string
          description: This is a required field. This field is used to schedule an inventory formation.
          enum:
            - Daily
            - Weekly
          x-ms-enum:
            name: schedule
            modelAsString: true
        objectType:
          type: string
          description: This is a required field. This field specifies the scope of the inventory created either at the blob or container level.
          enum:
            - Blob
            - Container
          x-ms-enum:
            name: objectType
            modelAsString: true
        schemaFields:
          type: array
          items:
            type: string
          description: This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts.
      required:
        - format
        - schedule
        - objectType
        - schemaFields
      description: An object that defines the blob inventory rule.
      type: object
    BlobInventoryPolicyFilter:
      properties:
        prefixMatch:
          type: array
          items:
            type: string
          description: An array of strings with maximum 10 blob prefixes to be included in the inventory.
        excludePrefix:
          type: array
          items:
            type: string
          description: An array of strings with maximum 10 blob prefixes to be excluded from the inventory.
        blobTypes:
          type: array
          items:
            type: string
          description: An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'.
        includeBlobVersions:
          type: boolean
          description: Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded.
        includeSnapshots:
          type: boolean
          description: Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded.
        includeDeleted:
          type: boolean
          description: For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded.
        creationTime:
          $ref: '#/components/schemas/BlobInventoryCreationTime'
          description: This property is used to filter objects based on the object creation time
      description: An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional.
      type: object
    BlobInventoryCreationTime:
      type: object
      properties:
        lastNDays:
          type: integer
          minimum: 1
          maximum: 36500
          format: int32
          description: When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to 36500.
      description: This property defines the creation time based filtering condition. Blob Inventory schema parameter 'Creation-Time' is mandatory with this filter.
    StorageAccountMigration:
      required:
        - properties
      description: The parameters or status associated with an ongoing or enqueued storage account migration in order to update its current SKU or region.
      properties:
        id:
          type: string
          readOnly: true
          description: Migration Resource Id
        name:
          type: string
          description: current value is 'default' for customer initiated migration
        type:
          type: string
          description: SrpAccountMigrationType in ARM contract which is 'accountMigrations'
        properties:
          type: object
          properties:
            targetSkuName:
              $ref: '#/components/schemas/SkuName'
              description: Target sku name for the account
            migrationStatus:
              type: string
              description: Current status of migration
              enum:
                - Invalid
                - SubmittedForConversion
                - InProgress
                - Complete
                - Failed
              x-ms-enum:
                name: migrationStatus
                modelAsString: true
              readOnly: true
            migrationFailedReason:
              readOnly: true
              type: string
              description: Error code for migration failure
            migrationFailedDetailedReason:
              readOnly: true
              type: string
              description: Reason for migration failure
          x-ms-client-flatten: true
          x-ms-client-name: StorageAccountMigrationDetails
          description: The properties of a storage account’s ongoing or enqueued migration.
          required:
            - targetSkuName
      type: object
    ErrorResponseBody:
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
      description: Error response body contract.
      type: object
    PublicNetworkAccess:
      type: string
      description: Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'.
      enum:
        - Enabled
        - Disabled
        - SecuredByPerimeter
      x-ms-enum:
        name: PublicNetworkAccess
        modelAsString: true
    StorageTaskAssignment:
      required:
        - properties
      description: The storage task assignment.
      properties:
        properties:
          $ref: '#/components/schemas/StorageTaskAssignmentProperties'
          description: Properties of the storage task assignment.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    StorageTaskAssignmentProperties:
      type: object
      properties:
        taskId:
          type: string
          format: arm-id
          description: Id of the corresponding storage task
        enabled:
          type: boolean
          description: Whether the storage task assignment is enabled or not
        description:
          type: string
          description: Text that describes the purpose of the storage task assignment
        executionContext:
          $ref: '#/components/schemas/StorageTaskAssignmentExecutionContext'
          description: The storage task assignment execution context
        report:
          $ref: '#/components/schemas/StorageTaskAssignmentReport'
          description: The storage task assignment report
        provisioningState:
          readOnly: true
          type: string
          description: Represents the provisioning state of the storage task assignment.
          enum:
            - ValidateSubscriptionQuotaBegin
            - ValidateSubscriptionQuotaEnd
            - Creating
            - Succeeded
            - Deleting
            - Canceled
            - Failed
          x-ms-enum:
            name: ProvisioningState
            modelAsString: false
        runStatus:
          $ref: '#/components/schemas/StorageTaskReportProperties'
          description: Run status of storage task assignment
      required:
        - taskId
        - enabled
        - description
        - executionContext
        - report
      description: Properties of the storage task assignment.
    StorageTaskAssignmentExecutionContext:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/ExecutionTarget'
          description: Execution target of the storage task assignment
        trigger:
          $ref: '#/components/schemas/ExecutionTrigger'
          description: Execution trigger of the storage task assignment
      required:
        - trigger
      description: Execution context of the storage task assignment.
    ExecutionTarget:
      type: object
      properties:
        prefix:
          type: array
          items:
            type: string
          description: Required list of object prefixes to be included for task execution
        excludePrefix:
          type: array
          items:
            type: string
          description: List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes, the exclude prefix will be the determining factor
      description: Target helps provide filter parameters for the objects in the storage account and forms the execution context for the storage task
    ExecutionTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - RunOnce
            - OnSchedule
          x-ms-enum:
            name: TriggerType
            modelAsString: false
          description: The trigger type of the storage task assignment execution
        parameters:
          $ref: '#/components/schemas/TriggerParameters'
          description: The trigger parameters of the storage task assignment execution
      required:
        - type
        - parameters
      description: Execution trigger for storage task assignment
    TriggerParameters:
      type: object
      properties:
        startFrom:
          type: string
          format: date-time
          description: When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        interval:
          type: integer
          minimum: 1
          format: int32
          description: Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        intervalUnit:
          type: string
          enum:
            - Days
          x-ms-enum:
            name: IntervalUnit
            modelAsString: false
          description: Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        endBy:
          type: string
          format: date-time
          description: When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        startOn:
          type: string
          format: date-time
          description: When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
      description: The trigger parameters update for the storage task assignment execution
    StorageTaskAssignmentReport:
      type: object
      properties:
        prefix:
          type: string
          description: The container prefix for the location of storage task assignment report
      required:
        - prefix
      description: The storage task assignment report
    StorageTaskAssignmentUpdateParameters:
      description: Parameters of the storage task assignment update request
      properties:
        properties:
          $ref: '#/components/schemas/StorageTaskAssignmentUpdateProperties'
          description: Properties of the storage task assignment.
      type: object
    StorageTaskAssignmentUpdateProperties:
      type: object
      properties:
        taskId:
          readOnly: true
          type: string
          description: Id of the corresponding storage task
        enabled:
          type: boolean
          description: Whether the storage task assignment is enabled or not
        description:
          type: string
          description: Text that describes the purpose of the storage task assignment
        executionContext:
          $ref: '#/components/schemas/StorageTaskAssignmentUpdateExecutionContext'
          description: The storage task assignment execution context
        report:
          $ref: '#/components/schemas/StorageTaskAssignmentUpdateReport'
          description: The storage task assignment report
        provisioningState:
          readOnly: true
          type: string
          description: Represents the provisioning state of the storage task assignment.
          enum:
            - ValidateSubscriptionQuotaBegin
            - ValidateSubscriptionQuotaEnd
            - Creating
            - Succeeded
            - Deleting
            - Canceled
            - Failed
          x-ms-enum:
            name: ProvisioningState
            modelAsString: false
        runStatus:
          $ref: '#/components/schemas/StorageTaskReportProperties'
          description: Run status of storage task assignment
      description: Properties of the storage task update assignment.
    StorageTaskAssignmentUpdateExecutionContext:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/ExecutionTarget'
          description: Execution target of the storage task assignment
        trigger:
          $ref: '#/components/schemas/ExecutionTriggerUpdate'
          description: Execution trigger of the storage task assignment
      description: Execution context of the storage task assignment update.
    ExecutionTriggerUpdate:
      type: object
      properties:
        type:
          type: string
          enum:
            - RunOnce
            - OnSchedule
          x-ms-enum:
            name: TriggerType
            modelAsString: false
          description: The trigger type of the storage task assignment execution
        parameters:
          $ref: '#/components/schemas/TriggerParametersUpdate'
          description: The trigger parameters of the storage task assignment execution
      description: Execution trigger update for storage task assignment
    TriggerParametersUpdate:
      type: object
      properties:
        startFrom:
          type: string
          format: date-time
          description: When to start task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        interval:
          type: integer
          minimum: 1
          format: int32
          description: Run interval of task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        intervalUnit:
          type: string
          enum:
            - Days
          x-ms-enum:
            name: IntervalUnit
            modelAsString: false
          description: Run interval unit of task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        endBy:
          type: string
          format: date-time
          description: When to end task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        startOn:
          type: string
          format: date-time
          description: When to start task execution. This is a mutable field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
      description: The trigger parameters update for the storage task assignment execution
    StorageTaskAssignmentUpdateReport:
      type: object
      properties:
        prefix:
          type: string
          description: The prefix of the storage task assignment report
      description: The storage task assignment report
    StorageTaskAssignmentsList:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskAssignment'
          x-ms-identifiers: []
          description: Gets the list of storage task assignments and their properties.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of storage task assignments. Returned when total number of requested storage task assignments exceed maximum page size.
          readOnly: true
      description: List of storage task assignments for the storage account
    PrivateEndpoint:
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
      type: object
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateEndpointConnectionProperties:
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
      type: object
    PrivateLinkServiceConnectionState:
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
      type: object
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateLinkResourceProperties:
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
      type: object
    PrivateEndpointConnectionListResult:
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
      type: object
    PrivateLinkResourceListResult:
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
      type: object
    ContainerProperties:
      properties:
        version:
          type: string
          readOnly: true
          description: The version of the deleted blob container.
        deleted:
          type: boolean
          readOnly: true
          description: Indicates whether the blob container was deleted.
        deletedTime:
          type: string
          format: date-time
          readOnly: true
          description: Blob container deletion time.
        remainingRetentionDays:
          type: integer
          readOnly: true
          description: Remaining retention days for soft deleted blob container.
        defaultEncryptionScope:
          type: string
          description: Default the container to use specified encryption scope for all writes.
        denyEncryptionScopeOverride:
          type: boolean
          description: Block override of encryption scope from the container default.
        publicAccess:
          type: string
          enum:
            - Container
            - Blob
            - None
          x-ms-enum:
            name: PublicAccess
            modelAsString: false
          description: Specifies whether data in the container may be accessed publicly and the level of access.
        lastModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Returns the date and time the container was last modified.
        leaseStatus:
          type: string
          readOnly: true
          enum:
            - Locked
            - Unlocked
          x-ms-enum:
            name: LeaseStatus
            modelAsString: true
          description: The lease status of the container.
        leaseState:
          type: string
          readOnly: true
          enum:
            - Available
            - Leased
            - Expired
            - Breaking
            - Broken
          x-ms-enum:
            name: LeaseState
            modelAsString: true
          description: Lease state of the container.
        leaseDuration:
          type: string
          readOnly: true
          enum:
            - Infinite
            - Fixed
          x-ms-enum:
            name: LeaseDuration
            modelAsString: true
          description: Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A name-value pair to associate with the container as metadata.
        immutabilityPolicy:
          readOnly: true
          $ref: '#/components/schemas/ImmutabilityPolicyProperties'
          x-ms-client-name: ImmutabilityPolicy
          description: The ImmutabilityPolicy property of the container.
        legalHold:
          readOnly: true
          $ref: '#/components/schemas/LegalHoldProperties'
          description: The LegalHold property of the container.
        hasLegalHold:
          type: boolean
          readOnly: true
          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
        hasImmutabilityPolicy:
          type: boolean
          readOnly: true
          description: The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.
        immutableStorageWithVersioning:
          $ref: '#/components/schemas/ImmutableStorageWithVersioning'
          description: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process.
        enableNfsV3RootSquash:
          type: boolean
          description: Enable NFSv3 root squash on blob container.
        enableNfsV3AllSquash:
          type: boolean
          description: Enable NFSv3 all squash on blob container.
      description: The properties of a container.
      type: object
    BlobContainer:
      description: Properties of the blob container, including Id, resource name, resource type, Etag.
      properties:
        properties:
          $ref: '#/components/schemas/ContainerProperties'
          x-ms-client-flatten: true
          x-ms-client-name: ContainerProperties
          description: Properties of the blob container.
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      type: object
    ImmutabilityPolicyProperty:
      properties:
        immutabilityPeriodSinceCreationInDays:
          type: integer
          description: The immutability period for the blobs in the container since the policy creation, in days.
        state:
          type: string
          readOnly: true
          enum:
            - Locked
            - Unlocked
          x-ms-enum:
            name: ImmutabilityPolicyState
            modelAsString: true
          description: 'The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.'
        allowProtectedAppendWrites:
          type: boolean
          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        allowProtectedAppendWritesAll:
          type: boolean
          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.
      description: The properties of an ImmutabilityPolicy of a blob container.
      type: object
    ImmutabilityPolicyProperties:
      description: The properties of an ImmutabilityPolicy of a blob container.
      properties:
        properties:
          $ref: '#/components/schemas/ImmutabilityPolicyProperty'
          x-ms-client-flatten: true
          description: The properties of an ImmutabilityPolicy of a blob container.
        etag:
          type: string
          readOnly: true
          description: ImmutabilityPolicy Etag.
        updateHistory:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/UpdateHistoryProperty'
          description: The ImmutabilityPolicy update history of the blob container.
      type: object
    ImmutabilityPolicy:
      required:
        - properties
      description: The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
      properties:
        properties:
          $ref: '#/components/schemas/ImmutabilityPolicyProperty'
          x-ms-client-flatten: true
          description: The properties of an ImmutabilityPolicy of a blob container.
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      type: object
    ImmutableStorageWithVersioning:
      properties:
        enabled:
          type: boolean
          description: This is an immutable property, when set to true it enables object level immutability at the container level.
        timeStamp:
          type: string
          format: date-time
          readOnly: true
          description: Returns the date and time the object level immutability was enabled.
        migrationState:
          type: string
          readOnly: true
          enum:
            - InProgress
            - Completed
          x-ms-enum:
            name: MigrationState
            modelAsString: true
          description: This property denotes the container level immutability to object level immutability migration state.
      description: Object level immutability properties of the container.
      type: object
    UpdateHistoryProperty:
      properties:
        update:
          type: string
          readOnly: true
          enum:
            - put
            - lock
            - extend
          x-ms-enum:
            name: ImmutabilityPolicyUpdateType
            modelAsString: true
          description: 'The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.'
        immutabilityPeriodSinceCreationInDays:
          type: integer
          readOnly: true
          description: The immutability period for the blobs in the container since the policy creation, in days.
        timestamp:
          type: string
          format: date-time
          readOnly: true
          description: Returns the date and time the ImmutabilityPolicy was updated.
        objectIdentifier:
          type: string
          readOnly: true
          description: Returns the Object ID of the user who updated the ImmutabilityPolicy.
        tenantId:
          type: string
          readOnly: true
          description: Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
        upn:
          type: string
          readOnly: true
          description: Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
        allowProtectedAppendWrites:
          type: boolean
          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        allowProtectedAppendWritesAll:
          type: boolean
          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.
      description: An update history of the ImmutabilityPolicy of a blob container.
      type: object
    LegalHoldProperties:
      properties:
        hasLegalHold:
          type: boolean
          readOnly: true
          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagProperty'
          description: The list of LegalHold tags of a blob container.
        protectedAppendWritesHistory:
          $ref: '#/components/schemas/ProtectedAppendWritesHistory'
          description: Protected append blob writes history.
      description: The LegalHold property of a blob container.
      type: object
    TagProperty:
      properties:
        tag:
          type: string
          readOnly: true
          description: The tag value.
        timestamp:
          type: string
          format: date-time
          readOnly: true
          description: Returns the date and time the tag was added.
        objectIdentifier:
          type: string
          readOnly: true
          description: Returns the Object ID of the user who added the tag.
        tenantId:
          type: string
          readOnly: true
          description: Returns the Tenant ID that issued the token for the user who added the tag.
        upn:
          type: string
          readOnly: true
          description: Returns the User Principal Name of the user who added the tag.
      description: A tag of the LegalHold of a blob container.
      type: object
    ProtectedAppendWritesHistory:
      type: object
      properties:
        allowProtectedAppendWritesAll:
          type: boolean
          description: When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
        timestamp:
          type: string
          format: date-time
          readOnly: true
          description: Returns the date and time the tag was added.
      description: Protected append writes history setting for the blob container with Legal holds.
    LegalHold:
      properties:
        hasLegalHold:
          type: boolean
          readOnly: true
          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
        tags:
          type: array
          items:
            type: string
            maxLength: 23
            minLength: 3
          description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
        allowProtectedAppendWritesAll:
          type: boolean
          description: When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
      required:
        - tags
      description: The LegalHold property of a blob container.
      type: object
    ListContainerItem:
      description: The blob container properties be listed out.
      properties:
        properties:
          $ref: '#/components/schemas/ContainerProperties'
          x-ms-client-flatten: true
          description: The blob container properties be listed out.
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      type: object
    ListContainerItems:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ListContainerItem'
          description: List of blobs containers returned.
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
      description: Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers.
      type: object
    BlobServiceProperties:
      description: The properties of a storage account’s Blob service.
      properties:
        properties:
          properties:
            cors:
              $ref: '#/components/schemas/CorsRules'
              description: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
            defaultServiceVersion:
              type: string
              description: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
            deleteRetentionPolicy:
              $ref: '#/components/schemas/DeleteRetentionPolicy'
              description: The blob service properties for blob soft delete.
            isVersioningEnabled:
              type: boolean
              description: Versioning is enabled if set to true.
            automaticSnapshotPolicyEnabled:
              type: boolean
              description: Deprecated in favor of isVersioningEnabled property.
            changeFeed:
              $ref: '#/components/schemas/ChangeFeed'
              description: The blob service properties for change feed events.
            restorePolicy:
              $ref: '#/components/schemas/RestorePolicyProperties'
              description: The blob service properties for blob restore policy.
            containerDeleteRetentionPolicy:
              $ref: '#/components/schemas/DeleteRetentionPolicy'
              description: The blob service properties for container soft delete.
            lastAccessTimeTrackingPolicy:
              $ref: '#/components/schemas/LastAccessTimeTrackingPolicy'
              description: The blob service property to configure last access time based tracking policy.
          x-ms-client-flatten: true
          x-ms-client-name: BlobServiceProperties
          description: The properties of a storage account’s Blob service.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: Sku name and tier.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    BlobServiceItems:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BlobServiceProperties'
          description: List of blob services returned.
          readOnly: true
      type: object
    ChangeFeed:
      properties:
        enabled:
          type: boolean
          description: Indicates whether change feed event logging is enabled for the Blob service.
        retentionInDays:
          type: integer
          minimum: 1
          maximum: 146000
          format: int32
          description: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
      description: The blob service properties for change feed events.
      type: object
    RestorePolicyProperties:
      properties:
        enabled:
          type: boolean
          description: Blob restore is enabled if set to true.
        days:
          type: integer
          minimum: 1
          maximum: 365
          description: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
        lastEnabledTime:
          type: string
          format: date-time
          readOnly: true
          description: Deprecated in favor of minRestoreTime property.
        minRestoreTime:
          type: string
          format: date-time
          readOnly: true
          description: Returns the minimum date and time that the restore can be started.
      required:
        - enabled
      description: The blob service properties for blob restore policy
      type: object
    LastAccessTimeTrackingPolicy:
      properties:
        enable:
          type: boolean
          description: When set to true last access time based tracking is enabled.
        name:
          type: string
          description: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
          enum:
            - AccessTimeTracking
          x-ms-enum:
            name: name
            modelAsString: true
        trackingGranularityInDays:
          type: integer
          format: int32
          description: The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
        blobType:
          type: array
          items:
            type: string
          description: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
      required:
        - enable
      description: The blob service properties for Last access time based tracking policy.
      type: object
    LeaseContainerRequest:
      properties:
        action:
          type: string
          enum:
            - Acquire
            - Renew
            - Change
            - Release
            - Break
          x-ms-enum:
            name: LeaseContainerRequestAction
            modelAsString: true
          description: Specifies the lease action. Can be one of the available actions.
        leaseId:
          type: string
          description: Identifies the lease. Can be specified in any valid GUID string format.
        breakPeriod:
          type: integer
          description: Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.
        leaseDuration:
          type: integer
          description: Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires.
        proposedLeaseId:
          type: string
          description: Optional for acquire, required for change. Proposed lease ID, in a GUID string format.
      required:
        - action
      description: Lease Container request schema.
      type: object
    LeaseContainerResponse:
      properties:
        leaseId:
          type: string
          description: Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease.
        leaseTimeSeconds:
          type: string
          description: Approximate time remaining in the lease period, in seconds.
      description: Lease Container response schema.
      type: object
    FileServiceItems:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FileServiceProperties'
          description: List of file services returned.
          readOnly: true
      type: object
    FileServiceProperties:
      description: The properties of File services in storage account.
      properties:
        properties:
          properties:
            cors:
              $ref: '#/components/schemas/CorsRules'
              description: Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
            shareDeleteRetentionPolicy:
              $ref: '#/components/schemas/DeleteRetentionPolicy'
              description: The file service properties for share soft delete.
            protocolSettings:
              $ref: '#/components/schemas/ProtocolSettings'
              description: Protocol settings for file service
          x-ms-client-flatten: true
          x-ms-client-name: FileServiceProperties
          description: The properties of File services in storage account.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: Sku name and tier.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProtocolSettings:
      properties:
        smb:
          $ref: '#/components/schemas/SmbSetting'
          description: Setting for SMB protocol
      description: Protocol settings for file service
      type: object
    SmbSetting:
      properties:
        multichannel:
          $ref: '#/components/schemas/Multichannel'
          description: Multichannel setting. Applies to Premium FileStorage only.
        versions:
          type: string
          description: SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
        authenticationMethods:
          type: string
          description: SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
        kerberosTicketEncryption:
          type: string
          description: Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
        channelEncryption:
          type: string
          description: SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
      description: Setting for SMB protocol
      type: object
    Multichannel:
      properties:
        enabled:
          type: boolean
          description: Indicates whether multichannel is enabled
      description: Multichannel setting. Applies to Premium FileStorage only.
      type: object
    FileShare:
      description: Properties of the file share, including Id, resource name, resource type, Etag.
      properties:
        properties:
          $ref: '#/components/schemas/FileShareProperties'
          x-ms-client-flatten: true
          x-ms-client-name: FileShareProperties
          description: Properties of the file share.
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      type: object
    DeletedShare:
      properties:
        deletedShareName:
          type: string
          description: Required. Identify the name of the deleted share that will be restored.
        deletedShareVersion:
          type: string
          description: Required. Identify the version of the deleted share that will be restored.
      required:
        - deletedShareName
        - deletedShareVersion
      description: The deleted share to be restored.
      type: object
    FileShareItem:
      description: The file share properties be listed out.
      properties:
        properties:
          $ref: '#/components/schemas/FileShareProperties'
          x-ms-client-flatten: true
          description: The file share properties be listed out.
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      type: object
    FileShareItems:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FileShareItem'
          description: List of file shares returned.
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size.
          readOnly: true
      description: Response schema. Contains list of shares returned, and if paging is requested or required, a URL to next page of shares.
      type: object
    FileShareProperties:
      properties:
        lastModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Returns the date and time the share was last modified.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A name-value pair to associate with the share as metadata.
        shareQuota:
          type: integer
          minimum: 1
          maximum: 102400
          description: The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
        enabledProtocols:
          type: string
          enum:
            - SMB
            - NFS
          x-ms-enum:
            name: EnabledProtocols
            modelAsString: true
          description: The authentication protocol that is used for the file share. Can only be specified when creating a share.
          x-ms-mutability:
            - create
            - read
        rootSquash:
          type: string
          enum:
            - NoRootSquash
            - RootSquash
            - AllSquash
          x-ms-enum:
            name: RootSquashType
            modelAsString: true
          description: The property is for NFS share only. The default is NoRootSquash.
        version:
          type: string
          readOnly: true
          description: The version of the share.
        deleted:
          type: boolean
          readOnly: true
          description: Indicates whether the share was deleted.
        deletedTime:
          type: string
          format: date-time
          readOnly: true
          description: The deleted time if the share was deleted.
        remainingRetentionDays:
          type: integer
          readOnly: true
          description: Remaining retention days for share that was soft deleted.
        accessTier:
          type: string
          enum:
            - TransactionOptimized
            - Hot
            - Cool
            - Premium
          x-ms-enum:
            name: ShareAccessTier
            modelAsString: true
          description: Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.
        accessTierChangeTime:
          type: string
          format: date-time
          readOnly: true
          description: Indicates the last modification time for share access tier.
        accessTierStatus:
          type: string
          readOnly: true
          description: Indicates if there is a pending transition for access tier.
        shareUsageBytes:
          type: integer
          format: int64
          readOnly: true
          description: The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.
        leaseStatus:
          type: string
          readOnly: true
          enum:
            - Locked
            - Unlocked
          x-ms-enum:
            name: LeaseStatus
            modelAsString: true
          description: The lease status of the share.
        leaseState:
          type: string
          readOnly: true
          enum:
            - Available
            - Leased
            - Expired
            - Breaking
            - Broken
          x-ms-enum:
            name: LeaseState
            modelAsString: true
          description: Lease state of the share.
        leaseDuration:
          type: string
          readOnly: true
          enum:
            - Infinite
            - Fixed
          x-ms-enum:
            name: LeaseDuration
            modelAsString: true
          description: Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.
        signedIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/SignedIdentifier'
          description: List of stored access policies specified on the share.
        snapshotTime:
          type: string
          format: date-time
          readOnly: true
          description: Creation time of share snapshot returned in the response of list shares with expand param "snapshots".
      description: The properties of the file share.
      type: object
    LeaseShareRequest:
      properties:
        action:
          type: string
          enum:
            - Acquire
            - Renew
            - Change
            - Release
            - Break
          x-ms-enum:
            name: LeaseShareAction
            modelAsString: true
          description: Specifies the lease action. Can be one of the available actions.
        leaseId:
          type: string
          description: Identifies the lease. Can be specified in any valid GUID string format.
        breakPeriod:
          type: integer
          format: int32
          description: Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.
        leaseDuration:
          type: integer
          format: int32
          description: Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires.
        proposedLeaseId:
          type: string
          description: Optional for acquire, required for change. Proposed lease ID, in a GUID string format.
      required:
        - action
      description: Lease Share request schema.
      type: object
    LeaseShareResponse:
      properties:
        leaseId:
          type: string
          description: Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease.
        leaseTimeSeconds:
          type: string
          description: Approximate time remaining in the lease period, in seconds.
      description: Lease Share response schema.
      type: object
  x-stackQL-resources:
    queue_services:
      id: azure.storage.queue_services
      name: queue_services
      title: queue_services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices?api-version=2023-05-01/get'
            operationId: QueueServices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListQueueServices
            objectKey: $.value
        set_service_properties:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1{queueServiceName}?api-version=2023-05-01/put'
            operationId: QueueServices_SetServiceProperties
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QueueServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/queue_services/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    queue_services_service_properties:
      id: azure.storage.queue_services_service_properties
      name: queue_services_service_properties
      title: queue_services_service_properties
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1{queueServiceName}?api-version=2023-05-01/get'
            operationId: QueueServicesServiceProperties_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QueueServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/queue_services_service_properties/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    queues:
      id: azure.storage.queues
      name: queues
      title: queues
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}?api-version=2023-05-01/put'
            operationId: Queue_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageQueue
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}?api-version=2023-05-01/patch'
            operationId: Queue_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageQueue
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}?api-version=2023-05-01/get'
            operationId: Queue_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageQueue
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}?api-version=2023-05-01/delete'
            operationId: Queue_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues?api-version=2023-05-01/get'
            operationId: Queue_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListQueueResource
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/queues/methods/get'
          - $ref: '#/components/x-stackQL-resources/queues/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/queues/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/queues/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/queues/methods/delete'
    network_security_perimeter_configurations:
      id: azure.storage.network_security_perimeter_configurations
      name: network_security_perimeter_configurations
      title: network_security_perimeter_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1networkSecurityPerimeterConfigurations?api-version=2023-05-01/get'
            operationId: NetworkSecurityPerimeterConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfigurationList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}?api-version=2023-05-01/get'
            operationId: NetworkSecurityPerimeterConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfiguration
        reconcile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}~1reconcile?api-version=2023-05-01/post'
            operationId: NetworkSecurityPerimeterConfigurations_Reconcile
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    table_services:
      id: azure.storage.table_services
      name: table_services
      title: table_services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices?api-version=2023-05-01/get'
            operationId: TableServices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListTableServices
            objectKey: $.value
        set_service_properties:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1{tableServiceName}?api-version=2023-05-01/put'
            operationId: TableServices_SetServiceProperties
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TableServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/table_services/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    table_services_service_properties:
      id: azure.storage.table_services_service_properties
      name: table_services_service_properties
      title: table_services_service_properties
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1{tableServiceName}?api-version=2023-05-01/get'
            operationId: TableServicesServiceProperties_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TableServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/table_services_service_properties/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    tables:
      id: azure.storage.tables
      name: tables
      title: tables
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}?api-version=2023-05-01/put'
            operationId: Table_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Table
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}?api-version=2023-05-01/patch'
            operationId: Table_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Table
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}?api-version=2023-05-01/get'
            operationId: Table_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Table
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}?api-version=2023-05-01/delete'
            operationId: Table_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables?api-version=2023-05-01/get'
            operationId: Table_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListTableResource
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables/methods/get'
          - $ref: '#/components/x-stackQL-resources/tables/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/tables/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/delete'
    operations:
      id: azure.storage.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Storage~1operations?api-version=2023-05-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    skus:
      id: azure.storage.skus
      name: skus
      title: skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1skus?api-version=2023-05-01/get'
            operationId: Skus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageSkuListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts:
      id: azure.storage.accounts
      name: accounts
      title: accounts
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1checkNameAvailability?api-version=2023-05-01/post'
            operationId: StorageAccounts_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResult
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}?api-version=2023-05-01/put'
            operationId: StorageAccounts_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccount
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}?api-version=2023-05-01/delete'
            operationId: StorageAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}?api-version=2023-05-01/patch'
            operationId: StorageAccounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccount
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1storageAccounts?api-version=2023-05-01/get'
            operationId: StorageAccounts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts?api-version=2023-05-01/get'
            operationId: StorageAccounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountListResult
            objectKey: $.value
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1regenerateKey?api-version=2023-05-01/post'
            operationId: StorageAccounts_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountListKeysResult
        failover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1failover?api-version=2023-05-01/post'
            operationId: StorageAccounts_Failover
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        hierarchical_namespace_migration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1hnsonmigration?api-version=2023-05-01/post'
            operationId: StorageAccounts_HierarchicalNamespaceMigration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        abort_hierarchical_namespace_migration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1aborthnsonmigration?api-version=2023-05-01/post'
            operationId: StorageAccounts_AbortHierarchicalNamespaceMigration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customer_initiated_migration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1startAccountMigration?api-version=2023-05-01/post'
            operationId: StorageAccounts_CustomerInitiatedMigration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore_blob_ranges:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1restoreBlobRanges?api-version=2023-05-01/post'
            operationId: StorageAccounts_RestoreBlobRanges
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobRestoreStatus
        revoke_user_delegation_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1revokeUserDelegationKeys?api-version=2023-05-01/post'
            operationId: StorageAccounts_RevokeUserDelegationKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    accounts_properties:
      id: azure.storage.accounts_properties
      name: accounts_properties
      title: accounts_properties
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}?api-version=2023-05-01/get'
            operationId: StorageAccountsProperties_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccount
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_properties/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    deleted_accounts:
      id: azure.storage.deleted_accounts
      name: deleted_accounts
      title: deleted_accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1deletedAccounts?api-version=2023-05-01/get'
            operationId: DeletedAccounts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeletedAccountListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1deletedAccounts~1{deletedAccountName}?api-version=2023-05-01/get'
            operationId: DeletedAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeletedAccount
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deleted_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/deleted_accounts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts_keys:
      id: azure.storage.accounts_keys
      name: accounts_keys
      title: accounts_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1listKeys?api-version=2023-05-01/post'
            operationId: StorageAccountsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountListKeysResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    usages:
      id: azure.storage.usages
      name: usages
      title: usages
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1usages?api-version=2023-05-01/get'
            operationId: Usages_ListByLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsageListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list_by_location'
        insert: []
        update: []
        replace: []
        delete: []
    accounts_account_sas:
      id: azure.storage.accounts_account_sas
      name: accounts_account_sas
      title: accounts_account_sas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListAccountSas?api-version=2023-05-01/post'
            operationId: StorageAccountsAccountSAS_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListAccountSasResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_account_sas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts_service_sas:
      id: azure.storage.accounts_service_sas
      name: accounts_service_sas
      title: accounts_service_sas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListServiceSas?api-version=2023-05-01/post'
            operationId: StorageAccountsServiceSAS_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListServiceSasResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_service_sas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts_customer_initiated_migrations:
      id: azure.storage.accounts_customer_initiated_migrations
      name: accounts_customer_initiated_migrations
      title: accounts_customer_initiated_migrations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1accountMigrations~1{migrationName}?api-version=2023-05-01/get'
            operationId: StorageAccountsCustomerInitiatedMigration_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountMigration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_customer_initiated_migrations/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    management_policies:
      id: azure.storage.management_policies
      name: management_policies
      title: management_policies
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}?api-version=2023-05-01/get'
            operationId: ManagementPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagementPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}?api-version=2023-05-01/put'
            operationId: ManagementPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagementPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}?api-version=2023-05-01/delete'
            operationId: ManagementPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/management_policies/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/management_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/management_policies/methods/delete'
    blob_inventory_policies:
      id: azure.storage.blob_inventory_policies
      name: blob_inventory_policies
      title: blob_inventory_policies
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}?api-version=2023-05-01/get'
            operationId: BlobInventoryPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobInventoryPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}?api-version=2023-05-01/put'
            operationId: BlobInventoryPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobInventoryPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}?api-version=2023-05-01/delete'
            operationId: BlobInventoryPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies?api-version=2023-05-01/get'
            operationId: BlobInventoryPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListBlobInventoryPolicy
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/blob_inventory_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/blob_inventory_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/blob_inventory_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/blob_inventory_policies/methods/delete'
    private_endpoint_connections:
      id: azure.storage.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections?api-version=2023-05-01/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-05-01/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-05-01/put'
            operationId: PrivateEndpointConnections_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-05-01/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.storage.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_storage_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateLinkResources?api-version=2023-05-01/get'
            operationId: PrivateLinkResources_ListByStorageAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_storage_account'
        insert: []
        update: []
        replace: []
        delete: []
    object_replication_policies:
      id: azure.storage.object_replication_policies
      name: object_replication_policies
      title: object_replication_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies?api-version=2023-05-01/get'
            operationId: ObjectReplicationPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectReplicationPolicies
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}?api-version=2023-05-01/get'
            operationId: ObjectReplicationPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectReplicationPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}?api-version=2023-05-01/put'
            operationId: ObjectReplicationPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectReplicationPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}?api-version=2023-05-01/delete'
            operationId: ObjectReplicationPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/object_replication_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/object_replication_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/object_replication_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/object_replication_policies/methods/delete'
    local_users:
      id: azure.storage.local_users
      name: local_users
      title: local_users
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers?api-version=2023-05-01/get'
            operationId: LocalUsers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocalUsers
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}?api-version=2023-05-01/get'
            operationId: LocalUsers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocalUser
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}?api-version=2023-05-01/put'
            operationId: LocalUsers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocalUser
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}?api-version=2023-05-01/delete'
            operationId: LocalUsers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_password:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1regeneratePassword?api-version=2023-05-01/post'
            operationId: LocalUsers_RegeneratePassword
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocalUserRegeneratePasswordResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/local_users/methods/get'
          - $ref: '#/components/x-stackQL-resources/local_users/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/local_users/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/local_users/methods/delete'
    local_users_keys:
      id: azure.storage.local_users_keys
      name: local_users_keys
      title: local_users_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1listKeys?api-version=2023-05-01/post'
            operationId: LocalUsersKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocalUserKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/local_users_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    encryption_scopes:
      id: azure.storage.encryption_scopes
      name: encryption_scopes
      title: encryption_scopes
      methods:
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}?api-version=2023-05-01/put'
            operationId: EncryptionScopes_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EncryptionScope
        patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}?api-version=2023-05-01/patch'
            operationId: EncryptionScopes_Patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EncryptionScope
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}?api-version=2023-05-01/get'
            operationId: EncryptionScopes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EncryptionScope
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes?api-version=2023-05-01/get'
            operationId: EncryptionScopes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EncryptionScopeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/encryption_scopes/methods/get'
          - $ref: '#/components/x-stackQL-resources/encryption_scopes/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/encryption_scopes/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/encryption_scopes/methods/put'
        delete: []
    task_assignments:
      id: azure.storage.task_assignments
      name: task_assignments
      title: task_assignments
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1storageTaskAssignments~1{storageTaskAssignmentName}?api-version=2023-05-01/put'
            operationId: StorageTaskAssignments_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskAssignment
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1storageTaskAssignments~1{storageTaskAssignmentName}?api-version=2023-05-01/patch'
            operationId: StorageTaskAssignments_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskAssignment
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1storageTaskAssignments~1{storageTaskAssignmentName}?api-version=2023-05-01/get'
            operationId: StorageTaskAssignments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskAssignment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1storageTaskAssignments~1{storageTaskAssignmentName}?api-version=2023-05-01/delete'
            operationId: StorageTaskAssignments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1storageTaskAssignments?api-version=2023-05-01/get'
            operationId: StorageTaskAssignments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskAssignmentsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/task_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/task_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/task_assignments/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/task_assignments/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/task_assignments/methods/delete'
    task_assignments_instances_reports:
      id: azure.storage.task_assignments_instances_reports
      name: task_assignments_instances_reports
      title: task_assignments_instances_reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1reports?api-version=2023-05-01/get'
            operationId: StorageTaskAssignmentsInstancesReport_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskReportSummary
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/task_assignments_instances_reports/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    task_assignment_instances_reports:
      id: azure.storage.task_assignment_instances_reports
      name: task_assignment_instances_reports
      title: task_assignment_instances_reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1storageTaskAssignments~1{storageTaskAssignmentName}~1reports?api-version=2023-05-01/get'
            operationId: StorageTaskAssignmentInstancesReport_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskReportSummary
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/task_assignment_instances_reports/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    blob_services:
      id: azure.storage.blob_services
      name: blob_services
      title: blob_services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices?api-version=2023-05-01/get'
            operationId: BlobServices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobServiceItems
            objectKey: $.value
        set_service_properties:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1{BlobServicesName}?api-version=2023-05-01/put'
            operationId: BlobServices_SetServiceProperties
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/blob_services/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    blob_services_service_properties:
      id: azure.storage.blob_services_service_properties
      name: blob_services_service_properties
      title: blob_services_service_properties
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1{BlobServicesName}?api-version=2023-05-01/get'
            operationId: BlobServicesServiceProperties_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/blob_services_service_properties/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    blob_containers:
      id: azure.storage.blob_containers
      name: blob_containers
      title: blob_containers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers?api-version=2023-05-01/get'
            operationId: BlobContainers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListContainerItems
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}?api-version=2023-05-01/put'
            operationId: BlobContainers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobContainer
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}?api-version=2023-05-01/patch'
            operationId: BlobContainers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobContainer
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}?api-version=2023-05-01/get'
            operationId: BlobContainers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BlobContainer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}?api-version=2023-05-01/delete'
            operationId: BlobContainers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_legal_hold:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1setLegalHold?api-version=2023-05-01/post'
            operationId: BlobContainers_SetLegalHold
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LegalHold
        clear_legal_hold:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1clearLegalHold?api-version=2023-05-01/post'
            operationId: BlobContainers_ClearLegalHold
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LegalHold
        lock_immutability_policy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1lock?api-version=2023-05-01/post'
            operationId: BlobContainers_LockImmutabilityPolicy
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImmutabilityPolicy
        extend_immutability_policy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1extend?api-version=2023-05-01/post'
            operationId: BlobContainers_ExtendImmutabilityPolicy
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImmutabilityPolicy
        lease:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1lease?api-version=2023-05-01/post'
            operationId: BlobContainers_Lease
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LeaseContainerResponse
        object_level_worm:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1migrate?api-version=2023-05-01/post'
            operationId: BlobContainers_ObjectLevelWorm
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/get'
          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/delete'
    blob_containers_immutability_policies:
      id: azure.storage.blob_containers_immutability_policies
      name: blob_containers_immutability_policies
      title: blob_containers_immutability_policies
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}?api-version=2023-05-01/put'
            operationId: BlobContainersImmutabilityPolicy_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImmutabilityPolicy
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}?api-version=2023-05-01/get'
            operationId: BlobContainersImmutabilityPolicy_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImmutabilityPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}?api-version=2023-05-01/delete'
            operationId: BlobContainersImmutabilityPolicy_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImmutabilityPolicy
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/blob_containers_immutability_policies/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/blob_containers_immutability_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/blob_containers_immutability_policies/methods/delete'
    file_services:
      id: azure.storage.file_services
      name: file_services
      title: file_services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices?api-version=2023-05-01/get'
            operationId: FileServices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileServiceItems
            objectKey: $.value
        set_service_properties:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1{FileServicesName}?api-version=2023-05-01/put'
            operationId: FileServices_SetServiceProperties
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_services/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    file_services_service_properties:
      id: azure.storage.file_services_service_properties
      name: file_services_service_properties
      title: file_services_service_properties
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1{FileServicesName}?api-version=2023-05-01/get'
            operationId: FileServicesServiceProperties_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileServiceProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_services_service_properties/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    file_shares:
      id: azure.storage.file_shares
      name: file_shares
      title: file_shares
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares?api-version=2023-05-01/get'
            operationId: FileShares_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShareItems
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}?api-version=2023-05-01/put'
            operationId: FileShares_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShare
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}?api-version=2023-05-01/patch'
            operationId: FileShares_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShare
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}?api-version=2023-05-01/get'
            operationId: FileShares_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileShare
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}?api-version=2023-05-01/delete'
            operationId: FileShares_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1restore?api-version=2023-05-01/post'
            operationId: FileShares_Restore
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lease:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1lease?api-version=2023-05-01/post'
            operationId: FileShares_Lease
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LeaseShareResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/get'
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/file_shares/methods/delete'
    vw_queues:
      id: azure.storage.vw_queues
      name: vw_queues
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.approximateMessageCount') as "approximate_message_count",
              subscriptionId,
              resourceGroupName,
              accountName,
              queueName
              FROM azure.storage.queues
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.approximateMessageCount') as "approximate_message_count",
                subscriptionId,
                resourceGroupName,
                accountName,
                queueName
                FROM azure.storage.queues
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_network_security_perimeter_configurations:
      id: azure.storage.vw_network_security_perimeter_configurations
      name: vw_network_security_perimeter_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.provisioningIssues') as "provisioning_issues",
              JSON_EXTRACT(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
              JSON_EXTRACT(properties, '$.resourceAssociation') as "resource_association",
              JSON_EXTRACT(properties, '$.profile') as "profile",
              subscriptionId,
              resourceGroupName,
              accountName,
              networkSecurityPerimeterConfigurationName
              FROM azure.storage.network_security_perimeter_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.provisioningIssues') as "provisioning_issues",
                json_extract_path_text(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
                json_extract_path_text(properties, '$.resourceAssociation') as "resource_association",
                json_extract_path_text(properties, '$.profile') as "profile",
                subscriptionId,
                resourceGroupName,
                accountName,
                networkSecurityPerimeterConfigurationName
                FROM azure.storage.network_security_perimeter_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_tables:
      id: azure.storage.vw_tables
      name: vw_tables
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.tableName') as "table_name",
              JSON_EXTRACT(properties, '$.signedIdentifiers') as "signed_identifiers",
              subscriptionId,
              resourceGroupName,
              accountName,
              tableName
              FROM azure.storage.tables
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.tableName') as "table_name",
                json_extract_path_text(properties, '$.signedIdentifiers') as "signed_identifiers",
                subscriptionId,
                resourceGroupName,
                accountName,
                tableName
                FROM azure.storage.tables
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_accounts_properties:
      id: azure.storage.vw_accounts_properties
      name: vw_accounts_properties
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              sku as sku,
              kind as kind,
              identity as identity,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.primaryEndpoints') as "primary_endpoints",
              JSON_EXTRACT(properties, '$.primaryLocation') as "primary_location",
              JSON_EXTRACT(properties, '$.statusOfPrimary') as "status_of_primary",
              JSON_EXTRACT(properties, '$.lastGeoFailoverTime') as "last_geo_failover_time",
              JSON_EXTRACT(properties, '$.secondaryLocation') as "secondary_location",
              JSON_EXTRACT(properties, '$.statusOfSecondary') as "status_of_secondary",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.customDomain') as "custom_domain",
              JSON_EXTRACT(properties, '$.sasPolicy') as "sas_policy",
              JSON_EXTRACT(properties, '$.keyPolicy') as "key_policy",
              JSON_EXTRACT(properties, '$.keyCreationTime') as "key_creation_time",
              JSON_EXTRACT(properties, '$.secondaryEndpoints') as "secondary_endpoints",
              JSON_EXTRACT(properties, '$.encryption') as "encryption",
              JSON_EXTRACT(properties, '$.accessTier') as "access_tier",
              JSON_EXTRACT(properties, '$.azureFilesIdentityBasedAuthentication') as "azure_files_identity_based_authentication",
              JSON_EXTRACT(properties, '$.supportsHttpsTrafficOnly') as "supports_https_traffic_only",
              JSON_EXTRACT(properties, '$.networkAcls') as "network_acls",
              JSON_EXTRACT(properties, '$.isSftpEnabled') as "is_sftp_enabled",
              JSON_EXTRACT(properties, '$.isLocalUserEnabled') as "is_local_user_enabled",
              JSON_EXTRACT(properties, '$.enableExtendedGroups') as "enable_extended_groups",
              JSON_EXTRACT(properties, '$.isHnsEnabled') as "is_hns_enabled",
              JSON_EXTRACT(properties, '$.geoReplicationStats') as "geo_replication_stats",
              JSON_EXTRACT(properties, '$.failoverInProgress') as "failover_in_progress",
              JSON_EXTRACT(properties, '$.largeFileSharesState') as "large_file_shares_state",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.routingPreference') as "routing_preference",
              JSON_EXTRACT(properties, '$.blobRestoreStatus') as "blob_restore_status",
              JSON_EXTRACT(properties, '$.allowBlobPublicAccess') as "allow_blob_public_access",
              JSON_EXTRACT(properties, '$.minimumTlsVersion') as "minimum_tls_version",
              JSON_EXTRACT(properties, '$.allowSharedKeyAccess') as "allow_shared_key_access",
              JSON_EXTRACT(properties, '$.isNfsV3Enabled') as "is_nfs_v3_enabled",
              JSON_EXTRACT(properties, '$.allowCrossTenantReplication') as "allow_cross_tenant_replication",
              JSON_EXTRACT(properties, '$.defaultToOAuthAuthentication') as "default_to_oauth_authentication",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.immutableStorageWithVersioning') as "immutable_storage_with_versioning",
              JSON_EXTRACT(properties, '$.allowedCopyScope') as "allowed_copy_scope",
              JSON_EXTRACT(properties, '$.storageAccountSkuConversionStatus') as "storage_account_sku_conversion_status",
              JSON_EXTRACT(properties, '$.dnsEndpointType') as "dns_endpoint_type",
              JSON_EXTRACT(properties, '$.isSkuConversionBlocked') as "is_sku_conversion_blocked",
              JSON_EXTRACT(properties, '$.accountMigrationInProgress') as "account_migration_in_progress",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.storage.accounts_properties
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                sku as sku,
                kind as kind,
                identity as identity,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.primaryEndpoints') as "primary_endpoints",
                json_extract_path_text(properties, '$.primaryLocation') as "primary_location",
                json_extract_path_text(properties, '$.statusOfPrimary') as "status_of_primary",
                json_extract_path_text(properties, '$.lastGeoFailoverTime') as "last_geo_failover_time",
                json_extract_path_text(properties, '$.secondaryLocation') as "secondary_location",
                json_extract_path_text(properties, '$.statusOfSecondary') as "status_of_secondary",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.customDomain') as "custom_domain",
                json_extract_path_text(properties, '$.sasPolicy') as "sas_policy",
                json_extract_path_text(properties, '$.keyPolicy') as "key_policy",
                json_extract_path_text(properties, '$.keyCreationTime') as "key_creation_time",
                json_extract_path_text(properties, '$.secondaryEndpoints') as "secondary_endpoints",
                json_extract_path_text(properties, '$.encryption') as "encryption",
                json_extract_path_text(properties, '$.accessTier') as "access_tier",
                json_extract_path_text(properties, '$.azureFilesIdentityBasedAuthentication') as "azure_files_identity_based_authentication",
                json_extract_path_text(properties, '$.supportsHttpsTrafficOnly') as "supports_https_traffic_only",
                json_extract_path_text(properties, '$.networkAcls') as "network_acls",
                json_extract_path_text(properties, '$.isSftpEnabled') as "is_sftp_enabled",
                json_extract_path_text(properties, '$.isLocalUserEnabled') as "is_local_user_enabled",
                json_extract_path_text(properties, '$.enableExtendedGroups') as "enable_extended_groups",
                json_extract_path_text(properties, '$.isHnsEnabled') as "is_hns_enabled",
                json_extract_path_text(properties, '$.geoReplicationStats') as "geo_replication_stats",
                json_extract_path_text(properties, '$.failoverInProgress') as "failover_in_progress",
                json_extract_path_text(properties, '$.largeFileSharesState') as "large_file_shares_state",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.routingPreference') as "routing_preference",
                json_extract_path_text(properties, '$.blobRestoreStatus') as "blob_restore_status",
                json_extract_path_text(properties, '$.allowBlobPublicAccess') as "allow_blob_public_access",
                json_extract_path_text(properties, '$.minimumTlsVersion') as "minimum_tls_version",
                json_extract_path_text(properties, '$.allowSharedKeyAccess') as "allow_shared_key_access",
                json_extract_path_text(properties, '$.isNfsV3Enabled') as "is_nfs_v3_enabled",
                json_extract_path_text(properties, '$.allowCrossTenantReplication') as "allow_cross_tenant_replication",
                json_extract_path_text(properties, '$.defaultToOAuthAuthentication') as "default_to_oauth_authentication",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.immutableStorageWithVersioning') as "immutable_storage_with_versioning",
                json_extract_path_text(properties, '$.allowedCopyScope') as "allowed_copy_scope",
                json_extract_path_text(properties, '$.storageAccountSkuConversionStatus') as "storage_account_sku_conversion_status",
                json_extract_path_text(properties, '$.dnsEndpointType') as "dns_endpoint_type",
                json_extract_path_text(properties, '$.isSkuConversionBlocked') as "is_sku_conversion_blocked",
                json_extract_path_text(properties, '$.accountMigrationInProgress') as "account_migration_in_progress",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.storage.accounts_properties
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_deleted_accounts:
      id: azure.storage.vw_deleted_accounts
      name: vw_deleted_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.storageAccountResourceId') as "storage_account_resource_id",
              JSON_EXTRACT(properties, '$.location') as "location",
              JSON_EXTRACT(properties, '$.restoreReference') as "restore_reference",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.deletionTime') as "deletion_time",
              subscriptionId,
              location,
              deletedAccountName
              FROM azure.storage.deleted_accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.storageAccountResourceId') as "storage_account_resource_id",
                json_extract_path_text(properties, '$.location') as "location",
                json_extract_path_text(properties, '$.restoreReference') as "restore_reference",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.deletionTime') as "deletion_time",
                subscriptionId,
                location,
                deletedAccountName
                FROM azure.storage.deleted_accounts
                WHERE subscriptionId = 'replace-me';
    vw_management_policies:
      id: azure.storage.vw_management_policies
      name: vw_management_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.lastModifiedTime') as "last_modified_time",
              JSON_EXTRACT(properties, '$.policy') as "policy",
              subscriptionId,
              resourceGroupName,
              accountName,
              managementPolicyName
              FROM azure.storage.management_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND managementPolicyName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.lastModifiedTime') as "last_modified_time",
                json_extract_path_text(properties, '$.policy') as "policy",
                subscriptionId,
                resourceGroupName,
                accountName,
                managementPolicyName
                FROM azure.storage.management_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND managementPolicyName = 'replace-me';
    vw_blob_inventory_policies:
      id: azure.storage.vw_blob_inventory_policies
      name: vw_blob_inventory_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.lastModifiedTime') as "last_modified_time",
              JSON_EXTRACT(properties, '$.policy') as "policy",
              subscriptionId,
              resourceGroupName,
              accountName,
              blobInventoryPolicyName
              FROM azure.storage.blob_inventory_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.lastModifiedTime') as "last_modified_time",
                json_extract_path_text(properties, '$.policy') as "policy",
                subscriptionId,
                resourceGroupName,
                accountName,
                blobInventoryPolicyName
                FROM azure.storage.blob_inventory_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.storage.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              privateEndpointConnectionName
              FROM azure.storage.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                privateEndpointConnectionName
                FROM azure.storage.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_object_replication_policies:
      id: azure.storage.vw_object_replication_policies
      name: vw_object_replication_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.policyId') as "policy_id",
              JSON_EXTRACT(properties, '$.enabledTime') as "enabled_time",
              JSON_EXTRACT(properties, '$.sourceAccount') as "source_account",
              JSON_EXTRACT(properties, '$.destinationAccount') as "destination_account",
              JSON_EXTRACT(properties, '$.rules') as "rules",
              subscriptionId,
              resourceGroupName,
              accountName,
              objectReplicationPolicyId
              FROM azure.storage.object_replication_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.policyId') as "policy_id",
                json_extract_path_text(properties, '$.enabledTime') as "enabled_time",
                json_extract_path_text(properties, '$.sourceAccount') as "source_account",
                json_extract_path_text(properties, '$.destinationAccount') as "destination_account",
                json_extract_path_text(properties, '$.rules') as "rules",
                subscriptionId,
                resourceGroupName,
                accountName,
                objectReplicationPolicyId
                FROM azure.storage.object_replication_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_local_users:
      id: azure.storage.vw_local_users
      name: vw_local_users
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.permissionScopes') as "permission_scopes",
              JSON_EXTRACT(properties, '$.homeDirectory') as "home_directory",
              JSON_EXTRACT(properties, '$.sshAuthorizedKeys') as "ssh_authorized_keys",
              JSON_EXTRACT(properties, '$.sid') as "sid",
              JSON_EXTRACT(properties, '$.hasSharedKey') as "has_shared_key",
              JSON_EXTRACT(properties, '$.hasSshKey') as "has_ssh_key",
              JSON_EXTRACT(properties, '$.hasSshPassword') as "has_ssh_password",
              JSON_EXTRACT(properties, '$.userId') as "user_id",
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.allowAclAuthorization') as "allow_acl_authorization",
              JSON_EXTRACT(properties, '$.extendedGroups') as "extended_groups",
              JSON_EXTRACT(properties, '$.isNFSv3Enabled') as "is_nf_sv3_enabled",
              subscriptionId,
              resourceGroupName,
              accountName,
              username
              FROM azure.storage.local_users
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.permissionScopes') as "permission_scopes",
                json_extract_path_text(properties, '$.homeDirectory') as "home_directory",
                json_extract_path_text(properties, '$.sshAuthorizedKeys') as "ssh_authorized_keys",
                json_extract_path_text(properties, '$.sid') as "sid",
                json_extract_path_text(properties, '$.hasSharedKey') as "has_shared_key",
                json_extract_path_text(properties, '$.hasSshKey') as "has_ssh_key",
                json_extract_path_text(properties, '$.hasSshPassword') as "has_ssh_password",
                json_extract_path_text(properties, '$.userId') as "user_id",
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.allowAclAuthorization') as "allow_acl_authorization",
                json_extract_path_text(properties, '$.extendedGroups') as "extended_groups",
                json_extract_path_text(properties, '$.isNFSv3Enabled') as "is_nf_sv3_enabled",
                subscriptionId,
                resourceGroupName,
                accountName,
                username
                FROM azure.storage.local_users
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_encryption_scopes:
      id: azure.storage.vw_encryption_scopes
      name: vw_encryption_scopes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.lastModifiedTime') as "last_modified_time",
              JSON_EXTRACT(properties, '$.keyVaultProperties') as "key_vault_properties",
              JSON_EXTRACT(properties, '$.requireInfrastructureEncryption') as "require_infrastructure_encryption",
              subscriptionId,
              resourceGroupName,
              accountName,
              encryptionScopeName
              FROM azure.storage.encryption_scopes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.lastModifiedTime') as "last_modified_time",
                json_extract_path_text(properties, '$.keyVaultProperties') as "key_vault_properties",
                json_extract_path_text(properties, '$.requireInfrastructureEncryption') as "require_infrastructure_encryption",
                subscriptionId,
                resourceGroupName,
                accountName,
                encryptionScopeName
                FROM azure.storage.encryption_scopes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_task_assignments:
      id: azure.storage.vw_task_assignments
      name: vw_task_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.taskId') as "task_id",
              JSON_EXTRACT(properties, '$.enabled') as "enabled",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.executionContext') as "execution_context",
              JSON_EXTRACT(properties, '$.report') as "report",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.runStatus') as "run_status",
              subscriptionId,
              resourceGroupName,
              accountName,
              storageTaskAssignmentName
              FROM azure.storage.task_assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.taskId') as "task_id",
                json_extract_path_text(properties, '$.enabled') as "enabled",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.executionContext') as "execution_context",
                json_extract_path_text(properties, '$.report') as "report",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.runStatus') as "run_status",
                subscriptionId,
                resourceGroupName,
                accountName,
                storageTaskAssignmentName
                FROM azure.storage.task_assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_blob_containers:
      id: azure.storage.vw_blob_containers
      name: vw_blob_containers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              etag as etag,
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.deleted') as "deleted",
              JSON_EXTRACT(properties, '$.deletedTime') as "deleted_time",
              JSON_EXTRACT(properties, '$.remainingRetentionDays') as "remaining_retention_days",
              JSON_EXTRACT(properties, '$.defaultEncryptionScope') as "default_encryption_scope",
              JSON_EXTRACT(properties, '$.denyEncryptionScopeOverride') as "deny_encryption_scope_override",
              JSON_EXTRACT(properties, '$.publicAccess') as "public_access",
              JSON_EXTRACT(properties, '$.lastModifiedTime') as "last_modified_time",
              JSON_EXTRACT(properties, '$.leaseStatus') as "lease_status",
              JSON_EXTRACT(properties, '$.leaseState') as "lease_state",
              JSON_EXTRACT(properties, '$.leaseDuration') as "lease_duration",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.immutabilityPolicy') as "immutability_policy",
              JSON_EXTRACT(properties, '$.legalHold') as "legal_hold",
              JSON_EXTRACT(properties, '$.hasLegalHold') as "has_legal_hold",
              JSON_EXTRACT(properties, '$.hasImmutabilityPolicy') as "has_immutability_policy",
              JSON_EXTRACT(properties, '$.immutableStorageWithVersioning') as "immutable_storage_with_versioning",
              JSON_EXTRACT(properties, '$.enableNfsV3RootSquash') as "enable_nfs_v3_root_squash",
              JSON_EXTRACT(properties, '$.enableNfsV3AllSquash') as "enable_nfs_v3_all_squash",
              subscriptionId,
              resourceGroupName,
              accountName,
              containerName
              FROM azure.storage.blob_containers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                etag as etag,
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.deleted') as "deleted",
                json_extract_path_text(properties, '$.deletedTime') as "deleted_time",
                json_extract_path_text(properties, '$.remainingRetentionDays') as "remaining_retention_days",
                json_extract_path_text(properties, '$.defaultEncryptionScope') as "default_encryption_scope",
                json_extract_path_text(properties, '$.denyEncryptionScopeOverride') as "deny_encryption_scope_override",
                json_extract_path_text(properties, '$.publicAccess') as "public_access",
                json_extract_path_text(properties, '$.lastModifiedTime') as "last_modified_time",
                json_extract_path_text(properties, '$.leaseStatus') as "lease_status",
                json_extract_path_text(properties, '$.leaseState') as "lease_state",
                json_extract_path_text(properties, '$.leaseDuration') as "lease_duration",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.immutabilityPolicy') as "immutability_policy",
                json_extract_path_text(properties, '$.legalHold') as "legal_hold",
                json_extract_path_text(properties, '$.hasLegalHold') as "has_legal_hold",
                json_extract_path_text(properties, '$.hasImmutabilityPolicy') as "has_immutability_policy",
                json_extract_path_text(properties, '$.immutableStorageWithVersioning') as "immutable_storage_with_versioning",
                json_extract_path_text(properties, '$.enableNfsV3RootSquash') as "enable_nfs_v3_root_squash",
                json_extract_path_text(properties, '$.enableNfsV3AllSquash') as "enable_nfs_v3_all_squash",
                subscriptionId,
                resourceGroupName,
                accountName,
                containerName
                FROM azure.storage.blob_containers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_blob_containers_immutability_policies:
      id: azure.storage.vw_blob_containers_immutability_policies
      name: vw_blob_containers_immutability_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              etag as etag,
              JSON_EXTRACT(properties, '$.immutabilityPeriodSinceCreationInDays') as "immutability_period_since_creation_in_days",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.allowProtectedAppendWrites') as "allow_protected_append_writes",
              JSON_EXTRACT(properties, '$.allowProtectedAppendWritesAll') as "allow_protected_append_writes_all",
              subscriptionId,
              resourceGroupName,
              accountName,
              containerName,
              immutabilityPolicyName
              FROM azure.storage.blob_containers_immutability_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND containerName = 'replace-me' AND immutabilityPolicyName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                etag as etag,
                json_extract_path_text(properties, '$.immutabilityPeriodSinceCreationInDays') as "immutability_period_since_creation_in_days",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.allowProtectedAppendWrites') as "allow_protected_append_writes",
                json_extract_path_text(properties, '$.allowProtectedAppendWritesAll') as "allow_protected_append_writes_all",
                subscriptionId,
                resourceGroupName,
                accountName,
                containerName,
                immutabilityPolicyName
                FROM azure.storage.blob_containers_immutability_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND containerName = 'replace-me' AND immutabilityPolicyName = 'replace-me';
    vw_file_shares:
      id: azure.storage.vw_file_shares
      name: vw_file_shares
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              etag as etag,
              JSON_EXTRACT(properties, '$.lastModifiedTime') as "last_modified_time",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.shareQuota') as "share_quota",
              JSON_EXTRACT(properties, '$.enabledProtocols') as "enabled_protocols",
              JSON_EXTRACT(properties, '$.rootSquash') as "root_squash",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.deleted') as "deleted",
              JSON_EXTRACT(properties, '$.deletedTime') as "deleted_time",
              JSON_EXTRACT(properties, '$.remainingRetentionDays') as "remaining_retention_days",
              JSON_EXTRACT(properties, '$.accessTier') as "access_tier",
              JSON_EXTRACT(properties, '$.accessTierChangeTime') as "access_tier_change_time",
              JSON_EXTRACT(properties, '$.accessTierStatus') as "access_tier_status",
              JSON_EXTRACT(properties, '$.shareUsageBytes') as "share_usage_bytes",
              JSON_EXTRACT(properties, '$.leaseStatus') as "lease_status",
              JSON_EXTRACT(properties, '$.leaseState') as "lease_state",
              JSON_EXTRACT(properties, '$.leaseDuration') as "lease_duration",
              JSON_EXTRACT(properties, '$.signedIdentifiers') as "signed_identifiers",
              JSON_EXTRACT(properties, '$.snapshotTime') as "snapshot_time",
              subscriptionId,
              resourceGroupName,
              accountName,
              shareName
              FROM azure.storage.file_shares
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                etag as etag,
                json_extract_path_text(properties, '$.lastModifiedTime') as "last_modified_time",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.shareQuota') as "share_quota",
                json_extract_path_text(properties, '$.enabledProtocols') as "enabled_protocols",
                json_extract_path_text(properties, '$.rootSquash') as "root_squash",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.deleted') as "deleted",
                json_extract_path_text(properties, '$.deletedTime') as "deleted_time",
                json_extract_path_text(properties, '$.remainingRetentionDays') as "remaining_retention_days",
                json_extract_path_text(properties, '$.accessTier') as "access_tier",
                json_extract_path_text(properties, '$.accessTierChangeTime') as "access_tier_change_time",
                json_extract_path_text(properties, '$.accessTierStatus') as "access_tier_status",
                json_extract_path_text(properties, '$.shareUsageBytes') as "share_usage_bytes",
                json_extract_path_text(properties, '$.leaseStatus') as "lease_status",
                json_extract_path_text(properties, '$.leaseState') as "lease_state",
                json_extract_path_text(properties, '$.leaseDuration') as "lease_duration",
                json_extract_path_text(properties, '$.signedIdentifiers') as "signed_identifiers",
                json_extract_path_text(properties, '$.snapshotTime') as "snapshot_time",
                subscriptionId,
                resourceGroupName,
                accountName,
                shareName
                FROM azure.storage.file_shares
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices?api-version=2023-05-01:
    get:
      tags:
        - QueueServiceProperties
      operationId: QueueServices_List
      description: List all queue services for the storage account
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned the properties of a storage account’s Queue service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueueServices'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}?api-version=2023-05-01:
    put:
      tags:
        - QueueServiceProperties
      operationId: QueueServices_SetServiceProperties
      description: 'Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/QueueServiceName'
      requestBody:
        description: The properties of a storage account’s Queue service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueServiceProperties'
      responses:
        '200':
          description: OK -- Sets The properties of a storage account’s Queue service successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueServiceProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - QueueServiceProperties
      operationId: QueueServicesServiceProperties_Get
      description: Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/QueueServiceName'
      responses:
        '200':
          description: OK -- returned the properties of a storage account’s Queue service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueServiceProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: QueueServices_GetServiceProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}?api-version=2023-05-01:
    put:
      tags:
        - QueueService
      operationId: Queue_Create
      description: Creates a new queue with the specified queue name, under the specified account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/QueueName'
      requestBody:
        description: Queue properties and metadata to be created with
        required: true
        x-ms-requestBody-name: queue
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageQueue'
      responses:
        '200':
          description: OK -- Creates a queue with the given queue name successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageQueue'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - QueueService
      operationId: Queue_Update
      description: Creates a new queue with the specified queue name, under the specified account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/QueueName'
      requestBody:
        description: Queue properties and metadata to be created with
        required: true
        x-ms-requestBody-name: queue
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageQueue'
      responses:
        '200':
          description: OK -- Creates a queue with the given queue name successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageQueue'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - QueueService
      operationId: Queue_Get
      description: Gets the queue with the specified queue name, under the specified account if it exists.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/QueueName'
      responses:
        '200':
          description: OK -- returned table with the specified table name successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageQueue'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - QueueService
      operationId: Queue_Delete
      description: Deletes the queue with the specified queue name, under the specified account if it exists.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/QueueName'
      responses:
        '204':
          description: No Content - Successfully deleted the queue with the specified queue name
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues?api-version=2023-05-01:
    get:
      tags:
        - QueueService
      operationId: Queue_List
      description: Gets a list of all the queues under the specified storage account
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $maxpagesize
          in: query
          description: Optional, a maximum number of queues that should be included in a list queue response
          schema:
            type: string
        - name: $filter
          in: query
          description: Optional, When specified, only the queues with a name starting with the given filter will be listed.
          schema:
            type: string
      responses:
        '200':
          description: OK -- returned a list of queues successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueueResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/networkSecurityPerimeterConfigurations?api-version=2023-05-01:
    get:
      tags:
        - StorageAccounts NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_List
      description: Gets list of effective NetworkSecurityPerimeterConfiguration for storage account
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
      responses:
        '200':
          description: Network Security Perimeter Configuration List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}?api-version=2023-05-01:
    get:
      tags:
        - StorageAccounts NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_Get
      description: Gets effective NetworkSecurityPerimeterConfiguration for association
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/networkSecurityPerimeterConfigurationName'
      responses:
        '200':
          description: Network Security Perimeter Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}/reconcile?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_Reconcile
      description: Refreshes any information about the association.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/networkSecurityPerimeterConfigurationName'
      responses:
        '202':
          description: Request to reconcile the association accepted.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices?api-version=2023-05-01:
    get:
      tags:
        - TableServiceProperties
      operationId: TableServices_List
      description: List all table services for the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned the properties of a storage account’s Table service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTableServices'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}?api-version=2023-05-01:
    put:
      tags:
        - TableServiceProperties
      operationId: TableServices_SetServiceProperties
      description: 'Sets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TableServiceName'
      requestBody:
        description: The properties of a storage account’s Table service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableServiceProperties'
      responses:
        '200':
          description: OK -- Sets The properties of a storage account’s Table service successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableServiceProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - TableServiceProperties
      operationId: TableServicesServiceProperties_Get
      description: Gets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TableServiceName'
      responses:
        '200':
          description: OK -- returned the properties of a storage account’s Table service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableServiceProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: TableServices_GetServiceProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}?api-version=2023-05-01:
    put:
      tags:
        - TableService
      operationId: Table_Create
      description: Creates a new table with the specified table name, under the specified account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TableName'
      requestBody:
        description: The parameters to provide to create a table.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK -- Creates a table with the given table name successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - TableService
      operationId: Table_Update
      description: Creates a new table with the specified table name, under the specified account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TableName'
      requestBody:
        description: The parameters to provide to create a table.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK -- Creates a table with the given table name successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - TableService
      operationId: Table_Get
      description: Gets the table with the specified table name, under the specified account if it exists.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TableName'
      responses:
        '200':
          description: OK -- returned table with the specified table name successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - TableService
      operationId: Table_Delete
      description: Deletes the table with the specified table name, under the specified account if it exists.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TableName'
      responses:
        '204':
          description: No Content - Successfully deleted the table with the specified table name
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables?api-version=2023-05-01:
    get:
      tags:
        - TableService
      operationId: Table_List
      description: Gets a list of all the tables under the specified storage account
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned a list of tables successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTableResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Storage/operations?api-version=2023-05-01:
    get:
      tags:
        - Operations
      description: Lists all of the available Storage Rest API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus?api-version=2023-05-01:
    get:
      tags:
        - Skus
      operationId: Skus_List
      description: Lists the available SKUs supported by Microsoft.Storage for given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage SKUs in the given subscription retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSkuListResult'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_CheckNameAvailability
      description: Checks that the storage account name is valid and is not already in use.
      requestBody:
        description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
        required: true
        x-ms-requestBody-name: accountName
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountCheckNameAvailabilityParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Operation to check the storage account name availability was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}?api-version=2023-05-01:
    put:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Create
      description: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountCreateParameters'
      responses:
        '200':
          description: OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccount'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously.
      x-ms-long-running-operation: true
    delete:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Delete
      description: Deletes a storage account in Microsoft Azure.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- storage account deleted successfully.
        '204':
          description: NoContent -- account does not exist in the subscription.
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccountsProperties_Get
      description: Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.
          required: false
          schema:
            enum:
              - geoReplicationStats
              - blobRestoreStatus
            x-ms-enum:
              name: StorageAccountExpand
              modelAsString: false
            type: string
      responses:
        '200':
          description: OK -- properties retrieved successfully for the storage account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccount'
      x-ms-original-operationId: StorageAccounts_GetProperties
    patch:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Update
      description: The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the updated account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountUpdateParameters'
      responses:
        '200':
          description: OK -- storage account properties updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccount'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts?api-version=2023-05-01:
    get:
      tags:
        - DeletedAccounts
      operationId: DeletedAccounts_List
      description: Lists deleted accounts under the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of deleted accounts was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}?api-version=2023-05-01:
    get:
      tags:
        - DeletedAccounts
      operationId: DeletedAccounts_Get
      description: Get properties of specified deleted account resource.
      parameters:
        - $ref: '#/components/parameters/DeletedAccountName'
        - name: location
          in: path
          description: The location of the deleted storage account.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- properties retrieved and returned successfully for the deleted account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts?api-version=2023-05-01:
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_List
      description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage accounts was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts?api-version=2023-05-01:
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_ListByResourceGroup
      description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage accounts in the given resource group retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccountsKeys_List
      description: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Specifies type of the key to be listed. Possible value is kerb.
          required: false
          schema:
            enum:
              - kerb
            x-ms-enum:
              name: ListKeyExpand
            type: string
      responses:
        '200':
          description: OK -- list of keys retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountListKeysResult'
      x-ms-original-operationId: StorageAccounts_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_RegenerateKey
      description: Regenerates one of the access keys or Kerberos keys for the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2.
        required: true
        x-ms-requestBody-name: regenerateKey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountRegenerateKeyParameters'
      responses:
        '200':
          description: OK -- specified key regenerated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountListKeysResult'
  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages?api-version=2023-05-01:
    get:
      tags:
        - LocationUsage
      operationId: Usages_ListByLocation
      description: Gets the current usage count and the limit for the resources of the location under the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The location of the Azure Storage resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK -- current usage count and limit retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListResult'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccountsAccountSAS_List
      description: List SAS credentials of a storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide to list SAS credentials for the storage account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSasParameters'
      responses:
        '200':
          description: OK -- returned the account SAS created for the storage account requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountSasResponse'
      x-ms-original-operationId: StorageAccounts_ListAccountSAS
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccountsServiceSAS_List
      description: List service SAS credentials of a specific resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide to list service SAS credentials.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSasParameters'
      responses:
        '200':
          description: OK -- returned the service SAS created for the storage service requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceSasResponse'
      x-ms-original-operationId: StorageAccounts_ListServiceSAS
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Failover
      description: A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: failoverType
          in: query
          description: The parameter is set to 'Planned' to indicate whether a Planned failover is requested.
          required: false
          schema:
            enum:
              - Planned
            x-ms-enum:
              name: failoverType
              modelAsString: false
            type: string
      responses:
        '200':
          description: OK -- Returned when the storage account failover is completed, and the secondary cluster has become primary.
        '202':
          description: Accepted -- Failover request accepted; operation will complete asynchronously.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_HierarchicalNamespaceMigration
      description: Live Migration of storage account to enable Hns
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: requestType
          in: query
          description: Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK -- Returned when the storage account migration to hierarchical namespace is completed.
        '202':
          description: Accepted -- Hierarchical namespace migration request accepted; operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_AbortHierarchicalNamespaceMigration
      description: Abort live Migration of storage account to enable Hns
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Returned when the storage account migration to hierarchical namespace is aborted.
        '202':
          description: Accepted -- Abort hierarchical namespace migration request accepted; operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/startAccountMigration?api-version=2023-05-01:
    post:
      tags:
        - AccountMigrations
      operationId: StorageAccounts_CustomerInitiatedMigration
      description: Account Migration request can be triggered for a storage account to change its redundancy level. The migration updates the non-zonal redundant storage account to a zonal redundant account or vice-versa in order to have better reliability and availability. Zone-redundant storage (ZRS) replicates your storage account synchronously across three Azure availability zones in the primary region.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The request parameters required to perform storage account migration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountMigration'
      responses:
        '200':
          description: OK -- Returned when the request is just for validating the migration request, it does not actually initiate migration; applicable in cross region migration currently.
        '202':
          description: Accepted -- Migration request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/accountMigrations/{migrationName}?api-version=2023-05-01:
    get:
      tags:
        - AccountMigrations
      operationId: StorageAccountsCustomerInitiatedMigration_Get
      description: Gets the status of the ongoing migration for the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/MigrationName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Get the details of the ongoing or completed migration successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountMigration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: StorageAccounts_GetCustomerInitiatedMigration
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_RestoreBlobRanges
      description: Restore blobs in the specified blob ranges
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide for restore blob ranges.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobRestoreParameters'
      responses:
        '200':
          description: OK -- returned when blob ranges are restored completely with the same properties specified in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobRestoreStatus'
        '202':
          description: Accepted -- Blob restore request accepted; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobRestoreStatus'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}?api-version=2023-05-01:
    get:
      tags:
        - ManagementPolicies
      operationId: ManagementPolicies_Get
      description: Gets the managementpolicy associated with the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ManagementPolicyName'
      responses:
        '200':
          description: OK -- Get the managementpolicy successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPolicy'
    put:
      tags:
        - ManagementPolicies
      operationId: ManagementPolicies_CreateOrUpdate
      description: Sets the managementpolicy to the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ManagementPolicyName'
      requestBody:
        description: The ManagementPolicy set to a storage account.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPolicy'
      responses:
        '200':
          description: OK -- Put managementpolicy successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPolicy'
    delete:
      tags:
        - ManagementPolicies
      operationId: ManagementPolicies_Delete
      description: Deletes the managementpolicy associated with the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ManagementPolicyName'
      responses:
        '200':
          description: OK -- Delete the managementpolicy successfully.
        '204':
          description: No Content -- The managementpolicy does not exist.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}?api-version=2023-05-01:
    get:
      tags:
        - BlobInventoryPolicies
      operationId: BlobInventoryPolicies_Get
      description: Gets the blob inventory policy associated with the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/BlobInventoryPolicyName'
      responses:
        '200':
          description: OK -- Get the blob inventory policy successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobInventoryPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - BlobInventoryPolicies
      operationId: BlobInventoryPolicies_CreateOrUpdate
      description: Sets the blob inventory policy to the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/BlobInventoryPolicyName'
      requestBody:
        description: The blob inventory policy set to a storage account.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobInventoryPolicy'
      responses:
        '200':
          description: OK -- Put blob inventory policy successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobInventoryPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - BlobInventoryPolicies
      operationId: BlobInventoryPolicies_Delete
      description: Deletes the blob inventory policy associated with the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/BlobInventoryPolicyName'
      responses:
        '200':
          description: OK -- Delete the blob inventory policy successfully.
        '204':
          description: No Content -- The blob inventory policy does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies?api-version=2023-05-01:
    get:
      tags:
        - BlobInventoryPolicies
      operationId: BlobInventoryPolicies_List
      description: Gets the blob inventory policy associated with the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Get the blob inventory policies successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlobInventoryPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections?api-version=2023-05-01:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: List all the private endpoint connections associated with the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2023-05-01:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection associated with the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Put
      description: Update the state of specified private endpoint connection associated with the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK -- Update the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes the specified private endpoint connection associated with the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Delete the private endpoint connection successfully.
        '204':
          description: No Content -- The private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources?api-version=2023-05-01:
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByStorageAccount
      description: Gets the private link resources that need to be created for a storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies?api-version=2023-05-01:
    get:
      tags:
        - ObjectReplicationPolicies
      operationId: ObjectReplicationPolicies_List
      description: List the object replication policies associated with the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List object replication policies successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectReplicationPolicies'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}?api-version=2023-05-01:
    get:
      tags:
        - ObjectReplicationPolicies
      operationId: ObjectReplicationPolicies_Get
      description: Get the object replication policy of the storage account by policy ID.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ObjectReplicationPolicyId'
      responses:
        '200':
          description: OK -- Get the object replication policy successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectReplicationPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ObjectReplicationPolicies
      operationId: ObjectReplicationPolicies_CreateOrUpdate
      description: Create or update the object replication policy of the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ObjectReplicationPolicyId'
      requestBody:
        description: The object replication policy set to a storage account. A unique policy ID will be created if absent.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectReplicationPolicy'
      responses:
        '200':
          description: OK -- Put object replication policy successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectReplicationPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ObjectReplicationPolicies
      operationId: ObjectReplicationPolicies_Delete
      description: Deletes the object replication policy associated with the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ObjectReplicationPolicyId'
      responses:
        '200':
          description: OK -- Delete the object replication policy successfully.
        '204':
          description: No Content -- The object replication policy does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys?api-version=2023-05-01:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_RevokeUserDelegationKeys
      description: Revoke user delegation keys.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - name: accountName
          in: path
          description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          required: true
          schema:
            maxLength: 24
            minLength: 3
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- revoke user delegation keys succeeded.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers?api-version=2023-05-01:
    get:
      tags:
        - LocalUsers
      operationId: LocalUsers_List
      description: List the local users associated with the storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $maxpagesize
          in: query
          description: Optional, specifies the maximum number of local users that will be included in the list response.
          schema:
            minimum: 1
            maximum: 5000
            format: int32
            type: integer
        - name: $filter
          in: query
          description: Optional. When specified, only local user names starting with the filter will be listed.
          schema:
            type: string
        - name: $include
          in: query
          description: Optional, when specified, will list local users enabled for the specific protocol. Lists all users by default.
          required: false
          schema:
            enum:
              - nfsv3
            x-ms-enum:
              name: ListLocalUserIncludeParam
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK -- List local users successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalUsers'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}?api-version=2023-05-01:
    get:
      tags:
        - LocalUsers
      operationId: LocalUsers_Get
      description: Get the local user of the storage account by username.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: OK -- Get the local user properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalUser'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - LocalUsers
      operationId: LocalUsers_CreateOrUpdate
      description: Create or update the properties of a local user associated with the storage account. Properties for NFSv3 enablement and extended groups cannot be set with other properties.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/Username'
      requestBody:
        description: The local user associated with a storage account.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalUser'
      responses:
        '200':
          description: OK -- Put local user successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalUser'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - LocalUsers
      operationId: LocalUsers_Delete
      description: Deletes the local user associated with the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: OK -- Delete the local user successfully.
        '204':
          description: No content -- Delete the local user successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys?api-version=2023-05-01:
    post:
      tags:
        - LocalUsers
      operationId: LocalUsersKeys_List
      description: List SSH authorized keys and shared key of the local user.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: OK -- Get the local user keys successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalUserKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: LocalUsers_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword?api-version=2023-05-01:
    post:
      tags:
        - LocalUsers
      operationId: LocalUsers_RegeneratePassword
      description: Regenerate the local user SSH password.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: OK -- Regenerate local user password successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalUserRegeneratePasswordResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}?api-version=2023-05-01:
    put:
      tags:
        - EncryptionScopes
      operationId: EncryptionScopes_Put
      description: Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/EncryptionScopeName'
      requestBody:
        description: Encryption scope properties to be used for the create or update.
        required: true
        x-ms-requestBody-name: encryptionScope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionScope'
      responses:
        '200':
          description: OK -- Update encryption scope operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionScope'
        '201':
          description: Created -- Create encryption scope operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionScope'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - EncryptionScopes
      operationId: EncryptionScopes_Patch
      description: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/EncryptionScopeName'
      requestBody:
        description: Encryption scope properties to be used for the update.
        required: true
        x-ms-requestBody-name: encryptionScope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionScope'
      responses:
        '200':
          description: OK -- Update encryption scope operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionScope'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - EncryptionScopes
      operationId: EncryptionScopes_Get
      description: Returns the properties for the specified encryption scope.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/EncryptionScopeName'
      responses:
        '200':
          description: OK -- Get encryption scope operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionScope'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes?api-version=2023-05-01:
    get:
      tags:
        - EncryptionScopes
      operationId: EncryptionScopes_List
      description: Lists all the encryption scopes available under the specified storage account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $maxpagesize
          in: query
          description: Optional, specifies the maximum number of encryption scopes that will be included in the list response.
          schema:
            minimum: 1
            maximum: 5000
            format: int32
            type: integer
        - name: $filter
          in: query
          description: Optional. When specified, only encryption scope names starting with the filter will be listed.
          schema:
            type: string
        - name: $include
          in: query
          description: Optional, when specified, will list encryption scopes with the specific state. Defaults to All
          required: false
          schema:
            enum:
              - All
              - Enabled
              - Disabled
            x-ms-enum:
              name: ListEncryptionScopesInclude
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK -- List encryption scopes operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionScopeListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}?api-version=2023-05-01:
    put:
      tags:
        - StorageTaskAssignments
      description: Asynchronously creates a new storage task assignment sub-resource with the specified parameters. If a storage task assignment is already created and a subsequent create request is issued with different properties, the storage task assignment properties will be updated. If a storage task assignment is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
      operationId: StorageTaskAssignments_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/StorageTaskAssignmentName'
      requestBody:
        description: The parameters to create a Storage Task Assignment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTaskAssignment'
      responses:
        '200':
          description: OK -- Update storage task assignment with the same properties specified in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskAssignment'
        '201':
          description: OK -- Create storage task assignment with the same properties specified in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskAssignment'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - StorageTaskAssignments
      description: Update storage task assignment properties
      operationId: StorageTaskAssignments_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/StorageTaskAssignmentName'
      requestBody:
        description: The parameters to update a Storage Task Assignment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTaskAssignmentUpdateParameters'
      responses:
        '200':
          description: OK -- returned when the update request body had no changes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskAssignment'
        '202':
          description: Accepted -- update request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - StorageTaskAssignments
      description: Get the storage task assignment properties
      operationId: StorageTaskAssignments_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/StorageTaskAssignmentName'
      responses:
        '200':
          description: OK -- properties retrieved successfully for the storage task assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - StorageTaskAssignments
      description: Delete the storage task assignment sub-resource
      operationId: StorageTaskAssignments_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/StorageTaskAssignmentName'
      responses:
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent -- specified storage task assignment does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments?api-version=2023-05-01:
    get:
      tags:
        - StorageTaskAssignments
      description: List all the storage task assignments in an account
      operationId: StorageTaskAssignments_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageAccountName'
        - name: $maxpagesize
          in: query
          description: Optional, specifies the maximum number of storage task assignment Ids to be included in the list response.
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK -- list of storage task assignments was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskAssignmentsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/reports?api-version=2023-05-01:
    get:
      tags:
        - StorageTaskAssignments
      description: Fetch the report summary of all the storage task assignments and instances in an account
      operationId: StorageTaskAssignmentsInstancesReport_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageAccountName'
        - name: $maxpagesize
          in: query
          description: Optional, specifies the maximum number of storage task assignment instances to be included in the list response.
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: Optional. When specified, it can be used to query using reporting properties. See [Constructing Filter Strings](https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#constructing-filter-strings) for details.
          schema:
            type: string
      responses:
        '200':
          description: OK -- storage task assignments' instances report summary retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskReportSummary'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/storageTaskAssignments/{storageTaskAssignmentName}/reports?api-version=2023-05-01:
    get:
      tags:
        - StorageTaskAssignments
      description: Fetch the report summary of a single storage task assignment's instances
      operationId: StorageTaskAssignmentInstancesReport_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/StorageTaskAssignmentName'
        - name: $maxpagesize
          in: query
          description: Optional, specifies the maximum number of storage task assignment instances to be included in the list response.
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: Optional. When specified, it can be used to query using reporting properties. See [Constructing Filter Strings](https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#constructing-filter-strings) for details.
          schema:
            type: string
      responses:
        '200':
          description: OK -- storage task assignment's instances report summary retrieved and returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskReportSummary'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices?api-version=2023-05-01:
    get:
      tags:
        - BlobService
      operationId: BlobServices_List
      description: List blob services of storage account. It returns a collection of one object named default.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List blob services operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobServiceItems'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}?api-version=2023-05-01:
    put:
      tags:
        - BlobService
      operationId: BlobServices_SetServiceProperties
      description: 'Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/BlobServicesName'
      requestBody:
        description: The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobServiceProperties'
      responses:
        '200':
          description: OK -- Sets The properties of a storage account’s Blob service successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobServiceProperties'
    get:
      tags:
        - BlobService
      operationId: BlobServicesServiceProperties_Get
      description: Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/BlobServicesName'
      responses:
        '200':
          description: OK -- returned the properties of a storage account’s Blob service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobServiceProperties'
      x-ms-original-operationId: BlobServices_GetServiceProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers?api-version=2023-05-01:
    get:
      tags:
        - BlobContainers
      operationId: BlobContainers_List
      description: Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $maxpagesize
          in: query
          description: Optional. Specified maximum number of containers that can be included in the list.
          schema:
            type: string
        - name: $filter
          in: query
          description: Optional. When specified, only container names starting with the filter will be listed.
          schema:
            type: string
        - name: $include
          in: query
          description: Optional, used to include the properties for soft deleted blob containers.
          required: false
          schema:
            enum:
              - deleted
            x-ms-enum:
              name: ListContainersInclude
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK -- List Container operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContainerItems'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}?api-version=2023-05-01:
    put:
      tags:
        - BlobContainers
      operationId: BlobContainers_Create
      description: 'Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Properties of the blob container to create.
        required: true
        x-ms-requestBody-name: blobContainer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobContainer'
      responses:
        '200':
          description: OK -- The Container is already created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobContainer'
        '201':
          description: Created -- Create Container operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobContainer'
    patch:
      tags:
        - BlobContainers
      operationId: BlobContainers_Update
      description: 'Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn''t already exist. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Properties to update for the blob container.
        required: true
        x-ms-requestBody-name: blobContainer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobContainer'
      responses:
        '200':
          description: OK -- Update Container operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobContainer'
                description: Properties of the updated blob container.
    get:
      tags:
        - BlobContainers
      operationId: BlobContainers_Get
      description: 'Gets properties of a specified container. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Get Container operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobContainer'
    delete:
      tags:
        - BlobContainers
      operationId: BlobContainers_Delete
      description: Deletes specified container under its account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Delete Container operation completed successfully.
        '204':
          description: No Content -- The Container not exist.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold?api-version=2023-05-01:
    post:
      tags:
        - BlobContainers
      operationId: BlobContainers_SetLegalHold
      description: Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The LegalHold property that will be set to a blob container.
        required: true
        x-ms-requestBody-name: LegalHold
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHold'
      responses:
        '200':
          description: OK -- Set legal hold tags for Container completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHold'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold?api-version=2023-05-01:
    post:
      tags:
        - BlobContainers
      operationId: BlobContainers_ClearLegalHold
      description: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The LegalHold property that will be clear from a blob container.
        required: true
        x-ms-requestBody-name: LegalHold
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHold'
      responses:
        '200':
          description: OK -- Clear legal hold tags for Container completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHold'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}?api-version=2023-05-01:
    put:
      tags:
        - BlobContainers
      operationId: BlobContainersImmutabilityPolicy_CreateOrUpdate
      description: Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/ImmutabilityPolicyName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the immutability policy to update must be returned to the server for all update operations. The ETag value must include the leading and trailing double quotes as returned by the service.
          required: false
          schema:
            type: string
      requestBody:
        description: The ImmutabilityPolicy Properties that will be created or updated to a blob container.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmutabilityPolicy'
      responses:
        '200':
          description: OK -- Creates or updates container ImmutabilityPolicy operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
      x-ms-original-operationId: BlobContainers_CreateOrUpdateImmutabilityPolicy
    get:
      tags:
        - BlobContainers
      operationId: BlobContainersImmutabilityPolicy_Get
      description: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/ImmutabilityPolicyName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the immutability policy to update must be returned to the server for all update operations. The ETag value must include the leading and trailing double quotes as returned by the service.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK -- Gets container ImmutabilityPolicy operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
      x-ms-original-operationId: BlobContainers_GetImmutabilityPolicy
    delete:
      tags:
        - BlobContainers
      operationId: BlobContainersImmutabilityPolicy_Delete
      description: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/ImmutabilityPolicyName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the immutability policy to update must be returned to the server for all update operations. The ETag value must include the leading and trailing double quotes as returned by the service.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK -- Deletes container ImmutabilityPolicy operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
      x-ms-original-operationId: BlobContainers_DeleteImmutabilityPolicy
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock?api-version=2023-05-01:
    post:
      tags:
        - BlobContainers
      operationId: BlobContainers_LockImmutabilityPolicy
      description: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the immutability policy to update must be returned to the server for all update operations. The ETag value must include the leading and trailing double quotes as returned by the service.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK -- Locks container ImmutabilityPolicy operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend?api-version=2023-05-01:
    post:
      tags:
        - BlobContainers
      operationId: BlobContainers_ExtendImmutabilityPolicy
      description: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the immutability policy to update must be returned to the server for all update operations. The ETag value must include the leading and trailing double quotes as returned by the service.
          required: true
          schema:
            type: string
      requestBody:
        description: The ImmutabilityPolicy Properties that will be extended for a blob container.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmutabilityPolicy'
      responses:
        '200':
          description: OK -- Extends container ImmutabilityPolicy operation completed successfully..
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease?api-version=2023-05-01:
    post:
      tags:
        - BlobContainers
      operationId: BlobContainers_Lease
      description: The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Lease Container request body.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseContainerRequest'
      responses:
        '200':
          description: OK -- Lease Container operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseContainerResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/migrate?api-version=2023-05-01:
    post:
      tags:
        - BlobContainers
      operationId: BlobContainers_ObjectLevelWorm
      description: This operation migrates a blob container from container level WORM to object level immutability enabled container. Prerequisites require a container level immutability policy either in locked or unlocked state, Account level versioning must be enabled and there should be no Legal hold on the container.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ContainerName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned when the blob container migration to support object level immutability completes.
        '202':
          description: Accepted -- Blob Container migration to support object level immutability is accepted; operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices?api-version=2023-05-01:
    get:
      tags:
        - FileService
      operationId: FileServices_List
      description: List all file services in storage accounts
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List file services operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServiceItems'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}?api-version=2023-05-01:
    put:
      tags:
        - FileService
      operationId: FileServices_SetServiceProperties
      description: 'Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FileServicesName'
      requestBody:
        description: The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileServiceProperties'
      responses:
        '200':
          description: OK -- Sets The properties of a storage account’s File service successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServiceProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - FileService
      operationId: FileServicesServiceProperties_Get
      description: Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FileServicesName'
      responses:
        '200':
          description: OK -- returned the properties of a storage account’s File service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServiceProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: FileServices_GetServiceProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares?api-version=2023-05-01:
    get:
      tags:
        - FileShares
      operationId: FileShares_List
      description: Lists all shares.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $maxpagesize
          in: query
          description: Optional. Specified maximum number of shares that can be included in the list.
          schema:
            type: string
        - name: $filter
          in: query
          description: Optional. When specified, only share names starting with the filter will be listed.
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Optional, used to expand the properties within share''s properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter '','''
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK -- List Shares operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareItems'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}?api-version=2023-05-01:
    put:
      tags:
        - FileShares
      operationId: FileShares_Create
      description: 'Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ShareName'
        - name: $expand
          in: query
          description: 'Optional, used to expand the properties within share''s properties. Valid values are: snapshots. Should be passed as a string with delimiter '','''
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Properties of the file share to create.
        required: true
        x-ms-requestBody-name: fileShare
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileShare'
      responses:
        '200':
          description: OK -- The Share is already created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
        '201':
          description: Created -- Create Share operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - FileShares
      operationId: FileShares_Update
      description: 'Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist. '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ShareName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Properties to update for the file share.
        required: true
        x-ms-requestBody-name: fileShare
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileShare'
      responses:
        '200':
          description: OK -- Update Share operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
                description: Properties of the updated file share.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - FileShares
      operationId: FileShares_Get
      description: Gets properties of a specified share.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ShareName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: 'Optional, used to expand the properties within share''s properties. Valid values are: stats. Should be passed as a string with delimiter '',''.'
          required: false
          schema:
            type: string
        - name: x-ms-snapshot
          in: header
          description: Optional, used to retrieve properties of a snapshot.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK -- Get Share operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - FileShares
      operationId: FileShares_Delete
      description: Deletes specified share under its account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ShareName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: x-ms-snapshot
          in: header
          description: Optional, used to delete a snapshot.
          required: false
          schema:
            type: string
        - name: $include
          in: query
          description: 'Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For ''snapshots'', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For ''leased-snapshots'', the file share is deleted included all of its file share snapshots (leased/unleased). For ''none'', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK -- Delete Share operation completed successfully.
        '204':
          description: No Content -- The Share not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/restore?api-version=2023-05-01:
    post:
      tags:
        - FileShares
      operationId: FileShares_Restore
      description: Restore a file share within a valid retention days if share soft delete is enabled
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ShareName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: deletedShare
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletedShare'
      responses:
        '200':
          description: OK -- The Share is successfully restored.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/lease?api-version=2023-05-01:
    post:
      tags:
        - FileShares
      operationId: FileShares_Lease
      description: The Lease Share operation establishes and manages a lock on a share for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/StorageAccountName'
        - $ref: '#/components/parameters/ShareName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: x-ms-snapshot
          in: header
          description: Optional. Specify the snapshot time to lease a snapshot.
          required: false
          schema:
            type: string
      requestBody:
        description: Lease Share request body.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseShareRequest'
      responses:
        '200':
          description: OK -- Lease Share operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseShareResponse'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
