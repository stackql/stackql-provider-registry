openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Microsoft Delegated Network Controller (DNC)
  description: DNC web api provides way to create, get and delete dnc controller
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    resourceNameParameter:
      name: resourceName
      in: path
      description: The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z][a-z0-9]*$
        minLength: 3
        maxLength: 63
        type: string
    ForceDeleteParameter:
      name: forceDelete
      in: query
      description: Force delete resource
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    OrchestratorResource:
      description: Represents an instance of a resource.
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: An identifier that represents the resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource.
        type:
          type: string
          readOnly: true
          description: The type of resource.
        location:
          type: string
          description: Location of the resource.
        kind:
          type: string
          description: The kind of workbook. Choices are user and shared.
          enum:
            - Kubernetes
          x-ms-enum:
            name: OrchestratorKind
            modelAsString: true
        identity:
          $ref: '#/components/schemas/OrchestratorIdentity'
          description: The identity of the orchestrator
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      required:
        - kind
      x-ms-azure-resource: true
    OrchestratorResourceUpdateParameters:
      description: Parameters for updating a resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    Orchestrators:
      description: An array of OrchestratorInstance resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Orchestrator'
          description: An array of OrchestratorInstance resources.
        nextLink:
          type: string
          description: The URL to get the next set of orchestrators.
          readOnly: true
      required:
        - value
    Orchestrator:
      description: Represents an instance of a orchestrator.
      properties:
        id:
          type: string
          readOnly: true
          description: An identifier that represents the resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource.
        type:
          type: string
          readOnly: true
          description: The type of resource.
        location:
          type: string
          description: Location of the resource.
        kind:
          type: string
          description: The kind of workbook. Choices are user and shared.
          enum:
            - Kubernetes
          x-ms-enum:
            name: OrchestratorKind
            modelAsString: true
        identity:
          $ref: '#/components/schemas/OrchestratorIdentity'
          description: The identity of the orchestrator
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          $ref: '#/components/schemas/OrchestratorResourceProperties'
          description: Properties of the provision operation request.
      type: object
    OrchestratorResourceProperties:
      description: Properties of orchestrator
      type: object
      properties:
        resourceGuid:
          type: string
          readOnly: true
          description: Resource guid.
        provisioningState:
          type: string
          enum:
            - Deleting
            - Succeeded
            - Failed
            - Provisioning
          x-ms-enum:
            name: OrchestratorInstanceState
            modelAsString: true
          readOnly: true
          description: The current state of orchestratorInstance resource.
        orchestratorAppId:
          description: AAD ID used with apiserver
          type: string
        orchestratorTenantId:
          description: TenantID of server App ID
          type: string
        clusterRootCA:
          description: RootCA certificate of kubernetes cluster base64 encoded
          type: string
        apiServerEndpoint:
          description: K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
          type: string
        privateLinkResourceId:
          description: private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
          type: string
        controllerDetails:
          $ref: '#/components/schemas/controllerDetails'
          description: Properties of the controller.
      required:
        - controllerDetails
    OrchestratorIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of the system assigned identity which is used by orchestrator.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id of the system assigned identity which is used by orchestrator.
        type:
          type: string
          description: The type of identity used for orchestrator cluster. Type 'SystemAssigned' will use an implicitly created identity orchestrator clusters
          enum:
            - SystemAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
      type: object
    controllerDetails:
      description: controller details
      type: object
      properties:
        id:
          description: controller arm resource id
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ControllerResource:
      description: Represents an instance of a resource.
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: An identifier that represents the resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource.
        type:
          type: string
          readOnly: true
          description: The type of resource.
        location:
          type: string
          description: Location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      x-ms-azure-resource: true
    ControllerResourceUpdateParameters:
      description: Parameters for updating a resource.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
    DelegatedControllers:
      description: An array of Delegated controller resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DelegatedController'
          description: An array of Delegated controller resources.
        nextLink:
          type: string
          description: The URL to get the next set of controllers.
          readOnly: true
      required:
        - value
    DelegatedController:
      description: Represents an instance of a DNC controller.
      properties:
        id:
          type: string
          readOnly: true
          description: An identifier that represents the resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource.
        type:
          type: string
          readOnly: true
          description: The type of resource.
        location:
          type: string
          description: Location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          $ref: '#/components/schemas/DelegatedControllerProperties'
          description: Properties of the provision operation request.
      type: object
    DelegatedControllerProperties:
      description: Properties of Delegated controller resource.
      type: object
      properties:
        resourceGuid:
          type: string
          readOnly: true
          description: Resource guid.
        provisioningState:
          type: string
          enum:
            - Deleting
            - Succeeded
            - Failed
            - Provisioning
          x-ms-enum:
            name: ControllerState
            modelAsString: true
          readOnly: true
          description: The current state of dnc controller resource.
        dncAppId:
          type: string
          readOnly: true
          description: dnc application id should be used by customer to authenticate with dnc gateway.
        dncTenantId:
          type: string
          readOnly: true
          description: tenant id of dnc application id
        dncEndpoint:
          type: string
          readOnly: true
          description: dnc endpoint url that customers can use to connect to
        purpose:
          type: string
          enum:
            - test
            - prod
          default: prod
          x-ms-enum:
            name: ControllerPurpose
            modelAsString: true
          description: The purpose of the dnc controller resource.
    DelegatedSubnetResource:
      description: Represents an instance of a resource.
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: An identifier that represents the resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource.
        type:
          type: string
          readOnly: true
          description: The type of resource.
        location:
          type: string
          description: Location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      x-ms-azure-resource: true
    ResourceUpdateParameters:
      description: Parameters for updating a resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    DelegatedSubnets:
      description: An array of DelegatedSubnet resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DelegatedSubnet'
          description: An array of DelegatedSubnet resources.
        nextLink:
          type: string
          description: The URL to get the next set of DelegatedSubnet resources.
          readOnly: true
      required:
        - value
    DelegatedSubnet:
      description: Represents an instance of a orchestrator.
      properties:
        id:
          type: string
          readOnly: true
          description: An identifier that represents the resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource.
        type:
          type: string
          readOnly: true
          description: The type of resource.
        location:
          type: string
          description: Location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DelegatedSubnetProperties'
          description: Properties of the provision operation request.
      type: object
    DelegatedSubnetProperties:
      description: Properties of delegated subnet
      type: object
      properties:
        resourceGuid:
          type: string
          readOnly: true
          description: Resource guid.
        provisioningState:
          type: string
          enum:
            - Deleting
            - Succeeded
            - Failed
            - Provisioning
          x-ms-enum:
            name: DelegatedSubnetState
            modelAsString: true
          readOnly: true
          description: The current state of dnc delegated subnet resource.
        subnetDetails:
          description: subnet details
          $ref: '#/components/schemas/subnetDetails'
        controllerDetails:
          $ref: '#/components/schemas/controllerDetails'
          description: Properties of the controller.
        allocationBlockPrefixSize:
          description: "Defines prefix size of CIDR blocks allocated to nodes in VnetBlock Mode.\r\nDelegated subnet's prefix size should be smaller than this by a minimum of 3."
          type: integer
          format: int32
          minimum: 24
          maximum: 30
    subnetDetails:
      description: Properties of orchestrator
      type: object
      properties:
        id:
          description: subnet arm resource id
          type: string
  x-stackQL-resources:
    orchestrator_instance_service_details:
      id: azure.delegated_network.orchestrator_instance_service_details
      name: orchestrator_instance_service_details
      title: orchestrator_instance_service_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1orchestrators~1{resourceName}?api-version=2023-06-27-preview/get'
            operationId: OrchestratorInstanceServiceDetails_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Orchestrator
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orchestrator_instance_service_details/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    orchestrator_instance_services:
      id: azure.delegated_network.orchestrator_instance_services
      name: orchestrator_instance_services
      title: orchestrator_instance_services
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1orchestrators~1{resourceName}?api-version=2023-06-27-preview/put'
            operationId: OrchestratorInstanceService_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Orchestrator
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1orchestrators~1{resourceName}?api-version=2023-06-27-preview/delete'
            operationId: OrchestratorInstanceService_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1orchestrators~1{resourceName}?api-version=2023-06-27-preview/patch'
            operationId: OrchestratorInstanceService_Patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Orchestrator
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DelegatedNetwork~1orchestrators?api-version=2023-06-27-preview/get'
            operationId: OrchestratorInstanceService_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Orchestrators
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1orchestrators?api-version=2023-06-27-preview/get'
            operationId: OrchestratorInstanceService_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Orchestrators
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orchestrator_instance_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/orchestrator_instance_services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/orchestrator_instance_services/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/orchestrator_instance_services/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/orchestrator_instance_services/methods/delete'
    operations:
      id: azure.delegated_network.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DelegatedNetwork~1operations?api-version=2023-06-27-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    controller_details:
      id: azure.delegated_network.controller_details
      name: controller_details
      title: controller_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1controller~1{resourceName}?api-version=2023-06-27-preview/get'
            operationId: ControllerDetails_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedController
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/controller_details/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    controllers:
      id: azure.delegated_network.controllers
      name: controllers
      title: controllers
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1controller~1{resourceName}?api-version=2023-06-27-preview/put'
            operationId: Controller_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedController
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1controller~1{resourceName}?api-version=2023-06-27-preview/delete'
            operationId: Controller_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1controller~1{resourceName}?api-version=2023-06-27-preview/patch'
            operationId: Controller_Patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedController
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/controllers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/controllers/methods/delete'
    delegated_networks:
      id: azure.delegated_network.delegated_networks
      name: delegated_networks
      title: delegated_networks
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DelegatedNetwork~1controllers?api-version=2023-06-27-preview/get'
            operationId: DelegatedNetwork_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedControllers
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1controllers?api-version=2023-06-27-preview/get'
            operationId: DelegatedNetwork_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedControllers
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delegated_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/delegated_networks/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    delegated_subnet_service_details:
      id: azure.delegated_network.delegated_subnet_service_details
      name: delegated_subnet_service_details
      title: delegated_subnet_service_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1delegatedSubnets~1{resourceName}?api-version=2023-06-27-preview/get'
            operationId: DelegatedSubnetServiceDetails_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedSubnet
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1delegatedSubnets~1{resourceName}?api-version=2023-06-27-preview/delete'
            operationId: DelegatedSubnetServiceDetails_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delegated_subnet_service_details/methods/get'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/delegated_subnet_service_details/methods/delete'
    delegated_subnet_services:
      id: azure.delegated_network.delegated_subnet_services
      name: delegated_subnet_services
      title: delegated_subnet_services
      methods:
        put_details:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1delegatedSubnets~1{resourceName}?api-version=2023-06-27-preview/put'
            operationId: DelegatedSubnetService_PutDetails
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedSubnet
        patch_details:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1delegatedSubnets~1{resourceName}?api-version=2023-06-27-preview/patch'
            operationId: DelegatedSubnetService_PatchDetails
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedSubnet
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DelegatedNetwork~1delegatedSubnets?api-version=2023-06-27-preview/get'
            operationId: DelegatedSubnetService_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedSubnets
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DelegatedNetwork~1delegatedSubnets?api-version=2023-06-27-preview/get'
            operationId: DelegatedSubnetService_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DelegatedSubnets
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delegated_subnet_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/delegated_subnet_services/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    vw_orchestrator_instance_service_details:
      id: azure.delegated_network.vw_orchestrator_instance_service_details
      name: vw_orchestrator_instance_service_details
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              kind as kind,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.resourceGuid') as "resource_guid",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.orchestratorAppId') as "orchestrator_app_id",
              JSON_EXTRACT(properties, '$.orchestratorTenantId') as "orchestrator_tenant_id",
              JSON_EXTRACT(properties, '$.clusterRootCA') as "cluster_root_ca",
              JSON_EXTRACT(properties, '$.apiServerEndpoint') as "api_server_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkResourceId') as "private_link_resource_id",
              JSON_EXTRACT(properties, '$.controllerDetails') as "controller_details",
              subscriptionId,
              resourceGroupName,
              resourceName
              FROM azure.delegated_network.orchestrator_instance_service_details
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                kind as kind,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.resourceGuid') as "resource_guid",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.orchestratorAppId') as "orchestrator_app_id",
                json_extract_path_text(properties, '$.orchestratorTenantId') as "orchestrator_tenant_id",
                json_extract_path_text(properties, '$.clusterRootCA') as "cluster_root_ca",
                json_extract_path_text(properties, '$.apiServerEndpoint') as "api_server_endpoint",
                json_extract_path_text(properties, '$.privateLinkResourceId') as "private_link_resource_id",
                json_extract_path_text(properties, '$.controllerDetails') as "controller_details",
                subscriptionId,
                resourceGroupName,
                resourceName
                FROM azure.delegated_network.orchestrator_instance_service_details
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_controller_details:
      id: azure.delegated_network.vw_controller_details
      name: vw_controller_details
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.resourceGuid') as "resource_guid",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.dncAppId') as "dnc_app_id",
              JSON_EXTRACT(properties, '$.dncTenantId') as "dnc_tenant_id",
              JSON_EXTRACT(properties, '$.dncEndpoint') as "dnc_endpoint",
              JSON_EXTRACT(properties, '$.purpose') as "purpose",
              subscriptionId,
              resourceGroupName,
              resourceName
              FROM azure.delegated_network.controller_details
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.resourceGuid') as "resource_guid",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.dncAppId') as "dnc_app_id",
                json_extract_path_text(properties, '$.dncTenantId') as "dnc_tenant_id",
                json_extract_path_text(properties, '$.dncEndpoint') as "dnc_endpoint",
                json_extract_path_text(properties, '$.purpose') as "purpose",
                subscriptionId,
                resourceGroupName,
                resourceName
                FROM azure.delegated_network.controller_details
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_delegated_subnet_service_details:
      id: azure.delegated_network.vw_delegated_subnet_service_details
      name: vw_delegated_subnet_service_details
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.resourceGuid') as "resource_guid",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.subnetDetails') as "subnet_details",
              JSON_EXTRACT(properties, '$.controllerDetails') as "controller_details",
              JSON_EXTRACT(properties, '$.allocationBlockPrefixSize') as "allocation_block_prefix_size",
              subscriptionId,
              resourceGroupName,
              resourceName
              FROM azure.delegated_network.delegated_subnet_service_details
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.resourceGuid') as "resource_guid",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.subnetDetails') as "subnet_details",
                json_extract_path_text(properties, '$.controllerDetails') as "controller_details",
                json_extract_path_text(properties, '$.allocationBlockPrefixSize') as "allocation_block_prefix_size",
                subscriptionId,
                resourceGroupName,
                resourceName
                FROM azure.delegated_network.delegated_subnet_service_details
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/orchestrators/{resourceName}?api-version=2023-06-27-preview:
    get:
      description: Gets details about the orchestrator instance.
      tags:
        - OrchestratorInstance
      operationId: OrchestratorInstanceServiceDetails_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orchestrator'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: OrchestratorInstanceService_GetDetails
    put:
      description: Create a orchestrator instance
      tags:
        - OrchestratorInstance
      operationId: OrchestratorInstanceService_Create
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: OrchestratorInstance type parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Orchestrator'
      responses:
        '200':
          description: OK. The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orchestrator'
        '201':
          description: InProgress. The operation is still in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orchestrator'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      description: Deletes the Orchestrator Instance
      tags:
        - OrchestratorInstance
      operationId: OrchestratorInstanceService_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ForceDeleteParameter'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted.
        '204':
          description: No Content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      description: Update Orchestrator Instance
      tags:
        - OrchestratorInstance
      operationId: OrchestratorInstanceService_Patch
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: OrchestratorInstance update parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrchestratorResourceUpdateParameters'
      responses:
        '200':
          description: OK. The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orchestrator'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DelegatedNetwork/orchestrators?api-version=2023-06-27-preview:
    get:
      tags:
        - OrchestratorInstanceList
      description: Get all the orchestratorInstance resources in a subscription.
      operationId: OrchestratorInstanceService_ListBySubscription
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the orchestratorInstance in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orchestrators'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/orchestrators?api-version=2023-06-27-preview:
    get:
      tags:
        - OrchestratorInstanceList
      description: Get all the OrchestratorInstances resources in a resource group.
      operationId: OrchestratorInstanceService_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the orchestratorInstances in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orchestrators'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.DelegatedNetwork/operations?api-version=2023-06-27-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available DelegatedNetwork service REST API operations.
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/controller/{resourceName}?api-version=2023-06-27-preview:
    get:
      description: Gets details about the specified dnc controller.
      tags:
        - Controller
      operationId: ControllerDetails_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedController'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Controller_GetDetails
    put:
      description: Create a dnc controller
      tags:
        - Controller
      operationId: Controller_Create
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: controller type parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegatedController'
      responses:
        '200':
          description: OK. The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedController'
        '201':
          description: InProgress. The operation is still in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedController'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      description: Deletes the DNC controller
      tags:
        - Controller
      operationId: Controller_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted.
        '204':
          description: No Content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      description: Update dnc controller
      tags:
        - Controller
      operationId: Controller_Patch
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: controller type parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControllerResourceUpdateParameters'
      responses:
        '200':
          description: OK. The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedController'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DelegatedNetwork/controllers?api-version=2023-06-27-preview:
    get:
      tags:
        - DelegatedControllers
      description: Get all the delegatedController resources in a subscription.
      operationId: DelegatedNetwork_ListBySubscription
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedControllers in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedControllers'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/controllers?api-version=2023-06-27-preview:
    get:
      tags:
        - DelegatedControllers
      description: Get all the delegatedController resources in a resource group.
      operationId: DelegatedNetwork_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the delegatedControllers in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedControllers'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/delegatedSubnets/{resourceName}?api-version=2023-06-27-preview:
    get:
      description: Gets details about the specified dnc DelegatedSubnet Link.
      tags:
        - DNCDelegatedSubnet
      operationId: DelegatedSubnetServiceDetails_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedSubnet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: DelegatedSubnetService_GetDetails
    put:
      description: Put delegated subnet resource
      tags:
        - DNCDelegatedSubnet
      operationId: DelegatedSubnetService_PutDetails
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Delegated subnet details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegatedSubnet'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedSubnet'
        '201':
          description: InProgress. The operation is still in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedSubnet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      description: Patch delegated subnet resource
      tags:
        - DNCDelegatedSubnet
      operationId: DelegatedSubnetService_PatchDetails
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Delegated subnet details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceUpdateParameters'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedSubnet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      description: Delete dnc DelegatedSubnet.
      tags:
        - DNCDelegatedSubnet
      operationId: DelegatedSubnetServiceDetails_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ForceDeleteParameter'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted.
        '204':
          description: No Content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-original-operationId: DelegatedSubnetService_DeleteDetails
  /subscriptions/{subscriptionId}/providers/Microsoft.DelegatedNetwork/delegatedSubnets?api-version=2023-06-27-preview:
    get:
      tags:
        - DelegatedSubnets
      description: Get all the DelegatedSubnets resources in a subscription.
      operationId: DelegatedSubnetService_ListBySubscription
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedSubnets in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedSubnets'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/delegatedSubnets?api-version=2023-06-27-preview:
    get:
      tags:
        - DelegatedSubnets
      description: Get all the DelegatedSubnets resources in a resource group.
      operationId: DelegatedSubnetService_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedSubnets in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedSubnets'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
