openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Logic Apps
  description: Azure Logic Apps helps you simplify and implement scalable integrations and workflows in the cloud. You can model and automate your process visually as a series of steps known as a workflow in the Logic App Designer. There are also many connectors that you can add to your logic app so you can quickly integrate across services and protocols across the cloud and on-premises. A logic app begins with a trigger, like when an account is added to Dynamics CRM, and after firing, can begin many combinations actions, conversions, and condition logic.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription id.
      required: true
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: The API version.
      required: false
      schema:
        type: string
  schemas:
    Resource:
      properties:
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      x-ms-azure-resource: true
      description: The base resource type.
      type: object
    SubResource:
      properties:
        id:
          type: string
          readOnly: true
          description: The resource id.
      x-ms-azure-resource: true
      description: The sub resource type.
      type: object
    Object:
      type: object
      properties: {}
    ResourceReference:
      type: object
      properties:
        id:
          type: string
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
      description: The resource reference.
    Workflow:
      description: The workflow type.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkflowProperties'
          description: The workflow properties.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    WorkflowProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/WorkflowProvisioningState'
          readOnly: true
          description: Gets the provisioning state.
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the changed time.
        state:
          $ref: '#/components/schemas/WorkflowState'
          description: The state.
        version:
          type: string
          readOnly: true
          description: Gets the version.
        accessEndpoint:
          type: string
          readOnly: true
          description: Gets the access endpoint.
        endpointsConfiguration:
          $ref: '#/components/schemas/FlowEndpointsConfiguration'
          description: The endpoints configuration.
        accessControl:
          $ref: '#/components/schemas/FlowAccessControlConfiguration'
          description: The access control configuration.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: The sku.
        integrationAccount:
          $ref: '#/components/schemas/ResourceReference'
          description: The integration account.
        integrationServiceEnvironment:
          $ref: '#/components/schemas/ResourceReference'
          description: The integration service environment.
        definition:
          $ref: '#/components/schemas/Object'
          description: The definition.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/WorkflowParameter'
          description: The parameters.
      description: The workflow properties.
    WorkflowFilter:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/WorkflowState'
          description: The state of workflows.
      description: The workflow filter.
    WorkflowListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Workflow'
          description: The list of workflows.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of workflows.
    WorkflowVersion:
      description: The workflow version.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkflowVersionProperties'
          description: The workflow version properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    WorkflowVersionProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/WorkflowProvisioningState'
          readOnly: true
          description: The provisioning state.
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the changed time.
        state:
          $ref: '#/components/schemas/WorkflowState'
          description: The state.
        version:
          type: string
          readOnly: true
          description: Gets the version.
        accessEndpoint:
          type: string
          readOnly: true
          description: Gets the access endpoint.
        endpointsConfiguration:
          $ref: '#/components/schemas/FlowEndpointsConfiguration'
          description: The endpoints configuration.
        accessControl:
          $ref: '#/components/schemas/FlowAccessControlConfiguration'
          description: The access control configuration.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: The sku.
        integrationAccount:
          $ref: '#/components/schemas/ResourceReference'
          description: The integration account.
        definition:
          $ref: '#/components/schemas/Object'
          description: The definition.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/WorkflowParameter'
          description: The parameters.
      description: The workflow version properties.
    WorkflowVersionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowVersion'
            description: The workflow version.
          description: A list of workflow versions.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of workflow versions.
    WorkflowTrigger:
      description: The workflow trigger.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkflowTriggerProperties'
          description: The workflow trigger properties.
        name:
          type: string
          readOnly: true
          description: Gets the workflow trigger name.
        type:
          type: string
          readOnly: true
          description: Gets the workflow trigger type.
        id:
          type: string
          readOnly: true
          description: The resource id.
      type: object
    WorkflowTriggerProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/WorkflowTriggerProvisioningState'
          readOnly: true
          description: Gets the provisioning state.
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the changed time.
        state:
          $ref: '#/components/schemas/WorkflowState'
          readOnly: true
          description: Gets the state.
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          readOnly: true
          description: Gets the status.
        lastExecutionTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the last execution time.
        nextExecutionTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the next execution time.
        recurrence:
          $ref: '#/components/schemas/WorkflowTriggerRecurrence'
          readOnly: true
          description: Gets the workflow trigger recurrence.
        workflow:
          $ref: '#/components/schemas/ResourceReference'
          readOnly: true
          description: Gets the reference to workflow.
      description: The workflow trigger properties.
    WorkflowTriggerFilter:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/WorkflowState'
          description: The state of workflow trigger.
      description: The workflow trigger filter.
    WorkflowTriggerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowTrigger'
          description: A list of workflow triggers.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of workflow triggers.
    WorkflowTriggerCallbackUrl:
      type: object
      properties:
        value:
          type: string
          readOnly: true
          description: Gets the workflow trigger callback URL.
        method:
          type: string
          readOnly: true
          description: Gets the workflow trigger callback URL HTTP method.
        basePath:
          type: string
          readOnly: true
          description: Gets the workflow trigger callback URL base path.
        relativePath:
          type: string
          readOnly: true
          description: Gets the workflow trigger callback URL relative path.
        relativePathParameters:
          type: array
          items:
            type: string
          description: Gets the workflow trigger callback URL relative path parameters.
        queries:
          $ref: '#/components/schemas/WorkflowTriggerListCallbackUrlQueries'
          description: Gets the workflow trigger callback URL query parameters.
      description: The workflow trigger callback URL.
    WorkflowTriggerListCallbackUrlQueries:
      type: object
      properties:
        api-version:
          type: string
          description: The api version.
        sp:
          type: string
          description: The SAS permissions.
        sv:
          type: string
          description: The SAS version.
        sig:
          type: string
          description: The SAS signature.
        se:
          type: string
          description: The SAS timestamp.
      description: Gets the workflow trigger callback URL query parameters.
    WorkflowTriggerHistory:
      description: The workflow trigger history.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkflowTriggerHistoryProperties'
          description: Gets the workflow trigger history properties.
        name:
          type: string
          readOnly: true
          description: Gets the workflow trigger history name.
        type:
          type: string
          readOnly: true
          description: Gets the workflow trigger history type.
        id:
          type: string
          readOnly: true
          description: The resource id.
      type: object
    WorkflowTriggerHistoryProperties:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the start time.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the end time.
        scheduledTime:
          type: string
          format: date-time
          readOnly: true
          description: The scheduled time.
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          readOnly: true
          description: Gets the status.
        code:
          type: string
          readOnly: true
          description: Gets the code.
        error:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the error.
        trackingId:
          type: string
          readOnly: true
          description: Gets the tracking id.
        correlation:
          $ref: '#/components/schemas/Correlation'
          description: The run correlation.
        inputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to input parameters.
        outputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to output parameters.
        fired:
          type: boolean
          readOnly: true
          description: The value indicating whether trigger was fired.
        run:
          $ref: '#/components/schemas/ResourceReference'
          readOnly: true
          description: Gets the reference to workflow run.
      description: The workflow trigger history properties.
    WorkflowTriggerHistoryListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowTriggerHistory'
          description: A list of workflow trigger histories.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of workflow trigger histories.
    WorkflowTriggerHistoryFilter:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          description: The status of workflow trigger history.
      description: The workflow trigger history filter.
    WorkflowRun:
      description: The workflow run.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkflowRunProperties'
          description: The workflow run properties.
        name:
          type: string
          readOnly: true
          description: Gets the workflow run name.
        type:
          type: string
          readOnly: true
          description: Gets the workflow run type.
        id:
          type: string
          readOnly: true
          description: The resource id.
      type: object
    WorkflowRunProperties:
      type: object
      properties:
        waitEndTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the wait end time.
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the start time.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the end time.
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          readOnly: true
          description: Gets the status.
        code:
          type: string
          readOnly: true
          description: Gets the code.
        error:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the error.
        correlationId:
          type: string
          readOnly: true
          description: Gets the correlation id.
        correlation:
          $ref: '#/components/schemas/Correlation'
          description: The run correlation.
        workflow:
          $ref: '#/components/schemas/ResourceReference'
          readOnly: true
          description: Gets the reference to workflow version.
        trigger:
          $ref: '#/components/schemas/WorkflowRunTrigger'
          readOnly: true
          description: Gets the fired trigger.
        outputs:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/WorkflowOutputParameter'
            description: The workflow output parameter.
          description: Gets the outputs.
        response:
          $ref: '#/components/schemas/WorkflowRunTrigger'
          readOnly: true
          description: Gets the response of the flow run.
      description: The workflow run properties.
    WorkflowRunFilter:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          description: The status of workflow run.
      description: The workflow run filter.
    WorkflowRunListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRun'
          description: A list of workflow runs.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of workflow runs.
    WorkflowRunAction:
      description: The workflow run action.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkflowRunActionProperties'
          description: The workflow run action properties.
        name:
          type: string
          readOnly: true
          description: Gets the workflow run action name.
        type:
          type: string
          readOnly: true
          description: Gets the workflow run action type.
        id:
          type: string
          readOnly: true
          description: The resource id.
      type: object
    WorkflowRunActionProperties:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the start time.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the end time.
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          readOnly: true
          description: Gets the status.
        code:
          type: string
          readOnly: true
          description: Gets the code.
        error:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the error.
        trackingId:
          type: string
          readOnly: true
          description: Gets the tracking id.
        correlation:
          $ref: '#/components/schemas/RunActionCorrelation'
          description: The correlation properties.
        inputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to inputs.
        outputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to outputs.
        trackedProperties:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the tracked properties.
        retryHistory:
          type: array
          items:
            $ref: '#/components/schemas/RetryHistory'
          x-ms-identifiers: []
          description: Gets the retry histories.
      description: The workflow run action properties.
    WorkflowRunActionFilter:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          description: The status of workflow run action.
      description: The workflow run action filter.
    WorkflowRunActionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRunAction'
          description: A list of workflow run actions.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of workflow run actions.
    SkuName:
      type: string
      enum:
        - NotSpecified
        - Free
        - Shared
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuName
        modelAsString: true
      description: The sku name.
    WorkflowState:
      type: string
      description: The workflow state.
      enum:
        - NotSpecified
        - Completed
        - Enabled
        - Disabled
        - Deleted
        - Suspended
      x-ms-enum:
        name: WorkflowState
        modelAsString: true
    WorkflowStatus:
      type: string
      description: The workflow status.
      enum:
        - NotSpecified
        - Paused
        - Running
        - Waiting
        - Succeeded
        - Skipped
        - Suspended
        - Cancelled
        - Failed
        - Faulted
        - TimedOut
        - Aborted
        - Ignored
      x-ms-enum:
        name: WorkflowStatus
        modelAsString: true
    ParameterType:
      type: string
      description: The parameter type.
      enum:
        - NotSpecified
        - String
        - SecureString
        - Int
        - Float
        - Bool
        - Array
        - Object
        - SecureObject
      x-ms-enum:
        name: ParameterType
        modelAsString: true
    KeyType:
      type: string
      description: The key type.
      enum:
        - NotSpecified
        - Primary
        - Secondary
      x-ms-enum:
        name: KeyType
        modelAsString: true
    Sku:
      type: object
      description: The sku type.
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
          description: The name.
        plan:
          $ref: '#/components/schemas/ResourceReference'
          description: The reference to plan.
    ContentLink:
      type: object
      properties:
        uri:
          type: string
          description: The content link URI.
        contentVersion:
          type: string
          description: The content version.
          readOnly: true
        contentSize:
          type: integer
          format: int64
          description: The content size.
          readOnly: true
        contentHash:
          $ref: '#/components/schemas/ContentHash'
          description: The content hash.
          readOnly: true
        metadata:
          $ref: '#/components/schemas/Object'
          description: The metadata.
          readOnly: true
      description: The content link.
    ContentHash:
      type: object
      properties:
        algorithm:
          type: string
          description: The algorithm of the content hash.
        value:
          type: string
          description: The value of the content hash.
      description: The content hash.
    RegenerateActionParameter:
      type: object
      properties:
        keyType:
          $ref: '#/components/schemas/KeyType'
          description: The key type.
      description: The access key regenerate action content.
    RetryHistory:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: Gets the start time.
        endTime:
          type: string
          format: date-time
          description: Gets the end time.
        code:
          type: string
          description: Gets the status code.
        clientRequestId:
          type: string
          description: Gets the client request Id.
        serviceRequestId:
          type: string
          description: Gets the service request Id.
        error:
          $ref: '#/components/schemas/ErrorResponse'
          description: Gets the error response.
      description: The retry history.
    Correlation:
      type: object
      properties:
        clientTrackingId:
          type: string
          description: The client tracking id.
      description: The correlation property.
    WorkflowParameter:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ParameterType'
          description: The type.
        value:
          $ref: '#/components/schemas/Object'
          description: The value.
        metadata:
          $ref: '#/components/schemas/Object'
          description: The metadata.
        description:
          type: string
          description: The description.
      description: The workflow parameters.
    WorkflowOutputParameter:
      description: The workflow output parameter.
      properties:
        error:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the error.
        type:
          $ref: '#/components/schemas/ParameterType'
          description: The type.
        value:
          $ref: '#/components/schemas/Object'
          description: The value.
        metadata:
          $ref: '#/components/schemas/Object'
          description: The metadata.
        description:
          type: string
          description: The description.
      type: object
    RecurrenceFrequency:
      type: string
      description: The recurrence frequency.
      enum:
        - NotSpecified
        - Second
        - Minute
        - Hour
        - Day
        - Week
        - Month
        - Year
      x-ms-enum:
        name: RecurrenceFrequency
        modelAsString: true
    RecurrenceSchedule:
      type: object
      properties:
        minutes:
          type: array
          items:
            type: integer
            format: int32
          description: The minutes.
        hours:
          type: array
          items:
            type: integer
            format: int32
          description: The hours.
        weekDays:
          type: array
          items:
            type: string
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            x-ms-enum:
              name: DaysOfWeek
              modelAsString: false
          description: The days of the week.
        monthDays:
          type: array
          items:
            type: integer
            format: int32
          description: The month days.
        monthlyOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/RecurrenceScheduleOccurrence'
          x-ms-identifiers: []
          description: The monthly occurrences.
      description: The recurrence schedule.
    RecurrenceScheduleOccurrence:
      type: object
      properties:
        day:
          $ref: '#/components/schemas/DayOfWeek'
          description: The day of the week.
        occurrence:
          type: integer
          format: int32
          description: The occurrence.
      description: The recurrence schedule occurrence.
    WorkflowTriggerRecurrence:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/RecurrenceFrequency'
          description: The frequency.
        interval:
          type: integer
          format: int32
          description: The interval.
        startTime:
          type: string
          description: The start time.
        endTime:
          type: string
          description: The end time.
        timeZone:
          type: string
          description: The time zone.
        schedule:
          $ref: '#/components/schemas/RecurrenceSchedule'
          description: The recurrence schedule.
      description: The workflow trigger recurrence.
    WorkflowRunTrigger:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: Gets the name.
        inputs:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the inputs.
        inputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to inputs.
        outputs:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the outputs.
        outputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to outputs.
        scheduledTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the scheduled time.
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the start time.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the end time.
        trackingId:
          type: string
          readOnly: true
          description: Gets the tracking id.
        correlation:
          $ref: '#/components/schemas/Correlation'
          description: The run correlation.
        code:
          type: string
          readOnly: true
          description: Gets the code.
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          readOnly: true
          description: Gets the status.
        error:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the error.
        trackedProperties:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the tracked properties.
      description: The workflow run trigger.
    WorkflowTriggerProvisioningState:
      type: string
      description: The workflow trigger provisioning state.
      enum:
        - NotSpecified
        - Accepted
        - Running
        - Ready
        - Creating
        - Created
        - Deleting
        - Deleted
        - Canceled
        - Failed
        - Succeeded
        - Moving
        - Updating
        - Registering
        - Registered
        - Unregistering
        - Unregistered
        - Completed
      x-ms-enum:
        name: WorkflowTriggerProvisioningState
        modelAsString: true
    WorkflowProvisioningState:
      type: string
      description: The workflow provisioning state.
      enum:
        - NotSpecified
        - Accepted
        - Running
        - Ready
        - Creating
        - Created
        - Deleting
        - Deleted
        - Canceled
        - Failed
        - Succeeded
        - Moving
        - Updating
        - Registering
        - Registered
        - Unregistering
        - Unregistered
        - Completed
        - Renewing
        - Pending
        - Waiting
        - InProgress
      x-ms-enum:
        name: WorkflowProvisioningState
        modelAsString: true
    DayOfWeek:
      type: string
      description: The day of the week.
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      x-ms-enum:
        name: DayOfWeek
        modelAsString: false
    GenerateUpgradedDefinitionParameters:
      type: object
      properties:
        targetSchemaVersion:
          type: string
          description: The target schema version.
      description: The parameters to generate upgraded definition.
    ApiTier:
      description: The Api tier.
      type: string
      enum:
        - NotSpecified
        - Enterprise
        - Standard
        - Premium
      x-ms-enum:
        name: ApiTier
        modelAsString: true
    ApiOperationAnnotation:
      type: object
      description: The Api Operation Annotation.
      properties:
        status:
          $ref: '#/components/schemas/StatusAnnotation'
        family:
          type: string
          description: The family.
        revision:
          type: integer
          description: The revision.
    SwaggerXml:
      type: object
      description: The Swagger XML.
      properties:
        name:
          type: string
          description: The xml element or attribute name.
        namespace:
          type: string
          description: The xml namespace.
        prefix:
          type: string
          description: The name prefix.
        attribute:
          type: boolean
          description: Indicates whether the property should be an attribute instead of an element.
        wrapped:
          type: boolean
          description: Indicates whether the array elements are wrapped in a container element.
        extensions:
          type: object
          description: The vendor extensions.
          additionalProperties:
            $ref: '#/components/schemas/Object'
    SwaggerExternalDocumentation:
      type: object
      description: The swagger external documentation
      properties:
        description:
          type: string
          description: The document description.
        uri:
          description: The documentation Uri.
          type: string
        extensions:
          type: object
          description: The vendor extensions.
          additionalProperties:
            $ref: '#/components/schemas/Object'
    SwaggerCustomDynamicSchema:
      type: object
      description: The swagger custom dynamic schema.
      properties:
        operationId:
          type: string
          description: The operation id to fetch dynamic schema.
        valuePath:
          type: string
          description: Json pointer to the dynamic schema on the response body.
        parameters:
          type: object
          description: The operation parameters.
          additionalProperties:
            $ref: '#/components/schemas/Object'
    SwaggerCustomDynamicProperties:
      type: object
      description: The swagger custom dynamic properties.
      properties:
        operationId:
          type: string
          description: The operation id to fetch dynamic schema.
        valuePath:
          type: string
          description: Json pointer to the dynamic schema on the response body.
        parameters:
          type: object
          description: The operation parameters.
          additionalProperties:
            $ref: '#/components/schemas/SwaggerCustomDynamicProperties'
    SwaggerCustomDynamicList:
      type: object
      description: The swagger custom dynamic list.
      properties:
        operationId:
          type: string
          description: The operation id to fetch dynamic schema.
        builtInOperation:
          type: string
          description: The built in operation.
        itemsPath:
          type: string
          description: The path to a response property (relative to the response object, not the response body) which contains an array of dynamic value items.
        itemValuePath:
          type: string
          description: The path to a property which defines the value which should be used.
        itemTitlePath:
          type: string
          description: The path to an item property which defines the display name of the item.
        parameters:
          type: object
          description: The parameters.
          additionalProperties:
            $ref: '#/components/schemas/SwaggerCustomDynamicProperties'
    SwaggerCustomDynamicTree:
      type: object
      description: The swagger custom dynamic tree.
      properties:
        settings:
          description: The tree settings
          $ref: '#/components/schemas/SwaggerCustomDynamicTreeSettings'
        open:
          description: The tree on-open configuration
          $ref: '#/components/schemas/SwaggerCustomDynamicTreeCommand'
        browse:
          description: The tree on-browse configuration
          $ref: '#/components/schemas/SwaggerCustomDynamicTreeCommand'
    SwaggerCustomDynamicTreeParameter:
      type: object
      description: The swagger custom dynamic tree parameter.
      properties:
        selectedItemValuePath:
          type: string
          description: Gets or sets a path to a property in the currently selected item to pass as a value to a parameter for the given operation.
        value:
          $ref: '#/components/schemas/Object'
          description: The parameter value.
        parameterReference:
          type: string
          description: The parameter reference.
        required:
          type: boolean
          description: Indicates whether the parameter is required.
    SwaggerCustomDynamicTreeCommand:
      type: object
      description: The swagger tree command.
      properties:
        operationId:
          type: string
          description: The path to an item property which defines the display name of the item.
        itemsPath:
          type: string
          description: The path to an item property which defines the display name of the item.
        itemValuePath:
          type: string
          description: The path to an item property which defines the display name of the item.
        itemTitlePath:
          type: string
          description: The path to an item property which defines the display name of the item.
        itemFullTitlePath:
          type: string
          description: The path to an item property which defines the display name of the item.
        itemIsParent:
          type: string
          description: The path to an item property which defines the display name of the item.
        selectableFilter:
          type: string
          description: The path to an item property which defines the display name of the item.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SwaggerCustomDynamicTreeParameter'
    SwaggerCustomDynamicTreeSettings:
      type: object
      description: The swagger custom dynamic tree settings.
      properties:
        CanSelectParentNodes:
          type: boolean
          description: Indicates whether parent nodes can be selected.
        CanSelectLeafNodes:
          type: boolean
          description: Indicates whether leaf nodes can be selected.
    SwaggerSchemaType:
      type: string
      enum:
        - String
        - Number
        - Integer
        - Boolean
        - Array
        - File
        - Object
        - 'Null'
      x-ms-enum:
        name: SwaggerSchemaType
        modelAsString: true
      description: The swagger schema type.
    SwaggerSchema:
      description: The swagger schema.
      properties:
        ref:
          type: string
          description: The reference.
        type:
          $ref: '#/components/schemas/SwaggerSchemaType'
          description: The type
        title:
          type: string
          description: The title.
        items:
          description: The items schema.
          $ref: '#/components/schemas/SwaggerSchema'
        properties:
          type: object
          x-ms-client-flatten: true
          description: The object properties
          additionalProperties:
            $ref: '#/components/schemas/SwaggerSchema'
        additionalProperties:
          description: The additional properties.
          $ref: '#/components/schemas/Object'
        required:
          type: array
          description: The object required properties.
          items:
            type: string
        maxProperties:
          type: integer
          description: The maximum number of allowed properties.
        minProperties:
          type: integer
          description: The minimum number of allowed properties.
        allOf:
          type: array
          description: The schemas which must pass validation when this schema is used.
          items:
            $ref: '#/components/schemas/SwaggerSchema'
          x-ms-identifiers: []
        discriminator:
          type: string
          description: The discriminator.
        readOnly:
          type: boolean
          description: Indicates whether this property must be present in the a request.
        xml:
          $ref: '#/components/schemas/SwaggerXml'
          description: The xml representation format for a property.
        externalDocs:
          $ref: '#/components/schemas/SwaggerExternalDocumentation'
          description: The external documentation.
        example:
          description: The example value.
          $ref: '#/components/schemas/Object'
        notificationUrlExtension:
          type: boolean
          description: Indicates the notification url extension. If this is set, the property's value should be a callback url for a webhook.
        dynamicSchemaOld:
          $ref: '#/components/schemas/SwaggerCustomDynamicSchema'
          description: The dynamic schema configuration.
        dynamicSchemaNew:
          $ref: '#/components/schemas/SwaggerCustomDynamicProperties'
          description: The dynamic schema configuration.
        dynamicListNew:
          $ref: '#/components/schemas/SwaggerCustomDynamicList'
          description: The dynamic list.
        dynamicTree:
          $ref: '#/components/schemas/SwaggerCustomDynamicTree'
          description: The dynamic values tree configuration.
      type: object
    ApiOperationPropertiesDefinition:
      type: object
      description: The api operations properties
      properties:
        summary:
          type: string
          description: The summary of the api operation.
        description:
          type: string
          description: The description of the api operation.
        visibility:
          type: string
          description: The visibility of the api operation.
        trigger:
          type: string
          description: The trigger type of api operation.
        triggerHint:
          type: string
          description: The trigger hint for the api operation.
        pageable:
          type: boolean
          description: Indicates whether the api operation is pageable.
        annotation:
          $ref: '#/components/schemas/ApiOperationAnnotation'
          description: The annotation of api operation.
        api:
          $ref: '#/components/schemas/ApiReference'
          description: The api reference.
        inputsDefinition:
          $ref: '#/components/schemas/SwaggerSchema'
          description: The operation inputs definition schema.
        responsesDefinition:
          type: object
          description: The operation responses definition schemas.
          additionalProperties:
            $ref: '#/components/schemas/SwaggerSchema'
        isWebhook:
          type: boolean
          description: Indicates whether the API operation is webhook or not.
        isNotification:
          type: boolean
          description: Indicates whether the API operation is notification or not.
    ApiOperation:
      description: The api operation.
      properties:
        properties:
          $ref: '#/components/schemas/ApiOperationPropertiesDefinition'
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    ApiOperationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiOperation'
          description: The api operation definitions for an API.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of managed API operations.
    StatusAnnotation:
      type: string
      description: The status annotation.
      enum:
        - NotSpecified
        - Preview
        - Production
      x-ms-enum:
        name: StatusAnnotation
        modelAsString: true
    WorkflowTriggerReference:
      description: The workflow trigger reference.
      properties:
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        flowName:
          type: string
          description: The workflow name.
        triggerName:
          type: string
          description: The workflow trigger name.
        id:
          type: string
          description: The resource id.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
      type: object
    WorkflowReference:
      description: The workflow reference.
      properties:
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        id:
          type: string
          description: The resource id.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
      type: object
    ApiReference:
      description: The Api reference.
      properties:
        displayName:
          type: string
          description: The display name of the api.
        description:
          type: string
          description: The description of the api.
        iconUri:
          type: string
          description: The icon uri of the api.
        swagger:
          $ref: '#/components/schemas/Object'
          description: The swagger of the api.
        brandColor:
          type: string
          description: The brand color of the api.
        category:
          $ref: '#/components/schemas/ApiTier'
          description: The tier.
        integrationServiceEnvironment:
          $ref: '#/components/schemas/ResourceReference'
          description: The integration service environment reference.
        id:
          type: string
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
      type: object
    ManagedApiListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ManagedApi'
          description: The managed APIs.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of managed APIs.
    ApiResourceProperties:
      type: object
      description: The API resource properties.
      properties:
        name:
          type: string
          description: The name
          readOnly: true
        connectionParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Object'
          description: The connection parameters.
          readOnly: true
        metadata:
          $ref: '#/components/schemas/ApiResourceMetadata'
          description: The metadata.
          readOnly: true
        runtimeUrls:
          type: array
          description: The runtime urls.
          items:
            type: string
          readOnly: true
        generalInformation:
          $ref: '#/components/schemas/ApiResourceGeneralInformation'
          description: The api general information.
          readOnly: true
        capabilities:
          type: array
          description: The capabilities.
          items:
            type: string
          readOnly: true
        backendService:
          $ref: '#/components/schemas/ApiResourceBackendService'
          description: The backend service.
          readOnly: true
        policies:
          $ref: '#/components/schemas/ApiResourcePolicies'
          description: The policies for the API.
          readOnly: true
        apiDefinitionUrl:
          type: string
          description: The API definition.
          readOnly: true
        apiDefinitions:
          $ref: '#/components/schemas/ApiResourceDefinitions'
          description: The api definitions.
          readOnly: true
        integrationServiceEnvironment:
          $ref: '#/components/schemas/ResourceReference'
          description: The integration service environment reference.
        provisioningState:
          $ref: '#/components/schemas/WorkflowProvisioningState'
          description: The provisioning state.
          readOnly: true
        category:
          $ref: '#/components/schemas/ApiTier'
          description: The category.
          readOnly: true
    ApiResourcePolicies:
      type: object
      description: The API resource policies.
      properties:
        content:
          type: string
          description: The API level only policies XML as embedded content.
        contentLink:
          type: string
          description: The content link to the policies.
    ApiResourceDefinitions:
      type: object
      description: The Api resource definition.
      properties:
        originalSwaggerUrl:
          type: string
          description: The original swagger url.
        modifiedSwaggerUrl:
          type: string
          description: The modified swagger url.
    ApiDeploymentParameterMetadataSet:
      type: object
      description: The API deployment parameters metadata.
      properties:
        packageContentLink:
          $ref: '#/components/schemas/ApiDeploymentParameterMetadata'
          description: The package content link parameter.
        redisCacheConnectionString:
          $ref: '#/components/schemas/ApiDeploymentParameterMetadata'
          description: The package content link parameter.
    ApiDeploymentParameterMetadata:
      type: object
      description: The API deployment parameter metadata.
      properties:
        type:
          type: string
          description: The type.
        isRequired:
          type: boolean
          description: Indicates whether its required.
        displayName:
          type: string
          description: The display name.
        description:
          type: string
          description: The description.
        visibility:
          $ref: '#/components/schemas/ApiDeploymentParameterVisibility'
          description: The visibility.
    ApiDeploymentParameterVisibility:
      type: string
      description: The Api deployment parameter visibility.
      enum:
        - NotSpecified
        - Default
        - Internal
      x-ms-enum:
        name: ApiDeploymentParameterVisibility
        modelAsString: true
    ApiResourceBackendService:
      type: object
      properties:
        serviceUrl:
          type: string
          description: The service URL.
      description: The API backend service.
    ApiResourceMetadata:
      type: object
      description: The api resource metadata.
      properties:
        source:
          type: string
          description: The source.
        brandColor:
          type: string
          description: The brand color.
        hideKey:
          type: string
          description: The hide key.
        tags:
          type: object
          description: The tags.
          additionalProperties:
            type: string
        ApiType:
          $ref: '#/components/schemas/ApiType'
          description: The api type.
        wsdlService:
          $ref: '#/components/schemas/WsdlService'
          description: The WSDL service.
        wsdlImportMethod:
          $ref: '#/components/schemas/WsdlImportMethod'
          description: The WSDL import method.
        connectionType:
          type: string
          description: The connection type.
        provisioningState:
          $ref: '#/components/schemas/WorkflowProvisioningState'
          description: The provisioning state.
        deploymentParameters:
          $ref: '#/components/schemas/ApiDeploymentParameterMetadataSet'
          description: The connector deployment parameters metadata.
    ApiType:
      type: string
      enum:
        - NotSpecified
        - Rest
        - Soap
      x-ms-enum:
        name: ApiType
        modelAsString: true
    WsdlService:
      type: object
      description: The WSDL service.
      properties:
        qualifiedName:
          type: string
          description: The qualified name.
        EndpointQualifiedNames:
          type: array
          description: The list of endpoints' qualified names.
          items:
            type: string
    WsdlImportMethod:
      type: string
      description: The WSDL import method.
      enum:
        - NotSpecified
        - SoapToRest
        - SoapPassThrough
      x-ms-enum:
        name: WsdlImportMethod
        modelAsString: true
    ApiResourceGeneralInformation:
      type: object
      description: The API general information.
      properties:
        iconUrl:
          type: string
          description: The icon url.
        displayName:
          type: string
          description: The display name.
        description:
          type: string
          description: The description.
        termsOfUseUrl:
          type: string
          description: The terms of use url.
        releaseTag:
          type: string
          description: The release tag.
        tier:
          $ref: '#/components/schemas/ApiTier'
          description: The tier.
    ManagedApi:
      description: The managed api definition.
      properties:
        properties:
          $ref: '#/components/schemas/ApiResourceProperties'
          description: The api resource properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationServiceEnvironmentNetworkEndPointAccessibilityState:
      type: string
      description: The integration service environment network endpoint accessibility state.
      enum:
        - NotSpecified
        - Unknown
        - Available
        - NotAvailable
      x-ms-enum:
        name: IntegrationServiceEnvironmentNetworkEndPointAccessibilityState
        modelAsString: true
    IntegrationServiceEnvironmentNetworkEndpoint:
      type: object
      description: The network endpoint.
      properties:
        accessibility:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkEndPointAccessibilityState'
          description: The accessibility state.
        domainName:
          type: string
          description: The domain name.
        ports:
          type: array
          description: The ports.
          items:
            type: string
    IntegrationServiceEnvironmentNetworkDependencyCategoryType:
      type: string
      description: The integration service environment network dependency category type.
      enum:
        - NotSpecified
        - AzureStorage
        - AzureManagement
        - AzureActiveDirectory
        - SSLCertificateVerification
        - DiagnosticLogsAndMetrics
        - IntegrationServiceEnvironmentConnectors
        - RedisCache
        - AccessEndpoints
        - RecoveryService
        - SQL
        - RegionalService
      x-ms-enum:
        name: IntegrationServiceEnvironmentNetworkDependencyCategoryType
        modelAsString: true
    IntegrationServiceEnvironmentNetworkDependency:
      type: object
      description: The azure async operation resource.
      properties:
        category:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkDependencyCategoryType'
          description: The network dependency category type.
        displayName:
          type: string
          description: The display name.
        endpoints:
          type: array
          description: The endpoints.
          items:
            $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkEndpoint'
            description: The endpoint.
          x-ms-identifiers: []
    IntegrationServiceEnvironmentNetworkDependencyHealthState:
      type: string
      description: The integration service environment network dependency health state.
      enum:
        - NotSpecified
        - Healthy
        - Unhealthy
        - Unknown
      x-ms-enum:
        name: IntegrationServiceEnvironmentNetworkDependencyHealthState
        modelAsString: true
    IntegrationServiceEnvironmentNetworkDependencyHealth:
      type: object
      description: The integration service environment subnet network health.
      properties:
        error:
          $ref: '#/components/schemas/ExtendedErrorInfo'
          description: The error if any occurred during the operation.
        state:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkDependencyHealthState'
          description: The network dependency health state.
    IntegrationServiceEnvironmentNetworkHealth:
      description: The integration service environment network health of all the subnets.
      additionalProperties:
        $ref: '#/components/schemas/IntegrationServiceEnvironmentSubnetNetworkHealth'
        description: The integration service environment subnet network health.
      properties: {}
      type: object
    IntegrationServiceEnvironmentSubnetNetworkHealth:
      type: object
      description: The integration service environment subnet network health.
      required:
        - networkDependencyHealthState
      properties:
        outboundNetworkDependencies:
          description: The outbound network dependencies.
          type: array
          items:
            $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkDependency'
            description: The integration service environment network dependency.
          x-ms-identifiers: []
        outboundNetworkHealth:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkDependencyHealth'
          description: The integration service environment network health.
        networkDependencyHealthState:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkEndPointAccessibilityState'
          description: The integration service environment network health state.
    ExtendedErrorInfo:
      type: object
      description: The extended error info.
      required:
        - code
        - message
      properties:
        code:
          description: The error code.
          $ref: '#/components/schemas/ErrorResponseCode'
        message:
          type: string
          description: The error message.
        details:
          type: array
          description: The error message details.
          items:
            $ref: '#/components/schemas/ExtendedErrorInfo'
          x-ms-identifiers:
            - code
        innerError:
          $ref: '#/components/schemas/Object'
          description: The inner error.
    ErrorResponseCode:
      type: string
      description: The error response code.
      enum:
        - NotSpecified
        - IntegrationServiceEnvironmentNotFound
        - InternalServerError
        - InvalidOperationId
      x-ms-enum:
        name: ErrorResponseCode
        modelAsString: true
    AzureAsyncOperationState:
      type: string
      description: The Azure async operation state.
      enum:
        - Failed
        - Succeeded
        - Pending
        - Canceled
      x-ms-enum:
        name: AzureAsyncOperationState
        modelAsString: true
    IntegrationServiceEnvironmentListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationServiceEnvironment'
            description: The integration service environment.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration service environments.
    IntegrationServiceEnvironment:
      description: The integration service environment.
      properties:
        properties:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentProperties'
          description: The integration service environment properties.
        sku:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentSku'
          description: The sku.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationServiceEnvironmentSku:
      type: object
      description: The integration service environment sku.
      properties:
        name:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentSkuName'
          description: The sku name.
        capacity:
          type: integer
          format: int32
          description: The sku capacity.
    IntegrationServiceEnvironmentProperties:
      type: object
      description: The integration service environment properties.
      properties:
        provisioningState:
          $ref: '#/components/schemas/WorkflowProvisioningState'
          description: The provisioning state.
        state:
          $ref: '#/components/schemas/WorkflowState'
          description: The integration service environment state.
        integrationServiceEnvironmentId:
          type: string
          description: Gets the tracking id.
        endpointsConfiguration:
          $ref: '#/components/schemas/FlowEndpointsConfiguration'
          description: The endpoints configuration.
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
          description: The network configuration.
        encryptionConfiguration:
          $ref: '#/components/schemas/IntegrationServiceEnvironmenEncryptionConfiguration'
          description: The encryption configuration.
    IntegrationServiceEnvironmentSkuName:
      type: string
      description: The integration service environment sku name.
      enum:
        - NotSpecified
        - Premium
        - Developer
      x-ms-enum:
        name: IntegrationServiceEnvironmentSkuName
        modelAsString: true
    NetworkConfiguration:
      type: object
      description: The network configuration.
      properties:
        virtualNetworkAddressSpace:
          type: string
          description: Gets the virtual network address space.
        accessEndpoint:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentAccessEndpoint'
          description: The access endpoint.
        subnets:
          type: array
          description: The subnets.
          items:
            $ref: '#/components/schemas/ResourceReference'
            description: The subnet.
    IntegrationServiceEnvironmentAccessEndpoint:
      type: object
      description: The integration service environment access endpoint.
      properties:
        type:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentAccessEndpointType'
          description: The access endpoint type.
    IntegrationServiceEnvironmentAccessEndpointType:
      type: string
      description: The integration service environment access endpoint type.
      enum:
        - NotSpecified
        - External
        - Internal
      x-ms-enum:
        name: IntegrationServiceEnvironmentAccessEndpointType
        modelAsString: true
    IntegrationServiceEnvironmenEncryptionConfiguration:
      type: object
      description: The encryption configuration for the integration service environment.
      properties:
        encryptionKeyReference:
          $ref: '#/components/schemas/IntegrationServiceEnvironmenEncryptionKeyReference'
          description: The encryption key reference.
    IntegrationServiceEnvironmenEncryptionKeyReference:
      type: object
      description: The encryption key details for the integration service environment.
      properties:
        keyVault:
          $ref: '#/components/schemas/ResourceReference'
          description: The key vault reference.
        keyName:
          type: string
          description: Gets the key name in the Key Vault.
        keyVersion:
          type: string
          description: Gets the version of the key specified in the keyName property.
    FlowAccessControlConfiguration:
      type: object
      description: The access control configuration.
      properties:
        triggers:
          $ref: '#/components/schemas/FlowAccessControlConfigurationPolicy'
          description: The access control configuration for invoking workflow triggers.
        contents:
          $ref: '#/components/schemas/FlowAccessControlConfigurationPolicy'
          description: The access control configuration for accessing workflow run contents.
        actions:
          $ref: '#/components/schemas/FlowAccessControlConfigurationPolicy'
          description: The access control configuration for workflow actions.
        workflowManagement:
          $ref: '#/components/schemas/FlowAccessControlConfigurationPolicy'
          description: The access control configuration for workflow management.
    FlowAccessControlConfigurationPolicy:
      type: object
      description: The access control configuration policy.
      properties:
        allowedCallerIpAddresses:
          type: array
          description: The allowed caller IP address ranges.
          items:
            $ref: '#/components/schemas/IpAddressRange'
            description: The ip address range.
          x-ms-identifiers: []
        openAuthenticationPolicies:
          $ref: '#/components/schemas/OpenAuthenticationAccessPolicies'
          description: The authentication policies for workflow.
    IpAddressRange:
      type: object
      description: The ip address range.
      properties:
        addressRange:
          type: string
          description: The IP address range.
    OpenAuthenticationAccessPolicies:
      type: object
      description: AuthenticationPolicy of type Open.
      properties:
        policies:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenAuthenticationAccessPolicy'
          description: Open authentication policies.
    OpenAuthenticationAccessPolicy:
      type: object
      description: Open authentication access policy defined by user.
      properties:
        type:
          $ref: '#/components/schemas/OpenAuthenticationProviderType'
          description: Type of provider for OAuth.
        claims:
          type: array
          description: The access policy claims.
          items:
            $ref: '#/components/schemas/OpenAuthenticationPolicyClaim'
            description: The access policy claim.
          x-ms-identifiers:
            - name
    OpenAuthenticationProviderType:
      type: string
      description: Open authentication policy provider type.
      enum:
        - AAD
      x-ms-enum:
        name: OpenAuthenticationProviderType
        modelAsString: true
    OpenAuthenticationPolicyClaim:
      type: object
      description: Open authentication policy claim.
      properties:
        name:
          type: string
          description: The name of the claim.
        value:
          type: string
          description: The value of the claim.
    FlowEndpointsConfiguration:
      type: object
      description: The endpoints configuration.
      properties:
        workflow:
          $ref: '#/components/schemas/FlowEndpoints'
          description: The workflow endpoints.
        connector:
          $ref: '#/components/schemas/FlowEndpoints'
          description: The connector endpoints.
    FlowEndpoints:
      type: object
      description: The flow endpoints configuration.
      properties:
        outgoingIpAddresses:
          type: array
          description: The outgoing ip address.
          items:
            $ref: '#/components/schemas/IpAddress'
            description: The ip address.
          x-ms-identifiers:
            - address
        accessEndpointIpAddresses:
          type: array
          description: The access endpoint ip address.
          items:
            $ref: '#/components/schemas/IpAddress'
            description: The ip address.
          x-ms-identifiers:
            - address
    IpAddress:
      type: object
      description: The ip address.
      properties:
        address:
          type: string
          description: The address.
    ManagedServiceIdentity:
      description: Managed service identity properties.
      type: object
      properties:
        type:
          description: Type of managed service identity. The type 'SystemAssigned' includes an implicitly created identity. The type 'None' will remove any identities from the resource.
          enum:
            - SystemAssigned
            - UserAssigned
            - None
          type: string
          x-ms-enum:
            name: ManagedServiceIdentityType
            modelAsString: true
        tenantId:
          description: Tenant of managed service identity.
          type: string
          format: uuid
          readOnly: true
        principalId:
          description: Principal Id of managed service identity.
          type: string
          format: uuid
          readOnly: true
        userAssignedIdentities:
          description: 'The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/userAssignedIdentity'
      required:
        - type
    userAssignedIdentity:
      description: User Assigned identity properties.
      type: object
      properties:
        principalId:
          description: Principal Id of user assigned identity
          type: string
          readOnly: true
        clientId:
          description: Client Id of user assigned identity
          type: string
          readOnly: true
    IntegrationServiceEnvironmentSkuList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationServiceEnvironmentSkuDefinition'
          x-ms-identifiers:
            - sku/name
            - sku/tier
          description: The list of integration service environment skus.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration service environment skus.
    IntegrationServiceEnvironmentSkuDefinition:
      type: object
      description: The integration service environment sku definition.
      properties:
        resourceType:
          description: The resource type.
          type: string
        sku:
          type: object
          description: The sku.
          properties:
            name:
              $ref: '#/components/schemas/IntegrationServiceEnvironmentSkuName'
              description: The sku name.
            tier:
              type: string
              description: The sku tier.
        capacity:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentSkuCapacity'
          description: The sku capacity.
    IntegrationServiceEnvironmentSkuCapacity:
      type: object
      description: The integration service environment sku capacity.
      properties:
        minimum:
          type: integer
          format: int32
          description: The minimum capacity.
        maximum:
          type: integer
          format: int32
          description: The maximum capacity.
        default:
          type: integer
          format: int32
          description: The default capacity.
        scaleType:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentSkuScaleType'
          description: The sku scale type.
    IntegrationServiceEnvironmentSkuScaleType:
      type: string
      description: The integration service environment sku scale type.
      enum:
        - Manual
        - Automatic
        - None
      x-ms-enum:
        name: IntegrationServiceEnvironmentSkuScaleType
        modelAsString: true
    IntegrationServiceEnvironmentManagedApiListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApi'
          description: The integration service environment managed APIs.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration service environment managed APIs.
    IntegrationServiceEnvironmentManagedApi:
      description: The integration service environment managed api.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApiProperties'
          description: The integration service environment managed api properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationServiceEnvironmentManagedApiProperties:
      description: The integration service environment managed api properties.
      properties:
        deploymentParameters:
          $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApiDeploymentParameters'
          description: The integration service environment managed api deployment parameters.
        name:
          type: string
          description: The name
          readOnly: true
        connectionParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Object'
          description: The connection parameters.
          readOnly: true
        metadata:
          $ref: '#/components/schemas/ApiResourceMetadata'
          description: The metadata.
          readOnly: true
        runtimeUrls:
          type: array
          description: The runtime urls.
          items:
            type: string
          readOnly: true
        generalInformation:
          $ref: '#/components/schemas/ApiResourceGeneralInformation'
          description: The api general information.
          readOnly: true
        capabilities:
          type: array
          description: The capabilities.
          items:
            type: string
          readOnly: true
        backendService:
          $ref: '#/components/schemas/ApiResourceBackendService'
          description: The backend service.
          readOnly: true
        policies:
          $ref: '#/components/schemas/ApiResourcePolicies'
          description: The policies for the API.
          readOnly: true
        apiDefinitionUrl:
          type: string
          description: The API definition.
          readOnly: true
        apiDefinitions:
          $ref: '#/components/schemas/ApiResourceDefinitions'
          description: The api definitions.
          readOnly: true
        integrationServiceEnvironment:
          $ref: '#/components/schemas/ResourceReference'
          description: The integration service environment reference.
        provisioningState:
          $ref: '#/components/schemas/WorkflowProvisioningState'
          description: The provisioning state.
          readOnly: true
        category:
          $ref: '#/components/schemas/ApiTier'
          description: The category.
          readOnly: true
      type: object
    IntegrationServiceEnvironmentManagedApiDeploymentParameters:
      type: object
      description: The integration service environment managed api deployment parameters.
      properties:
        contentLinkDefinition:
          $ref: '#/components/schemas/ContentLink'
          description: The integration service environment managed api content link for deployment.
    IntegrationAccountSkuName:
      type: string
      description: The integration account sku name.
      enum:
        - NotSpecified
        - Free
        - Basic
        - Standard
      x-ms-enum:
        name: IntegrationAccountSkuName
        modelAsString: true
    IntegrationAccount:
      description: The integration account.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationAccountProperties'
          description: The integration account properties.
        sku:
          $ref: '#/components/schemas/IntegrationAccountSku'
          description: The sku.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationAccountProperties:
      type: object
      description: The integration account properties.
      properties:
        integrationServiceEnvironment:
          $ref: '#/components/schemas/ResourceReference'
          description: The integration service environment.
        state:
          $ref: '#/components/schemas/WorkflowState'
          description: The workflow state.
    IntegrationAccountListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccount'
          description: The list of integration accounts.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration accounts.
    GetCallbackUrlParameters:
      type: object
      properties:
        notAfter:
          type: string
          format: date-time
          description: The expiry time.
        keyType:
          $ref: '#/components/schemas/KeyType'
          description: The key type.
      description: The callback url parameters.
    CallbackUrl:
      type: object
      properties:
        value:
          type: string
          description: The URL value.
      description: The callback url.
    IntegrationAccountSchema:
      required:
        - properties
      description: The integration account schema.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationAccountSchemaProperties'
          description: The integration account schema properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationAccountSchemaProperties:
      type: object
      required:
        - schemaType
      properties:
        schemaType:
          $ref: '#/components/schemas/SchemaType'
          description: The schema type.
        targetNamespace:
          type: string
          description: The target namespace of the schema.
        documentName:
          type: string
          description: The document name.
        fileName:
          type: string
          description: The file name.
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: The created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: The changed time.
        metadata:
          type: object
          description: The metadata.
          properties: {}
        content:
          type: string
          description: The content.
          properties: {}
        contentType:
          type: string
          description: The content type.
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: The content link.
      description: The integration account schema properties.
    IntegrationAccountSchemaListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccountSchema'
          description: The list of integration account schemas.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration account schemas.
    IntegrationAccountSchemaFilter:
      type: object
      required:
        - schemaType
      properties:
        schemaType:
          $ref: '#/components/schemas/SchemaType'
          description: The schema type of integration account schema.
      description: The integration account schema filter for odata query.
    SchemaType:
      type: string
      description: The schema type.
      enum:
        - NotSpecified
        - Xml
      x-ms-enum:
        name: SchemaType
        modelAsString: true
    IntegrationAccountMap:
      required:
        - properties
      description: The integration account map.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationAccountMapProperties'
          description: The integration account map properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationAccountMapProperties:
      type: object
      required:
        - mapType
      properties:
        mapType:
          $ref: '#/components/schemas/MapType'
          description: The map type.
        parametersSchema:
          type: object
          properties:
            ref:
              type: string
              description: The reference name.
          description: The parameters schema of integration account map.
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: The created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: The changed time.
        content:
          type: string
          description: The content.
          properties: {}
        contentType:
          type: string
          description: The content type.
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: The content link.
        metadata:
          type: object
          description: The metadata.
          properties: {}
      description: The integration account map.
    IntegrationAccountMapListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccountMap'
          description: The list of integration account maps.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration account maps.
    IntegrationAccountMapFilter:
      type: object
      required:
        - mapType
      properties:
        mapType:
          $ref: '#/components/schemas/MapType'
          description: The map type of integration account map.
      description: The integration account map filter for odata query.
    MapType:
      type: string
      description: The map type.
      enum:
        - NotSpecified
        - Xslt
        - Xslt20
        - Xslt30
        - Liquid
      x-ms-enum:
        name: MapType
        modelAsString: true
    IntegrationAccountSku:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/IntegrationAccountSkuName'
          description: The sku name.
      description: The integration account sku.
    IntegrationAccountPartnerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccountPartner'
          description: The list of integration account partners.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration account partners.
    IntegrationAccountPartnerFilter:
      type: object
      required:
        - partnerType
      properties:
        partnerType:
          $ref: '#/components/schemas/PartnerType'
          description: The partner type of integration account partner.
      description: The integration account partner filter for odata query.
    IntegrationAccountPartner:
      required:
        - properties
      description: The integration account partner.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationAccountPartnerProperties'
          description: The integration account partner properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationAccountPartnerProperties:
      type: object
      required:
        - partnerType
        - content
      properties:
        partnerType:
          $ref: '#/components/schemas/PartnerType'
          description: The partner type.
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: The created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: The changed time.
        metadata:
          type: object
          description: The metadata.
          properties: {}
        content:
          $ref: '#/components/schemas/PartnerContent'
          description: The partner content.
      description: The integration account partner properties.
    PartnerType:
      type: string
      description: The partner type.
      enum:
        - NotSpecified
        - B2B
      x-ms-enum:
        name: PartnerType
        modelAsString: true
    PartnerContent:
      type: object
      properties:
        b2b:
          $ref: '#/components/schemas/B2BPartnerContent'
          description: The B2B partner content.
      description: The integration account partner content.
    B2BPartnerContent:
      type: object
      properties:
        businessIdentities:
          type: array
          items:
            $ref: '#/components/schemas/BusinessIdentity'
          x-ms-identifiers:
            - qualifier
          description: The list of partner business identities.
      description: The B2B partner content.
    BusinessIdentity:
      type: object
      required:
        - qualifier
        - value
      properties:
        qualifier:
          type: string
          description: The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
        value:
          type: string
          description: The user defined business identity value.
      description: The integration account partner's business identity.
    IntegrationAccountAgreementListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccountAgreement'
          description: The list of integration account agreements.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration account agreements.
    IntegrationAccountAgreementFilter:
      type: object
      required:
        - agreementType
      properties:
        agreementType:
          $ref: '#/components/schemas/AgreementType'
          description: The agreement type of integration account agreement.
      description: The integration account agreement filter for odata query.
    IntegrationAccountAgreement:
      required:
        - properties
      description: The integration account agreement.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationAccountAgreementProperties'
          description: The integration account agreement properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationAccountAgreementProperties:
      type: object
      required:
        - hostPartner
        - guestPartner
        - hostIdentity
        - guestIdentity
        - agreementType
        - content
      properties:
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: The created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: The changed time.
        metadata:
          type: object
          description: The metadata.
          properties: {}
        agreementType:
          $ref: '#/components/schemas/AgreementType'
          description: The agreement type.
        hostPartner:
          type: string
          description: The integration account partner that is set as host partner for this agreement.
        guestPartner:
          type: string
          description: The integration account partner that is set as guest partner for this agreement.
        hostIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The business identity of the host partner.
        guestIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The business identity of the guest partner.
        content:
          $ref: '#/components/schemas/AgreementContent'
          description: The agreement content.
      description: The integration account agreement properties.
    AgreementType:
      type: string
      description: The agreement type.
      enum:
        - NotSpecified
        - AS2
        - X12
        - Edifact
      x-ms-enum:
        name: AgreementType
        modelAsString: false
    AgreementContent:
      type: object
      properties:
        aS2:
          $ref: '#/components/schemas/AS2AgreementContent'
          description: The AS2 agreement content.
        x12:
          $ref: '#/components/schemas/X12AgreementContent'
          description: The X12 agreement content.
        edifact:
          $ref: '#/components/schemas/EdifactAgreementContent'
          description: The EDIFACT agreement content.
      description: The integration account agreement content.
    AS2AgreementContent:
      type: object
      required:
        - receiveAgreement
        - sendAgreement
      properties:
        receiveAgreement:
          $ref: '#/components/schemas/AS2OneWayAgreement'
          description: The AS2 one-way receive agreement.
        sendAgreement:
          $ref: '#/components/schemas/AS2OneWayAgreement'
          description: The AS2 one-way send agreement.
      description: The integration account AS2 agreement content.
    AS2OneWayAgreement:
      type: object
      required:
        - senderBusinessIdentity
        - receiverBusinessIdentity
        - protocolSettings
      properties:
        senderBusinessIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The sender business identity
        receiverBusinessIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The receiver business identity
        protocolSettings:
          $ref: '#/components/schemas/AS2ProtocolSettings'
          description: The AS2 protocol settings.
      description: The integration account AS2 one-way agreement.
    AS2ProtocolSettings:
      type: object
      required:
        - messageConnectionSettings
        - acknowledgementConnectionSettings
        - mdnSettings
        - securitySettings
        - validationSettings
        - envelopeSettings
        - errorSettings
      properties:
        messageConnectionSettings:
          $ref: '#/components/schemas/AS2MessageConnectionSettings'
          description: The message connection settings.
        acknowledgementConnectionSettings:
          $ref: '#/components/schemas/AS2AcknowledgementConnectionSettings'
          description: The acknowledgement connection settings.
        mdnSettings:
          $ref: '#/components/schemas/AS2MdnSettings'
          description: The MDN settings.
        securitySettings:
          $ref: '#/components/schemas/AS2SecuritySettings'
          description: The security settings.
        validationSettings:
          $ref: '#/components/schemas/AS2ValidationSettings'
          description: The validation settings.
        envelopeSettings:
          $ref: '#/components/schemas/AS2EnvelopeSettings'
          description: The envelope settings.
        errorSettings:
          $ref: '#/components/schemas/AS2ErrorSettings'
          description: The error settings.
      description: The AS2 agreement protocol settings.
    AS2AcknowledgementConnectionSettings:
      type: object
      required:
        - ignoreCertificateNameMismatch
        - supportHttpStatusCodeContinue
        - keepHttpConnectionAlive
        - unfoldHttpHeaders
      properties:
        ignoreCertificateNameMismatch:
          type: boolean
          description: Indicates whether to ignore mismatch in certificate name.
        supportHttpStatusCodeContinue:
          type: boolean
          description: Indicates whether to support HTTP status code 'CONTINUE'.
        keepHttpConnectionAlive:
          type: boolean
          description: Indicates whether to keep the connection alive.
        unfoldHttpHeaders:
          type: boolean
          description: Indicates whether to unfold the HTTP headers.
      description: The AS2 agreement acknowledgement connection settings.
    AS2MessageConnectionSettings:
      type: object
      required:
        - ignoreCertificateNameMismatch
        - supportHttpStatusCodeContinue
        - keepHttpConnectionAlive
        - unfoldHttpHeaders
      properties:
        ignoreCertificateNameMismatch:
          type: boolean
          description: The value indicating whether to ignore mismatch in certificate name.
        supportHttpStatusCodeContinue:
          type: boolean
          description: The value indicating whether to support HTTP status code 'CONTINUE'.
        keepHttpConnectionAlive:
          type: boolean
          description: The value indicating whether to keep the connection alive.
        unfoldHttpHeaders:
          type: boolean
          description: The value indicating whether to unfold the HTTP headers.
      description: The AS2 agreement message connection settings.
    AS2MdnSettings:
      type: object
      required:
        - needMDN
        - signMDN
        - sendMDNAsynchronously
        - signOutboundMDNIfOptional
        - sendInboundMDNToMessageBox
        - micHashingAlgorithm
      properties:
        needMDN:
          type: boolean
          description: The value indicating whether to send or request a MDN.
        signMDN:
          type: boolean
          description: The value indicating whether the MDN needs to be signed or not.
        sendMDNAsynchronously:
          type: boolean
          description: The value indicating whether to send the asynchronous MDN.
        receiptDeliveryUrl:
          type: string
          description: The receipt delivery URL.
        dispositionNotificationTo:
          type: string
          description: The disposition notification to header value.
        signOutboundMDNIfOptional:
          type: boolean
          description: The value indicating whether to sign the outbound MDN if optional.
        mdnText:
          type: string
          description: The MDN text.
        sendInboundMDNToMessageBox:
          type: boolean
          description: The value indicating whether to send inbound MDN to message box.
        micHashingAlgorithm:
          $ref: '#/components/schemas/HashingAlgorithm'
          description: The signing or hashing algorithm.
      description: The AS2 agreement mdn settings.
    AS2SecuritySettings:
      type: object
      required:
        - overrideGroupSigningCertificate
        - enableNRRForInboundEncodedMessages
        - enableNRRForInboundDecodedMessages
        - enableNRRForOutboundMDN
        - enableNRRForOutboundEncodedMessages
        - enableNRRForOutboundDecodedMessages
        - enableNRRForInboundMDN
      properties:
        overrideGroupSigningCertificate:
          type: boolean
          description: The value indicating whether to send or request a MDN.
        signingCertificateName:
          type: string
          description: The name of the signing certificate.
        encryptionCertificateName:
          type: string
          description: The name of the encryption certificate.
        enableNRRForInboundEncodedMessages:
          type: boolean
          description: The value indicating whether to enable NRR for inbound encoded messages.
        enableNRRForInboundDecodedMessages:
          type: boolean
          description: The value indicating whether to enable NRR for inbound decoded messages.
        enableNRRForOutboundMDN:
          type: boolean
          description: The value indicating whether to enable NRR for outbound MDN.
        enableNRRForOutboundEncodedMessages:
          type: boolean
          description: The value indicating whether to enable NRR for outbound encoded messages.
        enableNRRForOutboundDecodedMessages:
          type: boolean
          description: The value indicating whether to enable NRR for outbound decoded messages.
        enableNRRForInboundMDN:
          type: boolean
          description: The value indicating whether to enable NRR for inbound MDN.
        sha2AlgorithmFormat:
          type: string
          description: The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
      description: The AS2 agreement security settings.
    AS2ValidationSettings:
      type: object
      required:
        - overrideMessageProperties
        - encryptMessage
        - signMessage
        - compressMessage
        - checkDuplicateMessage
        - interchangeDuplicatesValidityDays
        - checkCertificateRevocationListOnSend
        - checkCertificateRevocationListOnReceive
        - encryptionAlgorithm
      properties:
        overrideMessageProperties:
          type: boolean
          description: The value indicating whether to override incoming message properties with those in agreement.
        encryptMessage:
          type: boolean
          description: The value indicating whether the message has to be encrypted.
        signMessage:
          type: boolean
          description: The value indicating whether the message has to be signed.
        compressMessage:
          type: boolean
          description: The value indicating whether the message has to be compressed.
        checkDuplicateMessage:
          type: boolean
          description: The value indicating whether to check for duplicate message.
        interchangeDuplicatesValidityDays:
          type: integer
          format: int32
          description: The number of days to look back for duplicate interchange.
        checkCertificateRevocationListOnSend:
          type: boolean
          description: The value indicating whether to check for certificate revocation list on send.
        checkCertificateRevocationListOnReceive:
          type: boolean
          description: The value indicating whether to check for certificate revocation list on receive.
        encryptionAlgorithm:
          $ref: '#/components/schemas/EncryptionAlgorithm'
          description: The encryption algorithm.
        signingAlgorithm:
          $ref: '#/components/schemas/SigningAlgorithm'
          description: The signing algorithm.
      description: The AS2 agreement validation settings.
    AS2EnvelopeSettings:
      type: object
      required:
        - messageContentType
        - transmitFileNameInMimeHeader
        - fileNameTemplate
        - suspendMessageOnFileNameGenerationError
        - autogenerateFileName
      properties:
        messageContentType:
          type: string
          description: The message content type.
        transmitFileNameInMimeHeader:
          type: boolean
          description: The value indicating whether to transmit file name in mime header.
        fileNameTemplate:
          type: string
          description: The template for file name.
        suspendMessageOnFileNameGenerationError:
          type: boolean
          description: The value indicating whether to suspend message on file name generation error.
        autogenerateFileName:
          type: boolean
          description: The value indicating whether to auto generate file name.
      description: The AS2 agreement envelope settings.
    AS2ErrorSettings:
      type: object
      required:
        - suspendDuplicateMessage
        - resendIfMDNNotReceived
      properties:
        suspendDuplicateMessage:
          type: boolean
          description: The value indicating whether to suspend duplicate message.
        resendIfMDNNotReceived:
          type: boolean
          description: The value indicating whether to resend message If MDN is not received.
      description: The AS2 agreement error settings.
    X12AgreementContent:
      type: object
      required:
        - receiveAgreement
        - sendAgreement
      properties:
        receiveAgreement:
          $ref: '#/components/schemas/X12OneWayAgreement'
          description: The X12 one-way receive agreement.
        sendAgreement:
          $ref: '#/components/schemas/X12OneWayAgreement'
          description: The X12 one-way send agreement.
      description: The X12 agreement content.
    X12OneWayAgreement:
      type: object
      required:
        - senderBusinessIdentity
        - receiverBusinessIdentity
        - protocolSettings
      properties:
        senderBusinessIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The sender business identity
        receiverBusinessIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The receiver business identity
        protocolSettings:
          $ref: '#/components/schemas/X12ProtocolSettings'
          description: The X12 protocol settings.
      description: The X12 one-way agreement.
    X12ProtocolSettings:
      type: object
      required:
        - validationSettings
        - framingSettings
        - envelopeSettings
        - acknowledgementSettings
        - messageFilter
        - securitySettings
        - processingSettings
        - schemaReferences
      properties:
        validationSettings:
          $ref: '#/components/schemas/X12ValidationSettings'
          description: The X12 validation settings.
        framingSettings:
          $ref: '#/components/schemas/X12FramingSettings'
          description: The X12 framing settings.
        envelopeSettings:
          $ref: '#/components/schemas/X12EnvelopeSettings'
          description: The X12 envelope settings.
        acknowledgementSettings:
          $ref: '#/components/schemas/X12AcknowledgementSettings'
          description: The X12 acknowledgment settings.
        messageFilter:
          $ref: '#/components/schemas/X12MessageFilter'
          description: The X12 message filter.
        securitySettings:
          $ref: '#/components/schemas/X12SecuritySettings'
          description: The X12 security settings.
        processingSettings:
          $ref: '#/components/schemas/X12ProcessingSettings'
          description: The X12 processing settings.
        envelopeOverrides:
          type: array
          items:
            $ref: '#/components/schemas/X12EnvelopeOverride'
          x-ms-identifiers:
            - messageId
          description: The X12 envelope override settings.
        validationOverrides:
          type: array
          items:
            $ref: '#/components/schemas/X12ValidationOverride'
          x-ms-identifiers:
            - messageId
          description: The X12 validation override settings.
        messageFilterList:
          type: array
          items:
            $ref: '#/components/schemas/X12MessageIdentifier'
          x-ms-identifiers:
            - messageId
          description: The X12 message filter list.
        schemaReferences:
          type: array
          items:
            $ref: '#/components/schemas/X12SchemaReference'
          x-ms-identifiers:
            - messageId
          description: The X12 schema references.
        x12DelimiterOverrides:
          type: array
          items:
            $ref: '#/components/schemas/X12DelimiterOverrides'
          x-ms-identifiers: []
          description: The X12 delimiter override settings.
      description: The X12 agreement protocol settings.
    X12ValidationSettings:
      type: object
      required:
        - validateCharacterSet
        - checkDuplicateInterchangeControlNumber
        - interchangeControlNumberValidityDays
        - checkDuplicateGroupControlNumber
        - checkDuplicateTransactionSetControlNumber
        - validateEDITypes
        - validateXSDTypes
        - allowLeadingAndTrailingSpacesAndZeroes
        - trimLeadingAndTrailingSpacesAndZeroes
        - trailingSeparatorPolicy
      properties:
        validateCharacterSet:
          type: boolean
          description: The value indicating whether to validate character set in the message.
        checkDuplicateInterchangeControlNumber:
          type: boolean
          description: The value indicating whether to check for duplicate interchange control number.
        interchangeControlNumberValidityDays:
          type: integer
          format: int32
          description: The validity period of interchange control number.
        checkDuplicateGroupControlNumber:
          type: boolean
          description: The value indicating whether to check for duplicate group control number.
        checkDuplicateTransactionSetControlNumber:
          type: boolean
          description: The value indicating whether to check for duplicate transaction set control number.
        validateEDITypes:
          type: boolean
          description: The value indicating whether to Whether to validate EDI types.
        validateXSDTypes:
          type: boolean
          description: The value indicating whether to Whether to validate XSD types.
        allowLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to allow leading and trailing spaces and zeroes.
        trimLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to trim leading and trailing spaces and zeroes.
        trailingSeparatorPolicy:
          $ref: '#/components/schemas/TrailingSeparatorPolicy'
          description: The trailing separator policy.
      description: The X12 agreement validation settings.
    X12FramingSettings:
      type: object
      required:
        - dataElementSeparator
        - componentSeparator
        - replaceSeparatorsInPayload
        - replaceCharacter
        - segmentTerminator
        - characterSet
        - segmentTerminatorSuffix
      properties:
        dataElementSeparator:
          type: integer
          format: int32
          description: The data element separator.
        componentSeparator:
          type: integer
          format: int32
          description: The component separator.
        replaceSeparatorsInPayload:
          type: boolean
          description: The value indicating whether to replace separators in payload.
        replaceCharacter:
          type: integer
          format: int32
          description: The replacement character.
        segmentTerminator:
          type: integer
          format: int32
          description: The segment terminator.
        characterSet:
          $ref: '#/components/schemas/X12CharacterSet'
          description: The X12 character set.
        segmentTerminatorSuffix:
          $ref: '#/components/schemas/SegmentTerminatorSuffix'
          description: The segment terminator suffix.
      description: The X12 agreement framing settings.
    X12EnvelopeSettings:
      type: object
      required:
        - controlStandardsId
        - useControlStandardsIdAsRepetitionCharacter
        - senderApplicationId
        - receiverApplicationId
        - controlVersionNumber
        - interchangeControlNumberLowerBound
        - interchangeControlNumberUpperBound
        - rolloverInterchangeControlNumber
        - enableDefaultGroupHeaders
        - groupControlNumberLowerBound
        - groupControlNumberUpperBound
        - rolloverGroupControlNumber
        - groupHeaderAgencyCode
        - groupHeaderVersion
        - transactionSetControlNumberLowerBound
        - transactionSetControlNumberUpperBound
        - rolloverTransactionSetControlNumber
        - overwriteExistingTransactionSetControlNumber
        - groupHeaderDateFormat
        - groupHeaderTimeFormat
        - usageIndicator
      properties:
        controlStandardsId:
          type: integer
          format: int32
          description: The controls standards id.
        useControlStandardsIdAsRepetitionCharacter:
          type: boolean
          description: The value indicating whether to use control standards id as repetition character.
        senderApplicationId:
          type: string
          description: The sender application id.
        receiverApplicationId:
          type: string
          description: The receiver application id.
        controlVersionNumber:
          type: string
          description: The control version number.
        interchangeControlNumberLowerBound:
          type: integer
          format: int32
          description: The interchange  control number lower bound.
        interchangeControlNumberUpperBound:
          type: integer
          format: int32
          description: The interchange  control number upper bound.
        rolloverInterchangeControlNumber:
          type: boolean
          description: The value indicating whether to rollover interchange control number.
        enableDefaultGroupHeaders:
          type: boolean
          description: The value indicating whether to enable default group headers.
        functionalGroupId:
          type: string
          description: The functional group id.
        groupControlNumberLowerBound:
          type: integer
          format: int32
          description: The group control number lower bound.
        groupControlNumberUpperBound:
          type: integer
          format: int32
          description: The group control number upper bound.
        rolloverGroupControlNumber:
          type: boolean
          description: The value indicating whether to rollover group control number.
        groupHeaderAgencyCode:
          type: string
          description: The group header agency code.
        groupHeaderVersion:
          type: string
          description: The group header version.
        transactionSetControlNumberLowerBound:
          type: integer
          format: int32
          description: The transaction set control number lower bound.
        transactionSetControlNumberUpperBound:
          type: integer
          format: int32
          description: The transaction set control number upper bound.
        rolloverTransactionSetControlNumber:
          type: boolean
          description: The value indicating whether to rollover transaction set control number.
        transactionSetControlNumberPrefix:
          type: string
          description: The transaction set control number prefix.
        transactionSetControlNumberSuffix:
          type: string
          description: The transaction set control number suffix.
        overwriteExistingTransactionSetControlNumber:
          type: boolean
          description: The value indicating whether to overwrite existing transaction set control number.
        groupHeaderDateFormat:
          $ref: '#/components/schemas/X12DateFormat'
          description: The group header date format.
        groupHeaderTimeFormat:
          $ref: '#/components/schemas/X12TimeFormat'
          description: The group header time format.
        usageIndicator:
          $ref: '#/components/schemas/UsageIndicator'
          description: The usage indicator.
      description: The X12 agreement envelope settings.
    X12AcknowledgementSettings:
      type: object
      required:
        - needTechnicalAcknowledgement
        - batchTechnicalAcknowledgements
        - needFunctionalAcknowledgement
        - batchFunctionalAcknowledgements
        - needImplementationAcknowledgement
        - batchImplementationAcknowledgements
        - needLoopForValidMessages
        - sendSynchronousAcknowledgement
        - acknowledgementControlNumberLowerBound
        - acknowledgementControlNumberUpperBound
        - rolloverAcknowledgementControlNumber
      properties:
        needTechnicalAcknowledgement:
          type: boolean
          description: The value indicating whether technical acknowledgement is needed.
        batchTechnicalAcknowledgements:
          type: boolean
          description: The value indicating whether to batch the technical acknowledgements.
        needFunctionalAcknowledgement:
          type: boolean
          description: The value indicating whether functional acknowledgement is needed.
        functionalAcknowledgementVersion:
          type: string
          description: The functional acknowledgement version.
        batchFunctionalAcknowledgements:
          type: boolean
          description: The value indicating whether to batch functional acknowledgements.
        needImplementationAcknowledgement:
          type: boolean
          description: The value indicating whether implementation acknowledgement is needed.
        implementationAcknowledgementVersion:
          type: string
          description: The implementation acknowledgement version.
        batchImplementationAcknowledgements:
          type: boolean
          description: The value indicating whether to batch implementation acknowledgements.
        needLoopForValidMessages:
          type: boolean
          description: The value indicating whether a loop is needed for valid messages.
        sendSynchronousAcknowledgement:
          type: boolean
          description: The value indicating whether to send synchronous acknowledgement.
        acknowledgementControlNumberPrefix:
          type: string
          description: The acknowledgement control number prefix.
        acknowledgementControlNumberSuffix:
          type: string
          description: The acknowledgement control number suffix.
        acknowledgementControlNumberLowerBound:
          type: integer
          format: int32
          description: The acknowledgement control number lower bound.
        acknowledgementControlNumberUpperBound:
          type: integer
          format: int32
          description: The acknowledgement control number upper bound.
        rolloverAcknowledgementControlNumber:
          type: boolean
          description: The value indicating whether to rollover acknowledgement control number.
      description: The X12 agreement acknowledgement settings.
    X12MessageFilter:
      type: object
      required:
        - messageFilterType
      properties:
        messageFilterType:
          $ref: '#/components/schemas/MessageFilterType'
          description: The message filter type.
      description: The X12 message filter for odata query.
    X12SecuritySettings:
      type: object
      required:
        - authorizationQualifier
        - securityQualifier
      properties:
        authorizationQualifier:
          type: string
          description: The authorization qualifier.
        authorizationValue:
          type: string
          description: The authorization value.
        securityQualifier:
          type: string
          description: The security qualifier.
        passwordValue:
          type: string
          description: The password value.
      description: The X12 agreement security settings.
    X12ProcessingSettings:
      type: object
      required:
        - maskSecurityInfo
        - convertImpliedDecimal
        - preserveInterchange
        - suspendInterchangeOnError
        - createEmptyXmlTagsForTrailingSeparators
        - useDotAsDecimalSeparator
      properties:
        maskSecurityInfo:
          type: boolean
          description: The value indicating whether to mask security information.
        convertImpliedDecimal:
          type: boolean
          description: The value indicating whether to convert numerical type to implied decimal.
        preserveInterchange:
          type: boolean
          description: The value indicating whether to preserve interchange.
        suspendInterchangeOnError:
          type: boolean
          description: The value indicating whether to suspend interchange on error.
        createEmptyXmlTagsForTrailingSeparators:
          type: boolean
          description: The value indicating whether to create empty xml tags for trailing separators.
        useDotAsDecimalSeparator:
          type: boolean
          description: The value indicating whether to use dot as decimal separator.
      description: The X12 processing settings.
    X12EnvelopeOverride:
      type: object
      required:
        - targetNamespace
        - protocolVersion
        - messageId
        - responsibleAgencyCode
        - headerVersion
        - senderApplicationId
        - receiverApplicationId
        - dateFormat
        - timeFormat
      properties:
        targetNamespace:
          type: string
          description: The target namespace on which this envelope settings has to be applied.
        protocolVersion:
          type: string
          description: The protocol version on which this envelope settings has to be applied.
        messageId:
          type: string
          description: The message id on which this envelope settings has to be applied.
        responsibleAgencyCode:
          type: string
          description: The responsible agency code.
        headerVersion:
          type: string
          description: The header version.
        senderApplicationId:
          type: string
          description: The sender application id.
        receiverApplicationId:
          type: string
          description: The receiver application id.
        functionalIdentifierCode:
          type: string
          description: The functional identifier code.
        dateFormat:
          $ref: '#/components/schemas/X12DateFormat'
          description: The date format.
        timeFormat:
          $ref: '#/components/schemas/X12TimeFormat'
          description: The time format.
      description: The X12 envelope override settings.
    X12ValidationOverride:
      type: object
      required:
        - messageId
        - validateEDITypes
        - validateXSDTypes
        - allowLeadingAndTrailingSpacesAndZeroes
        - validateCharacterSet
        - trimLeadingAndTrailingSpacesAndZeroes
        - trailingSeparatorPolicy
      properties:
        messageId:
          type: string
          description: The message id on which the validation settings has to be applied.
        validateEDITypes:
          type: boolean
          description: The value indicating whether to validate EDI types.
        validateXSDTypes:
          type: boolean
          description: The value indicating whether to validate XSD types.
        allowLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to allow leading and trailing spaces and zeroes.
        validateCharacterSet:
          type: boolean
          description: The value indicating whether to validate character Set.
        trimLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to trim leading and trailing spaces and zeroes.
        trailingSeparatorPolicy:
          $ref: '#/components/schemas/TrailingSeparatorPolicy'
          description: The trailing separator policy.
      description: The X12 validation override settings.
    X12MessageIdentifier:
      type: object
      required:
        - messageId
      properties:
        messageId:
          type: string
          description: The message id.
      description: The X12 message identifier.
    X12SchemaReference:
      type: object
      required:
        - messageId
        - schemaVersion
        - schemaName
      properties:
        messageId:
          type: string
          description: The message id.
        senderApplicationId:
          type: string
          description: The sender application id.
        schemaVersion:
          type: string
          description: The schema version.
        schemaName:
          type: string
          description: The schema name.
      description: The X12 schema reference.
    X12DelimiterOverrides:
      type: object
      required:
        - dataElementSeparator
        - componentSeparator
        - segmentTerminator
        - segmentTerminatorSuffix
        - replaceCharacter
        - replaceSeparatorsInPayload
      properties:
        protocolVersion:
          type: string
          description: The protocol version.
        messageId:
          type: string
          description: The message id.
        dataElementSeparator:
          type: integer
          format: int32
          description: The data element separator.
        componentSeparator:
          type: integer
          format: int32
          description: The component separator.
        segmentTerminator:
          type: integer
          format: int32
          description: The segment terminator.
        segmentTerminatorSuffix:
          $ref: '#/components/schemas/SegmentTerminatorSuffix'
          description: The segment terminator suffix.
        replaceCharacter:
          type: integer
          format: int32
          description: The replacement character.
        replaceSeparatorsInPayload:
          type: boolean
          description: The value indicating whether to replace separators in payload.
        targetNamespace:
          type: string
          description: The target namespace on which this delimiter settings has to be applied.
      description: The X12 delimiter override settings.
    X12CharacterSet:
      type: string
      description: The X12 character set.
      enum:
        - NotSpecified
        - Basic
        - Extended
        - UTF8
      x-ms-enum:
        name: X12CharacterSet
        modelAsString: true
    SegmentTerminatorSuffix:
      type: string
      description: The segment terminator suffix.
      enum:
        - NotSpecified
        - None
        - CR
        - LF
        - CRLF
      x-ms-enum:
        name: SegmentTerminatorSuffix
        modelAsString: false
    X12DateFormat:
      type: string
      description: The x12 date format.
      enum:
        - NotSpecified
        - CCYYMMDD
        - YYMMDD
      x-ms-enum:
        name: X12DateFormat
        modelAsString: true
    X12TimeFormat:
      type: string
      description: The x12 time format.
      enum:
        - NotSpecified
        - HHMM
        - HHMMSS
        - HHMMSSdd
        - HHMMSSd
      x-ms-enum:
        name: X12TimeFormat
        modelAsString: true
    UsageIndicator:
      type: string
      description: The usage indicator.
      enum:
        - NotSpecified
        - Test
        - Information
        - Production
      x-ms-enum:
        name: UsageIndicator
        modelAsString: true
    MessageFilterType:
      type: string
      description: The message filter type.
      enum:
        - NotSpecified
        - Include
        - Exclude
      x-ms-enum:
        name: MessageFilterType
        modelAsString: true
    HashingAlgorithm:
      type: string
      description: The signing or hashing algorithm.
      enum:
        - NotSpecified
        - None
        - MD5
        - SHA1
        - SHA2256
        - SHA2384
        - SHA2512
      x-ms-enum:
        name: HashingAlgorithm
        modelAsString: true
    EncryptionAlgorithm:
      type: string
      description: The encryption algorithm.
      enum:
        - NotSpecified
        - None
        - DES3
        - RC2
        - AES128
        - AES192
        - AES256
      x-ms-enum:
        name: EncryptionAlgorithm
        modelAsString: true
    SigningAlgorithm:
      type: string
      description: The signing or hashing algorithm.
      enum:
        - NotSpecified
        - Default
        - SHA1
        - SHA2256
        - SHA2384
        - SHA2512
      x-ms-enum:
        name: SigningAlgorithm
        modelAsString: true
    TrailingSeparatorPolicy:
      type: string
      description: The trailing separator policy.
      enum:
        - NotSpecified
        - NotAllowed
        - Optional
        - Mandatory
      x-ms-enum:
        name: TrailingSeparatorPolicy
        modelAsString: true
    EdifactAgreementContent:
      type: object
      required:
        - receiveAgreement
        - sendAgreement
      properties:
        receiveAgreement:
          $ref: '#/components/schemas/EdifactOneWayAgreement'
          description: The EDIFACT one-way receive agreement.
        sendAgreement:
          $ref: '#/components/schemas/EdifactOneWayAgreement'
          description: The EDIFACT one-way send agreement.
      description: The Edifact agreement content.
    EdifactOneWayAgreement:
      type: object
      required:
        - senderBusinessIdentity
        - receiverBusinessIdentity
        - protocolSettings
      properties:
        senderBusinessIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The sender business identity
        receiverBusinessIdentity:
          $ref: '#/components/schemas/BusinessIdentity'
          description: The receiver business identity
        protocolSettings:
          $ref: '#/components/schemas/EdifactProtocolSettings'
          description: The EDIFACT protocol settings.
      description: The Edifact one way agreement.
    EdifactProtocolSettings:
      type: object
      required:
        - validationSettings
        - framingSettings
        - envelopeSettings
        - acknowledgementSettings
        - messageFilter
        - processingSettings
        - schemaReferences
      properties:
        validationSettings:
          $ref: '#/components/schemas/EdifactValidationSettings'
          description: The EDIFACT validation settings.
        framingSettings:
          $ref: '#/components/schemas/EdifactFramingSettings'
          description: The EDIFACT framing settings.
        envelopeSettings:
          $ref: '#/components/schemas/EdifactEnvelopeSettings'
          description: The EDIFACT envelope settings.
        acknowledgementSettings:
          $ref: '#/components/schemas/EdifactAcknowledgementSettings'
          description: The EDIFACT acknowledgement settings.
        messageFilter:
          $ref: '#/components/schemas/EdifactMessageFilter'
          description: The EDIFACT message filter.
        processingSettings:
          $ref: '#/components/schemas/EdifactProcessingSettings'
          description: The EDIFACT processing Settings.
        envelopeOverrides:
          type: array
          items:
            $ref: '#/components/schemas/EdifactEnvelopeOverride'
          x-ms-identifiers:
            - messageId
          description: The EDIFACT envelope override settings.
        messageFilterList:
          type: array
          items:
            $ref: '#/components/schemas/EdifactMessageIdentifier'
          x-ms-identifiers:
            - messageId
          description: The EDIFACT message filter list.
        schemaReferences:
          type: array
          items:
            $ref: '#/components/schemas/EdifactSchemaReference'
          x-ms-identifiers:
            - messageId
          description: The EDIFACT schema references.
        validationOverrides:
          type: array
          items:
            $ref: '#/components/schemas/EdifactValidationOverride'
          x-ms-identifiers:
            - messageId
          description: The EDIFACT validation override settings.
        edifactDelimiterOverrides:
          type: array
          items:
            $ref: '#/components/schemas/EdifactDelimiterOverride'
          x-ms-identifiers:
            - messageId
          description: The EDIFACT delimiter override settings.
      description: The Edifact agreement protocol settings.
    EdifactValidationSettings:
      type: object
      required:
        - validateCharacterSet
        - checkDuplicateInterchangeControlNumber
        - interchangeControlNumberValidityDays
        - checkDuplicateGroupControlNumber
        - checkDuplicateTransactionSetControlNumber
        - validateEDITypes
        - validateXSDTypes
        - allowLeadingAndTrailingSpacesAndZeroes
        - trimLeadingAndTrailingSpacesAndZeroes
        - trailingSeparatorPolicy
      properties:
        validateCharacterSet:
          type: boolean
          description: The value indicating whether to validate character set in the message.
        checkDuplicateInterchangeControlNumber:
          type: boolean
          description: The value indicating whether to check for duplicate interchange control number.
        interchangeControlNumberValidityDays:
          type: integer
          format: int32
          description: The validity period of interchange control number.
        checkDuplicateGroupControlNumber:
          type: boolean
          description: The value indicating whether to check for duplicate group control number.
        checkDuplicateTransactionSetControlNumber:
          type: boolean
          description: The value indicating whether to check for duplicate transaction set control number.
        validateEDITypes:
          type: boolean
          description: The value indicating whether to Whether to validate EDI types.
        validateXSDTypes:
          type: boolean
          description: The value indicating whether to Whether to validate XSD types.
        allowLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to allow leading and trailing spaces and zeroes.
        trimLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to trim leading and trailing spaces and zeroes.
        trailingSeparatorPolicy:
          $ref: '#/components/schemas/TrailingSeparatorPolicy'
          description: The trailing separator policy.
      description: The Edifact agreement validation settings.
    EdifactFramingSettings:
      type: object
      required:
        - protocolVersion
        - dataElementSeparator
        - componentSeparator
        - segmentTerminator
        - releaseIndicator
        - repetitionSeparator
        - characterSet
        - decimalPointIndicator
        - segmentTerminatorSuffix
      properties:
        serviceCodeListDirectoryVersion:
          type: string
          description: The service code list directory version.
        characterEncoding:
          type: string
          description: The character encoding.
        protocolVersion:
          type: integer
          format: int32
          description: The protocol version.
        dataElementSeparator:
          type: integer
          format: int32
          description: The data element separator.
        componentSeparator:
          type: integer
          format: int32
          description: The component separator.
        segmentTerminator:
          type: integer
          format: int32
          description: The segment terminator.
        releaseIndicator:
          type: integer
          format: int32
          description: The release indicator.
        repetitionSeparator:
          type: integer
          format: int32
          description: The repetition separator.
        characterSet:
          $ref: '#/components/schemas/EdifactCharacterSet'
          description: The EDIFACT frame setting characterSet.
        decimalPointIndicator:
          $ref: '#/components/schemas/EdifactDecimalIndicator'
          description: The EDIFACT frame setting decimal indicator.
        segmentTerminatorSuffix:
          $ref: '#/components/schemas/SegmentTerminatorSuffix'
          description: The EDIFACT frame setting segment terminator suffix.
      description: The Edifact agreement framing settings.
    EdifactEnvelopeSettings:
      type: object
      required:
        - applyDelimiterStringAdvice
        - createGroupingSegments
        - enableDefaultGroupHeaders
        - interchangeControlNumberLowerBound
        - interchangeControlNumberUpperBound
        - rolloverInterchangeControlNumber
        - groupControlNumberLowerBound
        - groupControlNumberUpperBound
        - rolloverGroupControlNumber
        - overwriteExistingTransactionSetControlNumber
        - transactionSetControlNumberLowerBound
        - transactionSetControlNumberUpperBound
        - rolloverTransactionSetControlNumber
        - isTestInterchange
      properties:
        groupAssociationAssignedCode:
          type: string
          description: The group association assigned code.
        communicationAgreementId:
          type: string
          description: The communication agreement id.
        applyDelimiterStringAdvice:
          type: boolean
          description: The value indicating whether to apply delimiter string advice.
        createGroupingSegments:
          type: boolean
          description: The value indicating whether to create grouping segments.
        enableDefaultGroupHeaders:
          type: boolean
          description: The value indicating whether to enable default group headers.
        recipientReferencePasswordValue:
          type: string
          description: The recipient reference password value.
        recipientReferencePasswordQualifier:
          type: string
          description: The recipient reference password qualifier.
        applicationReferenceId:
          type: string
          description: The application reference id.
        processingPriorityCode:
          type: string
          description: The processing priority code.
        interchangeControlNumberLowerBound:
          type: integer
          format: int64
          description: The interchange control number lower bound.
        interchangeControlNumberUpperBound:
          type: integer
          format: int64
          description: The interchange control number upper bound.
        rolloverInterchangeControlNumber:
          type: boolean
          description: The value indicating whether to rollover interchange control number.
        interchangeControlNumberPrefix:
          type: string
          description: The interchange control number prefix.
        interchangeControlNumberSuffix:
          type: string
          description: The interchange control number suffix.
        senderReverseRoutingAddress:
          type: string
          description: The sender reverse routing address.
        receiverReverseRoutingAddress:
          type: string
          description: The receiver reverse routing address.
        functionalGroupId:
          type: string
          description: The functional group id.
        groupControllingAgencyCode:
          type: string
          description: The group controlling agency code.
        groupMessageVersion:
          type: string
          description: The group message version.
        groupMessageRelease:
          type: string
          description: The group message release.
        groupControlNumberLowerBound:
          type: integer
          format: int64
          description: The group control number lower bound.
        groupControlNumberUpperBound:
          type: integer
          format: int64
          description: The group control number upper bound.
        rolloverGroupControlNumber:
          type: boolean
          description: The value indicating whether to rollover group control number.
        groupControlNumberPrefix:
          type: string
          description: The group control number prefix.
        groupControlNumberSuffix:
          type: string
          description: The group control number suffix.
        groupApplicationReceiverQualifier:
          type: string
          description: The group application receiver qualifier.
        groupApplicationReceiverId:
          type: string
          description: The group application receiver id.
        groupApplicationSenderQualifier:
          type: string
          description: The group application sender qualifier.
        groupApplicationSenderId:
          type: string
          description: The group application sender id.
        groupApplicationPassword:
          type: string
          description: The group application password.
        overwriteExistingTransactionSetControlNumber:
          type: boolean
          description: The value indicating whether to overwrite existing transaction set control number.
        transactionSetControlNumberPrefix:
          type: string
          description: The transaction set control number prefix.
        transactionSetControlNumberSuffix:
          type: string
          description: The transaction set control number suffix.
        transactionSetControlNumberLowerBound:
          type: integer
          format: int64
          description: The transaction set control number lower bound.
        transactionSetControlNumberUpperBound:
          type: integer
          format: int64
          description: The transaction set control number upper bound.
        rolloverTransactionSetControlNumber:
          type: boolean
          description: The value indicating whether to rollover transaction set control number.
        isTestInterchange:
          type: boolean
          description: The value indicating whether the message is a test interchange.
        senderInternalIdentification:
          type: string
          description: The sender internal identification.
        senderInternalSubIdentification:
          type: string
          description: The sender internal sub identification.
        receiverInternalIdentification:
          type: string
          description: The receiver internal identification.
        receiverInternalSubIdentification:
          type: string
          description: The receiver internal sub identification.
      description: The Edifact agreement envelope settings.
    EdifactAcknowledgementSettings:
      type: object
      required:
        - needTechnicalAcknowledgement
        - batchTechnicalAcknowledgements
        - needFunctionalAcknowledgement
        - batchFunctionalAcknowledgements
        - needLoopForValidMessages
        - sendSynchronousAcknowledgement
        - acknowledgementControlNumberLowerBound
        - acknowledgementControlNumberUpperBound
        - rolloverAcknowledgementControlNumber
      properties:
        needTechnicalAcknowledgement:
          type: boolean
          description: The value indicating whether technical acknowledgement is needed.
        batchTechnicalAcknowledgements:
          type: boolean
          description: The value indicating whether to batch the technical acknowledgements.
        needFunctionalAcknowledgement:
          type: boolean
          description: The value indicating whether functional acknowledgement is needed.
        batchFunctionalAcknowledgements:
          type: boolean
          description: The value indicating whether to batch functional acknowledgements.
        needLoopForValidMessages:
          type: boolean
          description: The value indicating whether a loop is needed for valid messages.
        sendSynchronousAcknowledgement:
          type: boolean
          description: The value indicating whether to send synchronous acknowledgement.
        acknowledgementControlNumberPrefix:
          type: string
          description: The acknowledgement control number prefix.
        acknowledgementControlNumberSuffix:
          type: string
          description: The acknowledgement control number suffix.
        acknowledgementControlNumberLowerBound:
          type: integer
          format: int32
          description: The acknowledgement control number lower bound.
        acknowledgementControlNumberUpperBound:
          type: integer
          format: int32
          description: The acknowledgement control number upper bound.
        rolloverAcknowledgementControlNumber:
          type: boolean
          description: The value indicating whether to rollover acknowledgement control number.
      description: The Edifact agreement acknowledgement settings.
    EdifactMessageFilter:
      type: object
      required:
        - messageFilterType
      properties:
        messageFilterType:
          $ref: '#/components/schemas/MessageFilterType'
          description: The message filter type.
      description: The Edifact message filter for odata query.
    EdifactProcessingSettings:
      type: object
      required:
        - maskSecurityInfo
        - preserveInterchange
        - suspendInterchangeOnError
        - createEmptyXmlTagsForTrailingSeparators
        - useDotAsDecimalSeparator
      properties:
        maskSecurityInfo:
          type: boolean
          description: The value indicating whether to mask security information.
        preserveInterchange:
          type: boolean
          description: The value indicating whether to preserve interchange.
        suspendInterchangeOnError:
          type: boolean
          description: The value indicating whether to suspend interchange on error.
        createEmptyXmlTagsForTrailingSeparators:
          type: boolean
          description: The value indicating whether to create empty xml tags for trailing separators.
        useDotAsDecimalSeparator:
          type: boolean
          description: The value indicating whether to use dot as decimal separator.
      description: The Edifact agreement protocol settings.
    EdifactEnvelopeOverride:
      type: object
      properties:
        messageId:
          type: string
          description: The message id on which this envelope settings has to be applied.
        messageVersion:
          type: string
          description: The message version on which this envelope settings has to be applied.
        messageRelease:
          type: string
          description: The message release version on which this envelope settings has to be applied.
        messageAssociationAssignedCode:
          type: string
          description: The message association assigned code.
        targetNamespace:
          type: string
          description: The target namespace on which this envelope settings has to be applied.
        functionalGroupId:
          type: string
          description: The functional group id.
        senderApplicationQualifier:
          type: string
          description: The sender application qualifier.
        senderApplicationId:
          type: string
          description: The sender application id.
        receiverApplicationQualifier:
          type: string
          description: The receiver application qualifier.
        receiverApplicationId:
          type: string
          description: The receiver application id.
        controllingAgencyCode:
          type: string
          description: The controlling agency code.
        groupHeaderMessageVersion:
          type: string
          description: The group header message version.
        groupHeaderMessageRelease:
          type: string
          description: The group header message release.
        associationAssignedCode:
          type: string
          description: The association assigned code.
        applicationPassword:
          type: string
          description: The application password.
      description: The Edifact envelope override settings.
    EdifactMessageIdentifier:
      type: object
      required:
        - messageId
      properties:
        messageId:
          type: string
          description: The message id on which this envelope settings has to be applied.
      description: The Edifact message identifier.
    EdifactSchemaReference:
      type: object
      required:
        - messageId
        - messageVersion
        - messageRelease
        - schemaName
      properties:
        messageId:
          type: string
          description: The message id.
        messageVersion:
          type: string
          description: The message version.
        messageRelease:
          type: string
          description: The message release version.
        senderApplicationId:
          type: string
          description: The sender application id.
        senderApplicationQualifier:
          type: string
          description: The sender application qualifier.
        associationAssignedCode:
          type: string
          description: The association assigned code.
        schemaName:
          type: string
          description: The schema name.
      description: The Edifact schema reference.
    EdifactValidationOverride:
      type: object
      required:
        - messageId
        - enforceCharacterSet
        - validateEDITypes
        - validateXSDTypes
        - allowLeadingAndTrailingSpacesAndZeroes
        - trailingSeparatorPolicy
        - trimLeadingAndTrailingSpacesAndZeroes
      properties:
        messageId:
          type: string
          description: The message id on which the validation settings has to be applied.
        enforceCharacterSet:
          type: boolean
          description: The value indicating whether to validate character Set.
        validateEDITypes:
          type: boolean
          description: The value indicating whether to validate EDI types.
        validateXSDTypes:
          type: boolean
          description: The value indicating whether to validate XSD types.
        allowLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to allow leading and trailing spaces and zeroes.
        trailingSeparatorPolicy:
          $ref: '#/components/schemas/TrailingSeparatorPolicy'
          description: The trailing separator policy.
        trimLeadingAndTrailingSpacesAndZeroes:
          type: boolean
          description: The value indicating whether to trim leading and trailing spaces and zeroes.
      description: The Edifact validation override settings.
    EdifactDelimiterOverride:
      type: object
      required:
        - dataElementSeparator
        - componentSeparator
        - segmentTerminator
        - repetitionSeparator
        - segmentTerminatorSuffix
        - decimalPointIndicator
        - releaseIndicator
      properties:
        messageId:
          type: string
          description: The message id.
        messageVersion:
          type: string
          description: The message version.
        messageRelease:
          type: string
          description: The message release.
        dataElementSeparator:
          type: integer
          format: int32
          description: The data element separator.
        componentSeparator:
          type: integer
          format: int32
          description: The component separator.
        segmentTerminator:
          type: integer
          format: int32
          description: The segment terminator.
        repetitionSeparator:
          type: integer
          format: int32
          description: The repetition separator.
        segmentTerminatorSuffix:
          $ref: '#/components/schemas/SegmentTerminatorSuffix'
          description: The segment terminator suffix.
        decimalPointIndicator:
          $ref: '#/components/schemas/EdifactDecimalIndicator'
          description: The decimal point indicator.
        releaseIndicator:
          type: integer
          format: int32
          description: The release indicator.
        messageAssociationAssignedCode:
          type: string
          description: The message association assigned code.
        targetNamespace:
          type: string
          description: The target namespace on which this delimiter settings has to be applied.
      description: The Edifact delimiter override settings.
    EdifactCharacterSet:
      type: string
      description: The edifact character set.
      enum:
        - NotSpecified
        - UNOB
        - UNOA
        - UNOC
        - UNOD
        - UNOE
        - UNOF
        - UNOG
        - UNOH
        - UNOI
        - UNOJ
        - UNOK
        - UNOX
        - UNOY
        - KECA
      x-ms-enum:
        name: EdifactCharacterSet
        modelAsString: true
    EdifactDecimalIndicator:
      type: string
      description: The edifact decimal indicator.
      enum:
        - NotSpecified
        - Comma
        - Decimal
      x-ms-enum:
        name: EdifactDecimalIndicator
        modelAsString: false
    IntegrationAccountCertificateListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccountCertificate'
          description: The list of integration account certificates.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration account certificates.
    IntegrationAccountCertificate:
      required:
        - properties
      description: The integration account certificate.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationAccountCertificateProperties'
          description: The integration account certificate properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationAccountCertificateProperties:
      type: object
      properties:
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: The created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: The changed time.
        metadata:
          type: object
          description: The metadata.
          properties: {}
        key:
          $ref: '#/components/schemas/KeyVaultKeyReference'
          description: The key details in the key vault.
        publicCertificate:
          type: string
          description: The public certificate.
      description: The integration account certificate properties.
    KeyVaultKeyReference:
      type: object
      required:
        - keyVault
        - keyName
      properties:
        keyVault:
          type: object
          description: The key vault reference.
          properties:
            id:
              type: string
              description: The resource id.
            name:
              type: string
              readOnly: true
              description: The resource name.
            type:
              type: string
              readOnly: true
              description: The resource type.
        keyName:
          type: string
          description: The private key name in key vault.
        keyVersion:
          type: string
          description: The private key version in key vault.
      description: The reference to the key vault key.
    IntegrationAccountSessionFilter:
      type: object
      required:
        - changedTime
      properties:
        changedTime:
          type: string
          format: date-time
          description: The changed time of integration account sessions.
      description: The integration account session filter.
    IntegrationAccountSessionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccountSession'
          description: The list of integration account sessions.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of integration account sessions.
    IntegrationAccountSession:
      required:
        - properties
      description: The integration account session.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IntegrationAccountSessionProperties'
          description: The integration account session properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    IntegrationAccountSessionProperties:
      type: object
      properties:
        createdTime:
          type: string
          format: date-time
          readOnly: true
          description: The created time.
        changedTime:
          type: string
          format: date-time
          readOnly: true
          description: The changed time.
        content:
          $ref: '#/components/schemas/Object'
          description: The session content.
      description: The integration account session properties.
    Operation:
      description: Logic REST API operation
      properties:
        origin:
          description: 'Operation: origin'
          type: string
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          type: object
          description: The object that represents the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft.Logic'
              type: string
            resource:
              description: 'Resource on which the operation is performed: Profile, endpoint, etc.'
              type: string
            operation:
              description: 'Operation type: Read, write, delete, etc.'
              type: string
            description:
              description: 'Operation: description.'
              type: string
        properties:
          x-ms-client-flatten: true
          description: The properties.
          $ref: '#/components/schemas/Object'
      type: object
    OperationListResult:
      description: Result of the request to list Logic operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of Logic operations supported by the Logic resource provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    ErrorResponse:
      description: Error response indicates Logic service is not able to process the incoming request. The error property contains the error details.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorProperties'
          description: The error properties.
    ErrorProperties:
      description: Error properties indicate why the Logic service was not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
    ListKeyVaultKeysDefinition:
      type: object
      description: The list key vault keys definition.
      required:
        - keyVault
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultReference'
          description: The key vault reference.
        skipToken:
          type: string
          description: The skip token.
    KeyVaultReference:
      description: The key vault reference.
      properties:
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        id:
          type: string
          description: The resource id.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
      type: object
    KeyVaultKeyCollection:
      type: object
      description: Collection of key vault keys.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/KeyVaultKey'
          x-ms-identifiers:
            - kid
          description: The key vault keys.
        skipToken:
          type: string
          description: The skip token.
    KeyVaultKey:
      type: object
      description: The key vault key.
      properties:
        kid:
          type: string
          description: The key id.
        attributes:
          type: object
          description: The key attributes.
          properties:
            enabled:
              type: boolean
              description: Whether the key is enabled or not.
            created:
              type: integer
              format: int64
              description: When the key was created.
            updated:
              type: integer
              format: int64
              description: When the key was updated.
    TrackingEventsDefinition:
      type: object
      description: The tracking events definition.
      required:
        - sourceType
        - events
      properties:
        sourceType:
          description: The source type.
          type: string
        trackEventsOptions:
          description: The track events options.
          $ref: '#/components/schemas/TrackEventsOperationOptions'
        events:
          type: array
          description: The events.
          items:
            $ref: '#/components/schemas/TrackingEvent'
          x-ms-identifiers: []
    TrackEventsOperationOptions:
      type: string
      enum:
        - None
        - DisableSourceInfoEnrich
      x-ms-enum:
        name: TrackEventsOperationOptions
        modelAsString: true
      description: The track events operation options.
    TrackingEvent:
      type: object
      description: The tracking event.
      required:
        - eventLevel
        - eventTime
        - recordType
      properties:
        eventLevel:
          description: The event level.
          $ref: '#/components/schemas/EventLevel'
        eventTime:
          type: string
          description: The event time.
          format: date-time
        recordType:
          description: The record type.
          $ref: '#/components/schemas/TrackingRecordType'
        record:
          description: The record.
          $ref: '#/components/schemas/Object'
        error:
          description: The error.
          $ref: '#/components/schemas/TrackingEventErrorInfo'
    EventLevel:
      type: string
      enum:
        - LogAlways
        - Critical
        - Error
        - Warning
        - Informational
        - Verbose
      x-ms-enum:
        name: EventLevel
        modelAsString: false
      description: The event level.
    TrackingRecordType:
      type: string
      enum:
        - NotSpecified
        - Custom
        - AS2Message
        - AS2MDN
        - X12Interchange
        - X12FunctionalGroup
        - X12TransactionSet
        - X12InterchangeAcknowledgment
        - X12FunctionalGroupAcknowledgment
        - X12TransactionSetAcknowledgment
        - EdifactInterchange
        - EdifactFunctionalGroup
        - EdifactTransactionSet
        - EdifactInterchangeAcknowledgment
        - EdifactFunctionalGroupAcknowledgment
        - EdifactTransactionSetAcknowledgment
      x-ms-enum:
        name: TrackingRecordType
        modelAsString: true
      description: The tracking record type.
    TrackingEventErrorInfo:
      type: object
      description: The tracking event error info.
      properties:
        message:
          description: The message.
          type: string
        code:
          description: The code.
          type: string
    SetTriggerStateActionDefinition:
      type: object
      description: The set trigger state action definition.
      required:
        - source
      properties:
        source:
          description: The source.
          $ref: '#/components/schemas/WorkflowTriggerReference'
    ExpressionTraces:
      description: The expression traces.
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/ExpressionRoot'
          x-ms-identifiers:
            - path
    ExpressionRoot:
      description: The expression root.
      properties:
        path:
          type: string
          description: The path.
        text:
          description: The text.
          type: string
        value: {}
        subexpressions:
          type: array
          description: The sub expressions.
          items:
            $ref: '#/components/schemas/Expression'
          x-ms-identifiers: []
        error:
          $ref: '#/components/schemas/AzureResourceErrorInfo'
      type: object
    Expression:
      description: The expression.
      type: object
      properties:
        text:
          description: The text.
          type: string
        value: {}
        subexpressions:
          type: array
          description: The sub expressions.
          items:
            $ref: '#/components/schemas/Expression'
          x-ms-identifiers: []
        error:
          $ref: '#/components/schemas/AzureResourceErrorInfo'
    AzureResourceErrorInfo:
      description: The azure resource error info.
      required:
        - message
      properties:
        message:
          type: string
          description: The error message.
        details:
          type: array
          items:
            $ref: '#/components/schemas/AzureResourceErrorInfo'
          x-ms-identifiers:
            - code
          description: The error details.
        code:
          type: string
          description: The error code.
      type: object
    ErrorInfo:
      type: object
      description: The error info.
      required:
        - code
      properties:
        code:
          type: string
          description: The error code.
    WorkflowRunActionRepetitionDefinitionCollection:
      type: object
      description: A collection of workflow run action repetitions.
      properties:
        nextLink:
          description: The link used to get the next page of recommendations.
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRunActionRepetitionDefinition'
    WorkflowRunActionRepetitionDefinition:
      description: The workflow run action repetition definition.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/WorkflowRunActionRepetitionProperties'
          description: The workflow run action repetition properties definition.
          x-ms-client-flatten: true
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    WorkflowRunActionRepetitionProperties:
      description: The workflow run action repetition properties definition.
      properties:
        repetitionIndexes:
          type: array
          description: The repetition indexes.
          items:
            $ref: '#/components/schemas/RepetitionIndex'
          x-ms-identifiers:
            - itemIndex
        trackingId:
          type: string
          readOnly: true
          description: Gets the tracking id.
        inputs:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the inputs.
        inputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to inputs.
        outputs:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the outputs.
        outputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to outputs.
        trackedProperties:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the tracked properties.
        retryHistory:
          type: array
          items:
            $ref: '#/components/schemas/RetryHistory'
          x-ms-identifiers: []
          description: Gets the retry histories.
        iterationCount:
          type: integer
          format: int32
      type: object
    RepetitionIndex:
      type: object
      description: The workflow run action repetition index.
      required:
        - itemIndex
      properties:
        scopeName:
          type: string
          description: The scope.
        itemIndex:
          type: integer
          format: int32
          description: The index.
    OperationResult:
      description: The operation result definition.
      properties:
        trackingId:
          type: string
          readOnly: true
          description: Gets the tracking id.
        inputs:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the inputs.
        inputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to inputs.
        outputs:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the outputs.
        outputsLink:
          $ref: '#/components/schemas/ContentLink'
          readOnly: true
          description: Gets the link to outputs.
        trackedProperties:
          $ref: '#/components/schemas/Object'
          readOnly: true
          description: Gets the tracked properties.
        retryHistory:
          type: array
          items:
            $ref: '#/components/schemas/RetryHistory'
          x-ms-identifiers: []
          description: Gets the retry histories.
        iterationCount:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
          description: The start time of the workflow scope repetition.
        endTime:
          type: string
          format: date-time
          description: The end time of the workflow scope repetition.
        correlation:
          $ref: '#/components/schemas/RunActionCorrelation'
          description: The correlation properties.
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          description: The status of the workflow scope repetition.
        code:
          type: string
          description: The workflow scope repetition code.
        error: {}
      type: object
    OperationResultProperties:
      type: object
      x-abstract: true
      description: The run operation result properties.
      properties:
        startTime:
          type: string
          format: date-time
          description: The start time of the workflow scope repetition.
        endTime:
          type: string
          format: date-time
          description: The end time of the workflow scope repetition.
        correlation:
          $ref: '#/components/schemas/RunActionCorrelation'
          description: The correlation properties.
        status:
          $ref: '#/components/schemas/WorkflowStatus'
          description: The status of the workflow scope repetition.
        code:
          type: string
          description: The workflow scope repetition code.
        error: {}
    RunActionCorrelation:
      description: The workflow run action correlation properties.
      properties:
        actionTrackingId:
          type: string
          description: The action tracking identifier.
        clientTrackingId:
          type: string
          description: The client tracking identifier.
        clientKeywords:
          type: array
          description: The client keywords.
          items:
            type: string
      type: object
    RunCorrelation:
      type: object
      description: The correlation properties.
      properties:
        clientTrackingId:
          type: string
          description: The client tracking identifier.
        clientKeywords:
          type: array
          description: The client keywords.
          items:
            type: string
    JsonSchema:
      type: object
      description: The JSON schema.
      properties:
        title:
          type: string
          description: The JSON title.
        content:
          type: string
          description: The JSON content.
    AssemblyCollection:
      type: object
      description: A collection of assembly definitions.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AssemblyDefinition'
    AssemblyDefinition:
      description: The assembly definition.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/AssemblyProperties'
          description: The assembly properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    AssemblyProperties:
      description: The assembly properties definition.
      required:
        - assemblyName
      properties:
        assemblyName:
          type: string
          description: The assembly name.
        assemblyVersion:
          type: string
          description: The assembly version.
        assemblyCulture:
          type: string
          description: The assembly culture.
        assemblyPublicKeyToken:
          type: string
          description: The assembly public key token.
        content: {}
        contentType:
          type: string
          description: The content type.
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: The content link.
      type: object
    ArtifactContentPropertiesDefinition:
      description: The artifact content properties definition.
      properties:
        content: {}
        contentType:
          type: string
          description: The content type.
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: The content link.
        createdTime:
          type: string
          format: date-time
          description: The artifact creation time.
        changedTime:
          type: string
          format: date-time
          description: The artifact changed time.
        metadata: {}
      type: object
    ArtifactProperties:
      type: object
      description: The artifact properties definition.
      properties:
        createdTime:
          type: string
          format: date-time
          description: The artifact creation time.
        changedTime:
          type: string
          format: date-time
          description: The artifact changed time.
        metadata: {}
    BatchConfigurationCollection:
      type: object
      description: A collection of batch configurations.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BatchConfiguration'
    BatchConfiguration:
      description: The batch configuration resource definition.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/BatchConfigurationProperties'
          description: The batch configuration properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    BatchConfigurationProperties:
      description: The batch configuration properties definition.
      required:
        - batchGroupName
        - releaseCriteria
      properties:
        batchGroupName:
          type: string
          description: The name of the batch group.
        releaseCriteria:
          $ref: '#/components/schemas/BatchReleaseCriteria'
          description: The batch release criteria.
        createdTime:
          type: string
          format: date-time
          description: The artifact creation time.
        changedTime:
          type: string
          format: date-time
          description: The artifact changed time.
        metadata: {}
      type: object
    BatchReleaseCriteria:
      type: object
      description: The batch release criteria.
      properties:
        messageCount:
          type: integer
          format: int32
          description: The message count.
        batchSize:
          type: integer
          format: int32
          description: The batch size in bytes.
        recurrence:
          $ref: '#/components/schemas/WorkflowTriggerRecurrence'
          description: The recurrence.
    RequestHistoryListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RequestHistory'
          description: A list of workflow request histories.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The list of workflow request histories.
    RequestHistory:
      description: The request history.
      properties:
        properties:
          $ref: '#/components/schemas/RequestHistoryProperties'
          description: The request history properties.
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    RequestHistoryProperties:
      type: object
      description: The request history.
      properties:
        startTime:
          type: string
          format: date-time
          description: The time the request started.
        endTime:
          type: string
          format: date-time
          description: The time the request ended.
        request:
          $ref: '#/components/schemas/Request'
          description: The request.
        response:
          $ref: '#/components/schemas/Response'
          description: The response.
    Request:
      type: object
      description: A request.
      properties:
        headers:
          $ref: '#/components/schemas/Object'
          description: A list of all the headers attached to the request.
        uri:
          type: string
          description: The destination for the request.
        method:
          type: string
          description: The HTTP method used for the request.
    Response:
      type: object
      description: A response.
      properties:
        headers:
          $ref: '#/components/schemas/Object'
          description: A list of all the headers attached to the response.
        statusCode:
          type: integer
          format: int32
          description: The status code of the response.
        bodyLink:
          $ref: '#/components/schemas/ContentLink'
          description: Details on the location of the body content.
  x-stackQL-resources:
    workflows:
      id: azure.logic_apps.workflows
      name: workflows
      title: workflows
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Logic~1workflows?api-version=2019-05-01/get'
            operationId: Workflows_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows?api-version=2019-05-01/get'
            operationId: Workflows_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}?api-version=2019-05-01/get'
            operationId: Workflows_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workflow
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}?api-version=2019-05-01/put'
            operationId: Workflows_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workflow
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}?api-version=2019-05-01/patch'
            operationId: Workflows_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workflow
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}?api-version=2019-05-01/delete'
            operationId: Workflows_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1disable?api-version=2019-05-01/post'
            operationId: Workflows_Disable
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1enable?api-version=2019-05-01/post'
            operationId: Workflows_Enable
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_upgraded_definition:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1generateUpgradedDefinition?api-version=2019-05-01/post'
            operationId: Workflows_GenerateUpgradedDefinition
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Object
        move:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1move?api-version=2019-05-01/post'
            operationId: Workflows_Move
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_access_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1regenerateAccessKey?api-version=2019-05-01/post'
            operationId: Workflows_RegenerateAccessKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1validate?api-version=2019-05-01/post'
            operationId: Workflows_ValidateByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1locations~1{location}~1workflows~1{workflowName}~1validate?api-version=2019-05-01/post'
            operationId: Workflows_ValidateByLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflows/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/workflows/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/delete'
    workflows_callback_urls:
      id: azure.logic_apps.workflows_callback_urls
      name: workflows_callback_urls
      title: workflows_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1listCallbackUrl?api-version=2019-05-01/post'
            operationId: WorkflowsCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflows_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflows_swaggers:
      id: azure.logic_apps.workflows_swaggers
      name: workflows_swaggers
      title: workflows_swaggers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1listSwagger?api-version=2019-05-01/post'
            operationId: WorkflowsSwagger_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Object
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflows_swaggers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_versions:
      id: azure.logic_apps.workflow_versions
      name: workflow_versions
      title: workflow_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1versions?api-version=2019-05-01/get'
            operationId: WorkflowVersions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowVersionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1versions~1{versionId}?api-version=2019-05-01/get'
            operationId: WorkflowVersions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowVersion
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_versions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_triggers:
      id: azure.logic_apps.workflow_triggers
      name: workflow_triggers
      title: workflow_triggers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers?api-version=2019-05-01/get'
            operationId: WorkflowTriggers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}?api-version=2019-05-01/get'
            operationId: WorkflowTriggers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTrigger
        reset:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1reset?api-version=2019-05-01/post'
            operationId: WorkflowTriggers_Reset
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1run?api-version=2019-05-01/post'
            operationId: WorkflowTriggers_Run
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1setState?api-version=2019-05-01/post'
            operationId: WorkflowTriggers_SetState
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_triggers/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_triggers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_triggers_schema_json:
      id: azure.logic_apps.workflow_triggers_schema_json
      name: workflow_triggers_schema_json
      title: workflow_triggers_schema_json
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1schemas~1json?api-version=2019-05-01/get'
            operationId: WorkflowTriggersSchemaJson_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JsonSchema
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_triggers_schema_json/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_triggers_callback_urls:
      id: azure.logic_apps.workflow_triggers_callback_urls
      name: workflow_triggers_callback_urls
      title: workflow_triggers_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1listCallbackUrl?api-version=2019-05-01/post'
            operationId: WorkflowTriggersCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_triggers_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_version_triggers_callback_urls:
      id: azure.logic_apps.workflow_version_triggers_callback_urls
      name: workflow_version_triggers_callback_urls
      title: workflow_version_triggers_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1versions~1{versionId}~1triggers~1{triggerName}~1listCallbackUrl?api-version=2019-05-01/post'
            operationId: WorkflowVersionTriggersCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_version_triggers_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_trigger_histories:
      id: azure.logic_apps.workflow_trigger_histories
      name: workflow_trigger_histories
      title: workflow_trigger_histories
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1histories?api-version=2019-05-01/get'
            operationId: WorkflowTriggerHistories_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerHistoryListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1histories~1{historyName}?api-version=2019-05-01/get'
            operationId: WorkflowTriggerHistories_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerHistory
        resubmit:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1triggers~1{triggerName}~1histories~1{historyName}~1resubmit?api-version=2019-05-01/post'
            operationId: WorkflowTriggerHistories_Resubmit
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_trigger_histories/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_trigger_histories/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_runs:
      id: azure.logic_apps.workflow_runs
      name: workflow_runs
      title: workflow_runs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs?api-version=2019-05-01/get'
            operationId: WorkflowRuns_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRunListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}?api-version=2019-05-01/get'
            operationId: WorkflowRuns_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRun
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1cancel?api-version=2019-05-01/post'
            operationId: WorkflowRuns_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_runs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_actions:
      id: azure.logic_apps.workflow_run_actions
      name: workflow_run_actions
      title: workflow_run_actions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions?api-version=2019-05-01/get'
            operationId: WorkflowRunActions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRunActionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}?api-version=2019-05-01/get'
            operationId: WorkflowRunActions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRunAction
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_actions/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_run_actions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_actions_expression_traces:
      id: azure.logic_apps.workflow_run_actions_expression_traces
      name: workflow_run_actions_expression_traces
      title: workflow_run_actions_expression_traces
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1listExpressionTraces?api-version=2019-05-01/post'
            operationId: WorkflowRunActionsExpressionTraces_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExpressionTraces
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_actions_expression_traces/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_action_repetitions:
      id: azure.logic_apps.workflow_run_action_repetitions
      name: workflow_run_action_repetitions
      title: workflow_run_action_repetitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1repetitions?api-version=2019-05-01/get'
            operationId: WorkflowRunActionRepetitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRunActionRepetitionDefinitionCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1repetitions~1{repetitionName}?api-version=2019-05-01/get'
            operationId: WorkflowRunActionRepetitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRunActionRepetitionDefinition
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_repetitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_repetitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_action_repetitions_expression_traces:
      id: azure.logic_apps.workflow_run_action_repetitions_expression_traces
      name: workflow_run_action_repetitions_expression_traces
      title: workflow_run_action_repetitions_expression_traces
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1repetitions~1{repetitionName}~1listExpressionTraces?api-version=2019-05-01/post'
            operationId: WorkflowRunActionRepetitionsExpressionTraces_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExpressionTraces
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_repetitions_expression_traces/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_action_repetitions_request_histories:
      id: azure.logic_apps.workflow_run_action_repetitions_request_histories
      name: workflow_run_action_repetitions_request_histories
      title: workflow_run_action_repetitions_request_histories
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1repetitions~1{repetitionName}~1requestHistories?api-version=2019-05-01/get'
            operationId: WorkflowRunActionRepetitionsRequestHistories_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RequestHistoryListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1repetitions~1{repetitionName}~1requestHistories~1{requestHistoryName}?api-version=2019-05-01/get'
            operationId: WorkflowRunActionRepetitionsRequestHistories_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RequestHistory
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_repetitions_request_histories/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_repetitions_request_histories/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_action_request_histories:
      id: azure.logic_apps.workflow_run_action_request_histories
      name: workflow_run_action_request_histories
      title: workflow_run_action_request_histories
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1requestHistories?api-version=2019-05-01/get'
            operationId: WorkflowRunActionRequestHistories_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RequestHistoryListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1requestHistories~1{requestHistoryName}?api-version=2019-05-01/get'
            operationId: WorkflowRunActionRequestHistories_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RequestHistory
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_request_histories/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_request_histories/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_action_scope_repetitions:
      id: azure.logic_apps.workflow_run_action_scope_repetitions
      name: workflow_run_action_scope_repetitions
      title: workflow_run_action_scope_repetitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1scopeRepetitions?api-version=2019-05-01/get'
            operationId: WorkflowRunActionScopeRepetitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRunActionRepetitionDefinitionCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1actions~1{actionName}~1scopeRepetitions~1{repetitionName}?api-version=2019-05-01/get'
            operationId: WorkflowRunActionScopeRepetitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRunActionRepetitionDefinition
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_scope_repetitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow_run_action_scope_repetitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workflow_run_operations:
      id: azure.logic_apps.workflow_run_operations
      name: workflow_run_operations
      title: workflow_run_operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1workflows~1{workflowName}~1runs~1{runName}~1operations~1{operationId}?api-version=2019-05-01/get'
            operationId: WorkflowRunOperations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowRun
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_operations/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    integration_accounts:
      id: azure.logic_apps.integration_accounts
      name: integration_accounts
      title: integration_accounts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Logic~1integrationAccounts?api-version=2019-05-01/get'
            operationId: IntegrationAccounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts?api-version=2019-05-01/get'
            operationId: IntegrationAccounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}?api-version=2019-05-01/get'
            operationId: IntegrationAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccount
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}?api-version=2019-05-01/put'
            operationId: IntegrationAccounts_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccount
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}?api-version=2019-05-01/patch'
            operationId: IntegrationAccounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccount
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        log_tracking_events:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1logTrackingEvents?api-version=2019-05-01/post'
            operationId: IntegrationAccounts_LogTrackingEvents
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_access_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1regenerateAccessKey?api-version=2019-05-01/post'
            operationId: IntegrationAccounts_RegenerateAccessKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccount
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/integration_accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_accounts/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/integration_accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_accounts/methods/delete'
    integration_account_assemblies:
      id: azure.logic_apps.integration_account_assemblies
      name: integration_account_assemblies
      title: integration_account_assemblies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1assemblies?api-version=2019-05-01/get'
            operationId: IntegrationAccountAssemblies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssemblyCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1assemblies~1{assemblyArtifactName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountAssemblies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssemblyDefinition
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1assemblies~1{assemblyArtifactName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountAssemblies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssemblyDefinition
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1assemblies~1{assemblyArtifactName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountAssemblies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_assemblies/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_assemblies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_assemblies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_assemblies/methods/delete'
    integration_account_assemblies_content_callback_urls:
      id: azure.logic_apps.integration_account_assemblies_content_callback_urls
      name: integration_account_assemblies_content_callback_urls
      title: integration_account_assemblies_content_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1assemblies~1{assemblyArtifactName}~1listContentCallbackUrl?api-version=2019-05-01/post'
            operationId: IntegrationAccountAssembliesContentCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_assemblies_content_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_account_batch_configurations:
      id: azure.logic_apps.integration_account_batch_configurations
      name: integration_account_batch_configurations
      title: integration_account_batch_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1batchConfigurations?api-version=2019-05-01/get'
            operationId: IntegrationAccountBatchConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BatchConfigurationCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1batchConfigurations~1{batchConfigurationName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountBatchConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BatchConfiguration
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1batchConfigurations~1{batchConfigurationName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountBatchConfigurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BatchConfiguration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1batchConfigurations~1{batchConfigurationName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountBatchConfigurations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_batch_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_batch_configurations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_batch_configurations/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_batch_configurations/methods/delete'
    integration_accounts_callback_urls:
      id: azure.logic_apps.integration_accounts_callback_urls
      name: integration_accounts_callback_urls
      title: integration_accounts_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1listCallbackUrl?api-version=2019-05-01/post'
            operationId: IntegrationAccountsCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_accounts_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_accounts_key_vault_keys:
      id: azure.logic_apps.integration_accounts_key_vault_keys
      name: integration_accounts_key_vault_keys
      title: integration_accounts_key_vault_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1listKeyVaultKeys?api-version=2019-05-01/post'
            operationId: IntegrationAccountsKeyVaultKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KeyVaultKeyCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_accounts_key_vault_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_account_schemas:
      id: azure.logic_apps.integration_account_schemas
      name: integration_account_schemas
      title: integration_account_schemas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1schemas?api-version=2019-05-01/get'
            operationId: IntegrationAccountSchemas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountSchemaListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1schemas~1{schemaName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountSchemas_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountSchema
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1schemas~1{schemaName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountSchemas_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountSchema
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1schemas~1{schemaName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountSchemas_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_schemas/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_schemas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_schemas/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_schemas/methods/delete'
    integration_account_schemas_content_callback_urls:
      id: azure.logic_apps.integration_account_schemas_content_callback_urls
      name: integration_account_schemas_content_callback_urls
      title: integration_account_schemas_content_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1schemas~1{schemaName}~1listContentCallbackUrl?api-version=2019-05-01/post'
            operationId: IntegrationAccountSchemasContentCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_schemas_content_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_account_maps:
      id: azure.logic_apps.integration_account_maps
      name: integration_account_maps
      title: integration_account_maps
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1maps?api-version=2019-05-01/get'
            operationId: IntegrationAccountMaps_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountMapListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1maps~1{mapName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountMaps_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountMap
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1maps~1{mapName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountMaps_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountMap
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1maps~1{mapName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountMaps_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_maps/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_maps/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_maps/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_maps/methods/delete'
    integration_account_maps_content_callback_urls:
      id: azure.logic_apps.integration_account_maps_content_callback_urls
      name: integration_account_maps_content_callback_urls
      title: integration_account_maps_content_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1maps~1{mapName}~1listContentCallbackUrl?api-version=2019-05-01/post'
            operationId: IntegrationAccountMapsContentCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_maps_content_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_account_partners:
      id: azure.logic_apps.integration_account_partners
      name: integration_account_partners
      title: integration_account_partners
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1partners?api-version=2019-05-01/get'
            operationId: IntegrationAccountPartners_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountPartnerListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1partners~1{partnerName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountPartners_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountPartner
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1partners~1{partnerName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountPartners_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountPartner
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1partners~1{partnerName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountPartners_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_partners/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_partners/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_partners/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_partners/methods/delete'
    integration_account_partners_content_callback_urls:
      id: azure.logic_apps.integration_account_partners_content_callback_urls
      name: integration_account_partners_content_callback_urls
      title: integration_account_partners_content_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1partners~1{partnerName}~1listContentCallbackUrl?api-version=2019-05-01/post'
            operationId: IntegrationAccountPartnersContentCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_partners_content_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_account_agreements:
      id: azure.logic_apps.integration_account_agreements
      name: integration_account_agreements
      title: integration_account_agreements
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1agreements?api-version=2019-05-01/get'
            operationId: IntegrationAccountAgreements_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountAgreementListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1agreements~1{agreementName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountAgreements_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountAgreement
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1agreements~1{agreementName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountAgreements_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountAgreement
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1agreements~1{agreementName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountAgreements_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_agreements/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_agreements/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_agreements/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_agreements/methods/delete'
    integration_account_agreements_content_callback_urls:
      id: azure.logic_apps.integration_account_agreements_content_callback_urls
      name: integration_account_agreements_content_callback_urls
      title: integration_account_agreements_content_callback_urls
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1agreements~1{agreementName}~1listContentCallbackUrl?api-version=2019-05-01/post'
            operationId: IntegrationAccountAgreementsContentCallbackUrl_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowTriggerCallbackUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_agreements_content_callback_urls/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_account_certificates:
      id: azure.logic_apps.integration_account_certificates
      name: integration_account_certificates
      title: integration_account_certificates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1certificates?api-version=2019-05-01/get'
            operationId: IntegrationAccountCertificates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountCertificateListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1certificates~1{certificateName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountCertificates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountCertificate
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1certificates~1{certificateName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountCertificates_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountCertificate
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1certificates~1{certificateName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountCertificates_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_certificates/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_certificates/methods/delete'
    integration_account_sessions:
      id: azure.logic_apps.integration_account_sessions
      name: integration_account_sessions
      title: integration_account_sessions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1sessions?api-version=2019-05-01/get'
            operationId: IntegrationAccountSessions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountSessionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1sessions~1{sessionName}?api-version=2019-05-01/get'
            operationId: IntegrationAccountSessions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountSession
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1sessions~1{sessionName}?api-version=2019-05-01/put'
            operationId: IntegrationAccountSessions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationAccountSession
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logic~1integrationAccounts~1{integrationAccountName}~1sessions~1{sessionName}?api-version=2019-05-01/delete'
            operationId: IntegrationAccountSessions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_account_sessions/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_account_sessions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_account_sessions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_account_sessions/methods/delete'
    integration_service_environments:
      id: azure.logic_apps.integration_service_environments
      name: integration_service_environments
      title: integration_service_environments
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Logic~1integrationServiceEnvironments?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironments_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironmentListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironments_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironmentListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironment
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}?api-version=2019-05-01/put'
            operationId: IntegrationServiceEnvironments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironment
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}?api-version=2019-05-01/patch'
            operationId: IntegrationServiceEnvironments_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}?api-version=2019-05-01/delete'
            operationId: IntegrationServiceEnvironments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1restart?api-version=2019-05-01/post'
            operationId: IntegrationServiceEnvironments_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_service_environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_service_environments/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/integration_service_environments/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_service_environments/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/integration_service_environments/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_service_environments/methods/delete'
    integration_service_environment_skus:
      id: azure.logic_apps.integration_service_environment_skus
      name: integration_service_environment_skus
      title: integration_service_environment_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1skus?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironmentSkus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironmentSkuList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_service_environment_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    integration_service_environment_network_health:
      id: azure.logic_apps.integration_service_environment_network_health
      name: integration_service_environment_network_health
      title: integration_service_environment_network_health
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1health~1network?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironmentNetworkHealth_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironmentNetworkHealth
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_service_environment_network_health/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    integration_service_environment_managed_apis:
      id: azure.logic_apps.integration_service_environment_managed_apis
      name: integration_service_environment_managed_apis
      title: integration_service_environment_managed_apis
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1managedApis?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironmentManagedApis_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironmentManagedApiListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1managedApis~1{apiName}?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironmentManagedApis_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironmentManagedApi
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1managedApis~1{apiName}?api-version=2019-05-01/put'
            operationId: IntegrationServiceEnvironmentManagedApis_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationServiceEnvironmentManagedApi
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1managedApis~1{apiName}?api-version=2019-05-01/delete'
            operationId: IntegrationServiceEnvironmentManagedApis_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_service_environment_managed_apis/methods/get'
          - $ref: '#/components/x-stackQL-resources/integration_service_environment_managed_apis/methods/list'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/integration_service_environment_managed_apis/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_service_environment_managed_apis/methods/delete'
    integration_service_environment_managed_api_operations:
      id: azure.logic_apps.integration_service_environment_managed_api_operations
      name: integration_service_environment_managed_api_operations
      title: integration_service_environment_managed_api_operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Logic~1integrationServiceEnvironments~1{integrationServiceEnvironmentName}~1managedApis~1{apiName}~1apiOperations?api-version=2019-05-01/get'
            operationId: IntegrationServiceEnvironmentManagedApiOperations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiOperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_service_environment_managed_api_operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.logic_apps.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Logic~1operations?api-version=2019-05-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_workflows:
      id: azure.logic_apps.vw_workflows
      name: vw_workflows
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              identity as identity,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.accessEndpoint') as "access_endpoint",
              JSON_EXTRACT(properties, '$.endpointsConfiguration') as "endpoints_configuration",
              JSON_EXTRACT(properties, '$.accessControl') as "access_control",
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.integrationAccount') as "integration_account",
              JSON_EXTRACT(properties, '$.integrationServiceEnvironment') as "integration_service_environment",
              JSON_EXTRACT(properties, '$.definition') as "definition",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              subscriptionId,
              resourceGroupName,
              workflowName
              FROM azure.logic_apps.workflows
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                identity as identity,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.accessEndpoint') as "access_endpoint",
                json_extract_path_text(properties, '$.endpointsConfiguration') as "endpoints_configuration",
                json_extract_path_text(properties, '$.accessControl') as "access_control",
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.integrationAccount') as "integration_account",
                json_extract_path_text(properties, '$.integrationServiceEnvironment') as "integration_service_environment",
                json_extract_path_text(properties, '$.definition') as "definition",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                subscriptionId,
                resourceGroupName,
                workflowName
                FROM azure.logic_apps.workflows
                WHERE subscriptionId = 'replace-me';
    vw_workflow_versions:
      id: azure.logic_apps.vw_workflow_versions
      name: vw_workflow_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.accessEndpoint') as "access_endpoint",
              JSON_EXTRACT(properties, '$.endpointsConfiguration') as "endpoints_configuration",
              JSON_EXTRACT(properties, '$.accessControl') as "access_control",
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.integrationAccount') as "integration_account",
              JSON_EXTRACT(properties, '$.definition') as "definition",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              subscriptionId,
              resourceGroupName,
              workflowName,
              versionId
              FROM azure.logic_apps.workflow_versions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.accessEndpoint') as "access_endpoint",
                json_extract_path_text(properties, '$.endpointsConfiguration') as "endpoints_configuration",
                json_extract_path_text(properties, '$.accessControl') as "access_control",
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.integrationAccount') as "integration_account",
                json_extract_path_text(properties, '$.definition') as "definition",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                subscriptionId,
                resourceGroupName,
                workflowName,
                versionId
                FROM azure.logic_apps.workflow_versions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me';
    vw_workflow_triggers:
      id: azure.logic_apps.vw_workflow_triggers
      name: vw_workflow_triggers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.lastExecutionTime') as "last_execution_time",
              JSON_EXTRACT(properties, '$.nextExecutionTime') as "next_execution_time",
              JSON_EXTRACT(properties, '$.recurrence') as "recurrence",
              JSON_EXTRACT(properties, '$.workflow') as "workflow",
              subscriptionId,
              resourceGroupName,
              workflowName,
              triggerName
              FROM azure.logic_apps.workflow_triggers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.lastExecutionTime') as "last_execution_time",
                json_extract_path_text(properties, '$.nextExecutionTime') as "next_execution_time",
                json_extract_path_text(properties, '$.recurrence') as "recurrence",
                json_extract_path_text(properties, '$.workflow') as "workflow",
                subscriptionId,
                resourceGroupName,
                workflowName,
                triggerName
                FROM azure.logic_apps.workflow_triggers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me';
    vw_workflow_trigger_histories:
      id: azure.logic_apps.vw_workflow_trigger_histories
      name: vw_workflow_trigger_histories
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.scheduledTime') as "scheduled_time",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.code') as "code",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.trackingId') as "tracking_id",
              JSON_EXTRACT(properties, '$.correlation') as "correlation",
              JSON_EXTRACT(properties, '$.inputsLink') as "inputs_link",
              JSON_EXTRACT(properties, '$.outputsLink') as "outputs_link",
              JSON_EXTRACT(properties, '$.fired') as "fired",
              JSON_EXTRACT(properties, '$.run') as "run",
              subscriptionId,
              resourceGroupName,
              workflowName,
              triggerName,
              historyName
              FROM azure.logic_apps.workflow_trigger_histories
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND triggerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.scheduledTime') as "scheduled_time",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.code') as "code",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.trackingId') as "tracking_id",
                json_extract_path_text(properties, '$.correlation') as "correlation",
                json_extract_path_text(properties, '$.inputsLink') as "inputs_link",
                json_extract_path_text(properties, '$.outputsLink') as "outputs_link",
                json_extract_path_text(properties, '$.fired') as "fired",
                json_extract_path_text(properties, '$.run') as "run",
                subscriptionId,
                resourceGroupName,
                workflowName,
                triggerName,
                historyName
                FROM azure.logic_apps.workflow_trigger_histories
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND triggerName = 'replace-me';
    vw_workflow_runs:
      id: azure.logic_apps.vw_workflow_runs
      name: vw_workflow_runs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.waitEndTime') as "wait_end_time",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.code') as "code",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.correlationId') as "correlation_id",
              JSON_EXTRACT(properties, '$.correlation') as "correlation",
              JSON_EXTRACT(properties, '$.workflow') as "workflow",
              JSON_EXTRACT(properties, '$.trigger') as "trigger",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.response') as "response",
              subscriptionId,
              resourceGroupName,
              workflowName,
              runName
              FROM azure.logic_apps.workflow_runs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.waitEndTime') as "wait_end_time",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.code') as "code",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.correlationId') as "correlation_id",
                json_extract_path_text(properties, '$.correlation') as "correlation",
                json_extract_path_text(properties, '$.workflow') as "workflow",
                json_extract_path_text(properties, '$.trigger') as "trigger",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.response') as "response",
                subscriptionId,
                resourceGroupName,
                workflowName,
                runName
                FROM azure.logic_apps.workflow_runs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me';
    vw_workflow_run_actions:
      id: azure.logic_apps.vw_workflow_run_actions
      name: vw_workflow_run_actions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.code') as "code",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.trackingId') as "tracking_id",
              JSON_EXTRACT(properties, '$.correlation') as "correlation",
              JSON_EXTRACT(properties, '$.inputsLink') as "inputs_link",
              JSON_EXTRACT(properties, '$.outputsLink') as "outputs_link",
              JSON_EXTRACT(properties, '$.trackedProperties') as "tracked_properties",
              JSON_EXTRACT(properties, '$.retryHistory') as "retry_history",
              subscriptionId,
              resourceGroupName,
              workflowName,
              runName,
              actionName
              FROM azure.logic_apps.workflow_run_actions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.code') as "code",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.trackingId') as "tracking_id",
                json_extract_path_text(properties, '$.correlation') as "correlation",
                json_extract_path_text(properties, '$.inputsLink') as "inputs_link",
                json_extract_path_text(properties, '$.outputsLink') as "outputs_link",
                json_extract_path_text(properties, '$.trackedProperties') as "tracked_properties",
                json_extract_path_text(properties, '$.retryHistory') as "retry_history",
                subscriptionId,
                resourceGroupName,
                workflowName,
                runName,
                actionName
                FROM azure.logic_apps.workflow_run_actions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me';
    vw_workflow_run_action_repetitions:
      id: azure.logic_apps.vw_workflow_run_action_repetitions
      name: vw_workflow_run_action_repetitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.repetitionIndexes') as "repetition_indexes",
              JSON_EXTRACT(properties, '$.trackingId') as "tracking_id",
              JSON_EXTRACT(properties, '$.inputs') as "inputs",
              JSON_EXTRACT(properties, '$.inputsLink') as "inputs_link",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.outputsLink') as "outputs_link",
              JSON_EXTRACT(properties, '$.trackedProperties') as "tracked_properties",
              JSON_EXTRACT(properties, '$.retryHistory') as "retry_history",
              JSON_EXTRACT(properties, '$.iterationCount') as "iteration_count",
              subscriptionId,
              resourceGroupName,
              workflowName,
              runName,
              actionName,
              repetitionName
              FROM azure.logic_apps.workflow_run_action_repetitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.repetitionIndexes') as "repetition_indexes",
                json_extract_path_text(properties, '$.trackingId') as "tracking_id",
                json_extract_path_text(properties, '$.inputs') as "inputs",
                json_extract_path_text(properties, '$.inputsLink') as "inputs_link",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.outputsLink') as "outputs_link",
                json_extract_path_text(properties, '$.trackedProperties') as "tracked_properties",
                json_extract_path_text(properties, '$.retryHistory') as "retry_history",
                json_extract_path_text(properties, '$.iterationCount') as "iteration_count",
                subscriptionId,
                resourceGroupName,
                workflowName,
                runName,
                actionName,
                repetitionName
                FROM azure.logic_apps.workflow_run_action_repetitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me';
    vw_workflow_run_action_repetitions_request_histories:
      id: azure.logic_apps.vw_workflow_run_action_repetitions_request_histories
      name: vw_workflow_run_action_repetitions_request_histories
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.request') as "request",
              JSON_EXTRACT(properties, '$.response') as "response",
              subscriptionId,
              resourceGroupName,
              workflowName,
              runName,
              actionName,
              repetitionName,
              requestHistoryName
              FROM azure.logic_apps.workflow_run_action_repetitions_request_histories
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me' AND repetitionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.request') as "request",
                json_extract_path_text(properties, '$.response') as "response",
                subscriptionId,
                resourceGroupName,
                workflowName,
                runName,
                actionName,
                repetitionName,
                requestHistoryName
                FROM azure.logic_apps.workflow_run_action_repetitions_request_histories
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me' AND repetitionName = 'replace-me';
    vw_workflow_run_action_request_histories:
      id: azure.logic_apps.vw_workflow_run_action_request_histories
      name: vw_workflow_run_action_request_histories
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.request') as "request",
              JSON_EXTRACT(properties, '$.response') as "response",
              subscriptionId,
              resourceGroupName,
              workflowName,
              runName,
              actionName,
              requestHistoryName
              FROM azure.logic_apps.workflow_run_action_request_histories
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.request') as "request",
                json_extract_path_text(properties, '$.response') as "response",
                subscriptionId,
                resourceGroupName,
                workflowName,
                runName,
                actionName,
                requestHistoryName
                FROM azure.logic_apps.workflow_run_action_request_histories
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me';
    vw_workflow_run_action_scope_repetitions:
      id: azure.logic_apps.vw_workflow_run_action_scope_repetitions
      name: vw_workflow_run_action_scope_repetitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.repetitionIndexes') as "repetition_indexes",
              JSON_EXTRACT(properties, '$.trackingId') as "tracking_id",
              JSON_EXTRACT(properties, '$.inputs') as "inputs",
              JSON_EXTRACT(properties, '$.inputsLink') as "inputs_link",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.outputsLink') as "outputs_link",
              JSON_EXTRACT(properties, '$.trackedProperties') as "tracked_properties",
              JSON_EXTRACT(properties, '$.retryHistory') as "retry_history",
              JSON_EXTRACT(properties, '$.iterationCount') as "iteration_count",
              subscriptionId,
              resourceGroupName,
              workflowName,
              runName,
              actionName,
              repetitionName
              FROM azure.logic_apps.workflow_run_action_scope_repetitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.repetitionIndexes') as "repetition_indexes",
                json_extract_path_text(properties, '$.trackingId') as "tracking_id",
                json_extract_path_text(properties, '$.inputs') as "inputs",
                json_extract_path_text(properties, '$.inputsLink') as "inputs_link",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.outputsLink') as "outputs_link",
                json_extract_path_text(properties, '$.trackedProperties') as "tracked_properties",
                json_extract_path_text(properties, '$.retryHistory') as "retry_history",
                json_extract_path_text(properties, '$.iterationCount') as "iteration_count",
                subscriptionId,
                resourceGroupName,
                workflowName,
                runName,
                actionName,
                repetitionName
                FROM azure.logic_apps.workflow_run_action_scope_repetitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND actionName = 'replace-me';
    vw_workflow_run_operations:
      id: azure.logic_apps.vw_workflow_run_operations
      name: vw_workflow_run_operations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.waitEndTime') as "wait_end_time",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.code') as "code",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.correlationId') as "correlation_id",
              JSON_EXTRACT(properties, '$.correlation') as "correlation",
              JSON_EXTRACT(properties, '$.workflow') as "workflow",
              JSON_EXTRACT(properties, '$.trigger') as "trigger",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.response') as "response",
              subscriptionId,
              resourceGroupName,
              workflowName,
              runName,
              operationId
              FROM azure.logic_apps.workflow_run_operations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND operationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.waitEndTime') as "wait_end_time",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.code') as "code",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.correlationId') as "correlation_id",
                json_extract_path_text(properties, '$.correlation') as "correlation",
                json_extract_path_text(properties, '$.workflow') as "workflow",
                json_extract_path_text(properties, '$.trigger') as "trigger",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.response') as "response",
                subscriptionId,
                resourceGroupName,
                workflowName,
                runName,
                operationId
                FROM azure.logic_apps.workflow_run_operations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workflowName = 'replace-me' AND runName = 'replace-me' AND operationId = 'replace-me';
    vw_integration_accounts:
      id: azure.logic_apps.vw_integration_accounts
      name: vw_integration_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              sku as sku,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.integrationServiceEnvironment') as "integration_service_environment",
              JSON_EXTRACT(properties, '$.state') as "state",
              subscriptionId,
              resourceGroupName,
              integrationAccountName
              FROM azure.logic_apps.integration_accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                sku as sku,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.integrationServiceEnvironment') as "integration_service_environment",
                json_extract_path_text(properties, '$.state') as "state",
                subscriptionId,
                resourceGroupName,
                integrationAccountName
                FROM azure.logic_apps.integration_accounts
                WHERE subscriptionId = 'replace-me';
    vw_integration_account_assemblies:
      id: azure.logic_apps.vw_integration_account_assemblies
      name: vw_integration_account_assemblies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.assemblyName') as "assembly_name",
              JSON_EXTRACT(properties, '$.assemblyVersion') as "assembly_version",
              JSON_EXTRACT(properties, '$.assemblyCulture') as "assembly_culture",
              JSON_EXTRACT(properties, '$.assemblyPublicKeyToken') as "assembly_public_key_token",
              JSON_EXTRACT(properties, '$.content') as "content",
              JSON_EXTRACT(properties, '$.contentType') as "content_type",
              JSON_EXTRACT(properties, '$.contentLink') as "content_link",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              assemblyArtifactName
              FROM azure.logic_apps.integration_account_assemblies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.assemblyName') as "assembly_name",
                json_extract_path_text(properties, '$.assemblyVersion') as "assembly_version",
                json_extract_path_text(properties, '$.assemblyCulture') as "assembly_culture",
                json_extract_path_text(properties, '$.assemblyPublicKeyToken') as "assembly_public_key_token",
                json_extract_path_text(properties, '$.content') as "content",
                json_extract_path_text(properties, '$.contentType') as "content_type",
                json_extract_path_text(properties, '$.contentLink') as "content_link",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                assemblyArtifactName
                FROM azure.logic_apps.integration_account_assemblies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_account_batch_configurations:
      id: azure.logic_apps.vw_integration_account_batch_configurations
      name: vw_integration_account_batch_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.batchGroupName') as "batch_group_name",
              JSON_EXTRACT(properties, '$.releaseCriteria') as "release_criteria",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              batchConfigurationName
              FROM azure.logic_apps.integration_account_batch_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.batchGroupName') as "batch_group_name",
                json_extract_path_text(properties, '$.releaseCriteria') as "release_criteria",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                batchConfigurationName
                FROM azure.logic_apps.integration_account_batch_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_account_schemas:
      id: azure.logic_apps.vw_integration_account_schemas
      name: vw_integration_account_schemas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.schemaType') as "schema_type",
              JSON_EXTRACT(properties, '$.targetNamespace') as "target_namespace",
              JSON_EXTRACT(properties, '$.documentName') as "document_name",
              JSON_EXTRACT(properties, '$.fileName') as "file_name",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.content') as "content",
              JSON_EXTRACT(properties, '$.contentType') as "content_type",
              JSON_EXTRACT(properties, '$.contentLink') as "content_link",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              schemaName
              FROM azure.logic_apps.integration_account_schemas
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.schemaType') as "schema_type",
                json_extract_path_text(properties, '$.targetNamespace') as "target_namespace",
                json_extract_path_text(properties, '$.documentName') as "document_name",
                json_extract_path_text(properties, '$.fileName') as "file_name",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.content') as "content",
                json_extract_path_text(properties, '$.contentType') as "content_type",
                json_extract_path_text(properties, '$.contentLink') as "content_link",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                schemaName
                FROM azure.logic_apps.integration_account_schemas
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_account_maps:
      id: azure.logic_apps.vw_integration_account_maps
      name: vw_integration_account_maps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.mapType') as "map_type",
              JSON_EXTRACT(properties, '$.parametersSchema') as "parameters_schema",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.content') as "content",
              JSON_EXTRACT(properties, '$.contentType') as "content_type",
              JSON_EXTRACT(properties, '$.contentLink') as "content_link",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              mapName
              FROM azure.logic_apps.integration_account_maps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.mapType') as "map_type",
                json_extract_path_text(properties, '$.parametersSchema') as "parameters_schema",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.content') as "content",
                json_extract_path_text(properties, '$.contentType') as "content_type",
                json_extract_path_text(properties, '$.contentLink') as "content_link",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                mapName
                FROM azure.logic_apps.integration_account_maps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_account_partners:
      id: azure.logic_apps.vw_integration_account_partners
      name: vw_integration_account_partners
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.partnerType') as "partner_type",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.content') as "content",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              partnerName
              FROM azure.logic_apps.integration_account_partners
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.partnerType') as "partner_type",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.content') as "content",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                partnerName
                FROM azure.logic_apps.integration_account_partners
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_account_agreements:
      id: azure.logic_apps.vw_integration_account_agreements
      name: vw_integration_account_agreements
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.agreementType') as "agreement_type",
              JSON_EXTRACT(properties, '$.hostPartner') as "host_partner",
              JSON_EXTRACT(properties, '$.guestPartner') as "guest_partner",
              JSON_EXTRACT(properties, '$.hostIdentity') as "host_identity",
              JSON_EXTRACT(properties, '$.guestIdentity') as "guest_identity",
              JSON_EXTRACT(properties, '$.content') as "content",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              agreementName
              FROM azure.logic_apps.integration_account_agreements
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.agreementType') as "agreement_type",
                json_extract_path_text(properties, '$.hostPartner') as "host_partner",
                json_extract_path_text(properties, '$.guestPartner') as "guest_partner",
                json_extract_path_text(properties, '$.hostIdentity') as "host_identity",
                json_extract_path_text(properties, '$.guestIdentity') as "guest_identity",
                json_extract_path_text(properties, '$.content') as "content",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                agreementName
                FROM azure.logic_apps.integration_account_agreements
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_account_certificates:
      id: azure.logic_apps.vw_integration_account_certificates
      name: vw_integration_account_certificates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.key') as "key",
              JSON_EXTRACT(properties, '$.publicCertificate') as "public_certificate",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              certificateName
              FROM azure.logic_apps.integration_account_certificates
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.key') as "key",
                json_extract_path_text(properties, '$.publicCertificate') as "public_certificate",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                certificateName
                FROM azure.logic_apps.integration_account_certificates
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_account_sessions:
      id: azure.logic_apps.vw_integration_account_sessions
      name: vw_integration_account_sessions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.changedTime') as "changed_time",
              JSON_EXTRACT(properties, '$.content') as "content",
              subscriptionId,
              resourceGroupName,
              integrationAccountName,
              sessionName
              FROM azure.logic_apps.integration_account_sessions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.changedTime') as "changed_time",
                json_extract_path_text(properties, '$.content') as "content",
                subscriptionId,
                resourceGroupName,
                integrationAccountName,
                sessionName
                FROM azure.logic_apps.integration_account_sessions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND integrationAccountName = 'replace-me';
    vw_integration_service_environments:
      id: azure.logic_apps.vw_integration_service_environments
      name: vw_integration_service_environments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              sku as sku,
              identity as identity,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.integrationServiceEnvironmentId') as "integration_service_environment_id",
              JSON_EXTRACT(properties, '$.endpointsConfiguration') as "endpoints_configuration",
              JSON_EXTRACT(properties, '$.networkConfiguration') as "network_configuration",
              JSON_EXTRACT(properties, '$.encryptionConfiguration') as "encryption_configuration",
              subscriptionId,
              resourceGroup,
              integrationServiceEnvironmentName
              FROM azure.logic_apps.integration_service_environments
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                sku as sku,
                identity as identity,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.integrationServiceEnvironmentId') as "integration_service_environment_id",
                json_extract_path_text(properties, '$.endpointsConfiguration') as "endpoints_configuration",
                json_extract_path_text(properties, '$.networkConfiguration') as "network_configuration",
                json_extract_path_text(properties, '$.encryptionConfiguration') as "encryption_configuration",
                subscriptionId,
                resourceGroup,
                integrationServiceEnvironmentName
                FROM azure.logic_apps.integration_service_environments
                WHERE subscriptionId = 'replace-me';
    vw_integration_service_environment_managed_apis:
      id: azure.logic_apps.vw_integration_service_environment_managed_apis
      name: vw_integration_service_environment_managed_apis
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.deploymentParameters') as "deployment_parameters",
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.connectionParameters') as "connection_parameters",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.runtimeUrls') as "runtime_urls",
              JSON_EXTRACT(properties, '$.generalInformation') as "general_information",
              JSON_EXTRACT(properties, '$.capabilities') as "capabilities",
              JSON_EXTRACT(properties, '$.backendService') as "backend_service",
              JSON_EXTRACT(properties, '$.policies') as "policies",
              JSON_EXTRACT(properties, '$.apiDefinitionUrl') as "api_definition_url",
              JSON_EXTRACT(properties, '$.apiDefinitions') as "api_definitions",
              JSON_EXTRACT(properties, '$.integrationServiceEnvironment') as "integration_service_environment",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.category') as "category",
              subscriptionId,
              resourceGroup,
              integrationServiceEnvironmentName,
              apiName
              FROM azure.logic_apps.integration_service_environment_managed_apis
              WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND integrationServiceEnvironmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.deploymentParameters') as "deployment_parameters",
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.connectionParameters') as "connection_parameters",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.runtimeUrls') as "runtime_urls",
                json_extract_path_text(properties, '$.generalInformation') as "general_information",
                json_extract_path_text(properties, '$.capabilities') as "capabilities",
                json_extract_path_text(properties, '$.backendService') as "backend_service",
                json_extract_path_text(properties, '$.policies') as "policies",
                json_extract_path_text(properties, '$.apiDefinitionUrl') as "api_definition_url",
                json_extract_path_text(properties, '$.apiDefinitions') as "api_definitions",
                json_extract_path_text(properties, '$.integrationServiceEnvironment') as "integration_service_environment",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.category') as "category",
                subscriptionId,
                resourceGroup,
                integrationServiceEnvironmentName,
                apiName
                FROM azure.logic_apps.integration_service_environment_managed_apis
                WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND integrationServiceEnvironmentName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows?api-version=2019-05-01:
    get:
      tags:
        - Workflows
      operationId: Workflows_ListBySubscription
      description: Gets a list of workflows by subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/WorkflowFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows?api-version=2019-05-01:
    get:
      tags:
        - Workflows
      operationId: Workflows_ListByResourceGroup
      description: Gets a list of workflows by resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/WorkflowFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}?api-version=2019-05-01:
    get:
      tags:
        - Workflows
      operationId: Workflows_Get
      description: Gets a workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Workflows
      operationId: Workflows_CreateOrUpdate
      description: Creates or updates a workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The workflow.
        required: true
        x-ms-requestBody-name: workflow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Workflows
      operationId: Workflows_Update
      description: Updates a workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Workflows
      operationId: Workflows_Delete
      description: Deletes a workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/disable?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: Workflows_Disable
      description: Disables a workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/enable?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: Workflows_Enable
      description: Enables a workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/generateUpgradedDefinition?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: Workflows_GenerateUpgradedDefinition
      description: Generates the upgraded definition for a workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Parameters for generating an upgraded definition.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUpgradedDefinitionParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: WorkflowsCallbackUrl_List
      description: Get the workflow callback Url.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Which callback url to list.
        required: true
        x-ms-requestBody-name: listCallbackUrl
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallbackUrlParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Workflows_ListCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listSwagger?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: WorkflowsSwagger_List
      description: Gets an OpenAPI definition for the workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Workflows_ListSwagger
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/move?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: Workflows_Move
      x-ms-long-running-operation: true
      description: Moves an existing workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The workflow to move.
        required: true
        x-ms-requestBody-name: move
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowReference'
      responses:
        '200':
          description: OK
        '202':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/regenerateAccessKey?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: Workflows_RegenerateAccessKey
      description: Regenerates the callback URL access key for request triggers.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The access key type.
        required: true
        x-ms-requestBody-name: keyType
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateActionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/validate?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: Workflows_ValidateByResourceGroup
      description: Validates the workflow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The workflow.
        required: true
        x-ms-requestBody-name: validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions?api-version=2019-05-01:
    get:
      tags:
        - WorkflowVersions
      operationId: WorkflowVersions_List
      description: Gets a list of workflow versions.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowVersionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowVersions
      operationId: WorkflowVersions_Get
      description: Gets a workflow version.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: The workflow versionId.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers?api-version=2019-05-01:
    get:
      tags:
        - WorkflowTriggers
      operationId: WorkflowTriggers_List
      description: Gets a list of workflow triggers.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/WorkflowTriggerFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowTriggers
      operationId: WorkflowTriggers_Get
      description: Gets a workflow trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTrigger'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/reset?api-version=2019-05-01:
    post:
      tags:
        - WorkflowTriggers
      operationId: WorkflowTriggers_Reset
      description: Resets a workflow trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/run?api-version=2019-05-01:
    post:
      tags:
        - WorkflowTriggers
      operationId: WorkflowTriggers_Run
      description: Runs a workflow trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the trigger run failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/schemas/json?api-version=2019-05-01:
    get:
      tags:
        - WorkflowTriggers
      operationId: WorkflowTriggersSchemaJson_Get
      description: Get the trigger schema as JSON.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: WorkflowTriggers_GetSchemaJson
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/setState?api-version=2019-05-01:
    post:
      tags:
        - WorkflowTriggers
      operationId: WorkflowTriggers_SetState
      description: Sets the state of a workflow trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The workflow trigger state.
        required: true
        x-ms-requestBody-name: setState
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTriggerStateActionDefinition'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/listCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - WorkflowTriggers
      operationId: WorkflowTriggersCallbackUrl_List
      description: Get the callback URL for a workflow trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: WorkflowTriggers_ListCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}/triggers/{triggerName}/listCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - WorkflowTriggers
      operationId: WorkflowVersionTriggersCallbackUrl_List
      description: Get the callback url for a trigger of a workflow version.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: The workflow versionId.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The callback URL parameters.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallbackUrlParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: WorkflowVersionTriggers_ListCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories?api-version=2019-05-01:
    get:
      tags:
        - WorkflowTriggerHistories
      operationId: WorkflowTriggerHistories_List
      description: Gets a list of workflow trigger histories.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerHistoryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/WorkflowTriggerHistoryFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowTriggerHistories
      operationId: WorkflowTriggerHistories_Get
      description: Gets a workflow trigger history.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - name: historyName
          in: path
          description: The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerHistory'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}/resubmit?api-version=2019-05-01:
    post:
      tags:
        - WorkflowTriggerHistories
      operationId: WorkflowTriggerHistories_Resubmit
      description: Resubmits a workflow run based on the trigger history.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The workflow trigger name.
          required: true
          schema:
            type: string
        - name: historyName
          in: path
          description: The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRuns
      operationId: WorkflowRuns_List
      description: Gets a list of workflow runs.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/WorkflowRunFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRuns
      operationId: WorkflowRuns_Get
      description: Gets a workflow run.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRun'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/cancel?api-version=2019-05-01:
    post:
      tags:
        - WorkflowRuns
      operationId: WorkflowRuns_Cancel
      description: Cancels a workflow run.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActions_List
      description: Gets a list of workflow run actions.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: Status.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunActionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/WorkflowRunActionFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActions_Get
      description: Gets a workflow run action.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunAction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/listExpressionTraces?api-version=2019-05-01:
    post:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionsExpressionTraces_List
      description: Lists a workflow run expression trace.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressionTraces'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
        itemName: inputs
      x-ms-original-operationId: WorkflowRunActions_ListExpressionTraces
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionRepetitions_List
      description: Get all of a workflow run action repetitions.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunActionRepetitionDefinitionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionRepetitions_Get
      description: Get a workflow run action repetition.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - name: repetitionName
          in: path
          description: The workflow repetition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunActionRepetitionDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/listExpressionTraces?api-version=2019-05-01:
    post:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionRepetitionsExpressionTraces_List
      description: Lists a workflow run expression trace.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - name: repetitionName
          in: path
          description: The workflow repetition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressionTraces'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
        itemName: inputs
      x-ms-original-operationId: WorkflowRunActionRepetitions_ListExpressionTraces
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionRepetitionsRequestHistories_List
      description: List a workflow run repetition request history.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - name: repetitionName
          in: path
          description: The workflow repetition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestHistoryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories/{requestHistoryName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionRepetitionsRequestHistories_Get
      description: Gets a workflow run repetition request history.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - name: repetitionName
          in: path
          description: The workflow repetition.
          required: true
          schema:
            type: string
        - name: requestHistoryName
          in: path
          description: The request history name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestHistory'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionRequestHistories_List
      description: List a workflow run request history.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestHistoryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories/{requestHistoryName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionRequestHistories_Get
      description: Gets a workflow run request history.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - name: requestHistoryName
          in: path
          description: The request history name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestHistory'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionScopeRepetitions_List
      description: List the workflow run action scoped repetitions.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunActionRepetitionDefinitionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions/{repetitionName}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunActions
      operationId: WorkflowRunActionScopeRepetitions_Get
      description: Get a workflow run action scoped repetition.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: actionName
          in: path
          description: The workflow action name.
          required: true
          schema:
            type: string
        - name: repetitionName
          in: path
          description: The workflow repetition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunActionRepetitionDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/operations/{operationId}?api-version=2019-05-01:
    get:
      tags:
        - WorkflowRunOperations
      operationId: WorkflowRunOperations_Get
      description: Gets an operation for a run.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - name: runName
          in: path
          description: The workflow run name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: The workflow operation id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRun'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/locations/{location}/workflows/{workflowName}/validate?api-version=2019-05-01:
    post:
      tags:
        - Workflows
      operationId: Workflows_ValidateByLocation
      description: Validates the workflow definition.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: location
          in: path
          description: The workflow location.
          required: true
          schema:
            type: string
        - name: workflowName
          in: path
          description: The workflow name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The workflow.
        required: true
        x-ms-requestBody-name: validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationAccounts?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_ListBySubscription
      description: Gets a list of integration accounts by subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_ListByResourceGroup
      description: Gets a list of integration accounts by resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_Get
      description: Gets an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_CreateOrUpdate
      description: Creates or updates an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account.
        required: true
        x-ms-requestBody-name: integrationAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_Update
      description: Updates an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account.
        required: true
        x-ms-requestBody-name: integrationAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_Delete
      description: Deletes an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountAssemblies
      operationId: IntegrationAccountAssemblies_List
      description: List the assemblies for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssemblyCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountAssemblies
      operationId: IntegrationAccountAssemblies_Get
      description: Get an assembly for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: assemblyArtifactName
          in: path
          description: The assembly artifact name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssemblyDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountAssemblies
      operationId: IntegrationAccountAssemblies_CreateOrUpdate
      description: Create or update an assembly for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: assemblyArtifactName
          in: path
          description: The assembly artifact name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The assembly artifact.
        required: true
        x-ms-requestBody-name: assemblyArtifact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssemblyDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssemblyDefinition'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssemblyDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountAssemblies
      operationId: IntegrationAccountAssemblies_Delete
      description: Delete an assembly for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: assemblyArtifactName
          in: path
          description: The assembly artifact name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}/listContentCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccountAssemblies
      operationId: IntegrationAccountAssembliesContentCallbackUrl_List
      description: Get the content callback url for an integration account assembly.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: assemblyArtifactName
          in: path
          description: The assembly artifact name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: IntegrationAccountAssemblies_ListContentCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountBatchConfigurations
      operationId: IntegrationAccountBatchConfigurations_List
      description: List the batch configurations for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchConfigurationCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations/{batchConfigurationName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountBatchConfigurations
      operationId: IntegrationAccountBatchConfigurations_Get
      description: Get a batch configuration for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: batchConfigurationName
          in: path
          description: The batch configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountBatchConfigurations
      operationId: IntegrationAccountBatchConfigurations_CreateOrUpdate
      description: Create or update a batch configuration for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: batchConfigurationName
          in: path
          description: The batch configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The batch configuration.
        required: true
        x-ms-requestBody-name: batchConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchConfiguration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountBatchConfigurations
      operationId: IntegrationAccountBatchConfigurations_Delete
      description: Delete a batch configuration for an integration account.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: batchConfigurationName
          in: path
          description: The batch configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccountsCallbackUrl_List
      description: Gets the integration account callback URL.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The callback URL parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallbackUrlParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: IntegrationAccounts_ListCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listKeyVaultKeys?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccountsKeyVaultKeys_List
      description: Gets the integration account's Key Vault keys.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The key vault parameters.
        required: true
        x-ms-requestBody-name: listKeyVaultKeys
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListKeyVaultKeysDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyVaultKeyCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: IntegrationAccounts_ListKeyVaultKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/logTrackingEvents?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_LogTrackingEvents
      description: Logs the integration account's tracking events.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The callback URL parameters.
        required: true
        x-ms-requestBody-name: logTrackingEvents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingEventsDefinition'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/regenerateAccessKey?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccounts
      operationId: IntegrationAccounts_RegenerateAccessKey
      description: Regenerates the integration account access key.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The access key type.
        required: true
        x-ms-requestBody-name: regenerateAccessKey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateActionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountSchemas
      operationId: IntegrationAccountSchemas_List
      description: Gets a list of integration account schemas.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: SchemaType.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSchemaListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/IntegrationAccountSchemaFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountSchemas
      operationId: IntegrationAccountSchemas_Get
      description: Gets an integration account schema.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: schemaName
          in: path
          description: The integration account schema name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSchema'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountSchemas
      operationId: IntegrationAccountSchemas_CreateOrUpdate
      description: Creates or updates an integration account schema.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: schemaName
          in: path
          description: The integration account schema name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account schema.
        required: true
        x-ms-requestBody-name: schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccountSchema'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSchema'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSchema'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountSchemas
      operationId: IntegrationAccountSchemas_Delete
      description: Deletes an integration account schema.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: schemaName
          in: path
          description: The integration account schema name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}/listContentCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccountSchemas
      operationId: IntegrationAccountSchemasContentCallbackUrl_List
      description: Get the content callback url.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: schemaName
          in: path
          description: The integration account schema name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        required: true
        x-ms-requestBody-name: listContentCallbackUrl
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallbackUrlParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: IntegrationAccountSchemas_ListContentCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountMaps
      operationId: IntegrationAccountMaps_List
      description: Gets a list of integration account maps.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: MapType.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountMapListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/IntegrationAccountMapFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountMaps
      operationId: IntegrationAccountMaps_Get
      description: Gets an integration account map.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: mapName
          in: path
          description: The integration account map name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountMap'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountMaps
      operationId: IntegrationAccountMaps_CreateOrUpdate
      description: Creates or updates an integration account map. If the map is larger than 4 MB, you need to store the map in an Azure blob and use the blob's Shared Access Signature (SAS) URL as the 'contentLink' property value.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: mapName
          in: path
          description: The integration account map name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account map.
        required: true
        x-ms-requestBody-name: map
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccountMap'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountMap'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountMap'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountMaps
      operationId: IntegrationAccountMaps_Delete
      description: Deletes an integration account map.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: mapName
          in: path
          description: The integration account map name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}/listContentCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccountMaps
      operationId: IntegrationAccountMapsContentCallbackUrl_List
      description: Get the content callback url.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: mapName
          in: path
          description: The integration account map name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        required: true
        x-ms-requestBody-name: listContentCallbackUrl
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallbackUrlParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: IntegrationAccountMaps_ListContentCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountPartners
      operationId: IntegrationAccountPartners_List
      description: Gets a list of integration account partners.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: PartnerType.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountPartnerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/IntegrationAccountPartnerFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountPartners
      operationId: IntegrationAccountPartners_Get
      description: Gets an integration account partner.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: partnerName
          in: path
          description: The integration account partner name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountPartner'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountPartners
      operationId: IntegrationAccountPartners_CreateOrUpdate
      description: Creates or updates an integration account partner.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: partnerName
          in: path
          description: The integration account partner name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account partner.
        required: true
        x-ms-requestBody-name: partner
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccountPartner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountPartner'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountPartner'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountPartners
      operationId: IntegrationAccountPartners_Delete
      description: Deletes an integration account partner.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: partnerName
          in: path
          description: The integration account partner name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}/listContentCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccountPartners
      operationId: IntegrationAccountPartnersContentCallbackUrl_List
      description: Get the content callback url.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: partnerName
          in: path
          description: The integration account partner name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        required: true
        x-ms-requestBody-name: listContentCallbackUrl
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallbackUrlParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: IntegrationAccountPartners_ListContentCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountAgreements
      operationId: IntegrationAccountAgreements_List
      description: Gets a list of integration account agreements.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: AgreementType.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountAgreementListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/IntegrationAccountAgreementFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountAgreements
      operationId: IntegrationAccountAgreements_Get
      description: Gets an integration account agreement.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: agreementName
          in: path
          description: The integration account agreement name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountAgreement'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountAgreements
      operationId: IntegrationAccountAgreements_CreateOrUpdate
      description: Creates or updates an integration account agreement.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: agreementName
          in: path
          description: The integration account agreement name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account agreement.
        required: true
        x-ms-requestBody-name: agreement
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccountAgreement'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountAgreement'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountAgreement'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountAgreements
      operationId: IntegrationAccountAgreements_Delete
      description: Deletes an integration account agreement.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: agreementName
          in: path
          description: The integration account agreement name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}/listContentCallbackUrl?api-version=2019-05-01:
    post:
      tags:
        - IntegrationAccountAgreements
      operationId: IntegrationAccountAgreementsContentCallbackUrl_List
      description: Get the content callback url.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: agreementName
          in: path
          description: The integration account agreement name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        required: true
        x-ms-requestBody-name: listContentCallbackUrl
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallbackUrlParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTriggerCallbackUrl'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: IntegrationAccountAgreements_ListContentCallbackUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountCertificates
      operationId: IntegrationAccountCertificates_List
      description: Gets a list of integration account certificates.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountCertificateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountCertificates
      operationId: IntegrationAccountCertificates_Get
      description: Gets an integration account certificate.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: The integration account certificate name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountCertificate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountCertificates
      operationId: IntegrationAccountCertificates_CreateOrUpdate
      description: Creates or updates an integration account certificate.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: The integration account certificate name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account certificate.
        required: true
        x-ms-requestBody-name: certificate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccountCertificate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountCertificate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountCertificate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountCertificates
      operationId: IntegrationAccountCertificates_Delete
      description: Deletes an integration account certificate.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: The integration account certificate name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountSessions
      operationId: IntegrationAccountSessions_List
      description: Gets a list of integration account sessions.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. Options for filters include: ChangedTime.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSessionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/IntegrationAccountSessionFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions/{sessionName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationAccountSessions
      operationId: IntegrationAccountSessions_Get
      description: Gets an integration account session.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: sessionName
          in: path
          description: The integration account session name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSession'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationAccountSessions
      operationId: IntegrationAccountSessions_CreateOrUpdate
      description: Creates or updates an integration account session.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: sessionName
          in: path
          description: The integration account session name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration account session.
        required: true
        x-ms-requestBody-name: session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAccountSession'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSession'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccountSession'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationAccountSessions
      operationId: IntegrationAccountSessions_Delete
      description: Deletes an integration account session.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationAccountName
          in: path
          description: The integration account name.
          required: true
          schema:
            type: string
        - name: sessionName
          in: path
          description: The integration account session name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments?api-version=2019-05-01:
    get:
      tags:
        - integrationServiceEnvironments
      operationId: IntegrationServiceEnvironments_ListBySubscription
      description: Gets a list of integration service environments by subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentListResult'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments?api-version=2019-05-01:
    get:
      tags:
        - IntegrationServiceEnvironments
      operationId: IntegrationServiceEnvironments_ListByResourceGroup
      description: Gets a list of integration service environments by resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $top
          in: query
          description: The number of items to be included in the result.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentListResult'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}?api-version=2019-05-01:
    get:
      tags:
        - IntegrationServiceEnvironments
      operationId: IntegrationServiceEnvironments_Get
      description: Gets an integration service environment.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironment'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IntegrationServiceEnvironments
      operationId: IntegrationServiceEnvironments_CreateOrUpdate
      x-ms-long-running-operation: true
      description: Creates or updates an integration service environment.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration service environment.
        required: true
        x-ms-requestBody-name: integrationServiceEnvironment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationServiceEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironment'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironment'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - IntegrationServiceEnvironments
      operationId: IntegrationServiceEnvironments_Update
      description: Updates an integration service environment.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration service environment.
        required: true
        x-ms-requestBody-name: integrationServiceEnvironment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationServiceEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironment'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IntegrationServiceEnvironments
      operationId: IntegrationServiceEnvironments_Delete
      description: Deletes an integration service environment.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/skus?api-version=2019-05-01:
    get:
      tags:
        - integrationServiceEnvironmentSkus
      operationId: IntegrationServiceEnvironmentSkus_List
      description: Gets a list of integration service environment Skus.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentSkuList'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/restart?api-version=2019-05-01:
    post:
      tags:
        - integrationServiceEnvironmentRestart
      operationId: IntegrationServiceEnvironments_Restart
      description: Restarts an integration service environment.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/health/network?api-version=2019-05-01:
    get:
      tags:
        - integrationServiceEnvironmentNetworkHealth
      operationId: IntegrationServiceEnvironmentNetworkHealth_Get
      description: Gets the integration service environment network health.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentNetworkHealth'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis?api-version=2019-05-01:
    get:
      tags:
        - integrationServiceEnvironmentManagedApis
      operationId: IntegrationServiceEnvironmentManagedApis_List
      description: Gets the integration service environment managed Apis.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApiListResult'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}?api-version=2019-05-01:
    get:
      tags:
        - integrationServiceEnvironmentManagedApi
      operationId: IntegrationServiceEnvironmentManagedApis_Get
      description: Gets the integration service environment managed Api.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - name: apiName
          in: path
          description: The api name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApi'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - integrationServiceEnvironmentManagedApi
      operationId: IntegrationServiceEnvironmentManagedApis_Put
      description: Puts the integration service environment managed Api.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - name: apiName
          in: path
          description: The api name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The integration service environment managed api.
        required: true
        x-ms-requestBody-name: integrationServiceEnvironmentManagedApi
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApi'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApi'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServiceEnvironmentManagedApi'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - integrationServiceEnvironmentManagedApi
      operationId: IntegrationServiceEnvironmentManagedApis_Delete
      description: Deletes the integration service environment managed Api.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - name: apiName
          in: path
          description: The api name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}/apiOperations?api-version=2019-05-01:
    get:
      tags:
        - integrationServiceEnvironmentManagedApis
      operationId: IntegrationServiceEnvironmentManagedApiOperations_List
      description: Gets the managed Api operations.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroup
          in: path
          description: The resource group.
          required: true
          schema:
            type: string
        - name: integrationServiceEnvironmentName
          in: path
          description: The integration service environment name.
          required: true
          schema:
            type: string
        - name: apiName
          in: path
          description: The api name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOperationListResult'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Logic/operations?api-version=2019-05-01:
    get:
      tags:
        - Operations
      description: Lists all of the available Logic REST API operations.
      operationId: Operations_List
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Logic error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
