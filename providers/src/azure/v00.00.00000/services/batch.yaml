openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Batch Management
  description: Azure Batch enables you to run large-scale parallel and high-performance computing (HPC) applications efficiently in the cloud. Its a platform service that schedules compute-intensive work to run on a managed collection of virtual machines, and can automatically scale compute resources to meet the needs of your jobs.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    networkSecurityPerimeterConfigurationName:
      name: networkSecurityPerimeterConfigurationName
      in: path
      description: The name for Network Security Perimeter configuration
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^.*$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to be used with the HTTP request.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group that contains the Batch account.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AccountNameParameter:
      name: accountName
      in: path
      description: The name of the Batch account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+$
        minLength: 3
        maxLength: 24
        type: string
    CertificateNameParameter:
      name: certificateName
      in: path
      description: The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[\w]+-[\w]+$
        minLength: 5
        maxLength: 45
        type: string
    DetectorIdParameter:
      name: detectorId
      in: path
      description: The name of the detector.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PoolNameParameter:
      name: poolName
      in: path
      description: The pool name. This must be unique within the account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_-]+$
        minLength: 1
        maxLength: 64
        type: string
    PrivateLinkResourceNameParameter:
      name: privateLinkResourceName
      in: path
      description: The private link resource name. This must be unique within the account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_-]+\.?[a-fA-F0-9-]*$
        minLength: 1
        maxLength: 101
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The private endpoint connection name. This must be unique within the account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_-]+\.?[a-fA-F0-9-]*$
        minLength: 1
        maxLength: 101
        type: string
    ApplicationNameParameter:
      name: applicationName
      in: path
      description: The name of the application. This must be unique within the account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_-]+$
        minLength: 1
        maxLength: 64
        type: string
    VersionNameParameter:
      name: versionName
      in: path
      description: The version of the application.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$
        minLength: 1
        maxLength: 64
        type: string
    NetworkSecurityPerimeterConfigurationNameParameter:
      name: networkSecurityPerimeterConfigurationName
      in: path
      description: The name for a network security perimeter configuration
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 512
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: A REST API operation
      properties:
        name:
          title: The operation name.
          description: This is of the format {provider}/{resource}/{operation}
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          title: The object that describes the operation.
          type: object
          properties:
            provider:
              title: Friendly name of the resource provider.
              type: string
            operation:
              title: The operation type.
              description: 'For example: read, write, delete, or listKeys/action'
              type: string
            resource:
              title: The resource type on which the operation is performed.
              type: string
            description:
              title: The friendly name of the operation
              type: string
        origin:
          title: The intended executor of the operation.
          type: string
        properties:
          title: Properties of the operation.
          type: object
      type: object
    OperationListResult:
      title: Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          title: The list of operations supported by the resource provider.
        nextLink:
          type: string
          title: The URL to get the next set of operation list results if there are any.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          type: string
          description: |-
            Full path to the secret with or without version. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. or https://mykeyvault.vault.azure.net/keys/testkey. To be usable the following prerequisites must be met:

             The Batch Account has a System Assigned identity
             The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
             The KeyVault has soft-delete and purge protection enabled
      description: KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AutoStorageBaseProperties:
      type: object
      properties:
        storageAccountId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
          description: The resource ID of the storage account to be used for auto-storage account.
        authenticationMode:
          type: string
          description: The authentication mode which the Batch service will use to manage the auto-storage account.
          default: StorageKeys
          enum:
            - StorageKeys
            - BatchAccountManagedIdentity
          x-ms-enum:
            name: AutoStorageAuthenticationMode
            modelAsString: false
            values:
              - value: StorageKeys
                description: The Batch service will authenticate requests to auto-storage using storage account keys.
              - value: BatchAccountManagedIdentity
                description: The Batch service will authenticate requests to auto-storage using the managed identity assigned to the Batch account.
        nodeIdentityReference:
          title: The reference to the user assigned identity which compute nodes will use to access auto-storage.
          description: The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
          $ref: '#/components/schemas/ComputeNodeIdentityReference'
      required:
        - storageAccountId
      description: The properties related to the auto-storage account.
    BatchAccountUpdateProperties:
      type: object
      properties:
        autoStorage:
          $ref: '#/components/schemas/AutoStorageBaseProperties'
          description: The properties related to the auto-storage account.
        encryption:
          title: The encryption configuration for the Batch account.
          description: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
          $ref: '#/components/schemas/EncryptionProperties'
        allowedAuthenticationModes:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationMode'
          description: List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane.
        publicNetworkAccess:
          title: The network access type for accessing Azure Batch account.
          description: If not specified, the default value is 'enabled'.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        networkProfile:
          title: Network profile for Batch account, which contains network rule settings for each endpoint.
          description: The network profile only takes effect when publicNetworkAccess is enabled.
          $ref: '#/components/schemas/NetworkProfile'
      description: The properties of a Batch account.
    BatchAccountCreateProperties:
      type: object
      properties:
        autoStorage:
          $ref: '#/components/schemas/AutoStorageBaseProperties'
          description: The properties related to the auto-storage account.
        poolAllocationMode:
          title: The allocation mode to use for creating pools in the Batch account.
          description: The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Microsoft Entra ID. If the mode is UserSubscription, clients must use Microsoft Entra ID. The default is BatchService.
          $ref: '#/components/schemas/PoolAllocationMode'
        keyVaultReference:
          $ref: '#/components/schemas/KeyVaultReference'
          description: A reference to the Azure key vault associated with the Batch account.
        publicNetworkAccess:
          title: The network access type for accessing Azure Batch account.
          description: If not specified, the default value is 'enabled'.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        networkProfile:
          title: Network profile for Batch account, which contains network rule settings for each endpoint.
          description: The network profile only takes effect when publicNetworkAccess is enabled.
          $ref: '#/components/schemas/NetworkProfile'
        encryption:
          title: The encryption configuration for the Batch account.
          description: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
          $ref: '#/components/schemas/EncryptionProperties'
        allowedAuthenticationModes:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationMode'
          description: List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane.
      description: The properties of a Batch account.
    AuthenticationMode:
      type: string
      description: The authentication mode for the Batch account.
      enum:
        - SharedKey
        - AAD
        - TaskAuthenticationToken
      x-ms-enum:
        name: AuthenticationMode
        modelAsString: false
        values:
          - value: SharedKey
            description: The authentication mode using shared keys.
          - value: AAD
            description: The authentication mode using Microsoft Entra ID.
          - value: TaskAuthenticationToken
            description: The authentication mode using task authentication tokens.
    BatchAccountCreateParameters:
      required:
        - location
      description: Parameters supplied to the Create operation.
      properties:
        location:
          type: string
          description: The region in which to create the account.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The user-specified tags associated with the account.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BatchAccountCreateProperties'
          description: The properties of the Batch account.
        identity:
          $ref: '#/components/schemas/BatchAccountIdentity'
          description: The identity of the Batch account.
      type: object
    KeyVaultReference:
      type: object
      properties:
        id:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.KeyVault/vaults
          description: The resource ID of the Azure key vault associated with the Batch account.
        url:
          type: string
          description: The URL of the Azure key vault associated with the Batch account.
      required:
        - id
        - url
      description: Identifies the Azure key vault associated with a Batch account.
    AutoStorageProperties:
      required:
        - lastKeySync
      description: Contains information about the auto-storage account associated with a Batch account.
      properties:
        lastKeySync:
          type: string
          format: date-time
          description: The UTC time at which storage keys were last synchronized with the Batch account.
        storageAccountId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
          description: The resource ID of the storage account to be used for auto-storage account.
        authenticationMode:
          type: string
          description: The authentication mode which the Batch service will use to manage the auto-storage account.
          default: StorageKeys
          enum:
            - StorageKeys
            - BatchAccountManagedIdentity
          x-ms-enum:
            name: AutoStorageAuthenticationMode
            modelAsString: false
            values:
              - value: StorageKeys
                description: The Batch service will authenticate requests to auto-storage using storage account keys.
              - value: BatchAccountManagedIdentity
                description: The Batch service will authenticate requests to auto-storage using the managed identity assigned to the Batch account.
        nodeIdentityReference:
          title: The reference to the user assigned identity which compute nodes will use to access auto-storage.
          description: The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
          $ref: '#/components/schemas/ComputeNodeIdentityReference'
      type: object
    VirtualMachineFamilyCoreQuota:
      type: object
      properties:
        name:
          readOnly: true
          nullable: false
          type: string
          description: The Virtual Machine family name.
        coreQuota:
          readOnly: true
          nullable: false
          type: integer
          format: int32
          description: The core quota for the VM family for the Batch account.
      description: A VM Family and its associated core quota for the Batch account.
    BatchAccountIdentity:
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of the Batch account. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the Batch account.
          enum:
            - SystemAssigned
            - UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
            values:
              - value: SystemAssigned
                description: Batch account has a system assigned identity with it.
              - value: UserAssigned
                description: Batch account has user assigned identities with it.
              - value: None
                description: Batch account has no identity associated with it. Setting `None` in update account will remove existing identities.
        userAssignedIdentities:
          type: object
          description: The list of user identities associated with the Batch account.
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentities'
      description: The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode.
      required:
        - type
    BatchAccountProperties:
      type: object
      properties:
        accountEndpoint:
          type: string
          readOnly: true
          description: The account endpoint used to interact with the Batch service.
        nodeManagementEndpoint:
          type: string
          readOnly: true
          description: The endpoint used by compute node to connect to the Batch node management service.
        provisioningState:
          type: string
          readOnly: true
          nullable: false
          description: The provisioned state of the resource
          enum:
            - Invalid
            - Creating
            - Deleting
            - Succeeded
            - Failed
            - Cancelled
          x-ms-enum:
            name: ProvisioningState
            modelAsString: false
            values:
              - value: Invalid
                description: The account is in an invalid state.
              - value: Creating
                description: The account is being created.
              - value: Deleting
                description: The account is being deleted.
              - value: Succeeded
                description: The account has been created and is ready for use.
              - value: Failed
                description: The last operation for the account is failed.
              - value: Cancelled
                description: The last operation for the account is cancelled.
        poolAllocationMode:
          readOnly: true
          nullable: false
          x-nullable: false
          title: The allocation mode to use for creating pools in the Batch account.
          $ref: '#/components/schemas/PoolAllocationMode'
        keyVaultReference:
          title: A reference to the Azure key vault associated with the Batch account.
          readOnly: true
          $ref: '#/components/schemas/KeyVaultReference'
        publicNetworkAccess:
          nullable: true
          x-nullable: true
          title: The network interface type for accessing Azure Batch service and Batch account operations.
          description: If not specified, the default value is 'enabled'.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        networkProfile:
          nullable: true
          x-nullable: true
          title: Network profile for Batch account, which contains network rule settings for each endpoint.
          description: The network profile only takes effect when publicNetworkAccess is enabled.
          $ref: '#/components/schemas/NetworkProfile'
        privateEndpointConnections:
          readOnly: true
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of private endpoint connections associated with the Batch account
        autoStorage:
          title: The properties and status of any auto-storage account associated with the Batch account.
          readOnly: true
          $ref: '#/components/schemas/AutoStorageProperties'
        encryption:
          title: The encryption configuration for the Batch account.
          description: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
          readOnly: true
          $ref: '#/components/schemas/EncryptionProperties'
        dedicatedCoreQuota:
          readOnly: true
          nullable: true
          type: integer
          format: int32
          title: The dedicated core quota for the Batch account.
          description: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
        lowPriorityCoreQuota:
          readOnly: true
          nullable: true
          type: integer
          format: int32
          title: The Spot/low-priority core quota for the Batch account.
          description: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
        dedicatedCoreQuotaPerVMFamily:
          readOnly: true
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineFamilyCoreQuota'
          x-ms-identifiers:
            - name
          description: A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
        dedicatedCoreQuotaPerVMFamilyEnforced:
          readOnly: true
          nullable: false
          type: boolean
          title: A value indicating whether core quotas per Virtual Machine family are enforced for this account
          description: If this flag is true, dedicated core quota is enforced via both the dedicatedCoreQuotaPerVMFamily and dedicatedCoreQuota properties on the account. If this flag is false, dedicated core quota is enforced only via the dedicatedCoreQuota property on the account and does not consider Virtual Machine family.
        poolQuota:
          readOnly: true
          nullable: false
          type: integer
          format: int32
          title: The pool quota for the Batch account.
        activeJobAndJobScheduleQuota:
          readOnly: true
          nullable: false
          type: integer
          format: int32
          title: The active job and job schedule quota for the Batch account.
        allowedAuthenticationModes:
          readOnly: true
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationMode'
          description: List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane.
      description: Account specific properties.
    BatchAccount:
      description: Contains information about an Azure Batch account.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BatchAccountProperties'
          description: The properties associated with the account.
        identity:
          $ref: '#/components/schemas/BatchAccountIdentity'
          description: The identity of the Batch account.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        location:
          readOnly: true
          type: string
          description: The location of the resource.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    BatchAccountUpdateParameters:
      description: Parameters for updating an Azure Batch account.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The user-specified tags associated with the account.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BatchAccountUpdateProperties'
          description: The properties of the account.
        identity:
          $ref: '#/components/schemas/BatchAccountIdentity'
          description: The identity of the Batch account.
      type: object
    BatchAccountListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BatchAccount'
          x-ms-identifiers:
            - /properties/accountEndpoint
          description: The collection of Batch accounts returned by the listing operation.
        nextLink:
          type: string
          description: The continuation token.
      description: Values returned by the List operation.
    EncryptionProperties:
      type: object
      properties:
        keySource:
          type: string
          description: Type of the key source.
          enum:
            - Microsoft.Batch
            - Microsoft.KeyVault
          x-ms-enum:
            name: KeySource
            modelAsString: false
            values:
              - value: Microsoft.Batch
                description: Batch creates and manages the encryption keys used to protect the account data.
              - value: Microsoft.KeyVault
                description: The encryption keys used to protect the account data are stored in an external key vault. If this is set then the Batch Account identity must be set to `SystemAssigned` and a valid Key Identifier must also be supplied under the keyVaultProperties.
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Additional details when using Microsoft.KeyVault
      description: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
    BatchAccountRegenerateKeyParameters:
      type: object
      properties:
        keyName:
          type: string
          description: The type of account key to regenerate.
          enum:
            - Primary
            - Secondary
          x-ms-enum:
            name: AccountKeyType
            modelAsString: false
            values:
              - value: Primary
                description: The primary account key.
              - value: Secondary
                description: The secondary account key.
      required:
        - keyName
      description: Parameters supplied to the RegenerateKey operation.
    BatchAccountKeys:
      type: object
      properties:
        accountName:
          type: string
          readOnly: true
          description: The Batch account name.
        primary:
          type: string
          readOnly: true
          description: The primary key associated with the account.
        secondary:
          type: string
          readOnly: true
          description: The secondary key associated with the account.
      description: A set of Azure Batch account keys.
    ActivateApplicationPackageParameters:
      type: object
      properties:
        format:
          type: string
          description: The format of the application package binary file.
      required:
        - format
      description: Parameters for an activating an application package.
    Application:
      description: Contains information about an application in a Batch account.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationProperties'
          description: The properties associated with the Application.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    ApplicationProperties:
      type: object
      properties:
        displayName:
          type: string
          description: The display name for the application.
        allowUpdates:
          type: boolean
          description: A value indicating whether packages within the application may be overwritten using the same version string.
        defaultVersion:
          type: string
          description: The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
      description: The properties associated with the Application.
    ApplicationPackage:
      description: An application package which represents a particular version of an application.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationPackageProperties'
          description: The properties associated with the Application Package.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    ApplicationPackageProperties:
      type: object
      properties:
        state:
          type: string
          readOnly: true
          description: The current state of the application package.
          enum:
            - Pending
            - Active
          x-ms-enum:
            name: PackageState
            modelAsString: false
            values:
              - value: Pending
                description: The application package has been created but has not yet been activated.
              - value: Active
                description: The application package is ready for use.
        format:
          type: string
          readOnly: true
          description: The format of the application package, if the package is active.
        storageUrl:
          type: string
          readOnly: true
          description: The URL for the application package in Azure Storage.
        storageUrlExpiry:
          type: string
          format: date-time
          readOnly: true
          description: The UTC time at which the Azure Storage URL will expire.
        lastActivationTime:
          type: string
          format: date-time
          readOnly: true
          description: The time at which the package was last activated, if the package is active.
      description: Properties of an application package
    ListApplicationsResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Application'
          description: The list of applications.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The result of performing list applications.
    ListApplicationPackagesResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPackage'
          description: The list of application packages.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: The result of performing list application packages.
    BatchLocationQuota:
      type: object
      properties:
        accountQuota:
          type: integer
          format: int32
          readOnly: true
          description: The number of Batch accounts that may be created under the subscription in the specified region.
      description: Quotas associated with a Batch region for a particular subscription.
    AzureResource:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        location:
          readOnly: true
          type: string
          description: The location of the resource.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      description: A definition of an Azure resource.
      x-ms-azure-resource: true
    AzureProxyResource:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      description: A definition of an Azure resource.
      x-ms-azure-resource: true
    PublicNetworkAccessType:
      type: string
      description: The network access type for operating on the resources in the Batch account.
      default: Enabled
      enum:
        - Enabled
        - Disabled
        - SecuredByPerimeter
      x-ms-enum:
        name: PublicNetworkAccessType
        modelAsString: false
        values:
          - value: Enabled
            description: Enables connectivity to Azure Batch through public DNS.
          - value: Disabled
            description: Disables public connectivity and enables private connectivity to Azure Batch Service through private endpoint resource.
          - value: SecuredByPerimeter
            description: Secures connectivity to Azure Batch through NSP configuration.
    NetworkProfile:
      type: object
      properties:
        accountAccess:
          $ref: '#/components/schemas/EndpointAccessProfile'
          description: Network access profile for batchAccount endpoint (Batch account data plane API).
        nodeManagementAccess:
          $ref: '#/components/schemas/EndpointAccessProfile'
          description: Network access profile for nodeManagement endpoint (Batch service managing compute nodes for Batch pools).
      description: Network profile for Batch account, which contains network rule settings for each endpoint.
    EndpointAccessProfile:
      type: object
      properties:
        defaultAction:
          type: string
          title: The default action when there is no IPRule matched.
          description: Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.
          enum:
            - Allow
            - Deny
          x-ms-enum:
            name: EndpointAccessDefaultAction
            modelAsString: false
            values:
              - value: Allow
                description: Allow client access.
              - value: Deny
                description: Deny client access.
        ipRules:
          type: array
          items:
            $ref: '#/components/schemas/IPRule'
          x-ms-identifiers:
            - action
          description: Array of IP ranges to filter client IP address.
      description: Network access profile for Batch endpoint.
      required:
        - defaultAction
    IPRule:
      type: object
      properties:
        action:
          type: string
          description: Action when client IP address is matched.
          enum:
            - Allow
          x-ms-enum:
            name: IPRuleAction
            modelAsString: false
            values:
              - value: Allow
                description: Allow access for the matched client IP address.
        value:
          type: string
          title: The IP address or IP address range to filter
          description: IPv4 address, or IPv4 address range in CIDR format.
      description: Rule to filter client IP address.
      required:
        - action
        - value
    PoolAllocationMode:
      type: string
      description: The allocation mode for creating pools in the Batch account.
      enum:
        - BatchService
        - UserSubscription
      x-ms-enum:
        name: PoolAllocationMode
        modelAsString: false
        values:
          - value: BatchService
            description: Pools will be allocated in subscriptions owned by the Batch service.
          - value: UserSubscription
            description: Pools will be allocated in a subscription owned by the user.
    CertificateBaseProperties:
      description: Base certificate properties.
      type: object
      properties:
        thumbprintAlgorithm:
          type: string
          title: The algorithm of the certificate thumbprint.
          description: This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        thumbprint:
          type: string
          title: The thumbprint of the certificate.
          description: This must match the thumbprint from the name.
        format:
          type: string
          nullable: false
          description: The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
          enum:
            - Pfx
            - Cer
          x-ms-enum:
            name: CertificateFormat
            modelAsString: false
            values:
              - value: Pfx
                description: The certificate is a PFX (PKCS#12) formatted certificate or certificate chain.
              - value: Cer
                description: The certificate is a base64-encoded X.509 certificate.
    CertificateProperties:
      description: Certificate properties.
      properties:
        provisioningState:
          type: string
          readOnly: true
          nullable: false
          title: The provisioned state of the resource
          enum:
            - Succeeded
            - Deleting
            - Failed
          x-ms-enum:
            name: CertificateProvisioningState
            modelAsString: false
            values:
              - value: Succeeded
                description: The certificate is available for use in pools.
              - value: Deleting
                description: The user has requested that the certificate be deleted, but the delete operation has not yet completed. You may not reference the certificate when creating or updating pools.
              - value: Failed
                description: The user requested that the certificate be deleted, but there are pools that still have references to the certificate, or it is still installed on one or more compute nodes. (The latter can occur if the certificate has been removed from the pool, but the node has not yet restarted. Nodes refresh their certificates only when they restart.) You may use the cancel certificate delete operation to cancel the delete, or the delete certificate operation to retry the delete.
        provisioningStateTransitionTime:
          type: string
          format: date-time
          title: The time at which the certificate entered its current state.
          readOnly: true
        previousProvisioningState:
          type: string
          readOnly: true
          nullable: false
          description: The previous provisioned state of the resource
          enum:
            - Succeeded
            - Deleting
            - Failed
          x-ms-enum:
            name: CertificateProvisioningState
            modelAsString: false
            values:
              - value: Succeeded
                description: The certificate is available for use in pools.
              - value: Deleting
                description: The user has requested that the certificate be deleted, but the delete operation has not yet completed. You may not reference the certificate when creating or updating pools.
              - value: Failed
                description: The user requested that the certificate be deleted, but there are pools that still have references to the certificate, or it is still installed on one or more compute nodes. (The latter can occur if the certificate has been removed from the pool, but the node has not yet restarted. Nodes refresh their certificates only when they restart.) You may use the cancel certificate delete operation to cancel the delete, or the delete certificate operation to retry the delete.
        previousProvisioningStateTransitionTime:
          type: string
          format: date-time
          title: The time at which the certificate entered its previous state.
          readOnly: true
        publicData:
          type: string
          readOnly: true
          description: The public key of the certificate.
        deleteCertificateError:
          readOnly: true
          $ref: '#/components/schemas/DeleteCertificateError'
          title: The error which occurred while deleting the certificate
          description: This is only returned when the certificate provisioningState is 'Failed'.
        thumbprintAlgorithm:
          type: string
          title: The algorithm of the certificate thumbprint.
          description: This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        thumbprint:
          type: string
          title: The thumbprint of the certificate.
          description: This must match the thumbprint from the name.
        format:
          type: string
          nullable: false
          description: The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
          enum:
            - Pfx
            - Cer
          x-ms-enum:
            name: CertificateFormat
            modelAsString: false
            values:
              - value: Pfx
                description: The certificate is a PFX (PKCS#12) formatted certificate or certificate chain.
              - value: Cer
                description: The certificate is a base64-encoded X.509 certificate.
      type: object
    CertificateCreateOrUpdateProperties:
      description: Certificate properties for create operations
      required:
        - data
      properties:
        thumbprintAlgorithm:
          type: string
          title: The algorithm of the certificate thumbprint.
          description: This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        thumbprint:
          type: string
          title: The thumbprint of the certificate.
          description: This must match the thumbprint from the name.
        format:
          type: string
          nullable: false
          description: The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
          enum:
            - Pfx
            - Cer
          x-ms-enum:
            name: CertificateFormat
            modelAsString: false
            values:
              - value: Pfx
                description: The certificate is a PFX (PKCS#12) formatted certificate or certificate chain.
              - value: Cer
                description: The certificate is a base64-encoded X.509 certificate.
        data:
          type: string
          title: The base64-encoded contents of the certificate.
          description: The maximum size is 10KB.
          x-ms-mutability:
            - read
            - update
        password:
          type: string
          title: The password to access the certificate's private key.
          description: This must not be specified if the certificate format is Cer.
          x-ms-secret: true
      type: object
    Certificate:
      description: Contains information about a certificate.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CertificateProperties'
          description: The properties associated with the certificate.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    CertificateCreateOrUpdateParameters:
      description: Contains information about a certificate.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CertificateCreateOrUpdateProperties'
          description: The properties associated with the certificate.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    ListCertificatesResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
          description: The collection of returned certificates.
        nextLink:
          type: string
          description: The continuation token.
      description: Values returned by the List operation.
    DeleteCertificateError:
      type: object
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/DeleteCertificateError'
          x-ms-identifiers:
            - code
          description: A list of additional details about the error.
      required:
        - code
        - message
      description: An error response from the Batch service.
    DetectorListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DetectorResponse'
          description: The collection of Batch account detectors returned by the listing operation.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Values returned by the List operation.
    DetectorResponse:
      description: Contains the information for a detector.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DetectorResponseProperties'
          description: The properties associated with the detector.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    DetectorResponseProperties:
      type: object
      properties:
        value:
          type: string
          description: A base64 encoded string that represents the content of a detector.
      description: Detector response properties.
    PrivateLinkResource:
      description: Contains information about a private link resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: The properties associated with the private link resource.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          type: string
          title: The group id of the private link resource.
          description: The group id is used to establish the private link connection.
          readOnly: true
        requiredMembers:
          type: array
          items:
            type: string
          title: The list of required members that are used to establish the private link connection.
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          title: The list of required zone names for the private DNS resource name
          readOnly: true
      description: Private link resource properties.
    PrivateEndpointConnection:
      description: Contains information about a private link resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: The properties associated with the private endpoint connection.
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        provisioningState:
          type: string
          readOnly: true
          nullable: false
          title: The provisioning state of the private endpoint connection.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Cancelled
          x-ms-enum:
            name: PrivateEndpointConnectionProvisioningState
            modelAsString: false
            values:
              - value: Creating
                description: The connection is creating.
              - value: Updating
                description: The user has requested that the connection status be updated, but the update operation has not yet completed. You may not reference the connection when connecting the Batch account.
              - value: Deleting
                description: The connection is deleting.
              - value: Succeeded
                description: The connection status is final and is ready for use if Status is Approved.
              - value: Failed
                description: The user requested that the connection be updated and it failed. You may retry the update operation.
              - value: Cancelled
                description: The user has cancelled the connection creation.
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          readOnly: true
          title: The ARM resource identifier of the private endpoint.
        groupIds:
          type: array
          readOnly: true
          items:
            type: string
          title: The group id of the private endpoint connection.
          description: The value has one and only one group id.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          title: The private link service connection state of the private endpoint connection.
      description: Private endpoint connection properties.
    PrivateEndpoint:
      type: object
      properties:
        id:
          type: string
          title: The ARM resource identifier of the private endpoint. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/privateEndpoints/{privateEndpoint}.
          readOnly: true
      description: The private endpoint of the private endpoint connection.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionStatus'
          title: The status for the private endpoint connection of Batch account
        description:
          type: string
          title: Description of the private Connection state
        actionsRequired:
          type: string
          title: Action required on the private connection state
          readOnly: true
      required:
        - status
      description: The private link service connection state of the private endpoint connection
    PrivateLinkServiceConnectionStatus:
      type: string
      title: The status of the Batch private endpoint connection
      enum:
        - Approved
        - Pending
        - Rejected
        - Disconnected
      x-ms-enum:
        name: PrivateLinkServiceConnectionStatus
        modelAsString: false
        values:
          - value: Approved
            description: The private endpoint connection is approved and can be used to access Batch account
          - value: Pending
            description: The private endpoint connection is pending and cannot be used to access Batch account
          - value: Rejected
            description: The private endpoint connection is rejected and cannot be used to access Batch account
          - value: Disconnected
            description: The private endpoint connection is disconnected and cannot be used to access Batch account
    Pool:
      description: Contains information about a pool.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PoolProperties'
          description: The properties associated with the pool.
        identity:
          title: The type of identity used for the Batch Pool.
          description: The type of identity used for the Batch Pool.
          $ref: '#/components/schemas/BatchPoolIdentity'
        id:
          readOnly: true
          type: string
          description: The ID of the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource.
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The ETag of the resource, used for concurrency statements.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags of the resource.
      type: object
    PoolProperties:
      type: object
      properties:
        displayName:
          type: string
          title: The display name for the pool.
          description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        lastModified:
          type: string
          format: date-time
          title: The last modified time of the pool.
          description: This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state.
          readOnly: true
        creationTime:
          type: string
          format: date-time
          title: The creation time of the pool.
          readOnly: true
        provisioningState:
          type: string
          title: The current state of the pool.
          enum:
            - Succeeded
            - Deleting
          x-ms-enum:
            name: PoolProvisioningState
            modelAsString: false
            values:
              - value: Succeeded
                description: The pool is available to run tasks subject to the availability of compute nodes.
              - value: Deleting
                description: The user has requested that the pool be deleted, but the delete operation has not yet completed.
          readOnly: true
        provisioningStateTransitionTime:
          type: string
          format: date-time
          title: The time at which the pool entered its current state.
          readOnly: true
        allocationState:
          type: string
          title: Whether the pool is resizing.
          enum:
            - Steady
            - Resizing
            - Stopping
          x-ms-enum:
            name: AllocationState
            modelAsString: false
            values:
              - value: Steady
                description: The pool is not resizing. There are no changes to the number of nodes in the pool in progress. A pool enters this state when it is created and when no operations are being performed on the pool to change the number of nodes.
              - value: Resizing
                description: The pool is resizing; that is, compute nodes are being added to or removed from the pool.
              - value: Stopping
                description: The pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet been completed.
          readOnly: true
        allocationStateTransitionTime:
          type: string
          format: date-time
          title: The time at which the pool entered its current allocation state.
          readOnly: true
        vmSize:
          type: string
          title: The size of virtual machines in the pool. All VMs in a pool are the same size.
          description: For information about available VM sizes, see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        deploymentConfiguration:
          $ref: '#/components/schemas/DeploymentConfiguration'
          title: This property describes the virtual machines that the pool nodes will be deployed on.
        currentDedicatedNodes:
          type: integer
          format: int32
          title: The number of dedicated compute nodes currently in the pool.
          readOnly: true
        currentLowPriorityNodes:
          type: integer
          format: int32
          title: The number of Spot/low-priority compute nodes currently in the pool.
          readOnly: true
        scaleSettings:
          $ref: '#/components/schemas/ScaleSettings'
          title: Settings which configure the number of nodes in the pool.
        autoScaleRun:
          $ref: '#/components/schemas/AutoScaleRun'
          title: The results and errors from the last execution of the autoscale formula.
          description: This property is set only if the pool automatically scales, i.e. autoScaleSettings are used.
          readOnly: true
        interNodeCommunication:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: InterNodeCommunicationState
            modelAsString: false
            values:
              - value: Enabled
                description: Enable network communication between virtual machines.
              - value: Disabled
                description: Disable network communication between virtual machines.
          title: Whether the pool permits direct communication between nodes.
          description: This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
          title: The network configuration for the pool.
        taskSlotsPerNode:
          type: integer
          format: int32
          default: 1
          title: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool.
          description: The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.
        taskSchedulingPolicy:
          $ref: '#/components/schemas/TaskSchedulingPolicy'
          title: How tasks are distributed across compute nodes in a pool.
          description: If not specified, the default is spread.
        userAccounts:
          type: array
          items:
            $ref: '#/components/schemas/UserAccount'
          x-ms-identifiers:
            - name
          title: The list of user accounts to be created on each node in the pool.
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataItem'
          x-ms-identifiers:
            - name
          title: A list of name-value pairs associated with the pool as metadata.
          description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        startTask:
          $ref: '#/components/schemas/StartTask'
          title: A task specified to run on each compute node as it joins the pool.
          description: In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/CertificateReference'
          title: The list of certificates to be installed on each compute node in the pool.
          description: |-
            For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.

            Warning: This property is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
        applicationPackages:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: The list of application packages to be installed on each compute node in the pool.
          description: Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.
        applicationLicenses:
          type: array
          items:
            type: string
          title: The list of application licenses the Batch service will make available on each compute node in the pool.
          description: The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.
        resizeOperationStatus:
          $ref: '#/components/schemas/ResizeOperationStatus'
          title: Contains details about the current or last completed resize operation.
          readOnly: true
        mountConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/MountConfiguration'
          x-ms-identifiers: []
          title: A list of file systems to mount on each node in the pool.
          description: This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
        targetNodeCommunicationMode:
          title: The desired node communication mode for the pool.
          description: If omitted, the default value is Default.
          $ref: '#/components/schemas/NodeCommunicationMode'
        currentNodeCommunicationMode:
          title: The current state of the pool communication mode.
          $ref: '#/components/schemas/NodeCommunicationMode'
          nullable: true
          x-nullable: true
          readOnly: true
        upgradePolicy:
          $ref: '#/components/schemas/UpgradePolicy'
          title: The upgrade policy for the pool.
        resourceTags:
          type: object
          additionalProperties:
            type: string
          title: The user-specified tags associated with the pool.
          description: The user-defined tags to be associated with the Azure Batch Pool. When specified, these tags are propagated to the backing Azure resources associated with the pool. This property can only be specified when the Batch account was created with the poolAllocationMode property set to 'UserSubscription'.
      description: Pool properties.
    BatchPoolIdentity:
      type: object
      properties:
        type:
          type: string
          description: The type of identity used for the Batch Pool.
          enum:
            - UserAssigned
            - None
          x-ms-enum:
            name: PoolIdentityType
            modelAsString: false
            values:
              - value: UserAssigned
                description: Batch pool has user assigned identities with it.
              - value: None
                description: Batch pool has no identity associated with it. Setting `None` in update pool will remove existing identities.
        userAssignedIdentities:
          type: object
          description: The list of user identities associated with the Batch pool.
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentities'
      description: The identity of the Batch pool, if configured. If the pool identity is updated during update an existing pool, only the new vms which are created after the pool shrinks to 0 will have the updated identities
      required:
        - type
    DeploymentConfiguration:
      type: object
      properties:
        virtualMachineConfiguration:
          $ref: '#/components/schemas/VirtualMachineConfiguration'
          title: The virtual machine configuration for the pool.
      title: Deployment configuration properties.
    ScaleSettings:
      type: object
      properties:
        fixedScale:
          $ref: '#/components/schemas/FixedScaleSettings'
          title: Fixed scale settings for the pool.
          description: This property and autoScale are mutually exclusive and one of the properties must be specified.
        autoScale:
          $ref: '#/components/schemas/AutoScaleSettings'
          title: AutoScale settings for the pool.
          description: This property and fixedScale are mutually exclusive and one of the properties must be specified.
      title: Scale settings for the pool
      description: Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
    AutoScaleSettings:
      type: object
      properties:
        formula:
          type: string
          title: A formula for the desired number of compute nodes in the pool.
          externalDocs:
            url: https://docs.microsoft.com/en-us/azure/batch/batch-automatic-scaling
            description: Create an automatic scaling formula for scaling compute nodes in a Batch pool
        evaluationInterval:
          type: string
          format: duration
          title: The time interval at which to automatically adjust the pool size according to the autoscale formula.
          description: If omitted, the default value is 15 minutes (PT15M).
      required:
        - formula
      title: AutoScale settings for the pool.
    FixedScaleSettings:
      type: object
      properties:
        resizeTimeout:
          type: string
          format: duration
          default: PT15M
          title: The timeout for allocation of compute nodes to the pool.
          description: The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
        targetDedicatedNodes:
          type: integer
          format: int32
          title: The desired number of dedicated compute nodes in the pool.
          description: At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
        targetLowPriorityNodes:
          type: integer
          format: int32
          title: The desired number of Spot/low-priority compute nodes in the pool.
          description: At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
        nodeDeallocationOption:
          title: Determines what to do with a node and its running task(s) if the pool size is decreasing.
          description: If omitted, the default value is Requeue.
          $ref: '#/components/schemas/ComputeNodeDeallocationOption'
          x-ms-mutability:
            - create
            - update
      title: Fixed scale settings for the pool.
    ComputeNodeDeallocationOption:
      type: string
      title: Determines what to do with a node and its running task(s) after it has been selected for deallocation.
      enum:
        - Requeue
        - Terminate
        - TaskCompletion
        - RetainedData
      x-ms-enum:
        name: ComputeNodeDeallocationOption
        modelAsString: false
        values:
          - value: Requeue
            description: Terminate running task processes and requeue the tasks. The tasks will run again when a node is available. Remove nodes as soon as tasks have been terminated.
          - value: Terminate
            description: Terminate running tasks. The tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Remove nodes as soon as tasks have been terminated.
          - value: TaskCompletion
            description: Allow currently running tasks to complete. Schedule no new tasks while waiting. Remove nodes when all tasks have completed.
          - value: RetainedData
            description: Allow currently running tasks to complete, then wait for all task data retention periods to expire. Schedule no new tasks while waiting. Remove nodes when all task retention periods have expired.
    CertificateReference:
      type: object
      properties:
        id:
          type: string
          title: The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.
        storeLocation:
          type: string
          title: The location of the certificate store on the compute node into which to install the certificate.
          description: The default value is currentUser. This property is applicable only for pools configured with Windows compute nodes. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
          enum:
            - CurrentUser
            - LocalMachine
          x-ms-enum:
            name: CertificateStoreLocation
            modelAsString: false
            values:
              - value: CurrentUser
                description: Certificates should be installed to the CurrentUser certificate store.
              - value: LocalMachine
                description: Certificates should be installed to the LocalMachine certificate store.
        storeName:
          type: string
          title: The name of the certificate store on the compute node into which to install the certificate.
          description: 'This property is applicable only for pools configured with Windows compute nodes. Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.'
        visibility:
          type: array
          items:
            type: string
            nullable: false
            enum:
              - StartTask
              - Task
              - RemoteUser
            x-ms-enum:
              name: CertificateVisibility
              modelAsString: false
              values:
                - value: StartTask
                  description: The certificate should be visible to the user account under which the start task is run. Note that if AutoUser Scope is Pool for both the StartTask and a Task, this certificate will be visible to the Task as well.
                - value: Task
                  description: The certificate should be visible to the user accounts under which job tasks are run.
                - value: RemoteUser
                  description: The certificate should be visible to the user accounts under which users remotely access the node.
          title: Which user accounts on the compute node should have access to the private data of the certificate.
      required:
        - id
      title: A reference to a certificate to be installed on compute nodes in a pool. This must exist inside the same account as the pool.
      description: 'Warning: This object is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.'
    ApplicationPackageReference:
      type: object
      properties:
        id:
          type: string
          title: The ID of the application package to install. This must be inside the same batch account as the pool. This can either be a reference to a specific version or the default version if one exists.
        version:
          type: string
          title: The version of the application to deploy. If omitted, the default version is deployed.
          description: If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409.
      title: Link to an application package inside the batch account
      required:
        - id
    ResizeError:
      type: object
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ResizeError'
          x-ms-identifiers:
            - code
          title: Additional details about the error.
      title: An error that occurred when resizing a pool.
      required:
        - code
        - message
    AutoScaleRunError:
      type: object
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        details:
          type: array
          items:
            $ref: '#/components/schemas/AutoScaleRunError'
          x-ms-identifiers:
            - code
          title: Additional details about the error.
      title: An error that occurred when autoscaling a pool.
      required:
        - code
        - message
    AutoScaleRun:
      type: object
      properties:
        evaluationTime:
          type: string
          format: date-time
          title: The time at which the autoscale formula was last evaluated.
        results:
          type: string
          title: The final values of all variables used in the evaluation of the autoscale formula.
          description: Each variable value is returned in the form $variable=value, and variables are separated by semicolons.
        error:
          $ref: '#/components/schemas/AutoScaleRunError'
          title: Details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.
      required:
        - evaluationTime
      title: The results and errors from an execution of a pool autoscale formula.
    NodeCommunicationMode:
      type: string
      title: Determines how a pool communicates with the Batch service.
      enum:
        - Default
        - Classic
        - Simplified
      x-ms-enum:
        name: NodeCommunicationMode
        modelAsString: false
        values:
          - value: Default
            description: The node communication mode is automatically set by the Batch service.
          - value: Classic
            description: Nodes using the Classic communication mode require inbound TCP communication on ports 29876 and 29877 from the "BatchNodeManagement.{region}" service tag and outbound TCP communication on port 443 to the "Storage.region" and "BatchNodeManagement.{region}" service tags.
          - value: Simplified
            description: Nodes using the Simplified communication mode require outbound TCP communication on port 443 to the "BatchNodeManagement.{region}" service tag. No open inbound ports are required.
    ServiceArtifactReference:
      type: object
      properties:
        id:
          type: string
          title: The service artifact reference id of ServiceArtifactReference
          description: The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
      required:
        - id
      description: Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version.
    VirtualMachineConfiguration:
      type: object
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          title: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use.
        nodeAgentSkuId:
          type: string
          title: The SKU of the Batch node agent to be provisioned on compute nodes in the pool.
          description: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation.
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          title: Windows operating system settings on the virtual machine.
          description: This property must not be specified if the imageReference specifies a Linux OS image.
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/DataDisk'
          x-ms-identifiers:
            - lun
          title: The configuration for data disks attached to the compute nodes in the pool.
          description: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.
        licenseType:
          type: string
          title: The type of on-premises license to be used when deploying the operating system.
          description: |
            This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:

             Windows_Server - The on-premises license is for Windows Server.
             Windows_Client - The on-premises license is for Windows Client.
        containerConfiguration:
          $ref: '#/components/schemas/ContainerConfiguration'
          title: The container configuration for the pool.
          description: If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it.
        diskEncryptionConfiguration:
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
          title: The disk encryption configuration for the pool.
          description: If specified, encryption is performed on each node in the pool during node provisioning.
        nodePlacementConfiguration:
          $ref: '#/components/schemas/NodePlacementConfiguration'
          title: The node placement configuration for the pool.
          description: This configuration will specify rules on how nodes in the pool will be physically allocated.
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/VMExtension'
          x-ms-identifiers:
            - name
            - type
          title: The virtual machine extension for the pool.
          description: If specified, the extensions mentioned in this configuration will be installed on each node.
        osDisk:
          $ref: '#/components/schemas/OSDisk'
          title: Settings for the operating system disk of the Virtual Machine.
          description: Contains configuration for ephemeral OSDisk settings.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          title: Specifies the security profile settings for the virtual machine or virtual machine scale set.
        serviceArtifactReference:
          $ref: '#/components/schemas/ServiceArtifactReference'
          title: Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version.
          description: The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
      required:
        - imageReference
        - nodeAgentSkuId
      title: The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.
    ContainerRegistry:
      type: object
      properties:
        username:
          type: string
          x-ms-client-name: userName
          title: The user name to log into the registry server.
        password:
          type: string
          title: The password to log into the registry server.
          x-ms-secret: true
        registryServer:
          type: string
          title: The registry URL.
          description: If omitted, the default is "docker.io".
        identityReference:
          title: The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
          $ref: '#/components/schemas/ComputeNodeIdentityReference'
      title: A private container registry.
    DiskEncryptionConfiguration:
      type: object
      properties:
        targets:
          type: array
          items:
            type: string
            nullable: false
            title: The disks to encrypt on each compute node.
            description: If omitted, no disks on the compute nodes in the pool will be encrypted.
            enum:
              - OsDisk
              - TemporaryDisk
            x-ms-enum:
              name: DiskEncryptionTarget
              modelAsString: false
              values:
                - value: OsDisk
                  description: The OS Disk on the compute node is encrypted.
                  name: OsDisk
                - value: TemporaryDisk
                  description: The temporary disk on the compute node is encrypted. On Linux this encryption applies to other partitions (such as those on mounted data disks) when encryption occurs at boot time.
                  name: TemporaryDisk
          title: The list of disk targets Batch Service will encrypt on the compute node
          description: On Linux pool, only "TemporaryDisk" is supported; on Windows pool, "OsDisk" and "TemporaryDisk" must be specified.
      description: The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Azure Compute Gallery Image.
    ContainerConfiguration:
      type: object
      properties:
        type:
          type: string
          title: The container technology to be used.
          enum:
            - DockerCompatible
            - CriCompatible
          x-ms-enum:
            name: ContainerType
            modelAsString: true
            values:
              - value: DockerCompatible
                description: A Docker compatible container technology will be used to launch the containers.
              - value: CriCompatible
                description: A CRI based technology will be used to launch the containers.
        containerImageNames:
          type: array
          items:
            type: string
          title: The collection of container image names.
          description: This is the full image reference, as would be specified to "docker pull". An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry.
        containerRegistries:
          type: array
          items:
            $ref: '#/components/schemas/ContainerRegistry'
          x-ms-identifiers:
            - registryServer
          title: Additional private registries from which containers can be pulled.
          description: If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.
      required:
        - type
      title: The configuration for container-enabled pools.
    NodePlacementPolicyType:
      type: string
      title: The placement policy for allocating nodes in the pool.
      description: The default value is regional.
      enum:
        - Regional
        - Zonal
      x-ms-enum:
        name: NodePlacementPolicyType
        modelAsString: false
        values:
          - value: Regional
            description: All nodes in the pool will be allocated in the same region.
          - value: Zonal
            description: Nodes in the pool will be spread across different zones with best effort balancing.
            name: Zonal
    NodePlacementConfiguration:
      title: Node placement configuration for batch pools.
      description: Allocation configuration used by Batch Service to provision the nodes.
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/NodePlacementPolicyType'
          title: Node placement Policy type on Batch Pools.
          description: Allocation policy used by Batch Service to provision the nodes. If not specified, Batch will use the regional policy.
    VMExtension:
      type: object
      properties:
        name:
          type: string
          title: The name of the virtual machine extension.
        publisher:
          type: string
          title: The name of the extension handler publisher.
        type:
          type: string
          title: The type of the extensions.
        typeHandlerVersion:
          type: string
          title: The version of script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        settings:
          type: object
          title: JSON formatted public settings for the extension.
        protectedSettings:
          x-ms-secret: true
          type: object
          description: 'The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. '
        provisionAfterExtensions:
          type: array
          items:
            type: string
          title: The collection of extension names.
          description: Collection of extension names after which this extension needs to be provisioned.
      required:
        - name
        - publisher
        - type
      title: The configuration for virtual machine extensions.
    WindowsConfiguration:
      type: object
      properties:
        enableAutomaticUpdates:
          type: boolean
          title: Whether automatic updates are enabled on the virtual machine.
          description: If omitted, the default value is true.
      title: Windows operating system settings to apply to the virtual machine.
    ImageReference:
      type: object
      properties:
        publisher:
          type: string
          title: The publisher of the Azure Virtual Machines Marketplace image.
          description: For example, Canonical or MicrosoftWindowsServer.
        offer:
          type: string
          title: The offer type of the Azure Virtual Machines Marketplace image.
          description: For example, UbuntuServer or WindowsServer.
        sku:
          type: string
          title: The SKU of the Azure Virtual Machines Marketplace image.
          description: For example, 18.04-LTS or 2022-datacenter.
        version:
          type: string
          title: The version of the Azure Virtual Machines Marketplace image.
          description: A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
        id:
          type: string
          title: The ARM resource identifier of the Azure Compute Gallery Image. Compute Nodes in the Pool will be created using this Image Id. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionId}.
          description: This property is mutually exclusive with other properties. The Azure Compute Gallery Image must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
        sharedGalleryImageId:
          type: string
          title: The shared gallery image unique identifier
          description: This property is mutually exclusive with other properties and can be fetched from shared gallery image GET call.
        communityGalleryImageId:
          type: string
          title: The community gallery image unique identifier
          description: This property is mutually exclusive with other properties and can be fetched from community gallery image GET call.
      title: A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation.
    DataDisk:
      type: object
      properties:
        lun:
          type: integer
          format: int32
          title: The logical unit number.
          description: The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.
        caching:
          $ref: '#/components/schemas/CachingType'
          title: The type of caching to be enabled for the data disks.
          description: |-
            Values are:

             none - The caching mode for the disk is not enabled.
             readOnly - The caching mode for the disk is read only.
             readWrite - The caching mode for the disk is read and write.

             The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
        diskSizeGB:
          type: integer
          format: int32
          title: The initial disk size in GB when creating new data disk.
        storageAccountType:
          title: The storage account type to be used for the data disk.
          description: |-
            If omitted, the default is "Standard_LRS". Values are:

             Standard_LRS - The data disk should use standard locally redundant storage.
             Premium_LRS - The data disk should use premium locally redundant storage.
          $ref: '#/components/schemas/StorageAccountType'
      required:
        - lun
        - diskSizeGB
      description: Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them.
    TaskSchedulingPolicy:
      type: object
      properties:
        nodeFillType:
          type: string
          default: Spread
          title: How tasks should be distributed across compute nodes.
          enum:
            - Spread
            - Pack
          x-ms-enum:
            name: ComputeNodeFillType
            modelAsString: false
            values:
              - value: Spread
                description: Tasks should be assigned evenly across all nodes in the pool.
              - value: Pack
                description: As many tasks as possible (taskSlotsPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool.
      required:
        - nodeFillType
      title: Specifies how tasks should be distributed across compute nodes.
    LinuxUserConfiguration:
      type: object
      properties:
        uid:
          type: integer
          format: int32
          title: The user ID of the user account.
          description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
        gid:
          type: integer
          format: int32
          title: The group ID for the user account.
          description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
        sshPrivateKey:
          type: string
          title: The SSH private key for the user account.
          description: The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
          x-ms-secret: true
      title: Properties used to create a user account on a Linux node.
    WindowsUserConfiguration:
      type: object
      properties:
        loginMode:
          type: string
          title: Login mode for user
          description: Specifies login mode for the user. The default value is Interactive.
          enum:
            - Batch
            - Interactive
          x-ms-enum:
            name: LoginMode
            modelAsString: false
            values:
              - value: Batch
                description: The LOGON32_LOGON_BATCH Win32 login mode. The batch login mode is recommended for long running parallel processes.
              - value: Interactive
                description: The LOGON32_LOGON_INTERACTIVE Win32 login mode. Some applications require having permissions associated with the interactive login mode. If this is the case for an application used in your task, then this option is recommended.
      title: Properties used to create a user account on a Windows node.
    UserAccount:
      type: object
      properties:
        name:
          type: string
          title: The name of the user account. Names can contain any Unicode characters up to a maximum length of 20.
        password:
          type: string
          title: The password for the user account.
          x-ms-secret: true
        elevationLevel:
          title: The elevation level of the user account.
          description: nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
          $ref: '#/components/schemas/ElevationLevel'
        linuxUserConfiguration:
          title: The Linux-specific user configuration for the user account.
          description: This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
          $ref: '#/components/schemas/LinuxUserConfiguration'
        windowsUserConfiguration:
          title: The Windows-specific user configuration for the user account.
          description: This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
          $ref: '#/components/schemas/WindowsUserConfiguration'
      required:
        - name
        - password
      title: Properties used to create a user on an Azure Batch node.
    StartTask:
      type: object
      properties:
        commandLine:
          type: string
          title: The command line of the start task.
          description: The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. Required if any other properties of the startTask are specified.
        resourceFiles:
          type: array
          items:
            $ref: '#/components/schemas/ResourceFile'
          x-ms-identifiers:
            - httpUrl
          title: A list of files that the Batch service will download to the compute node before running the command line.
        environmentSettings:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          x-ms-identifiers:
            - name
          title: A list of environment variable settings for the start task.
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
          title: The user identity under which the start task runs.
          description: If omitted, the task runs as a non-administrative user unique to the task.
        maxTaskRetryCount:
          type: integer
          format: int32
          default: 0
          title: The maximum number of times the task may be retried.
          description: The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit. Default is 0
        waitForSuccess:
          type: boolean
          title: Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.
          description: If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is true.
        containerSettings:
          $ref: '#/components/schemas/TaskContainerSettings'
          title: The settings for the container under which the start task runs.
          description: When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
      title: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
      description: In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.
    TaskContainerSettings:
      type: object
      properties:
        containerRunOptions:
          type: string
          title: Additional options to the container create command.
          description: These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
        imageName:
          type: string
          title: The image to use to create the container in which the task will run.
          description: This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
        registry:
          $ref: '#/components/schemas/ContainerRegistry'
          title: The private registry which contains the container image.
          description: This setting can be omitted if was already provided at pool creation.
        workingDirectory:
          type: string
          title: A flag to indicate where the container task working directory is. The default is 'taskWorkingDirectory'.
          enum:
            - TaskWorkingDirectory
            - ContainerImageDefault
          x-ms-enum:
            name: ContainerWorkingDirectory
            modelAsString: false
            values:
              - value: TaskWorkingDirectory
                description: Use the standard Batch service task working directory, which will contain the Task resource files populated by Batch.
              - value: ContainerImageDefault
                description: Using container image defined working directory. Beware that this directory will not contain the resource files downloaded by Batch.
        containerHostBatchBindMounts:
          type: array
          items:
            $ref: '#/components/schemas/ContainerHostBatchBindMountEntry'
          title: The paths you want to mounted to container task.
          description: If this array is null or be not present, container task will mount entire temporary disk drive in windows (or AZ_BATCH_NODE_ROOT_DIR in Linux). It won't' mount any data paths into container if this array is set as empty.
      required:
        - imageName
      title: The container settings for a task.
    ResourceFile:
      type: object
      properties:
        autoStorageContainerName:
          type: string
          title: The storage container name in the auto storage account.
          description: The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.
        storageContainerUrl:
          type: string
          title: The URL of the blob container within Azure Blob Storage.
          description: 'The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed identity with read and list permissions, or set the ACL for the container to allow public access.'
        httpUrl:
          type: string
          title: The URL of the file to download.
          description: 'The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, use a managed identity with read permission, or set the ACL for the blob or its container to allow public access.'
        blobPrefix:
          type: string
          title: The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded.
          description: The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
        filePath:
          type: string
          title: The location on the compute node to which to download the file, relative to the task's working directory.
          description: If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').
        fileMode:
          type: string
          title: The file permission mode attribute in octal format.
          description: This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
        identityReference:
          title: The reference to the user assigned identity to use to access Azure Blob Storage specified by storageContainerUrl or httpUrl
          $ref: '#/components/schemas/ComputeNodeIdentityReference'
      title: A single file or multiple files to be downloaded to a compute node.
    EnvironmentSetting:
      type: object
      properties:
        name:
          type: string
          title: The name of the environment variable.
        value:
          type: string
          title: The value of the environment variable.
      required:
        - name
      title: An environment variable to be set on a task process.
    UserIdentity:
      type: object
      properties:
        userName:
          type: string
          title: The name of the user identity under which the task is run.
          description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        autoUser:
          $ref: '#/components/schemas/AutoUserSpecification'
          title: The auto user under which the task is run.
          description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
      title: The definition of the user identity under which the task is run.
      description: Specify either the userName or autoUser property, but not both.
    UserAssignedIdentities:
      type: object
      description: The list of associated user identities.
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of user assigned identity.
        clientId:
          readOnly: true
          type: string
          description: The client id of user assigned identity.
    ComputeNodeIdentityReference:
      type: object
      properties:
        resourceId:
          type: string
          description: The ARM resource id of the user assigned identity.
      description: The reference to a user assigned identity associated with the Batch pool which a compute node will use.
    AutoUserSpecification:
      type: object
      properties:
        scope:
          type: string
          title: The scope for the auto user
          description: The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.
          enum:
            - Task
            - Pool
          x-ms-enum:
            name: AutoUserScope
            modelAsString: false
            values:
              - value: Task
                description: Specifies that the service should create a new user for the task.
              - value: Pool
                description: Specifies that the task runs as the common auto user account which is created on every node in a pool.
        elevationLevel:
          title: The elevation level of the auto user.
          description: The default value is nonAdmin.
          $ref: '#/components/schemas/ElevationLevel'
      title: Specifies the parameters for the auto user that runs a task on the Batch service.
    ElevationLevel:
      type: string
      title: The elevation level of the user.
      enum:
        - NonAdmin
        - Admin
      x-ms-enum:
        name: ElevationLevel
        modelAsString: false
        values:
          - value: NonAdmin
            description: The user is a standard user without elevated access.
          - value: Admin
            description: The user is a user with elevated access and operates with full Administrator permissions.
    StorageAccountType:
      type: string
      title: The storage account type for use in creating data disks or OS disk.
      enum:
        - Standard_LRS
        - Premium_LRS
        - StandardSSD_LRS
      x-ms-enum:
        name: StorageAccountType
        modelAsString: false
        values:
          - value: Standard_LRS
            description: The data disk / OS disk should use standard locally redundant storage.
          - value: Premium_LRS
            description: The data disk / OS disk should use premium locally redundant storage.
          - value: StandardSSD_LRS
            description: The data disk / OS disk should use standard SSD locally redundant storage.
    CachingType:
      type: string
      title: The type of caching to enable for the disk.
      enum:
        - None
        - ReadOnly
        - ReadWrite
      x-ms-enum:
        name: CachingType
        modelAsString: false
        values:
          - value: None
            description: The caching mode for the disk is not enabled.
          - value: ReadOnly
            description: The caching mode for the disk is read only.
          - value: ReadWrite
            description: The caching mode for the disk is read and write.
    ContainerHostDataPath:
      type: string
      title: The paths which will be mounted to container task's container.
      enum:
        - Shared
        - Startup
        - VfsMounts
        - Task
        - JobPrep
        - Applications
      x-ms-enum:
        name: ContainerHostDataPath
        modelAsString: true
        values:
          - value: Shared
            description: The path for multi-instances task to shared their files.
          - value: Startup
            description: The path for start task.
          - value: VfsMounts
            description: The path contains all virtual file systems are mounted on this node.
          - value: Task
            description: The task path.
          - value: JobPrep
            description: The job-prep task path.
          - value: Applications
            description: The applications path.
    ContainerHostBatchBindMountEntry:
      type: object
      title: The entry of path and mount mode you want to mount into task container.
      properties:
        source:
          $ref: '#/components/schemas/ContainerHostDataPath'
          title: The path which be mounted to container customer can select.
        isReadOnly:
          type: boolean
          title: Mount this source path as read-only mode or not. Default value is false (read/write mode).
          description: For Linux, if you mount this path as a read/write mode, this does not mean that all users in container have the read/write access for the path, it depends on the access in host VM. If this path is mounted read-only, all users within the container will not be able to modify the path.
    DiffDiskPlacement:
      type: string
      title: Specifies the ephemeral disk placement for operating system disk for all VMs in the pool.
      description: This property can be used by user in the request to choose which location the operating system should be in. e.g., cache disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer to Ephemeral OS disk size requirements for Windows VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements
      enum:
        - CacheDisk
      x-ms-enum:
        name: DiffDiskPlacement
        modelAsString: false
        values:
          - value: CacheDisk
            description: The Ephemeral OS Disk is stored on the VM cache.
            name: CacheDisk
    DiffDiskSettings:
      type: object
      properties:
        placement:
          $ref: '#/components/schemas/DiffDiskPlacement'
          title: Specifies the ephemeral disk placement for operating system disk for all VMs in the pool.
          description: This property can be used by user in the request to choose which location the operating system should be in. e.g., cache disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer to Ephemeral OS disk size requirements for Windows VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements.
      title: Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
    OSDisk:
      type: object
      properties:
        ephemeralOSDiskSettings:
          $ref: '#/components/schemas/DiffDiskSettings'
          title: Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
        caching:
          $ref: '#/components/schemas/CachingType'
          title: 'Specifies the caching requirements. Possible values are: None, ReadOnly, ReadWrite. The default values are: None for Standard storage. ReadOnly for Premium storage.'
        managedDisk:
          $ref: '#/components/schemas/ManagedDisk'
          title: The managed disk parameters.
        diskSizeGB:
          type: integer
          format: int32
          title: The initial disk size in GB when creating new OS disk.
        writeAcceleratorEnabled:
          type: boolean
          title: Specifies whether writeAccelerator should be enabled or disabled on the disk.
      title: Settings for the operating system disk of the virtual machine.
    IPAddressProvisioningType:
      type: string
      title: The provisioning type for Public IP Addresses for the Batch Pool.
      enum:
        - BatchManaged
        - UserManaged
        - NoPublicIPAddresses
      x-ms-enum:
        name: IPAddressProvisioningType
        modelAsString: false
        values:
          - value: BatchManaged
            description: A public IP will be created and managed by Batch. There may be multiple public IPs depending on the size of the Pool.
          - value: UserManaged
            description: Public IPs are provided by the user and will be used to provision the Compute Nodes.
          - value: NoPublicIPAddresses
            description: No public IP Address will be created for the Compute Nodes in the Pool.
    PublicIPAddressConfiguration:
      type: object
      properties:
        provision:
          $ref: '#/components/schemas/IPAddressProvisioningType'
          title: The provisioning type for Public IP Addresses for the pool
          description: The default value is BatchManaged
        ipAddressIds:
          type: array
          items:
            type: string
          title: The list of public IPs which the Batch service will use when provisioning Compute Nodes.
          description: 'The number of IPs specified here limits the maximum size of the Pool - 100 dedicated nodes or 100 Spot/low-priority nodes can be allocated for each public IP. For example, a pool needing 250 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.'
      description: The public IP Address configuration of the networking configuration of a Pool.
    NetworkConfiguration:
      type: object
      properties:
        subnetId:
          type: string
          title: The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
          description: 'The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn''t have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The ''MicrosoftAzureBatch'' service principal must have the ''Classic Virtual Machine Contributor'' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. Enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration'
          externalDocs:
            url: https://azure.microsoft.com/en-us/documentation/articles/role-based-access-built-in-roles/#classic-virtual-machine-contributor
            description: Setting up RBAC for Azure Batch VNets
        dynamicVnetAssignmentScope:
          type: string
          title: The scope of dynamic vnet assignment.
          default: none
          enum:
            - none
            - job
          x-ms-enum:
            name: DynamicVNetAssignmentScope
            modelAsString: false
            values:
              - value: none
                description: No dynamic VNet assignment is enabled.
              - value: job
                description: Dynamic VNet assignment is done per-job. If this value is set, the network configuration subnet ID must also be set. This feature requires approval before use, please contact support
        endpointConfiguration:
          $ref: '#/components/schemas/PoolEndpointConfiguration'
          title: The configuration for endpoints on compute nodes in the Batch pool.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/PublicIPAddressConfiguration'
          title: The Public IPAddress configuration for Compute Nodes in the Batch Pool.
        enableAcceleratedNetworking:
          type: boolean
          title: Whether this pool should enable accelerated networking.
          description: 'Accelerated networking enables single root I/O virtualization (SR-IOV) to a VM, which may lead to improved networking performance. For more details, see: https://learn.microsoft.com/azure/virtual-network/accelerated-networking-overview.'
          externalDocs:
            url: https://learn.microsoft.com/azure/virtual-network/accelerated-networking-overview
            description: Create a VM with Accelerated Networking.
      description: The network configuration for a pool.
    MetadataItem:
      type: object
      properties:
        name:
          type: string
          title: The name of the metadata item.
        value:
          type: string
          title: The value of the metadata item.
      required:
        - name
        - value
      title: A name-value pair associated with a Batch service resource.
      description: The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
    ResizeOperationStatus:
      type: object
      properties:
        targetDedicatedNodes:
          type: integer
          format: int32
          title: The desired number of dedicated compute nodes in the pool.
        targetLowPriorityNodes:
          type: integer
          format: int32
          title: The desired number of Spot/low-priority compute nodes in the pool.
        resizeTimeout:
          type: string
          format: duration
          title: The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.
          description: The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
        nodeDeallocationOption:
          title: Determines what to do with a node and its running task(s) if the pool size is decreasing.
          description: The default value is requeue.
          $ref: '#/components/schemas/ComputeNodeDeallocationOption'
        startTime:
          type: string
          format: date-time
          title: The time when this resize operation was started.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResizeError'
          x-ms-identifiers:
            - code
          title: Details of any errors encountered while performing the last resize on the pool.
          description: This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.
      title: Details about the current or last completed resize operation.
      description: Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady).
    PoolEndpointConfiguration:
      type: object
      properties:
        inboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatPool'
          x-ms-identifiers:
            - name
          title: A list of inbound NAT pools that can be used to address specific ports on an individual compute node externally.
          description: The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
      required:
        - inboundNatPools
      title: The endpoint configuration for a pool.
    InboundNatPool:
      type: object
      properties:
        name:
          type: string
          title: The name of the endpoint.
          description: The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.
        protocol:
          type: string
          title: The protocol of the endpoint.
          enum:
            - TCP
            - UDP
          x-ms-enum:
            name: InboundEndpointProtocol
            modelAsString: false
            values:
              - value: TCP
                description: Use TCP for the endpoint.
              - value: UDP
                description: Use UDP for the endpoint.
        backendPort:
          type: integer
          format: int32
          title: The port number on the compute node.
          description: This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
        frontendPortRangeStart:
          type: integer
          format: int32
          title: The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.
          description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
        frontendPortRangeEnd:
          type: integer
          format: int32
          title: The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.
          description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
        networkSecurityGroupRules:
          type: array
          title: A list of network security group rules that will be applied to the endpoint.
          description: The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
          items:
            $ref: '#/components/schemas/NetworkSecurityGroupRule'
          x-ms-identifiers: []
      required:
        - name
        - protocol
        - backendPort
        - frontendPortRangeStart
        - frontendPortRangeEnd
      title: A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.
    NetworkSecurityGroupRule:
      type: object
      properties:
        priority:
          type: integer
          format: int32
          title: The priority for this rule.
          description: Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
        access:
          type: string
          title: The action that should be taken for a specified IP address, subnet range or tag.
          enum:
            - Allow
            - Deny
          x-ms-enum:
            name: NetworkSecurityGroupRuleAccess
            modelAsString: false
            values:
              - value: Allow
                description: Allow access.
              - value: Deny
                description: Deny access.
        sourceAddressPrefix:
          type: string
          title: The source address prefix or tag to match for the rule.
          description: Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
        sourcePortRanges:
          type: array
          items:
            type: string
          title: The source port ranges to match for the rule.
          description: Valid values are '*' (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. 100-200). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be *.
      required:
        - priority
        - access
        - sourceAddressPrefix
      title: A network security group rule to apply to an inbound endpoint.
    ListPrivateLinkResourcesResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
          description: The collection of returned private link resources.
        nextLink:
          type: string
          description: The continuation token.
      description: Values returned by the List operation.
    ListPrivateEndpointConnectionsResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: The collection of returned private endpoint connection.
        nextLink:
          type: string
          description: The continuation token.
      description: Values returned by the List operation.
    ListPoolsResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Pool'
          description: The collection of returned pools.
        nextLink:
          type: string
          description: The continuation token.
      description: Values returned by the List operation.
    CloudError:
      type: object
      x-ms-external: true
      properties:
        error:
          description: The body of the error response.
          $ref: '#/components/schemas/CloudErrorBody'
      description: An error response from the Batch service.
    CloudErrorBody:
      type: object
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers:
            - message
            - target
          description: A list of additional details about the error.
      description: An error response from the Batch service.
    SkuCapability:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the feature.
        value:
          type: string
          readOnly: true
          description: The value of the feature.
      description: A SKU capability, such as the number of cores.
    SupportedSku:
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the SKU.
        familyName:
          readOnly: true
          type: string
          description: The family name of the SKU.
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SkuCapability'
          x-ms-identifiers:
            - name
          description: A collection of capabilities which this SKU supports.
        batchSupportEndOfLife:
          type: string
          readOnly: true
          format: date-time
          description: The time when Azure Batch service will retire this SKU.
      description: Describes a Batch supported SKU.
    SupportedSkusResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SupportedSku'
          x-ms-identifiers:
            - name
          description: The list of SKUs available for the Batch service in the location.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      required:
        - value
      description: The Batch List supported SKUs operation response.
    CheckNameAvailabilityParameters:
      type: object
      properties:
        name:
          type: string
          description: The name to check for availability
        type:
          type: string
          enum:
            - Microsoft.Batch/batchAccounts
          x-ms-enum:
            name: ResourceType
            modelAsString: false
            values:
              - value: Microsoft.Batch/batchAccounts
                description: The Batch account resource type.
                name: BatchAccounts
          description: The resource type.
      required:
        - name
        - type
      description: Parameters for a check name availability request.
    CheckNameAvailabilityResult:
      type: object
      properties:
        nameAvailable:
          readOnly: true
          type: boolean
          description: Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.
        reason:
          readOnly: true
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: NameAvailabilityReason
            modelAsString: false
            values:
              - value: Invalid
                description: The requested name is invalid.
              - value: AlreadyExists
                description: The requested name is already in use.
          description: Gets the reason that a Batch account name could not be used. The Reason element is only returned if NameAvailable is false.
        message:
          readOnly: true
          type: string
          description: Gets an error message explaining the Reason value in more detail.
      description: The CheckNameAvailability operation response.
    MountConfiguration:
      type: object
      properties:
        azureBlobFileSystemConfiguration:
          $ref: '#/components/schemas/AzureBlobFileSystemConfiguration'
          title: The Azure Storage Container to mount using blob FUSE on each node.
          description: This property is mutually exclusive with all other properties.
        nfsMountConfiguration:
          $ref: '#/components/schemas/NFSMountConfiguration'
          title: The NFS file system to mount on each node.
          description: This property is mutually exclusive with all other properties.
        cifsMountConfiguration:
          $ref: '#/components/schemas/CIFSMountConfiguration'
          title: The CIFS/SMB file system to mount on each node.
          description: This property is mutually exclusive with all other properties.
        azureFileShareConfiguration:
          $ref: '#/components/schemas/AzureFileShareConfiguration'
          title: The Azure File Share to mount on each node.
          description: This property is mutually exclusive with all other properties.
      title: The file system to mount on each node.
    AzureBlobFileSystemConfiguration:
      type: object
      properties:
        accountName:
          type: string
          title: The Azure Storage Account name.
        containerName:
          type: string
          title: The Azure Blob Storage Container name.
        accountKey:
          type: string
          title: The Azure Storage Account key.
          description: This property is mutually exclusive with both sasKey and identity; exactly one must be specified.
          x-ms-secret: true
        sasKey:
          type: string
          title: The Azure Storage SAS token.
          description: This property is mutually exclusive with both accountKey and identity; exactly one must be specified.
          x-ms-secret: true
        blobfuseOptions:
          type: string
          title: Additional command line options to pass to the mount command.
          description: These are 'net use' options in Windows and 'mount' options in Linux.
        relativeMountPath:
          type: string
          title: The relative path on the compute node where the file system will be mounted
          description: All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        identityReference:
          title: The reference to the user assigned identity to use to access containerName
          description: This property is mutually exclusive with both accountKey and sasKey; exactly one must be specified.
          $ref: '#/components/schemas/ComputeNodeIdentityReference'
      required:
        - accountName
        - containerName
        - relativeMountPath
      title: Information used to connect to an Azure Storage Container using Blobfuse.
    NFSMountConfiguration:
      type: object
      properties:
        source:
          type: string
          title: The URI of the file system to mount.
        relativeMountPath:
          type: string
          title: The relative path on the compute node where the file system will be mounted
          description: All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        mountOptions:
          type: string
          title: Additional command line options to pass to the mount command.
          description: These are 'net use' options in Windows and 'mount' options in Linux.
      required:
        - source
        - relativeMountPath
      title: Information used to connect to an NFS file system.
    CIFSMountConfiguration:
      type: object
      properties:
        userName:
          type: string
          title: The user to use for authentication against the CIFS file system.
        source:
          type: string
          title: The URI of the file system to mount.
        relativeMountPath:
          type: string
          title: The relative path on the compute node where the file system will be mounted
          description: All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        mountOptions:
          type: string
          title: Additional command line options to pass to the mount command.
          description: These are 'net use' options in Windows and 'mount' options in Linux.
        password:
          type: string
          title: The password to use for authentication against the CIFS file system.
          x-ms-secret: true
      required:
        - userName
        - source
        - password
        - relativeMountPath
      title: Information used to connect to a CIFS file system.
    AzureFileShareConfiguration:
      type: object
      properties:
        accountName:
          type: string
          title: The Azure Storage account name.
        azureFileUrl:
          type: string
          title: The Azure Files URL.
          description: This is of the form 'https://{account}.file.core.windows.net/'.
        accountKey:
          type: string
          title: The Azure Storage account key.
          x-ms-secret: true
        relativeMountPath:
          type: string
          title: The relative path on the compute node where the file system will be mounted
          description: All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        mountOptions:
          type: string
          title: Additional command line options to pass to the mount command.
          description: These are 'net use' options in Windows and 'mount' options in Linux.
      required:
        - accountName
        - azureFileUrl
        - relativeMountPath
        - accountKey
      title: Information used to connect to an Azure Fileshare.
    OutboundEnvironmentEndpointCollection:
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/OutboundEnvironmentEndpoint'
          x-ms-identifiers: []
          description: The collection of outbound network dependency endpoints returned by the listing operation.
        nextLink:
          type: string
          description: The continuation token.
      description: Values returned by the List operation.
    OutboundEnvironmentEndpoint:
      type: object
      properties:
        category:
          type: string
          readOnly: true
          description: The type of service that the Batch service connects to.
        endpoints:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/EndpointDependency'
          x-ms-identifiers:
            - domainName
          description: The endpoints for this service to which the Batch service makes outbound calls.
      description: A collection of related endpoints from the same service for which the Batch service requires outbound access.
    EndpointDependency:
      type: object
      properties:
        domainName:
          type: string
          readOnly: true
          description: The domain name of the dependency. Domain names may be fully qualified or may contain a * wildcard.
        description:
          type: string
          readOnly: true
          description: Human-readable supplemental information about the dependency and when it is applicable.
        endpointDetails:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/EndpointDetail'
          x-ms-identifiers:
            - port
          description: The list of connection details for this endpoint.
      description: A domain name and connection details used to access a dependency.
    EndpointDetail:
      type: object
      properties:
        port:
          type: integer
          format: int32
          readOnly: true
          description: The port an endpoint is connected to.
      description: Details about the connection between the Batch service and the endpoint.
    ManagedDisk:
      type: object
      properties:
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          title: The storage account type for managed disk.
        securityProfile:
          $ref: '#/components/schemas/VMDiskSecurityProfile'
          title: Specifies the security profile for the managed disk.
    SecurityProfile:
      type: object
      properties:
        securityType:
          type: string
          title: Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings.
          enum:
            - trustedLaunch
            - confidentialVM
          x-ms-enum:
            name: SecurityTypes
            modelAsString: false
            values:
              - value: trustedLaunch
                description: Trusted launch protects against advanced and persistent attack techniques.
              - value: confidentialVM
                description: Azure confidential computing offers confidential VMs are for tenants with high security and confidentiality requirements. These VMs provide a strong, hardware-enforced boundary to help meet your security needs. You can use confidential VMs for migrations without making changes to your code, with the platform protecting your VM's state from being read or modified.
        encryptionAtHost:
          type: boolean
          description: This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself.
        uefiSettings:
          $ref: '#/components/schemas/UefiSettings'
          title: Specifies the security settings like secure boot and vTPM used while creating the virtual machine.
          description: Specifies the security settings like secure boot and vTPM used while creating the virtual machine.
      description: Specifies the security profile settings for the virtual machine or virtual machine scale set.
    UefiSettings:
      type: object
      properties:
        secureBootEnabled:
          type: boolean
          description: Specifies whether secure boot should be enabled on the virtual machine.
        vTpmEnabled:
          type: boolean
          description: Specifies whether vTPM should be enabled on the virtual machine.
      description: Specifies the security settings like secure boot and vTPM used while creating the virtual machine.
    UpgradePolicy:
      type: object
      properties:
        mode:
          type: string
          title: Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are automatically updated at the same time.<br /><br /> **Rolling** - Scale set performs updates in batches with an optional pause time in between.
          enum:
            - automatic
            - manual
            - rolling
          x-ms-enum:
            name: UpgradeMode
            modelAsString: false
            values:
              - value: automatic
                description: All virtual machines in the scale set are automatically updated at the same time.
              - value: manual
                description: You control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.
              - value: rolling
                description: The existing instances in a scale set are brought down in batches to be upgraded. Once the upgraded batch is complete, the instances will begin taking traffic again and the next batch will begin. This continues until all instances brought up-to-date.
        automaticOSUpgradePolicy:
          $ref: '#/components/schemas/AutomaticOSUpgradePolicy'
          title: Configuration parameters used for performing automatic OS Upgrade.
          description: The configuration parameters used for performing automatic OS upgrade.
        rollingUpgradePolicy:
          $ref: '#/components/schemas/RollingUpgradePolicy'
          title: The configuration parameters used while performing a rolling upgrade.
      required:
        - mode
      description: Describes an upgrade policy - automatic, manual, or rolling.
    AutomaticOSUpgradePolicy:
      type: object
      properties:
        disableAutomaticRollback:
          type: boolean
          description: Whether OS image rollback feature should be disabled.
        enableAutomaticOSUpgrade:
          type: boolean
          description: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. <br /><br /> If this is set to true for Windows based pools, [WindowsConfiguration.enableAutomaticUpdates](https://learn.microsoft.com/en-us/rest/api/batchmanagement/pool/create?tabs=HTTP#windowsconfiguration) cannot be set to true.
        useRollingUpgradePolicy:
          type: boolean
          description: Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS.
        osRollingUpgradeDeferral:
          type: boolean
          description: Defer OS upgrades on the TVMs if they are running tasks.
      description: The configuration parameters used for performing automatic OS upgrade.
    RollingUpgradePolicy:
      type: object
      properties:
        enableCrossZoneUpgrade:
          type: boolean
          description: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size. If this field is not set, Azure Azure Batch will not set its default value. The value of enableCrossZoneUpgrade on the created VirtualMachineScaleSet will be decided by the default configurations on VirtualMachineScaleSet. This field is able to be set to true or false only when using NodePlacementConfiguration as Zonal.
        maxBatchInstancePercent:
          type: integer
          format: int32
          minimum: 5
          maximum: 100
          description: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The value of this field should be between 5 and 100, inclusive. If both maxBatchInstancePercent and maxUnhealthyInstancePercent are assigned with value, the value of maxBatchInstancePercent should not be more than maxUnhealthyInstancePercent.
        maxUnhealthyInstancePercent:
          type: integer
          format: int32
          minimum: 5
          maximum: 100
          description: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The value of this field should be between 5 and 100, inclusive. If both maxBatchInstancePercent and maxUnhealthyInstancePercent are assigned with value, the value of maxBatchInstancePercent should not be more than maxUnhealthyInstancePercent.
        maxUnhealthyUpgradedInstancePercent:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The value of this field should be between 0 and 100, inclusive.
        pauseTimeBetweenBatches:
          type: string
          description: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format.
        prioritizeUnhealthyInstances:
          type: boolean
          description: Upgrade all unhealthy instances in a scale set before any healthy instances.
        rollbackFailedInstancesOnPolicyBreach:
          type: boolean
          description: Rollback failed instances to previous model if the Rolling Upgrade policy is violated.
      description: The configuration parameters used while performing a rolling upgrade.
    VMDiskSecurityProfile:
      type: object
      properties:
        securityEncryptionType:
          type: string
          title: 'Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only Confidential VMs and required when using Confidential VMs.'
          enum:
            - NonPersistedTPM
            - VMGuestStateOnly
          x-ms-enum:
            name: SecurityEncryptionTypes
            modelAsString: true
            values:
              - value: NonPersistedTPM
              - value: VMGuestStateOnly
      description: 'Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and is required when using Confidential VMs.'
    PublicNetworkAccess:
      type: string
      description: Allow, disallow, or let network security perimeter configuration control public network access to the protected resource. Value is optional but if passed in, it must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'.
      enum:
        - Enabled
        - Disabled
        - SecuredByPerimeter
      x-ms-enum:
        name: PublicNetworkAccess
        modelAsString: true
        values:
          - value: Enabled
            description: Allows public network access to the resource
          - value: Disabled
            description: Disallows public network access to the resource
          - value: SecuredByPerimeter
            description: The network security perimeter configuration rules allow or disallow public network access to the resource. Requires an associated network security perimeter.
    NetworkSecurityPerimeterConfigurationListResult:
      description: Result of a list NSP (network security perimeter) configurations request.
      type: object
      properties:
        value:
          description: Array of network security perimeter results.
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        nextLink:
          description: The link used to get the next page of results.
          type: string
          format: uri
    NetworkSecurityPerimeterConfiguration:
      description: Network security perimeter (NSP) configuration resource
      properties:
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProperties'
      type: object
    NetworkSecurityPerimeterConfigurationProvisioningState:
      description: Provisioning state of a network security perimeter configuration that is being created or updated.
      enum:
        - Succeeded
        - Creating
        - Updating
        - Deleting
        - Accepted
        - Failed
        - Canceled
      type: string
      readOnly: true
      x-ms-enum:
        name: NetworkSecurityPerimeterConfigurationProvisioningState
        modelAsString: true
    NetworkSecurityPerimeterConfigurationProperties:
      description: Network security configuration properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProvisioningState'
        provisioningIssues:
          description: List of provisioning issues, if any
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ProvisioningIssue'
          x-ms-identifiers: []
        networkSecurityPerimeter:
          $ref: '#/components/schemas/NetworkSecurityPerimeter'
        resourceAssociation:
          $ref: '#/components/schemas/ResourceAssociation'
        profile:
          $ref: '#/components/schemas/NetworkSecurityProfile'
    ProvisioningIssue:
      description: Describes a provisioning issue for a network security perimeter configuration
      readOnly: true
      properties:
        name:
          description: Name of the issue
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ProvisioningIssueProperties'
      type: object
    ProvisioningIssueProperties:
      description: Details of a provisioning issue for a network security perimeter (NSP) configuration. Resource providers should generate separate provisioning issue elements for each separate issue detected, and include a meaningful and distinctive description, as well as any appropriate suggestedResourceIds and suggestedAccessRules
      type: object
      readOnly: true
      properties:
        issueType:
          description: Type of issue
          type: string
          readOnly: true
          enum:
            - Unknown
            - ConfigurationPropagationFailure
            - MissingPerimeterConfiguration
            - MissingIdentityConfiguration
          x-ms-enum:
            name: IssueType
            modelAsString: true
            values:
              - value: Unknown
                description: Unknown issue type
              - value: ConfigurationPropagationFailure
                description: An error occurred while applying the network security perimeter (NSP) configuration.
              - value: MissingPerimeterConfiguration
                description: A network connectivity issue is happening on the resource which could be addressed either by adding new resources to the network security perimeter (NSP) or by modifying access rules.
              - value: MissingIdentityConfiguration
                description: An managed identity hasn't been associated with the resource. The resource will still be able to validate inbound traffic from the network security perimeter (NSP) or matching inbound access rules, but it won't be able to perform outbound access as a member of the NSP.
        severity:
          description: Severity of the issue.
          enum:
            - Warning
            - Error
          type: string
          readOnly: true
          x-ms-enum:
            name: Severity
            modelAsString: true
        description:
          description: Description of the issue
          type: string
          readOnly: true
        suggestedResourceIds:
          description: Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to remediate the issue.
          type: array
          readOnly: true
          items:
            description: Fully qualified resource ID of the suggested resource
            type: string
            format: arm-id
            readOnly: true
        suggestedAccessRules:
          description: Access rules that can be added to the network security profile (NSP) to remediate the issue.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AccessRule'
          x-ms-identifiers: []
    NetworkSecurityPerimeter:
      description: Information about a network security perimeter (NSP)
      type: object
      properties:
        id:
          description: Fully qualified Azure resource ID of the NSP resource
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - resourceType: Microsoft.Network/networkSecurityPerimeters
        perimeterGuid:
          description: Universal unique ID (UUID) of the network security perimeter
          type: string
          format: uuid
        location:
          description: Location of the network security perimeter
          type: string
          x-ms-mutability:
            - create
            - read
    ResourceAssociationAccessMode:
      description: Access mode of the resource association
      enum:
        - Enforced
        - Learning
        - Audit
      type: string
      x-ms-enum:
        name: ResourceAssociationAccessMode
        modelAsString: true
        values:
          - value: Enforced
            description: Enforced access mode - traffic to the resource that failed access checks is blocked
          - value: Learning
            description: Learning access mode - traffic to the resource is enabled for analysis but not blocked
          - value: Audit
            description: Audit access mode - traffic to the resource that fails access checks is logged but not blocked
    ResourceAssociation:
      description: Information about resource association
      type: object
      properties:
        name:
          description: Name of the resource association
          type: string
        accessMode:
          $ref: '#/components/schemas/ResourceAssociationAccessMode'
    NetworkSecurityProfile:
      description: Network security perimeter configuration profile
      type: object
      properties:
        name:
          description: Name of the profile
          type: string
        accessRulesVersion:
          description: Current access rules version
          type: integer
          format: int32
        accessRules:
          description: List of Access Rules
          type: array
          items:
            $ref: '#/components/schemas/AccessRule'
          x-ms-identifiers:
            - name
        diagnosticSettingsVersion:
          description: Current diagnostic settings version
          type: integer
          format: int32
        enabledLogCategories:
          description: List of log categories that are enabled
          type: array
          items:
            description: Log category
            type: string
    AccessRule:
      description: Access rule in a network security perimeter configuration profile
      properties:
        name:
          description: Name of the access rule
          type: string
        properties:
          $ref: '#/components/schemas/AccessRuleProperties'
      type: object
    AccessRuleDirection:
      description: Direction of Access Rule
      enum:
        - Inbound
        - Outbound
      type: string
      x-ms-enum:
        name: AccessRuleDirection
        modelAsString: true
        values:
          - value: Inbound
            description: Applies to inbound network traffic to the secured resources.
          - value: Outbound
            description: Applies to outbound network traffic from the secured resources
    AccessRuleProperties:
      description: Properties of Access Rule
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/AccessRuleDirection'
        addressPrefixes:
          description: Address prefixes in the CIDR format for inbound rules
          type: array
          items:
            description: An IP address prefix (CIDR) for inbound rules
            type: string
        subscriptions:
          description: Subscriptions for inbound rules
          type: array
          items:
            description: Subscription identifiers
            type: object
            properties:
              id:
                description: 'The fully qualified Azure resource ID of the subscription e.g. (''/subscriptions/00000000-0000-0000-0000-000000000000'') '
                type: string
                format: arm-id
        networkSecurityPerimeters:
          description: Network security perimeters for inbound rules
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeter'
        fullyQualifiedDomainNames:
          description: Fully qualified domain names (FQDN) for outbound rules
          type: array
          items:
            description: A fully qualified domain name (FQDN)
            type: string
        emailAddresses:
          description: Email addresses for outbound rules
          type: array
          items:
            description: An email address
            type: string
        phoneNumbers:
          description: Phone numbers for outbound rules
          type: array
          items:
            description: A phone number
            type: string
  x-stackQL-resources:
    network_security_perimeter_configurations:
      id: azure.batch.network_security_perimeter_configurations
      name: network_security_perimeter_configurations
      title: network_security_perimeter_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1networkSecurityPerimeterConfigurations~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    network_security_perimeter_configuration:
      id: azure.batch.network_security_perimeter_configuration
      name: network_security_perimeter_configuration
      title: network_security_perimeter_configuration
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configuration/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    network_security_perimeter:
      id: azure.batch.network_security_perimeter
      name: network_security_perimeter
      title: network_security_perimeter
      methods:
        reconcile_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}~1reconcile~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    account:
      id: azure.batch.account
      name: account
      title: account
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1?api-version=2024-07-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1?api-version=2024-07-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1?api-version=2024-07-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Batch~1batchAccounts~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        synchronize_auto_storage_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1syncAutoStorageKeys~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1regenerateKeys~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account/methods/get'
          - $ref: '#/components/x-stackQL-resources/account/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/account/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/account/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/account/methods/delete'
    account_keys:
      id: azure.batch.account_keys
      name: account_keys
      title: account_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1listKeys~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_keys/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    application_package:
      id: azure.batch.application_package
      name: application_package
      title: application_package
      methods:
        activate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1versions~1{versionName}~1activate~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1versions~1{versionName}~1?api-version=2024-07-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1versions~1{versionName}~1?api-version=2024-07-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1versions~1{versionName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1versions~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_package/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_package/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_package/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_package/methods/delete'
    application:
      id: azure.batch.application
      name: application
      title: application
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1?api-version=2024-07-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1?api-version=2024-07-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1{applicationName}~1?api-version=2024-07-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1applications~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application/methods/get'
          - $ref: '#/components/x-stackQL-resources/application/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/application/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application/methods/delete'
    location_quotas:
      id: azure.batch.location_quotas
      name: location_quotas
      title: location_quotas
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Batch~1locations~1{locationName}~1quotas~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_quotas/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    location_supported_virtual_machine_skus:
      id: azure.batch.location_supported_virtual_machine_skus
      name: location_supported_virtual_machine_skus
      title: location_supported_virtual_machine_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Batch~1locations~1{locationName}~1virtualMachineSkus~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_supported_virtual_machine_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.batch.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Batch~1operations~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    location:
      id: azure.batch.location
      name: location
      title: location
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Batch~1locations~1{locationName}~1checkNameAvailability~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    certificate:
      id: azure.batch.certificate
      name: certificate
      title: certificate
      methods:
        list_by_batch_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1certificates~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1certificates~1{certificateName}~1?api-version=2024-07-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1certificates~1{certificateName}~1?api-version=2024-07-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1certificates~1{certificateName}~1?api-version=2024-07-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1certificates~1{certificateName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_deletion:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1certificates~1{certificateName}~1cancelDelete~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificate/methods/get'
          - $ref: '#/components/x-stackQL-resources/certificate/methods/list_by_batch_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificate/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificate/methods/delete'
    account_detectors:
      id: azure.batch.account_detectors
      name: account_detectors
      title: account_detectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1detectors~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_detectors/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    account_detector:
      id: azure.batch.account_detector
      name: account_detector
      title: account_detector
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1detectors~1{detectorId}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_detector/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    private_link_resource:
      id: azure.batch.private_link_resource
      name: private_link_resource
      title: private_link_resource
      methods:
        list_by_batch_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1privateLinkResources~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1privateLinkResources~1{privateLinkResourceName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resource/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resource/methods/list_by_batch_account'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connection:
      id: azure.batch.private_endpoint_connection
      name: private_endpoint_connection
      title: private_endpoint_connection
      methods:
        list_by_batch_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1privateEndpointConnections~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-07-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-07-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection/methods/list_by_batch_account'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection/methods/delete'
    pool:
      id: azure.batch.pool
      name: pool
      title: pool
      methods:
        list_by_batch_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1pools~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1pools~1{poolName}~1?api-version=2024-07-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1pools~1{poolName}~1?api-version=2024-07-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1pools~1{poolName}~1?api-version=2024-07-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1pools~1{poolName}~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_auto_scale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1pools~1{poolName}~1disableAutoScale~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_resize:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1pools~1{poolName}~1stopResize~1?api-version=2024-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pool/methods/get'
          - $ref: '#/components/x-stackQL-resources/pool/methods/list_by_batch_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/pool/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pool/methods/delete'
    account_outbound_network_dependencies_endpoints:
      id: azure.batch.account_outbound_network_dependencies_endpoints
      name: account_outbound_network_dependencies_endpoints
      title: account_outbound_network_dependencies_endpoints
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Batch~1batchAccounts~1{accountName}~1outboundNetworkDependenciesEndpoints~1?api-version=2024-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_outbound_network_dependencies_endpoints/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_network_security_perimeter_configuration:
      id: azure.batch.vw_network_security_perimeter_configuration
      name: vw_network_security_perimeter_configuration
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.provisioningIssues') as provisioning_issues,
              JSON_EXTRACT(properties, '$.networkSecurityPerimeter') as network_security_perimeter,
              JSON_EXTRACT(properties, '$.resourceAssociation') as resource_association,
              JSON_EXTRACT(properties, '$.profile') as profile,
              subscriptionId,
              resourceGroupName,
              accountName,
              networkSecurityPerimeterConfigurationName
              FROM azure.batch.network_security_perimeter_configuration
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND networkSecurityPerimeterConfigurationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.provisioningIssues') as provisioning_issues,
                JSON_EXTRACT(properties, '$.networkSecurityPerimeter') as network_security_perimeter,
                JSON_EXTRACT(properties, '$.resourceAssociation') as resource_association,
                JSON_EXTRACT(properties, '$.profile') as profile,
                subscriptionId,
                resourceGroupName,
                accountName,
                networkSecurityPerimeterConfigurationName
                FROM azure.batch.network_security_perimeter_configuration
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND networkSecurityPerimeterConfigurationName = 'replace-me';
    vw_account:
      id: azure.batch.vw_account
      name: vw_account
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              identity as identity,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.accountEndpoint') as account_endpoint,
              JSON_EXTRACT(properties, '$.nodeManagementEndpoint') as node_management_endpoint,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.poolAllocationMode') as pool_allocation_mode,
              JSON_EXTRACT(properties, '$.keyVaultReference') as key_vault_reference,
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
              JSON_EXTRACT(properties, '$.networkProfile') as network_profile,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
              JSON_EXTRACT(properties, '$.autoStorage') as auto_storage,
              JSON_EXTRACT(properties, '$.encryption') as encryption,
              JSON_EXTRACT(properties, '$.dedicatedCoreQuota') as dedicated_core_quota,
              JSON_EXTRACT(properties, '$.lowPriorityCoreQuota') as low_priority_core_quota,
              JSON_EXTRACT(properties, '$.dedicatedCoreQuotaPerVMFamily') as dedicated_core_quota_per_vm_family,
              JSON_EXTRACT(properties, '$.dedicatedCoreQuotaPerVMFamilyEnforced') as dedicated_core_quota_per_vm_family_enforced,
              JSON_EXTRACT(properties, '$.poolQuota') as pool_quota,
              JSON_EXTRACT(properties, '$.activeJobAndJobScheduleQuota') as active_job_and_job_schedule_quota,
              JSON_EXTRACT(properties, '$.allowedAuthenticationModes') as allowed_authentication_modes,
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.batch.account
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                identity as identity,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.accountEndpoint') as account_endpoint,
                JSON_EXTRACT(properties, '$.nodeManagementEndpoint') as node_management_endpoint,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.poolAllocationMode') as pool_allocation_mode,
                JSON_EXTRACT(properties, '$.keyVaultReference') as key_vault_reference,
                JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
                JSON_EXTRACT(properties, '$.networkProfile') as network_profile,
                JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
                JSON_EXTRACT(properties, '$.autoStorage') as auto_storage,
                JSON_EXTRACT(properties, '$.encryption') as encryption,
                JSON_EXTRACT(properties, '$.dedicatedCoreQuota') as dedicated_core_quota,
                JSON_EXTRACT(properties, '$.lowPriorityCoreQuota') as low_priority_core_quota,
                JSON_EXTRACT(properties, '$.dedicatedCoreQuotaPerVMFamily') as dedicated_core_quota_per_vm_family,
                JSON_EXTRACT(properties, '$.dedicatedCoreQuotaPerVMFamilyEnforced') as dedicated_core_quota_per_vm_family_enforced,
                JSON_EXTRACT(properties, '$.poolQuota') as pool_quota,
                JSON_EXTRACT(properties, '$.activeJobAndJobScheduleQuota') as active_job_and_job_schedule_quota,
                JSON_EXTRACT(properties, '$.allowedAuthenticationModes') as allowed_authentication_modes,
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.batch.account
                WHERE subscriptionId = 'replace-me';
    vw_application_package:
      id: azure.batch.vw_application_package
      name: vw_application_package
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.format') as format,
              JSON_EXTRACT(properties, '$.storageUrl') as storage_url,
              JSON_EXTRACT(properties, '$.storageUrlExpiry') as storage_url_expiry,
              JSON_EXTRACT(properties, '$.lastActivationTime') as last_activation_time,
              subscriptionId,
              resourceGroupName,
              accountName,
              applicationName,
              versionName
              FROM azure.batch.application_package
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND applicationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.format') as format,
                JSON_EXTRACT(properties, '$.storageUrl') as storage_url,
                JSON_EXTRACT(properties, '$.storageUrlExpiry') as storage_url_expiry,
                JSON_EXTRACT(properties, '$.lastActivationTime') as last_activation_time,
                subscriptionId,
                resourceGroupName,
                accountName,
                applicationName,
                versionName
                FROM azure.batch.application_package
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND applicationName = 'replace-me';
    vw_application:
      id: azure.batch.vw_application
      name: vw_application
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.allowUpdates') as allow_updates,
              JSON_EXTRACT(properties, '$.defaultVersion') as default_version,
              subscriptionId,
              resourceGroupName,
              accountName,
              applicationName
              FROM azure.batch.application
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.allowUpdates') as allow_updates,
                JSON_EXTRACT(properties, '$.defaultVersion') as default_version,
                subscriptionId,
                resourceGroupName,
                accountName,
                applicationName
                FROM azure.batch.application
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_certificate:
      id: azure.batch.vw_certificate
      name: vw_certificate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.provisioningStateTransitionTime') as provisioning_state_transition_time,
              JSON_EXTRACT(properties, '$.previousProvisioningState') as previous_provisioning_state,
              JSON_EXTRACT(properties, '$.previousProvisioningStateTransitionTime') as previous_provisioning_state_transition_time,
              JSON_EXTRACT(properties, '$.publicData') as public_data,
              JSON_EXTRACT(properties, '$.deleteCertificateError') as delete_certificate_error,
              JSON_EXTRACT(properties, '$.thumbprintAlgorithm') as thumbprint_algorithm,
              JSON_EXTRACT(properties, '$.thumbprint') as thumbprint,
              JSON_EXTRACT(properties, '$.format') as format,
              subscriptionId,
              resourceGroupName,
              accountName,
              certificateName
              FROM azure.batch.certificate
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.provisioningStateTransitionTime') as provisioning_state_transition_time,
                JSON_EXTRACT(properties, '$.previousProvisioningState') as previous_provisioning_state,
                JSON_EXTRACT(properties, '$.previousProvisioningStateTransitionTime') as previous_provisioning_state_transition_time,
                JSON_EXTRACT(properties, '$.publicData') as public_data,
                JSON_EXTRACT(properties, '$.deleteCertificateError') as delete_certificate_error,
                JSON_EXTRACT(properties, '$.thumbprintAlgorithm') as thumbprint_algorithm,
                JSON_EXTRACT(properties, '$.thumbprint') as thumbprint,
                JSON_EXTRACT(properties, '$.format') as format,
                subscriptionId,
                resourceGroupName,
                accountName,
                certificateName
                FROM azure.batch.certificate
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_account_detector:
      id: azure.batch.vw_account_detector
      name: vw_account_detector
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.value') as value,
              subscriptionId,
              resourceGroupName,
              accountName,
              detectorId
              FROM azure.batch.account_detector
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND detectorId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.value') as value,
                subscriptionId,
                resourceGroupName,
                accountName,
                detectorId
                FROM azure.batch.account_detector
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND detectorId = 'replace-me';
    vw_private_link_resource:
      id: azure.batch.vw_private_link_resource
      name: vw_private_link_resource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.groupId') as group_id,
              JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
              JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
              subscriptionId,
              resourceGroupName,
              accountName,
              privateLinkResourceName
              FROM azure.batch.private_link_resource
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.groupId') as group_id,
                JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
                JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
                subscriptionId,
                resourceGroupName,
                accountName,
                privateLinkResourceName
                FROM azure.batch.private_link_resource
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_private_endpoint_connection:
      id: azure.batch.vw_private_endpoint_connection
      name: vw_private_endpoint_connection
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.privateEndpoint') as private_endpoint,
              JSON_EXTRACT(properties, '$.groupIds') as group_ids,
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
              subscriptionId,
              resourceGroupName,
              accountName,
              privateEndpointConnectionName
              FROM azure.batch.private_endpoint_connection
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.privateEndpoint') as private_endpoint,
                JSON_EXTRACT(properties, '$.groupIds') as group_ids,
                JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
                subscriptionId,
                resourceGroupName,
                accountName,
                privateEndpointConnectionName
                FROM azure.batch.private_endpoint_connection
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_pool:
      id: azure.batch.vw_pool
      name: vw_pool
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              identity as identity,
              type as type,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.lastModified') as last_modified,
              JSON_EXTRACT(properties, '$.creationTime') as creation_time,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.provisioningStateTransitionTime') as provisioning_state_transition_time,
              JSON_EXTRACT(properties, '$.allocationState') as allocation_state,
              JSON_EXTRACT(properties, '$.allocationStateTransitionTime') as allocation_state_transition_time,
              JSON_EXTRACT(properties, '$.vmSize') as vm_size,
              JSON_EXTRACT(properties, '$.deploymentConfiguration') as deployment_configuration,
              JSON_EXTRACT(properties, '$.currentDedicatedNodes') as current_dedicated_nodes,
              JSON_EXTRACT(properties, '$.currentLowPriorityNodes') as current_low_priority_nodes,
              JSON_EXTRACT(properties, '$.scaleSettings') as scale_settings,
              JSON_EXTRACT(properties, '$.autoScaleRun') as auto_scale_run,
              JSON_EXTRACT(properties, '$.interNodeCommunication') as inter_node_communication,
              JSON_EXTRACT(properties, '$.networkConfiguration') as network_configuration,
              JSON_EXTRACT(properties, '$.taskSlotsPerNode') as task_slots_per_node,
              JSON_EXTRACT(properties, '$.taskSchedulingPolicy') as task_scheduling_policy,
              JSON_EXTRACT(properties, '$.userAccounts') as user_accounts,
              JSON_EXTRACT(properties, '$.metadata') as metadata,
              JSON_EXTRACT(properties, '$.startTask') as start_task,
              JSON_EXTRACT(properties, '$.certificates') as certificates,
              JSON_EXTRACT(properties, '$.applicationPackages') as application_packages,
              JSON_EXTRACT(properties, '$.applicationLicenses') as application_licenses,
              JSON_EXTRACT(properties, '$.resizeOperationStatus') as resize_operation_status,
              JSON_EXTRACT(properties, '$.mountConfiguration') as mount_configuration,
              JSON_EXTRACT(properties, '$.targetNodeCommunicationMode') as target_node_communication_mode,
              JSON_EXTRACT(properties, '$.currentNodeCommunicationMode') as current_node_communication_mode,
              JSON_EXTRACT(properties, '$.upgradePolicy') as upgrade_policy,
              JSON_EXTRACT(properties, '$.resourceTags') as resource_tags,
              subscriptionId,
              resourceGroupName,
              accountName,
              poolName
              FROM azure.batch.pool
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                identity as identity,
                type as type,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.lastModified') as last_modified,
                JSON_EXTRACT(properties, '$.creationTime') as creation_time,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.provisioningStateTransitionTime') as provisioning_state_transition_time,
                JSON_EXTRACT(properties, '$.allocationState') as allocation_state,
                JSON_EXTRACT(properties, '$.allocationStateTransitionTime') as allocation_state_transition_time,
                JSON_EXTRACT(properties, '$.vmSize') as vm_size,
                JSON_EXTRACT(properties, '$.deploymentConfiguration') as deployment_configuration,
                JSON_EXTRACT(properties, '$.currentDedicatedNodes') as current_dedicated_nodes,
                JSON_EXTRACT(properties, '$.currentLowPriorityNodes') as current_low_priority_nodes,
                JSON_EXTRACT(properties, '$.scaleSettings') as scale_settings,
                JSON_EXTRACT(properties, '$.autoScaleRun') as auto_scale_run,
                JSON_EXTRACT(properties, '$.interNodeCommunication') as inter_node_communication,
                JSON_EXTRACT(properties, '$.networkConfiguration') as network_configuration,
                JSON_EXTRACT(properties, '$.taskSlotsPerNode') as task_slots_per_node,
                JSON_EXTRACT(properties, '$.taskSchedulingPolicy') as task_scheduling_policy,
                JSON_EXTRACT(properties, '$.userAccounts') as user_accounts,
                JSON_EXTRACT(properties, '$.metadata') as metadata,
                JSON_EXTRACT(properties, '$.startTask') as start_task,
                JSON_EXTRACT(properties, '$.certificates') as certificates,
                JSON_EXTRACT(properties, '$.applicationPackages') as application_packages,
                JSON_EXTRACT(properties, '$.applicationLicenses') as application_licenses,
                JSON_EXTRACT(properties, '$.resizeOperationStatus') as resize_operation_status,
                JSON_EXTRACT(properties, '$.mountConfiguration') as mount_configuration,
                JSON_EXTRACT(properties, '$.targetNodeCommunicationMode') as target_node_communication_mode,
                JSON_EXTRACT(properties, '$.currentNodeCommunicationMode') as current_node_communication_mode,
                JSON_EXTRACT(properties, '$.upgradePolicy') as upgrade_policy,
                JSON_EXTRACT(properties, '$.resourceTags') as resource_tags,
                subscriptionId,
                resourceGroupName,
                accountName,
                poolName
                FROM azure.batch.pool
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/networkSecurityPerimeterConfigurations/?api-version=2024-07-01:
    get:
      tags:
        - NetworkSecurityPerimeter
      operationId: NetworkSecurityPerimeter_ListConfigurations
      description: Lists all of the NSP configurations in the specified account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of NSP configurations associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}/?api-version=2024-07-01:
    get:
      tags:
        - NetworkSecurityPerimeter
      operationId: NetworkSecurityPerimeter_GetConfiguration
      description: Gets information about the specified NSP configuration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/networkSecurityPerimeterConfigurationName'
      responses:
        '200':
          description: The operation was successful. The response contains the NSP configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}/reconcile/?api-version=2024-07-01:
    post:
      tags:
        - NetworkSecurityPerimeter
      operationId: NetworkSecurityPerimeter_ReconcileConfiguration
      description: Reconciles the specified NSP configuration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/networkSecurityPerimeterConfigurationName'
      responses:
        '202':
          description: The operation was accepted and will be performed in the background.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          x-ms-error-response: true
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/?api-version=2024-07-01:
    put:
      tags:
        - BatchAccount
      operationId: BatchAccount_Create
      description: Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: 'A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.'
          required: true
          schema:
            pattern: ^[a-z0-9]+$
            minLength: 3
            maxLength: 24
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Additional parameters for account creation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAccountCreateParameters'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAccount'
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - BatchAccount
      operationId: BatchAccount_Update
      description: Updates the properties of an existing Batch account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Additional parameters for account update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAccountUpdateParameters'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - BatchAccount
      operationId: BatchAccount_Delete
      description: Deletes the specified Batch account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.
        '204':
          description: NoContent -- account does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - BatchAccount
      operationId: BatchAccount_Get
      description: Gets information about the specified Batch account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Batch/batchAccounts/?api-version=2024-07-01:
    get:
      tags:
        - BatchAccount
      operationId: BatchAccount_List
      description: Gets information about the Batch accounts associated with the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of Batch account entities associated with the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/?api-version=2024-07-01:
    get:
      tags:
        - BatchAccount
      operationId: BatchAccount_ListByResourceGroup
      description: Gets information about the Batch accounts associated with the specified resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of Batch account entities associated with the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/syncAutoStorageKeys/?api-version=2024-07-01:
    post:
      tags:
        - BatchAccount
      operationId: BatchAccount_SynchronizeAutoStorageKeys
      description: Synchronizes access keys for the auto-storage account configured for the specified Batch account, only if storage key authentication is being used.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/regenerateKeys/?api-version=2024-07-01:
    post:
      tags:
        - BatchAccount
      operationId: BatchAccount_RegenerateKey
      summary: Regenerates the specified account key for the Batch account.
      description: This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, regenerating the keys will fail.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The type of key to regenerate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAccountRegenerateKeyParameters'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/listKeys/?api-version=2024-07-01:
    post:
      tags:
        - BatchAccount
      operationId: BatchAccount_GetKeys
      summary: Gets the account keys for the specified Batch account.
      description: This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, getting the keys will fail.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the keys of the Batch account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}/versions/{versionName}/activate/?api-version=2024-07-01:
    post:
      tags:
        - ApplicationPackage
      operationId: ApplicationPackage_Activate
      description: Activates the specified application package. This should be done after the `ApplicationPackage` was created and uploaded. This needs to be done before an `ApplicationPackage` can be used on Pools or Tasks.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/VersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters for the request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateApplicationPackageParameters'
      responses:
        '200':
          description: The operation was successful. The response contains the application package entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPackage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}/?api-version=2024-07-01:
    put:
      tags:
        - Application
      operationId: Application_Create
      description: Adds an application to the specified Batch account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters for the request.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '200':
          description: The operation was successful. The response contains the application entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Application
      operationId: Application_Delete
      description: Deletes an application.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - Application
      operationId: Application_Get
      description: Gets information about the specified application.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the application entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Application
      operationId: Application_Update
      description: Updates settings for the specified application.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters for the request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '200':
          description: The operation was successful. The response contains the application entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}/versions/{versionName}/?api-version=2024-07-01:
    put:
      tags:
        - ApplicationPackage
      operationId: ApplicationPackage_Create
      description: Creates an application package record. The record contains a storageUrl where the package should be uploaded to.  Once it is uploaded the `ApplicationPackage` needs to be activated using `ApplicationPackageActive` before it can be used. If the auto storage account was configured to use storage keys, the URL returned will contain a SAS.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/VersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters for the request.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationPackage'
      responses:
        '200':
          description: The operation was successful. The response contains the application package entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPackage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ApplicationPackage
      operationId: ApplicationPackage_Delete
      description: Deletes an application package record and its associated binary file.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/VersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - ApplicationPackage
      operationId: ApplicationPackage_Get
      description: Gets information about the specified application package.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/VersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the application package entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPackage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/?api-version=2024-07-01:
    get:
      tags:
        - Application
      operationId: Application_List
      description: Lists all of the applications in the specified account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: maxresults
          in: query
          description: The maximum number of items to return in the response.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of the application entities associated with the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}/versions/?api-version=2024-07-01:
    get:
      tags:
        - ApplicationPackage
      operationId: ApplicationPackage_List
      description: Lists all of the application packages in the specified application.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - name: maxresults
          in: query
          description: The maximum number of items to return in the response.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of the application package entities associated with the specified application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationPackagesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/quotas/?api-version=2024-07-01:
    get:
      tags:
        - Location
      operationId: Location_GetQuotas
      description: Gets the Batch service quotas for the specified subscription at the given location.
      parameters:
        - name: locationName
          in: path
          description: The region for which to retrieve Batch service quotas.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch service quotas for the subscription in the specified location.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchLocationQuota'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/virtualMachineSkus/?api-version=2024-07-01:
    get:
      tags:
        - Location
      operationId: Location_ListSupportedVirtualMachineSkus
      description: Gets the list of Batch supported Virtual Machine VM sizes available at the given location.
      parameters:
        - name: locationName
          in: path
          description: The region for which to retrieve Batch service supported SKUs.
          required: true
          schema:
            type: string
        - name: maxresults
          in: query
          description: The maximum number of items to return in the response.
          required: false
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: OData filter expression. Valid properties for filtering are "familyName".
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch service supported virtual machine vm sizes for the subscription in the specified location.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedSkusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Batch/operations/?api-version=2024-07-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists available operations for the Microsoft.Batch provider
      parameters: []
      responses:
        '200':
          description: The operation was successful. The response contains the list of available operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/checkNameAvailability/?api-version=2024-07-01:
    post:
      operationId: Location_CheckNameAvailability
      description: Checks whether the Batch account name is available in the specified region.
      parameters:
        - name: locationName
          in: path
          description: The desired region for the name check.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Properties needed to check the availability of a name.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: Success. Returns details about whether a Batch account name is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates/?api-version=2024-07-01:
    get:
      tags:
        - Certificate
      deprecated: true
      operationId: Certificate_ListByBatchAccount
      summary: Lists all of the certificates in the specified account.
      description: 'Warning: This operation is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.'
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: maxresults
          in: query
          description: The maximum number of items to return in the response.
          required: false
          schema:
            format: int32
            type: integer
        - name: $select
          in: query
          description: Comma separated list of properties that should be returned. e.g. "properties/provisioningState". Only top level properties under properties/ are valid for selection.
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: OData filter expression. Valid properties for filtering are "properties/provisioningState", "properties/provisioningStateTransitionTime", "name".
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of certificates associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates/{certificateName}/?api-version=2024-07-01:
    put:
      tags:
        - Certificate
      deprecated: true
      operationId: Certificate_Create
      summary: Creates a new certificate inside the specified account.
      description: 'Warning: This operation is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.'
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CertificateNameParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the certificate to update. A value of "*" can be used to apply the operation only if the certificate already exists. If omitted, this operation will always be applied.
          required: false
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new certificate to be created, but to prevent updating an existing certificate. Other values will be ignored.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Additional parameters for certificate creation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreateOrUpdateParameters'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Certificate
      deprecated: true
      operationId: Certificate_Update
      summary: Updates the properties of an existing certificate.
      description: 'Warning: This operation is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.'
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CertificateNameParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the certificate to update. This value can be omitted or set to "*" to apply the operation unconditionally.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Certificate entity to update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreateOrUpdateParameters'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Certificate
      deprecated: true
      operationId: Certificate_Delete
      summary: Deletes the specified certificate.
      description: 'Warning: This operation is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.'
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CertificateNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Certificate
      deprecated: true
      operationId: Certificate_Get
      summary: Gets information about the specified certificate.
      description: 'Warning: This operation is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.'
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CertificateNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates/{certificateName}/cancelDelete/?api-version=2024-07-01:
    post:
      tags:
        - Certificate
      deprecated: true
      operationId: Certificate_CancelDeletion
      summary: Cancels a failed deletion of a certificate from the specified account.
      description: |-
        If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.

        Warning: This operation is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CertificateNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/detectors/?api-version=2024-07-01:
    get:
      operationId: BatchAccount_ListDetectors
      description: Gets information about the detectors available for a given Batch account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of detectors associated with a Batch account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectorListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/detectors/{detectorId}/?api-version=2024-07-01:
    get:
      operationId: BatchAccount_GetDetector
      description: Gets information about the given detector for a given Batch account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/DetectorIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains information about the given detector associated with a Batch account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectorResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/privateLinkResources/?api-version=2024-07-01:
    get:
      tags:
        - PrivateLinkResource
      operationId: PrivateLinkResource_ListByBatchAccount
      description: Lists all of the private link resources in the specified account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: maxresults
          in: query
          description: The maximum number of items to return in the response.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: The operation was successful. The response contains a list of private link resources associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateLinkResourcesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/privateLinkResources/{privateLinkResourceName}/?api-version=2024-07-01:
    get:
      tags:
        - PrivateLinkResource
      operationId: PrivateLinkResource_Get
      description: Gets information about the specified private link resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PrivateLinkResourceNameParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the private link resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/privateEndpointConnections/?api-version=2024-07-01:
    get:
      tags:
        - PrivateEndpointConnection
      operationId: PrivateEndpointConnection_ListByBatchAccount
      description: Lists all of the private endpoint connections in the specified account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: maxresults
          in: query
          description: The maximum number of items to return in the response.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: The operation was successful. The response contains a list of private link resources associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateEndpointConnectionsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2024-07-01:
    get:
      tags:
        - PrivateEndpointConnection
      operationId: PrivateEndpointConnection_Get
      description: Gets information about the specified private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - PrivateEndpointConnection
      operationId: PrivateEndpointConnection_Update
      description: Updates the properties of an existing private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
        - name: If-Match
          in: header
          description: The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally.
          required: false
          schema:
            type: string
      requestBody:
        description: PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: The operation was successful. The response contains the PrivateEndpointConnection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: The operation was accepted and will be performed in the background.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - PrivateEndpointConnection
      operationId: PrivateEndpointConnection_Delete
      description: Deletes the specified private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/?api-version=2024-07-01:
    get:
      tags:
        - Pool
      operationId: Pool_ListByBatchAccount
      description: Lists all of the pools in the specified account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: maxresults
          in: query
          description: The maximum number of items to return in the response.
          required: false
          schema:
            format: int32
            type: integer
        - name: $select
          in: query
          description: Comma separated list of properties that should be returned. e.g. "properties/provisioningState". Only top level properties under properties/ are valid for selection.
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: |-
            OData filter expression. Valid properties for filtering are:

             name
             properties/allocationState
             properties/allocationStateTransitionTime
             properties/creationTime
             properties/provisioningState
             properties/provisioningStateTransitionTime
             properties/lastModified
             properties/vmSize
             properties/interNodeCommunication
             properties/scaleSettings/autoScale
             properties/scaleSettings/fixedScale
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of certificates associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPoolsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}/?api-version=2024-07-01:
    put:
      tags:
        - Pool
      operationId: Pool_Create
      description: Creates a new pool inside the specified account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PoolNameParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the pool to update. A value of "*" can be used to apply the operation only if the pool already exists. If omitted, this operation will always be applied.
          required: false
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new pool to be created, but to prevent updating an existing pool. Other values will be ignored.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Additional parameters for pool creation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Pool
      operationId: Pool_Update
      description: Updates the properties of an existing pool.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PoolNameParameter'
        - name: If-Match
          in: header
          description: The entity state (ETag) version of the pool to update. This value can be omitted or set to "*" to apply the operation unconditionally.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Pool properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Pool
      operationId: Pool_Delete
      description: Deletes the specified pool.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PoolNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Pool
      operationId: Pool_Get
      description: Gets information about the specified pool.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PoolNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}/disableAutoScale/?api-version=2024-07-01:
    post:
      tags:
        - Pool
      operationId: Pool_DisableAutoScale
      description: Disables automatic scaling for a pool.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PoolNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}/stopResize/?api-version=2024-07-01:
    post:
      tags:
        - Pool
      operationId: Pool_StopResize
      summary: Stops an ongoing resize operation on the pool.
      description: 'This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.'
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/PoolNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          headers:
            ETag:
              schema:
                type: string
              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/outboundNetworkDependenciesEndpoints/?api-version=2024-07-01:
    get:
      tags:
        - BatchAccount
      operationId: BatchAccount_ListOutboundNetworkDependenciesEndpoints
      description: Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of outbound network dependencies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEnvironmentEndpointCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
