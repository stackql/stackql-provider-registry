openapi: 3.0.0
servers:
  - url: 'https://management.azure.com/'
info:
  title: System Center VM Manager
  description: 'The System Center Virtual Machine Manager (VMM) is part of the System Center suite used to configure, manage, and transform traditional datacenters. It helps to provide a unified management experience across on-premises, service provider, and the Azure cloud.'
  contact:
    name: StackQL Studios
    url: 'https://stackql.io/'
    email: info@stackql.io
  version: 2024-01-25-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceUriParameter:
      name: resourceUri
      in: path
      description: The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: 'The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.'
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: 'The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.'
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: 'Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.'
          pattern: '^[-\w\._,\(\)]+$'
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: 'This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.'
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: 'If the service has different generations of hardware, for the same SKU, then that can be captured here.'
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      type: object
      required:
        - type
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of managed service identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant of managed service identity.
        type:
          type: string
          description: The type of managed service identity.
          enum:
            - None
            - SystemAssigned
          x-ms-enum:
            name: IdentityType
            modelAsString: true
      description: Managed service identity.
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: 'Details of a REST API operation, returned from the Resource Provider Operations API'
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: 'The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".'
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: 'The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".'
              type: string
              readOnly: true
            description:
              description: 'The short, localized friendly description of the operation; suitable for tool tips and detailed views.'
              type: string
              readOnly: true
        origin:
          description: 'The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"'
          type: string
          readOnly: true
          enum:
            - user
            - system
            - 'user,system'
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: 'If present, details of the operation error.'
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: 'The district, state, or province where the resource is located.'
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    VMMServerProperties:
      description: Defines the resource properties.
      required:
        - fqdn
      type: object
      properties:
        credentials:
          description: Credentials to connect to VMMServer.
          $ref: '#/components/schemas/VMMCredential'
        fqdn:
          type: string
          description: Fqdn is the hostname/ip of the vmmServer.
          minLength: 1
        port:
          type: integer
          format: int32
          description: Port is the port on which the vmmServer is listening.
          maximum: 65535
          minimum: 1
        connectionStatus:
          type: string
          description: Gets the connection status to the vmmServer.
          readOnly: true
        errorMessage:
          type: string
          description: Gets any error message if connection to vmmServer is having any issue.
          readOnly: true
        uuid:
          type: string
          description: Unique ID of vmmServer.
          readOnly: true
        version:
          type: string
          description: Version is the version of the vmmSever.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    ExtendedLocation:
      type: object
      description: The extended location.
      properties:
        type:
          type: string
          description: The extended location type.
        name:
          type: string
          description: The extended location name.
    VMMServer:
      x-ms-azure-resource: true
      required:
        - properties
        - extendedLocation
      description: The VmmServers resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VMMServerProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    VMMServerListResult:
      type: object
      description: List of VmmServers.
      properties:
        value:
          type: array
          description: List of VmmServers.
          items:
            $ref: '#/components/schemas/VMMServer'
        nextLink:
          description: Url to follow for getting next page of resources.
          type: string
          format: uri
          readOnly: true
    CloudProperties:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the cloud.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        cloudName:
          type: string
          description: Name of the cloud in VMMServer.
          readOnly: true
        cloudCapacity:
          $ref: '#/components/schemas/CloudCapacity'
          description: Capacity of the cloud.
          readOnly: true
        storageQoSPolicies:
          description: List of QoS policies available for the cloud.
          type: array
          items:
            $ref: '#/components/schemas/StorageQoSPolicy'
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    Cloud:
      x-ms-azure-resource: true
      required:
        - properties
        - extendedLocation
      description: The Clouds resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/CloudProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    CloudListResult:
      type: object
      description: List of Clouds.
      properties:
        value:
          type: array
          description: List of Clouds.
          items:
            $ref: '#/components/schemas/Cloud'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
          format: uri
          readOnly: true
    VirtualNetworkProperties:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the virtual network.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        networkName:
          type: string
          description: Name of the virtual network in vmmServer.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    VirtualNetwork:
      x-ms-azure-resource: true
      required:
        - properties
        - extendedLocation
      description: The VirtualNetworks resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualNetworkProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    VirtualNetworkListResult:
      type: object
      description: List of VirtualNetworks.
      properties:
        value:
          type: array
          description: List of VirtualNetworks.
          items:
            $ref: '#/components/schemas/VirtualNetwork'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
          format: uri
          readOnly: true
    AvailabilitySetProperties:
      description: Defines the resource properties.
      type: object
      properties:
        availabilitySetName:
          type: string
          description: Name of the availability set.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    AvailabilitySet:
      x-ms-azure-resource: true
      required:
        - properties
        - extendedLocation
      description: The AvailabilitySets resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/AvailabilitySetProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    AvailabilitySetListResult:
      type: object
      description: List of AvailabilitySets.
      properties:
        value:
          type: array
          description: List of AvailabilitySets.
          items:
            $ref: '#/components/schemas/AvailabilitySet'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
          format: uri
          readOnly: true
    AvailabilitySetList:
      description: Availability Sets in vm.
      type: array
      items:
        description: Availability Set model
        type: object
        properties:
          id:
            description: Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
            type: string
            format: arm-id
            x-ms-arm-id-details:
              allowedResources:
                - type: Microsoft.ScVmm/availabilitySets
          name:
            description: Gets or sets the name of the availability set.
            type: string
    InfrastructureProfile:
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        cloudId:
          type: string
          description: ARM Id of the cloud resource to use for deploying the vm.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/clouds
        templateId:
          type: string
          description: ARM Id of the template resource to use for deploying the vm.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/virtualMachineTemplates
        vmName:
          type: string
          description: VMName is the name of VM on the SCVMM server.
          minLength: 1
        uuid:
          type: string
          description: Unique ID of the virtual machine.
        lastRestoredVMCheckpoint:
          description: Last restored checkpoint in the vm.
          $ref: '#/components/schemas/Checkpoint'
          readOnly: true
        checkpoints:
          description: Checkpoints in the vm.
          type: array
          items:
            description: Checkpoint properties
            $ref: '#/components/schemas/Checkpoint'
            readOnly: true
          x-ms-identifiers:
            - checkpointID
        checkpointType:
          type: string
          description: Type of checkpoint supported for the vm.
        generation:
          type: integer
          format: int32
          description: Gets or sets the generation for the vm.
        biosGuid:
          type: string
          description: Gets or sets the bios guid for the vm.
      description: Specifies the vmmServer infrastructure specific settings for the virtual machine instance.
    VirtualMachineInstanceProperties:
      description: Defines the resource properties.
      type: object
      properties:
        availabilitySets:
          $ref: '#/components/schemas/AvailabilitySetList'
        osProfile:
          description: OS properties.
          $ref: '#/components/schemas/OsProfileForVMInstance'
        hardwareProfile:
          description: Hardware properties.
          $ref: '#/components/schemas/HardwareProfile'
        networkProfile:
          description: Network properties.
          $ref: '#/components/schemas/NetworkProfile'
        storageProfile:
          description: Storage properties.
          $ref: '#/components/schemas/StorageProfile'
        infrastructureProfile:
          $ref: '#/components/schemas/InfrastructureProfile'
          description: Gets the infrastructure profile.
        powerState:
          description: Gets the power state of the virtual machine.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    OsType:
      description: Defines the different types of VM guest operating systems.
      enum:
        - Windows
        - Linux
        - Other
      x-ms-enum:
        modelAsString: true
        name: OsType
      type: string
      readOnly: true
    OsProfileForVMInstance:
      description: Defines the resource properties.
      type: object
      properties:
        adminPassword:
          description: Admin password of the virtual machine.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        computerName:
          description: Gets or sets computer name.
          type: string
        osType:
          description: Gets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osSku:
          description: Gets os sku.
          type: string
          readOnly: true
        osVersion:
          description: Gets os version.
          type: string
          readOnly: true
    HardwareProfile:
      description: Defines the resource properties.
      type: object
      properties:
        memoryMB:
          type: integer
          format: int32
          description: 'MemoryMB is the size of a virtual machine''s memory, in MB.'
        cpuCount:
          type: integer
          description: Gets or sets the number of vCPUs for the vm.
          format: int32
        limitCpuForMigration:
          type: string
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: LimitCpuForMigration
        dynamicMemoryEnabled:
          type: string
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: DynamicMemoryEnabled
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
        isHighlyAvailable:
          description: Gets highly available property.
          type: string
          readOnly: true
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: IsHighlyAvailable
    HardwareProfileUpdate:
      description: Defines the resource properties.
      type: object
      properties:
        memoryMB:
          type: integer
          format: int32
          description: 'MemoryMB is the size of a virtual machine''s memory, in MB.'
        cpuCount:
          type: integer
          description: Gets or sets the number of vCPUs for the vm.
          format: int32
        limitCpuForMigration:
          type: string
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: LimitCpuForMigration
        dynamicMemoryEnabled:
          type: string
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: DynamicMemoryEnabled
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
    Checkpoint:
      description: Defines the resource properties.
      type: object
      properties:
        parentCheckpointID:
          description: Gets ID of parent of the checkpoint.
          type: string
        checkpointID:
          description: Gets ID of the checkpoint.
          type: string
        name:
          description: Gets name of the checkpoint.
          type: string
        description:
          description: Gets description of the checkpoint.
          type: string
    NetworkProfileUpdate:
      description: Defines the resource properties.
      type: object
      properties:
        networkInterfaces:
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceUpdate'
          x-ms-identifiers:
            - name
            - nicId
    NetworkProfile:
      description: Defines the resource properties.
      type: object
      properties:
        networkInterfaces:
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers:
            - name
            - nicId
    AllocationMethod:
      description: Allocation method.
      enum:
        - Dynamic
        - Static
      x-ms-enum:
        modelAsString: true
        name: AllocationMethod
      type: string
    NetworkInterface:
      description: Network Interface model
      type: object
      properties:
        name:
          description: Gets or sets the name of the network interface.
          type: string
        displayName:
          description: Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
          type: string
          readOnly: true
        ipv4Addresses:
          description: Gets the nic ipv4 addresses.
          type: array
          items:
            type: string
          readOnly: true
        ipv6Addresses:
          description: Gets the nic ipv6 addresses.
          type: array
          items:
            type: string
          readOnly: true
        macAddress:
          description: Gets or sets the nic MAC address.
          type: string
        virtualNetworkId:
          description: Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/virtualNetwork
        networkName:
          description: Gets the name of the virtual network in vmmServer that the nic is connected to.
          type: string
          readOnly: true
        ipv4AddressType:
          description: Gets or sets the ipv4 address type.
          $ref: '#/components/schemas/AllocationMethod'
        ipv6AddressType:
          description: Gets or sets the ipv6 address type.
          $ref: '#/components/schemas/AllocationMethod'
        macAddressType:
          description: Gets or sets the mac address type.
          $ref: '#/components/schemas/AllocationMethod'
        nicId:
          description: Gets or sets the nic id.
          type: string
    NetworkInterfaceUpdate:
      description: Network Interface model
      type: object
      properties:
        name:
          description: Gets or sets the name of the network interface.
          type: string
        macAddress:
          description: Gets or sets the nic MAC address.
          type: string
        virtualNetworkId:
          description: Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/virtualNetwork
        ipv4AddressType:
          description: Gets or sets the ipv4 address type.
          $ref: '#/components/schemas/AllocationMethod'
        ipv6AddressType:
          description: Gets or sets the ipv6 address type.
          $ref: '#/components/schemas/AllocationMethod'
        macAddressType:
          description: Gets or sets the mac address type.
          $ref: '#/components/schemas/AllocationMethod'
        nicId:
          description: Gets or sets the nic id.
          type: string
    CloudCapacity:
      description: Cloud Capacity model
      type: object
      properties:
        cpuCount:
          type: integer
          format: int64
          description: CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
        memoryMB:
          type: integer
          format: int64
          description: MemoryMB specifies a memory usage limit in megabytes.
        vmCount:
          type: integer
          format: int64
          description: VMCount gives the max number of VMs that can be deployed in the cloud.
      readOnly: true
    StorageQoSPolicyDetails:
      description: The StorageQoSPolicyDetails definition.
      type: object
      properties:
        name:
          description: The name of the policy.
          type: string
        id:
          description: The ID of the QoS policy.
          type: string
    VirtualDisk:
      description: Virtual disk model
      type: object
      properties:
        name:
          description: Gets or sets the name of the disk.
          type: string
        displayName:
          description: Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.
          type: string
          readOnly: true
        diskId:
          description: Gets or sets the disk id.
          type: string
        diskSizeGB:
          format: int32
          description: Gets or sets the disk total size.
          type: integer
        maxDiskSizeGB:
          format: int32
          description: Gets the max disk size.
          type: integer
          readOnly: true
        bus:
          format: int32
          description: Gets or sets the disk bus.
          type: integer
        lun:
          format: int32
          description: Gets or sets the disk lun.
          type: integer
        busType:
          description: Gets or sets the disk bus type.
          type: string
        vhdType:
          description: Gets or sets the disk vhd type.
          type: string
        volumeType:
          description: Gets the disk volume type.
          type: string
          readOnly: true
        vhdFormatType:
          description: Gets the disk vhd format type.
          type: string
          readOnly: true
        templateDiskId:
          description: Gets or sets the disk id in the template.
          type: string
        storageQoSPolicy:
          description: The QoS policy for the disk.
          $ref: '#/components/schemas/StorageQoSPolicyDetails'
        createDiffDisk:
          type: string
          description: Gets or sets a value indicating diff disk.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: CreateDiffDisk
    VirtualDiskUpdate:
      description: Virtual disk model
      type: object
      properties:
        name:
          description: Gets or sets the name of the disk.
          type: string
        diskId:
          description: Gets or sets the disk id.
          type: string
        diskSizeGB:
          format: int32
          description: Gets or sets the disk total size.
          type: integer
        bus:
          format: int32
          description: Gets or sets the disk bus.
          type: integer
        lun:
          format: int32
          description: Gets or sets the disk lun.
          type: integer
        busType:
          description: Gets or sets the disk bus type.
          type: string
        vhdType:
          description: Gets or sets the disk vhd type.
          type: string
        storageQoSPolicy:
          description: The QoS policy for the disk.
          $ref: '#/components/schemas/StorageQoSPolicyDetails'
    StorageProfileUpdate:
      description: Defines the resource properties.
      type: object
      properties:
        disks:
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDiskUpdate'
          x-ms-identifiers:
            - name
            - diskId
    StorageProfile:
      description: Defines the resource properties.
      type: object
      properties:
        disks:
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - name
            - diskId
    StopVirtualMachineOptions:
      description: Defines the stop action properties.
      type: object
      properties:
        skipShutdown:
          description: Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.
          type: string
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: SkipShutdown
          default: 'false'
    VirtualMachineCreateCheckpoint:
      description: Defines the create checkpoint action properties.
      type: object
      properties:
        name:
          description: Name of the checkpoint.
          type: string
        description:
          description: Description of the checkpoint.
          type: string
    VirtualMachineDeleteCheckpoint:
      description: Defines the delete checkpoint action properties.
      type: object
      properties:
        id:
          description: ID of the checkpoint to be deleted.
          type: string
    VirtualMachineRestoreCheckpoint:
      description: Defines the restore checkpoint action properties.
      type: object
      properties:
        id:
          description: ID of the checkpoint to be restored to.
          type: string
    VirtualMachineInstance:
      description: Define the virtualMachineInstance.
      required:
        - properties
        - extendedLocation
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualMachineInstanceProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
      type: object
    VirtualMachineInstanceListResult:
      type: object
      description: List of VirtualMachineInstances.
      properties:
        value:
          type: array
          description: Array of VirtualMachineInstances.
          items:
            $ref: '#/components/schemas/VirtualMachineInstance'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
          format: uri
          readOnly: true
    InfrastructureProfileUpdate:
      type: object
      properties:
        checkpointType:
          type: string
          description: Type of checkpoint supported for the vm.
      description: Specifies the vmmServer infrastructure specific settings for the virtual machine instance for update.
    VirtualMachineInstanceUpdateProperties:
      description: Defines the resource properties.
      type: object
      properties:
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfileUpdate'
        storageProfile:
          $ref: '#/components/schemas/StorageProfileUpdate'
        networkProfile:
          $ref: '#/components/schemas/NetworkProfileUpdate'
        availabilitySets:
          $ref: '#/components/schemas/AvailabilitySetList'
        infrastructureProfile:
          $ref: '#/components/schemas/InfrastructureProfileUpdate'
          description: Gets the infrastructure profile.
    VirtualMachineInstanceUpdate:
      description: Defines the virtualMachineInstanceUpdate.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualMachineInstanceUpdateProperties'
      type: object
    VirtualMachineTemplateProperties:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the virtual machine template.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        osType:
          description: Gets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets os name.
          type: string
          readOnly: true
        computerName:
          description: Gets computer name.
          type: string
          readOnly: true
        memoryMB:
          type: integer
          format: int32
          description: 'MemoryMB is the desired size of a virtual machine''s memory, in MB.'
          readOnly: true
        cpuCount:
          type: integer
          description: Gets the desired number of vCPUs for the vm.
          format: int32
          readOnly: true
        limitCpuForMigration:
          type: string
          description: Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: LimitCpuForMigration
          readOnly: true
        dynamicMemoryEnabled:
          type: string
          description: Gets a value indicating whether to enable dynamic memory or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: DynamicMemoryEnabled
          readOnly: true
        isCustomizable:
          type: string
          description: Gets a value indicating whether the vm template is customizable or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: IsCustomizable
          readOnly: true
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets the max dynamic memory for the vm.
          readOnly: true
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets the min dynamic memory for the vm.
          readOnly: true
        isHighlyAvailable:
          description: Gets highly available property.
          type: string
          readOnly: true
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: IsHighlyAvailable
        generation:
          type: integer
          format: int32
          description: Gets the generation for the vm.
          readOnly: true
        networkInterfaces:
          description: Gets the network interfaces of the template.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers:
            - name
            - nicId
          readOnly: true
        disks:
          description: Gets the disks of the template.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - name
            - diskId
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    VirtualMachineTemplate:
      x-ms-azure-resource: true
      required:
        - properties
        - extendedLocation
      description: The VirtualMachineTemplates resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VirtualMachineTemplateProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    VirtualMachineTemplateListResult:
      type: object
      description: List of VirtualMachineTemplates.
      properties:
        value:
          description: List of VirtualMachineTemplates.
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineTemplate'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
          format: uri
          readOnly: true
    InventoryItemsList:
      description: List of InventoryItems.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of InventoryItems.
          type: string
          format: uri
          readOnly: true
        value:
          description: Array of InventoryItems
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
      required:
        - value
    InventoryItem:
      description: Defines the inventory item.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/InventoryItemProperties'
        kind:
          type: string
          description: 'Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.'
      type: object
    InventoryItemProperties:
      description: Defines the resource properties.
      required:
        - inventoryType
      discriminator:
        propertyName: inventoryType
      type: object
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    InventoryType:
      type: string
      description: The inventory type.
      enum:
        - Cloud
        - VirtualNetwork
        - VirtualMachineTemplate
        - VirtualMachine
      x-ms-enum:
        name: InventoryType
        modelAsString: true
    InventoryItemDetails:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        inventoryItemName:
          description: Gets or sets the Managed Object name in VMM for the resource.
          type: string
    CloudInventoryItem:
      description: The Cloud inventory item.
      x-ms-discriminator-value: Cloud
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      type: object
    VirtualNetworkInventoryItem:
      description: The Virtual network inventory item.
      x-ms-discriminator-value: VirtualNetwork
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      type: object
    VirtualMachineTemplateInventoryItem:
      description: The Virtual machine template inventory item.
      x-ms-discriminator-value: VirtualMachineTemplate
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
        cpuCount:
          type: integer
          description: Gets the desired number of vCPUs for the vm.
          format: int32
          readOnly: true
        memoryMB:
          type: integer
          format: int32
          description: 'MemoryMB is the desired size of a virtual machine''s memory, in MB.'
          readOnly: true
        osType:
          description: Gets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets os name.
          type: string
          readOnly: true
      type: object
    VirtualMachineInventoryItem:
      description: The Virtual machine inventory item.
      x-ms-discriminator-value: VirtualMachine
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
        osType:
          description: Gets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets os name.
          type: string
          readOnly: true
        osVersion:
          description: Gets os version.
          type: string
          readOnly: true
        powerState:
          description: Gets the power state of the virtual machine.
          type: string
          readOnly: true
        ipAddresses:
          description: Gets or sets the nic ip addresses.
          type: array
          items:
            type: string
        cloud:
          description: Cloud inventory resource details where the VM is present.
          $ref: '#/components/schemas/InventoryItemDetails'
        biosGuid:
          description: Gets the bios guid.
          type: string
          readOnly: true
        managedMachineResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          format: arm-id
          readOnly: true
      type: object
    VmInstanceHybridIdentityMetadataList:
      description: List of HybridIdentityMetadata.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of HybridIdentityMetadata.
          type: string
          format: uri
          readOnly: true
        value:
          description: Array of HybridIdentityMetadata
          type: array
          items:
            $ref: '#/components/schemas/VmInstanceHybridIdentityMetadata'
      required:
        - value
    VmInstanceHybridIdentityMetadata:
      description: Defines the HybridIdentityMetadata.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/VmInstanceHybridIdentityMetadataProperties'
      type: object
    VmInstanceHybridIdentityMetadataProperties:
      description: Describes the properties of Hybrid Identity Metadata for a Virtual Machine.
      type: object
      properties:
        resourceUid:
          description: The unique identifier for the resource.
          type: string
        publicKey:
          description: Gets or sets the Public Key.
          type: string
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    ProvisioningAction:
      description: Defines the different types of operations for guest agent.
      enum:
        - install
        - uninstall
        - repair
      type: string
      x-ms-enum:
        modelAsString: true
        name: ProvisioningAction
    GuestCredential:
      description: Username / Password Credentials to connect to guest.
      type: object
      properties:
        username:
          description: Gets or sets username to connect with the guest.
          type: string
        password:
          description: Gets or sets the password to connect with the guest.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
      required:
        - username
        - password
    HttpProxyConfiguration:
      description: HTTP Proxy configuration for the VM.
      type: object
      properties:
        httpsProxy:
          description: Gets or sets httpsProxy url.
          type: string
    GuestAgentList:
      description: List of GuestAgent.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of GuestAgent.
          type: string
          format: uri
          readOnly: true
        value:
          description: Array of GuestAgent
          type: array
          items:
            $ref: '#/components/schemas/GuestAgent'
      required:
        - value
    GuestAgent:
      description: Defines the GuestAgent.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/GuestAgentProperties'
      type: object
    GuestAgentProperties:
      description: Defines the resource properties.
      type: object
      properties:
        uuid:
          description: Gets a unique identifier for this resource.
          type: string
          readOnly: true
        credentials:
          description: Username / Password Credentials to provision guest agent.
          $ref: '#/components/schemas/GuestCredential'
        httpProxyConfig:
          description: HTTP Proxy configuration for the VM.
          $ref: '#/components/schemas/HttpProxyConfiguration'
        provisioningAction:
          description: Gets or sets the guest agent provisioning action.
          $ref: '#/components/schemas/ProvisioningAction'
          type: string
        status:
          description: Gets the guest agent status.
          type: string
          readOnly: true
        customResourceName:
          description: Gets the name of the corresponding resource in Kubernetes.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    StorageQoSPolicy:
      description: The StorageQoSPolicy definition.
      type: object
      properties:
        name:
          description: The name of the policy.
          type: string
        id:
          description: The ID of the QoS policy.
          type: string
        iopsMaximum:
          description: The maximum IO operations per second.
          type: integer
          format: int64
        iopsMinimum:
          description: The minimum IO operations per second.
          type: integer
          format: int64
        bandwidthLimit:
          description: The Bandwidth Limit for internet traffic.
          type: integer
          format: int64
        policyId:
          description: The underlying policy.
          type: string
    ResourcePatch:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Object containing tags updates for patch operations.
    ResourceProvisioningState:
      type: string
      description: The provisioning state of a resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
        - Created
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    VMMCredential:
      description: Credentials to connect to VMMServer.
      type: object
      properties:
        username:
          description: Username to use to connect to VMMServer.
          type: string
        password:
          description: Password to use to connect to VMMServer.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
  x-stackQL-resources:
    vmm_servers:
      id: azure.system_center_vm_manager.vmm_servers
      name: vmm_servers
      title: Vmm Servers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/delete'
    operations:
      id: azure.system_center_vm_manager.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ScVmm~1operations~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ScVmm~1operations~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    clouds:
      id: azure.system_center_vm_manager.clouds
      name: clouds
      title: Clouds
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/get'
          - $ref: '#/components/x-stackQL-resources/clouds/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clouds/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/delete'
    virtual_networks:
      id: azure.system_center_vm_manager.virtual_networks
      name: virtual_networks
      title: Virtual Networks
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/delete'
    virtual_machine_templates:
      id: azure.system_center_vm_manager.virtual_machine_templates
      name: virtual_machine_templates
      title: Virtual Machine Templates
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/delete'
    availability_sets:
      id: azure.system_center_vm_manager.availability_sets
      name: availability_sets
      title: Availability Sets
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/delete'
    inventory_items:
      id: azure.system_center_vm_manager.inventory_items
      name: inventory_items
      title: Inventory Items
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemResourceName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemResourceName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemResourceName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_vm_m_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_vm_m_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/get'
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/list_by_vm_m_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/delete'
    virtual_machine_instances:
      id: azure.system_center_vm_manager.virtual_machine_instances
      name: virtual_machine_instances
      title: Virtual Machine Instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        stop:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1stop~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        start:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1start~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        restart:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1restart~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        restore_checkpoint:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1restoreCheckpoint~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/delete'
    virtual_machine_instances_list:
      id: azure.system_center_vm_manager.virtual_machine_instances_list
      name: virtual_machine_instances_list
      title: Virtual Machine Instances List
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances_list/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_instance_hybrid_identity_metadata:
      id: azure.system_center_vm_manager.virtual_machine_instance_hybrid_identity_metadata
      name: virtual_machine_instance_hybrid_identity_metadata
      title: Virtual Machine Instance Hybrid Identity Metadata
      methods:
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1hybridIdentityMetadata~1default~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instance_hybrid_identity_metadata/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_instance_hybrid_identity_metadata_list:
      id: azure.system_center_vm_manager.virtual_machine_instance_hybrid_identity_metadata_list
      name: virtual_machine_instance_hybrid_identity_metadata_list
      title: Virtual Machine Instance Hybrid Identity Metadata List
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1hybridIdentityMetadata~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1hybridIdentityMetadata~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instance_hybrid_identity_metadata_list/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_instances_checkpoint:
      id: azure.system_center_vm_manager.virtual_machine_instances_checkpoint
      name: virtual_machine_instances_checkpoint
      title: Virtual Machine Instances Checkpoint
      methods:
        create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1createCheckpoint~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1deleteCheckpoint~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances_checkpoint/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances_checkpoint/methods/delete'
    vm_instance_guest_agents:
      id: azure.system_center_vm_manager.vm_instance_guest_agents
      name: vm_instance_guest_agents
      title: Vm Instance Guest Agents
      methods:
        create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vm_instance_guest_agents/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/vm_instance_guest_agents/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vm_instance_guest_agents/methods/delete'
    vm_instance_guest_agents_list:
      id: azure.system_center_vm_manager.vm_instance_guest_agents_list
      name: vm_instance_guest_agents_list
      title: Vm Instance Guest Agents List
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vm_instance_guest_agents_list/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/?api-version=2023-10-07':
    get:
      tags:
        - VmmServers
      operationId: VmmServers_Get
      summary: Gets a VMMServer.
      description: Implements VMMServer GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      responses:
        '200':
          description: Retrieves the VmmServers resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vmm_servers
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - VmmServers
      operationId: VmmServers_CreateOrUpdate
      description: Onboards the SCVMM fabric as an Azure VmmServer resource.
      summary: Implements VmmServers PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMMServer'
      responses:
        '200':
          description: Creates or Updates the VmmServers resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        '201':
          description: Creates or Updates the VmmServers resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vmm_servers
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - VmmServers
      operationId: VmmServers_Delete
      description: Removes the SCVMM fabric from Azure.
      summary: Implements VmmServers DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            enum:
              - 'false'
              - 'true'
            x-ms-enum:
              modelAsString: true
              name: Force
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vmm_servers
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      tags:
        - VmmServers
      operationId: VmmServers_Update
      summary: Implements VmmServers PATCH method.
      description: Updates the VmmServers resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: VmmServers patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vmm_servers
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/?api-version=2023-10-07':
    get:
      tags:
        - VmmServers
      operationId: VmmServers_ListByResourceGroup
      summary: Implements GET VmmServers in a resource group.
      description: List of VmmServers in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all VmmServers under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vmm_servers
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/vmmServers/?api-version=2023-10-07':
    get:
      tags:
        - VmmServers
      operationId: VmmServers_ListBySubscription
      summary: Implements GET VmmServers in a subscription.
      description: List of VmmServers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all VmmServers under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vmm_servers
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /providers/Microsoft.ScVmm/operations/?api-version=2023-10-07:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Returns list of all operations.
      parameters: []
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds/{cloudResourceName}/?api-version=2023-10-07':
    get:
      tags:
        - Clouds
      operationId: Clouds_Get
      summary: Gets a Cloud.
      description: Implements Cloud GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      responses:
        '200':
          description: Retrieves the Clouds resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: clouds
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - Clouds
      operationId: Clouds_CreateOrUpdate
      description: Onboards the ScVmm fabric cloud as an Azure cloud resource.
      summary: Implements Clouds PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloud'
      responses:
        '200':
          description: Creates or Updates the Clouds resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '201':
          description: Creates or Updates the Clouds resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: clouds
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - Clouds
      operationId: Clouds_Delete
      description: Deregisters the ScVmm fabric cloud from Azure.
      summary: Implements Cloud resource DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            enum:
              - 'false'
              - 'true'
            x-ms-enum:
              modelAsString: true
              name: Force
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: clouds
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      tags:
        - Clouds
      operationId: Clouds_Update
      summary: Implements the Clouds PATCH method.
      description: Updates the Clouds resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: Clouds patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: clouds
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds/?api-version=2023-10-07':
    get:
      tags:
        - Clouds
      operationId: Clouds_ListByResourceGroup
      summary: Implements GET Clouds in a resource group.
      description: List of Clouds in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Clouds under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clouds
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/clouds/?api-version=2023-10-07':
    get:
      tags:
        - Clouds
      operationId: Clouds_ListBySubscription
      summary: Implements GET Clouds in a subscription.
      description: List of Clouds in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Clouds under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clouds
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks/{virtualNetworkName}/?api-version=2023-10-07':
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Get
      summary: Gets a VirtualNetwork.
      description: Implements VirtualNetwork GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      responses:
        '200':
          description: Retrieves the VirtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_networks
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_CreateOrUpdate
      description: Onboards the ScVmm virtual network as an Azure virtual network resource.
      summary: Implements VirtualNetworks PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
      responses:
        '200':
          description: Creates or Updates the VirtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '201':
          description: Creates or Updates the VirtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Delete
      description: Deregisters the ScVmm virtual network from Azure.
      summary: Implements VirtualNetwork DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            enum:
              - 'false'
              - 'true'
            x-ms-enum:
              modelAsString: true
              name: Force
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Update
      summary: Implements the VirtualNetworks PATCH method.
      description: Updates the VirtualNetworks resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: VirtualNetworks patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks/?api-version=2023-10-07':
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_ListByResourceGroup
      summary: Implements GET VirtualNetworks in a resource group.
      description: List of VirtualNetworks in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all VirtualNetworks under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualNetworks/?api-version=2023-10-07':
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_ListBySubscription
      summary: Implements GET VirtualNetworks in a subscription.
      description: List of VirtualNetworks in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all VirtualNetworks under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates/{virtualMachineTemplateName}/?api-version=2023-10-07':
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Get
      summary: Gets a VirtualMachineTemplate.
      description: Implements VirtualMachineTemplate GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      responses:
        '200':
          description: Retrieves the VirtualMachineTemplates resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_CreateOrUpdate
      description: Onboards the ScVmm VM Template as an Azure VM Template resource.
      summary: Implements VirtualMachineTemplates PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineTemplate'
      responses:
        '200':
          description: Creates or Updates the VirtualMachineTemplates resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '201':
          description: Creates or Updates the VirtualMachineTemplates resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Delete
      description: Deregisters the ScVmm VM Template from Azure.
      summary: Implements VirtualMachineTemplate DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            enum:
              - 'false'
              - 'true'
            x-ms-enum:
              modelAsString: true
              name: Force
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Update
      summary: Implements the VirtualMachineTemplate PATCH method.
      description: Updates the VirtualMachineTemplate resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: VirtualMachineTemplates patch details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates/?api-version=2023-10-07':
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_ListByResourceGroup
      summary: Implements GET VirtualMachineTemplates in a resource group.
      description: List of VirtualMachineTemplates in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all VirtualMachineTemplates under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualMachineTemplates/?api-version=2023-10-07':
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_ListBySubscription
      summary: Implements GET VirtualMachineTemplates in a subscription.
      description: List of VirtualMachineTemplates in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all VirtualMachineTemplates under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets/{availabilitySetResourceName}/?api-version=2023-10-07':
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Get
      summary: Gets an AvailabilitySet.
      description: Implements AvailabilitySet GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      responses:
        '200':
          description: Retrieves the AvailabilitySet resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: availability_sets
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_CreateOrUpdate
      description: Onboards the ScVmm availability set as an Azure resource.
      summary: Implements AvailabilitySets PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilitySet'
      responses:
        '200':
          description: Creates or Updates the AvailabilitySets resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        '201':
          description: Creates or Updates the AvailabilitySets resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: availability_sets
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Delete
      description: Deregisters the ScVmm availability set from Azure.
      summary: Implements AvailabilitySet DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            enum:
              - 'false'
              - 'true'
            x-ms-enum:
              modelAsString: true
              name: Force
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: availability_sets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Update
      summary: Implements the AvailabilitySets PATCH method.
      description: Updates the AvailabilitySets resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      requestBody:
        description: AvailabilitySets patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: availability_sets
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets/?api-version=2023-10-07':
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_ListByResourceGroup
      summary: Implements GET AvailabilitySets in a resource group.
      description: List of AvailabilitySets in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all AvailabilitySets under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: availability_sets
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/availabilitySets/?api-version=2023-10-07':
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_ListBySubscription
      summary: Implements GET AvailabilitySets in a subscription.
      description: List of AvailabilitySets in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all AvailabilitySets under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: availability_sets
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems/{inventoryItemResourceName}/?api-version=2023-10-07':
    put:
      tags:
        - InventoryItems
      operationId: InventoryItems_Create
      summary: Implements InventoryItem PUT method.
      description: Create Or Update InventoryItem.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: inventoryItemResourceName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      tags:
        - InventoryItems
      operationId: InventoryItems_Get
      summary: Implements GET InventoryItem method.
      description: Shows an inventory item.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: inventoryItemResourceName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      tags:
        - InventoryItems
      operationId: InventoryItems_Delete
      summary: Implements inventoryItem DELETE method.
      description: Deletes an inventoryItem.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
        - name: inventoryItemResourceName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems/?api-version=2023-10-07':
    get:
      tags:
        - InventoryItems
      operationId: InventoryItems_ListByVMMServer
      summary: Implements GET for the list of Inventory Items in the VMMServer.
      description: Returns the list of inventoryItems in the given VMMServer.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            pattern: '[a-zA-Z0-9-_\.]'
            minLength: 1
            maxLength: 54
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: inventory_items
      x-stackQL-method: list_by_vm_m_server
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/?api-version=2023-10-07':
    get:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_Get
      summary: Gets a virtual machine.
      description: Retrieves information about a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_CreateOrUpdate
      description: The operation to create or update a virtual machine instance. Please note some properties can be set only during virtual machine instance creation.
      summary: Implements virtual machine PUT method.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstance'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    patch:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_Update
      summary: Updates a virtual machine.
      description: The operation to update a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      requestBody:
        description: Resource properties to update.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstanceUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: update
      x-stackQL-verb: exec
    delete:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_Delete
      summary: Deletes an virtual machine.
      description: The operation to delete a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
        - name: force
          in: query
          description: Whether force delete was specified.
          required: false
          schema:
            enum:
              - 'false'
              - 'true'
            x-ms-enum:
              modelAsString: true
              name: Force
            type: string
        - name: deleteFromHost
          in: query
          description: Whether to disable the VM from azure and also delete it from VMM.
          required: false
          schema:
            enum:
              - 'false'
              - 'true'
            x-ms-enum:
              modelAsString: true
              name: DeleteFromHost
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/?api-version=2023-10-07':
    get:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_List
      summary: Implements List virtual machine instances.
      description: Lists all of the virtual machine instances within the specified parent resource.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstanceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_instances_list
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/stop/?api-version=2023-10-07':
    post:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_Stop
      description: The operation to power off (stop) a virtual machine instance.
      summary: Implements the operation to stop a virtual machine.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      requestBody:
        description: Virtualmachine stop action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopVirtualMachineOptions'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/start/?api-version=2023-10-07':
    post:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_Start
      description: The operation to start a virtual machine instance.
      summary: Implements the operation to start a virtual machine.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/restart/?api-version=2023-10-07':
    post:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_Restart
      description: The operation to restart a virtual machine instance.
      summary: Implements the operation to restart a virtual machine.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: restart
      x-stackQL-verb: exec
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/hybridIdentityMetadata/default/?api-version=2023-10-07':
    get:
      tags:
        - VmInstanceHybridIdentityMetadata
      operationId: VirtualMachineInstanceHybridIdentityMetadata_Get
      summary: Gets HybridIdentityMetadata.
      description: Implements HybridIdentityMetadata GET method.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmInstanceHybridIdentityMetadata'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machine_instance_hybrid_identity_metadata
      x-stackQL-method: get
      x-stackQL-verb: select
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/hybridIdentityMetadata/?api-version=2023-10-07':
    get:
      tags:
        - VmInstanceHybridIdentityMetadata
      operationId: VirtualMachineInstanceHybridIdentityMetadata_List
      summary: Implements GET HybridIdentityMetadata in a vm.
      description: Returns the list of HybridIdentityMetadata of the given vm.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmInstanceHybridIdentityMetadataList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_instance_hybrid_identity_metadata_list
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/createCheckpoint/?api-version=2023-10-07':
    post:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_CreateCheckpoint
      description: Creates a checkpoint in virtual machine instance.
      summary: Implements the operation to creates a checkpoint in a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      requestBody:
        description: Virtualmachine create checkpoint action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineCreateCheckpoint'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machine_instances_checkpoint
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/deleteCheckpoint/?api-version=2023-10-07':
    post:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_DeleteCheckpoint
      description: Deletes a checkpoint in virtual machine instance.
      summary: Implements the operation to delete a checkpoint in a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      requestBody:
        description: Virtualmachine delete checkpoint action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineDeleteCheckpoint'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machine_instances_checkpoint
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/restoreCheckpoint/?api-version=2023-10-07':
    post:
      tags:
        - VirtualMachineInstances
      operationId: VirtualMachineInstances_RestoreCheckpoint
      description: Restores to a checkpoint in virtual machine instance.
      summary: Implements the operation to restores to a checkpoint in a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      requestBody:
        description: Virtualmachine restore checkpoint action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRestoreCheckpoint'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machine_instances
      x-stackQL-method: restore_checkpoint
      x-stackQL-verb: exec
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents/default/?api-version=2023-10-07':
    put:
      tags:
        - VMInstanceGuestAgents
      operationId: VMInstanceGuestAgents_Create
      description: Create Or Update GuestAgent.
      summary: Implements GuestAgent PUT method.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestAgent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vm_instance_guest_agents
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      tags:
        - VMInstanceGuestAgents
      operationId: VMInstanceGuestAgents_Get
      summary: Gets GuestAgent.
      description: Implements GuestAgent GET method.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vm_instance_guest_agents
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      tags:
        - VMInstanceGuestAgents
      operationId: VMInstanceGuestAgents_Delete
      summary: Deletes an GuestAgent.
      description: Implements GuestAgent DELETE method.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vm_instance_guest_agents
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents/?api-version=2023-10-07':
    get:
      tags:
        - VMInstanceGuestAgents
      operationId: VMInstanceGuestAgents_List
      summary: Implements GET GuestAgent in a vm.
      description: Returns the list of GuestAgent of the given vm.
      parameters:
        - $ref: '#/components/parameters/resourceUriParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vm_instance_guest_agents_list
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
