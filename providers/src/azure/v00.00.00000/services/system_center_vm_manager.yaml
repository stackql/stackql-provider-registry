openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: System Center VM Manager
  description: The System Center Virtual Machine Manager (VMM) is part of the System Center suite used to configure, manage, and transform traditional datacenters. It helps to provide a unified management experience across on-premises, service provider, and the Azure cloud.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    Azure.ResourceManager.ResourceUriParameter:
      name: resourceUri
      in: path
      description: The fully qualified Azure Resource manager identifier of the resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    QueryForceDelete:
      name: force
      in: query
      description: Forces the resource to be deleted.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - 'true'
          - 'false'
        x-ms-enum:
          name: ForceDelete
          modelAsString: true
          values:
            - name: 'true'
              value: 'true'
              description: Enable force delete.
            - name: 'false'
              value: 'false'
              description: Disable force delete.
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AllocationMethod:
      type: string
      description: Network address allocation method.
      enum:
        - Dynamic
        - Static
      x-ms-enum:
        name: AllocationMethod
        modelAsString: true
        values:
          - name: Dynamic
            value: Dynamic
            description: Dynamically allocated address.
          - name: Static
            value: Static
            description: Statically allocated address.
    AvailabilitySet:
      description: The AvailabilitySets resource definition.
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/AvailabilitySetProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    AvailabilitySetListItem:
      type: object
      description: Availability Set model
      properties:
        id:
          type: string
          format: arm-id
          description: Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/availabilitySets
        name:
          type: string
          description: Gets or sets the name of the availability set.
    AvailabilitySetListResult:
      type: object
      description: The response of a AvailabilitySet list operation.
      properties:
        value:
          type: array
          description: The AvailabilitySet items on this page
          items:
            $ref: '#/components/schemas/AvailabilitySet'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    AvailabilitySetProperties:
      type: object
      description: Defines the resource properties.
      properties:
        availabilitySetName:
          type: string
          description: Name of the availability set.
          minLength: 1
        vmmServerId:
          type: string
          format: arm-id
          description: ARM Id of the vmmServer resource in which this resource resides.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    AvailabilitySetTagsUpdate:
      type: object
      description: The type used for updating tags in AvailabilitySet resources.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
    Checkpoint:
      type: object
      description: Defines the resource properties.
      properties:
        parentCheckpointID:
          type: string
          description: Gets ID of parent of the checkpoint.
          x-ms-client-name: parentCheckpointId
        checkpointID:
          type: string
          description: Gets ID of the checkpoint.
          x-ms-client-name: checkpointId
        name:
          type: string
          description: Gets name of the checkpoint.
        description:
          type: string
          description: Gets description of the checkpoint.
    Cloud:
      description: The Clouds resource definition.
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/CloudProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    CloudCapacity:
      type: object
      description: Cloud Capacity model
      properties:
        cpuCount:
          type: integer
          format: int64
          description: CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
          readOnly: true
        memoryMB:
          type: integer
          format: int64
          description: MemoryMB specifies a memory usage limit in megabytes.
          readOnly: true
        vmCount:
          type: integer
          format: int64
          description: VMCount gives the max number of VMs that can be deployed in the cloud.
          readOnly: true
    CloudInventoryItem:
      description: The Cloud inventory item.
      x-ms-discriminator-value: Cloud
      properties:
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
          description: They inventory type.
        managedResourceId:
          type: string
          description: Gets the tracked resource id corresponding to the inventory resource.
          readOnly: true
        uuid:
          type: string
          description: Gets the UUID (which is assigned by Vmm) for the inventory item.
          readOnly: true
        inventoryItemName:
          type: string
          description: Gets the Managed Object name in Vmm for the inventory item.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      type: object
    CloudListResult:
      type: object
      description: The response of a Cloud list operation.
      properties:
        value:
          type: array
          description: The Cloud items on this page
          items:
            $ref: '#/components/schemas/Cloud'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    CloudProperties:
      type: object
      description: Defines the resource properties.
      properties:
        inventoryItemId:
          type: string
          description: Gets or sets the inventory Item ID for the resource.
        uuid:
          type: string
          description: Unique ID of the cloud.
          pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        vmmServerId:
          type: string
          format: arm-id
          description: ARM Id of the vmmServer resource in which this resource resides.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        cloudName:
          type: string
          description: Name of the cloud in VmmServer.
          readOnly: true
        cloudCapacity:
          $ref: '#/components/schemas/CloudCapacity'
          description: Capacity of the cloud.
          readOnly: true
        storageQoSPolicies:
          type: array
          description: List of QoS policies available for the cloud.
          items:
            $ref: '#/components/schemas/StorageQosPolicy'
          readOnly: true
          x-ms-client-name: storageQosPolicies
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    CloudTagsUpdate:
      type: object
      description: The type used for updating tags in Cloud resources.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
    CreateDiffDisk:
      type: string
      description: Create diff disk.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: CreateDiffDisk
        modelAsString: true
        values:
          - name: 'true'
            value: 'true'
            description: Enable create diff disk.
          - name: 'false'
            value: 'false'
            description: Disable create diff disk.
    DynamicMemoryEnabled:
      type: string
      description: Dynamic memory enabled.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: DynamicMemoryEnabled
        modelAsString: true
        values:
          - name: 'true'
            value: 'true'
            description: Enable dynamic memory.
          - name: 'false'
            value: 'false'
            description: Disable dynamic memory.
    ExtendedLocation:
      type: object
      description: The extended location.
      properties:
        type:
          type: string
          description: The extended location type.
        name:
          type: string
          format: arm-id
          description: The extended location name.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ExtendedLocation/customLocations
    GuestAgent:
      description: Defines the GuestAgent.
      properties:
        properties:
          $ref: '#/components/schemas/GuestAgentProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    GuestAgentListResult:
      type: object
      description: The response of a GuestAgent list operation.
      properties:
        value:
          type: array
          description: The GuestAgent items on this page
          items:
            $ref: '#/components/schemas/GuestAgent'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    GuestAgentProperties:
      type: object
      description: Defines the resource properties.
      properties:
        uuid:
          type: string
          description: Gets a unique identifier for this resource.
          readOnly: true
        credentials:
          $ref: '#/components/schemas/GuestCredential'
          description: Username / Password Credentials to provision guest agent.
        httpProxyConfig:
          $ref: '#/components/schemas/HttpProxyConfiguration'
          description: HTTP Proxy configuration for the VM.
        provisioningAction:
          $ref: '#/components/schemas/ProvisioningAction'
          description: Gets or sets the guest agent provisioning action.
        status:
          type: string
          description: Gets the guest agent status.
          readOnly: true
        customResourceName:
          type: string
          description: Gets the name of the corresponding resource in Kubernetes.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    GuestCredential:
      type: object
      description: Username / Password Credentials to connect to guest.
      properties:
        username:
          type: string
          description: Gets or sets username to connect with the guest.
        password:
          type: string
          format: password
          description: Gets or sets the password to connect with the guest.
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
      required:
        - username
        - password
    HardwareProfile:
      type: object
      description: Defines the resource properties.
      properties:
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the size of a virtual machine's memory, in MB.
        cpuCount:
          type: integer
          format: int32
          description: Gets or sets the number of vCPUs for the vm.
        limitCpuForMigration:
          $ref: '#/components/schemas/LimitCpuForMigration'
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        dynamicMemoryEnabled:
          $ref: '#/components/schemas/DynamicMemoryEnabled'
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
        isHighlyAvailable:
          $ref: '#/components/schemas/IsHighlyAvailable'
          description: Gets highly available property.
          readOnly: true
    HardwareProfileUpdate:
      type: object
      description: Defines the resource update properties.
      properties:
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the size of a virtual machine's memory, in MB.
        cpuCount:
          type: integer
          format: int32
          description: Gets or sets the number of vCPUs for the vm.
        limitCpuForMigration:
          $ref: '#/components/schemas/LimitCpuForMigration'
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        dynamicMemoryEnabled:
          $ref: '#/components/schemas/DynamicMemoryEnabled'
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
    HttpProxyConfiguration:
      type: object
      description: HTTP Proxy configuration for the VM.
      properties:
        httpsProxy:
          type: string
          description: Gets or sets httpsProxy url.
    InfrastructureProfile:
      type: object
      description: Specifies the vmmServer infrastructure specific settings for the virtual machine instance.
      properties:
        inventoryItemId:
          type: string
          description: Gets or sets the inventory Item ID for the resource.
          x-ms-mutability:
            - read
            - create
        vmmServerId:
          type: string
          format: arm-id
          description: ARM Id of the vmmServer resource in which this resource resides.
          x-ms-mutability:
            - read
            - create
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        cloudId:
          type: string
          format: arm-id
          description: ARM Id of the cloud resource to use for deploying the vm.
          x-ms-mutability:
            - read
            - create
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/clouds
        templateId:
          type: string
          format: arm-id
          description: ARM Id of the template resource to use for deploying the vm.
          x-ms-mutability:
            - read
            - create
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/virtualMachineTemplates
        vmName:
          type: string
          description: VMName is the name of VM on the SCVmm server.
          minLength: 1
          x-ms-mutability:
            - read
            - create
        uuid:
          type: string
          description: Unique ID of the virtual machine.
          x-ms-mutability:
            - read
            - create
        lastRestoredVMCheckpoint:
          $ref: '#/components/schemas/Checkpoint'
          description: Last restored checkpoint in the vm.
          readOnly: true
          x-ms-client-name: lastRestoredVmCheckpoint
        checkpoints:
          type: array
          description: Checkpoints in the vm.
          items:
            $ref: '#/components/schemas/Checkpoint'
          readOnly: true
          x-ms-identifiers:
            - checkpointID
        checkpointType:
          type: string
          description: Type of checkpoint supported for the vm.
          x-ms-mutability:
            - read
            - update
            - create
        generation:
          type: integer
          format: int32
          description: Gets or sets the generation for the vm.
          x-ms-mutability:
            - read
            - create
        biosGuid:
          type: string
          description: Gets or sets the bios guid for the vm.
          x-ms-mutability:
            - read
            - create
    InfrastructureProfileUpdate:
      type: object
      description: Specifies the vmmServer infrastructure specific update settings for the virtual machine instance.
      properties:
        checkpointType:
          type: string
          description: Type of checkpoint supported for the vm.
          x-ms-mutability:
            - read
            - update
            - create
    InventoryItem:
      description: Defines the inventory item.
      properties:
        properties:
          $ref: '#/components/schemas/InventoryItemProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    InventoryItemDetails:
      type: object
      description: Defines the resource properties.
      properties:
        inventoryItemId:
          type: string
          description: Gets or sets the inventory Item ID for the resource.
        inventoryItemName:
          type: string
          description: Gets or sets the Managed Object name in Vmm for the resource.
    InventoryItemListResult:
      type: object
      description: The response of a InventoryItem list operation.
      properties:
        value:
          type: array
          description: The InventoryItem items on this page
          items:
            $ref: '#/components/schemas/InventoryItem'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    InventoryItemProperties:
      type: object
      description: Defines the resource properties.
      properties:
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
          description: They inventory type.
        managedResourceId:
          type: string
          description: Gets the tracked resource id corresponding to the inventory resource.
          readOnly: true
        uuid:
          type: string
          description: Gets the UUID (which is assigned by Vmm) for the inventory item.
          readOnly: true
        inventoryItemName:
          type: string
          description: Gets the Managed Object name in Vmm for the inventory item.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      discriminator:
        propertyName: inventoryType
      required:
        - inventoryType
    InventoryType:
      type: string
      description: The inventory type
      enum:
        - Cloud
        - VirtualNetwork
        - VirtualMachine
        - VirtualMachineTemplate
      x-ms-enum:
        name: InventoryType
        modelAsString: true
        values:
          - name: Cloud
            value: Cloud
            description: Cloud inventory type
          - name: VirtualNetwork
            value: VirtualNetwork
            description: VirtualNetwork inventory type
          - name: VirtualMachine
            value: VirtualMachine
            description: VirtualMachine inventory type
          - name: VirtualMachineTemplate
            value: VirtualMachineTemplate
            description: VirtualMachineTemplate inventory type
    IsCustomizable:
      type: string
      description: Customizable.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: IsCustomizable
        modelAsString: true
        values:
          - name: 'true'
            value: 'true'
            description: Enable customizable.
          - name: 'false'
            value: 'false'
            description: Disable customizable.
    IsHighlyAvailable:
      type: string
      description: Highly available.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: IsHighlyAvailable
        modelAsString: true
        values:
          - name: 'true'
            value: 'true'
            description: Enable highly available.
          - name: 'false'
            value: 'false'
            description: Disable highly available.
    LimitCpuForMigration:
      type: string
      description: Limit CPU for migration.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: LimitCpuForMigration
        modelAsString: true
        values:
          - name: 'true'
            value: 'true'
            description: Enable limit CPU for migration.
          - name: 'false'
            value: 'false'
            description: Disable limit CPU for migration.
    NetworkInterface:
      type: object
      description: Network Interface model
      properties:
        name:
          type: string
          description: Gets or sets the name of the network interface.
        displayName:
          type: string
          description: Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
          readOnly: true
        ipv4Addresses:
          type: array
          description: Gets the nic ipv4 addresses.
          items:
            type: string
          readOnly: true
        ipv6Addresses:
          type: array
          description: Gets the nic ipv6 addresses.
          items:
            type: string
          readOnly: true
        macAddress:
          type: string
          description: Gets or sets the nic MAC address.
        virtualNetworkId:
          type: string
          format: arm-id
          description: Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/virtualNetwork
        networkName:
          type: string
          description: Gets the name of the virtual network in vmmServer that the nic is connected to.
          readOnly: true
        ipv4AddressType:
          $ref: '#/components/schemas/AllocationMethod'
          description: Gets or sets the ipv4 address type.
        ipv6AddressType:
          $ref: '#/components/schemas/AllocationMethod'
          description: Gets or sets the ipv6 address type.
        macAddressType:
          $ref: '#/components/schemas/AllocationMethod'
          description: Gets or sets the mac address type.
        nicId:
          type: string
          description: Gets or sets the nic id.
    NetworkInterfaceUpdate:
      type: object
      description: Network Interface Update model
      properties:
        name:
          type: string
          description: Gets or sets the name of the network interface.
        macAddress:
          type: string
          description: Gets or sets the nic MAC address.
        virtualNetworkId:
          type: string
          format: arm-id
          description: Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/virtualNetwork
        ipv4AddressType:
          $ref: '#/components/schemas/AllocationMethod'
          description: Gets or sets the ipv4 address type.
        ipv6AddressType:
          $ref: '#/components/schemas/AllocationMethod'
          description: Gets or sets the ipv6 address type.
        macAddressType:
          $ref: '#/components/schemas/AllocationMethod'
          description: Gets or sets the mac address type.
        nicId:
          type: string
          description: Gets or sets the nic id.
    NetworkProfile:
      type: object
      description: Defines the resource properties.
      properties:
        networkInterfaces:
          type: array
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers:
            - name
            - nicId
    NetworkProfileUpdate:
      type: object
      description: Defines the resource update properties.
      properties:
        networkInterfaces:
          type: array
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          items:
            $ref: '#/components/schemas/NetworkInterfaceUpdate'
          x-ms-identifiers:
            - name
            - nicId
    OsProfileForVmInstance:
      type: object
      description: Defines the resource properties.
      properties:
        adminPassword:
          type: string
          format: password
          description: Admin password of the virtual machine.
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
        computerName:
          type: string
          description: Gets or sets computer name.
        osType:
          $ref: '#/components/schemas/OsType'
          description: Gets the type of the os.
          readOnly: true
        osSku:
          type: string
          description: Gets os sku.
          readOnly: true
        osVersion:
          type: string
          description: Gets os version.
          readOnly: true
    OsType:
      type: string
      description: Virtual machine operating system type.
      enum:
        - Windows
        - Linux
        - Other
      x-ms-enum:
        name: OsType
        modelAsString: true
        values:
          - name: Windows
            value: Windows
            description: Windows operating system.
          - name: Linux
            value: Linux
            description: Linux operating system.
          - name: Other
            value: Other
            description: Other operating system.
    ProvisioningAction:
      type: string
      description: Guest agent provisioning action.
      enum:
        - install
        - uninstall
        - repair
      x-ms-enum:
        name: ProvisioningAction
        modelAsString: true
        values:
          - name: install
            value: install
            description: Install guest agent.
          - name: uninstall
            value: uninstall
            description: Uninstall guest agent.
          - name: repair
            value: repair
            description: Repair guest agent.
    ResourceProvisioningState:
      type: string
      description: The provisioning state of the resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
        - Created
      x-ms-enum:
        name: ResourceProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Provisioning
            value: Provisioning
            description: The resource is provisioning.
          - name: Updating
            value: Updating
            description: The resource is updating.
          - name: Deleting
            value: Deleting
            description: The resource is being deleted.
          - name: Accepted
            value: Accepted
            description: The resource has been accepted.
          - name: Created
            value: Created
            description: The resource was created.
      readOnly: true
    StopVirtualMachineOptions:
      type: object
      description: Defines the stop action properties.
      properties:
        skipShutdown:
          type: string
          description: Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.
          default: 'false'
          enum:
            - 'true'
            - 'false'
          x-ms-enum:
            name: SkipShutdown
            modelAsString: true
            values:
              - name: 'true'
                value: 'true'
                description: Enable skip shutdown.
              - name: 'false'
                value: 'false'
                description: Disable skip shutdown.
    StorageProfile:
      type: object
      description: Defines the resource properties.
      properties:
        disks:
          type: array
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - diskId
            - name
    StorageProfileUpdate:
      type: object
      description: Defines the resource update properties.
      properties:
        disks:
          type: array
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          items:
            $ref: '#/components/schemas/VirtualDiskUpdate'
          x-ms-identifiers:
            - diskId
            - name
    StorageQosPolicy:
      type: object
      description: The StorageQoSPolicy definition.
      properties:
        name:
          type: string
          description: The name of the policy.
        id:
          type: string
          description: The ID of the QoS policy.
        iopsMaximum:
          type: integer
          format: int64
          description: The maximum IO operations per second.
        iopsMinimum:
          type: integer
          format: int64
          description: The minimum IO operations per second.
        bandwidthLimit:
          type: integer
          format: int64
          description: The Bandwidth Limit for internet traffic.
        policyId:
          type: string
          description: The underlying policy.
    StorageQosPolicyDetails:
      type: object
      description: The StorageQoSPolicyDetails definition.
      properties:
        name:
          type: string
          description: The name of the policy.
        id:
          type: string
          description: The ID of the QoS policy.
    VirtualDisk:
      type: object
      description: Virtual disk model
      properties:
        name:
          type: string
          description: Gets or sets the name of the disk.
        displayName:
          type: string
          description: Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.
          readOnly: true
        diskId:
          type: string
          description: Gets or sets the disk id.
        diskSizeGB:
          type: integer
          format: int32
          description: Gets or sets the disk total size.
        maxDiskSizeGB:
          type: integer
          format: int32
          description: Gets the max disk size.
          readOnly: true
        bus:
          type: integer
          format: int32
          description: Gets or sets the disk bus.
        lun:
          type: integer
          format: int32
          description: Gets or sets the disk lun.
        busType:
          type: string
          description: Gets or sets the disk bus type.
        vhdType:
          type: string
          description: Gets or sets the disk vhd type.
        volumeType:
          type: string
          description: Gets the disk volume type.
          readOnly: true
        vhdFormatType:
          type: string
          description: Gets the disk vhd format type.
          readOnly: true
        templateDiskId:
          type: string
          description: Gets or sets the disk id in the template.
          x-ms-mutability:
            - read
            - create
        storageQoSPolicy:
          $ref: '#/components/schemas/StorageQosPolicyDetails'
          description: The QoS policy for the disk.
          x-ms-client-name: storageQosPolicy
        createDiffDisk:
          $ref: '#/components/schemas/CreateDiffDisk'
          description: Gets or sets a value indicating diff disk.
          x-ms-mutability:
            - read
            - create
    VirtualDiskUpdate:
      type: object
      description: Virtual Disk Update model
      properties:
        name:
          type: string
          description: Gets or sets the name of the disk.
        diskId:
          type: string
          description: Gets or sets the disk id.
        diskSizeGB:
          type: integer
          format: int32
          description: Gets or sets the disk total size.
        bus:
          type: integer
          format: int32
          description: Gets or sets the disk bus.
        lun:
          type: integer
          format: int32
          description: Gets or sets the disk lun.
        busType:
          type: string
          description: Gets or sets the disk bus type.
        vhdType:
          type: string
          description: Gets or sets the disk vhd type.
        storageQoSPolicy:
          $ref: '#/components/schemas/StorageQosPolicyDetails'
          description: The QoS policy for the disk.
          x-ms-client-name: storageQosPolicy
    VirtualMachineCreateCheckpoint:
      type: object
      description: Defines the create checkpoint action properties.
      properties:
        name:
          type: string
          description: Name of the checkpoint.
        description:
          type: string
          description: Description of the checkpoint.
    VirtualMachineDeleteCheckpoint:
      type: object
      description: Defines the delete checkpoint action properties.
      properties:
        id:
          type: string
          description: ID of the checkpoint to be deleted.
    VirtualMachineInstance:
      description: Define the virtualMachineInstance.
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/VirtualMachineInstanceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Gets or sets the extended location.
          x-ms-mutability:
            - read
            - create
      type: object
    VirtualMachineInstanceListResult:
      type: object
      description: The response of a VirtualMachineInstance list operation.
      properties:
        value:
          type: array
          description: The VirtualMachineInstance items on this page
          items:
            $ref: '#/components/schemas/VirtualMachineInstance'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    VirtualMachineInstanceProperties:
      type: object
      description: Defines the resource properties.
      properties:
        availabilitySets:
          type: array
          description: Availability Sets in vm.
          items:
            $ref: '#/components/schemas/AvailabilitySetListItem'
        osProfile:
          $ref: '#/components/schemas/OsProfileForVmInstance'
          description: OS properties.
          x-ms-mutability:
            - read
            - create
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfile'
          description: Hardware properties.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: Network properties.
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage properties.
        infrastructureProfile:
          $ref: '#/components/schemas/InfrastructureProfile'
          description: Gets the infrastructure profile.
        powerState:
          type: string
          description: Gets the power state of the virtual machine.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    VirtualMachineInstanceUpdate:
      description: The type used for update operations of the VirtualMachineInstance.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualMachineInstanceUpdateProperties'
          description: The update properties of the VirtualMachineInstance.
          x-ms-client-flatten: true
      type: object
    VirtualMachineInstanceUpdateProperties:
      type: object
      description: Virtual Machine Instance Properties Update model
      properties:
        availabilitySets:
          type: array
          description: Availability Sets in vm.
          items:
            $ref: '#/components/schemas/AvailabilitySetListItem'
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfileUpdate'
          description: Hardware properties.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfileUpdate'
          description: Network properties.
        storageProfile:
          $ref: '#/components/schemas/StorageProfileUpdate'
          description: Storage properties.
        infrastructureProfile:
          $ref: '#/components/schemas/InfrastructureProfileUpdate'
          description: Gets the infrastructure profile.
    VirtualMachineInventoryItem:
      description: The Virtual machine inventory item.
      x-ms-discriminator-value: VirtualMachine
      properties:
        osType:
          $ref: '#/components/schemas/OsType'
          description: Gets the type of the os.
          readOnly: true
        osName:
          type: string
          description: Gets os name.
          readOnly: true
        osVersion:
          type: string
          description: Gets os version.
          readOnly: true
        powerState:
          type: string
          description: Gets the power state of the virtual machine.
          readOnly: true
        ipAddresses:
          type: array
          description: Gets or sets the nic ip addresses.
          items:
            type: string
        cloud:
          $ref: '#/components/schemas/InventoryItemDetails'
          description: Cloud inventory resource details where the VM is present.
        biosGuid:
          type: string
          description: Gets the bios guid.
          readOnly: true
        managedMachineResourceId:
          type: string
          format: arm-id
          description: Gets the tracked resource id corresponding to the inventory resource.
          readOnly: true
          x-ms-arm-id-details:
            allowedResources: []
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
          description: They inventory type.
        managedResourceId:
          type: string
          description: Gets the tracked resource id corresponding to the inventory resource.
          readOnly: true
        uuid:
          type: string
          description: Gets the UUID (which is assigned by Vmm) for the inventory item.
          readOnly: true
        inventoryItemName:
          type: string
          description: Gets the Managed Object name in Vmm for the inventory item.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      type: object
    VirtualMachineRestoreCheckpoint:
      type: object
      description: Defines the restore checkpoint action properties.
      properties:
        id:
          type: string
          description: ID of the checkpoint to be restored to.
    VirtualMachineTemplate:
      description: The VirtualMachineTemplates resource definition.
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/VirtualMachineTemplateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    VirtualMachineTemplateInventoryItem:
      description: The Virtual machine template inventory item.
      x-ms-discriminator-value: VirtualMachineTemplate
      properties:
        cpuCount:
          type: integer
          format: int32
          description: Gets the desired number of vCPUs for the vm.
          readOnly: true
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the desired size of a virtual machine's memory, in MB.
          readOnly: true
        osType:
          $ref: '#/components/schemas/OsType'
          description: Gets the type of the os.
          readOnly: true
        osName:
          type: string
          description: Gets os name.
          readOnly: true
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
          description: They inventory type.
        managedResourceId:
          type: string
          description: Gets the tracked resource id corresponding to the inventory resource.
          readOnly: true
        uuid:
          type: string
          description: Gets the UUID (which is assigned by Vmm) for the inventory item.
          readOnly: true
        inventoryItemName:
          type: string
          description: Gets the Managed Object name in Vmm for the inventory item.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      type: object
    VirtualMachineTemplateListResult:
      type: object
      description: The response of a VirtualMachineTemplate list operation.
      properties:
        value:
          type: array
          description: The VirtualMachineTemplate items on this page
          items:
            $ref: '#/components/schemas/VirtualMachineTemplate'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    VirtualMachineTemplateProperties:
      type: object
      description: Defines the resource properties.
      properties:
        inventoryItemId:
          type: string
          description: Gets or sets the inventory Item ID for the resource.
        uuid:
          type: string
          description: Unique ID of the virtual machine template.
          pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        vmmServerId:
          type: string
          format: arm-id
          description: ARM Id of the vmmServer resource in which this resource resides.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        osType:
          $ref: '#/components/schemas/OsType'
          description: Gets the type of the os.
          readOnly: true
        osName:
          type: string
          description: Gets os name.
          readOnly: true
        computerName:
          type: string
          description: Gets computer name.
          readOnly: true
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the desired size of a virtual machine's memory, in MB.
          readOnly: true
        cpuCount:
          type: integer
          format: int32
          description: Gets the desired number of vCPUs for the vm.
          readOnly: true
        limitCpuForMigration:
          $ref: '#/components/schemas/LimitCpuForMigration'
          description: Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          readOnly: true
        dynamicMemoryEnabled:
          $ref: '#/components/schemas/DynamicMemoryEnabled'
          description: Gets a value indicating whether to enable dynamic memory or not.
          readOnly: true
        isCustomizable:
          $ref: '#/components/schemas/IsCustomizable'
          description: Gets a value indicating whether the vm template is customizable or not.
          readOnly: true
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets the max dynamic memory for the vm.
          readOnly: true
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets the min dynamic memory for the vm.
          readOnly: true
        isHighlyAvailable:
          $ref: '#/components/schemas/IsHighlyAvailable'
          description: Gets highly available property.
          readOnly: true
        generation:
          type: integer
          format: int32
          description: Gets the generation for the vm.
          readOnly: true
        networkInterfaces:
          type: array
          description: Gets the network interfaces of the template.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          readOnly: true
          x-ms-identifiers:
            - name
            - nicId
        disks:
          type: array
          description: Gets the disks of the template.
          items:
            $ref: '#/components/schemas/VirtualDisk'
          readOnly: true
          x-ms-identifiers:
            - diskId
            - name
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    VirtualMachineTemplateTagsUpdate:
      type: object
      description: The type used for updating tags in VirtualMachineTemplate resources.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
    VirtualNetwork:
      description: The VirtualNetworks resource definition.
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/VirtualNetworkProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    VirtualNetworkInventoryItem:
      description: The Virtual network inventory item.
      x-ms-discriminator-value: VirtualNetwork
      properties:
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
          description: They inventory type.
        managedResourceId:
          type: string
          description: Gets the tracked resource id corresponding to the inventory resource.
          readOnly: true
        uuid:
          type: string
          description: Gets the UUID (which is assigned by Vmm) for the inventory item.
          readOnly: true
        inventoryItemName:
          type: string
          description: Gets the Managed Object name in Vmm for the inventory item.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      type: object
    VirtualNetworkListResult:
      type: object
      description: The response of a VirtualNetwork list operation.
      properties:
        value:
          type: array
          description: The VirtualNetwork items on this page
          items:
            $ref: '#/components/schemas/VirtualNetwork'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    VirtualNetworkProperties:
      type: object
      description: Defines the resource properties.
      properties:
        inventoryItemId:
          type: string
          description: Gets or sets the inventory Item ID for the resource.
        uuid:
          type: string
          description: Unique ID of the virtual network.
          pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        vmmServerId:
          type: string
          format: arm-id
          description: ARM Id of the vmmServer resource in which this resource resides.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ScVmm/vmmServers
        networkName:
          type: string
          description: Name of the virtual network in vmmServer.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    VirtualNetworkTagsUpdate:
      type: object
      description: The type used for updating tags in VirtualNetwork resources.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
    VmInstanceHybridIdentityMetadata:
      description: Defines the HybridIdentityMetadata.
      properties:
        properties:
          $ref: '#/components/schemas/VmInstanceHybridIdentityMetadataProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    VmInstanceHybridIdentityMetadataListResult:
      type: object
      description: The response of a VmInstanceHybridIdentityMetadata list operation.
      properties:
        value:
          type: array
          description: The VmInstanceHybridIdentityMetadata items on this page
          items:
            $ref: '#/components/schemas/VmInstanceHybridIdentityMetadata'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    VmInstanceHybridIdentityMetadataProperties:
      type: object
      description: Describes the properties of Hybrid Identity Metadata for a Virtual Machine.
      properties:
        resourceUid:
          type: string
          description: The unique identifier for the resource.
        publicKey:
          type: string
          description: Gets or sets the Public Key.
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
    VmmCredential:
      type: object
      description: Credentials to connect to VmmServer.
      properties:
        username:
          type: string
          description: Username to use to connect to VmmServer.
        password:
          type: string
          format: password
          description: Password to use to connect to VmmServer.
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
    VmmServer:
      description: The VmmServers resource definition.
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/VmmServerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    VmmServerListResult:
      type: object
      description: The response of a VmmServer list operation.
      properties:
        value:
          type: array
          description: The VmmServer items on this page
          items:
            $ref: '#/components/schemas/VmmServer'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    VmmServerProperties:
      type: object
      description: Defines the resource properties.
      properties:
        credentials:
          $ref: '#/components/schemas/VmmCredential'
          description: Credentials to connect to VmmServer.
        fqdn:
          type: string
          description: Fqdn is the hostname/ip of the vmmServer.
          minLength: 1
        port:
          type: integer
          format: int32
          description: Port is the port on which the vmmServer is listening.
          minimum: 1
          maximum: 65535
        connectionStatus:
          type: string
          description: Gets the connection status to the vmmServer.
          readOnly: true
        errorMessage:
          type: string
          description: Gets any error message if connection to vmmServer is having any issue.
          readOnly: true
        uuid:
          type: string
          description: Unique ID of vmmServer.
          readOnly: true
        version:
          type: string
          description: Version is the version of the vmmSever.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ResourceProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      required:
        - fqdn
    VmmServerTagsUpdate:
      type: object
      description: The type used for updating tags in VmmServer resources.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
  x-stackQL-resources:
    virtual_machine_instances_list:
      id: azure.system_center_vm_manager.virtual_machine_instances_list
      name: virtual_machine_instances_list
      title: virtual_machine_instances_list
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances_list/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_instances:
      id: azure.system_center_vm_manager.virtual_machine_instances
      name: virtual_machine_instances
      title: virtual_machine_instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1restart~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore_checkpoint:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1restoreCheckpoint~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1start~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1stop~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances/methods/delete'
    virtual_machine_instances_checkpoint:
      id: azure.system_center_vm_manager.virtual_machine_instances_checkpoint
      name: virtual_machine_instances_checkpoint
      title: virtual_machine_instances_checkpoint
      methods:
        create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1createCheckpoint~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1deleteCheckpoint~1?api-version=2023-10-07/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances_checkpoint/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_instances_checkpoint/methods/delete'
    guest_agents:
      id: azure.system_center_vm_manager.guest_agents
      name: guest_agents
      title: guest_agents
      methods:
        list_by_virtual_machine_instance:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1guestAgents~1default~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/list_by_virtual_machine_instance'
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/guest_agents/methods/delete'
    vm_instance_hybrid_identity_metadatas:
      id: azure.system_center_vm_manager.vm_instance_hybrid_identity_metadatas
      name: vm_instance_hybrid_identity_metadatas
      title: vm_instance_hybrid_identity_metadatas
      methods:
        list_by_virtual_machine_instance:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1hybridIdentityMetadata~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ScVmm~1virtualMachineInstances~1default~1hybridIdentityMetadata~1default~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vm_instance_hybrid_identity_metadatas/methods/list_by_virtual_machine_instance'
          - $ref: '#/components/x-stackQL-resources/vm_instance_hybrid_identity_metadatas/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.system_center_vm_manager.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ScVmm~1operations~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    availability_sets:
      id: azure.system_center_vm_manager.availability_sets
      name: availability_sets
      title: availability_sets
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetResourceName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/delete'
    clouds:
      id: azure.system_center_vm_manager.clouds
      name: clouds
      title: clouds
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudResourceName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/get'
          - $ref: '#/components/x-stackQL-resources/clouds/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clouds/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/delete'
    virtual_machine_templates:
      id: azure.system_center_vm_manager.virtual_machine_templates
      name: virtual_machine_templates
      title: virtual_machine_templates
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/delete'
    virtual_networks:
      id: azure.system_center_vm_manager.virtual_networks
      name: virtual_networks
      title: virtual_networks
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/delete'
    vmm_servers:
      id: azure.system_center_vm_manager.vmm_servers
      name: vmm_servers
      title: vmm_servers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/delete'
    inventory_items:
      id: azure.system_center_vm_manager.inventory_items
      name: inventory_items
      title: inventory_items
      methods:
        list_by_vmm_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemResourceName}~1?api-version=2023-10-07/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemResourceName}~1?api-version=2023-10-07/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemResourceName}~1?api-version=2023-10-07/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/get'
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/list_by_vmm_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/delete'
paths:
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/?api-version=2023-10-07:
    get:
      operationId: VirtualMachineInstances_List
      tags:
        - VirtualMachineInstances
      summary: Implements List virtual machine instances.
      description: Lists all of the virtual machine instances within the specified parent resource.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstanceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/?api-version=2023-10-07:
    get:
      operationId: VirtualMachineInstances_Get
      tags:
        - VirtualMachineInstances
      summary: Gets a virtual machine.
      description: Retrieves information about a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: VirtualMachineInstances_CreateOrUpdate
      tags:
        - VirtualMachineInstances
      summary: Implements virtual machine PUT method.
      description: The operation to create or update a virtual machine instance. Please note some properties can be set only during virtual machine instance creation.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstance'
      responses:
        '200':
          description: Resource 'VirtualMachineInstance' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '201':
          description: Resource 'VirtualMachineInstance' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: VirtualMachineInstances_Update
      tags:
        - VirtualMachineInstances
      summary: Updates a virtual machine.
      description: The operation to update a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstanceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstance'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: VirtualMachineInstances_Delete
      tags:
        - VirtualMachineInstances
      summary: Deletes an virtual machine.
      description: The operation to delete a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
        - $ref: '#/components/parameters/QueryForceDelete'
        - name: deleteFromHost
          in: query
          description: Whether to disable the VM from azure and also delete it from Vmm.
          required: false
          schema:
            enum:
              - 'true'
              - 'false'
            x-ms-enum:
              name: DeleteFromHost
              modelAsString: true
              values:
                - name: 'true'
                  value: 'true'
                  description: Enable delete from host.
                - name: 'false'
                  value: 'false'
                  description: Disable delete from host.
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/createCheckpoint/?api-version=2023-10-07:
    post:
      operationId: VirtualMachineInstances_CreateCheckpoint
      tags:
        - VirtualMachineInstances
      summary: Implements the operation to creates a checkpoint in a virtual machine instance.
      description: Creates a checkpoint in virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineCreateCheckpoint'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/deleteCheckpoint/?api-version=2023-10-07:
    post:
      operationId: VirtualMachineInstances_DeleteCheckpoint
      tags:
        - VirtualMachineInstances
      summary: Implements the operation to delete a checkpoint in a virtual machine instance.
      description: Deletes a checkpoint in virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineDeleteCheckpoint'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents/?api-version=2023-10-07:
    get:
      operationId: GuestAgents_ListByVirtualMachineInstance
      tags:
        - GuestAgents
      summary: Implements GET GuestAgent in a vm.
      description: Returns the list of GuestAgent of the given vm.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgentListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents/default/?api-version=2023-10-07:
    get:
      operationId: GuestAgents_Get
      tags:
        - GuestAgents
      summary: Gets GuestAgent.
      description: Implements GuestAgent GET method.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: GuestAgents_Create
      tags:
        - GuestAgents
      summary: Implements GuestAgent PUT method.
      description: Create Or Update GuestAgent.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestAgent'
      responses:
        '200':
          description: Resource 'GuestAgent' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
        '201':
          description: Resource 'GuestAgent' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestAgent'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: GuestAgents_Delete
      tags:
        - GuestAgents
      summary: Deletes a GuestAgent resource.
      description: Implements GuestAgent DELETE method.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/hybridIdentityMetadata/?api-version=2023-10-07:
    get:
      operationId: VmInstanceHybridIdentityMetadatas_ListByVirtualMachineInstance
      tags:
        - VmInstanceHybridIdentityMetadatas
      summary: Implements GET HybridIdentityMetadata in a vm.
      description: Returns the list of HybridIdentityMetadata of the given VM.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmInstanceHybridIdentityMetadataListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/hybridIdentityMetadata/default/?api-version=2023-10-07:
    get:
      operationId: VmInstanceHybridIdentityMetadatas_Get
      tags:
        - VmInstanceHybridIdentityMetadatas
      summary: Gets HybridIdentityMetadata.
      description: Implements HybridIdentityMetadata GET method.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmInstanceHybridIdentityMetadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/restart/?api-version=2023-10-07:
    post:
      operationId: VirtualMachineInstances_Restart
      tags:
        - VirtualMachineInstances
      summary: Implements the operation to restart a virtual machine.
      description: The operation to restart a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/restoreCheckpoint/?api-version=2023-10-07:
    post:
      operationId: VirtualMachineInstances_RestoreCheckpoint
      tags:
        - VirtualMachineInstances
      summary: Implements the operation to restores to a checkpoint in a virtual machine instance.
      description: Restores to a checkpoint in virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRestoreCheckpoint'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/start/?api-version=2023-10-07:
    post:
      operationId: VirtualMachineInstances_Start
      tags:
        - VirtualMachineInstances
      summary: Implements the operation to start a virtual machine.
      description: The operation to start a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/stop/?api-version=2023-10-07:
    post:
      operationId: VirtualMachineInstances_Stop
      tags:
        - VirtualMachineInstances
      summary: Implements the operation to stop a virtual machine.
      description: The operation to power off (stop) a virtual machine instance.
      parameters:
        - $ref: '#/components/parameters/Azure.ResourceManager.ResourceUriParameter'
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopVirtualMachineOptions'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /providers/Microsoft.ScVmm/operations/?api-version=2023-10-07:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/availabilitySets/?api-version=2023-10-07:
    get:
      operationId: AvailabilitySets_ListBySubscription
      tags:
        - AvailabilitySets
      summary: Implements GET AvailabilitySets in a subscription.
      description: List of AvailabilitySets in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/clouds/?api-version=2023-10-07:
    get:
      operationId: Clouds_ListBySubscription
      tags:
        - Clouds
      summary: Implements GET Clouds in a subscription.
      description: List of Clouds in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualMachineTemplates/?api-version=2023-10-07:
    get:
      operationId: VirtualMachineTemplates_ListBySubscription
      tags:
        - VirtualMachineTemplates
      summary: Implements GET VirtualMachineTemplates in a subscription.
      description: List of VirtualMachineTemplates in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplateListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualNetworks/?api-version=2023-10-07:
    get:
      operationId: VirtualNetworks_ListBySubscription
      tags:
        - VirtualNetworks
      summary: Implements GET VirtualNetworks in a subscription.
      description: List of VirtualNetworks in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/vmmServers/?api-version=2023-10-07:
    get:
      operationId: VmmServers_ListBySubscription
      tags:
        - VmmServers
      summary: Implements GET VmmServers in a subscription.
      description: List of VmmServers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmmServerListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets/?api-version=2023-10-07:
    get:
      operationId: AvailabilitySets_ListByResourceGroup
      tags:
        - AvailabilitySets
      summary: Implements GET AvailabilitySets in a resource group.
      description: List of AvailabilitySets in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets/{availabilitySetResourceName}/?api-version=2023-10-07:
    get:
      operationId: AvailabilitySets_Get
      tags:
        - AvailabilitySets
      summary: Gets an AvailabilitySet.
      description: Implements AvailabilitySet GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: AvailabilitySets_CreateOrUpdate
      tags:
        - AvailabilitySets
      summary: Implements AvailabilitySets PUT method.
      description: Onboards the ScVmm availability set as an Azure resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilitySet'
      responses:
        '200':
          description: Resource 'AvailabilitySet' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        '201':
          description: Resource 'AvailabilitySet' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: A link to the status monitor
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: AvailabilitySets_Update
      tags:
        - AvailabilitySets
      summary: Implements the AvailabilitySets PATCH method.
      description: Updates the AvailabilitySets resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilitySetTagsUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: AvailabilitySets_Delete
      tags:
        - AvailabilitySets
      summary: Implements AvailabilitySet DELETE method.
      description: Deregisters the ScVmm availability set from Azure.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryForceDelete'
        - name: availabilitySetResourceName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: A link to the status monitor
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds/?api-version=2023-10-07:
    get:
      operationId: Clouds_ListByResourceGroup
      tags:
        - Clouds
      summary: Implements GET Clouds in a resource group.
      description: List of Clouds in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds/{cloudResourceName}/?api-version=2023-10-07:
    get:
      operationId: Clouds_Get
      tags:
        - Clouds
      summary: Gets a Cloud.
      description: Implements Cloud GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Clouds_CreateOrUpdate
      tags:
        - Clouds
      summary: Implements Clouds PUT method.
      description: Onboards the ScVmm fabric cloud as an Azure cloud resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloud'
      responses:
        '200':
          description: Resource 'Cloud' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '201':
          description: Resource 'Cloud' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Clouds_Update
      tags:
        - Clouds
      summary: Implements the Clouds PATCH method.
      description: Updates the Clouds resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudTagsUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: Clouds_Delete
      tags:
        - Clouds
      summary: Implements Cloud resource DELETE method.
      description: Deregisters the ScVmm fabric cloud from Azure.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryForceDelete'
        - name: cloudResourceName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates/?api-version=2023-10-07:
    get:
      operationId: VirtualMachineTemplates_ListByResourceGroup
      tags:
        - VirtualMachineTemplates
      summary: Implements GET VirtualMachineTemplates in a resource group.
      description: List of VirtualMachineTemplates in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplateListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates/{virtualMachineTemplateName}/?api-version=2023-10-07:
    get:
      operationId: VirtualMachineTemplates_Get
      tags:
        - VirtualMachineTemplates
      summary: Gets a VirtualMachineTemplate.
      description: Implements VirtualMachineTemplate GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: VirtualMachineTemplates_CreateOrUpdate
      tags:
        - VirtualMachineTemplates
      summary: Implements VirtualMachineTemplates PUT method.
      description: Onboards the ScVmm VM Template as an Azure VM Template resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineTemplate'
      responses:
        '200':
          description: Resource 'VirtualMachineTemplate' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '201':
          description: Resource 'VirtualMachineTemplate' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: VirtualMachineTemplates_Update
      tags:
        - VirtualMachineTemplates
      summary: Implements the VirtualMachineTemplate PATCH method.
      description: Updates the VirtualMachineTemplate resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineTemplateTagsUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: VirtualMachineTemplates_Delete
      tags:
        - VirtualMachineTemplates
      summary: Implements VirtualMachineTemplate DELETE method.
      description: Deregisters the ScVmm VM Template from Azure.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryForceDelete'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks/?api-version=2023-10-07:
    get:
      operationId: VirtualNetworks_ListByResourceGroup
      tags:
        - VirtualNetworks
      summary: Implements GET VirtualNetworks in a resource group.
      description: List of VirtualNetworks in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks/{virtualNetworkName}/?api-version=2023-10-07:
    get:
      operationId: VirtualNetworks_Get
      tags:
        - VirtualNetworks
      summary: Gets a VirtualNetwork.
      description: Implements VirtualNetwork GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: VirtualNetworks_CreateOrUpdate
      tags:
        - VirtualNetworks
      summary: Implements VirtualNetworks PUT method.
      description: Onboards the ScVmm virtual network as an Azure virtual network resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
      responses:
        '200':
          description: Resource 'VirtualNetwork' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '201':
          description: Resource 'VirtualNetwork' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: VirtualNetworks_Update
      tags:
        - VirtualNetworks
      summary: Implements the VirtualNetworks PATCH method.
      description: Updates the VirtualNetworks resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkTagsUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: VirtualNetworks_Delete
      tags:
        - VirtualNetworks
      summary: Implements VirtualNetwork DELETE method.
      description: Deregisters the ScVmm virtual network from Azure.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryForceDelete'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/?api-version=2023-10-07:
    get:
      operationId: VmmServers_ListByResourceGroup
      tags:
        - VmmServers
      summary: Implements GET VmmServers in a resource group.
      description: List of VmmServers in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmmServerListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/?api-version=2023-10-07:
    get:
      operationId: VmmServers_Get
      tags:
        - VmmServers
      summary: Gets a VMMServer.
      description: Implements VmmServer GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmmServer'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: VmmServers_CreateOrUpdate
      tags:
        - VmmServers
      summary: Implements VmmServers PUT method.
      description: Onboards the SCVmm fabric as an Azure VmmServer resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmmServer'
      responses:
        '200':
          description: Resource 'VmmServer' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmmServer'
        '201':
          description: Resource 'VmmServer' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmmServer'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: VmmServers_Update
      tags:
        - VmmServers
      summary: Implements VmmServers PATCH method.
      description: Updates the VmmServers resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmmServerTagsUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmmServer'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: VmmServers_Delete
      tags:
        - VmmServers
      summary: Implements VmmServers DELETE method.
      description: Removes the SCVmm fabric from Azure.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryForceDelete'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems/?api-version=2023-10-07:
    get:
      operationId: InventoryItems_ListByVmmServer
      tags:
        - InventoryItems
      summary: Implements GET for the list of Inventory Items in the VMMServer.
      description: Returns the list of inventoryItems in the given VmmServer.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems/{inventoryItemResourceName}/?api-version=2023-10-07:
    get:
      operationId: InventoryItems_Get
      tags:
        - InventoryItems
      summary: Implements GET InventoryItem method.
      description: Shows an inventory item.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
        - name: inventoryItemResourceName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: InventoryItems_Create
      tags:
        - InventoryItems
      summary: Implements InventoryItem PUT method.
      description: Create Or Update InventoryItem.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
        - name: inventoryItemResourceName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '200':
          description: Resource 'InventoryItem' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '201':
          description: Resource 'InventoryItem' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: InventoryItems_Delete
      tags:
        - InventoryItems
      summary: Implements inventoryItem DELETE method.
      description: Deletes an inventoryItem.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VmmServer.
          required: true
          schema:
            minLength: 1
            maxLength: 54
            pattern: '[a-zA-Z0-9-_\.]'
            type: string
        - name: inventoryItemResourceName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
