openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Domain Services Resource Provider
  description: The AAD Domain Services API.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    DomainServiceNameParameter:
      name: domainServiceName
      in: path
      description: The name of the domain service.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OuContainerNameParameter:
      name: ouContainerName
      in: path
      description: The name of the OuContainer.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    OuContainerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OuContainer'
          description: The list of OuContainer.
        nextLink:
          type: string
          description: The continuation token for the next page of results.
          readOnly: true
      description: The response from the List OuContainer operation.
    OuContainer:
      description: Resource for OuContainer.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OuContainerProperties'
          description: OuContainer properties
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    OuContainerProperties:
      description: Properties of the OuContainer.
      type: object
      properties:
        tenantId:
          readOnly: true
          type: string
          description: Azure Active Directory tenant id
        domainName:
          readOnly: true
          type: string
          description: The domain name of Domain Services.
        deploymentId:
          readOnly: true
          type: string
          description: The Deployment id
        containerId:
          readOnly: true
          type: string
          description: The OuContainer name
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/ContainerAccount'
            description: Container Account
          description: The list of container accounts
        serviceStatus:
          readOnly: true
          type: string
          description: Status of OuContainer instance
        distinguishedName:
          readOnly: true
          type: string
          description: Distinguished Name of OuContainer instance
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response.
    ContainerAccount:
      description: Container Account Description
      type: object
      properties:
        accountName:
          type: string
          description: The account name
        spn:
          type: string
          description: The account spn
        password:
          type: string
          description: The account password
    OperationEntityListResult:
      description: The list of domain service operation response.
      type: object
      properties:
        value:
          description: The list of operations.
          type: array
          items:
            $ref: '#/components/schemas/OperationEntity'
        nextLink:
          type: string
          description: The continuation token for the next page of results.
          readOnly: true
    OperationEntity:
      description: The operation supported by Domain Services.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        display:
          $ref: '#/components/schemas/OperationDisplayInfo'
          description: The operation supported by Domain Services.
        origin:
          description: The origin of the operation.
          type: string
    OperationDisplayInfo:
      description: The operation supported by Domain Services.
      type: object
      properties:
        description:
          description: The description of the operation.
          type: string
        operation:
          description: The action that users can perform, based on their permission level.
          type: string
        provider:
          description: 'Service provider: Domain Services.'
          type: string
        resource:
          description: Resource on which the operation is performed.
          type: string
    DomainService:
      description: Domain service.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DomainServiceProperties'
          description: Domain service properties
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    DomainServiceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DomainService'
          description: the list of domain services.
        nextLink:
          type: string
          description: The continuation token for the next page of results.
          readOnly: true
      description: The response from the List Domain Services operation.
    DomainServiceProperties:
      description: Properties of the Domain Service.
      type: object
      properties:
        version:
          readOnly: true
          type: integer
          format: int32
          description: Data Model Version
        tenantId:
          readOnly: true
          type: string
          description: Azure Active Directory Tenant Id
        domainName:
          type: string
          description: The name of the Azure domain that the user would like to deploy Domain Services to.
        deploymentId:
          readOnly: true
          type: string
          description: Deployment Id
        syncOwner:
          readOnly: true
          type: string
          description: SyncOwner ReplicaSet Id
        syncApplicationId:
          readOnly: true
          type: string
          description: The unique sync application id of the Azure AD Domain Services deployment.
        replicaSets:
          type: array
          items:
            $ref: '#/components/schemas/ReplicaSet'
            description: ReplicaSet
          description: List of ReplicaSets
        ldapsSettings:
          $ref: '#/components/schemas/LdapsSettings'
          description: Secure LDAP Settings
        resourceForestSettings:
          $ref: '#/components/schemas/ResourceForestSettings'
          description: Resource Forest Settings
        domainSecuritySettings:
          $ref: '#/components/schemas/DomainSecuritySettings'
          description: DomainSecurity Settings
        domainConfigurationType:
          type: string
          description: Domain Configuration Type
        sku:
          type: string
          description: Sku Type
        filteredSync:
          type: string
          enum:
            - Enabled
            - Disabled
          description: Enabled or Disabled flag to turn on Group-based filtered sync
          x-ms-enum:
            name: FilteredSync
            modelAsString: true
        syncScope:
          type: string
          enum:
            - All
            - CloudOnly
          default: All
          description: All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud
          x-ms-enum:
            name: SyncScope
            modelAsString: true
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
          description: Notification Settings
        migrationProperties:
          readOnly: true
          $ref: '#/components/schemas/MigrationProperties'
          description: Migration Properties
        provisioningState:
          readOnly: true
          type: string
          description: the current deployment or provisioning state, which only appears in the response.
        configDiagnostics:
          $ref: '#/components/schemas/ConfigDiagnostics'
          description: Configuration diagnostics data containing latest execution from client.
    ReplicaSet:
      description: Replica Set Definition
      type: object
      properties:
        replicaSetId:
          readOnly: true
          type: string
          description: ReplicaSet Id
        location:
          type: string
          description: Virtual network location
        vnetSiteId:
          readOnly: true
          type: string
          description: Virtual network site id
        subnetId:
          type: string
          description: The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
        domainControllerIpAddress:
          readOnly: true
          type: array
          items:
            type: string
            description: Domain Controller IP Address
          description: List of Domain Controller IP Address
        externalAccessIpAddress:
          readOnly: true
          type: string
          description: External access ip address.
        serviceStatus:
          readOnly: true
          type: string
          description: Status of Domain Service instance
        healthLastEvaluated:
          readOnly: true
          type: string
          format: date-time-rfc1123
          description: Last domain evaluation run DateTime
        healthMonitors:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/HealthMonitor'
            description: Domain Health Monitors
          description: List of Domain Health Monitors
        healthAlerts:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/HealthAlert'
            description: Domain Health Alerts
          description: List of Domain Health Alerts
    LdapsSettings:
      description: Secure LDAP Settings
      type: object
      properties:
        ldaps:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Disabled
          description: A flag to determine whether or not Secure LDAP is enabled or disabled.
          x-ms-enum:
            name: Ldaps
            modelAsString: true
        pfxCertificate:
          type: string
          description: The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
        pfxCertificatePassword:
          type: string
          description: The password to decrypt the provided Secure LDAP certificate pfx file.
        publicCertificate:
          readOnly: true
          type: string
          description: Public certificate used to configure secure ldap.
        certificateThumbprint:
          readOnly: true
          type: string
          description: Thumbprint of configure ldaps certificate.
        certificateNotAfter:
          readOnly: true
          type: string
          format: date-time
          description: NotAfter DateTime of configure ldaps certificate.
        externalAccess:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Disabled
          description: A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
          x-ms-enum:
            name: ExternalAccess
            modelAsString: true
    HealthMonitor:
      description: Health Monitor Description
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Health Monitor Id
        name:
          readOnly: true
          type: string
          description: Health Monitor Name
        details:
          readOnly: true
          type: string
          description: Health Monitor Details
    HealthAlert:
      description: Health Alert Description
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Health Alert Id
        name:
          readOnly: true
          type: string
          description: Health Alert Name
        issue:
          readOnly: true
          type: string
          description: Health Alert Issue
        severity:
          readOnly: true
          type: string
          description: Health Alert Severity
        raised:
          readOnly: true
          type: string
          format: date-time
          description: Health Alert Raised DateTime
        lastDetected:
          readOnly: true
          type: string
          format: date-time
          description: Health Alert Last Detected DateTime
        resolutionUri:
          readOnly: true
          type: string
          description: Health Alert TSG Link
    NotificationSettings:
      description: Settings for notification
      type: object
      properties:
        notifyGlobalAdmins:
          type: string
          enum:
            - Enabled
            - Disabled
          description: Should global admins be notified
          x-ms-enum:
            name: notifyGlobalAdmins
            modelAsString: true
        notifyDcAdmins:
          type: string
          enum:
            - Enabled
            - Disabled
          description: Should domain controller admins be notified
          x-ms-enum:
            name: notifyDcAdmins
            modelAsString: true
        additionalRecipients:
          type: array
          items:
            type: string
            description: Email address for additional recipient
          description: The list of additional recipients
    ResourceForestSettings:
      description: Settings for Resource Forest
      type: object
      properties:
        settings:
          type: array
          items:
            $ref: '#/components/schemas/ForestTrust'
          description: List of settings for Resource Forest
        resourceForest:
          type: string
          description: Resource Forest
    ForestTrust:
      description: Forest Trust Setting
      type: object
      properties:
        trustedDomainFqdn:
          type: string
          description: Trusted Domain FQDN
        trustDirection:
          type: string
          description: Trust Direction
        friendlyName:
          type: string
          description: Friendly Name
        remoteDnsIps:
          type: string
          description: Remote Dns ips
        trustPassword:
          type: string
          description: Trust Password
          x-ms-secret: true
    MigrationProperties:
      description: Migration Properties
      type: object
      properties:
        oldSubnetId:
          readOnly: true
          type: string
          description: Old Subnet Id
        oldVnetSiteId:
          readOnly: true
          type: string
          description: Old Vnet Site Id
        migrationProgress:
          readOnly: true
          $ref: '#/components/schemas/MigrationProgress'
          description: Migration Progress
    MigrationProgress:
      description: Migration Progress
      type: object
      properties:
        completionPercentage:
          type: number
          format: double
          description: Completion Percentage
        progressMessage:
          type: string
          description: Progress Message
    DomainSecuritySettings:
      description: Domain Security Settings
      type: object
      properties:
        ntlmV1:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Enabled
          description: A flag to determine whether or not NtlmV1 is enabled or disabled.
          x-ms-enum:
            name: NtlmV1
            modelAsString: true
        tlsV1:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Enabled
          description: A flag to determine whether or not TlsV1 is enabled or disabled.
          x-ms-enum:
            name: TlsV1
            modelAsString: true
        syncNtlmPasswords:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Enabled
          description: A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
          x-ms-enum:
            name: SyncNtlmPasswords
            modelAsString: true
        syncKerberosPasswords:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Enabled
          description: A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.
          x-ms-enum:
            name: SyncKerberosPasswords
            modelAsString: true
        syncOnPremPasswords:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Enabled
          description: A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.
          x-ms-enum:
            name: SyncOnPremPasswords
            modelAsString: true
        kerberosRc4Encryption:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Enabled
          description: A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.
          x-ms-enum:
            name: KerberosRc4Encryption
            modelAsString: true
        kerberosArmoring:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Disabled
          description: A flag to determine whether or not KerberosArmoring is enabled or disabled.
          x-ms-enum:
            name: KerberosArmoring
            modelAsString: true
        ldapSigning:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Disabled
          description: A flag to determine whether or not LdapSigning is enabled or disabled.
          x-ms-enum:
            name: LdapSigning
            modelAsString: true
        channelBinding:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Disabled
          description: A flag to determine whether or not ChannelBinding is enabled or disabled.
          x-ms-enum:
            name: ChannelBinding
            modelAsString: true
    ConfigDiagnostics:
      description: Configuration Diagnostics
      type: object
      properties:
        lastExecuted:
          type: string
          format: date-time-rfc1123
          description: Last domain configuration diagnostics DateTime
        validatorResults:
          type: array
          description: List of Configuration Diagnostics validator results.
          items:
            $ref: '#/components/schemas/ConfigDiagnosticsValidatorResult'
    ConfigDiagnosticsValidatorResult:
      description: Config Diagnostics validator result data
      type: object
      properties:
        validatorId:
          type: string
          description: Validator identifier
        replicaSetSubnetDisplayName:
          type: string
          description: Replica set location and subnet name
        status:
          type: string
          enum:
            - None
            - Running
            - OK
            - Failure
            - Warning
            - Skipped
          default: None
          description: Status for individual validator after running diagnostics.
          x-ms-enum:
            name: status
            modelAsString: true
        issues:
          type: array
          description: List of resource config validation issues.
          items:
            $ref: '#/components/schemas/ConfigDiagnosticsValidatorResultIssue'
    ConfigDiagnosticsValidatorResultIssue:
      description: Specific issue for a particular config diagnostics validator
      type: object
      properties:
        id:
          type: string
          description: Validation issue identifier.
        descriptionParams:
          type: array
          items:
            type: string
            description: Single resource property involved in issue description.
          description: List of domain resource property name or values used to compose a rich description.
    CloudError:
      type: object
      x-ms-external: true
      properties:
        error:
          description: An error response from the Domain Services.
          $ref: '#/components/schemas/CloudErrorBody'
      description: An error response from the Domain Services.
    CloudErrorBody:
      type: object
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          description: A list of additional details about the error.
      description: An error response from the Domain Services.
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    ou_container_operations:
      id: azure.aad_domain_services.ou_container_operations
      name: ou_container_operations
      title: ou_container_operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Aad~1operations~1?api-version=2022-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ou_container_operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    ou_container:
      id: azure.aad_domain_services.ou_container
      name: ou_container
      title: ou_container
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Aad~1domainServices~1{domainServiceName}~1ouContainer~1?api-version=2022-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Aad~1domainServices~1{domainServiceName}~1ouContainer~1{ouContainerName}~1?api-version=2022-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Aad~1domainServices~1{domainServiceName}~1ouContainer~1{ouContainerName}~1?api-version=2022-12-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Aad~1domainServices~1{domainServiceName}~1ouContainer~1{ouContainerName}~1?api-version=2022-12-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Aad~1domainServices~1{domainServiceName}~1ouContainer~1{ouContainerName}~1?api-version=2022-12-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ou_container/methods/get'
          - $ref: '#/components/x-stackQL-resources/ou_container/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ou_container/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ou_container/methods/delete'
    domain_service_operations:
      id: azure.aad_domain_services.domain_service_operations
      name: domain_service_operations
      title: domain_service_operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AAD~1operations~1?api-version=2022-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_service_operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    domain_services:
      id: azure.aad_domain_services.domain_services
      name: domain_services
      title: domain_services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AAD~1domainServices~1?api-version=2022-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AAD~1domainServices~1?api-version=2022-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AAD~1domainServices~1{domainServiceName}~1?api-version=2022-12-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AAD~1domainServices~1{domainServiceName}~1?api-version=2022-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AAD~1domainServices~1{domainServiceName}~1?api-version=2022-12-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AAD~1domainServices~1{domainServiceName}~1?api-version=2022-12-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/domain_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/domain_services/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/domain_services/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domain_services/methods/delete'
    vw_ou_container:
      id: azure.aad_domain_services.vw_ou_container
      name: vw_ou_container
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.domainName') as domain_name,
              JSON_EXTRACT(properties, '$.deploymentId') as deployment_id,
              JSON_EXTRACT(properties, '$.containerId') as container_id,
              JSON_EXTRACT(properties, '$.accounts') as accounts,
              JSON_EXTRACT(properties, '$.serviceStatus') as service_status,
              JSON_EXTRACT(properties, '$.distinguishedName') as distinguished_name,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              domainServiceName,
              ouContainerName
              FROM azure.aad_domain_services.ou_container
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainServiceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.domainName') as domain_name,
                JSON_EXTRACT(properties, '$.deploymentId') as deployment_id,
                JSON_EXTRACT(properties, '$.containerId') as container_id,
                JSON_EXTRACT(properties, '$.accounts') as accounts,
                JSON_EXTRACT(properties, '$.serviceStatus') as service_status,
                JSON_EXTRACT(properties, '$.distinguishedName') as distinguished_name,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                domainServiceName,
                ouContainerName
                FROM azure.aad_domain_services.ou_container
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainServiceName = 'replace-me';
    vw_domain_services:
      id: azure.aad_domain_services.vw_domain_services
      name: vw_domain_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.domainName') as domain_name,
              JSON_EXTRACT(properties, '$.deploymentId') as deployment_id,
              JSON_EXTRACT(properties, '$.syncOwner') as sync_owner,
              JSON_EXTRACT(properties, '$.syncApplicationId') as sync_application_id,
              JSON_EXTRACT(properties, '$.replicaSets') as replica_sets,
              JSON_EXTRACT(properties, '$.ldapsSettings') as ldaps_settings,
              JSON_EXTRACT(properties, '$.resourceForestSettings') as resource_forest_settings,
              JSON_EXTRACT(properties, '$.domainSecuritySettings') as domain_security_settings,
              JSON_EXTRACT(properties, '$.domainConfigurationType') as domain_configuration_type,
              JSON_EXTRACT(properties, '$.sku') as sku,
              JSON_EXTRACT(properties, '$.filteredSync') as filtered_sync,
              JSON_EXTRACT(properties, '$.syncScope') as sync_scope,
              JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
              JSON_EXTRACT(properties, '$.migrationProperties') as migration_properties,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.configDiagnostics') as config_diagnostics,
              subscriptionId,
              resourceGroupName,
              domainServiceName
              FROM azure.aad_domain_services.domain_services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.domainName') as domain_name,
                JSON_EXTRACT(properties, '$.deploymentId') as deployment_id,
                JSON_EXTRACT(properties, '$.syncOwner') as sync_owner,
                JSON_EXTRACT(properties, '$.syncApplicationId') as sync_application_id,
                JSON_EXTRACT(properties, '$.replicaSets') as replica_sets,
                JSON_EXTRACT(properties, '$.ldapsSettings') as ldaps_settings,
                JSON_EXTRACT(properties, '$.resourceForestSettings') as resource_forest_settings,
                JSON_EXTRACT(properties, '$.domainSecuritySettings') as domain_security_settings,
                JSON_EXTRACT(properties, '$.domainConfigurationType') as domain_configuration_type,
                JSON_EXTRACT(properties, '$.sku') as sku,
                JSON_EXTRACT(properties, '$.filteredSync') as filtered_sync,
                JSON_EXTRACT(properties, '$.syncScope') as sync_scope,
                JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
                JSON_EXTRACT(properties, '$.migrationProperties') as migration_properties,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.configDiagnostics') as config_diagnostics,
                subscriptionId,
                resourceGroupName,
                domainServiceName
                FROM azure.aad_domain_services.domain_services
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.Aad/operations/?api-version=2022-12-01:
    get:
      tags:
        - OuContainer
      description: Lists all the available OuContainer operations.
      operationId: OuContainerOperations_List
      parameters: []
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationEntityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Aad/domainServices/{domainServiceName}/ouContainer/?api-version=2022-12-01:
    get:
      tags:
        - OuContainer
      operationId: OuContainer_List
      summary: List of OuContainers in DomainService instance
      description: The List of OuContainers in DomainService instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OuContainerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Aad/domainServices/{domainServiceName}/ouContainer/{ouContainerName}/?api-version=2022-12-01:
    get:
      tags:
        - OuContainer
      operationId: OuContainer_Get
      summary: Get particular OuContainer in DomainService instance
      description: Get OuContainer in DomainService instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
        - $ref: '#/components/parameters/OuContainerNameParameter'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OuContainer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - OuContainer
      operationId: OuContainer_Create
      summary: Create OuContainer
      description: The Create OuContainer operation creates a new OuContainer under the specified Domain Service instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
        - $ref: '#/components/parameters/OuContainerNameParameter'
      requestBody:
        description: Container Account Description.
        required: true
        x-ms-requestBody-name: containerAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerAccount'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OuContainer'
        '201':
          description: HTTP 201 (Created) if the operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OuContainer'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OuContainer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - OuContainer
      operationId: OuContainer_Delete
      summary: Delete OuContainer
      description: The Delete OuContainer operation deletes specified OuContainer.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
        - $ref: '#/components/parameters/OuContainerNameParameter'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
        '204':
          description: HTTP 204 (Not Content) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - OuContainer
      operationId: OuContainer_Update
      summary: Update OuContainer (PATCH Resource)
      description: The Update OuContainer operation can be used to update the existing OuContainers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
        - $ref: '#/components/parameters/OuContainerNameParameter'
      requestBody:
        description: Container Account Description.
        required: true
        x-ms-requestBody-name: containerAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerAccount'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OuContainer'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OuContainer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /providers/Microsoft.AAD/operations/?api-version=2022-12-01:
    get:
      tags:
        - DomainServices
      description: Lists all the available Domain Services operations.
      operationId: DomainServiceOperations_List
      parameters: []
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationEntityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AAD/domainServices/?api-version=2022-12-01:
    get:
      tags:
        - DomainServices
      operationId: DomainServices_List
      summary: List Domain Services in Subscription
      description: The List Domain Services in Subscription operation lists all the domain services available under the given subscription (and across all resource groups within that subscription).
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainServiceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/?api-version=2022-12-01:
    get:
      tags:
        - DomainServices
      operationId: DomainServices_ListByResourceGroup
      summary: List Domain Services in Resource Group
      description: The List Domain Services in Resource Group operation lists all the domain services available under the given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainServiceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}/?api-version=2022-12-01:
    put:
      tags:
        - DomainServices
      operationId: DomainServices_CreateOrUpdate
      summary: Create or Update Domain Service (PUT Resource)
      description: The Create Domain Service operation creates a new domain service with the specified parameters. If the specific service already exists, then any patchable properties will be updated and any immutable properties will remain unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
      requestBody:
        description: Properties supplied to the Create or Update a Domain Service operation.
        required: true
        x-ms-requestBody-name: domainService
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainService'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainService'
        '201':
          description: HTTP 201 (Created) if the operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainService'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainService'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DomainServices
      operationId: DomainServices_Get
      summary: Get Domain Service
      description: The Get Domain Service operation retrieves a json representation of the Domain Service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainService'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - DomainServices
      operationId: DomainServices_Delete
      summary: Delete Domain Service (DELETE Resource)
      description: The Delete Domain Service operation deletes an existing Domain Service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
      responses:
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
        '204':
          description: HTTP 204 (Not Content) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - DomainServices
      operationId: DomainServices_Update
      summary: Update Domain Service (PATCH Resource)
      description: The Update Domain Service operation can be used to update the existing deployment. The update call only supports the properties listed in the PATCH body.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DomainServiceNameParameter'
      requestBody:
        description: Properties supplied to the Update a Domain Service operation.
        required: true
        x-ms-requestBody-name: domainService
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainService'
      responses:
        '200':
          description: HTTP 200 (OK) if the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainService'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainService'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
