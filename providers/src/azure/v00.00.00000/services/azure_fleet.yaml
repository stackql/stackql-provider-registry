openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Fleet
  description: Fleet cluster enables centralized management of all your clusters at scale.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    AdditionalUnattendContent:
      type: object
      description: |-
        Specifies additional XML formatted information that can be included in the
        Unattend.xml file, which is used by Windows Setup. Contents are defined by
        setting name, component name, and the pass in which the content is applied.
      properties:
        passName:
          type: string
          description: The pass name. Currently, the only allowable value is OobeSystem.
          enum:
            - OobeSystem
          x-ms-enum:
            modelAsString: false
        componentName:
          type: string
          description: |-
            The component name. Currently, the only allowable value is
            Microsoft-Windows-Shell-Setup.
          enum:
            - Microsoft-Windows-Shell-Setup
          x-ms-enum:
            modelAsString: false
        settingName:
          $ref: '#/components/schemas/SettingNames'
          description: |-
            Specifies the name of the setting to which the content applies. Possible values
            are: FirstLogonCommands and AutoLogon.
        content:
          type: string
          format: password
          description: |-
            Specifies the XML formatted content that is added to the unattend.xml file for
            the specified path and component. The XML must be less than 4KB and must
            include the root element for the setting or feature that is being inserted.
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
    ApiEntityReference:
      type: object
      description: The API entity reference.
      properties:
        id:
          type: string
          format: arm-id
          description: |-
            The ARM resource id in the form of
            /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
    ApiError:
      type: object
      description: ApiError for Fleet
      properties:
        code:
          type: string
          description: The error code.
        target:
          type: string
          description: The target of the particular error.
        message:
          type: string
          description: The error message.
        details:
          type: array
          description: The API error details
          items:
            $ref: '#/components/schemas/ApiErrorBase'
          x-ms-identifiers:
            - message
            - target
        innererror:
          $ref: '#/components/schemas/InnerError'
          description: The API inner error
    ApiErrorBase:
      type: object
      description: API error base.
      properties:
        code:
          type: string
          description: The error code.
        target:
          type: string
          description: The target of the particular error.
        message:
          type: string
          description: The error message.
    ApplicationProfile:
      type: object
      description: |-
        Contains the list of gallery applications that should be made available to the
        VM/VMSS
      properties:
        galleryApplications:
          type: array
          description: Specifies the gallery applications that should be made available to the VM/VMSS
          items:
            $ref: '#/components/schemas/VMGalleryApplication'
          x-ms-identifiers:
            - packageReferenceId
    BasePriorityProfile:
      type: object
      description: Contains common properties that are applicable to both Spot and Regular.
      properties:
        capacity:
          type: integer
          format: int32
          description: Total capacity to achieve. It is currently in terms of number of VMs.
          minimum: 0
        minCapacity:
          type: integer
          format: int32
          description: Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
          minimum: 0
    BaseVirtualMachineProfile:
      type: object
      description: Describes the base virtual machine profile for fleet
      properties:
        osProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetOSProfile'
          description: |-
            Specifies the operating system settings for the virtual machines in the scale
            set.
        storageProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetStorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        networkProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkProfile'
          description: |-
            Specifies properties of the network interfaces of the virtual machines in the
            scale set.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: |-
            Specifies the Security related profile settings for the virtual machines in the
            scale set.
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: Specifies the boot diagnostic settings state.
        extensionProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProfile'
          description: |-
            Specifies a collection of settings for extensions installed on virtual machines
            in the scale set.
        licenseType:
          type: string
          description: |-
            Specifies that the image or disk that is being used was licensed on-premises.
            <br><br> Possible values for Windows Server operating system are: <br><br>
            Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux
            Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS
            (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for
            Windows
            Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
            <br><br> [Azure Hybrid Use Benefit for Linux
            Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
            <br><br> Minimum api-version: 2015-06-15
        scheduledEventsProfile:
          $ref: '#/components/schemas/ScheduledEventsProfile'
          description: Specifies Scheduled Event related configurations.
        userData:
          type: string
          description: |-
            UserData for the virtual machines in the scale set, which must be base-64
            encoded. Customer should not pass any secrets in here. Minimum api-version:
            2021-03-01.
        capacityReservation:
          $ref: '#/components/schemas/CapacityReservationProfile'
          description: |-
            Specifies the capacity reservation related details of a scale set. Minimum
            api-version: 2021-04-01.
        applicationProfile:
          $ref: '#/components/schemas/ApplicationProfile'
          description: Specifies the gallery applications that should be made available to the VM/VMSS
        hardwareProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetHardwareProfile'
          description: |-
            Specifies the hardware profile related details of a scale set. Minimum
            api-version: 2021-11-01.
        serviceArtifactReference:
          $ref: '#/components/schemas/ServiceArtifactReference'
          description: |-
            Specifies the service artifact reference id used to set same image version for
            all virtual machines in the scale set when using 'latest' image version.
            Minimum api-version: 2022-11-01
        securityPostureReference:
          $ref: '#/components/schemas/SecurityPostureReference'
          description: |-
            Specifies the security posture to be used for all virtual machines in the scale
            set. Minimum api-version: 2023-03-01
        timeCreated:
          type: string
          format: date-time
          description: |-
            Specifies the time in which this VM profile for the Virtual Machine Scale Set
            was created. Minimum API version for this property is 2023-09-01. This value
            will be added to VMSS Flex VM tags when creating/updating the VMSS VM Profile
            with minimum api-version 2023-09-01. Examples: "2024-07-01T00:00:01.1234567+00:00"
          readOnly: true
    BootDiagnostics:
      type: object
      description: |-
        Boot Diagnostics is a debugging feature which allows you to view Console Output
        and Screenshot to diagnose VM status. You can easily view the output of your
        console log. Azure also enables you to see a screenshot of the VM from the
        hypervisor.
      properties:
        enabled:
          type: boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
        storageUri:
          type: string
          format: uri
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot. If storageUri is not specified while enabling boot diagnostics,
            managed storage will be used.
    CachingTypes:
      type: string
      description: Specifies the caching requirements.
      enum:
        - None
        - ReadOnly
        - ReadWrite
      x-ms-enum:
        name: CachingTypes
        modelAsString: true
        values:
          - name: None
            value: None
            description: '''None'' is default for Standard Storage'
          - name: ReadOnly
            value: ReadOnly
            description: '''ReadOnly'' is default for Premium Storage'
          - name: ReadWrite
            value: ReadWrite
            description: '''ReadWrite'' is default for OS Disk'
    CapacityReservationProfile:
      type: object
      description: The parameters of a capacity reservation Profile.
      properties:
        capacityReservationGroup:
          $ref: '#/components/schemas/SubResource'
          description: |-
            Specifies the capacity reservation group resource id that should be used for
            allocating the virtual machine or scaleset vm instances provided enough
            capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
            for more details.
    ComputeProfile:
      type: object
      description: Compute Profile to use for running user's workloads.
      properties:
        baseVirtualMachineProfile:
          $ref: '#/components/schemas/BaseVirtualMachineProfile'
          description: Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
        computeApiVersion:
          type: string
          description: |-
            Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
            The default value will be the latest supported computeApiVersion by Compute Fleet.
        platformFaultDomainCount:
          type: integer
          format: int32
          description: |-
            Specifies the number of fault domains to use when creating the underlying VMSS.
            A fault domain is a logical group of hardware within an Azure datacenter.
            VMs in the same fault domain share a common power source and network switch.
            If not specified, defaults to 1, which represents "Max Spreading" (using as many fault domains as possible).
            This property cannot be updated.
      required:
        - baseVirtualMachineProfile
    DeleteOptions:
      type: string
      description: Specify what happens to the network interface when the VM is deleted
      enum:
        - Delete
        - Detach
      x-ms-enum:
        name: DeleteOptions
        modelAsString: true
        values:
          - name: Delete
            value: Delete
            description: Delete Option
          - name: Detach
            value: Detach
            description: Detach Option
    DiagnosticsProfile:
      type: object
      description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
      properties:
        bootDiagnostics:
          $ref: '#/components/schemas/BootDiagnostics'
          description: |-
            Boot Diagnostics is a debugging feature which allows you to view Console Output
            and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
            specified then ensure that the storage account is in the same region and
            subscription as the VM. You can easily view the output of your console log.
            Azure also enables you to see a screenshot of the VM from the hypervisor.
    DiffDiskOptions:
      type: string
      description: Specifies the ephemeral disk option for operating system disk.
      enum:
        - Local
      x-ms-enum:
        name: DiffDiskOptions
        modelAsString: true
        values:
          - name: Local
            value: Local
            description: Local Option.
    DiffDiskPlacement:
      type: string
      description: |-
        Specifies the ephemeral disk placement for operating system disk. This property
        can be used by user in the request to choose the location i.e, cache disk or
        resource disk space for Ephemeral OS disk provisioning. For more information on
        Ephemeral OS disk size requirements, please refer Ephemeral OS disk size
        requirements for Windows VM at
        https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
        and Linux VM at
        https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements
        Minimum api-version for NvmeDisk: 2024-03-01.
      enum:
        - CacheDisk
        - ResourceDisk
        - NvmeDisk
      x-ms-enum:
        name: DiffDiskPlacement
        modelAsString: true
        values:
          - name: CacheDisk
            value: CacheDisk
            description: CacheDisk option.
          - name: ResourceDisk
            value: ResourceDisk
            description: Resource Disk option.
          - name: NvmeDisk
            value: NvmeDisk
            description: NvmeDisk option.
    DiffDiskSettings:
      type: object
      description: |-
        Describes the parameters of ephemeral disk settings that can be specified for
        operating system disk. **Note:** The ephemeral disk settings can only be
        specified for managed disk.
      properties:
        option:
          $ref: '#/components/schemas/DiffDiskOptions'
          description: Specifies the ephemeral disk settings for operating system disk.
        placement:
          $ref: '#/components/schemas/DiffDiskPlacement'
          description: |-
            Specifies the ephemeral disk placement for operating system disk. Possible
            values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
            **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
            is used. Refer to the VM size documentation for Windows VM at
            https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
            https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
            sizes exposes a cache disk.
    DiskControllerTypes:
      type: string
      description: |-
        Specifies the disk controller type configured for the VM and
        VirtualMachineScaleSet. This property is only supported for virtual machines
        whose operating system disk and VM sku supports Generation 2
        (https://docs.microsoft.com/en-us/azure/virtual-machines/generation-2), please
        check the HyperVGenerations capability returned as part of VM sku capabilities
        in the response of Microsoft.Compute SKUs api for the region contains V2
        (https://docs.microsoft.com/rest/api/compute/resourceskus/list). For more
        information about Disk Controller Types supported please refer to
        https://aka.ms/azure-diskcontrollertypes.
      enum:
        - SCSI
        - NVMe
      x-ms-enum:
        name: DiskControllerTypes
        modelAsString: true
        values:
          - name: SCSI
            value: SCSI
            description: SCSI disk type
          - name: NVMe
            value: NVMe
            description: NVMe disk type
    DiskCreateOptionTypes:
      type: string
      description: Specifies how the virtual machine should be created.
      enum:
        - FromImage
        - Empty
        - Attach
        - Copy
        - Restore
      x-ms-enum:
        name: DiskCreateOptionTypes
        modelAsString: true
        values:
          - name: FromImage
            value: FromImage
            description: |-
              This value is used when you are using an image to create the virtual machine.
              If you are using a platform image, you also use the imageReference element
              described above. If you are using a marketplace image, you also use the
              plan element previously described.
          - name: Empty
            value: Empty
            description: This value is used when creating an empty data disk.
          - name: Attach
            value: Attach
            description: This value is used when you are using a specialized disk to create the virtual machine.
          - name: Copy
            value: Copy
            description: This value is used to create a data disk from a snapshot or another disk.
          - name: Restore
            value: Restore
            description: This value is used to create a data disk from a disk restore point.
    DiskDeleteOptionTypes:
      type: string
      description: |-
        Specifies the behavior of the managed disk when the VM gets deleted, for
        example whether the managed disk is deleted or detached. Supported values are:
        **Delete.** If this value is used, the managed disk is deleted when VM gets
        deleted. **Detach.** If this value is used, the managed disk is retained after
        VM gets deleted. Minimum api-version: 2021-03-01.
      enum:
        - Delete
        - Detach
      x-ms-enum:
        name: DiskDeleteOptionTypes
        modelAsString: true
        values:
          - name: Delete
            value: Delete
            description: If this value is used, the managed disk is deleted when VM gets deleted.
          - name: Detach
            value: Detach
            description: If this value is used, the managed disk is retained after VM gets deleted.
    DiskEncryptionSetParameters:
      type: object
      description: |-
        Describes the parameter of customer managed disk encryption set resource id
        that can be specified for disk. **Note:** The disk encryption set resource id
        can only be specified for managed disk. Please refer
        https://aka.ms/mdssewithcmkoverview for more details.
      properties:
        id:
          type: string
          format: arm-id
          description: Resource Id
    DomainNameLabelScopeTypes:
      type: string
      description: |-
        The Domain name label scope.The concatenation of the hashed domain name label
        that generated according to the policy from domain name label scope and vm
        index will be the domain name labels of the PublicIPAddress resources that will
        be created
      enum:
        - TenantReuse
        - SubscriptionReuse
        - ResourceGroupReuse
        - NoReuse
      x-ms-enum:
        name: DomainNameLabelScopeTypes
        modelAsString: true
        values:
          - name: TenantReuse
            value: TenantReuse
            description: TenantReuse type
          - name: SubscriptionReuse
            value: SubscriptionReuse
            description: SubscriptionReuse type
          - name: ResourceGroupReuse
            value: ResourceGroupReuse
            description: ResourceGroupReuse type
          - name: NoReuse
            value: NoReuse
            description: NoReuse type
    EncryptionIdentity:
      type: object
      description: |-
        Specifies the Managed Identity used by ADE to get access token for keyvault
        operations.
      properties:
        userAssignedIdentityResourceId:
          type: string
          format: arm-id
          description: Specifies ARM Resource ID of one of the user identities associated with the VM.
    EvictionPolicy:
      type: string
      description: Different kind of eviction policies
      enum:
        - Delete
        - Deallocate
      x-ms-enum:
        name: EvictionPolicy
        modelAsString: true
        values:
          - name: Delete
            value: Delete
            description: When evicted, the Spot VM will be deleted and the corresponding capacity will be updated to reflect this.
          - name: Deallocate
            value: Deallocate
            description: When evicted, the Spot VM will be deallocated/stopped
    Fleet:
      description: An Compute Fleet resource
      properties:
        properties:
          $ref: '#/components/schemas/FleetProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        zones:
          type: array
          description: Zones in which the Compute Fleet is available
          items:
            type: string
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        plan:
          $ref: '#/components/schemas/Plan'
          description: Details of the resource plan.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    FleetListResult:
      type: object
      description: The response of a Fleet list operation.
      properties:
        value:
          type: array
          description: The Fleet items on this page
          items:
            $ref: '#/components/schemas/Fleet'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    FleetProperties:
      type: object
      description: Details of the Compute Fleet.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
        spotPriorityProfile:
          $ref: '#/components/schemas/SpotPriorityProfile'
          description: Configuration Options for Spot instances in Compute Fleet.
        regularPriorityProfile:
          $ref: '#/components/schemas/RegularPriorityProfile'
          description: Configuration Options for Regular instances in Compute Fleet.
        vmSizesProfile:
          type: array
          description: List of VM sizes supported for Compute Fleet
          items:
            $ref: '#/components/schemas/VmSizeProfile'
          x-ms-identifiers: []
        computeProfile:
          $ref: '#/components/schemas/ComputeProfile'
          description: Compute Profile to use for running user's workloads.
        timeCreated:
          type: string
          format: date-time
          description: Specifies the time at which the Compute Fleet is created.
          readOnly: true
        uniqueId:
          type: string
          description: Specifies the ID which uniquely identifies a Compute Fleet.
          readOnly: true
      required:
        - vmSizesProfile
        - computeProfile
    FleetUpdate:
      description: Fleet Update Model
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentityUpdate'
          description: Updatable managed service identity
        plan:
          $ref: '#/components/schemas/ResourcePlanUpdate'
          description: Updatable resource plan
        properties:
          $ref: '#/components/schemas/FleetProperties'
          description: RP-specific updatable properties
      type: object
    IPVersion:
      type: string
      description: |-
        Available from Api-Version 2017-03-30 onwards, it represents whether the
        specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
        values are: 'IPv4' and 'IPv6'.
      enum:
        - IPv4
        - IPv6
      x-ms-enum:
        name: IPVersion
        modelAsString: true
        values:
          - name: IPv4
            value: IPv4
            description: IPv4 version
          - name: IPv6
            value: IPv6
            description: IPv6 version
    ImageReference:
      type: object
      description: |-
        Specifies information about the image to use. You can specify information about
        platform images, marketplace images, or virtual machine images. This element is
        required when you want to use a platform image, marketplace image, or virtual
        machine image, but is not used in other creation operations. NOTE: Image
        reference publisher and offer can only be set when you create the scale set.
      properties:
        id:
          type: string
          format: arm-id
          description: Resource Id
        publisher:
          type: string
          description: The image publisher.
        offer:
          type: string
          description: |-
            Specifies the offer of the platform image or marketplace image used to create
            the virtual machine.
        sku:
          type: string
          description: The image SKU.
        version:
          type: string
          description: |-
            Specifies the version of the platform image or marketplace image used to create
            the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
            Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
            version of an image available at deploy time. Even if you use 'latest', the VM
            image will not automatically update after deploy time even if a new version
            becomes available. Please do not use field 'version' for gallery image
            deployment, gallery image should always use 'id' field for deployment, to use 'latest'
            version of gallery image, just set
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
            in the 'id' field without version input.
        exactVersion:
          type: string
          description: |-
            Specifies in decimal numbers, the version of platform image or marketplace
            image used to create the virtual machine. This readonly field differs from 'version',
            only if the value specified in 'version' field is 'latest'.
          readOnly: true
        sharedGalleryImageId:
          type: string
          description: |-
            Specified the shared gallery image unique id for vm deployment. This can be
            fetched from shared gallery image GET call.
        communityGalleryImageId:
          type: string
          description: |-
            Specified the community gallery image unique id for vm deployment. This can be
            fetched from community gallery image GET call.
    InnerError:
      type: object
      description: Inner error details.
      properties:
        exceptionType:
          type: string
          description: The exception type.
        errorDetail:
          type: string
          description: The internal error message or exception dump.
    KeyVaultSecretReference:
      type: object
      description: Describes a reference to Key Vault Secret
      properties:
        secretUrl:
          type: string
          format: uri
          description: The URL referencing a secret in a Key Vault.
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing the secret.
      required:
        - secretUrl
        - sourceVault
    LinuxConfiguration:
      type: object
      description: |-
        Specifies the Linux operating system settings on the virtual machine. For a
        list of supported Linux distributions, see [Linux on Azure-Endorsed
        Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
      properties:
        disablePasswordAuthentication:
          type: boolean
          description: Specifies whether password authentication should be disabled.
        ssh:
          $ref: '#/components/schemas/SshConfiguration'
          description: Specifies the ssh key configuration for a Linux OS.
        provisionVMAgent:
          type: boolean
          description: |-
            Indicates whether virtual machine agent should be provisioned on the virtual
            machine. When this property is not specified in the request body, default
            behavior is to set it to true. This will ensure that VM Agent is installed on
            the VM so that extensions can be added to the VM later.
        patchSettings:
          $ref: '#/components/schemas/LinuxPatchSettings'
          description: '[Preview Feature] Specifies settings related to VM Guest Patching on Linux.'
        enableVMAgentPlatformUpdates:
          type: boolean
          description: |-
            Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
            machine. Default value is false.
    LinuxPatchAssessmentMode:
      type: string
      description: |-
        Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
        machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
        control the timing of patch assessments on a virtual machine. <br /><br />
        **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
        The property provisionVMAgent must be true.
      enum:
        - ImageDefault
        - AutomaticByPlatform
      x-ms-enum:
        name: LinuxPatchAssessmentMode
        modelAsString: true
        values:
          - name: ImageDefault
            value: ImageDefault
            description: You control the timing of patch assessments on a virtual machine.
          - name: AutomaticByPlatform
            value: AutomaticByPlatform
            description: The platform will trigger periodic patch assessments.The property provisionVMAgent must be true.
    LinuxPatchSettings:
      type: object
      description: Specifies settings related to VM Guest Patching on Linux.
      properties:
        patchMode:
          $ref: '#/components/schemas/LinuxVMGuestPatchMode'
          description: |-
            Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
            machines associated to virtual machine scale set with OrchestrationMode as
            Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
            virtual machine's default patching configuration is used. <br /><br />
            **AutomaticByPlatform** - The virtual machine will be automatically updated by
            the platform. The property provisionVMAgent must be true
        assessmentMode:
          $ref: '#/components/schemas/LinuxPatchAssessmentMode'
          description: |-
            Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
            machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
            control the timing of patch assessments on a virtual machine. <br /><br />
            **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
            The property provisionVMAgent must be true.
        automaticByPlatformSettings:
          $ref: '#/components/schemas/LinuxVMGuestPatchAutomaticByPlatformSettings'
          description: |-
            Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
            Patching on Linux.
    LinuxVMGuestPatchAutomaticByPlatformRebootSetting:
      type: string
      description: |-
        Specifies the reboot setting for all AutomaticByPlatform patch installation
        operations.
      enum:
        - Unknown
        - IfRequired
        - Never
        - Always
      x-ms-enum:
        name: LinuxVMGuestPatchAutomaticByPlatformRebootSetting
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown Reboot setting
          - name: IfRequired
            value: IfRequired
            description: IfRequired Reboot setting
          - name: Never
            value: Never
            description: Never Reboot setting
          - name: Always
            value: Always
            description: Always Reboot setting
    LinuxVMGuestPatchAutomaticByPlatformSettings:
      type: object
      description: |-
        Specifies additional settings to be applied when patch mode AutomaticByPlatform
        is selected in Linux patch settings.
      properties:
        rebootSetting:
          $ref: '#/components/schemas/LinuxVMGuestPatchAutomaticByPlatformRebootSetting'
          description: |-
            Specifies the reboot setting for all AutomaticByPlatform patch installation
            operations.
        bypassPlatformSafetyChecksOnUserSchedule:
          type: boolean
          description: Enables customer to schedule patching without accidental upgrades
    LinuxVMGuestPatchMode:
      type: string
      description: |-
        Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
        machines associated to virtual machine scale set with OrchestrationMode as
        Flexible.
      enum:
        - ImageDefault
        - AutomaticByPlatform
      x-ms-enum:
        name: LinuxVMGuestPatchMode
        modelAsString: true
        values:
          - name: ImageDefault
            value: ImageDefault
            description: The virtual machine's default patching configuration is used.
          - name: AutomaticByPlatform
            value: AutomaticByPlatform
            description: The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true.
    ManagedServiceIdentityUpdate:
      type: object
      description: The template for adding optional properties.
      properties:
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
          description: The type of managed identity assigned to this resource.
        userAssignedIdentities:
          type: object
          description: The identities assigned to this resource by the user.
          additionalProperties:
            allOf:
              - $ref: '#/components/schemas/UserAssignedIdentity'
            type: object
            nullable: true
    Mode:
      type: string
      description: |-
        Specifies the mode that ProxyAgent will execute on if the feature is enabled.
        ProxyAgent will start to audit or monitor but not enforce access control over
        requests to host endpoints in Audit mode, while in Enforce mode it will enforce
        access control. The default value is Enforce mode.
      enum:
        - Audit
        - Enforce
      x-ms-enum:
        name: Mode
        modelAsString: true
        values:
          - name: Audit
            value: Audit
            description: Audit Mode
          - name: Enforce
            value: Enforce
            description: Enforce Mode
    NetworkApiVersion:
      type: string
      description: |-
        specifies the Microsoft.Network API version used when creating networking
        resources in the Network Interface Configurations for Virtual Machine Scale Set
        with orchestration mode 'Flexible'
      enum:
        - '2020-11-01'
      x-ms-enum:
        name: NetworkApiVersion
        modelAsString: true
        values:
          - name: v2020_11_01
            value: '2020-11-01'
            description: Initial version supported. Later versions are supported as well.
    NetworkInterfaceAuxiliaryMode:
      type: string
      description: |-
        Specifies whether the Auxiliary mode is enabled for the Network Interface
        resource.
      enum:
        - None
        - AcceleratedConnections
        - Floating
      x-ms-enum:
        name: NetworkInterfaceAuxiliaryMode
        modelAsString: true
        values:
          - name: None
            value: None
            description: None Mode
          - name: AcceleratedConnections
            value: AcceleratedConnections
            description: AcceleratedConnections Mode
          - name: Floating
            value: Floating
            description: Floating Mode
    NetworkInterfaceAuxiliarySku:
      type: string
      description: |-
        Specifies whether the Auxiliary sku is enabled for the Network Interface
        resource.
      enum:
        - None
        - A1
        - A2
        - A4
        - A8
      x-ms-enum:
        name: NetworkInterfaceAuxiliarySku
        modelAsString: true
        values:
          - name: None
            value: None
            description: no sku
          - name: A1
            value: A1
            description: A1 sku
          - name: A2
            value: A2
            description: A2 sku
          - name: A4
            value: A4
            description: A4 sku
          - name: A8
            value: A8
            description: A8 sku
    OSImageNotificationProfile:
      type: object
      description: Specifies OS Image Scheduled Event related configurations.
      properties:
        notBeforeTimeout:
          type: string
          description: |-
            Length of time a Virtual Machine being reimaged or having its OS upgraded will
            have to potentially approve the OS Image Scheduled Event before the event is
            auto approved (timed out). The configuration is specified in ISO 8601 format,
            and the value must not exceed 15 minutes (PT15M)
        enable:
          type: boolean
          description: Specifies whether the OS Image Scheduled event is enabled or disabled.
    OperatingSystemTypes:
      type: string
      description: |-
        This property allows you to specify the type of the OS that is included in the
        disk if creating a VM from user-image or a specialized VHD. Possible values
        are: **Windows,** **Linux.**
      enum:
        - Windows
        - Linux
      x-ms-enum:
        name: OperatingSystemTypes
        modelAsString: true
        values:
          - name: Windows
            value: Windows
            description: Windows OS type
          - name: Linux
            value: Linux
            description: Linux OS type
    PatchSettings:
      type: object
      description: Specifies settings related to VM Guest Patching on Windows.
      properties:
        patchMode:
          $ref: '#/components/schemas/WindowsVMGuestPatchMode'
          description: |-
            Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
            machines associated to virtual machine scale set with OrchestrationMode as
            Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
            control the application of patches to a virtual machine. You do this by
            applying patches manually inside the VM. In this mode, automatic updates are
            disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
            false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
            updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
            must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
            automatically updated by the platform. The properties provisionVMAgent and
            WindowsConfiguration.enableAutomaticUpdates must be true
        enableHotpatching:
          type: boolean
          description: |-
            Enables customers to patch their Azure VMs without requiring a reboot. For
            enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
            must be set to 'AutomaticByPlatform'.
        assessmentMode:
          $ref: '#/components/schemas/WindowsPatchAssessmentMode'
          description: |-
            Specifies the mode of VM Guest patch assessment for the IaaS virtual
            machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
            control the timing of patch assessments on a virtual machine.<br /><br />
            **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
            The property provisionVMAgent must be true.
        automaticByPlatformSettings:
          $ref: '#/components/schemas/WindowsVMGuestPatchAutomaticByPlatformSettings'
          description: |-
            Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
            Patching on Windows.
    ProtocolTypes:
      type: string
      description: |-
        Specifies the protocol of WinRM listener. Possible values are: **http,**
        **https.**
      enum:
        - Http
        - Https
      x-ms-enum:
        name: ProtocolTypes
        modelAsString: true
        values:
          - name: Http
            value: Http
            description: Http protocol
          - name: Https
            value: Https
            description: Https protocol
    ProvisioningState:
      type: string
      description: The status of the current operation.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Updating
        - Deleting
        - Migrating
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Creating
            value: Creating
            description: Initial creation in progress.
          - name: Updating
            value: Updating
            description: Update in progress.
          - name: Deleting
            value: Deleting
            description: Deletion in progress.
          - name: Migrating
            value: Migrating
            description: Resource is being migrated from one subscription or resource group to another.
      readOnly: true
    ProxyAgentSettings:
      type: object
      description: |-
        Specifies ProxyAgent settings while creating the virtual machine. Minimum
        api-version: 2023-09-01.
      properties:
        enabled:
          type: boolean
          description: |-
            Specifies whether ProxyAgent feature should be enabled on the virtual machine
            or virtual machine scale set.
        mode:
          $ref: '#/components/schemas/Mode'
          description: |-
            Specifies the mode that ProxyAgent will execute on if the feature is enabled.
            ProxyAgent will start to audit or monitor but not enforce access control over
            requests to host endpoints in Audit mode, while in Enforce mode it will enforce
            access control. The default value is Enforce mode.
        keyIncarnationId:
          type: integer
          format: int32
          description: |-
            Increase the value of this property allows user to reset the key used for
            securing communication channel between guest and host.
    PublicIPAddressSku:
      type: object
      description: |-
        Describes the public IP Sku. It can only be set with OrchestrationMode as
        Flexible.
      properties:
        name:
          $ref: '#/components/schemas/PublicIPAddressSkuName'
          description: Specify public IP sku name
        tier:
          $ref: '#/components/schemas/PublicIPAddressSkuTier'
          description: Specify public IP sku tier
    PublicIPAddressSkuName:
      type: string
      description: Specify public IP sku name.
      enum:
        - Basic
        - Standard
      x-ms-enum:
        name: PublicIPAddressSkuName
        modelAsString: true
        values:
          - name: Basic
            value: Basic
            description: Basic sku name
          - name: Standard
            value: Standard
            description: Standard sku name
    PublicIPAddressSkuTier:
      type: string
      description: Specify public IP sku tier
      enum:
        - Regional
        - Global
      x-ms-enum:
        name: PublicIPAddressSkuTier
        modelAsString: true
        values:
          - name: Regional
            value: Regional
            description: Regional sku tier
          - name: Global
            value: Global
            description: Global sku tier
    RegularPriorityAllocationStrategy:
      type: string
      description: Regular VM Allocation strategy types for Compute Fleet
      enum:
        - LowestPrice
        - Prioritized
      x-ms-enum:
        name: RegularPriorityAllocationStrategy
        modelAsString: true
        values:
          - name: LowestPrice
            value: LowestPrice
            description: Default. VM sizes distribution will be determined to optimize for price.
          - name: Prioritized
            value: Prioritized
            description: VM sizes distribution will be determined to optimize for the 'priority' as specified for each vm size.
    RegularPriorityProfile:
      type: object
      description: Configuration Options for Regular instances in Compute Fleet.
      properties:
        capacity:
          type: integer
          format: int32
          description: Total capacity to achieve. It is currently in terms of number of VMs.
          minimum: 0
        minCapacity:
          type: integer
          format: int32
          description: Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
          minimum: 0
        allocationStrategy:
          $ref: '#/components/schemas/RegularPriorityAllocationStrategy'
          description: Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
    ResourcePlanUpdate:
      type: object
      description: The template for adding optional properties.
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
    ScheduledEventsProfile:
      type: object
      description: Specifies Scheduled Event related configurations.
      properties:
        terminateNotificationProfile:
          $ref: '#/components/schemas/TerminateNotificationProfile'
          description: Specifies Terminate Scheduled Event related configurations.
        osImageNotificationProfile:
          $ref: '#/components/schemas/OSImageNotificationProfile'
          description: Specifies OS Image Scheduled Event related configurations.
    SecurityEncryptionTypes:
      type: string
      description: |-
        Specifies the EncryptionType of the managed disk.
        **Note:** It can be set for only Confidential VMs.
      enum:
        - VMGuestStateOnly
        - DiskWithVMGuestState
        - NonPersistedTPM
      x-ms-enum:
        name: SecurityEncryptionTypes
        modelAsString: true
        values:
          - name: VMGuestStateOnly
            value: VMGuestStateOnly
            description: |-
              EncryptionType of the managed disk is set to VMGuestStateOnly for encryption
              of just the VMGuestState blob.
          - name: DiskWithVMGuestState
            value: DiskWithVMGuestState
            description: |-
              EncryptionType of the managed disk is set to DiskWithVMGuestState for encryption
              of the managed disk along with VMGuestState blob.
          - name: NonPersistedTPM
            value: NonPersistedTPM
            description: |-
              EncryptionType of the managed disk is set to NonPersistedTPM for not persisting
              firmware state in the VMGuestState blob.
    SecurityPostureReference:
      type: object
      description: |-
        Specifies the security posture to be used for all virtual machines in the scale
        set. Minimum api-version: 2023-03-01
      properties:
        id:
          type: string
          description: |-
            The security posture reference id in the form of
            /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
        excludeExtensions:
          type: array
          description: |-
            List of virtual machine extension names to exclude when applying the security
            posture.
          items:
            type: string
        isOverridable:
          type: boolean
          description: Whether the security posture can be overridden by the user.
    SecurityProfile:
      type: object
      description: |-
        Specifies the Security profile settings for the virtual machine or virtual
        machine scale set.
      properties:
        uefiSettings:
          $ref: '#/components/schemas/UefiSettings'
          description: |-
            Specifies the security settings like secure boot and vTPM used while creating
            the virtual machine. Minimum api-version: 2020-12-01.
        encryptionAtHost:
          type: boolean
          description: |-
            This property can be used by user in the request to enable or disable the Host
            Encryption for the virtual machine or virtual machine scale set. This will
            enable the encryption for all the disks including Resource/Temp disk at host
            itself. The default behavior is: The Encryption at host will be disabled unless
            this property is set to true for the resource.
        securityType:
          $ref: '#/components/schemas/SecurityTypes'
          description: |-
            Specifies the SecurityType of the virtual machine. It has to be set to any
            specified value to enable UefiSettings. The default behavior is: UefiSettings
            will not be enabled unless this property is set.
        encryptionIdentity:
          $ref: '#/components/schemas/EncryptionIdentity'
          description: |-
            Specifies the Managed Identity used by ADE to get access token for keyvault
            operations.
        proxyAgentSettings:
          $ref: '#/components/schemas/ProxyAgentSettings'
          description: |-
            Specifies ProxyAgent settings while creating the virtual machine. Minimum
            api-version: 2023-09-01.
    SecurityTypes:
      type: string
      description: |-
        Specifies the SecurityType of the virtual machine. It has to be set to any
        specified value to enable UefiSettings. The default behavior is: UefiSettings
        will not be enabled unless this property is set.
      enum:
        - TrustedLaunch
        - ConfidentialVM
      x-ms-enum:
        name: SecurityTypes
        modelAsString: true
        values:
          - name: TrustedLaunch
            value: TrustedLaunch
            description: TrustedLaunch security type
          - name: ConfidentialVM
            value: ConfidentialVM
            description: ConfidentialVM security type
    ServiceArtifactReference:
      type: object
      description: |-
        Specifies the service artifact reference id used to set same image version for
        all virtual machines in the scale set when using 'latest' image version.
        Minimum api-version: 2022-11-01
      properties:
        id:
          type: string
          format: arm-id
          description: |-
            The service artifact reference id in the form of
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
    SettingNames:
      type: string
      description: |-
        Specifies the name of the setting to which the content applies. Possible values
        are: FirstLogonCommands and AutoLogon.
      enum:
        - AutoLogon
        - FirstLogonCommands
      x-ms-enum:
        name: SettingNames
        modelAsString: true
        values:
          - name: AutoLogon
            value: AutoLogon
            description: AutoLogon setting
          - name: FirstLogonCommands
            value: FirstLogonCommands
            description: FirstLogonCommands setting
    SpotAllocationStrategy:
      type: string
      description: Spot allocation strategy types for Compute Fleet
      enum:
        - PriceCapacityOptimized
        - LowestPrice
        - CapacityOptimized
      x-ms-enum:
        name: SpotAllocationStrategy
        modelAsString: true
        values:
          - name: PriceCapacityOptimized
            value: PriceCapacityOptimized
            description: Default. VM sizes distribution will be determined to optimize for both price and capacity.
          - name: LowestPrice
            value: LowestPrice
            description: 'VM sizes distribution will be determined to optimize for price. Note: Capacity will still be considered here but will be given much less weight.'
          - name: CapacityOptimized
            value: CapacityOptimized
            description: VM sizes distribution will be determined to optimize for capacity.
    SpotPriorityProfile:
      type: object
      description: Configuration Options for Spot instances in Compute Fleet.
      properties:
        capacity:
          type: integer
          format: int32
          description: Total capacity to achieve. It is currently in terms of number of VMs.
          minimum: 0
        minCapacity:
          type: integer
          format: int32
          description: Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
          minimum: 0
        maxPricePerVM:
          type: number
          format: float
          description: Price per hour of each Spot VM will never exceed this.
        evictionPolicy:
          $ref: '#/components/schemas/EvictionPolicy'
          description: Eviction Policy to follow when evicting Spot VMs.
        allocationStrategy:
          $ref: '#/components/schemas/SpotAllocationStrategy'
          description: Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
        maintain:
          type: boolean
          description: |-
            Flag to enable/disable continuous goal seeking for the desired capacity and restoration of evicted Spot VMs.
            If maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to create new VMs (if VMs are evicted deleted)
            or update existing VMs with new VM sizes (if VMs are evicted deallocated or failed to allocate due to capacity constraint) in order to achieve the desired capacity.
            Maintain is enabled by default.
    SshConfiguration:
      type: object
      description: SSH configuration for Linux based VMs running on Azure
      properties:
        publicKeys:
          type: array
          description: The list of SSH public keys used to authenticate with linux based VMs.
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers:
            - path
    SshPublicKey:
      type: object
      description: |-
        Contains information about SSH certificate public key and the path on the Linux
        VM where the public key is placed.
      properties:
        path:
          type: string
          description: |-
            Specifies the full path on the created VM where ssh public key is stored. If
            the file already exists, the specified key is appended to the file. Example:
            /home/user/.ssh/authorized_keys
        keyData:
          type: string
          description: |-
            SSH public key certificate used to authenticate with the VM through ssh. The
            key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys,
            see [Create SSH keys on Linux and Mac for Linux VMs in
            Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
    StatusLevelTypes:
      type: string
      description: The level code.
      enum:
        - Info
        - Warning
        - Error
      x-ms-enum:
        name: StatusLevelTypes
        modelAsString: true
        values:
          - name: Info
            value: Info
            description: Info level
          - name: Warning
            value: Warning
            description: Warning level
          - name: Error
            value: Error
            description: Error Level
    StorageAccountTypes:
      type: string
      description: |-
        Specifies the storage account type for the managed disk. Managed OS disk
        storage account type can only be set when you create the scale set. NOTE:
        UltraSSD_LRS can only be used with data disks. It cannot be used with OS Disk.
        Standard_LRS uses Standard HDD. StandardSSD_LRS uses Standard SSD. Premium_LRS
        uses Premium SSD. UltraSSD_LRS uses Ultra disk. Premium_ZRS uses Premium SSD
        zone redundant storage. StandardSSD_ZRS uses Standard SSD zone redundant
        storage. For more information regarding disks supported for Windows Virtual
        Machines, refer to
        https://docs.microsoft.com/azure/virtual-machines/windows/disks-types and, for
        Linux Virtual Machines, refer to
        https://docs.microsoft.com/azure/virtual-machines/linux/disks-types
      enum:
        - Standard_LRS
        - Premium_LRS
        - StandardSSD_LRS
        - UltraSSD_LRS
        - Premium_ZRS
        - StandardSSD_ZRS
        - PremiumV2_LRS
      x-ms-enum:
        name: StorageAccountTypes
        modelAsString: true
        values:
          - name: Standard_LRS
            value: Standard_LRS
            description: Standard_LRS option.
          - name: Premium_LRS
            value: Premium_LRS
            description: Premium_LRS option.
          - name: StandardSSD_LRS
            value: StandardSSD_LRS
            description: StandardSSD_LRS option.
          - name: UltraSSD_LRS
            value: UltraSSD_LRS
            description: UltraSSD_LRS option.
          - name: Premium_ZRS
            value: Premium_ZRS
            description: Premium_ZRS option.
          - name: StandardSSD_ZRS
            value: StandardSSD_ZRS
            description: StandardSSD_ZRS option.
          - name: PremiumV2_LRS
            value: PremiumV2_LRS
            description: PremiumV2_LRS option.
    SubResource:
      type: object
      description: Describes SubResource
      properties:
        id:
          type: string
          format: arm-id
          description: Resource Id
    SubResourceReadOnly:
      type: object
      description: Describes a Readonly subresource.
      properties:
        id:
          type: string
          format: arm-id
          description: Resource Id
          readOnly: true
    TerminateNotificationProfile:
      type: object
      description: Specifies Terminate Scheduled Event related configurations.
      properties:
        notBeforeTimeout:
          type: string
          description: |-
            Configurable length of time a Virtual Machine being deleted will have to
            potentially approve the Terminate Scheduled Event before the event is auto
            approved (timed out). The configuration must be specified in ISO 8601 format,
            the default value is 5 minutes (PT5M)
        enable:
          type: boolean
          description: Specifies whether the Terminate Scheduled event is enabled or disabled.
    UefiSettings:
      type: object
      description: |-
        Specifies the security settings like secure boot and vTPM used while creating
        the virtual machine. Minimum api-version: 2020-12-01.
      properties:
        secureBootEnabled:
          type: boolean
          description: |-
            Specifies whether secure boot should be enabled on the virtual machine. Minimum
            api-version: 2020-12-01.
        vTpmEnabled:
          type: boolean
          description: |-
            Specifies whether vTPM should be enabled on the virtual machine. Minimum
            api-version: 2020-12-01.
    VMDiskSecurityProfile:
      type: object
      description: |-
        Specifies the security profile settings for the managed disk. **Note:** It can
        only be set for Confidential VMs.
      properties:
        securityEncryptionType:
          $ref: '#/components/schemas/SecurityEncryptionTypes'
          description: |-
            Specifies the EncryptionType of the managed disk. It is set to
            DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
            blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
            NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
            **Note:** It can be set for only Confidential VMs.
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: |-
            Specifies the customer managed disk encryption set resource id for the managed
            disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
            VMGuest blob.
    VMGalleryApplication:
      type: object
      description: |-
        Specifies the required information to reference a compute gallery application
        version
      properties:
        tags:
          type: string
          description: Optional, Specifies a passthrough value for more generic context.
        order:
          type: integer
          format: int32
          description: Optional, Specifies the order in which the packages have to be installed
        packageReferenceId:
          type: string
          format: arm-id
          description: |-
            Specifies the GalleryApplicationVersion resource id on the form of
            /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
        configurationReference:
          type: string
          description: |-
            Optional, Specifies the uri to an azure blob that will replace the default
            configuration for the package if provided
        treatFailureAsDeploymentFailure:
          type: boolean
          description: |-
            Optional, If true, any failure for any operation in the VmApplication will fail
            the deployment
        enableAutomaticUpgrade:
          type: boolean
          description: |-
            If set to true, when a new Gallery Application version is available in PIR/SIG,
            it will be automatically updated for the VM/VMSS
      required:
        - packageReferenceId
    VMSizeProperties:
      type: object
      description: Specifies VM Size Property settings on the virtual machine.
      properties:
        vCPUsAvailable:
          type: integer
          format: int32
          description: |-
            Specifies the number of vCPUs available for the VM. When this property is not
            specified in the request body the default behavior is to set it to the value of
            vCPUs available for that VM size exposed in api response of [List all available
            virtual machine sizes in a
            region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list).
        vCPUsPerCore:
          type: integer
          format: int32
          description: |-
            Specifies the vCPU to physical core ratio. When this property is not specified
            in the request body the default behavior is set to the value of vCPUsPerCore
            for the VM Size exposed in api response of [List all available virtual machine
            sizes in a
            region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list).
            **Setting this property to 1 also means that hyper-threading is disabled.**
    VaultCertificate:
      type: object
      description: |-
        Describes a single certificate reference in a Key Vault, and where the
        certificate should reside on the VM.
      properties:
        certificateUrl:
          type: string
          format: uri
          description: |-
            This is the URL of a certificate that has been uploaded to Key Vault as a
            secret. For adding a secret to the Key Vault, see [Add a key or secret to the
            key
            vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).
            In this case, your certificate needs to be It is the Base64 encoding of the
            following JSON Object which is encoded in UTF-8: <br><br> {<br>
            "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
            "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
            machine it is recommended to use the [Azure Key Vault virtual machine extension
            for
            Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
            or the [Azure Key Vault virtual machine extension for
            Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        certificateStore:
          type: string
          description: |-
            For Windows VMs, specifies the certificate store on the Virtual Machine to
            which the certificate should be added. The specified certificate store is
            implicitly in the LocalMachine account. For Linux VMs, the certificate file is
            placed under the /var/lib/waagent directory, with the file name
            &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and
            &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem
            formatted.
    VaultSecretGroup:
      type: object
      description: Describes a set of certificates which are all in the same Key Vault.
      properties:
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: |-
            The relative URL of the Key Vault containing all of the certificates in
            VaultCertificates.
        vaultCertificates:
          type: array
          description: The list of key vault references in SourceVault which contain certificates.
          items:
            $ref: '#/components/schemas/VaultCertificate'
          x-ms-identifiers:
            - certificateUrl
    VirtualHardDisk:
      type: object
      description: Describes the uri of a disk.
      properties:
        uri:
          type: string
          format: uri
          description: Specifies the virtual hard disk's uri.
    VirtualMachineScaleSet:
      type: object
      description: An AzureFleet's virtualMachineScaleSet
      properties:
        name:
          type: string
          description: The name of the virtualMachineScaleSet
          readOnly: true
        id:
          type: string
          description: |-
            The compute RP resource id of the virtualMachineScaleSet 
            "subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}"
          readOnly: true
        type:
          type: string
          description: Type of the virtualMachineScaleSet
          readOnly: true
        operationStatus:
          $ref: '#/components/schemas/ProvisioningState'
          description: This represents the operationStatus of the VMSS in response to the last operation that was performed on it by Azure Fleet resource.
          readOnly: true
        error:
          $ref: '#/components/schemas/ApiError'
          description: Error Information when `operationStatus` is `Failed`
          readOnly: true
      required:
        - name
        - id
        - operationStatus
    VirtualMachineScaleSetDataDisk:
      type: object
      description: Describes a virtual machine scale set data disk.
      properties:
        name:
          type: string
          description: The disk name.
        lun:
          type: integer
          format: int32
          description: |-
            Specifies the logical unit number of the data disk. This value is used to
            identify data disks within the VM and therefore must be unique for each data
            disk attached to a VM.
        caching:
          $ref: '#/components/schemas/CachingTypes'
          description: |-
            Specifies the caching requirements. Possible values are: **None,**
            **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
            storage. ReadOnly for Premium storage.**
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/DiskCreateOptionTypes'
          description: The create option.
        diskSizeGB:
          type: integer
          format: int32
          description: |-
            Specifies the size of an empty data disk in gigabytes. This element can be used
            to overwrite the size of the disk in a virtual machine image. The property
            diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be
            larger than 1023.
        managedDisk:
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
          description: The managed disk parameters.
        diskIOPSReadWrite:
          type: integer
          format: int64
          description: |-
            Specifies the Read-Write IOPS for the managed disk. Should be used only when
            StorageAccountType is UltraSSD_LRS. If not specified, a default value would be
            assigned based on diskSizeGB.
        diskMBpsReadWrite:
          type: integer
          format: int64
          description: |-
            Specifies the bandwidth in MB per second for the managed disk. Should be used
            only when StorageAccountType is UltraSSD_LRS. If not specified, a default value
            would be assigned based on diskSizeGB.
        deleteOption:
          $ref: '#/components/schemas/DiskDeleteOptionTypes'
          description: |-
            Specifies whether data disk should be deleted or detached upon VMSS Flex
            deletion (This feature is available for VMSS with Flexible OrchestrationMode
            only).<br><br> Possible values: <br><br> **Delete** If this value is used, the
            data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If
            this value is used, the data disk is retained after VMSS Flex VM is
            deleted.<br><br> The default value is set to **Delete**.
      required:
        - lun
        - createOption
    VirtualMachineScaleSetExtension:
      description: Describes a Virtual Machine Scale Set Extension.
      properties:
        id:
          type: string
          format: arm-id
          description: Resource Id
          readOnly: true
        name:
          type: string
          description: The name of the extension.
        type:
          type: string
          description: Resource type
          readOnly: true
        properties:
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProperties'
          description: Describes the properties of a Virtual Machine Scale Set Extension.
      type: object
    VirtualMachineScaleSetExtensionProfile:
      type: object
      description: Describes a virtual machine scale set extension profile.
      properties:
        extensions:
          type: array
          description: The virtual machine scale set child extension resources.
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        extensionsTimeBudget:
          type: string
          description: |-
            Specifies the time alloted for all extensions to start. The time duration
            should be between 15 minutes and 120 minutes (inclusive) and should be
            specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
            Minimum api-version: 2020-06-01.
    VirtualMachineScaleSetExtensionProperties:
      type: object
      description: Describes the properties of a Virtual Machine Scale Set Extension.
      properties:
        forceUpdateTag:
          type: string
          description: |-
            If a value is provided and is different from the previous value, the extension
            handler will be forced to update even if the extension configuration has not
            changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: |-
            Indicates whether the extension should use a newer minor version if one is
            available at deployment time. Once deployed, however, the extension will not
            upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: |-
            Indicates whether the extension should be automatically upgraded by the
            platform if there is a newer version of the extension available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
          additionalProperties: {}
        protectedSettings:
          type: object
          description: |-
            The extension can contain either protectedSettings or
            protectedSettingsFromKeyVault or no protected settings at all.
          additionalProperties: {}
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
        provisioningState:
          type: string
          description: The provisioning state, which only appears in the response.
          readOnly: true
        provisionAfterExtensions:
          type: array
          description: |-
            Collection of extension names after which this extension needs to be
            provisioned.
          items:
            type: string
        suppressFailures:
          type: boolean
          description: |-
            Indicates whether failures stemming from the extension will be suppressed
            (Operational failures such as not connecting to the VM will not be suppressed
            regardless of this value). The default is false.
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: |-
            The extensions protected settings that are passed by reference, and consumed
            from key vault
    VirtualMachineScaleSetHardwareProfile:
      type: object
      description: Specifies the hardware settings for the virtual machine scale set.
      properties:
        vmSizeProperties:
          $ref: '#/components/schemas/VMSizeProperties'
          description: |-
            Specifies the properties for customizing the size of the virtual machine.
            Minimum api-version: 2021-11-01. Please follow the instructions in [VM
            Customization](https://aka.ms/vmcustomization) for more details.
    VirtualMachineScaleSetIPConfiguration:
      description: Describes a virtual machine scale set network profile's IP configuration.
      required:
        - name
      properties:
        name:
          type: string
          description: The IP configuration name.
        properties:
          $ref: '#/components/schemas/VirtualMachineScaleSetIPConfigurationProperties'
          description: |-
            Describes a virtual machine scale set network profile's IP configuration
            properties.
      type: object
    VirtualMachineScaleSetIPConfigurationProperties:
      type: object
      description: |-
        Describes a virtual machine scale set network profile's IP configuration
        properties.
      properties:
        subnet:
          $ref: '#/components/schemas/ApiEntityReference'
          description: Specifies the identifier of the subnet.
        primary:
          type: boolean
          description: |-
            Specifies the primary network interface in case the virtual machine has more
            than 1 network interface.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfiguration'
          description: The publicIPAddressConfiguration.
        privateIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: |-
            Available from Api-Version 2017-03-30 onwards, it represents whether the
            specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
            values are: 'IPv4' and 'IPv6'.
        applicationGatewayBackendAddressPools:
          type: array
          description: |-
            Specifies an array of references to backend address pools of application
            gateways. A scale set can reference backend address pools of multiple
            application gateways. Multiple scale sets cannot use the same application
            gateway.
          items:
            $ref: '#/components/schemas/SubResource'
        applicationSecurityGroups:
          type: array
          description: Specifies an array of references to application security group.
          items:
            $ref: '#/components/schemas/SubResource'
        loadBalancerBackendAddressPools:
          type: array
          description: |-
            Specifies an array of references to backend address pools of load balancers. A
            scale set can reference backend address pools of one public and one internal
            load balancer. Multiple scale sets cannot use the same basic sku load balancer.
          items:
            $ref: '#/components/schemas/SubResource'
        loadBalancerInboundNatPools:
          type: array
          description: |-
            Specifies an array of references to inbound Nat pools of the load balancers. A
            scale set can reference inbound nat pools of one public and one internal load
            balancer. Multiple scale sets cannot use the same basic sku load balancer.
          items:
            $ref: '#/components/schemas/SubResource'
    VirtualMachineScaleSetIpTag:
      type: object
      description: Contains the IP tag associated with the public IP address.
      properties:
        ipTagType:
          type: string
          description: 'IP tag type. Example: FirstPartyUsage.'
        tag:
          type: string
          description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
    VirtualMachineScaleSetListResult:
      type: object
      description: The response of a VirtualMachineScaleSet list operation.
      properties:
        value:
          type: array
          description: The VirtualMachineScaleSet items on this page
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSet'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VirtualMachineScaleSetManagedDiskParameters:
      type: object
      description: Describes the parameters of a ScaleSet managed disk.
      properties:
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountTypes'
          description: |-
            Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
            only be used with data disks, it cannot be used with OS Disk.
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: |-
            Specifies the customer managed disk encryption set resource id for the managed
            disk.
        securityProfile:
          $ref: '#/components/schemas/VMDiskSecurityProfile'
          description: Specifies the security profile for the managed disk.
    VirtualMachineScaleSetNetworkConfiguration:
      description: Describes a virtual machine scale set network profile's network configurations.
      required:
        - name
      properties:
        name:
          type: string
          description: The network configuration name.
        properties:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationProperties'
          description: Describes a virtual machine scale set network profile's IP configuration.
      type: object
    VirtualMachineScaleSetNetworkConfigurationDnsSettings:
      type: object
      description: Describes a virtual machines scale sets network configuration's DNS settings.
      properties:
        dnsServers:
          type: array
          description: List of DNS servers IP addresses
          items:
            type: string
    VirtualMachineScaleSetNetworkConfigurationProperties:
      type: object
      description: Describes a virtual machine scale set network profile's IP configuration.
      properties:
        primary:
          type: boolean
          description: |-
            Specifies the primary network interface in case the virtual machine has more
            than 1 network interface.
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        disableTcpStateTracking:
          type: boolean
          description: Specifies whether the network interface is disabled for tcp state tracking.
        enableFpga:
          type: boolean
          description: Specifies whether the network interface is FPGA networking-enabled.
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The network security group.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationDnsSettings'
          description: The dns settings to be applied on the network interfaces.
        ipConfigurations:
          type: array
          description: Specifies the IP configurations of the network interface.
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetIPConfiguration'
          x-ms-identifiers:
            - name
        enableIPForwarding:
          type: boolean
          description: Whether IP forwarding enabled on this NIC.
        deleteOption:
          $ref: '#/components/schemas/DeleteOptions'
          description: Specify what happens to the network interface when the VM is deleted
        auxiliaryMode:
          $ref: '#/components/schemas/NetworkInterfaceAuxiliaryMode'
          description: |-
            Specifies whether the Auxiliary mode is enabled for the Network Interface
            resource.
        auxiliarySku:
          $ref: '#/components/schemas/NetworkInterfaceAuxiliarySku'
          description: |-
            Specifies whether the Auxiliary sku is enabled for the Network Interface
            resource.
      required:
        - ipConfigurations
    VirtualMachineScaleSetNetworkProfile:
      type: object
      description: Describes a virtual machine scale set network profile.
      properties:
        healthProbe:
          $ref: '#/components/schemas/ApiEntityReference'
          description: |-
            A reference to a load balancer probe used to determine the health of an
            instance in the virtual machine scale set. The reference will be in the form:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
        networkInterfaceConfigurations:
          type: array
          description: The list of network configurations.
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfiguration'
          x-ms-identifiers: []
        networkApiVersion:
          $ref: '#/components/schemas/NetworkApiVersion'
          description: |-
            specifies the Microsoft.Network API version used when creating networking
            resources in the Network Interface Configurations for Virtual Machine Scale Set
            with orchestration mode 'Flexible'
    VirtualMachineScaleSetOSDisk:
      type: object
      description: Describes a virtual machine scale set operating system disk.
      properties:
        name:
          type: string
          description: The disk name.
        caching:
          $ref: '#/components/schemas/CachingTypes'
          description: |-
            Specifies the caching requirements. Possible values are: **None,**
            **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
            storage. ReadOnly for Premium storage.**
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/DiskCreateOptionTypes'
          description: |-
            Specifies how the virtual machines in the scale set should be created. The only
            allowed value is: **FromImage.** This value is used when you are using an image
            to create the virtual machine. If you are using a platform image, you also use
            the imageReference element described above. If you are using a marketplace
            image, you  also use the plan element previously described.
        diffDiskSettings:
          $ref: '#/components/schemas/DiffDiskSettings'
          description: |-
            Specifies the ephemeral disk Settings for the operating system disk used by the
            virtual machine scale set.
        diskSizeGB:
          type: integer
          format: int32
          description: |-
            Specifies the size of an empty data disk in gigabytes. This element can be used
            to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
            is the number of bytes x 1024^3 for the disk and the value cannot
            be larger than 1023.
        osType:
          $ref: '#/components/schemas/OperatingSystemTypes'
          description: |-
            This property allows you to specify the type of the OS that is included in the
            disk if creating a VM from user-image or a specialized VHD. Possible values
            are: **Windows,** **Linux.**
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: Specifies information about the unmanaged user image to base the scale set on.
        vhdContainers:
          type: array
          description: |-
            Specifies the container urls that are used to store operating system disks for
            the scale set.
          items:
            type: string
        managedDisk:
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
          description: The managed disk parameters.
        deleteOption:
          $ref: '#/components/schemas/DiskDeleteOptionTypes'
          description: |-
            Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
            (This feature is available for VMSS with Flexible OrchestrationMode only).
            <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
            disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
            is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
            default value is set to **Delete**. For an Ephemeral OS Disk, the default value
            is set to **Delete**. User cannot change the delete option for Ephemeral OS
            Disk.
      required:
        - createOption
    VirtualMachineScaleSetOSProfile:
      type: object
      description: Describes a virtual machine scale set OS profile.
      properties:
        computerNamePrefix:
          type: string
          description: |-
            Specifies the computer name prefix for all of the virtual machines in the scale
            set. Computer name prefixes must be 1 to 15 characters long.
        adminUsername:
          type: string
          description: |-
            Specifies the name of the administrator account. <br><br> **Windows-only
            restriction:** Cannot end in "." <br><br> **Disallowed values:**
            "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
            "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
            "console", "david", "guest", "john", "owner", "root", "server", "sql",
            "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
            <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
            (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
        adminPassword:
          type: string
          format: password
          description: |-
            Specifies the password of the administrator account. <br><br> **Minimum-length
            (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters
            <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length
            (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4
            conditions below need to be fulfilled <br> Has lower characters <br>Has upper
            characters <br> Has a digit <br> Has a special character (Regex match [\W_])
            <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd",
            "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1",
            "Password22", "iloveyou!" <br><br> For resetting the password, see [How to
            reset the Remote Desktop service or its login password in a Windows
            VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
            <br><br> For resetting root password, see [Manage users, SSH, and check or
            repair disks on Azure Linux VMs using the VMAccess
            Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
        customData:
          type: string
          format: password
          description: |-
            Specifies a base-64 encoded string of custom data. The base-64 encoded string
            is decoded to a binary array that is saved as a file on the Virtual Machine.
            The maximum length of the binary array is 65535 bytes. For using cloud-init for
            your VM, see [Using cloud-init to customize a Linux VM during
            creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: Specifies Windows operating system settings on the virtual machine.
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: |-
            Specifies the Linux operating system settings on the virtual machine. For a
            list of supported Linux distributions, see [Linux on Azure-Endorsed
            Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        secrets:
          type: array
          description: |-
            Specifies set of certificates that should be installed onto the virtual
            machines in the scale set. To install certificates on a virtual machine it is
            recommended to use the [Azure Key Vault virtual machine extension for
            Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
            or the [Azure Key Vault virtual machine extension for
            Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
        allowExtensionOperations:
          type: boolean
          description: |-
            Specifies whether extension operations should be allowed on the virtual machine
            scale set. This may only be set to False when no extensions are present on the
            virtual machine scale set.
        requireGuestProvisionSignal:
          type: boolean
          description: Optional property which must either be set to True or omitted.
    VirtualMachineScaleSetPublicIPAddressConfiguration:
      description: |-
        Describes a virtual machines scale set IP Configuration's PublicIPAddress
        configuration
      required:
        - name
      properties:
        name:
          type: string
          description: The publicIP address configuration name.
        properties:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationProperties'
          description: |-
            Describes a virtual machines scale set IP Configuration's PublicIPAddress
            configuration
        sku:
          $ref: '#/components/schemas/PublicIPAddressSku'
          description: |-
            Describes the public IP Sku. It can only be set with OrchestrationMode as
            Flexible.
      type: object
    VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings:
      type: object
      description: Describes a virtual machines scale sets network configuration's DNS settings.
      properties:
        domainNameLabel:
          type: string
          description: |-
            The Domain name label.The concatenation of the domain name label and vm index
            will be the domain name labels of the PublicIPAddress resources that will be
            created
        domainNameLabelScope:
          $ref: '#/components/schemas/DomainNameLabelScopeTypes'
          description: |-
            The Domain name label scope.The concatenation of the hashed domain name label
            that generated according to the policy from domain name label scope and vm
            index will be the domain name labels of the PublicIPAddress resources that will
            be created
      required:
        - domainNameLabel
    VirtualMachineScaleSetPublicIPAddressConfigurationProperties:
      type: object
      description: |-
        Describes a virtual machines scale set IP Configuration's PublicIPAddress
        configuration
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings'
          description: The dns settings to be applied on the publicIP addresses .
        ipTags:
          type: array
          description: The list of IP tags associated with the public IP address.
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetIpTag'
          x-ms-identifiers: []
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The PublicIPPrefix from which to allocate publicIP addresses.
        publicIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: |-
            Available from Api-Version 2019-07-01 onwards, it represents whether the
            specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
            values are: 'IPv4' and 'IPv6'.
        deleteOption:
          $ref: '#/components/schemas/DeleteOptions'
          description: Specify what happens to the public IP when the VM is deleted
    VirtualMachineScaleSetStorageProfile:
      type: object
      description: Describes a virtual machine scale set storage profile.
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: |-
            Specifies information about the image to use. You can specify information about
            platform images, marketplace images, or virtual machine images. This element is
            required when you want to use a platform image, marketplace image, or virtual
            machine image, but is not used in other creation operations.
        osDisk:
          $ref: '#/components/schemas/VirtualMachineScaleSetOSDisk'
          description: |-
            Specifies information about the operating system disk used by the virtual
            machines in the scale set. For more information about disks, see [About disks
            and VHDs for Azure virtual
            machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        dataDisks:
          type: array
          description: |-
            Specifies the parameters that are used to add data disks to the virtual
            machines in the scale set. For more information about disks, see [About disks
            and VHDs for Azure virtual
            machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetDataDisk'
          x-ms-identifiers:
            - name
            - lun
        diskControllerType:
          $ref: '#/components/schemas/DiskControllerTypes'
          description: 'Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01'
    VmSizeProfile:
      type: object
      description: Specifications about a VM Size. This will also contain the corresponding rank and weight in future.
      properties:
        name:
          type: string
          description: The Sku name (e.g. 'Standard_DS1_v2')
        rank:
          type: integer
          format: int32
          description: |-
            The rank of the VM size. This is used with 'RegularPriorityAllocationStrategy.Prioritized'
            The lower the number, the higher the priority. Starting with 0.
          minimum: 0
          maximum: 65535
      required:
        - name
    WinRMConfiguration:
      type: object
      description: Describes Windows Remote Management configuration of the VM
      properties:
        listeners:
          type: array
          description: The list of Windows Remote Management listeners
          items:
            $ref: '#/components/schemas/WinRMListener'
          x-ms-identifiers: []
    WinRMListener:
      type: object
      description: Describes Protocol and thumbprint of Windows Remote Management listener
      properties:
        protocol:
          $ref: '#/components/schemas/ProtocolTypes'
          description: |-
            Specifies the protocol of WinRM listener. Possible values are: **http,**
            **https.**
        certificateUrl:
          type: string
          format: uri
          description: |-
            This is the URL of a certificate that has been uploaded to Key Vault as a
            secret. For adding a secret to the Key Vault, see [Add a key or secret to the
            key
            vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).
            In this case, your certificate needs to be the Base64 encoding of the following
            JSON Object which is encoded in UTF-8: <br><br> {<br>
            "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
            "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
            machine it is recommended to use the [Azure Key Vault virtual machine extension
            for
            Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
            or the [Azure Key Vault virtual machine extension for
            Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
    WindowsConfiguration:
      type: object
      description: Specifies Windows operating system settings on the virtual machine.
      properties:
        provisionVMAgent:
          type: boolean
          description: |-
            Indicates whether virtual machine agent should be provisioned on the virtual
            machine. When this property is not specified in the request body, it is set to
            true by default. This will ensure that VM Agent is installed on the VM so that
            extensions can be added to the VM later.
        enableAutomaticUpdates:
          type: boolean
          description: |-
            Indicates whether Automatic Updates is enabled for the Windows virtual machine.
            Default value is true. For virtual machine scale sets, this property can be
            updated and updates will take effect on OS reprovisioning.
        timeZone:
          type: string
          description: |-
            Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
            Possible values can be
            [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
            value from time zones returned by
            [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        additionalUnattendContent:
          type: array
          description: |-
            Specifies additional base-64 encoded XML formatted information that can be
            included in the Unattend.xml file, which is used by Windows Setup.
          items:
            $ref: '#/components/schemas/AdditionalUnattendContent'
          x-ms-identifiers: []
        patchSettings:
          $ref: '#/components/schemas/PatchSettings'
          description: '[Preview Feature] Specifies settings related to VM Guest Patching on Windows.'
        winRM:
          $ref: '#/components/schemas/WinRMConfiguration'
          description: |-
            Specifies the Windows Remote Management listeners. This enables remote Windows
            PowerShell.
        enableVMAgentPlatformUpdates:
          type: boolean
          description: |-
            Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
            machine. Default value is false.
    WindowsPatchAssessmentMode:
      type: string
      description: Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.
      enum:
        - ImageDefault
        - AutomaticByPlatform
      x-ms-enum:
        name: WindowsPatchAssessmentMode
        modelAsString: true
        values:
          - name: ImageDefault
            value: ImageDefault
            description: You control the timing of patch assessments on a virtual machine.
          - name: AutomaticByPlatform
            value: AutomaticByPlatform
            description: The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
    WindowsVMGuestPatchAutomaticByPlatformRebootSetting:
      type: string
      description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
      enum:
        - Unknown
        - IfRequired
        - Never
        - Always
      x-ms-enum:
        name: WindowsVMGuestPatchAutomaticByPlatformRebootSetting
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown Reboot setting
          - name: IfRequired
            value: IfRequired
            description: IfRequired Reboot setting
          - name: Never
            value: Never
            description: Never Reboot setting
          - name: Always
            value: Always
            description: Always Reboot setting
    WindowsVMGuestPatchAutomaticByPlatformSettings:
      type: object
      description: |-
        Specifies additional settings to be applied when patch mode AutomaticByPlatform
        is selected in Windows patch settings.
      properties:
        rebootSetting:
          $ref: '#/components/schemas/WindowsVMGuestPatchAutomaticByPlatformRebootSetting'
          description: |-
            Specifies the reboot setting for all AutomaticByPlatform patch installation
            operations.
        bypassPlatformSafetyChecksOnUserSchedule:
          type: boolean
          description: Enables customer to schedule patching without accidental upgrades
    WindowsVMGuestPatchMode:
      type: string
      description: |-
        Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
        machines associated to virtual machine scale set with OrchestrationMode as
        Flexible.
      enum:
        - Manual
        - AutomaticByOS
        - AutomaticByPlatform
      x-ms-enum:
        name: WindowsVMGuestPatchMode
        modelAsString: true
        values:
          - name: Manual
            value: Manual
            description: |-
              You control the application of patches to a virtual machine.
              You do this by applying patches manually inside the VM. In this mode,
              automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates
              must be false
          - name: AutomaticByOS
            value: AutomaticByOS
            description: |-
              The virtual machine will automatically be updated by the OS.
              The property WindowsConfiguration.enableAutomaticUpdates must be true.
          - name: AutomaticByPlatform
            value: AutomaticByPlatform
            description: |-
              The virtual machine will automatically updated by the platform. The properties
              provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.azure_fleet.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureFleet~1operations?api-version=2024-05-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    fleets:
      id: azure.azure_fleet.fleets
      name: fleets
      title: fleets
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureFleet~1fleets?api-version=2024-05-01-preview/get'
            operationId: Fleets_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FleetListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets?api-version=2024-05-01-preview/get'
            operationId: Fleets_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FleetListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}?api-version=2024-05-01-preview/get'
            operationId: Fleets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Fleet
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}?api-version=2024-05-01-preview/put'
            operationId: Fleets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Fleet
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}?api-version=2024-05-01-preview/patch'
            operationId: Fleets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Fleet
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}?api-version=2024-05-01-preview/delete'
            operationId: Fleets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/get'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/delete'
    fleets_virtual_machine_scale_sets:
      id: azure.azure_fleet.fleets_virtual_machine_scale_sets
      name: fleets_virtual_machine_scale_sets
      title: fleets_virtual_machine_scale_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{name}~1virtualMachineScaleSets?api-version=2024-05-01-preview/get'
            operationId: FleetsVirtualMachineScaleSets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachineScaleSetListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fleets_virtual_machine_scale_sets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_fleets:
      id: azure.azure_fleet.vw_fleets
      name: vw_fleets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              zones as zones,
              identity as identity,
              plan as plan,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.spotPriorityProfile') as "spot_priority_profile",
              JSON_EXTRACT(properties, '$.regularPriorityProfile') as "regular_priority_profile",
              JSON_EXTRACT(properties, '$.vmSizesProfile') as "vm_sizes_profile",
              JSON_EXTRACT(properties, '$.computeProfile') as "compute_profile",
              JSON_EXTRACT(properties, '$.timeCreated') as "time_created",
              JSON_EXTRACT(properties, '$.uniqueId') as "unique_id",
              subscriptionId,
              resourceGroupName,
              fleetName
              FROM azure.azure_fleet.fleets
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                zones as zones,
                identity as identity,
                plan as plan,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.spotPriorityProfile') as "spot_priority_profile",
                json_extract_path_text(properties, '$.regularPriorityProfile') as "regular_priority_profile",
                json_extract_path_text(properties, '$.vmSizesProfile') as "vm_sizes_profile",
                json_extract_path_text(properties, '$.computeProfile') as "compute_profile",
                json_extract_path_text(properties, '$.timeCreated') as "time_created",
                json_extract_path_text(properties, '$.uniqueId') as "unique_id",
                subscriptionId,
                resourceGroupName,
                fleetName
                FROM azure.azure_fleet.fleets
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.AzureFleet/operations?api-version=2024-05-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureFleet/fleets?api-version=2024-05-01-preview:
    get:
      operationId: Fleets_ListBySubscription
      tags:
        - Fleets
      description: List Fleet resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets?api-version=2024-05-01-preview:
    get:
      operationId: Fleets_ListByResourceGroup
      tags:
        - Fleets
      description: List Fleet resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{fleetName}?api-version=2024-05-01-preview:
    get:
      operationId: Fleets_Get
      tags:
        - Fleets
      description: Get a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w\-._]{0,79}(?<![-.])$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Fleets_CreateOrUpdate
      tags:
        - Fleets
      description: Create a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w\-._]{0,79}(?<![-.])$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      responses:
        '200':
          description: Resource 'Fleet' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '201':
          description: Resource 'Fleet' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Fleets_Update
      tags:
        - Fleets
      description: Update a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w\-._]{0,79}(?<![-.])$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FleetUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Fleets_Delete
      tags:
        - Fleets
      description: Delete a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w\-._]{0,79}(?<![-.])$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{name}/virtualMachineScaleSets?api-version=2024-05-01-preview:
    get:
      operationId: FleetsVirtualMachineScaleSets_List
      tags:
        - Fleets
      description: List VirtualMachineScaleSet resources by Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w\-._]{0,79}(?<![-.])$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Fleets_ListVirtualMachineScaleSets
