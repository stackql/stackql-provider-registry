openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Data Box Edge and Azure Data Box Gateway
  description: Azure Data Box Edge and Azure Data Box Gateway are on-premises storage solutions that allow you to send the data over the network to Azure. Data Box Gateway is a virtual device based on a virtual machine provisioned in your virtualized environment or hypervisor. Data Box Edge uses a physical device supplied by Microsoft to accelerate the secure data transfer. Data Box Edge has all the capabilities of Data Box Gateway and is additionally equipped with AI-enabled edge computing capabilities that help analyze, process, or filter data as it moves to Azure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    apiVersionParameter:
      name: api-version
      in: query
      description: The API version.
      required: false
      schema:
        type: string
    locationParameter:
      name: location
      in: path
      description: The location of the resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The resource group name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The subscription ID.
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Addon:
      description: Role Addon
      required:
        - kind
      discriminator:
        propertyName: kind
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: Addon type.
          enum:
            - IotEdge
            - ArcForKubernetes
          type: string
          x-ms-enum:
            name: AddonType
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Addon
          readOnly: true
      type: object
    AddonList:
      description: Collection of all the Role addon on the Azure Stack Edge device.
      type: object
      properties:
        value:
          description: The Value.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Addon'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    Address:
      description: The shipping address of the customer.
      required:
        - country
      type: object
      properties:
        addressLine1:
          description: The address line1.
          type: string
        addressLine2:
          description: The address line2.
          type: string
        addressLine3:
          description: The address line3.
          type: string
        postalCode:
          description: The postal code.
          type: string
        city:
          description: The city name.
          type: string
        state:
          description: The state name.
          type: string
        country:
          description: The country name.
          type: string
    Alert:
      description: Alert on the data box edge/gateway device.
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/AlertProperties'
          description: Properties of alert.
          readOnly: true
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Alert
          readOnly: true
      type: object
    AlertErrorDetails:
      description: Error details for the alert.
      type: object
      properties:
        errorCode:
          description: Error code.
          type: string
          readOnly: true
        errorMessage:
          description: Error Message.
          type: string
          readOnly: true
        occurrences:
          format: int32
          description: Number of occurrences.
          type: integer
          readOnly: true
    AlertList:
      description: Collection of alerts.
      type: object
      properties:
        value:
          description: The value.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    AlertProperties:
      description: Properties of alert.
      type: object
      properties:
        title:
          description: Alert title.
          type: string
          readOnly: true
        alertType:
          description: Alert type.
          type: string
          readOnly: true
        appearedAtDateTime:
          format: date-time
          description: UTC time when the alert appeared.
          type: string
          readOnly: true
        recommendation:
          description: Alert recommendation.
          type: string
          readOnly: true
        severity:
          description: Severity of the alert.
          enum:
            - Informational
            - Warning
            - Critical
          type: string
          readOnly: true
          x-ms-enum:
            name: AlertSeverity
            modelAsString: true
        errorDetails:
          $ref: '#/components/schemas/AlertErrorDetails'
          description: Error details of the alert.
          readOnly: true
        detailedInformation:
          description: Alert details.
          type: object
          additionalProperties:
            type: string
          readOnly: true
    ArcAddon:
      description: Arc Addon.
      required:
        - properties
        - kind
      x-ms-discriminator-value: ArcForKubernetes
      properties:
        kind:
          description: Addon type.
          enum:
            - IotEdge
            - ArcForKubernetes
          type: string
          x-ms-enum:
            name: AddonType
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Addon
          readOnly: true
        properties:
          $ref: '#/components/schemas/ArcAddonProperties'
          description: Properties specific to Arc addon.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    ArcAddonProperties:
      description: Arc addon properties.
      required:
        - subscriptionId
        - resourceGroupName
        - resourceName
        - resourceLocation
      type: object
      properties:
        subscriptionId:
          description: Arc resource subscription Id
          type: string
        resourceGroupName:
          description: Arc resource group name
          type: string
        resourceName:
          description: Arc resource Name
          type: string
        resourceLocation:
          description: Arc resource location
          type: string
        version:
          description: Arc resource version
          type: string
          readOnly: true
        hostPlatform:
          description: Host OS supported by the Arc addon.
          enum:
            - Windows
            - Linux
          type: string
          readOnly: true
          x-ms-enum:
            name: PlatformType
            modelAsString: true
        hostPlatformType:
          description: Platform where the runtime is hosted.
          enum:
            - KubernetesCluster
            - LinuxVM
          type: string
          readOnly: true
          x-ms-enum:
            name: HostPlatformType
            modelAsString: true
        provisioningState:
          description: Addon Provisioning State
          enum:
            - Invalid
            - Creating
            - Created
            - Updating
            - Reconfiguring
            - Failed
            - Deleting
          type: string
          readOnly: true
          x-ms-enum:
            name: AddonState
            modelAsString: true
    ARMBaseModel:
      description: Represents the base class for all object models.
      type: object
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      x-ms-azure-resource: true
    AsymmetricEncryptedSecret:
      description: Represent the secrets intended for encryption with asymmetric key pair.
      required:
        - value
        - encryptionAlgorithm
      type: object
      properties:
        value:
          description: The value of the secret.
          type: string
        encryptionCertThumbprint:
          description: Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
          x-ms-secret: true
          type: string
        encryptionAlgorithm:
          description: The algorithm used to encrypt "Value".
          enum:
            - None
            - AES256
            - RSAES_PKCS1_v_1_5
          type: string
          x-ms-enum:
            name: EncryptionAlgorithm
            modelAsString: true
    Authentication:
      description: Authentication mechanism for IoT devices.
      type: object
      properties:
        symmetricKey:
          $ref: '#/components/schemas/SymmetricKey'
          description: Symmetric key for authentication.
    AzureContainerInfo:
      description: Azure container mapping of the endpoint.
      required:
        - storageAccountCredentialId
        - containerName
        - dataFormat
      type: object
      properties:
        storageAccountCredentialId:
          description: ID of the storage account credential used to access storage.
          type: string
        containerName:
          description: Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
          type: string
        dataFormat:
          description: Storage format used for the file represented by the share.
          enum:
            - BlockBlob
            - PageBlob
            - AzureFile
          type: string
          x-ms-enum:
            name: AzureContainerDataFormat
            modelAsString: true
    BandwidthSchedule:
      description: The bandwidth schedule details.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/BandwidthScheduleProperties'
          description: The properties of the bandwidth schedule.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of BandwidthSchedule
          readOnly: true
      type: object
    BandwidthScheduleProperties:
      description: The properties of the bandwidth schedule.
      required:
        - start
        - stop
        - rateInMbps
        - days
      type: object
      properties:
        start:
          description: The start time of the schedule in UTC.
          type: string
        stop:
          description: The stop time of the schedule in UTC.
          type: string
        rateInMbps:
          format: int32
          description: The bandwidth rate in Mbps.
          type: integer
        days:
          description: The days of the week when this schedule is applicable.
          uniqueItems: false
          type: array
          items:
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            type: string
            x-ms-enum:
              name: DayOfWeek
              modelAsString: true
            x-ms-identifiers: []
    BandwidthSchedulesList:
      description: The collection of bandwidth schedules.
      type: object
      properties:
        value:
          description: The list of bandwidth schedules.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/BandwidthSchedule'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    ClientAccessRight:
      description: The mapping between a particular client IP and the type of access client has on the NFS share.
      required:
        - client
        - accessPermission
      type: object
      properties:
        client:
          description: IP of the client.
          type: string
        accessPermission:
          description: Type of access to be allowed for the client.
          enum:
            - NoAccess
            - ReadOnly
            - ReadWrite
          type: string
          x-ms-enum:
            name: ClientPermissionType
            modelAsString: true
    CloudEdgeManagementRole:
      description: "The preview of Virtual Machine Cloud Management from the Azure supports deploying and managing VMs on your Azure Stack Edge device from Azure Portal. \r\nFor more information, refer to: https://docs.microsoft.com/en-us/azure/databox-online/azure-stack-edge-gpu-virtual-machine-overview\r\nBy using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/ for additional details."
      required:
        - kind
      x-ms-discriminator-value: CloudEdgeManagement
      properties:
        kind:
          description: Role type.
          enum:
            - IOT
            - ASA
            - Functions
            - Cognitive
            - MEC
            - CloudEdgeManagement
            - Kubernetes
          type: string
          x-ms-enum:
            name: RoleTypes
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Role
          readOnly: true
        properties:
          $ref: '#/components/schemas/CloudEdgeManagementRoleProperties'
          description: Properties specific to CloudEdgeManagementRole role.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    CloudEdgeManagementRoleProperties:
      description: CloudEdgeManagement Role properties.
      required:
        - roleStatus
      type: object
      properties:
        localManagementStatus:
          description: Local Edge Management Status
          enum:
            - Enabled
            - Disabled
          type: string
          readOnly: true
          x-ms-enum:
            name: RoleStatus
            modelAsString: true
        edgeProfile:
          $ref: '#/components/schemas/EdgeProfile'
          description: Edge Profile of the resource
          readOnly: true
        roleStatus:
          description: Role status.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: RoleStatus
            modelAsString: true
    CloudError:
      description: An error response from the service.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: The error details.
      x-ms-external: true
    CloudErrorBody:
      description: An error response from the service.
      type: object
      properties:
        code:
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
          type: string
        message:
          description: A message describing the error, intended to be suitable for display in a user interface.
          type: string
        details:
          description: A list of additional details about the error.
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers: []
      x-ms-external: true
    ClusterCapacityViewData:
      description: Cluster Compute Data.
      type: object
      properties:
        fqdn:
          description: The FQDN of the cluster.
          type: string
        gpuCapacity:
          $ref: '#/components/schemas/ClusterGpuCapacity'
          description: The cluster's GPU capacity.
        memoryCapacity:
          $ref: '#/components/schemas/ClusterMemoryCapacity'
          description: The cluster's memory capacity.
        lastRefreshedTime:
          format: date-time
          description: The last time at which the ClusterCapacityViewData was set.
          type: string
        totalProvisionedNonHpnCores:
          format: int64
          description: 'The total # of vCPUs provisioned by non-HPN VM per appliance.'
          type: integer
    ClusterGpuCapacity:
      description: Cluster GPU Data.
      type: object
      properties:
        gpuType:
          description: The cluster GPU Type.
          type: string
        gpuUsedUnitsCount:
          format: int32
          description: The used GPU units count in the cluster.
          type: integer
        gpuFreeUnitsCount:
          format: int32
          description: The free GPU units count in the cluster.
          type: integer
        gpuReservedForFailoverUnitsCount:
          format: int32
          description: The GPU units count reserved for failover in the cluster.
          type: integer
        gpuTotalUnitsCount:
          format: int32
          description: The total GPU units count in the cluster.
          type: integer
    ClusterMemoryCapacity:
      description: NodeCapacityInfo defines the required information to determine the placement of a VM.
      type: object
      properties:
        clusterFreeMemoryMb:
          format: double
          description: The free memory in the cluster in MB.
          type: number
        clusterUsedMemoryMb:
          format: double
          description: The used memory in the cluster in MB.
          type: number
        clusterFailoverMemoryMb:
          format: double
          description: The failover memory in the cluster in MB.
          type: number
        clusterFragmentationMemoryMb:
          format: double
          description: The fragmentation memory in the cluster in MB.
          type: number
        clusterHypervReserveMemoryMb:
          format: double
          description: The memory reserved for Hyper-V in the cluster in MB.
          type: number
        clusterInfraVmMemoryMb:
          format: double
          description: The memory of the Infra VM in the cluster in MB.
          type: number
        clusterTotalMemoryMb:
          format: double
          description: The total memory in the cluster in MB.
          type: number
        clusterNonFailoverVmMb:
          format: double
          description: The non-failover memory in the cluster in MB.
          type: number
        clusterMemoryUsedByVmsMb:
          format: double
          description: The memory used by VMs in the cluster in MB.
          type: number
    ClusterStorageViewData:
      description: Cluster Storage Data.
      type: object
      properties:
        clusterTotalStorageMb:
          format: double
          description: Total storage on the cluster in MB.
          type: number
        clusterFreeStorageMb:
          format: double
          description: The available or free storage on the cluster in MB.
          type: number
    CniConfig:
      description: Cni configuration
      type: object
      properties:
        type:
          description: Cni type
          type: string
          readOnly: true
        version:
          description: Cni version
          type: string
          readOnly: true
        podSubnet:
          description: Pod Subnet
          type: string
          readOnly: true
        serviceSubnet:
          description: Service subnet
          type: string
          readOnly: true
    ComputeResource:
      description: Compute infrastructure Resource
      required:
        - processorCount
        - memoryInGB
      type: object
      properties:
        processorCount:
          format: int32
          description: Processor count
          type: integer
        memoryInGB:
          format: int64
          description: Memory in GB
          type: integer
    ContactDetails:
      description: Contains all the contact details of the customer.
      required:
        - contactPerson
        - companyName
        - phone
        - emailList
      type: object
      properties:
        contactPerson:
          description: The contact person name.
          type: string
        companyName:
          description: The name of the company.
          type: string
        phone:
          description: The phone number.
          type: string
        emailList:
          description: The email list.
          uniqueItems: false
          type: array
          items:
            type: string
          x-ms-identifiers: []
    Container:
      description: Represents a container on the  Data Box Edge/Gateway device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ContainerProperties'
          description: The container properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Container
          readOnly: true
      type: object
    ContainerList:
      description: Collection of all the containers on the Data Box Edge/Gateway device.
      type: object
      properties:
        value:
          description: The list of containers.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Container'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    ContainerProperties:
      description: The container properties.
      required:
        - dataFormat
      type: object
      properties:
        containerStatus:
          description: Current status of the container.
          enum:
            - OK
            - Offline
            - Unknown
            - Updating
            - NeedsAttention
          type: string
          readOnly: true
          x-ms-enum:
            name: ContainerStatus
            modelAsString: true
        dataFormat:
          description: DataFormat for Container
          enum:
            - BlockBlob
            - PageBlob
            - AzureFile
          type: string
          x-ms-enum:
            name: AzureContainerDataFormat
            modelAsString: true
        refreshDetails:
          $ref: '#/components/schemas/RefreshDetails'
          description: Details of the refresh job on this container.
          readOnly: true
        createdDateTime:
          format: date-time
          description: The UTC time when container got created.
          type: string
          readOnly: true
    DataBoxEdgeDevice:
      description: The Data Box Edge/Gateway device.
      required:
        - location
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        location:
          description: The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU type.
        etag:
          description: The etag for the devices.
          type: string
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: Msi identity of the resource
        kind:
          description: The kind of the device.
          enum:
            - AzureDataBoxGateway
            - AzureStackEdge
            - AzureStackHub
            - AzureModularDataCentre
          type: string
          readOnly: true
          x-ms-enum:
            name: DataBoxEdgeDeviceKind
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: DataBoxEdge Resource
          readOnly: true
        properties:
          $ref: '#/components/schemas/DataBoxEdgeDeviceProperties'
          description: The properties of the Data Box Edge/Gateway device.
          x-ms-client-flatten: true
      type: object
    DataBoxEdgeDeviceExtendedInfo:
      description: The extended Info of the Data Box Edge/Gateway device.
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DataBoxEdgeDeviceExtendedInfoProperties'
          description: The extended info properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of DataBoxEdgeDevice
          readOnly: true
      type: object
    DataBoxEdgeDeviceExtendedInfoPatch:
      description: The Data Box Edge/Gateway device extended info patch.
      type: object
      properties:
        clientSecretStoreId:
          description: The Key Vault ARM Id for client secrets
          type: string
        clientSecretStoreUrl:
          description: The url to access the Client Key Vault
          type: string
        channelIntegrityKeyName:
          description: The name for Channel Integrity Key stored in the Client Key Vault
          type: string
        channelIntegrityKeyVersion:
          description: The version of Channel Integrity Key stored in the Client Key Vault
          type: string
        syncStatus:
          description: For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not be applicable.
          enum:
            - KeyVaultSynced
            - KeyVaultSyncFailed
            - KeyVaultNotConfigured
            - KeyVaultSyncPending
            - KeyVaultSyncing
            - KeyVaultNotSynced
          type: string
          x-ms-enum:
            name: KeyVaultSyncStatus
            modelAsString: true
    DataBoxEdgeDeviceExtendedInfoProperties:
      description: The properties of the Data Box Edge/Gateway device extended info.
      type: object
      properties:
        encryptionKeyThumbprint:
          description: The digital signature of encrypted certificate.
          type: string
        encryptionKey:
          description: The public part of the encryption certificate. Client uses this to encrypt any secret.
          type: string
        resourceKey:
          description: The Resource ID of the Resource.
          type: string
          readOnly: true
        clientSecretStoreId:
          description: The Key Vault ARM Id for client secrets
          type: string
        clientSecretStoreUrl:
          description: The url to access the Client Key Vault
          type: string
        channelIntegrityKeyName:
          description: The name of Channel Integrity Key stored in the Client Key Vault
          type: string
        channelIntegrityKeyVersion:
          description: The version of Channel Integrity Key stored in the Client Key Vault
          type: string
        keyVaultSyncStatus:
          description: Key vault sync status
          enum:
            - KeyVaultSynced
            - KeyVaultSyncFailed
            - KeyVaultNotConfigured
            - KeyVaultSyncPending
            - KeyVaultSyncing
            - KeyVaultNotSynced
          type: string
          x-ms-enum:
            name: KeyVaultSyncStatus
            modelAsString: true
        deviceSecrets:
          description: Device secrets, will be returned only with ODataFilter $expand=deviceSecrets
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Secret'
          readOnly: true
        clusterWitnessType:
          description: Cluster Witness Type
          enum:
            - None
            - Cloud
            - FileShare
          type: string
          readOnly: true
          x-ms-enum:
            name: ClusterWitnessType
            modelAsString: true
        fileShareWitnessLocation:
          description: The witness location of file share.
          type: string
          readOnly: true
        fileShareWitnessUsername:
          description: The username of file share.
          type: string
          readOnly: true
        cloudWitnessStorageAccountName:
          description: The Cloud Witness Storage account name.
          type: string
          readOnly: true
        cloudWitnessContainerName:
          description: The Container for cloud witness in the storage account.
          type: string
          readOnly: true
        cloudWitnessStorageEndpoint:
          description: The Azure service endpoint of the cloud witness storage account.
          type: string
          readOnly: true
    DataBoxEdgeDeviceList:
      description: The collection of Data Box Edge/Gateway devices.
      type: object
      properties:
        value:
          description: The list of Data Box Edge/Gateway devices.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/DataBoxEdgeDevice'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    DataBoxEdgeDevicePatch:
      description: The Data Box Edge/Gateway device patch.
      properties:
        tags:
          description: The tags attached to the Data Box Edge/Gateway resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: Msi identity of the resource
        properties:
          $ref: '#/components/schemas/DataBoxEdgeDevicePropertiesPatch'
          description: The properties associated with the Data Box Edge/Gateway resource
          x-ms-client-flatten: true
      type: object
    DataBoxEdgeDeviceProperties:
      description: The properties of the Data Box Edge/Gateway device.
      type: object
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
          description: DataBoxEdge Device Properties
          readOnly: true
        dataBoxEdgeDeviceStatus:
          description: The status of the Data Box Edge/Gateway device.
          enum:
            - ReadyToSetup
            - Online
            - Offline
            - NeedsAttention
            - Disconnected
            - PartiallyDisconnected
            - Maintenance
          type: string
          readOnly: true
          x-ms-enum:
            name: DataBoxEdgeDeviceStatus
            modelAsString: true
        serialNumber:
          description: The Serial Number of Data Box Edge/Gateway device.
          type: string
          readOnly: true
        description:
          description: The Description of the Data Box Edge/Gateway device.
          type: string
          readOnly: true
        modelDescription:
          description: The description of the Data Box Edge/Gateway device model.
          type: string
          readOnly: true
        deviceType:
          description: The type of the Data Box Edge/Gateway device.
          enum:
            - DataBoxEdgeDevice
          type: string
          readOnly: true
          x-ms-enum:
            name: DeviceType
            modelAsString: true
        friendlyName:
          description: The Data Box Edge/Gateway device name.
          type: string
          readOnly: true
        culture:
          description: The Data Box Edge/Gateway device culture.
          type: string
          readOnly: true
        deviceModel:
          description: The Data Box Edge/Gateway device model.
          type: string
          readOnly: true
        deviceSoftwareVersion:
          description: The Data Box Edge/Gateway device software version.
          type: string
          readOnly: true
        deviceLocalCapacity:
          format: int64
          description: The Data Box Edge/Gateway device local capacity in MB.
          type: integer
          readOnly: true
        timeZone:
          description: The Data Box Edge/Gateway device timezone.
          type: string
          readOnly: true
        deviceHcsVersion:
          description: 'The device software version number of the device (eg: 1.2.18105.6).'
          type: string
          readOnly: true
        configuredRoleTypes:
          description: Type of compute roles configured.
          uniqueItems: false
          type: array
          items:
            enum:
              - IOT
              - ASA
              - Functions
              - Cognitive
              - MEC
              - CloudEdgeManagement
              - Kubernetes
            type: string
            x-ms-enum:
              name: RoleTypes
              modelAsString: true
            x-ms-identifiers: []
          readOnly: true
        nodeCount:
          format: int32
          description: The number of nodes in the cluster.
          type: integer
          readOnly: true
        resourceMoveDetails:
          $ref: '#/components/schemas/ResourceMoveDetails'
          description: The details of the move operation on this resource.
          readOnly: true
        edgeProfile:
          $ref: '#/components/schemas/EdgeProfile'
          description: The details of Edge Profile for this resource
          readOnly: true
        dataResidency:
          $ref: '#/components/schemas/DataResidency'
          description: The details of data-residency related properties for this resource
        kubernetesWorkloadProfile:
          description: Kubernetes Workload Profile
          type: string
          readOnly: true
    DataBoxEdgeDevicePropertiesPatch:
      description: The Data Box Edge/Gateway device properties patch.
      type: object
      properties:
        edgeProfile:
          $ref: '#/components/schemas/EdgeProfilePatch'
          description: Edge Profile property of the Data Box Edge/Gateway device
    DataBoxEdgeMoveRequest:
      description: Resource Move details
      required:
        - targetResourceGroup
        - resources
      type: object
      properties:
        targetResourceGroup:
          description: Target resource group ARMId
          type: string
        resources:
          description: List of resources to be moved
          uniqueItems: false
          type: array
          items:
            type: string
          x-ms-identifiers: []
    DataBoxEdgeSku:
      description: The Sku information.
      type: object
      properties:
        resourceType:
          description: The type of the resource.
          type: string
          readOnly: true
        name:
          description: The Sku name.
          enum:
            - Gateway
            - Edge
            - TEA_1Node
            - TEA_1Node_UPS
            - TEA_1Node_Heater
            - TEA_1Node_UPS_Heater
            - TEA_4Node_Heater
            - TEA_4Node_UPS_Heater
            - TMA
            - TDC
            - TCA_Small
            - GPU
            - TCA_Large
            - EdgeP_Base
            - EdgeP_High
            - EdgePR_Base
            - EdgePR_Base_UPS
            - EP2_64_1VPU_W
            - EP2_128_1T4_Mx1_W
            - EP2_256_2T4_W
            - EdgeMR_Mini
            - RCA_Small
            - RCA_Large
            - RDC
            - Management
            - EP2_64_Mx1_W
            - EP2_128_GPU1_Mx1_W
            - EP2_256_GPU2_Mx1
            - EdgeMR_TCP
          type: string
          readOnly: true
          x-ms-enum:
            name: SkuName
            modelAsString: true
        kind:
          description: The Sku kind.
          type: string
          readOnly: true
        tier:
          description: The Sku tier.
          enum:
            - Standard
          type: string
          readOnly: true
          x-ms-enum:
            name: SkuTier
            modelAsString: true
        size:
          description: The Sku kind.
          type: string
          readOnly: true
        family:
          description: The Sku family.
          type: string
          readOnly: true
        locations:
          description: Availability of the Sku for the region.
          uniqueItems: false
          type: array
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
        apiVersions:
          description: The API versions in which Sku is available.
          uniqueItems: false
          type: array
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
        locationInfo:
          description: Availability of the Sku for the location/zone/site.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SkuLocationInfo'
          x-ms-identifiers:
            - location
          readOnly: true
        costs:
          description: The pricing info of the Sku.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SkuCost'
          x-ms-identifiers:
            - meterId
          readOnly: true
        signupOption:
          description: Sku can be signed up by customer or not.
          enum:
            - None
            - Available
          type: string
          readOnly: true
          x-ms-enum:
            name: SkuSignupOption
            modelAsString: true
        version:
          description: Availability of the Sku as preview/stable.
          enum:
            - Stable
            - Preview
          type: string
          readOnly: true
          x-ms-enum:
            name: SkuVersion
            modelAsString: true
        availability:
          description: Links to the next set of results
          enum:
            - Available
            - Unavailable
          type: string
          readOnly: true
          x-ms-enum:
            name: SkuAvailability
            modelAsString: true
        shipmentTypes:
          description: List of Shipment Types supported by this SKU
          uniqueItems: false
          type: array
          items:
            enum:
              - NotApplicable
              - ShippedToCustomer
              - SelfPickup
            type: string
            x-ms-enum:
              name: ShipmentType
              modelAsString: true
          readOnly: true
          x-ms-identifiers: []
        capabilities:
          description: The capability info of the SKU.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SkuCapability'
          x-ms-identifiers:
            - name
          readOnly: true
    DataBoxEdgeSkuList:
      description: List of SKU Information objects.
      type: object
      properties:
        value:
          description: List of ResourceType Sku
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/DataBoxEdgeSku'
          x-ms-identifiers:
            - name
            - resourceType
          readOnly: true
        nextLink:
          description: Links to the next set of results
          type: string
          readOnly: true
    DataResidency:
      description: Wraps data-residency related information for edge-resource and this should be used with ARM layer.
      type: object
      properties:
        type:
          description: DataResidencyType enum
          enum:
            - GeoZoneReplication
            - ZoneReplication
          type: string
          x-ms-enum:
            name: DataResidencyType
            modelAsString: true
    DCAccessCode:
      description: DC Access code in the case of Self Managed Shipping.
      properties:
        properties:
          $ref: '#/components/schemas/DCAccessCodeProperties'
          description: DCAccessCode properties.
          x-ms-client-flatten: true
      type: object
    DCAccessCodeProperties:
      description: DCAccessCode Properties.
      type: object
      properties:
        authCode:
          description: DCAccess Code for the Self Managed shipment.
          type: string
    DeviceCapacityInfo:
      description: Object for Capturing DeviceCapacityInfo
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DeviceCapacityInfoProperties'
          description: The device capacity properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to device capacity info.
          readOnly: true
      type: object
    DeviceCapacityInfoProperties:
      description: The properties of Device Capacity Info
      type: object
      properties:
        timeStamp:
          format: date-time
          description: Timestamp of request in UTC
          type: string
        clusterStorageCapacityInfo:
          $ref: '#/components/schemas/ClusterStorageViewData'
          description: Cluster capacity data for storage resources (CSV).
        clusterComputeCapacityInfo:
          $ref: '#/components/schemas/ClusterCapacityViewData'
          description: Cluster capacity data for compute resources (Memory and GPU).
        nodeCapacityInfos:
          description: The dictionary of individual node names and node capacities in the cluster.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HostCapacity'
    DeviceCapacityRequestInfo:
      description: Object for Capturing DeviceCapacityRequestInfo
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/DeviceCapacityRequestInfoProperties'
          description: The properties of the Device Capacity Request.
          x-ms-client-flatten: true
      type: object
    DeviceCapacityRequestInfoProperties:
      description: Properties of Device Capacity Request Info containing VM's to be checked and their corresponding results.
      required:
        - vmPlacementQuery
      type: object
      properties:
        vmPlacementQuery:
          description: Array containing the sizes of the VMs for checking if its feasible to create them on the appliance.
          uniqueItems: false
          type: array
          items:
            uniqueItems: false
            type: array
            items:
              type: string
          x-ms-identifiers: []
        vmPlacementResults:
          description: Array of the VMs of the sizes in VmSizes can be provisioned on the appliance.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/VmPlacementRequestResult'
          x-ms-identifiers: []
    DiagnosticProactiveLogCollectionSettings:
      description: The diagnostic proactive log collection settings of a device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ProactiveLogCollectionSettingsProperties'
          description: Properties of the diagnostic proactive log collection settings.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of DiagnosticProactiveLogCollectionSettings
          readOnly: true
      type: object
    DiagnosticRemoteSupportSettings:
      description: The remote support settings of a device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DiagnosticRemoteSupportSettingsProperties'
          description: Properties of the remote support  settings.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Represents resource creation and updation time
          readOnly: true
      type: object
    DiagnosticRemoteSupportSettingsProperties:
      description: The properties of remote support settings.
      type: object
      properties:
        remoteSupportSettingsList:
          description: Remote support settings list according to the RemoteApplicationType
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/RemoteSupportSettings'
          x-ms-identifiers:
            - remoteApplicationType
    EdgeProfile:
      description: Details about Edge Profile for the resource
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/EdgeProfileSubscription'
          description: Edge Profile Subscription
    EdgeProfilePatch:
      description: The Data Box Edge/Gateway Edge Profile patch.
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/EdgeProfileSubscriptionPatch'
          description: The Data Box Edge/Gateway Edge Profile Subscription patch
    EdgeProfileSubscription:
      description: Subscription details for the Edge Profile
      properties:
        registrationId:
          description: Edge Subscription Registration ID
          type: string
        id:
          description: ARM ID of the subscription
          type: string
        state:
          enum:
            - Registered
            - Warned
            - Suspended
            - Deleted
            - Unregistered
          type: string
          x-ms-enum:
            name: SubscriptionState
            modelAsString: true
        registrationDate:
          type: string
        subscriptionId:
          type: string
        properties:
          $ref: '#/components/schemas/SubscriptionProperties'
          x-ms-client-flatten: true
      type: object
    EdgeProfileSubscriptionPatch:
      description: The Data Box Edge/Gateway Edge Profile Subscription patch.
      type: object
      properties:
        id:
          description: The path ID that uniquely identifies the subscription of the edge profile.
          type: string
    EtcdInfo:
      description: Etcd configuration
      type: object
      properties:
        type:
          description: Etcd type
          type: string
          readOnly: true
        version:
          description: Etcd version
          type: string
          readOnly: true
    FileEventTrigger:
      description: Trigger details.
      required:
        - properties
        - kind
      x-ms-discriminator-value: FileEvent
      properties:
        kind:
          description: Trigger Kind.
          enum:
            - FileEvent
            - PeriodicTimerEvent
          type: string
          x-ms-enum:
            name: TriggerEventType
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Trigger
          readOnly: true
        properties:
          $ref: '#/components/schemas/FileTriggerProperties'
          description: File trigger properties.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    FileSourceInfo:
      description: File source details.
      required:
        - shareId
      type: object
      properties:
        shareId:
          description: File share ID.
          type: string
    FileTriggerProperties:
      description: File trigger properties.
      required:
        - sourceInfo
        - sinkInfo
      type: object
      properties:
        sourceInfo:
          $ref: '#/components/schemas/FileSourceInfo'
          description: File event source details.
        sinkInfo:
          $ref: '#/components/schemas/RoleSinkInfo'
          description: Role sink info.
        customContextTag:
          description: A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
          maxLength: 192
          type: string
    GenerateCertResponse:
      description: Used in activation key generation flow.
      type: object
      properties:
        publicKey:
          description: "Gets or sets base64 encoded certificate raw data,\r\nthis is the public part needed to be uploaded to cert vault"
          type: string
        privateKey:
          description: "Gets or sets base64 encoded private part of the certificate,\r\nneeded to form the activation key"
          type: string
          x-ms-secret: true
        expiryTimeInUTC:
          description: Gets or sets expiry time in UTC
          type: string
    HostCapacity:
      description: Host Capacity Data.
      type: object
      properties:
        hostName:
          description: The name of the host.
          type: string
        effectiveAvailableMemoryMbOnHost:
          format: int64
          description: The available memory on the host accounting for VM placement size and any host VM reservations.
          type: integer
        availableGpuCount:
          format: int32
          description: The available amount of GPUs on the host to use after accounting for GPUS used by reservations on the host.
          type: integer
        vmUsedMemory:
          description: The VM used memory per VmId.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VmMemory'
        gpuType:
          description: The GPU type of the VM.
          type: string
        numaNodesData:
          description: The numa nodes information for Hpn VMs.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/NumaNodeData'
          x-ms-identifiers: []
    ImageRepositoryCredential:
      description: Image repository credential.
      required:
        - imageRepositoryUrl
        - userName
      type: object
      properties:
        imageRepositoryUrl:
          description: 'Image repository url (e.g.: mcr.microsoft.com).'
          type: string
        userName:
          description: Repository user name.
          type: string
        password:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: Repository user password.
    IoTAddon:
      description: IoT Addon.
      required:
        - properties
        - kind
      x-ms-discriminator-value: IotEdge
      properties:
        kind:
          description: Addon type.
          enum:
            - IotEdge
            - ArcForKubernetes
          type: string
          x-ms-enum:
            name: AddonType
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Addon
          readOnly: true
        properties:
          $ref: '#/components/schemas/IoTAddonProperties'
          description: Properties specific to IOT addon.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    IoTAddonProperties:
      description: IoT addon properties.
      required:
        - ioTDeviceDetails
        - ioTEdgeDeviceDetails
      type: object
      properties:
        ioTDeviceDetails:
          $ref: '#/components/schemas/IoTDeviceInfo'
          description: IoT device metadata to which appliance needs to be connected.
        ioTEdgeDeviceDetails:
          $ref: '#/components/schemas/IoTDeviceInfo'
          description: IoT edge device to which the IoT Addon needs to be configured.
        version:
          description: Version of IoT running on the appliance.
          type: string
          readOnly: true
        hostPlatform:
          description: Host OS supported by the IoT addon.
          enum:
            - Windows
            - Linux
          type: string
          readOnly: true
          x-ms-enum:
            name: PlatformType
            modelAsString: true
        hostPlatformType:
          description: Platform where the runtime is hosted.
          enum:
            - KubernetesCluster
            - LinuxVM
          type: string
          readOnly: true
          x-ms-enum:
            name: HostPlatformType
            modelAsString: true
        provisioningState:
          description: Addon Provisioning State
          enum:
            - Invalid
            - Creating
            - Created
            - Updating
            - Reconfiguring
            - Failed
            - Deleting
          type: string
          readOnly: true
          x-ms-enum:
            name: AddonState
            modelAsString: true
    IoTDeviceInfo:
      description: Metadata of IoT device/IoT Edge device to be configured.
      required:
        - deviceId
        - ioTHostHub
      type: object
      properties:
        deviceId:
          description: ID of the IoT device/edge device.
          type: string
        ioTHostHub:
          description: Host name for the IoT hub associated to the device.
          type: string
        ioTHostHubId:
          description: Id for the IoT hub associated to the device.
          type: string
        authentication:
          $ref: '#/components/schemas/Authentication'
          description: Encrypted IoT device/IoT edge device connection string.
    IoTEdgeAgentInfo:
      description: IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.
      required:
        - imageName
        - tag
      type: object
      properties:
        imageName:
          description: Name of the IoT edge agent image.
          type: string
        tag:
          description: Image Tag.
          type: string
        imageRepository:
          $ref: '#/components/schemas/ImageRepositoryCredential'
          description: Image repository details.
    IoTRole:
      description: Compute role.
      required:
        - kind
      x-ms-discriminator-value: IOT
      properties:
        kind:
          description: Role type.
          enum:
            - IOT
            - ASA
            - Functions
            - Cognitive
            - MEC
            - CloudEdgeManagement
            - Kubernetes
          type: string
          x-ms-enum:
            name: RoleTypes
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Role
          readOnly: true
        properties:
          $ref: '#/components/schemas/IoTRoleProperties'
          description: Properties specific to IoT role.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    IoTRoleProperties:
      description: IoT role properties.
      required:
        - hostPlatform
        - ioTDeviceDetails
        - ioTEdgeDeviceDetails
        - roleStatus
      type: object
      properties:
        hostPlatform:
          description: Host OS supported by the IoT role.
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            name: PlatformType
            modelAsString: true
        ioTDeviceDetails:
          $ref: '#/components/schemas/IoTDeviceInfo'
          description: IoT device metadata to which data box edge device needs to be connected.
        ioTEdgeDeviceDetails:
          $ref: '#/components/schemas/IoTDeviceInfo'
          description: IoT edge device to which the IoT role needs to be configured.
        shareMappings:
          description: Mount points of shares in role(s).
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MountPointMap'
          x-ms-identifiers:
            - shareId
        ioTEdgeAgentInfo:
          $ref: '#/components/schemas/IoTEdgeAgentInfo'
          description: Iot edge agent details to download the agent and bootstrap iot runtime.
        hostPlatformType:
          description: Platform where the Iot runtime is hosted.
          enum:
            - KubernetesCluster
            - LinuxVM
          type: string
          readOnly: true
          x-ms-enum:
            name: HostPlatformType
            modelAsString: true
        computeResource:
          $ref: '#/components/schemas/ComputeResource'
          description: Resource allocation
        roleStatus:
          description: Role status.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: RoleStatus
            modelAsString: true
    Ipv4Config:
      description: Details related to the IPv4 address configuration.
      type: object
      properties:
        ipAddress:
          description: The IPv4 address of the network adapter.
          type: string
          readOnly: true
        subnet:
          description: The IPv4 subnet of the network adapter.
          type: string
          readOnly: true
        gateway:
          description: The IPv4 gateway of the network adapter.
          type: string
          readOnly: true
    Ipv6Config:
      description: Details related to the IPv6 address configuration.
      type: object
      properties:
        ipAddress:
          description: The IPv6 address of the network adapter.
          type: string
          readOnly: true
        prefixLength:
          format: int32
          description: The IPv6 prefix of the network adapter.
          type: integer
          readOnly: true
        gateway:
          description: The IPv6 gateway of the network adapter.
          type: string
          readOnly: true
    Job:
      description: A device job.
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The name of the object.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        status:
          description: The current status of the job.
          enum:
            - Invalid
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Paused
            - Scheduled
          type: string
          readOnly: true
          x-ms-enum:
            name: JobStatus
            modelAsString: true
        startTime:
          format: date-time
          description: The UTC date and time at which the job started.
          type: string
          readOnly: true
        endTime:
          format: date-time
          description: The UTC date and time at which the job completed.
          type: string
          readOnly: true
        percentComplete:
          format: int32
          description: The percentage of the job that is complete.
          type: integer
          readOnly: true
        error:
          $ref: '#/components/schemas/JobErrorDetails'
          description: The error details.
          readOnly: true
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The properties of the job.
          readOnly: true
          x-ms-client-flatten: true
      type: object
    JobErrorDetails:
      description: The job error information containing the list of job errors.
      type: object
      properties:
        errorDetails:
          description: The error details.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/JobErrorItem'
          x-ms-identifiers: []
          readOnly: true
        code:
          description: The code intended for programmatic access.
          type: string
          readOnly: true
        message:
          description: The message that describes the error in detail.
          type: string
          readOnly: true
    JobErrorItem:
      description: The job error items.
      type: object
      properties:
        recommendations:
          description: The recommended actions.
          uniqueItems: false
          type: array
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
        code:
          description: The code intended for programmatic access.
          type: string
          readOnly: true
        message:
          description: The message that describes the error in detail.
          type: string
          readOnly: true
    JobProperties:
      description: The properties for the job.
      type: object
      properties:
        jobType:
          description: The type of the job.
          enum:
            - Invalid
            - ScanForUpdates
            - DownloadUpdates
            - InstallUpdates
            - RefreshShare
            - RefreshContainer
            - Backup
            - Restore
            - TriggerSupportPackage
          type: string
          readOnly: true
          x-ms-enum:
            name: JobType
            modelAsString: true
        currentStage:
          description: Current stage of the update operation.
          enum:
            - Unknown
            - Initial
            - ScanStarted
            - ScanComplete
            - ScanFailed
            - DownloadStarted
            - DownloadComplete
            - DownloadFailed
            - InstallStarted
            - InstallComplete
            - InstallFailed
            - RebootInitiated
            - Success
            - Failure
            - RescanStarted
            - RescanComplete
            - RescanFailed
          type: string
          readOnly: true
          x-ms-enum:
            name: UpdateOperationStage
            modelAsString: true
        downloadProgress:
          $ref: '#/components/schemas/UpdateDownloadProgress'
          description: The download progress.
          readOnly: true
        installProgress:
          $ref: '#/components/schemas/UpdateInstallProgress'
          description: The install progress.
          readOnly: true
        totalRefreshErrors:
          format: int32
          description: Total number of errors encountered during the refresh process.
          type: integer
          readOnly: true
        errorManifestFile:
          description: Local share/remote container relative path to the error manifest file of the refresh.
          type: string
          readOnly: true
        refreshedEntityId:
          description: ARM ID of the entity that was refreshed.
          type: string
          readOnly: true
        folder:
          description: If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if there are no subfolders.)
          type: string
    KubernetesClusterInfo:
      description: Kubernetes cluster configuration
      required:
        - version
      type: object
      properties:
        etcdInfo:
          $ref: '#/components/schemas/EtcdInfo'
          description: Etcd configuration
          readOnly: true
        nodes:
          description: Kubernetes cluster nodes
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/NodeInfo'
          x-ms-identifiers:
            - name
            - type
          readOnly: true
        version:
          description: Kubernetes cluster version
          type: string
    KubernetesIPConfiguration:
      description: Kubernetes node IP configuration
      type: object
      properties:
        port:
          description: Port of the Kubernetes node.
          type: string
          readOnly: true
        ipAddress:
          description: IP address of the Kubernetes node.
          type: string
    KubernetesRole:
      description: "The limited preview of Kubernetes Cluster Management from the Azure supports:\r\n1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device. \r\n2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure Portal. \r\n Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal, command line tools, and APIs.\r\n3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data. \r\n For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf \r\n Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4\r\n By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/"
      required:
        - kind
      x-ms-discriminator-value: Kubernetes
      properties:
        kind:
          description: Role type.
          enum:
            - IOT
            - ASA
            - Functions
            - Cognitive
            - MEC
            - CloudEdgeManagement
            - Kubernetes
          type: string
          x-ms-enum:
            name: RoleTypes
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Role
          readOnly: true
        properties:
          $ref: '#/components/schemas/KubernetesRoleProperties'
          description: Properties specific to Kubernetes role.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    KubernetesRoleCompute:
      description: Kubernetes role compute resource
      required:
        - vmProfile
      type: object
      properties:
        vmProfile:
          description: VM profile
          type: string
        memoryInBytes:
          format: int64
          description: Memory in bytes
          type: integer
          readOnly: true
        processorCount:
          format: int32
          description: Processor count
          type: integer
          readOnly: true
    KubernetesRoleNetwork:
      description: Kubernetes role network resource
      type: object
      properties:
        cniConfig:
          $ref: '#/components/schemas/CniConfig'
          description: Cni configuration
          readOnly: true
        loadBalancerConfig:
          $ref: '#/components/schemas/LoadBalancerConfig'
          description: Load balancer configuration
          readOnly: true
    KubernetesRoleProperties:
      description: Kubernetes role properties.
      required:
        - hostPlatform
        - kubernetesClusterInfo
        - kubernetesRoleResources
        - roleStatus
      type: object
      properties:
        hostPlatform:
          description: Host OS supported by the Kubernetes role.
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            name: PlatformType
            modelAsString: true
        provisioningState:
          description: State of Kubernetes deployment
          enum:
            - Invalid
            - Creating
            - Created
            - Updating
            - Reconfiguring
            - Failed
            - Deleting
          type: string
          readOnly: true
          x-ms-enum:
            name: KubernetesState
            modelAsString: true
        hostPlatformType:
          description: Platform where the runtime is hosted.
          enum:
            - KubernetesCluster
            - LinuxVM
          type: string
          readOnly: true
          x-ms-enum:
            name: HostPlatformType
            modelAsString: true
        kubernetesClusterInfo:
          $ref: '#/components/schemas/KubernetesClusterInfo'
          description: Kubernetes cluster configuration
        kubernetesRoleResources:
          $ref: '#/components/schemas/KubernetesRoleResources'
          description: Kubernetes role resources
        roleStatus:
          description: Role status.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: RoleStatus
            modelAsString: true
    KubernetesRoleResources:
      description: Kubernetes role resources
      required:
        - compute
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/KubernetesRoleStorage'
          description: Kubernetes role storage resource
        compute:
          $ref: '#/components/schemas/KubernetesRoleCompute'
          description: Kubernetes role compute resource
        network:
          $ref: '#/components/schemas/KubernetesRoleNetwork'
          description: Kubernetes role network resource
          readOnly: true
    KubernetesRoleStorage:
      description: Kubernetes role storage resource
      type: object
      properties:
        storageClasses:
          description: Kubernetes storage class info.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/KubernetesRoleStorageClassInfo'
          x-ms-identifiers:
            - name
            - type
          readOnly: true
        endpoints:
          description: Mount points of shares in role(s).
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MountPointMap'
          x-ms-identifiers:
            - shareId
    KubernetesRoleStorageClassInfo:
      description: Kubernetes storage class info.
      type: object
      properties:
        name:
          description: Storage class name.
          type: string
          readOnly: true
        type:
          description: Storage class type.
          type: string
          readOnly: true
        posixCompliant:
          description: If provisioned storage is posix compliant.
          enum:
            - Invalid
            - Enabled
            - Disabled
          type: string
          readOnly: true
          x-ms-enum:
            name: PosixComplianceStatus
            modelAsString: true
    LoadBalancerConfig:
      description: Load balancer configuration
      type: object
      properties:
        type:
          description: Load balancer type
          type: string
          readOnly: true
        version:
          description: Load balancer version
          type: string
          readOnly: true
        ipRange:
          type: array
          items:
            type: string
          description: Load balancer ipconfig
    MECRole:
      description: MEC role.
      required:
        - kind
      x-ms-discriminator-value: MEC
      properties:
        kind:
          description: Role type.
          enum:
            - IOT
            - ASA
            - Functions
            - Cognitive
            - MEC
            - CloudEdgeManagement
            - Kubernetes
          type: string
          x-ms-enum:
            name: RoleTypes
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Role
          readOnly: true
        properties:
          $ref: '#/components/schemas/MECRoleProperties'
          description: Properties specific to MEC role.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    MECRoleProperties:
      description: MEC role properties.
      required:
        - roleStatus
      type: object
      properties:
        connectionString:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: Activation key of the MEC.
        controllerEndpoint:
          description: Controller Endpoint.
          type: string
        resourceUniqueId:
          description: Unique Id of the Resource.
          type: string
        roleStatus:
          description: Role status.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: RoleStatus
            modelAsString: true
    MetricConfiguration:
      description: Metric configuration.
      required:
        - resourceId
        - counterSets
      type: object
      properties:
        resourceId:
          description: The Resource ID on which the metrics should be pushed.
          type: string
        mdmAccount:
          description: The MDM account to which the counters should be pushed.
          type: string
        metricNameSpace:
          description: The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
          type: string
        counterSets:
          description: Host name for the IoT hub associated to the device.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricCounterSet'
          x-ms-identifiers: []
    MetricCounter:
      description: The metric counter
      required:
        - name
      type: object
      properties:
        name:
          description: The counter name.
          type: string
        instance:
          description: The instance from which counter should be collected.
          type: string
        dimensionFilter:
          description: The dimension filter.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - sourceName
        additionalDimensions:
          description: The additional dimensions to be added to metric.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - sourceName
    MetricCounterSet:
      description: The metric counter set
      required:
        - counters
      type: object
      properties:
        counters:
          description: The counters that should be collected in this set.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricCounter'
          x-ms-identifiers:
            - name
    MetricDimension:
      description: The metric dimension
      required:
        - sourceType
        - sourceName
      type: object
      properties:
        sourceType:
          description: The dimension type.
          type: string
        sourceName:
          description: The dimension value.
          type: string
    MetricDimension_V1:
      description: Metric Dimension v1.
      type: object
      properties:
        name:
          description: Name of the metrics dimension.
          type: string
        displayName:
          description: Display name of the metrics dimension.
          type: string
        toBeExportedForShoebox:
          description: To be exported to shoe box.
          type: boolean
    MetricSpecification_V1:
      description: Metric specification version 1.
      type: object
      properties:
        name:
          description: Name of the metric.
          type: string
        displayName:
          description: Display name of the metric.
          type: string
        displayDescription:
          description: Description of the metric to be displayed.
          type: string
        unit:
          description: Metric units.
          enum:
            - NotSpecified
            - Percent
            - Count
            - Seconds
            - Milliseconds
            - Bytes
            - BytesPerSecond
            - CountPerSecond
          type: string
          x-ms-enum:
            name: MetricUnit
            modelAsString: true
        aggregationType:
          description: Metric aggregation type.
          enum:
            - NotSpecified
            - None
            - Average
            - Minimum
            - Maximum
            - Total
            - Count
          type: string
          x-ms-enum:
            name: MetricAggregationType
            modelAsString: true
        dimensions:
          description: Metric dimensions, other than default dimension which is resource.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension_V1'
          x-ms-identifiers:
            - name
        fillGapWithZero:
          description: Set true to fill the gaps with zero.
          type: boolean
        category:
          description: Metric category.
          enum:
            - Capacity
            - Transaction
          type: string
          x-ms-enum:
            name: MetricCategory
            modelAsString: true
        resourceIdDimensionNameOverride:
          description: Resource name override.
          type: string
        supportedTimeGrainTypes:
          description: Support granularity of metrics.
          uniqueItems: false
          type: array
          items:
            enum:
              - PT1M
              - PT5M
              - PT15M
              - PT30M
              - PT1H
              - PT6H
              - PT12H
              - PT1D
            type: string
            x-ms-enum:
              name: TimeGrain
              modelAsString: true
        supportedAggregationTypes:
          description: Support metric aggregation type.
          uniqueItems: false
          type: array
          items:
            enum:
              - NotSpecified
              - None
              - Average
              - Minimum
              - Maximum
              - Total
              - Count
            type: string
            x-ms-enum:
              name: MetricAggregationType
              modelAsString: true
    MonitoringMetricConfiguration:
      description: The metric setting details for the role
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/MonitoringMetricConfigurationProperties'
          description: The metric setting properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of MonitoringConfiguration
          readOnly: true
      type: object
    MonitoringMetricConfigurationList:
      description: Collection of metric configurations.
      type: object
      properties:
        value:
          description: The list of metric configurations.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MonitoringMetricConfiguration'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    MonitoringMetricConfigurationProperties:
      description: Metrics properties
      required:
        - metricConfigurations
      type: object
      properties:
        metricConfigurations:
          description: The metrics configuration details
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricConfiguration'
          x-ms-identifiers: []
    MountPointMap:
      description: The share mount point.
      required:
        - shareId
      type: object
      properties:
        shareId:
          description: ID of the share mounted to the role VM.
          type: string
        roleId:
          description: ID of the role to which share is mounted.
          type: string
          readOnly: true
        mountPoint:
          description: Mount point for the share.
          type: string
          readOnly: true
        mountType:
          description: Mounting type.
          enum:
            - Volume
            - HostPath
          type: string
          readOnly: true
          x-ms-enum:
            name: MountType
            modelAsString: true
        roleType:
          description: Role type.
          enum:
            - IOT
            - ASA
            - Functions
            - Cognitive
            - MEC
            - CloudEdgeManagement
            - Kubernetes
          type: string
          readOnly: true
          x-ms-enum:
            name: RoleTypes
            modelAsString: true
    NetworkAdapter:
      description: Represents the networkAdapter on a device.
      type: object
      properties:
        adapterId:
          description: Instance ID of network adapter.
          type: string
          readOnly: true
        adapterPosition:
          $ref: '#/components/schemas/NetworkAdapterPosition'
          description: Hardware position of network adapter.
          readOnly: true
        index:
          format: int32
          description: Logical index of the adapter.
          type: integer
          readOnly: true
        nodeId:
          description: Node ID of the network adapter.
          type: string
          readOnly: true
        networkAdapterName:
          description: Network adapter name.
          type: string
          readOnly: true
        label:
          description: Hardware label for the adapter.
          type: string
          readOnly: true
        macAddress:
          description: MAC address.
          type: string
          readOnly: true
        linkSpeed:
          format: int64
          description: Link speed.
          type: integer
          readOnly: true
        status:
          description: Value indicating whether this adapter is valid.
          enum:
            - Inactive
            - Active
          type: string
          readOnly: true
          x-ms-enum:
            name: NetworkAdapterStatus
            modelAsString: true
        rdmaStatus:
          description: Value indicating whether this adapter is RDMA capable.
          enum:
            - Incapable
            - Capable
          type: string
          x-ms-enum:
            name: NetworkAdapterRDMAStatus
            modelAsString: true
        dhcpStatus:
          description: Value indicating whether this adapter has DHCP enabled.
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: NetworkAdapterDHCPStatus
            modelAsString: true
        ipv4Configuration:
          $ref: '#/components/schemas/Ipv4Config'
          description: The IPv4 configuration of the network adapter.
          readOnly: true
        ipv6Configuration:
          $ref: '#/components/schemas/Ipv6Config'
          description: The IPv6 configuration of the network adapter.
          readOnly: true
        ipv6LinkLocalAddress:
          description: The IPv6 local address.
          type: string
          readOnly: true
        dnsServers:
          description: The list of DNS Servers of the device.
          uniqueItems: false
          type: array
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
    NetworkAdapterPosition:
      description: The network adapter position.
      type: object
      properties:
        networkGroup:
          description: The network group.
          enum:
            - None
            - NonRDMA
            - RDMA
          type: string
          readOnly: true
          x-ms-enum:
            name: NetworkGroup
            modelAsString: true
        port:
          format: int32
          description: The port.
          type: integer
          readOnly: true
    NetworkSettings:
      description: The network settings of a device.
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/NetworkSettingsProperties'
          description: The properties of network settings of a device.
          readOnly: true
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of NetworkSettings
          readOnly: true
      type: object
    NetworkSettingsProperties:
      description: The properties of network settings.
      type: object
      properties:
        networkAdapters:
          description: The network adapter list on the device.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/NetworkAdapter'
          x-ms-identifiers:
            - adapterId
          readOnly: true
    Node:
      description: "Represents a single node in a Data box Edge/Gateway device\r\nGateway devices, standalone Edge devices and a single node cluster Edge device will all have 1 node\r\nMulti-node Edge devices will have more than 1 nodes"
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/NodeProperties'
          description: The properties of the node
          readOnly: true
          x-ms-client-flatten: true
      type: object
    NodeInfo:
      description: Kubernetes node info
      type: object
      properties:
        name:
          description: Node name.
          type: string
          readOnly: true
        type:
          description: Node type - Master/Worker
          enum:
            - Invalid
            - Master
            - Worker
          type: string
          readOnly: true
          x-ms-enum:
            name: KubernetesNodeType
            modelAsString: true
        ipConfiguration:
          description: IP Configuration of the Kubernetes node.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/KubernetesIPConfiguration'
          x-ms-identifiers:
            - ipAddress
            - port
    NodeList:
      description: Collection of Nodes.
      type: object
      properties:
        value:
          description: The list of Nodes.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Node'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    NodeProperties:
      description: This class represents the nodes in a highly available cluster
      type: object
      properties:
        nodeStatus:
          description: The current status of the individual node
          enum:
            - Unknown
            - Up
            - Down
            - Rebooting
            - ShuttingDown
          type: string
          readOnly: true
          x-ms-enum:
            name: NodeStatus
            modelAsString: true
        nodeChassisSerialNumber:
          description: Serial number of the Chassis
          type: string
          readOnly: true
        nodeSerialNumber:
          description: Serial number of the individual node
          type: string
          readOnly: true
        nodeDisplayName:
          description: Display Name of the individual node
          type: string
          readOnly: true
        nodeFriendlySoftwareVersion:
          description: Friendly software version name that is currently installed on the node
          type: string
          readOnly: true
        nodeHcsVersion:
          description: HCS version that is currently installed on the node
          type: string
          readOnly: true
        nodeInstanceId:
          description: Guid instance id of the node
          type: string
          readOnly: true
    NumaNodeData:
      description: NUMA node data.
      type: object
      properties:
        numaNodeIndex:
          format: int32
          description: The NUMA node index.
          type: integer
        totalMemoryInMb:
          format: int64
          description: The total memory on the NUMA node.
          type: integer
        logicalCoreCountPerCore:
          format: int32
          description: The logical cores per core count.
          type: integer
        effectiveAvailableMemoryInMb:
          format: int64
          description: The effective available memory on the NUMA node in MB.
          type: integer
        freeVCpuIndexesForHpn:
          description: The free VCPU indices for the Hpn VMs.
          uniqueItems: false
          type: array
          items:
            format: int32
            type: integer
        vCpuIndexesForHpn:
          description: The VCPU indices for Hpn VMs
          uniqueItems: false
          type: array
          items:
            format: int32
            type: integer
        vCpuIndexesForRoot:
          description: The VCPU indices for the root.
          uniqueItems: false
          type: array
          items:
            format: int32
            type: integer
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationDisplay:
      description: Operation display properties.
      type: object
      properties:
        provider:
          description: Provider name.
          type: string
        resource:
          description: The type of resource in which the operation is performed.
          type: string
        operation:
          description: Operation to be performed on the resource.
          type: string
        description:
          description: Description of the operation to be performed.
          type: string
    OperationProperties:
      description: Operation properties.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: Service specification.
    OperationsList:
      description: The list of operations used for the discovery of available provider operations.
      required:
        - value
      type: object
      properties:
        value:
          description: The value.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: Link to the next set of results.
          type: string
    Order:
      description: The order details.
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: It specify the order api version.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Order
          readOnly: true
        properties:
          $ref: '#/components/schemas/OrderProperties'
          description: The order properties.
          x-ms-client-flatten: true
      type: object
    OrderList:
      description: List of order entities.
      type: object
      properties:
        value:
          description: The list of orders.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Order'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    OrderProperties:
      description: Order properties.
      type: object
      required:
        - contactInformation
      properties:
        orderId:
          description: It specify the order resource id.
          type: string
          readOnly: true
        contactInformation:
          $ref: '#/components/schemas/ContactDetails'
          description: The contact details.
        shippingAddress:
          $ref: '#/components/schemas/Address'
          description: The shipping address.
        currentStatus:
          $ref: '#/components/schemas/OrderStatus'
          description: Current status of the order.
          readOnly: true
        orderHistory:
          description: List of status changes in the order.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrderStatus'
          x-ms-identifiers:
            - trackingInformation/serialNumber
          readOnly: true
        serialNumber:
          description: Serial number of the device.
          type: string
          readOnly: true
        deliveryTrackingInfo:
          description: Tracking information for the package delivered to the customer whether it has an original or a replacement device.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/TrackingInfo'
          x-ms-identifiers:
            - serialNumber
          readOnly: true
        returnTrackingInfo:
          description: Tracking information for the package returned from the customer whether it has an original or a replacement device.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/TrackingInfo'
          x-ms-identifiers:
            - serialNumber
          readOnly: true
        shipmentType:
          description: ShipmentType of the order
          enum:
            - NotApplicable
            - ShippedToCustomer
            - SelfPickup
          type: string
          x-ms-enum:
            name: ShipmentType
            modelAsString: true
    OrderStatus:
      description: Represents a single status change.
      required:
        - status
      type: object
      properties:
        status:
          description: Status of the order as per the allowed status types.
          enum:
            - Untracked
            - AwaitingFulfillment
            - AwaitingPreparation
            - AwaitingShipment
            - Shipped
            - Arriving
            - Delivered
            - ReplacementRequested
            - LostDevice
            - Declined
            - ReturnInitiated
            - AwaitingReturnShipment
            - ShippedBack
            - CollectedAtMicrosoft
            - AwaitingPickup
            - PickupCompleted
            - AwaitingDrop
          type: string
          x-ms-enum:
            name: OrderState
            modelAsString: true
        updateDateTime:
          format: date-time
          description: Time of status update.
          type: string
          readOnly: true
        comments:
          description: Comments related to this status change.
          type: string
        trackingInformation:
          $ref: '#/components/schemas/TrackingInfo'
          description: Tracking information related to the state in the ordering flow
          readOnly: true
        additionalOrderDetails:
          description: "Dictionary to hold generic information which is not stored\r\nby the already existing properties"
          type: object
          additionalProperties:
            type: string
          readOnly: true
    PeriodicTimerEventTrigger:
      description: Trigger details.
      required:
        - properties
        - kind
      x-ms-discriminator-value: PeriodicTimerEvent
      properties:
        kind:
          description: Trigger Kind.
          enum:
            - FileEvent
            - PeriodicTimerEvent
          type: string
          x-ms-enum:
            name: TriggerEventType
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Trigger
          readOnly: true
        properties:
          $ref: '#/components/schemas/PeriodicTimerProperties'
          description: Periodic timer trigger properties.
          x-ms-client-flatten: true
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
      type: object
    PeriodicTimerProperties:
      description: Periodic timer trigger properties.
      required:
        - sourceInfo
        - sinkInfo
      type: object
      properties:
        sourceInfo:
          $ref: '#/components/schemas/PeriodicTimerSourceInfo'
          description: Periodic timer details.
        sinkInfo:
          $ref: '#/components/schemas/RoleSinkInfo'
          description: Role Sink information.
        customContextTag:
          description: A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
          maxLength: 192
          type: string
    PeriodicTimerSourceInfo:
      description: Periodic timer event source.
      required:
        - startTime
        - schedule
      type: object
      properties:
        startTime:
          format: date-time
          description: The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
          type: string
        schedule:
          description: Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
          type: string
        topic:
          description: Topic where periodic events are published to IoT device.
          type: string
    ProactiveLogCollectionSettingsProperties:
      description: The properties of proactive log collection settings.
      required:
        - userConsent
      type: object
      properties:
        userConsent:
          description: Proactive diagnostic collection consent flag
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ProactiveDiagnosticsConsent
            modelAsString: true
    RawCertificateData:
      description: Raw Certificate Data.
      required:
        - certificate
      type: object
      properties:
        authenticationType:
          description: The authentication type.
          enum:
            - Invalid
            - AzureActiveDirectory
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        certificate:
          description: The base64 encoded certificate raw data.
          type: string
    RefreshDetails:
      description: Fields for tracking refresh job on the share or container.
      type: object
      properties:
        inProgressRefreshJobId:
          description: If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
          type: string
        lastCompletedRefreshJobTimeInUTC:
          format: date-time
          description: Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
          type: string
        errorManifestFile:
          description: Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
          type: string
        lastJob:
          description: Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
          type: string
    RemoteSupportSettings:
      description: RemoteApplicationType for which remote support settings is being modified
      type: object
      properties:
        remoteApplicationType:
          description: Remote application type
          enum:
            - Powershell
            - WAC
            - LocalUI
            - AllApplications
          type: string
          x-ms-enum:
            name: RemoteApplicationType
            modelAsString: true
        accessLevel:
          description: Access level allowed for this remote application type
          enum:
            - None
            - ReadOnly
            - ReadWrite
            - FullAccess
          type: string
          x-ms-enum:
            name: AccessLevel
            modelAsString: true
        expirationTimeStampInUTC:
          format: date-time
          description: Expiration time stamp
          type: string
    ResourceIdentity:
      description: Msi identity details of the resource
      type: object
      properties:
        type:
          description: Identity type
          enum:
            - None
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            name: MsiIdentityType
            modelAsString: true
        principalId:
          description: Service Principal Id backing the Msi
          type: string
          readOnly: true
        tenantId:
          description: Home Tenant Id
          type: string
          readOnly: true
    ResourceMoveDetails:
      description: Fields for tracking resource move
      type: object
      properties:
        operationInProgress:
          description: Denotes whether move operation is in progress
          enum:
            - None
            - ResourceMoveInProgress
            - ResourceMoveFailed
          type: string
          x-ms-enum:
            name: ResourceMoveStatus
            modelAsString: true
        operationInProgressLockTimeoutInUTC:
          format: date-time
          description: Denotes the timeout of the operation to finish
          type: string
    Role:
      description: Compute role.
      required:
        - kind
      discriminator:
        propertyName: kind
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: Role type.
          enum:
            - IOT
            - ASA
            - Functions
            - Cognitive
            - MEC
            - CloudEdgeManagement
            - Kubernetes
          type: string
          x-ms-enum:
            name: RoleTypes
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Role
          readOnly: true
      type: object
    RoleList:
      description: Collection of all the roles on the Data Box Edge device.
      type: object
      properties:
        value:
          description: The Value.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    RoleSinkInfo:
      description: Compute role against which events will be raised.
      required:
        - roleId
      type: object
      properties:
        roleId:
          description: Compute role ID.
          type: string
    Secret:
      description: Holds device secret either as a KeyVault reference or as an encrypted value.
      type: object
      properties:
        encryptedSecret:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: Encrypted (using device public key) secret value.
        keyVaultId:
          description: 'Id of the Key-Vault where secret is stored (ex: secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740).'
          type: string
    SecuritySettings:
      description: The security settings of a device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/SecuritySettingsProperties'
          description: Properties of the security settings.
          x-ms-client-flatten: true
      type: object
    SecuritySettingsProperties:
      description: The properties of security settings.
      required:
        - deviceAdminPassword
      type: object
      properties:
        deviceAdminPassword:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: 'Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to sign into the  local web UI of the device. The Actual password should have at least 8 characters that are a combination of  uppercase, lowercase, numeric, and special characters.'
    ServiceSpecification:
      description: Service specification.
      type: object
      properties:
        metricSpecifications:
          description: Metric specification as defined by shoebox.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification_V1'
          x-ms-identifiers:
            - name
    Share:
      description: Represents a share on the  Data Box Edge/Gateway device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ShareProperties'
          description: The share properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Share
          readOnly: true
      type: object
    ShareAccessRight:
      description: Specifies the mapping between this particular user and the type of access he has on shares on this device.
      required:
        - shareId
        - accessType
      type: object
      properties:
        shareId:
          description: The share ID.
          type: string
        accessType:
          description: Type of access to be allowed on the share for this user.
          enum:
            - Change
            - Read
            - Custom
          type: string
          x-ms-enum:
            name: ShareAccessType
            modelAsString: true
    ShareList:
      description: Collection of all the shares on the Data Box Edge/Gateway device.
      type: object
      properties:
        value:
          description: The list of shares.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Share'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    ShareProperties:
      description: The share properties.
      required:
        - shareStatus
        - monitoringStatus
        - accessProtocol
      type: object
      properties:
        description:
          description: Description for the share.
          type: string
        shareStatus:
          description: Current status of the share.
          enum:
            - Offline
            - Unknown
            - OK
            - Updating
            - NeedsAttention
          type: string
          x-ms-enum:
            name: ShareStatus
            modelAsString: true
        monitoringStatus:
          description: Current monitoring status of the share.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: MonitoringStatus
            modelAsString: true
        azureContainerInfo:
          $ref: '#/components/schemas/AzureContainerInfo'
          description: Azure container mapping for the share.
        accessProtocol:
          description: Access protocol to be used by the share.
          enum:
            - SMB
            - NFS
          type: string
          x-ms-enum:
            name: ShareAccessProtocol
            modelAsString: true
        userAccessRights:
          description: Mapping of users and corresponding access rights on the share (required for SMB protocol).
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/UserAccessRight'
          x-ms-identifiers:
            - userId
        clientAccessRights:
          description: List of IP addresses and corresponding access rights on the share(required for NFS protocol).
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ClientAccessRight'
          x-ms-identifiers:
            - client
        refreshDetails:
          $ref: '#/components/schemas/RefreshDetails'
          description: Details of the refresh job on this share.
        shareMappings:
          description: Share mount point to the role.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MountPointMap'
          x-ms-identifiers:
            - shareId
          readOnly: true
        dataPolicy:
          description: Data policy of the share.
          enum:
            - Cloud
            - Local
          type: string
          x-ms-enum:
            name: DataPolicy
            modelAsString: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    SkuCapability:
      description: The metadata to describe the capability.
      type: object
      properties:
        name:
          description: An invariant to describe the feature.
          type: string
          readOnly: true
        value:
          description: An invariant if the feature is measured by quantity.
          type: string
          readOnly: true
    SkuCost:
      description: The metadata for retrieving price info.
      type: object
      properties:
        meterId:
          description: Used for querying price from commerce.
          type: string
          readOnly: true
        quantity:
          format: int64
          description: The cost quantity.
          type: integer
          readOnly: true
        extendedUnit:
          description: The extended unit.
          type: string
          readOnly: true
    SkuLocationInfo:
      description: The location info.
      type: object
      properties:
        location:
          description: The location.
          type: string
          readOnly: true
        zones:
          description: The zones.
          uniqueItems: false
          type: array
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
        sites:
          description: The sites.
          uniqueItems: false
          type: array
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
    StorageAccount:
      description: Represents a Storage Account on the  Data Box Edge/Gateway device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/StorageAccountProperties'
          description: The Storage Account properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of StorageAccount
          readOnly: true
      type: object
    StorageAccountCredential:
      description: The storage account credential.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/StorageAccountCredentialProperties'
          description: The storage account credential properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of StorageAccountCredential
          readOnly: true
      type: object
    StorageAccountCredentialList:
      description: The collection of storage account credentials.
      type: object
      properties:
        value:
          description: The value.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/StorageAccountCredential'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    StorageAccountCredentialProperties:
      description: The storage account credential properties.
      required:
        - alias
        - sslStatus
        - accountType
      type: object
      properties:
        alias:
          description: Alias for the storage account.
          type: string
        userName:
          description: Username for the storage account.
          type: string
        accountKey:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: Encrypted storage key.
        connectionString:
          description: Connection string for the storage account. Use this string if username and account key are not specified.
          type: string
        sslStatus:
          description: Signifies whether SSL needs to be enabled or not.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: SSLStatus
            modelAsString: true
        blobDomainName:
          description: Blob end point for private clouds.
          type: string
        accountType:
          description: Type of storage accessed on the storage account.
          enum:
            - GeneralPurposeStorage
            - BlobStorage
          type: string
          x-ms-enum:
            name: AccountType
            modelAsString: true
        storageAccountId:
          description: Id of the storage account.
          type: string
    StorageAccountList:
      description: Collection of all the Storage Accounts on the Data Box Edge/Gateway device.
      type: object
      properties:
        value:
          description: The list of storageAccounts.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    StorageAccountProperties:
      description: The storage account properties.
      required:
        - dataPolicy
      type: object
      properties:
        description:
          description: Description for the storage Account.
          type: string
        storageAccountStatus:
          description: Current status of the storage account
          enum:
            - OK
            - Offline
            - Unknown
            - Updating
            - NeedsAttention
          type: string
          x-ms-enum:
            name: StorageAccountStatus
            modelAsString: true
        dataPolicy:
          description: Data policy of the storage Account.
          enum:
            - Cloud
            - Local
          type: string
          x-ms-enum:
            name: DataPolicy
            modelAsString: true
        storageAccountCredentialId:
          description: Storage Account Credential Id
          type: string
        blobEndpoint:
          description: BlobEndpoint of Storage Account
          type: string
          readOnly: true
        containerCount:
          format: int32
          description: The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
          type: integer
          readOnly: true
    SubscriptionProperties:
      type: object
      properties:
        tenantId:
          type: string
        locationPlacementId:
          type: string
        quotaId:
          type: string
        serializedDetails:
          type: string
        registeredFeatures:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRegisteredFeatures'
          x-ms-identifiers:
            - name
    SubscriptionRegisteredFeatures:
      type: object
      properties:
        name:
          type: string
        state:
          type: string
    SupportPackageRequestProperties:
      description: The share properties.
      type: object
      properties:
        minimumTimeStamp:
          format: date-time
          description: MinimumTimeStamp from where logs need to be collected
          type: string
        maximumTimeStamp:
          format: date-time
          description: Start of the timespan of the log collection
          type: string
        include:
          description: "Type of files, which need to be included in the logs\r\nThis will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)\r\nor a comma separated list of log types that are required"
          type: string
    SymmetricKey:
      description: Symmetric key for authentication.
      type: object
      properties:
        connectionString:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: Connection string based on the symmetric key.
    TrackingInfo:
      description: Tracking courier information.
      type: object
      properties:
        serialNumber:
          description: Serial number of the device being tracked.
          type: string
        carrierName:
          description: Name of the carrier used in the delivery.
          type: string
        trackingId:
          description: Tracking ID of the shipment.
          type: string
        trackingUrl:
          description: Tracking URL of the shipment.
          type: string
    Trigger:
      description: Trigger details.
      required:
        - kind
      discriminator:
        propertyName: kind
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        kind:
          description: Trigger Kind.
          enum:
            - FileEvent
            - PeriodicTimerEvent
          type: string
          x-ms-enum:
            name: TriggerEventType
            modelAsString: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of Trigger
          readOnly: true
      type: object
    TriggerList:
      description: Collection of all trigger on the data box edge device.
      type: object
      properties:
        value:
          description: The list of triggers.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    TriggerSupportPackageRequest:
      description: The request object for trigger support package.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/SupportPackageRequestProperties'
          description: The TriggerSupportPackageRequest properties.
          x-ms-client-flatten: true
      type: object
    UpdateDetails:
      description: Update Specific attributes
      type: object
      properties:
        updateTitle:
          description: Title of the Update
          type: string
        updateSize:
          format: double
          description: Size of the update(In Bytes)
          type: number
        updateType:
          description: Type of the Update
          enum:
            - Software
            - Kubernetes
            - Firmware
          type: string
          x-ms-enum:
            name: UpdateType
            modelAsString: true
        targetVersion:
          description: Target Version number
          type: string
        friendlyVersionNumber:
          description: Friendly Version Number
          type: string
        estimatedInstallTimeInMins:
          format: int32
          description: Estimated Install Time for the update
          type: integer
        rebootBehavior:
          description: Indicates if updates are available and at least one of the updates needs a reboot.
          enum:
            - NeverReboots
            - RequiresReboot
            - RequestReboot
          type: string
          x-ms-enum:
            name: InstallRebootBehavior
            modelAsString: true
        installationImpact:
          description: Impact of Installing an updateType
          enum:
            - None
            - DeviceRebooted
            - KubernetesWorkloadsDown
          type: string
          x-ms-enum:
            name: InstallationImpact
            modelAsString: true
        status:
          description: Status of the update.
          enum:
            - DownloadPending
            - DownloadStarted
            - DownloadCompleted
            - InstallStarted
            - InstallCompleted
          type: string
          x-ms-enum:
            name: UpdateStatus
            modelAsString: true
    UpdateDownloadProgress:
      description: Details about the download progress of update.
      type: object
      properties:
        downloadPhase:
          description: The download phase.
          enum:
            - Unknown
            - Initializing
            - Downloading
            - Verifying
          type: string
          readOnly: true
          x-ms-enum:
            name: DownloadPhase
            modelAsString: true
        percentComplete:
          format: int32
          description: Percentage of completion.
          type: integer
          readOnly: true
        totalBytesToDownload:
          format: double
          description: Total bytes to download.
          type: number
          readOnly: true
        totalBytesDownloaded:
          format: double
          description: Total bytes downloaded.
          type: number
          readOnly: true
        numberOfUpdatesToDownload:
          format: int32
          description: Number of updates to download.
          type: integer
          readOnly: true
        numberOfUpdatesDownloaded:
          format: int32
          description: Number of updates downloaded.
          type: integer
          readOnly: true
    UpdateInstallProgress:
      description: Progress details during installation of updates.
      type: object
      properties:
        percentComplete:
          format: int32
          description: Percentage completed.
          type: integer
          readOnly: true
        numberOfUpdatesToInstall:
          format: int32
          description: Number of updates to install.
          type: integer
          readOnly: true
        numberOfUpdatesInstalled:
          format: int32
          description: Number of updates installed.
          type: integer
          readOnly: true
    UpdateSummary:
      description: Details about ongoing updates and availability of updates on the device.
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UpdateSummaryProperties'
          description: The device update information summary.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of UpdateSummary
          readOnly: true
      type: object
    UpdateSummaryProperties:
      description: The device update information summary.
      type: object
      properties:
        deviceVersionNumber:
          description: 'The current version of the device in format: 1.2.17312.13.",'
          type: string
        friendlyDeviceVersionName:
          description: The current version of the device in text format.
          type: string
        deviceLastScannedDateTime:
          format: date-time
          description: The last time when a scan was done on the device.
          type: string
        lastCompletedScanJobDateTime:
          format: date-time
          description: The time when the last scan job was completed (success/cancelled/failed) on the appliance.
          type: string
        lastSuccessfulScanJobTime:
          format: date-time
          description: Time when the last scan job is successfully completed.
          type: string
        lastCompletedDownloadJobDateTime:
          format: date-time
          description: The time when the last Download job was completed (success/cancelled/failed) on the appliance.
          type: string
          readOnly: true
        lastCompletedDownloadJobId:
          description: JobId of the last ran download job.(Can be success/cancelled/failed)
          type: string
          readOnly: true
        lastDownloadJobStatus:
          description: JobStatus of the last ran download job.
          enum:
            - Invalid
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Paused
            - Scheduled
          type: string
          readOnly: true
          x-ms-enum:
            name: JobStatus
            modelAsString: true
        lastSuccessfulInstallJobDateTime:
          format: date-time
          description: The time when the Last Install job was completed successfully on the appliance
          type: string
        lastCompletedInstallJobDateTime:
          format: date-time
          description: The time when the last Install job was completed (success/cancelled/failed) on the appliance.
          type: string
          readOnly: true
        lastCompletedInstallJobId:
          description: JobId of the last ran install job.(Can be success/cancelled/failed)
          type: string
          readOnly: true
        lastInstallJobStatus:
          description: JobStatus of the last ran install job.
          enum:
            - Invalid
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Paused
            - Scheduled
          type: string
          readOnly: true
          x-ms-enum:
            name: JobStatus
            modelAsString: true
        totalNumberOfUpdatesAvailable:
          format: int32
          description: The number of updates available for the current device version as per the last device scan.
          type: integer
          readOnly: true
        totalNumberOfUpdatesPendingDownload:
          format: int32
          description: The total number of items pending download.
          type: integer
          readOnly: true
        totalNumberOfUpdatesPendingInstall:
          format: int32
          description: The total number of items pending install.
          type: integer
          readOnly: true
        rebootBehavior:
          description: Indicates if updates are available and at least one of the updates needs a reboot.
          enum:
            - NeverReboots
            - RequiresReboot
            - RequestReboot
          type: string
          readOnly: true
          x-ms-enum:
            name: InstallRebootBehavior
            modelAsString: true
        ongoingUpdateOperation:
          description: The current update operation.
          enum:
            - None
            - Scan
            - Download
            - Install
          type: string
          readOnly: true
          x-ms-enum:
            name: UpdateOperation
            modelAsString: true
        inProgressDownloadJobId:
          description: The job ID of the download job in progress.
          type: string
          readOnly: true
        inProgressInstallJobId:
          description: The job ID of the install job in progress.
          type: string
          readOnly: true
        inProgressDownloadJobStartedDateTime:
          format: date-time
          description: The time when the currently running download (if any) started.
          type: string
          readOnly: true
        inProgressInstallJobStartedDateTime:
          format: date-time
          description: The time when the currently running install (if any) started.
          type: string
          readOnly: true
        updateTitles:
          description: The list of updates available for install.
          uniqueItems: false
          type: array
          items:
            type: string
          readOnly: true
        updates:
          description: The list of updates available for install.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/UpdateDetails'
          x-ms-identifiers:
            - updateTitle
          readOnly: true
        totalUpdateSizeInBytes:
          format: double
          description: The total size of updates available for download in bytes.
          type: number
          readOnly: true
        totalTimeInMinutes:
          format: int32
          description: The total time in Minutes
          type: integer
          readOnly: true
    UploadCertificateRequest:
      description: The upload certificate request.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/RawCertificateData'
          description: The Base 64 encoded certificate raw data.
          x-ms-client-flatten: true
      type: object
    UploadCertificateResponse:
      description: The upload registration certificate response.
      type: object
      properties:
        authType:
          description: Specifies authentication type.
          enum:
            - Invalid
            - AzureActiveDirectory
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        resourceId:
          description: The resource ID of the Data Box Edge/Gateway device.
          type: string
          readOnly: true
        aadAuthority:
          description: Azure Active Directory tenant authority.
          type: string
          readOnly: true
        aadTenantId:
          description: Azure Active Directory tenant ID.
          type: string
          readOnly: true
        servicePrincipalClientId:
          description: Azure Active Directory service principal client ID.
          type: string
          readOnly: true
        servicePrincipalObjectId:
          description: Azure Active Directory service principal object ID.
          type: string
          readOnly: true
        azureManagementEndpointAudience:
          description: The azure management endpoint audience.
          type: string
          readOnly: true
        aadAudience:
          description: Identifier of the target resource that is the recipient of the requested token.
          type: string
          readOnly: true
    User:
      description: Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.
      required:
        - properties
      properties:
        id:
          description: The path ID that uniquely identifies the object.
          type: string
          readOnly: true
        name:
          description: The object name.
          type: string
          readOnly: true
        type:
          description: The hierarchical type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UserProperties'
          description: The storage account credential properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of User
          readOnly: true
      type: object
    UserAccessRight:
      description: The mapping between a particular user and the access type on the SMB share.
      required:
        - userId
        - accessType
      type: object
      properties:
        userId:
          description: User ID (already existing in the device).
          type: string
        accessType:
          description: Type of access to be allowed for the user.
          enum:
            - Change
            - Read
            - Custom
          type: string
          x-ms-enum:
            name: ShareAccessType
            modelAsString: true
    UserList:
      description: Collection of users.
      type: object
      properties:
        value:
          description: The list of users.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results.
          type: string
          readOnly: true
    UserProperties:
      description: The user properties.
      required:
        - userType
      type: object
      properties:
        encryptedPassword:
          $ref: '#/components/schemas/AsymmetricEncryptedSecret'
          description: The password details.
        shareAccessRights:
          description: List of shares that the user has rights on. This field should not be specified during user creation.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ShareAccessRight'
          x-ms-identifiers:
            - shareId
          readOnly: true
        userType:
          description: Type of the user.
          enum:
            - Share
            - LocalManagement
            - ARM
          type: string
          x-ms-enum:
            name: UserType
            modelAsString: true
    VmMemory:
      description: VmMemory Data.
      type: object
      properties:
        startupMemoryMB:
          format: int64
          description: The total amount of RAM in the virtual machine, as seen by the guest  operating system. For a virtual machine with dynamic memory enabled, this represents the initial memory available at startup.
          type: integer
        currentMemoryUsageMB:
          format: int64
          description: The current memory used by the virtual machine.
          type: integer
    VmPlacementRequestResult:
      description: List of VM sizes being checked for creation on appliance along with corresponding result.
      type: object
      properties:
        vmSize:
          description: List of VM sizes being checked.
          uniqueItems: false
          type: array
          items:
            type: string
        isFeasible:
          description: Boolean value indicating if the VM(s) in VmSize can be created.
          type: boolean
        messageCode:
          description: MessageCode indicating reason for success or failure.
          type: string
        message:
          description: Localized message to be displayed to the user to explain the check result.
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.data_box_edge.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataBoxEdge~1operations?api-version=2023-12-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    available_skus:
      id: azure.data_box_edge.available_skus
      name: available_skus
      title: available_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataBoxEdge~1availableSkus?api-version=2023-12-01/get'
            operationId: AvailableSkus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeSkuList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    devices:
      id: azure.data_box_edge.devices
      name: devices
      title: devices
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices?api-version=2023-12-01/get'
            operationId: Devices_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeDeviceList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices?api-version=2023-12-01/get'
            operationId: Devices_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeDeviceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}?api-version=2023-12-01/get'
            operationId: Devices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeDevice
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}?api-version=2023-12-01/put'
            operationId: Devices_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeDevice
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}?api-version=2023-12-01/delete'
            operationId: Devices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}?api-version=2023-12-01/patch'
            operationId: Devices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeDevice
        download_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1downloadUpdates?api-version=2023-12-01/post'
            operationId: Devices_DownloadUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_certificate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1generateCertificate?api-version=2023-12-01/post'
            operationId: Devices_GenerateCertificate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GenerateCertResponse
        install_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1installUpdates?api-version=2023-12-01/post'
            operationId: Devices_InstallUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        scan_for_updates:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1scanForUpdates?api-version=2023-12-01/post'
            operationId: Devices_ScanForUpdates
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_certificate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1uploadCertificate?api-version=2023-12-01/post'
            operationId: Devices_UploadCertificate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UploadCertificateResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/devices/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete'
    alerts:
      id: azure.data_box_edge.alerts
      name: alerts
      title: alerts
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1alerts?api-version=2023-12-01/get'
            operationId: Alerts_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AlertList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1alerts~1{name}?api-version=2023-12-01/get'
            operationId: Alerts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Alert
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/get'
          - $ref: '#/components/x-stackQL-resources/alerts/methods/list_by_data_box_edge_device'
        insert: []
        update: []
        replace: []
        delete: []
    bandwidth_schedules:
      id: azure.data_box_edge.bandwidth_schedules
      name: bandwidth_schedules
      title: bandwidth_schedules
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1bandwidthSchedules?api-version=2023-12-01/get'
            operationId: BandwidthSchedules_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BandwidthSchedulesList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1bandwidthSchedules~1{name}?api-version=2023-12-01/get'
            operationId: BandwidthSchedules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BandwidthSchedule
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1bandwidthSchedules~1{name}?api-version=2023-12-01/put'
            operationId: BandwidthSchedules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BandwidthSchedule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1bandwidthSchedules~1{name}?api-version=2023-12-01/delete'
            operationId: BandwidthSchedules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bandwidth_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/bandwidth_schedules/methods/list_by_data_box_edge_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/bandwidth_schedules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bandwidth_schedules/methods/delete'
    device_capacity_checks:
      id: azure.data_box_edge.device_capacity_checks
      name: device_capacity_checks
      title: device_capacity_checks
      methods:
        check_resource_creation_feasibility:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1deviceCapacityCheck?api-version=2023-12-01/post'
            operationId: DeviceCapacityCheck_CheckResourceCreationFeasibility
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    device_capacity_info_device_capacity_info:
      id: azure.data_box_edge.device_capacity_info_device_capacity_info
      name: device_capacity_info_device_capacity_info
      title: device_capacity_info_device_capacity_info
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1deviceCapacityInfo~1default?api-version=2023-12-01/get'
            operationId: DeviceCapacityInfoDeviceCapacityInfo_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceCapacityInfo
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_capacity_info_device_capacity_info/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    diagnostic_settings_diagnostic_proactive_log_collection_settings:
      id: azure.data_box_edge.diagnostic_settings_diagnostic_proactive_log_collection_settings
      name: diagnostic_settings_diagnostic_proactive_log_collection_settings
      title: diagnostic_settings_diagnostic_proactive_log_collection_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1diagnosticProactiveLogCollectionSettings~1default?api-version=2023-12-01/get'
            operationId: DiagnosticSettingsDiagnosticProactiveLogCollectionSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticProactiveLogCollectionSettings
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1diagnosticProactiveLogCollectionSettings~1default?api-version=2023-12-01/put'
            operationId: DiagnosticSettingsDiagnosticProactiveLogCollectionSettings_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticProactiveLogCollectionSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings_diagnostic_proactive_log_collection_settings/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings_diagnostic_proactive_log_collection_settings/methods/update'
        delete: []
    diagnostic_settings_diagnostic_remote_support_settings:
      id: azure.data_box_edge.diagnostic_settings_diagnostic_remote_support_settings
      name: diagnostic_settings_diagnostic_remote_support_settings
      title: diagnostic_settings_diagnostic_remote_support_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1diagnosticRemoteSupportSettings~1default?api-version=2023-12-01/get'
            operationId: DiagnosticSettingsDiagnosticRemoteSupportSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticRemoteSupportSettings
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1diagnosticRemoteSupportSettings~1default?api-version=2023-12-01/put'
            operationId: DiagnosticSettingsDiagnosticRemoteSupportSettings_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticRemoteSupportSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings_diagnostic_remote_support_settings/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings_diagnostic_remote_support_settings/methods/update'
        delete: []
    devices_extended_information:
      id: azure.data_box_edge.devices_extended_information
      name: devices_extended_information
      title: devices_extended_information
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1getExtendedInformation?api-version=2023-12-01/post'
            operationId: DevicesExtendedInformation_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeDeviceExtendedInfo
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1updateExtendedInformation?api-version=2023-12-01/post'
            operationId: DevicesExtendedInformation_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataBoxEdgeDeviceExtendedInfo
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_extended_information/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    jobs:
      id: azure.data_box_edge.jobs
      name: jobs
      title: jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1jobs~1{name}?api-version=2023-12-01/get'
            operationId: Jobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    devices_network_settings:
      id: azure.data_box_edge.devices_network_settings
      name: devices_network_settings
      title: devices_network_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1networkSettings~1default?api-version=2023-12-01/get'
            operationId: DevicesNetworkSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSettings
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_network_settings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    nodes:
      id: azure.data_box_edge.nodes
      name: nodes
      title: nodes
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1nodes?api-version=2023-12-01/get'
            operationId: Nodes_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NodeList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/list_by_data_box_edge_device'
        insert: []
        update: []
        replace: []
        delete: []
    operations_status:
      id: azure.data_box_edge.operations_status
      name: operations_status
      title: operations_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1operationsStatus~1{name}?api-version=2023-12-01/get'
            operationId: OperationsStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    orders:
      id: azure.data_box_edge.orders
      name: orders
      title: orders
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1orders?api-version=2023-12-01/get'
            operationId: Orders_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OrderList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1orders~1default?api-version=2023-12-01/get'
            operationId: Orders_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Order
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1orders~1default?api-version=2023-12-01/put'
            operationId: Orders_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Order
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1orders~1default?api-version=2023-12-01/delete'
            operationId: Orders_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orders/methods/list_by_data_box_edge_device'
          - $ref: '#/components/x-stackQL-resources/orders/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/orders/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/orders/methods/delete'
    orders_dc_access_codes:
      id: azure.data_box_edge.orders_dc_access_codes
      name: orders_dc_access_codes
      title: orders_dc_access_codes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1orders~1default~1listDCAccessCode?api-version=2023-12-01/post'
            operationId: OrdersDCAccessCode_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DCAccessCode
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orders_dc_access_codes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    roles:
      id: azure.data_box_edge.roles
      name: roles
      title: roles
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles?api-version=2023-12-01/get'
            operationId: Roles_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RoleList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{name}?api-version=2023-12-01/get'
            operationId: Roles_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Role
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{name}?api-version=2023-12-01/put'
            operationId: Roles_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Role
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{name}?api-version=2023-12-01/delete'
            operationId: Roles_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/get'
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_by_data_box_edge_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/roles/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/roles/methods/delete'
    addons:
      id: azure.data_box_edge.addons
      name: addons
      title: addons
      methods:
        list_by_role:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1addons?api-version=2023-12-01/get'
            operationId: Addons_ListByRole
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AddonList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1addons~1{addonName}?api-version=2023-12-01/get'
            operationId: Addons_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Addon
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1addons~1{addonName}?api-version=2023-12-01/put'
            operationId: Addons_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Addon
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1addons~1{addonName}?api-version=2023-12-01/delete'
            operationId: Addons_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/addons/methods/get'
          - $ref: '#/components/x-stackQL-resources/addons/methods/list_by_role'
        insert:
          - $ref: '#/components/x-stackQL-resources/addons/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/addons/methods/delete'
    monitoring_configs:
      id: azure.data_box_edge.monitoring_configs
      name: monitoring_configs
      title: monitoring_configs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1monitoringConfig?api-version=2023-12-01/get'
            operationId: MonitoringConfig_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringMetricConfigurationList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1monitoringConfig~1default?api-version=2023-12-01/get'
            operationId: MonitoringConfig_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringMetricConfiguration
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1monitoringConfig~1default?api-version=2023-12-01/put'
            operationId: MonitoringConfig_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringMetricConfiguration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1roles~1{roleName}~1monitoringConfig~1default?api-version=2023-12-01/delete'
            operationId: MonitoringConfig_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitoring_configs/methods/list'
          - $ref: '#/components/x-stackQL-resources/monitoring_configs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/monitoring_configs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/monitoring_configs/methods/delete'
    devices_security_settings:
      id: azure.data_box_edge.devices_security_settings
      name: devices_security_settings
      title: devices_security_settings
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1securitySettings~1default~1update?api-version=2023-12-01/post'
            operationId: DevicesSecuritySettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/devices_security_settings/methods/create_or_update'
        update: []
        replace: []
        delete: []
    shares:
      id: azure.data_box_edge.shares
      name: shares
      title: shares
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1shares?api-version=2023-12-01/get'
            operationId: Shares_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1shares~1{name}?api-version=2023-12-01/get'
            operationId: Shares_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Share
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1shares~1{name}?api-version=2023-12-01/put'
            operationId: Shares_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Share
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1shares~1{name}?api-version=2023-12-01/delete'
            operationId: Shares_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1shares~1{name}~1refresh?api-version=2023-12-01/post'
            operationId: Shares_Refresh
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shares/methods/get'
          - $ref: '#/components/x-stackQL-resources/shares/methods/list_by_data_box_edge_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/shares/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/shares/methods/delete'
    storage_account_credentials:
      id: azure.data_box_edge.storage_account_credentials
      name: storage_account_credentials
      title: storage_account_credentials
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccountCredentials?api-version=2023-12-01/get'
            operationId: StorageAccountCredentials_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredentialList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccountCredentials~1{name}?api-version=2023-12-01/get'
            operationId: StorageAccountCredentials_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredential
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccountCredentials~1{name}?api-version=2023-12-01/put'
            operationId: StorageAccountCredentials_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountCredential
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccountCredentials~1{name}?api-version=2023-12-01/delete'
            operationId: StorageAccountCredentials_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/list_by_data_box_edge_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_account_credentials/methods/delete'
    storage_accounts:
      id: azure.data_box_edge.storage_accounts
      name: storage_accounts
      title: storage_accounts
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts?api-version=2023-12-01/get'
            operationId: StorageAccounts_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccountList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}?api-version=2023-12-01/get'
            operationId: StorageAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccount
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}?api-version=2023-12-01/put'
            operationId: StorageAccounts_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAccount
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}?api-version=2023-12-01/delete'
            operationId: StorageAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/list_by_data_box_edge_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/delete'
    containers:
      id: azure.data_box_edge.containers
      name: containers
      title: containers
      methods:
        list_by_storage_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}~1containers?api-version=2023-12-01/get'
            operationId: Containers_ListByStorageAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}~1containers~1{containerName}?api-version=2023-12-01/get'
            operationId: Containers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Container
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}~1containers~1{containerName}?api-version=2023-12-01/put'
            operationId: Containers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Container
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}~1containers~1{containerName}?api-version=2023-12-01/delete'
            operationId: Containers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        refresh:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1storageAccounts~1{storageAccountName}~1containers~1{containerName}~1refresh?api-version=2023-12-01/post'
            operationId: Containers_Refresh
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/containers/methods/get'
          - $ref: '#/components/x-stackQL-resources/containers/methods/list_by_storage_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/containers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/containers/methods/delete'
    triggers:
      id: azure.data_box_edge.triggers
      name: triggers
      title: triggers
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1triggers?api-version=2023-12-01/get'
            operationId: Triggers_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TriggerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1triggers~1{name}?api-version=2023-12-01/get'
            operationId: Triggers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Trigger
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1triggers~1{name}?api-version=2023-12-01/put'
            operationId: Triggers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Trigger
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1triggers~1{name}?api-version=2023-12-01/delete'
            operationId: Triggers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/get'
          - $ref: '#/components/x-stackQL-resources/triggers/methods/list_by_data_box_edge_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/delete'
    support_packages:
      id: azure.data_box_edge.support_packages
      name: support_packages
      title: support_packages
      methods:
        trigger_support_package:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1triggerSupportPackage?api-version=2023-12-01/post'
            operationId: SupportPackages_TriggerSupportPackage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    devices_update_summaries:
      id: azure.data_box_edge.devices_update_summaries
      name: devices_update_summaries
      title: devices_update_summaries
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1updateSummary~1default?api-version=2023-12-01/get'
            operationId: DevicesUpdateSummary_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UpdateSummary
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices_update_summaries/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    users:
      id: azure.data_box_edge.users
      name: users
      title: users
      methods:
        list_by_data_box_edge_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1users?api-version=2023-12-01/get'
            operationId: Users_ListByDataBoxEdgeDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1users~1{name}?api-version=2023-12-01/get'
            operationId: Users_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: User
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1users~1{name}?api-version=2023-12-01/put'
            operationId: Users_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: User
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataBoxEdge~1dataBoxEdgeDevices~1{deviceName}~1users~1{name}?api-version=2023-12-01/delete'
            operationId: Users_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get'
          - $ref: '#/components/x-stackQL-resources/users/methods/list_by_data_box_edge_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete'
    vw_devices:
      id: azure.data_box_edge.vw_devices
      name: vw_devices
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              sku as sku,
              etag as etag,
              identity as identity,
              kind as kind,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.systemData') as "system_data",
              JSON_EXTRACT(properties, '$.dataBoxEdgeDeviceStatus') as "data_box_edge_device_status",
              JSON_EXTRACT(properties, '$.serialNumber') as "serial_number",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.modelDescription') as "model_description",
              JSON_EXTRACT(properties, '$.deviceType') as "device_type",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.culture') as "culture",
              JSON_EXTRACT(properties, '$.deviceModel') as "device_model",
              JSON_EXTRACT(properties, '$.deviceSoftwareVersion') as "device_software_version",
              JSON_EXTRACT(properties, '$.deviceLocalCapacity') as "device_local_capacity",
              JSON_EXTRACT(properties, '$.timeZone') as "time_zone",
              JSON_EXTRACT(properties, '$.deviceHcsVersion') as "device_hcs_version",
              JSON_EXTRACT(properties, '$.configuredRoleTypes') as "configured_role_types",
              JSON_EXTRACT(properties, '$.nodeCount') as "node_count",
              JSON_EXTRACT(properties, '$.resourceMoveDetails') as "resource_move_details",
              JSON_EXTRACT(properties, '$.edgeProfile') as "edge_profile",
              JSON_EXTRACT(properties, '$.dataResidency') as "data_residency",
              JSON_EXTRACT(properties, '$.kubernetesWorkloadProfile') as "kubernetes_workload_profile",
              subscriptionId,
              resourceGroupName,
              deviceName
              FROM azure.data_box_edge.devices
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                sku as sku,
                etag as etag,
                identity as identity,
                kind as kind,
                systemData as system_data,
                json_extract_path_text(properties, '$.systemData') as "system_data",
                json_extract_path_text(properties, '$.dataBoxEdgeDeviceStatus') as "data_box_edge_device_status",
                json_extract_path_text(properties, '$.serialNumber') as "serial_number",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.modelDescription') as "model_description",
                json_extract_path_text(properties, '$.deviceType') as "device_type",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.culture') as "culture",
                json_extract_path_text(properties, '$.deviceModel') as "device_model",
                json_extract_path_text(properties, '$.deviceSoftwareVersion') as "device_software_version",
                json_extract_path_text(properties, '$.deviceLocalCapacity') as "device_local_capacity",
                json_extract_path_text(properties, '$.timeZone') as "time_zone",
                json_extract_path_text(properties, '$.deviceHcsVersion') as "device_hcs_version",
                json_extract_path_text(properties, '$.configuredRoleTypes') as "configured_role_types",
                json_extract_path_text(properties, '$.nodeCount') as "node_count",
                json_extract_path_text(properties, '$.resourceMoveDetails') as "resource_move_details",
                json_extract_path_text(properties, '$.edgeProfile') as "edge_profile",
                json_extract_path_text(properties, '$.dataResidency') as "data_residency",
                json_extract_path_text(properties, '$.kubernetesWorkloadProfile') as "kubernetes_workload_profile",
                subscriptionId,
                resourceGroupName,
                deviceName
                FROM azure.data_box_edge.devices
                WHERE subscriptionId = 'replace-me';
    vw_alerts:
      id: azure.data_box_edge.vw_alerts
      name: vw_alerts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.alertType') as "alert_type",
              JSON_EXTRACT(properties, '$.appearedAtDateTime') as "appeared_at_date_time",
              JSON_EXTRACT(properties, '$.recommendation') as "recommendation",
              JSON_EXTRACT(properties, '$.severity') as "severity",
              JSON_EXTRACT(properties, '$.errorDetails') as "error_details",
              JSON_EXTRACT(properties, '$.detailedInformation') as "detailed_information",
              subscriptionId,
              resourceGroupName,
              deviceName,
              name
              FROM azure.data_box_edge.alerts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.alertType') as "alert_type",
                json_extract_path_text(properties, '$.appearedAtDateTime') as "appeared_at_date_time",
                json_extract_path_text(properties, '$.recommendation') as "recommendation",
                json_extract_path_text(properties, '$.severity') as "severity",
                json_extract_path_text(properties, '$.errorDetails') as "error_details",
                json_extract_path_text(properties, '$.detailedInformation') as "detailed_information",
                subscriptionId,
                resourceGroupName,
                deviceName,
                name
                FROM azure.data_box_edge.alerts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_bandwidth_schedules:
      id: azure.data_box_edge.vw_bandwidth_schedules
      name: vw_bandwidth_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.start') as "start",
              JSON_EXTRACT(properties, '$.stop') as "stop",
              JSON_EXTRACT(properties, '$.rateInMbps') as "rate_in_mbps",
              JSON_EXTRACT(properties, '$.days') as "days",
              subscriptionId,
              resourceGroupName,
              deviceName,
              name
              FROM azure.data_box_edge.bandwidth_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.start') as "start",
                json_extract_path_text(properties, '$.stop') as "stop",
                json_extract_path_text(properties, '$.rateInMbps') as "rate_in_mbps",
                json_extract_path_text(properties, '$.days') as "days",
                subscriptionId,
                resourceGroupName,
                deviceName,
                name
                FROM azure.data_box_edge.bandwidth_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_device_capacity_info_device_capacity_info:
      id: azure.data_box_edge.vw_device_capacity_info_device_capacity_info
      name: vw_device_capacity_info_device_capacity_info
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.timeStamp') as "time_stamp",
              JSON_EXTRACT(properties, '$.clusterStorageCapacityInfo') as "cluster_storage_capacity_info",
              JSON_EXTRACT(properties, '$.clusterComputeCapacityInfo') as "cluster_compute_capacity_info",
              JSON_EXTRACT(properties, '$.nodeCapacityInfos') as "node_capacity_infos",
              subscriptionId,
              resourceGroupName,
              deviceName
              FROM azure.data_box_edge.device_capacity_info_device_capacity_info
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.timeStamp') as "time_stamp",
                json_extract_path_text(properties, '$.clusterStorageCapacityInfo') as "cluster_storage_capacity_info",
                json_extract_path_text(properties, '$.clusterComputeCapacityInfo') as "cluster_compute_capacity_info",
                json_extract_path_text(properties, '$.nodeCapacityInfos') as "node_capacity_infos",
                subscriptionId,
                resourceGroupName,
                deviceName
                FROM azure.data_box_edge.device_capacity_info_device_capacity_info
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_diagnostic_settings_diagnostic_proactive_log_collection_settings:
      id: azure.data_box_edge.vw_diagnostic_settings_diagnostic_proactive_log_collection_settings
      name: vw_diagnostic_settings_diagnostic_proactive_log_collection_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.userConsent') as "user_consent",
              subscriptionId,
              resourceGroupName,
              deviceName
              FROM azure.data_box_edge.diagnostic_settings_diagnostic_proactive_log_collection_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.userConsent') as "user_consent",
                subscriptionId,
                resourceGroupName,
                deviceName
                FROM azure.data_box_edge.diagnostic_settings_diagnostic_proactive_log_collection_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_diagnostic_settings_diagnostic_remote_support_settings:
      id: azure.data_box_edge.vw_diagnostic_settings_diagnostic_remote_support_settings
      name: vw_diagnostic_settings_diagnostic_remote_support_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.remoteSupportSettingsList') as "remote_support_settings_list",
              subscriptionId,
              resourceGroupName,
              deviceName
              FROM azure.data_box_edge.diagnostic_settings_diagnostic_remote_support_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.remoteSupportSettingsList') as "remote_support_settings_list",
                subscriptionId,
                resourceGroupName,
                deviceName
                FROM azure.data_box_edge.diagnostic_settings_diagnostic_remote_support_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_jobs:
      id: azure.data_box_edge.vw_jobs
      name: vw_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              status as status,
              startTime as start_time,
              endTime as end_time,
              percentComplete as percent_complete,
              error as error,
              JSON_EXTRACT(properties, '$.jobType') as "job_type",
              JSON_EXTRACT(properties, '$.currentStage') as "current_stage",
              JSON_EXTRACT(properties, '$.downloadProgress') as "download_progress",
              JSON_EXTRACT(properties, '$.installProgress') as "install_progress",
              JSON_EXTRACT(properties, '$.totalRefreshErrors') as "total_refresh_errors",
              JSON_EXTRACT(properties, '$.errorManifestFile') as "error_manifest_file",
              JSON_EXTRACT(properties, '$.refreshedEntityId') as "refreshed_entity_id",
              JSON_EXTRACT(properties, '$.folder') as "folder",
              subscriptionId,
              resourceGroupName,
              deviceName,
              name
              FROM azure.data_box_edge.jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me' AND name = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                status as status,
                startTime as start_time,
                endTime as end_time,
                percentComplete as percent_complete,
                error as error,
                json_extract_path_text(properties, '$.jobType') as "job_type",
                json_extract_path_text(properties, '$.currentStage') as "current_stage",
                json_extract_path_text(properties, '$.downloadProgress') as "download_progress",
                json_extract_path_text(properties, '$.installProgress') as "install_progress",
                json_extract_path_text(properties, '$.totalRefreshErrors') as "total_refresh_errors",
                json_extract_path_text(properties, '$.errorManifestFile') as "error_manifest_file",
                json_extract_path_text(properties, '$.refreshedEntityId') as "refreshed_entity_id",
                json_extract_path_text(properties, '$.folder') as "folder",
                subscriptionId,
                resourceGroupName,
                deviceName,
                name
                FROM azure.data_box_edge.jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me' AND name = 'replace-me';
    vw_devices_network_settings:
      id: azure.data_box_edge.vw_devices_network_settings
      name: vw_devices_network_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.networkAdapters') as "network_adapters",
              subscriptionId,
              resourceGroupName,
              deviceName
              FROM azure.data_box_edge.devices_network_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.networkAdapters') as "network_adapters",
                subscriptionId,
                resourceGroupName,
                deviceName
                FROM azure.data_box_edge.devices_network_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_operations_status:
      id: azure.data_box_edge.vw_operations_status
      name: vw_operations_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              status as status,
              startTime as start_time,
              endTime as end_time,
              percentComplete as percent_complete,
              error as error,
              JSON_EXTRACT(properties, '$.jobType') as "job_type",
              JSON_EXTRACT(properties, '$.currentStage') as "current_stage",
              JSON_EXTRACT(properties, '$.downloadProgress') as "download_progress",
              JSON_EXTRACT(properties, '$.installProgress') as "install_progress",
              JSON_EXTRACT(properties, '$.totalRefreshErrors') as "total_refresh_errors",
              JSON_EXTRACT(properties, '$.errorManifestFile') as "error_manifest_file",
              JSON_EXTRACT(properties, '$.refreshedEntityId') as "refreshed_entity_id",
              JSON_EXTRACT(properties, '$.folder') as "folder",
              subscriptionId,
              resourceGroupName,
              deviceName,
              name
              FROM azure.data_box_edge.operations_status
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me' AND name = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                status as status,
                startTime as start_time,
                endTime as end_time,
                percentComplete as percent_complete,
                error as error,
                json_extract_path_text(properties, '$.jobType') as "job_type",
                json_extract_path_text(properties, '$.currentStage') as "current_stage",
                json_extract_path_text(properties, '$.downloadProgress') as "download_progress",
                json_extract_path_text(properties, '$.installProgress') as "install_progress",
                json_extract_path_text(properties, '$.totalRefreshErrors') as "total_refresh_errors",
                json_extract_path_text(properties, '$.errorManifestFile') as "error_manifest_file",
                json_extract_path_text(properties, '$.refreshedEntityId') as "refreshed_entity_id",
                json_extract_path_text(properties, '$.folder') as "folder",
                subscriptionId,
                resourceGroupName,
                deviceName,
                name
                FROM azure.data_box_edge.operations_status
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me' AND name = 'replace-me';
    vw_shares:
      id: azure.data_box_edge.vw_shares
      name: vw_shares
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.shareStatus') as "share_status",
              JSON_EXTRACT(properties, '$.monitoringStatus') as "monitoring_status",
              JSON_EXTRACT(properties, '$.azureContainerInfo') as "azure_container_info",
              JSON_EXTRACT(properties, '$.accessProtocol') as "access_protocol",
              JSON_EXTRACT(properties, '$.userAccessRights') as "user_access_rights",
              JSON_EXTRACT(properties, '$.clientAccessRights') as "client_access_rights",
              JSON_EXTRACT(properties, '$.refreshDetails') as "refresh_details",
              JSON_EXTRACT(properties, '$.shareMappings') as "share_mappings",
              JSON_EXTRACT(properties, '$.dataPolicy') as "data_policy",
              subscriptionId,
              resourceGroupName,
              deviceName,
              name
              FROM azure.data_box_edge.shares
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.shareStatus') as "share_status",
                json_extract_path_text(properties, '$.monitoringStatus') as "monitoring_status",
                json_extract_path_text(properties, '$.azureContainerInfo') as "azure_container_info",
                json_extract_path_text(properties, '$.accessProtocol') as "access_protocol",
                json_extract_path_text(properties, '$.userAccessRights') as "user_access_rights",
                json_extract_path_text(properties, '$.clientAccessRights') as "client_access_rights",
                json_extract_path_text(properties, '$.refreshDetails') as "refresh_details",
                json_extract_path_text(properties, '$.shareMappings') as "share_mappings",
                json_extract_path_text(properties, '$.dataPolicy') as "data_policy",
                subscriptionId,
                resourceGroupName,
                deviceName,
                name
                FROM azure.data_box_edge.shares
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_storage_account_credentials:
      id: azure.data_box_edge.vw_storage_account_credentials
      name: vw_storage_account_credentials
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.alias') as "alias",
              JSON_EXTRACT(properties, '$.userName') as "user_name",
              JSON_EXTRACT(properties, '$.accountKey') as "account_key",
              JSON_EXTRACT(properties, '$.connectionString') as "connection_string",
              JSON_EXTRACT(properties, '$.sslStatus') as "ssl_status",
              JSON_EXTRACT(properties, '$.blobDomainName') as "blob_domain_name",
              JSON_EXTRACT(properties, '$.accountType') as "account_type",
              JSON_EXTRACT(properties, '$.storageAccountId') as "storage_account_id",
              subscriptionId,
              resourceGroupName,
              deviceName,
              name
              FROM azure.data_box_edge.storage_account_credentials
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.alias') as "alias",
                json_extract_path_text(properties, '$.userName') as "user_name",
                json_extract_path_text(properties, '$.accountKey') as "account_key",
                json_extract_path_text(properties, '$.connectionString') as "connection_string",
                json_extract_path_text(properties, '$.sslStatus') as "ssl_status",
                json_extract_path_text(properties, '$.blobDomainName') as "blob_domain_name",
                json_extract_path_text(properties, '$.accountType') as "account_type",
                json_extract_path_text(properties, '$.storageAccountId') as "storage_account_id",
                subscriptionId,
                resourceGroupName,
                deviceName,
                name
                FROM azure.data_box_edge.storage_account_credentials
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_storage_accounts:
      id: azure.data_box_edge.vw_storage_accounts
      name: vw_storage_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.storageAccountStatus') as "storage_account_status",
              JSON_EXTRACT(properties, '$.dataPolicy') as "data_policy",
              JSON_EXTRACT(properties, '$.storageAccountCredentialId') as "storage_account_credential_id",
              JSON_EXTRACT(properties, '$.blobEndpoint') as "blob_endpoint",
              JSON_EXTRACT(properties, '$.containerCount') as "container_count",
              subscriptionId,
              resourceGroupName,
              deviceName,
              storageAccountName
              FROM azure.data_box_edge.storage_accounts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.storageAccountStatus') as "storage_account_status",
                json_extract_path_text(properties, '$.dataPolicy') as "data_policy",
                json_extract_path_text(properties, '$.storageAccountCredentialId') as "storage_account_credential_id",
                json_extract_path_text(properties, '$.blobEndpoint') as "blob_endpoint",
                json_extract_path_text(properties, '$.containerCount') as "container_count",
                subscriptionId,
                resourceGroupName,
                deviceName,
                storageAccountName
                FROM azure.data_box_edge.storage_accounts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_containers:
      id: azure.data_box_edge.vw_containers
      name: vw_containers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.containerStatus') as "container_status",
              JSON_EXTRACT(properties, '$.dataFormat') as "data_format",
              JSON_EXTRACT(properties, '$.refreshDetails') as "refresh_details",
              JSON_EXTRACT(properties, '$.createdDateTime') as "created_date_time",
              subscriptionId,
              resourceGroupName,
              deviceName,
              storageAccountName,
              containerName
              FROM azure.data_box_edge.containers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me' AND storageAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.containerStatus') as "container_status",
                json_extract_path_text(properties, '$.dataFormat') as "data_format",
                json_extract_path_text(properties, '$.refreshDetails') as "refresh_details",
                json_extract_path_text(properties, '$.createdDateTime') as "created_date_time",
                subscriptionId,
                resourceGroupName,
                deviceName,
                storageAccountName,
                containerName
                FROM azure.data_box_edge.containers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me' AND storageAccountName = 'replace-me';
    vw_devices_update_summaries:
      id: azure.data_box_edge.vw_devices_update_summaries
      name: vw_devices_update_summaries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.deviceVersionNumber') as "device_version_number",
              JSON_EXTRACT(properties, '$.friendlyDeviceVersionName') as "friendly_device_version_name",
              JSON_EXTRACT(properties, '$.deviceLastScannedDateTime') as "device_last_scanned_date_time",
              JSON_EXTRACT(properties, '$.lastCompletedScanJobDateTime') as "last_completed_scan_job_date_time",
              JSON_EXTRACT(properties, '$.lastSuccessfulScanJobTime') as "last_successful_scan_job_time",
              JSON_EXTRACT(properties, '$.lastCompletedDownloadJobDateTime') as "last_completed_download_job_date_time",
              JSON_EXTRACT(properties, '$.lastCompletedDownloadJobId') as "last_completed_download_job_id",
              JSON_EXTRACT(properties, '$.lastDownloadJobStatus') as "last_download_job_status",
              JSON_EXTRACT(properties, '$.lastSuccessfulInstallJobDateTime') as "last_successful_install_job_date_time",
              JSON_EXTRACT(properties, '$.lastCompletedInstallJobDateTime') as "last_completed_install_job_date_time",
              JSON_EXTRACT(properties, '$.lastCompletedInstallJobId') as "last_completed_install_job_id",
              JSON_EXTRACT(properties, '$.lastInstallJobStatus') as "last_install_job_status",
              JSON_EXTRACT(properties, '$.totalNumberOfUpdatesAvailable') as "total_number_of_updates_available",
              JSON_EXTRACT(properties, '$.totalNumberOfUpdatesPendingDownload') as "total_number_of_updates_pending_download",
              JSON_EXTRACT(properties, '$.totalNumberOfUpdatesPendingInstall') as "total_number_of_updates_pending_install",
              JSON_EXTRACT(properties, '$.rebootBehavior') as "reboot_behavior",
              JSON_EXTRACT(properties, '$.ongoingUpdateOperation') as "ongoing_update_operation",
              JSON_EXTRACT(properties, '$.inProgressDownloadJobId') as "in_progress_download_job_id",
              JSON_EXTRACT(properties, '$.inProgressInstallJobId') as "in_progress_install_job_id",
              JSON_EXTRACT(properties, '$.inProgressDownloadJobStartedDateTime') as "in_progress_download_job_started_date_time",
              JSON_EXTRACT(properties, '$.inProgressInstallJobStartedDateTime') as "in_progress_install_job_started_date_time",
              JSON_EXTRACT(properties, '$.updateTitles') as "update_titles",
              JSON_EXTRACT(properties, '$.updates') as "updates",
              JSON_EXTRACT(properties, '$.totalUpdateSizeInBytes') as "total_update_size_in_bytes",
              JSON_EXTRACT(properties, '$.totalTimeInMinutes') as "total_time_in_minutes",
              subscriptionId,
              resourceGroupName,
              deviceName
              FROM azure.data_box_edge.devices_update_summaries
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.deviceVersionNumber') as "device_version_number",
                json_extract_path_text(properties, '$.friendlyDeviceVersionName') as "friendly_device_version_name",
                json_extract_path_text(properties, '$.deviceLastScannedDateTime') as "device_last_scanned_date_time",
                json_extract_path_text(properties, '$.lastCompletedScanJobDateTime') as "last_completed_scan_job_date_time",
                json_extract_path_text(properties, '$.lastSuccessfulScanJobTime') as "last_successful_scan_job_time",
                json_extract_path_text(properties, '$.lastCompletedDownloadJobDateTime') as "last_completed_download_job_date_time",
                json_extract_path_text(properties, '$.lastCompletedDownloadJobId') as "last_completed_download_job_id",
                json_extract_path_text(properties, '$.lastDownloadJobStatus') as "last_download_job_status",
                json_extract_path_text(properties, '$.lastSuccessfulInstallJobDateTime') as "last_successful_install_job_date_time",
                json_extract_path_text(properties, '$.lastCompletedInstallJobDateTime') as "last_completed_install_job_date_time",
                json_extract_path_text(properties, '$.lastCompletedInstallJobId') as "last_completed_install_job_id",
                json_extract_path_text(properties, '$.lastInstallJobStatus') as "last_install_job_status",
                json_extract_path_text(properties, '$.totalNumberOfUpdatesAvailable') as "total_number_of_updates_available",
                json_extract_path_text(properties, '$.totalNumberOfUpdatesPendingDownload') as "total_number_of_updates_pending_download",
                json_extract_path_text(properties, '$.totalNumberOfUpdatesPendingInstall') as "total_number_of_updates_pending_install",
                json_extract_path_text(properties, '$.rebootBehavior') as "reboot_behavior",
                json_extract_path_text(properties, '$.ongoingUpdateOperation') as "ongoing_update_operation",
                json_extract_path_text(properties, '$.inProgressDownloadJobId') as "in_progress_download_job_id",
                json_extract_path_text(properties, '$.inProgressInstallJobId') as "in_progress_install_job_id",
                json_extract_path_text(properties, '$.inProgressDownloadJobStartedDateTime') as "in_progress_download_job_started_date_time",
                json_extract_path_text(properties, '$.inProgressInstallJobStartedDateTime') as "in_progress_install_job_started_date_time",
                json_extract_path_text(properties, '$.updateTitles') as "update_titles",
                json_extract_path_text(properties, '$.updates') as "updates",
                json_extract_path_text(properties, '$.totalUpdateSizeInBytes') as "total_update_size_in_bytes",
                json_extract_path_text(properties, '$.totalTimeInMinutes') as "total_time_in_minutes",
                subscriptionId,
                resourceGroupName,
                deviceName
                FROM azure.data_box_edge.devices_update_summaries
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
    vw_users:
      id: azure.data_box_edge.vw_users
      name: vw_users
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.encryptedPassword') as "encrypted_password",
              JSON_EXTRACT(properties, '$.shareAccessRights') as "share_access_rights",
              JSON_EXTRACT(properties, '$.userType') as "user_type",
              subscriptionId,
              resourceGroupName,
              deviceName,
              name
              FROM azure.data_box_edge.users
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.encryptedPassword') as "encrypted_password",
                json_extract_path_text(properties, '$.shareAccessRights') as "share_access_rights",
                json_extract_path_text(properties, '$.userType') as "user_type",
                subscriptionId,
                resourceGroupName,
                deviceName,
                name
                FROM azure.data_box_edge.users
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND deviceName = 'replace-me';
paths:
  /providers/Microsoft.DataBoxEdge/operations?api-version=2023-12-01:
    get:
      tags:
        - Operations
      summary: List all the supported operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: List of supported operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/availableSkus?api-version=2023-12-01:
    get:
      tags:
        - AvailableSkus
      summary: List all the available Skus and information related to them.
      operationId: AvailableSkus_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: Lists the available Skus and information related to them.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeSkuList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices?api-version=2023-12-01:
    get:
      tags:
        - Devices
      description: Gets all the Data Box Edge/Data Box Gateway devices in a subscription.
      operationId: Devices_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: $expand
          in: query
          description: Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of Data Box Edge/Data Box Gateway devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeDeviceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices?api-version=2023-12-01:
    get:
      tags:
        - Devices
      description: Gets all the Data Box Edge/Data Box Gateway devices in a resource group.
      operationId: Devices_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: $expand
          in: query
          description: Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of Data Box Edge/Data Box Gateway devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeDeviceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}?api-version=2023-12-01:
    get:
      tags:
        - Devices
      description: Gets the properties of the Data Box Edge/Data Box Gateway device.
      operationId: Devices_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The Data Box Edge/Data Box Gateway device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeDevice'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Devices
      description: Creates or updates a Data Box Edge/Data Box Gateway resource.
      operationId: Devices_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The resource object.
        required: true
        x-ms-requestBody-name: dataBoxEdgeDevice
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataBoxEdgeDevice'
      responses:
        '200':
          description: Successfully created or updated the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeDevice'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Devices
      description: Deletes the Data Box Edge/Data Box Gateway device.
      operationId: Devices_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the resource.
        '202':
          description: Accepted the request to delete the resource.
        '204':
          description: The resource is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Devices
      description: Modifies a Data Box Edge/Data Box Gateway resource.
      operationId: Devices_Update
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The resource parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataBoxEdgeDevicePatch'
      responses:
        '200':
          description: Successfully updated the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeDevice'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts?api-version=2023-12-01:
    get:
      tags:
        - Alerts
      description: Gets all the alerts for a Data Box Edge/Data Box Gateway device.
      operationId: Alerts_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of alerts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}?api-version=2023-12-01:
    get:
      tags:
        - Alerts
      summary: Gets an alert by name.
      operationId: Alerts_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The alert name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The alert details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules?api-version=2023-12-01:
    get:
      tags:
        - BandwidthSchedules
      description: Gets all the bandwidth schedules for a Data Box Edge/Data Box Gateway device.
      operationId: BandwidthSchedules_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of bandwidth schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthSchedulesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}?api-version=2023-12-01:
    get:
      tags:
        - BandwidthSchedules
      description: Gets the properties of the specified bandwidth schedule.
      operationId: BandwidthSchedules_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The bandwidth schedule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The bandwidth schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthSchedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - BandwidthSchedules
      description: Creates or updates a bandwidth schedule.
      operationId: BandwidthSchedules_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The bandwidth schedule name which needs to be added/updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The bandwidth schedule to be added or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BandwidthSchedule'
      responses:
        '200':
          description: Successfully created or updated the bandwidth schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthSchedule'
        '202':
          description: Accepted the request to create or update the bandwidth schedule.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - BandwidthSchedules
      description: Deletes the specified bandwidth schedule.
      operationId: BandwidthSchedules_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The bandwidth schedule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted the request to delete the bandwidth schedule.
        '204':
          description: Successfully deleted the bandwidth schedule.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityCheck?api-version=2023-12-01:
    post:
      tags:
        - DeviceCapacityCheck
      description: Posts the device capacity request info to check feasibility.
      operationId: DeviceCapacityCheck_CheckResourceCreationFeasibility
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: capacityName
          in: query
          description: The capacity name.
          required: false
          schema:
            type: string
      requestBody:
        description: The device capacity request info.
        required: true
        x-ms-requestBody-name: deviceCapacityRequestInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCapacityRequestInfo'
      responses:
        '200':
          description: Successfully checked the feasibility of resource creation.
        '202':
          description: Accepted the request to check the feasibility of resource creation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityInfo/default?api-version=2023-12-01:
    get:
      tags:
        - DeviceCapacityInfo
      description: Gets the properties of the specified device capacity info.
      operationId: DeviceCapacityInfoDeviceCapacityInfo_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The device capacity info result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCapacityInfo'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: DeviceCapacityInfo_GetDeviceCapacityInfo
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticProactiveLogCollectionSettings/default?api-version=2023-12-01:
    get:
      tags:
        - DiagnosticSettings
      description: Gets the proactive log collection settings of the specified Data Box Edge/Data Box Gateway device.
      operationId: DiagnosticSettingsDiagnosticProactiveLogCollectionSettings_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The diagnostic proactive log collection settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticProactiveLogCollectionSettings'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: DiagnosticSettings_GetDiagnosticProactiveLogCollectionSettings
    put:
      tags:
        - DiagnosticSettings
      description: Updates the proactive log collection settings on a Data Box Edge/Data Box Gateway device.
      operationId: DiagnosticSettingsDiagnosticProactiveLogCollectionSettings_Update
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The proactive log collection settings.
        required: true
        x-ms-requestBody-name: proactiveLogCollectionSettings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticProactiveLogCollectionSettings'
      responses:
        '200':
          description: Successfully updated the proactive log collection settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticProactiveLogCollectionSettings'
        '202':
          description: Accepted the request to update the proactive log collection settings.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-original-operationId: DiagnosticSettings_UpdateDiagnosticProactiveLogCollectionSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticRemoteSupportSettings/default?api-version=2023-12-01:
    get:
      tags:
        - DiagnosticSettings
      description: Gets the diagnostic remote support settings of the specified Data Box Edge/Data Box Gateway device.
      operationId: DiagnosticSettingsDiagnosticRemoteSupportSettings_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The diagnostic remote support settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticRemoteSupportSettings'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: DiagnosticSettings_GetDiagnosticRemoteSupportSettings
    put:
      tags:
        - DiagnosticSettings
      description: Updates the diagnostic remote support settings on a Data Box Edge/Data Box Gateway device.
      operationId: DiagnosticSettingsDiagnosticRemoteSupportSettings_Update
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The diagnostic remote support settings.
        required: true
        x-ms-requestBody-name: diagnosticRemoteSupportSettings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticRemoteSupportSettings'
      responses:
        '200':
          description: Successfully updated the diagnostic remote support settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticRemoteSupportSettings'
        '202':
          description: Accepted the request to update the diagnostic remote support settings.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-original-operationId: DiagnosticSettings_UpdateDiagnosticRemoteSupportSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates?api-version=2023-12-01:
    post:
      tags:
        - Devices
      summary: Downloads the updates on a Data Box Edge/Data Box Gateway device.
      operationId: Devices_DownloadUpdates
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully downloaded the updates on the device.
        '202':
          description: Accepted the request to download the updates on the device.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/generateCertificate?api-version=2023-12-01:
    post:
      tags:
        - Devices
      description: Generates certificate for activation key.
      operationId: Devices_GenerateCertificate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully generated self signed certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateCertResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation?api-version=2023-12-01:
    post:
      tags:
        - Devices
      description: Gets additional information for the specified Azure Stack Edge/Data Box Gateway device.
      operationId: DevicesExtendedInformation_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The additional information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeDeviceExtendedInfo'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: Devices_GetExtendedInformation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates?api-version=2023-12-01:
    post:
      tags:
        - Devices
      summary: Installs the updates on the Data Box Edge/Data Box Gateway device.
      operationId: Devices_InstallUpdates
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully installed updates on the device.
        '202':
          description: Accepted the request to install updates on the device.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}?api-version=2023-12-01:
    get:
      tags:
        - Jobs
      summary: Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
      operationId: Jobs_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The job details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default?api-version=2023-12-01:
    get:
      tags:
        - Devices
      description: Gets the network settings of the specified Data Box Edge/Data Box Gateway device.
      operationId: DevicesNetworkSettings_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The device network settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSettings'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: Devices_GetNetworkSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes?api-version=2023-12-01:
    get:
      tags:
        - Nodes
      description: Gets all the nodes currently configured under this Data Box Edge device
      operationId: Nodes_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of all nodes on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}?api-version=2023-12-01:
    get:
      tags:
        - OperationsStatus
      summary: Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
      operationId: OperationsStatus_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The job details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders?api-version=2023-12-01:
    get:
      tags:
        - Orders
      summary: Lists all the orders related to a Data Box Edge/Data Box Gateway device.
      operationId: Orders_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Lists all the orders for the Data Box Edge Device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default?api-version=2023-12-01:
    get:
      tags:
        - Orders
      summary: Gets a specific order by name.
      operationId: Orders_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The order details of a device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Orders
      summary: Creates or updates an order.
      operationId: Orders_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The order details of a device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The order to be created or updated.
        required: true
        x-ms-requestBody-name: order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Successfully created or updated the order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '202':
          description: Accepted the request to create or update the order.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Orders
      summary: Deletes the order related to the device.
      operationId: Orders_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the order.
        '202':
          description: Accepted the request to delete the order.
        '204':
          description: The order is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default/listDCAccessCode?api-version=2023-12-01:
    post:
      tags:
        - Orders
      summary: Gets the DCAccess Code
      operationId: OrdersDCAccessCode_List
      parameters:
        - name: deviceName
          in: path
          description: The device name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: DC Access code for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DCAccessCode'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: Orders_ListDCAccessCode
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles?api-version=2023-12-01:
    get:
      tags:
        - Roles
      description: Lists all the roles configured in a Data Box Edge/Data Box Gateway device.
      operationId: Roles_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: List of all the roles configured in the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}?api-version=2023-12-01:
    get:
      tags:
        - Roles
      description: Gets a specific role by name.
      operationId: Roles_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The role with the specified name in the given device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Roles
      description: Create or update a role.
      operationId: Roles_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The role properties.
        required: true
        x-ms-requestBody-name: role
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Successfully created or updated the role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '202':
          description: Accepted the request to create or update the role.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Roles
      description: Deletes the role on the device.
      operationId: Roles_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the role.
        '202':
          description: Accepted the request to delete the role.
        '204':
          description: The role is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons?api-version=2023-12-01:
    get:
      tags:
        - Addons
      description: Lists all the addons configured in the role.
      operationId: Addons_ListByRole
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: List of all the addons configured in the role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons/{addonName}?api-version=2023-12-01:
    get:
      tags:
        - Addons
      description: Gets a specific addon by name.
      operationId: Addons_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - name: addonName
          in: path
          description: The addon name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The addon with the specified name in the role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Addons
      description: Create or update a addon.
      operationId: Addons_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - name: addonName
          in: path
          description: The addon name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The addon properties.
        required: true
        x-ms-requestBody-name: addon
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Addon'
      responses:
        '200':
          description: Successfully created or updated the addon.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
        '202':
          description: Accepted the request to create or update the addon.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Addons
      description: Deletes the addon on the device.
      operationId: Addons_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - name: addonName
          in: path
          description: The addon name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the addon.
        '202':
          description: Accepted the request to delete the addon.
        '204':
          description: The addon is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig?api-version=2023-12-01:
    get:
      tags:
        - MonitoringConfig
      summary: Lists metric configurations in a role.
      operationId: MonitoringConfig_List
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The monitoring config details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringMetricConfigurationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig/default?api-version=2023-12-01:
    get:
      tags:
        - MonitoringConfig
      summary: Gets a  metric configuration of a role.
      operationId: MonitoringConfig_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The monitoring config details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringMetricConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - MonitoringConfig
      summary: Creates a new metric configuration or updates an existing one for a role.
      operationId: MonitoringConfig_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The metric configuration.
        required: true
        x-ms-requestBody-name: monitoringMetricConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringMetricConfiguration'
      responses:
        '200':
          description: Successfully created or updated the metrics configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringMetricConfiguration'
        '202':
          description: Accepted the request to create or update the metrics configuration.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - MonitoringConfig
      summary: deletes a new metric configuration for a role.
      operationId: MonitoringConfig_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: roleName
          in: path
          description: The role name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the metrics configuration.
        '202':
          description: Accepted the request to delete the metrics configuration.
        '204':
          description: The metrics configuration is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates?api-version=2023-12-01:
    post:
      tags:
        - Devices
      summary: Scans for updates on a Data Box Edge/Data Box Gateway device.
      operationId: Devices_ScanForUpdates
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully scanned the device for updates.
        '202':
          description: Accepted the request to scan for updates on the device.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update?api-version=2023-12-01:
    post:
      tags:
        - Devices
      description: Updates the security settings on a Data Box Edge/Data Box Gateway device.
      operationId: DevicesSecuritySettings_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The security settings.
        required: true
        x-ms-requestBody-name: securitySettings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySettings'
      responses:
        '202':
          description: Accepted the request to update the security settings.
        '204':
          description: Updated the security settings.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-original-operationId: Devices_CreateOrUpdateSecuritySettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares?api-version=2023-12-01:
    get:
      tags:
        - Shares
      summary: Lists all the shares in a Data Box Edge/Data Box Gateway device.
      operationId: Shares_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of all the shares on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}?api-version=2023-12-01:
    get:
      tags:
        - Shares
      summary: Gets a share by name.
      operationId: Shares_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The share details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Shares
      summary: Creates a new share or updates an existing share on the device.
      operationId: Shares_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The share properties.
        required: true
        x-ms-requestBody-name: share
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Share'
      responses:
        '200':
          description: Successfully created or updated the share.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
        '202':
          description: Accepted the request to create or update the share.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Shares
      description: Deletes the share on the Data Box Edge/Data Box Gateway device.
      operationId: Shares_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the share.
        '202':
          description: Accepted the request to delete the share.
        '204':
          description: The share is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}/refresh?api-version=2023-12-01:
    post:
      tags:
        - Shares
      summary: Refreshes the share metadata with the data from the cloud.
      operationId: Shares_Refresh
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The share name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully refreshed the share on the device.
        '202':
          description: Accepted the request to refresh the share on the device.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials?api-version=2023-12-01:
    get:
      tags:
        - StorageAccountCredentials
      summary: Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.
      operationId: StorageAccountCredentials_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of storage account credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredentialList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}?api-version=2023-12-01:
    get:
      tags:
        - StorageAccountCredentials
      description: Gets the properties of the specified storage account credential.
      operationId: StorageAccountCredentials_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The storage account credential name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The storage account credential properties.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredential'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - StorageAccountCredentials
      description: Creates or updates the storage account credential.
      operationId: StorageAccountCredentials_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The storage account credential name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The storage account credential.
        required: true
        x-ms-requestBody-name: storageAccountCredential
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccountCredential'
      responses:
        '200':
          description: Successfully created or updated the storage account credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountCredential'
        '202':
          description: Accepted the request to create or update the storage account credential.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - StorageAccountCredentials
      description: Deletes the storage account credential.
      operationId: StorageAccountCredentials_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The storage account credential name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the storage account credential.
        '202':
          description: Accepted the request to delete the storage account credential.
        '204':
          description: The storage account credential is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts?api-version=2023-12-01:
    get:
      tags:
        - StorageAccounts
      summary: Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.
      operationId: StorageAccounts_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of all the StorageAccounts on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}?api-version=2023-12-01:
    get:
      tags:
        - StorageAccounts
      summary: Gets a StorageAccount by name.
      operationId: StorageAccounts_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The storage account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The storage account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - StorageAccounts
      summary: Creates a new StorageAccount or updates an existing StorageAccount on the device.
      operationId: StorageAccounts_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The StorageAccount name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The StorageAccount properties.
        required: true
        x-ms-requestBody-name: storageAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAccount'
      responses:
        '200':
          description: Successfully created or updated the StorageAccount.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccount'
        '202':
          description: Accepted the request to create or update the StorageAccount.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - StorageAccounts
      description: Deletes the StorageAccount on the Data Box Edge/Data Box Gateway device.
      operationId: StorageAccounts_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The StorageAccount name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the StorageAccount.
        '204':
          description: The StorageAccount is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers?api-version=2023-12-01:
    get:
      tags:
        - Containers
      summary: Lists all the containers of a storage Account in a Data Box Edge/Data Box Gateway device.
      operationId: Containers_ListByStorageAccount
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The storage Account name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The collection of all the containers on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}?api-version=2023-12-01:
    get:
      tags:
        - Containers
      summary: Gets a container by name.
      operationId: Containers_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The Storage Account Name
          required: true
          schema:
            type: string
        - name: containerName
          in: path
          description: The container Name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The container details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Containers
      summary: Creates a new container or updates an existing container on the device.
      operationId: Containers_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The Storage Account Name
          required: true
          schema:
            type: string
        - name: containerName
          in: path
          description: The container name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The container properties.
        required: true
        x-ms-requestBody-name: container
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
      responses:
        '200':
          description: Successfully created or updated the container.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
        '202':
          description: Accepted the request to create or update the container.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Containers
      description: Deletes the container on the Data Box Edge/Data Box Gateway device.
      operationId: Containers_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The Storage Account Name
          required: true
          schema:
            type: string
        - name: containerName
          in: path
          description: The container name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '202':
          description: Accepted the request to delete the container.
        '204':
          description: The container is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}/refresh?api-version=2023-12-01:
    post:
      tags:
        - Containers
      summary: Refreshes the container metadata with the data from the cloud.
      operationId: Containers_Refresh
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: storageAccountName
          in: path
          description: The Storage Account Name
          required: true
          schema:
            type: string
        - name: containerName
          in: path
          description: The container name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully refreshed the container on the device.
        '202':
          description: Accepted the request to refresh the container on the device.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers?api-version=2023-12-01:
    get:
      tags:
        - Triggers
      description: Lists all the triggers configured in the device.
      operationId: Triggers_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: $filter
          in: query
          description: Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List all the triggers configured in the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}?api-version=2023-12-01:
    get:
      tags:
        - Triggers
      description: Get a specific trigger by name.
      operationId: Triggers_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The trigger.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Triggers
      description: Creates or updates a trigger.
      operationId: Triggers_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: Creates or updates a trigger
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The trigger.
        required: true
        x-ms-requestBody-name: trigger
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        '200':
          description: Successfully created or updated the trigger.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        '202':
          description: Accepted the request to create or update the trigger.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Triggers
      description: Deletes the trigger on the gateway device.
      operationId: Triggers_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The trigger name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the trigger.
        '202':
          description: Accepted the request to delete the trigger.
        '204':
          description: The trigger is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage?api-version=2023-12-01:
    post:
      tags:
        - SupportPackages
      summary: Triggers support package on the device
      operationId: SupportPackages_TriggerSupportPackage
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The trigger support package request object
        required: true
        x-ms-requestBody-name: triggerSupportPackageRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerSupportPackageRequest'
      responses:
        '200':
          description: Successfully triggered support package on the device.
        '202':
          description: Accepted the request to trigger support package on the device.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateExtendedInformation?api-version=2023-12-01:
    post:
      tags:
        - Devices
      description: Gets additional information for the specified Data Box Edge/Data Box Gateway device.
      operationId: DevicesExtendedInformation_Update
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The patch object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataBoxEdgeDeviceExtendedInfoPatch'
      responses:
        '200':
          description: Modify additional information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBoxEdgeDeviceExtendedInfo'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: Devices_UpdateExtendedInformation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default?api-version=2023-12-01:
    get:
      tags:
        - Devices
      summary: Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.
      operationId: DevicesUpdateSummary_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The update summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSummary'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: Devices_GetUpdateSummary
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate?api-version=2023-12-01:
    post:
      tags:
        - Devices
      description: Uploads registration certificate for the device.
      operationId: Devices_UploadCertificate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The upload certificate request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCertificateRequest'
      responses:
        '200':
          description: Successfully uploaded the registration certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadCertificateResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users?api-version=2023-12-01:
    get:
      tags:
        - Users
      description: Gets all the users registered on a Data Box Edge/Data Box Gateway device.
      operationId: Users_ListByDataBoxEdgeDevice
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: $filter
          in: query
          description: Specify $filter='Type eq <type>' to filter on user type property
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The collection of all users on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}?api-version=2023-12-01:
    get:
      tags:
        - Users
      description: Gets the properties of the specified user.
      operationId: Users_Get
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The user name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: The user details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Users
      description: Creates a new user or updates an existing user's information on a Data Box Edge/Data Box Gateway device.
      operationId: Users_CreateOrUpdate
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The user name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      requestBody:
        description: The user details.
        required: true
        x-ms-requestBody-name: user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successfully created or updated the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '202':
          description: Accepted the request to create or update the user.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Users
      description: Deletes the user on a databox edge/gateway device.
      operationId: Users_Delete
      parameters:
        - name: deviceName
          in: path
          description: The device name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The user name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Successfully deleted the user.
        '202':
          description: Accepted the request to delete the user.
        '204':
          description: The user is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
