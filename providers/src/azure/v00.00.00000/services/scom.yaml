openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure API for managing SCOM managed instances and monitored resources.
  description: Azure Monitor Operations Manager Managed Instance (SCOM MI) management APIs
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    instanceName:
      name: instanceName
      in: path
      description: Name of the SCOM managed instance.
      required: true
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_]*$
        type: string
    monitoredResourceName:
      name: monitoredResourceName
      in: path
      description: The monitored resource name.
      required: true
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_]*$
        type: string
    managedGatewayName:
      name: managedGatewayName
      in: path
      description: The gateway resource name.
      required: true
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_]*$
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ManagedInstance:
      description: A SCOM instance resource
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: The properties of a SCOM instance resource
          $ref: '#/components/schemas/MonitoringInstanceProperties'
        identity:
          description: The Azure Active Directory identity of the SCOM instance
          $ref: '#/components/schemas/ManagedIdentity'
          x-ms-mutability:
            - create
            - read
      type: object
    MonitoringInstanceProperties:
      description: The properties of a SCOM instance resource
      type: object
      properties:
        productVersion:
          description: SCOM product version to be installed on instance
          type: string
          readOnly: true
        vNetSubnetId:
          description: Virtual Network subnet id on which Aquila instance will be provisioned
          type: string
        managementEndpoints:
          description: List of management server endpoints
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ManagementServerProperties'
          x-ms-identifiers: []
        databaseInstance:
          description: The database instance where the SCOM Operational and Warehouse databases will be stored.
          $ref: '#/components/schemas/DatabaseInstanceProperties'
        domainController:
          description: Domain controller details
          $ref: '#/components/schemas/DomainControllerProperties'
        domainUserCredentials:
          description: Domain user which will be used to join VMs to domain and login to VMs.
          $ref: '#/components/schemas/DomainUserCredentials'
        gmsaDetails:
          description: Gmsa Details for load balancer and vmss
          $ref: '#/components/schemas/GmsaDetails'
        azureHybridBenefit:
          description: The properties to enable Azure Hybrid benefit for various SCOM infrastructure license.
          $ref: '#/components/schemas/AzureHybridBenefitProperties'
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        logAnalyticsProperties:
          description: Details of Log Analytics workspace and data being ingested.
          readOnly: true
          $ref: '#/components/schemas/logAnalyticsConfiguration'
        operationsStatus:
          description: Gets status of current and latest SCOM managed instance operations.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedInstanceOperationStatus'
          x-ms-identifiers:
            - id
    ManagedInstanceOperationStatus:
      description: Gets status of current and latest SCOM managed instance operation.
      type: object
      properties:
        operationName:
          description: Operation Name
          type: string
          readOnly: true
        operationState:
          description: Operation status
          type: string
          readOnly: true
        id:
          description: Operation id
          type: string
          readOnly: true
    ManagementServerProperties:
      description: The properties of management server
      type: object
      properties:
        serverName:
          description: Management server Name
          type: string
          readOnly: true
        vmResId:
          description: Azure VM Resource Id of the Management server.
          type: string
          readOnly: true
        fqdn:
          description: Management server Fully Qualified Domain Name.
          type: string
          readOnly: true
        serverRoles:
          description: Represent whether the Server is a Management Server and/or Web Console Server.
          type: string
          readOnly: true
        healthState:
          description: Management server health state.
          type: string
          readOnly: true
    DomainControllerProperties:
      description: The properties of domain controller to which SCOM and SQL servers join for AuthN/AuthZ.
      type: object
      properties:
        domainName:
          description: Fully qualified domain name
          type: string
        dnsServer:
          description: 'IP address of DNS server '
          type: string
        ouPath:
          description: Organizational Unit path in which the SCOM servers will be present
          type: string
          default: ''
    DomainUserCredentials:
      description: Get Domain user name and password from key vault
      type: object
      properties:
        keyVaultUrl:
          description: Key vault url to get the domain username and password
          type: string
        userNameSecret:
          description: 'Domain user name secret '
          type: string
        passwordSecret:
          description: 'Domain Password secret '
          type: string
    GmsaDetails:
      description: Gmsa Details
      type: object
      properties:
        loadBalancerIP:
          description: Frontend IP configuration for Load Balancer, which should be an available IP in customer VNet
          type: string
        gmsaAccount:
          description: gMSA account under which context all Management Server services will run
          type: string
        managementServerGroupName:
          description: OnPrem AD Computer Group where we will join VMs for ease of management
          type: string
        dnsName:
          description: Frontend DNS name for Load Balancer which will be used by Agents to initiate communication
          type: string
    DatabaseInstanceProperties:
      description: The properties of database instance
      type: object
      properties:
        databaseInstanceId:
          description: Resource Id of existing database instance
          type: string
        databaseFqdn:
          description: Fully qualified domain name of existing database instance
          type: string
          readOnly: true
        dwDatabaseName:
          description: Name of warehouse database on database instance
          type: string
          readOnly: true
        operationalDatabaseId:
          description: Resource Id of operational database on database instance
          type: string
          readOnly: true
        dwDatabaseId:
          description: Resource Id of warehouse database on database instance
          type: string
          readOnly: true
    UserIdentity:
      description: Azure Active Directory identity configuration for a resource.
      type: object
      properties:
        principalId:
          description: The Azure Active Directory principal id.
          type: string
          readOnly: true
        clientId:
          description: The Azure Active Directory client id.
          type: string
          readOnly: true
    ManagedIdentity:
      description: Azure Active Directory identity configuration for a resource.
      type: object
      properties:
        type:
          description: The identity type
          enum:
            - None
            - UserAssigned
            - SystemAssigned
            - SystemAssigned,UserAssigned
          type: string
          x-ms-enum:
            name: ManagedIdentityType
            modelAsString: true
        principalId:
          description: System Assigned Identity ObjectId.
          type: string
          readOnly: true
        tenantId:
          description: The Azure Active Directory tenant id.
          type: string
          readOnly: true
        userAssignedIdentities:
          description: The resource ids of the user assigned identities to use
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserIdentity'
    LicenseTypeEnum:
      description: The license type associated with different SCOM infrastructure components.
      type: string
      enum:
        - None
        - AzureHybridBenefit
      x-ms-enum:
        name: hybridLicenseType
        modelAsString: true
    AzureHybridBenefitProperties:
      type: object
      description: The properties to maximize savings by using Azure Hybrid Benefit
      properties:
        scomLicenseType:
          description: SCOM license type. Maximize savings by using license you already own
          $ref: '#/components/schemas/LicenseTypeEnum'
        windowsServerLicenseType:
          description: Specifies that the image or disk that is being used was licensed on-premises. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
          $ref: '#/components/schemas/LicenseTypeEnum'
        sqlServerLicenseType:
          description: SQL Server license type. Maximize savings by using Azure Hybrid Benefit for SQL Server with license you already own
          $ref: '#/components/schemas/LicenseTypeEnum'
    MonitoringInstanceList:
      description: A paged list of SCOM managed instances
      type: object
      properties:
        value:
          description: The items on the page
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ManagedInstance'
        nextLink:
          description: URL to get the next page if any
          type: string
          readOnly: true
    MonitoringInstancePatch:
      type: object
      properties:
        identity:
          description: The Azure Active Directory identity of the SCOM instance
          $ref: '#/components/schemas/ManagedIdentity'
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Object containing updates for patch operations.
    ScalingProperties:
      type: object
      description: Properties for Scaling
      properties:
        serverCount:
          description: Required management server count
          type: integer
          format: int64
          maximum: 100
          minimum: 1
    setServerCountResponseProperties:
      type: object
      description: Properties for set server count operation
      properties:
        serverCount:
          description: Management server count
          type: integer
          format: int64
    patchServersResponseProperties:
      type: object
      description: Properties for patching servers
      properties:
        status:
          description: Status of the patch operation
          type: string
    logAnalyticsConfiguration:
      type: object
      description: Configuration for Log Analytics linking to SCOM managed instance.
      properties:
        workspaceId:
          description: The resource ID of the Log Analytics workspace to be used.
          type: string
        dataTypes:
          description: The types of data to be ingested to Log Analytics workspace.
          type: array
          items:
            type: string
            enum:
              - State
              - Performance
              - Event
              - Audit
            x-ms-enum:
              name: DataType
              modelAsString: true
        importData:
          description: A one-time optional parameter to import data of last 7 days.
          default: false
          type: boolean
    logAnalyticsUpdateConfiguration:
      type: object
      description: Updated configuration for Log Analytics linking
      properties:
        dataTypes:
          description: The types of data to be ingested to Log Analytics workspace.
          type: array
          items:
            type: string
            enum:
              - State
              - Performance
              - Event
              - Audit
            x-ms-enum:
              name: DataType
              modelAsString: true
    unlinkLogAnalyticsResponseProperties:
      type: object
      description: Properties for unlinking log analytics
      properties:
        status:
          description: Status of the unlink operation
          type: string
    MonitoredResource:
      description: A monitored resource.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        properties:
          description: The properties of a monitored resource.
          $ref: '#/components/schemas/MonitoredResourceProperties'
      type: object
    MonitoredResourceProperties:
      type: object
      description: The properties of a monitored resource.
      properties:
        resourceId:
          description: ArmId of the monitored resource.
          type: string
        resourceLocation:
          description: Location of the monitored resource.
          type: string
        computerName:
          description: ComputerName of the monitored resource.
          type: string
        domainName:
          description: The domain name associated with the monitored resource.
          type: string
        managementServerEndpoint:
          description: The management server endpoint to which the monitored resource is directed.
          type: string
          readOnly: true
        healthStatus:
          description: The health status of the monitored resource.
          type: string
          readOnly: true
        connectionStatus:
          description: The connection status of the monitored resource.
          type: string
          readOnly: true
        agentVersion:
          description: The version of the monitored resource agent version.
          type: string
          readOnly: true
        installType:
          description: Install type of monitored resource.
          type: string
          readOnly: true
        provisioningState:
          type: string
          readOnly: true
    MonitoredResources:
      type: object
      description: A paginated list of SCOM monitored resources.
      properties:
        value:
          description: The contents displayed on the page.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MonitoredResource'
        nextLink:
          description: URL to get the next page if any
          type: string
          readOnly: true
    ManagedGateway:
      description: A gateway resource.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        properties:
          description: The properties of a gateway resource.
          $ref: '#/components/schemas/ManagedGatewayProperties'
      type: object
    ManagedGatewayProperties:
      type: object
      description: The properties of a gateway resource.
      properties:
        resourceId:
          description: ArmId of the gateway to be monitored.
          type: string
        resourceLocation:
          description: Location of the gateway to be monitored.
          type: string
        computerName:
          description: ComputerName of the gateway to be monitored.
          type: string
        domainName:
          description: The domain name associated with the gateway to be monitored.
          type: string
        managementServerEndpoint:
          description: The management server endpoint to which the gateway is directed.
          type: string
          readOnly: true
        healthStatus:
          description: The health status of the gateway resource.
          type: string
          readOnly: true
        connectionStatus:
          description: The connection status of the gateway resource.
          type: string
          readOnly: true
        version:
          description: The version of the gateway resource.
          type: string
          readOnly: true
        installType:
          description: Install type of gateway resource.
          type: string
          readOnly: true
        provisioningState:
          type: string
          readOnly: true
    ManagedGateways:
      type: object
      description: A paginated list of SCOM gateways.
      properties:
        value:
          description: The contents displayed on the page.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ManagedGateway'
        nextLink:
          description: URL to get the next page if any
          type: string
          readOnly: true
  x-stackQL-resources:
    operations:
      id: azure.scom.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1operations~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations_v2:
      id: azure.scom.operations_v2
      name: operations_v2
      title: operations_v2
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Scom~1operations~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_v2/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    instances:
      id: azure.scom.instances
      name: instances
      title: instances
      methods:
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Scom~1managedInstances~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1?api-version=2023-07-07-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1?api-version=2023-07-07-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1?api-version=2023-07-07-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        scale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1setServerCount~1?api-version=2023-07-07-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch_servers:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1patchServers~1?api-version=2023-07-07-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        link_log_analytics:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1linkLogAnalytics~1?api-version=2023-07-07-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unlink_log_analytics:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1unlinkLogAnalytics~1?api-version=2023-07-07-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_log_analytics:
      id: azure.scom.instances_log_analytics
      name: instances_log_analytics
      title: instances_log_analytics
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1updateLogAnalytics~1?api-version=2023-07-07-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    monitored_resources:
      id: azure.scom.monitored_resources
      name: monitored_resources
      title: monitored_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1monitoredResources~1{monitoredResourceName}~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1monitoredResources~1{monitoredResourceName}~1?api-version=2023-07-07-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1monitoredResources~1{monitoredResourceName}~1?api-version=2023-07-07-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_managed_instance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1monitoredResources~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitored_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/monitored_resources/methods/list_by_managed_instance'
        insert:
          - $ref: '#/components/x-stackQL-resources/monitored_resources/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/monitored_resources/methods/delete'
    managed_gateways:
      id: azure.scom.managed_gateways
      name: managed_gateways
      title: managed_gateways
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1managedGateways~1{managedGatewayName}~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1managedGateways~1{managedGatewayName}~1?api-version=2023-07-07-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1managedGateways~1{managedGatewayName}~1?api-version=2023-07-07-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_managed_instance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scom~1managedInstances~1{instanceName}~1managedGateways~1?api-version=2023-07-07-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_gateways/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_gateways/methods/list_by_managed_instance'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_gateways/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_gateways/methods/delete'
    vw_instances:
      id: azure.scom.vw_instances
      name: vw_instances
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.productVersion') as product_version,
              JSON_EXTRACT(properties, '$.vNetSubnetId') as vnet_subnet_id,
              JSON_EXTRACT(properties, '$.managementEndpoints') as management_endpoints,
              JSON_EXTRACT(properties, '$.databaseInstance') as database_instance,
              JSON_EXTRACT(properties, '$.domainController') as domain_controller,
              JSON_EXTRACT(properties, '$.domainUserCredentials') as domain_user_credentials,
              JSON_EXTRACT(properties, '$.gmsaDetails') as gmsa_details,
              JSON_EXTRACT(properties, '$.azureHybridBenefit') as azure_hybrid_benefit,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.logAnalyticsProperties') as log_analytics_properties,
              JSON_EXTRACT(properties, '$.operationsStatus') as operations_status,
              subscriptionId,
              resourceGroupName,
              instanceName
              FROM azure.scom.instances
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.productVersion') as product_version,
                JSON_EXTRACT(properties, '$.vNetSubnetId') as vnet_subnet_id,
                JSON_EXTRACT(properties, '$.managementEndpoints') as management_endpoints,
                JSON_EXTRACT(properties, '$.databaseInstance') as database_instance,
                JSON_EXTRACT(properties, '$.domainController') as domain_controller,
                JSON_EXTRACT(properties, '$.domainUserCredentials') as domain_user_credentials,
                JSON_EXTRACT(properties, '$.gmsaDetails') as gmsa_details,
                JSON_EXTRACT(properties, '$.azureHybridBenefit') as azure_hybrid_benefit,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.logAnalyticsProperties') as log_analytics_properties,
                JSON_EXTRACT(properties, '$.operationsStatus') as operations_status,
                subscriptionId,
                resourceGroupName,
                instanceName
                FROM azure.scom.instances
                WHERE subscriptionId = 'replace-me';
    vw_monitored_resources:
      id: azure.scom.vw_monitored_resources
      name: vw_monitored_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.resourceId') as resource_id,
              JSON_EXTRACT(properties, '$.resourceLocation') as resource_location,
              JSON_EXTRACT(properties, '$.computerName') as computer_name,
              JSON_EXTRACT(properties, '$.domainName') as domain_name,
              JSON_EXTRACT(properties, '$.managementServerEndpoint') as management_server_endpoint,
              JSON_EXTRACT(properties, '$.healthStatus') as health_status,
              JSON_EXTRACT(properties, '$.connectionStatus') as connection_status,
              JSON_EXTRACT(properties, '$.agentVersion') as agent_version,
              JSON_EXTRACT(properties, '$.installType') as install_type,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              instanceName,
              monitoredResourceName
              FROM azure.scom.monitored_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND instanceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.resourceId') as resource_id,
                JSON_EXTRACT(properties, '$.resourceLocation') as resource_location,
                JSON_EXTRACT(properties, '$.computerName') as computer_name,
                JSON_EXTRACT(properties, '$.domainName') as domain_name,
                JSON_EXTRACT(properties, '$.managementServerEndpoint') as management_server_endpoint,
                JSON_EXTRACT(properties, '$.healthStatus') as health_status,
                JSON_EXTRACT(properties, '$.connectionStatus') as connection_status,
                JSON_EXTRACT(properties, '$.agentVersion') as agent_version,
                JSON_EXTRACT(properties, '$.installType') as install_type,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                instanceName,
                monitoredResourceName
                FROM azure.scom.monitored_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND instanceName = 'replace-me';
    vw_managed_gateways:
      id: azure.scom.vw_managed_gateways
      name: vw_managed_gateways
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.resourceId') as resource_id,
              JSON_EXTRACT(properties, '$.resourceLocation') as resource_location,
              JSON_EXTRACT(properties, '$.computerName') as computer_name,
              JSON_EXTRACT(properties, '$.domainName') as domain_name,
              JSON_EXTRACT(properties, '$.managementServerEndpoint') as management_server_endpoint,
              JSON_EXTRACT(properties, '$.healthStatus') as health_status,
              JSON_EXTRACT(properties, '$.connectionStatus') as connection_status,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.installType') as install_type,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              instanceName,
              managedGatewayName
              FROM azure.scom.managed_gateways
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND instanceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.resourceId') as resource_id,
                JSON_EXTRACT(properties, '$.resourceLocation') as resource_location,
                JSON_EXTRACT(properties, '$.computerName') as computer_name,
                JSON_EXTRACT(properties, '$.domainName') as domain_name,
                JSON_EXTRACT(properties, '$.managementServerEndpoint') as management_server_endpoint,
                JSON_EXTRACT(properties, '$.healthStatus') as health_status,
                JSON_EXTRACT(properties, '$.connectionStatus') as connection_status,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.installType') as install_type,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                instanceName,
                managedGatewayName
                FROM azure.scom.managed_gateways
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND instanceName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/operations/?api-version=2023-07-07-preview:
    get:
      tags:
        - Operations
      description: Lists all available operations on SCOM monitoring instance
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Scom/operations/?api-version=2023-07-07-preview:
    get:
      tags:
        - Operations
      description: Lists all available operations on SCOM managed instance (SCOM MI)
      operationId: Operations_ListV2
      x-ms-pageable:
        nextLinkName: nextLink
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/?api-version=2023-07-07-preview:
    get:
      operationId: Instances_ListByResourceGroup
      description: Lists all SCOM managed instances in a resource group
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - SCOM instance
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringInstanceList'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Scom/managedInstances/?api-version=2023-07-07-preview:
    get:
      operationId: Instances_ListBySubscription
      description: 'Lists all SCOM managed instances in a subscription '
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - SCOM Instances
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringInstanceList'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/?api-version=2023-07-07-preview:
    get:
      operationId: Instances_Get
      description: Get SCOM managed instance details
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInstance'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Instances_CreateOrUpdate
      description: Create or update SCOM managed instance
      tags:
        - SCOM Instances
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
        - name: validationMode
          in: query
          description: Validation mode for the SCOM managed instance
          required: false
          schema:
            type: boolean
      requestBody:
        description: SCOM Managed Instance
        required: true
        x-ms-requestBody-name: ManagedInstance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedInstance'
      responses:
        '200':
          description: Managed instance update successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInstance'
        '201':
          description: Managed instance create request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInstance'
        '202':
          description: accepted operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInstance'
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      operationId: Instances_Update
      description: Patch SCOM managed instance
      tags:
        - SCOM Instance
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      requestBody:
        description: SCOM managed instance properties update
        x-ms-requestBody-name: ManagedInstance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringInstancePatch'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInstance'
        '201':
          description: accepted operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInstance'
        '202':
          description: accepted operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInstance'
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      operationId: Instances_Delete
      description: Delete a SCOM managed instance
      tags:
        - SCOM Instances
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      responses:
        '200':
          description: The deletion operation has been successful.
        '202':
          description: Accepted. The deletion will be processed asynchronously.
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: No content. No managed instance to delete.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/setServerCount/?api-version=2023-07-07-preview:
    post:
      operationId: Instances_Scale
      description: Scaling SCOM managed instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      requestBody:
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalingProperties'
      responses:
        '200':
          description: OK. The Scaling has completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setServerCountResponseProperties'
        '202':
          description: Accepted. The Scaling will complete asyncronously.
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/patchServers/?api-version=2023-07-07-preview:
    post:
      operationId: Instances_PatchServers
      description: Update SCOM servers with latest scom software.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      responses:
        '200':
          description: The update process for SCOM Servers has been completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchServersResponseProperties'
        '202':
          description: Accepted. The Updating of SCOM Servers will complete asyncronously.
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/linkLogAnalytics/?api-version=2023-07-07-preview:
    post:
      operationId: Instances_LinkLogAnalytics
      description: Link Log Analytics workspace for SCOM monitoring instance
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      requestBody:
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logAnalyticsConfiguration'
      responses:
        '200':
          description: OK. The Log Analytics linking has completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logAnalyticsConfiguration'
        '202':
          description: Accepted. The Log Analytics linking will complete asyncronously.
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/unlinkLogAnalytics/?api-version=2023-07-07-preview:
    post:
      operationId: Instances_UnlinkLogAnalytics
      description: Unlink Log Analytics workspace for SCOM monitoring instance
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      responses:
        '200':
          description: OK. Unlinked Log Analytics association with managed instance successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unlinkLogAnalyticsResponseProperties'
        '202':
          description: Accepted. Disabling Log Analytics association with managed instance will complete asyncronously.
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/updateLogAnalytics/?api-version=2023-07-07-preview:
    post:
      operationId: Instances_UpdateLogAnalytics
      description: Update configuration for log analytics linking for SCOM monitoring instance
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      requestBody:
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logAnalyticsUpdateConfiguration'
      responses:
        '200':
          description: OK. The Log Analytics configuration update has completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logAnalyticsUpdateConfiguration'
        '202':
          description: Accepted. The Log Analytics configuration update will complete asyncronously.
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/monitoredResources/{monitoredResourceName}/?api-version=2023-07-07-preview:
    get:
      operationId: MonitoredResources_Get
      description: Retrieve the details of the monitored resource.
      tags:
        - MonitoredResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
        - $ref: '#/components/parameters/monitoredResourceName'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResource'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MonitoredResources_CreateOrUpdate
      description: Create or update a monitored resource.
      tags:
        - MonitoredResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
        - $ref: '#/components/parameters/monitoredResourceName'
      responses:
        '200':
          description: Monitored resource updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResource'
        '201':
          description: Monitored resource created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResource'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: MonitoredResources_Delete
      description: Delete a monitored resource.
      tags:
        - MonitoredResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
        - $ref: '#/components/parameters/monitoredResourceName'
      responses:
        '200':
          description: The deletion operation has been successful.
        '204':
          description: The deletion operation has been successful.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/monitoredResources/?api-version=2023-07-07-preview:
    get:
      operationId: MonitoredResources_ListByManagedInstance
      description: A comprehensive list of all monitored resources within a SCOM managed instance.
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - MonitoredResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResources'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/managedGateways/{managedGatewayName}/?api-version=2023-07-07-preview:
    get:
      operationId: ManagedGateways_Get
      description: Retrieve the details of the gateway resource.
      tags:
        - Gateway Resources
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
        - $ref: '#/components/parameters/managedGatewayName'
      responses:
        '200':
          description: Managed gateway retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedGateway'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ManagedGateways_CreateOrUpdate
      description: Create or update a gateway resource.
      tags:
        - Gateway Resources
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
        - $ref: '#/components/parameters/managedGatewayName'
      responses:
        '200':
          description: Managed gateway update successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedGateway'
        '201':
          description: Managed gateway created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedGateway'
        '202':
          description: accepted operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedGateway'
          headers:
            Location:
              schema:
                type: string
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ManagedGateways_Delete
      description: Remove a gateway resource.
      tags:
        - Gateway Resources
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
        - $ref: '#/components/parameters/managedGatewayName'
      responses:
        '200':
          description: The deletion operation has been successful.
        '204':
          description: The deletion operation has been successful.
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/managedGateways/?api-version=2023-07-07-preview:
    get:
      operationId: ManagedGateways_ListByManagedInstance
      description: A comprehensive list of all gateway resources within a SCOM managed instance.
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - Gateway Resources
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/instanceName'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedGateways'
        default:
          description: An error response providing a description of the reason for the operation's failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
