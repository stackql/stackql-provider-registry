openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Managed Applications
  description: Azure Managed Applications enable you to offer cloud solutions that are easy for consumers to deploy and operate. The publisher implements the infrastructure and provides ongoing support. The resources are deployed to a resource group thats managed by the publisher of the app.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ApplicationNameParameter:
      name: applicationName
      in: path
      description: The name of the managed application.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 64
        type: string
    ApplicationDefinitionNameParameter:
      name: applicationDefinitionName
      in: path
      description: The name of the managed application definition.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 64
        type: string
    JitRequestNameParameter:
      name: jitRequestName
      in: path
      description: The name of the JIT request.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      description: Resource information.
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Resource ID
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        location:
          type: string
          description: Resource location
        id:
          readOnly: true
          type: string
          description: Resource ID
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      type: object
      properties:
        name:
          type: string
          description: The SKU name.
        tier:
          type: string
          description: The SKU tier.
        size:
          type: string
          description: The SKU size.
        family:
          type: string
          description: The SKU family.
        model:
          type: string
          description: The SKU model.
        capacity:
          type: integer
          format: int32
          description: The SKU capacity.
      required:
        - name
      description: SKU for the resource.
    Identity:
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/userAssignedResourceIdentity'
          description: 'The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: Identity for the resource.
    Plan:
      type: object
      properties:
        name:
          type: string
          description: The plan name.
        publisher:
          type: string
          description: The publisher ID.
        product:
          type: string
          description: The product code.
        promotionCode:
          type: string
          description: The promotion code.
        version:
          type: string
          description: The plan's version.
      required:
        - name
        - publisher
        - product
        - version
      description: Plan for the managed application.
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Application:
      required:
        - properties
        - kind
      description: Information about managed application.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationProperties'
          description: The managed application properties.
        plan:
          $ref: '#/components/schemas/Plan'
          description: The plan information.
        kind:
          type: string
          description: The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
          pattern: ^[-\w\._,\(\)]+$
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        managedBy:
          type: string
          description: ID of the resource that manages this resource.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the resource.
      type: object
    ApplicationPatchable:
      description: Information about managed application.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationProperties'
          description: The managed application properties.
        plan:
          $ref: '#/components/schemas/PlanPatchable'
          description: The plan information.
        kind:
          type: string
          description: The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
          pattern: ^[-\w\._,\(\)]+$
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        managedBy:
          type: string
          description: ID of the resource that manages this resource.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the resource.
      type: object
    ApplicationDefinition:
      required:
        - properties
      description: Information about managed application definition.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationDefinitionProperties'
          description: The managed application definition properties.
        managedBy:
          type: string
          description: ID of the resource that manages this resource.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the resource.
      type: object
    ApplicationProperties:
      type: object
      properties:
        managedResourceGroupId:
          type: string
          description: The managed resource group Id.
        applicationDefinitionId:
          type: string
          description: The fully qualified path of managed application definition Id.
        parameters:
          type: object
          description: Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
        outputs:
          readOnly: true
          type: object
          description: Name and value pairs that define the managed application outputs.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The managed application provisioning state.
        billingDetails:
          readOnly: true
          $ref: '#/components/schemas/ApplicationBillingDetailsDefinition'
          description: The managed application billing details.
        jitAccessPolicy:
          $ref: '#/components/schemas/ApplicationJitAccessPolicy'
          description: The managed application Jit access policy.
        publisherTenantId:
          type: string
          description: The publisher tenant Id.
          readOnly: true
        authorizations:
          description: The  read-only authorizations property that is retrieved from the application package.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationAuthorization'
          x-ms-identifiers:
            - principalId
            - roleDefinitionId
          readOnly: true
        managementMode:
          $ref: '#/components/schemas/ApplicationManagementMode'
          description: The managed application management mode.
          readOnly: true
        customerSupport:
          $ref: '#/components/schemas/ApplicationPackageContact'
          description: The read-only customer support property that is retrieved from the application package.
          readOnly: true
        supportUrls:
          $ref: '#/components/schemas/ApplicationPackageSupportUrls'
          description: The read-only support URLs property that is retrieved from the application package.
          readOnly: true
        artifacts:
          description: The collection of managed application artifacts.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationArtifact'
          x-ms-identifiers:
            - name
            - uri
          readOnly: true
        createdBy:
          readOnly: true
          $ref: '#/components/schemas/ApplicationClientDetails'
          description: The client entity that created the JIT request.
        updatedBy:
          readOnly: true
          $ref: '#/components/schemas/ApplicationClientDetails'
          description: The client entity that last updated the JIT request.
      description: The managed application properties.
    ApplicationDefinitionProperties:
      type: object
      properties:
        lockLevel:
          $ref: '#/components/schemas/ApplicationLockLevel'
          description: The managed application lock level.
        displayName:
          type: string
          description: The managed application definition display name.
        isEnabled:
          type: boolean
          description: A value indicating whether the package is enabled or not.
        authorizations:
          description: The managed application provider authorizations.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationAuthorization'
          x-ms-identifiers:
            - principalId
            - roleDefinitionId
        artifacts:
          description: The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDefinitionArtifact'
          x-ms-identifiers:
            - name
            - uri
        description:
          type: string
          description: The managed application definition description.
        packageFileUri:
          type: string
          description: The managed application definition package file Uri. Use this element
        storageAccountId:
          type: string
          description: The storage account id for bring your own storage scenario.
        mainTemplate:
          type: object
          description: The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
        createUiDefinition:
          type: object
          description: The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
        notificationPolicy:
          $ref: '#/components/schemas/ApplicationNotificationPolicy'
          description: The managed application notification policy.
        lockingPolicy:
          $ref: '#/components/schemas/ApplicationPackageLockingPolicyDefinition'
          description: The managed application locking policy.
        deploymentPolicy:
          $ref: '#/components/schemas/ApplicationDeploymentPolicy'
          description: The managed application deployment policy.
        managementPolicy:
          $ref: '#/components/schemas/ApplicationManagementPolicy'
          description: The managed application management policy that determines publisher's access to the managed resource group.
        policies:
          description: The managed application provider policies.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPolicy'
          x-ms-identifiers:
            - name
            - policyDefinitionId
      required:
        - lockLevel
      description: The managed application definition properties.
    ApplicationDefinitionPatchable:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application definition tags
      description: Information about an application definition request.
    PlanPatchable:
      type: object
      properties:
        name:
          type: string
          description: The plan name.
        publisher:
          type: string
          description: The publisher ID.
        product:
          type: string
          description: The product code.
        promotionCode:
          type: string
          description: The promotion code.
        version:
          type: string
          description: The plan's version.
      description: Plan for the managed application.
    GenericResource:
      description: Resource information.
      properties:
        managedBy:
          type: string
          description: ID of the resource that manages this resource.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the resource.
        id:
          readOnly: true
          type: string
          description: Resource ID
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    userAssignedResourceIdentity:
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of user assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id of user assigned identity.
      description: Represents the user assigned identity that is contained within the UserAssignedIdentities dictionary on ResourceIdentity
    ApplicationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Application'
          description: The array of managed applications.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of managed applications.
    ApplicationDefinitionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDefinition'
          description: The array of managed application definitions.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of managed application definitions.
    ProvisioningState:
      description: Provisioning status of the managed application.
      readOnly: true
      enum:
        - NotSpecified
        - Accepted
        - Running
        - Deleting
        - Deleted
        - Canceled
        - Failed
        - Succeeded
        - Updating
      type: string
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    ApplicationLockLevel:
      description: The managed application lock level.
      enum:
        - CanNotDelete
        - ReadOnly
        - None
      type: string
      x-ms-enum:
        name: ApplicationLockLevel
        modelAsString: false
    ApplicationArtifactType:
      description: The managed application artifact type.
      enum:
        - NotSpecified
        - Template
        - Custom
      type: string
      x-ms-enum:
        name: ApplicationArtifactType
        modelAsString: false
    ApplicationDefinitionArtifactName:
      description: The managed application artifact name.
      enum:
        - NotSpecified
        - ApplicationResourceTemplate
        - CreateUiDefinition
        - MainTemplateParameters
      type: string
      x-ms-enum:
        name: ApplicationDefinitionArtifactName
        modelAsString: true
    ApplicationArtifactName:
      description: The managed application artifact name.
      enum:
        - NotSpecified
        - ViewDefinition
        - Authorizations
        - CustomRoleDefinition
      type: string
      x-ms-enum:
        name: ApplicationArtifactName
        modelAsString: true
    ApplicationArtifact:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ApplicationArtifactName'
          description: The managed application artifact name.
        uri:
          type: string
          description: The managed application artifact blob uri.
        type:
          $ref: '#/components/schemas/ApplicationArtifactType'
          description: The managed application artifact type.
      required:
        - name
        - type
        - uri
      description: Managed application artifact.
    ApplicationDefinitionArtifact:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ApplicationDefinitionArtifactName'
          description: The managed application definition artifact name.
        uri:
          type: string
          description: The managed application definition artifact blob uri.
        type:
          $ref: '#/components/schemas/ApplicationArtifactType'
          description: The managed application definition artifact type.
      required:
        - name
        - type
        - uri
      description: Application definition artifact.
    ApplicationNotificationPolicy:
      type: object
      properties:
        notificationEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationNotificationEndpoint'
          x-ms-identifiers:
            - uri
          description: The managed application notification endpoint.
      required:
        - notificationEndpoints
      description: Managed application notification policy.
    ApplicationNotificationEndpoint:
      type: object
      properties:
        uri:
          type: string
          description: The managed application notification endpoint uri.
      required:
        - uri
      description: Managed application notification endpoint.
    ApplicationPackageLockingPolicyDefinition:
      type: object
      properties:
        allowedActions:
          type: array
          items:
            type: string
          description: The deny assignment excluded actions.
        allowedDataActions:
          type: array
          items:
            type: string
          description: The deny assignment excluded data actions.
      description: Managed application locking policy.
    ApplicationDeploymentPolicy:
      type: object
      properties:
        deploymentMode:
          $ref: '#/components/schemas/DeploymentMode'
          description: The managed application deployment mode.
      required:
        - deploymentMode
      description: Managed application deployment policy.
    ApplicationManagementPolicy:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ApplicationManagementMode'
          description: The managed application management mode.
      description: Managed application management policy.
    ApplicationPolicy:
      type: object
      properties:
        name:
          type: string
          description: The policy name
        policyDefinitionId:
          type: string
          description: The policy definition Id.
        parameters:
          type: string
          description: The policy parameters.
      description: Managed application policy.
    ApplicationAuthorization:
      type: object
      properties:
        principalId:
          type: string
          description: The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
        roleDefinitionId:
          type: string
          description: The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
      required:
        - principalId
        - roleDefinitionId
      description: The managed application provider authorization.
    ApplicationPackageContact:
      type: object
      properties:
        contactName:
          type: string
          description: The contact name.
        email:
          type: string
          description: The contact email.
        phone:
          type: string
          description: The contact phone number.
      required:
        - email
        - phone
      description: The application package contact information.
    ApplicationPackageSupportUrls:
      type: object
      properties:
        publicAzure:
          type: string
          description: The public azure support URL.
        governmentCloud:
          type: string
          description: The government cloud support URL.
      description: The appliance package support URLs.
    ApplicationBillingDetailsDefinition:
      type: object
      properties:
        resourceUsageId:
          type: string
          description: The managed application resource usage Id.
      description: Managed application billing details definition.
    ApplicationJitAccessPolicy:
      type: object
      properties:
        jitAccessEnabled:
          type: boolean
          description: Whether the JIT access is enabled.
        jitApprovalMode:
          $ref: '#/components/schemas/JitApprovalMode'
          description: JIT approval mode.
        jitApprovers:
          type: array
          items:
            $ref: '#/components/schemas/JitApproverDefinition'
          description: The JIT approvers
        maximumJitAccessDuration:
          type: string
          description: The maximum duration JIT access is granted. This is an ISO8601 time period value.
      required:
        - jitAccessEnabled
      description: Managed application Jit access policy.
    JitRequestDefinition:
      description: Information about JIT request definition.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JitRequestProperties'
          description: The JIT request properties.
        id:
          readOnly: true
          type: string
          description: Resource ID
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    JitRequestPatchable:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Jit request tags
      description: Information about JIT request.
    JitRequestDefinitionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JitRequestDefinition'
          description: The array of Jit request definition.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of JIT requests.
    JitRequestProperties:
      type: object
      properties:
        applicationResourceId:
          type: string
          description: The parent application id.
        publisherTenantId:
          readOnly: true
          type: string
          description: The publisher tenant id.
        jitAuthorizationPolicies:
          description: The JIT authorization policies.
          type: array
          items:
            $ref: '#/components/schemas/JitAuthorizationPolicies'
          x-ms-identifiers:
            - principalId
            - roleDefinitionId
        jitSchedulingPolicy:
          $ref: '#/components/schemas/JitSchedulingPolicy'
          description: The JIT request properties.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The JIT request provisioning state.
        jitRequestState:
          readOnly: true
          $ref: '#/components/schemas/JitRequestState'
          description: The JIT request state.
        createdBy:
          readOnly: true
          $ref: '#/components/schemas/ApplicationClientDetails'
          description: The client entity that created the JIT request.
        updatedBy:
          readOnly: true
          $ref: '#/components/schemas/ApplicationClientDetails'
          description: The client entity that last updated the JIT request.
      required:
        - applicationResourceId
        - jitAuthorizationPolicies
        - jitSchedulingPolicy
      description: Information about JIT request properties
    JitAuthorizationPolicies:
      type: object
      properties:
        principalId:
          type: string
          description: The the principal id that will be granted JIT access.
        roleDefinitionId:
          type: string
          description: The role definition id that will be granted to the Principal.
      required:
        - principalId
        - roleDefinitionId
      description: The JIT authorization policies.
    JitSchedulingPolicy:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/JitSchedulingType'
          description: The type of JIT schedule.
        duration:
          type: string
          format: duration
          title: The required duration of the JIT request.
        startTime:
          type: string
          format: date-time
          description: The start time of the request.
      required:
        - type
        - duration
        - startTime
      description: The JIT scheduling policies.
    JitApprovalMode:
      description: The Jit approval mode.
      enum:
        - NotSpecified
        - AutoApprove
        - ManualApprove
      type: string
      x-ms-enum:
        name: JitApprovalMode
        modelAsString: true
    JitApproverDefinition:
      type: object
      properties:
        id:
          type: string
          description: The approver service principal Id.
        type:
          type: string
          description: The approver type.
          enum:
            - user
            - group
          x-ms-enum:
            name: JitApproverType
            modelAsString: true
        displayName:
          type: string
          description: The approver display name.
      required:
        - id
      description: JIT approver definition.
    ApplicationClientDetails:
      type: object
      readOnly: true
      properties:
        oid:
          type: string
          description: The client Oid.
        puid:
          type: string
          description: The client Puid
        applicationId:
          type: string
          description: The client application Id.
      description: The application client details to track the entity creating/updating the managed app resource.
    JitRequestState:
      description: The JIT request state.
      readOnly: true
      enum:
        - NotSpecified
        - Pending
        - Approved
        - Denied
        - Failed
        - Canceled
        - Expired
        - Timeout
      type: string
      x-ms-enum:
        name: JitRequestState
        modelAsString: true
    JitSchedulingType:
      description: The JIT request scheduling type.
      enum:
        - NotSpecified
        - Once
        - Recurring
      type: string
      x-ms-enum:
        name: JitSchedulingType
        modelAsString: true
    DeploymentMode:
      description: The deployment mode.
      enum:
        - NotSpecified
        - Incremental
        - Complete
      type: string
      x-ms-enum:
        name: DeploymentMode
        modelAsString: true
    ApplicationManagementMode:
      description: The management mode.
      enum:
        - NotSpecified
        - Unmanaged
        - Managed
      type: string
      x-ms-enum:
        name: ApplicationManagementMode
        modelAsString: true
    UpdateAccessDefinition:
      properties:
        approver:
          type: string
          description: The approver name.
        metadata:
          $ref: '#/components/schemas/JitRequestMetadata'
          description: The JIT request metadata.
        status:
          $ref: '#/components/schemas/Status'
          description: The JIT status.
        subStatus:
          $ref: '#/components/schemas/SubStatus'
          description: The JIT status.
      required:
        - metadata
        - status
        - subStatus
      description: Update access request definition.
      type: object
    JitRequestMetadata:
      properties:
        originRequestId:
          type: string
          description: The origin request id.
        requestorId:
          type: string
          description: The requestor id.
        tenantDisplayName:
          type: string
          description: The publisher's tenant name.
        subjectDisplayName:
          type: string
          description: The subject display name.
      description: The JIT request metadata.
      type: object
    Status:
      description: The JIT status.
      enum:
        - NotSpecified
        - Elevate
        - Remove
      type: string
      x-ms-enum:
        name: Status
        modelAsString: true
    SubStatus:
      description: The sub status.
      enum:
        - NotSpecified
        - Approved
        - Denied
        - Failed
        - Expired
        - Timeout
      type: string
      x-ms-enum:
        name: Substatus
        modelAsString: true
    ListTokenRequest:
      properties:
        authorizationAudience:
          type: string
          description: The authorization audience.
        userAssignedIdentities:
          description: The user assigned identities.
          type: array
          items:
            $ref: '#/components/schemas/UserAssignedIdentity'
      description: List token request body.
      type: object
    ManagedIdentityTokenResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ManagedIdentityToken'
          description: The array of managed identity tokens.
      description: The array of managed identity tokens.
      type: object
    ManagedIdentityToken:
      properties:
        accessToken:
          type: string
          description: The requested access token.
        expiresIn:
          type: string
          description: The number of seconds the access token will be valid.
        expiresOn:
          type: string
          description: The timespan when the access token expires. This is represented as the number of seconds from epoch.
        notBefore:
          type: string
          description: The timespan when the access token takes effect. This is represented as the number of seconds from epoch.
        authorizationAudience:
          type: string
          description: The aud (audience) the access token was request for. This is the same as what was provided in the listTokens request.
        resourceId:
          type: string
          description: The Azure resource ID for the issued token. This is either the managed application ID or the user-assigned identity ID.
        tokenType:
          type: string
          description: The type of the token.
      description: The managed identity token for the managed app resource.
      type: object
    UserAssignedIdentity:
      type: string
      description: The fully qualified resource id of user assigned identity.
    AllowedUpgradePlansResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
          description: The array of plans.
      description: The array of plan.
      type: object
  x-stackQL-resources:
    operations:
      id: azure.managed_applications.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Solutions~1operations?api-version=2021-07-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    applications:
      id: azure.managed_applications.applications
      name: applications
      title: applications
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}?api-version=2021-07-01/get'
            operationId: Applications_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Application
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}?api-version=2021-07-01/delete'
            operationId: Applications_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}?api-version=2021-07-01/put'
            operationId: Applications_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Application
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}?api-version=2021-07-01/patch'
            operationId: Applications_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationPatchable
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications?api-version=2021-07-01/get'
            operationId: Applications_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Solutions~1applications?api-version=2021-07-01/get'
            operationId: Applications_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationListResult
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1{applicationId}?api-version=2021-07-01/get'
            operationId: Applications_GetById
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Application
        delete_by_id:
          operation:
            $ref: '#/paths/~1{applicationId}?api-version=2021-07-01/delete'
            operationId: Applications_DeleteById
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_by_id:
          operation:
            $ref: '#/paths/~1{applicationId}?api-version=2021-07-01/patch'
            operationId: Applications_UpdateById
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationPatchable
        refresh_permissions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}~1refreshPermissions?api-version=2021-07-01/post'
            operationId: Applications_RefreshPermissions
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_allowed_upgrade_plans:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}~1listAllowedUpgradePlans?api-version=2021-07-01/post'
            operationId: Applications_ListAllowedUpgradePlans
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AllowedUpgradePlansResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/applications/methods/get'
          - $ref: '#/components/x-stackQL-resources/applications/methods/list_allowed_upgrade_plans'
          - $ref: '#/components/x-stackQL-resources/applications/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/applications/methods/list_by_subscription'
          - $ref: '#/components/x-stackQL-resources/applications/methods/get_by_id'
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete'
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_by_id'
    application_definitions:
      id: azure.managed_applications.application_definitions
      name: application_definitions
      title: application_definitions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applicationDefinitions~1{applicationDefinitionName}?api-version=2021-07-01/get'
            operationId: ApplicationDefinitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationDefinition
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applicationDefinitions~1{applicationDefinitionName}?api-version=2021-07-01/delete'
            operationId: ApplicationDefinitions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applicationDefinitions~1{applicationDefinitionName}?api-version=2021-07-01/put'
            operationId: ApplicationDefinitions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationDefinition
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applicationDefinitions~1{applicationDefinitionName}?api-version=2021-07-01/patch'
            operationId: ApplicationDefinitions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationDefinition
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applicationDefinitions?api-version=2021-07-01/get'
            operationId: ApplicationDefinitions_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationDefinitionListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Solutions~1applicationDefinitions?api-version=2021-07-01/get'
            operationId: ApplicationDefinitions_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationDefinitionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_definitions/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/application_definitions/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_definitions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/application_definitions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_definitions/methods/delete'
    applications_by_ids:
      id: azure.managed_applications.applications_by_ids
      name: applications_by_ids
      title: applications_by_ids
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1{applicationId}?api-version=2021-07-01/put'
            operationId: ApplicationsById_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Application
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/applications_by_ids/methods/create_or_update'
        update: []
        replace: []
        delete: []
    jit_requests:
      id: azure.managed_applications.jit_requests
      name: jit_requests
      title: jit_requests
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1jitRequests~1{jitRequestName}?api-version=2021-07-01/get'
            operationId: JitRequests_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JitRequestDefinition
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1jitRequests~1{jitRequestName}?api-version=2021-07-01/put'
            operationId: jitRequests_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JitRequestDefinition
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1jitRequests~1{jitRequestName}?api-version=2021-07-01/patch'
            operationId: JitRequests_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JitRequestDefinition
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1jitRequests~1{jitRequestName}?api-version=2021-07-01/delete'
            operationId: jitRequests_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Solutions~1jitRequests?api-version=2021-07-01/get'
            operationId: jitRequests_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JitRequestDefinitionListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1jitRequests?api-version=2021-07-01/get'
            operationId: jitRequests_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JitRequestDefinitionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jit_requests/methods/get'
          - $ref: '#/components/x-stackQL-resources/jit_requests/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/jit_requests/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/jit_requests/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/jit_requests/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jit_requests/methods/delete'
    applications_accesses:
      id: azure.managed_applications.applications_accesses
      name: applications_accesses
      title: applications_accesses
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}~1updateAccess?api-version=2021-07-01/post'
            operationId: ApplicationsAccess_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    applications_tokens:
      id: azure.managed_applications.applications_tokens
      name: applications_tokens
      title: applications_tokens
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Solutions~1applications~1{applicationName}~1listTokens?api-version=2021-07-01/post'
            operationId: ApplicationsTokens_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedIdentityTokenResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/applications_tokens/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_applications:
      id: azure.managed_applications.vw_applications
      name: vw_applications
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              plan as plan,
              kind as kind,
              identity as identity,
              managedBy as managed_by,
              sku as sku,
              JSON_EXTRACT(properties, '$.managedResourceGroupId') as "managed_resource_group_id",
              JSON_EXTRACT(properties, '$.applicationDefinitionId') as "application_definition_id",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.billingDetails') as "billing_details",
              JSON_EXTRACT(properties, '$.jitAccessPolicy') as "jit_access_policy",
              JSON_EXTRACT(properties, '$.publisherTenantId') as "publisher_tenant_id",
              JSON_EXTRACT(properties, '$.authorizations') as "authorizations",
              JSON_EXTRACT(properties, '$.managementMode') as "management_mode",
              JSON_EXTRACT(properties, '$.customerSupport') as "customer_support",
              JSON_EXTRACT(properties, '$.supportUrls') as "support_urls",
              JSON_EXTRACT(properties, '$.artifacts') as "artifacts",
              JSON_EXTRACT(properties, '$.createdBy') as "created_by",
              JSON_EXTRACT(properties, '$.updatedBy') as "updated_by",
              subscriptionId,
              resourceGroupName,
              applicationName,
              applicationId
              FROM azure.managed_applications.applications
              WHERE applicationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                plan as plan,
                kind as kind,
                identity as identity,
                managedBy as managed_by,
                sku as sku,
                json_extract_path_text(properties, '$.managedResourceGroupId') as "managed_resource_group_id",
                json_extract_path_text(properties, '$.applicationDefinitionId') as "application_definition_id",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.billingDetails') as "billing_details",
                json_extract_path_text(properties, '$.jitAccessPolicy') as "jit_access_policy",
                json_extract_path_text(properties, '$.publisherTenantId') as "publisher_tenant_id",
                json_extract_path_text(properties, '$.authorizations') as "authorizations",
                json_extract_path_text(properties, '$.managementMode') as "management_mode",
                json_extract_path_text(properties, '$.customerSupport') as "customer_support",
                json_extract_path_text(properties, '$.supportUrls') as "support_urls",
                json_extract_path_text(properties, '$.artifacts') as "artifacts",
                json_extract_path_text(properties, '$.createdBy') as "created_by",
                json_extract_path_text(properties, '$.updatedBy') as "updated_by",
                subscriptionId,
                resourceGroupName,
                applicationName,
                applicationId
                FROM azure.managed_applications.applications
                WHERE applicationId = 'replace-me';
    vw_application_definitions:
      id: azure.managed_applications.vw_application_definitions
      name: vw_application_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              managedBy as managed_by,
              sku as sku,
              JSON_EXTRACT(properties, '$.lockLevel') as "lock_level",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.isEnabled') as "is_enabled",
              JSON_EXTRACT(properties, '$.authorizations') as "authorizations",
              JSON_EXTRACT(properties, '$.artifacts') as "artifacts",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.packageFileUri') as "package_file_uri",
              JSON_EXTRACT(properties, '$.storageAccountId') as "storage_account_id",
              JSON_EXTRACT(properties, '$.mainTemplate') as "main_template",
              JSON_EXTRACT(properties, '$.createUiDefinition') as "create_ui_definition",
              JSON_EXTRACT(properties, '$.notificationPolicy') as "notification_policy",
              JSON_EXTRACT(properties, '$.lockingPolicy') as "locking_policy",
              JSON_EXTRACT(properties, '$.deploymentPolicy') as "deployment_policy",
              JSON_EXTRACT(properties, '$.managementPolicy') as "management_policy",
              JSON_EXTRACT(properties, '$.policies') as "policies",
              subscriptionId,
              resourceGroupName,
              applicationDefinitionName
              FROM azure.managed_applications.application_definitions
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                managedBy as managed_by,
                sku as sku,
                json_extract_path_text(properties, '$.lockLevel') as "lock_level",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.isEnabled') as "is_enabled",
                json_extract_path_text(properties, '$.authorizations') as "authorizations",
                json_extract_path_text(properties, '$.artifacts') as "artifacts",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.packageFileUri') as "package_file_uri",
                json_extract_path_text(properties, '$.storageAccountId') as "storage_account_id",
                json_extract_path_text(properties, '$.mainTemplate') as "main_template",
                json_extract_path_text(properties, '$.createUiDefinition') as "create_ui_definition",
                json_extract_path_text(properties, '$.notificationPolicy') as "notification_policy",
                json_extract_path_text(properties, '$.lockingPolicy') as "locking_policy",
                json_extract_path_text(properties, '$.deploymentPolicy') as "deployment_policy",
                json_extract_path_text(properties, '$.managementPolicy') as "management_policy",
                json_extract_path_text(properties, '$.policies') as "policies",
                subscriptionId,
                resourceGroupName,
                applicationDefinitionName
                FROM azure.managed_applications.application_definitions
                WHERE subscriptionId = 'replace-me';
    vw_jit_requests:
      id: azure.managed_applications.vw_jit_requests
      name: vw_jit_requests
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.applicationResourceId') as "application_resource_id",
              JSON_EXTRACT(properties, '$.publisherTenantId') as "publisher_tenant_id",
              JSON_EXTRACT(properties, '$.jitAuthorizationPolicies') as "jit_authorization_policies",
              JSON_EXTRACT(properties, '$.jitSchedulingPolicy') as "jit_scheduling_policy",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.jitRequestState') as "jit_request_state",
              JSON_EXTRACT(properties, '$.createdBy') as "created_by",
              JSON_EXTRACT(properties, '$.updatedBy') as "updated_by",
              subscriptionId,
              resourceGroupName,
              jitRequestName
              FROM azure.managed_applications.jit_requests
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.applicationResourceId') as "application_resource_id",
                json_extract_path_text(properties, '$.publisherTenantId') as "publisher_tenant_id",
                json_extract_path_text(properties, '$.jitAuthorizationPolicies') as "jit_authorization_policies",
                json_extract_path_text(properties, '$.jitSchedulingPolicy') as "jit_scheduling_policy",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.jitRequestState') as "jit_request_state",
                json_extract_path_text(properties, '$.createdBy') as "created_by",
                json_extract_path_text(properties, '$.updatedBy') as "updated_by",
                subscriptionId,
                resourceGroupName,
                jitRequestName
                FROM azure.managed_applications.jit_requests
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.Solutions/operations?api-version=2021-07-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Microsoft.Solutions REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ListOperations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}?api-version=2021-07-01:
    get:
      tags:
        - Applications
      operationId: Applications_Get
      description: Gets the managed application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      responses:
        '200':
          description: OK - Returns the managed application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '404':
          description: NotFound.
          x-ms-error-response: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Applications
      operationId: Applications_Delete
      description: Deletes the managed application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    put:
      tags:
        - Applications
      operationId: Applications_CreateOrUpdate
      description: Creates or updates a managed application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      requestBody:
        description: Parameters supplied to the create or update a managed application.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '200':
          description: OK - Returns information about the managed application, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '201':
          description: Created - Returns information about the managed application, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Applications
      operationId: Applications_Update
      description: Updates an existing managed application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      requestBody:
        description: Parameters supplied to update an existing managed application.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationPatchable'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPatchable'
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPatchable'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}?api-version=2021-07-01:
    get:
      tags:
        - ApplicationDefinitions
      operationId: ApplicationDefinitions_Get
      description: Gets the managed application definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationDefinitionNameParameter'
      responses:
        '200':
          description: OK - Returns the managed application definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDefinition'
        '404':
          description: NotFound.
          x-ms-error-response: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApplicationDefinitions
      operationId: ApplicationDefinitions_Delete
      description: Deletes the managed application definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationDefinitionNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApplicationDefinitions
      operationId: ApplicationDefinitions_CreateOrUpdate
      description: Creates or updates a managed application definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationDefinitionNameParameter'
      requestBody:
        description: Parameters supplied to the create or update an managed application definition.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDefinition'
      responses:
        '200':
          description: OK - Returns information about the managed application definition, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDefinition'
        '201':
          description: Created - Returns information about the managed application definition, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ApplicationDefinitions
      operationId: ApplicationDefinitions_Update
      description: Updates the managed application definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationDefinitionNameParameter'
      requestBody:
        description: Parameters supplied to the update a managed application definition.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDefinitionPatchable'
      responses:
        '200':
          description: OK - Returns information about the managed application definition, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions?api-version=2021-07-01:
    get:
      tags:
        - ApplicationDefinitions
      operationId: ApplicationDefinitions_ListByResourceGroup
      description: Lists the managed application definitions in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK - Returns an array of managed application definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applicationDefinitions?api-version=2021-07-01:
    get:
      tags:
        - ApplicationDefinitions
      operationId: ApplicationDefinitions_ListBySubscription
      description: Lists all the application definitions within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of managed application definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications?api-version=2021-07-01:
    get:
      tags:
        - Applications
      operationId: Applications_ListByResourceGroup
      description: Lists all the applications within a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK - Returns an array of applications.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applications?api-version=2021-07-01:
    get:
      tags:
        - Applications
      operationId: Applications_ListBySubscription
      description: Lists all the applications within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of applications.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{applicationId}?api-version=2021-07-01:
    get:
      tags:
        - Applications
      operationId: Applications_GetById
      description: Gets the managed application.
      parameters:
        - name: applicationId
          in: path
          description: The fully qualified ID of the managed application, including the managed application name and the managed application resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/applications/{application-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns the managed application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '404':
          description: NotFound.
          x-ms-error-response: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Applications
      operationId: Applications_DeleteById
      description: Deletes the managed application.
      parameters:
        - name: applicationId
          in: path
          description: The fully qualified ID of the managed application, including the managed application name and the managed application resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/applications/{application-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: NoContent
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    put:
      tags:
        - Applications
      operationId: ApplicationsById_CreateOrUpdate
      description: Creates or updates a managed application.
      parameters:
        - name: applicationId
          in: path
          description: The fully qualified ID of the managed application, including the managed application name and the managed application resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/applications/{application-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create or update a managed application.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '200':
          description: OK - Returns information about the managed application, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '201':
          description: Created - Returns information about the managed application, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-original-operationId: Applications_CreateOrUpdateById
    patch:
      tags:
        - Applications
      operationId: Applications_UpdateById
      description: Updates an existing managed application.
      parameters:
        - name: applicationId
          in: path
          description: The fully qualified ID of the managed application, including the managed application name and the managed application resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/applications/{application-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update an existing managed application.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationPatchable'
      responses:
        '200':
          description: OK - Returns information about the managed application, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPatchable'
        '202':
          description: Accepted - Returns information about the managed application, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPatchable'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}?api-version=2021-07-01:
    get:
      tags:
        - JitRequests
      operationId: JitRequests_Get
      description: Gets the JIT request.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JitRequestNameParameter'
      responses:
        '200':
          description: OK - Returns the JIT request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JitRequestDefinition'
        '404':
          description: NotFound.
          x-ms-error-response: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - JitRequests
      operationId: jitRequests_CreateOrUpdate
      description: Creates or updates the JIT request.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JitRequestNameParameter'
      requestBody:
        description: Parameters supplied to the update JIT request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JitRequestDefinition'
      responses:
        '200':
          description: OK - Returns information about the JIT request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JitRequestDefinition'
        '201':
          description: Created - Returns information about the JIT request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JitRequestDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - JitRequests
      operationId: JitRequests_Update
      description: Updates the JIT request.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JitRequestNameParameter'
      requestBody:
        description: Parameters supplied to the update JIT request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JitRequestPatchable'
      responses:
        '200':
          description: Ok - Returns information about the JIT request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JitRequestDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - JitRequests
      operationId: jitRequests_Delete
      description: Deletes the JIT request.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JitRequestNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Solutions/jitRequests?api-version=2021-07-01:
    get:
      tags:
        - JitRequests
      operationId: jitRequests_ListBySubscription
      description: Lists all JIT requests within the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of JIT requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JitRequestDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests?api-version=2021-07-01:
    get:
      tags:
        - JitRequests
      operationId: jitRequests_ListByResourceGroup
      description: Lists all JIT requests within the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK - Returns an array of JIT requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JitRequestDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}/refreshPermissions?api-version=2021-07-01:
    post:
      tags:
        - Applications
      operationId: Applications_RefreshPermissions
      description: Refresh Permissions for application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}/listAllowedUpgradePlans?api-version=2021-07-01:
    post:
      tags:
        - Applications
      operationId: Applications_ListAllowedUpgradePlans
      description: List allowed upgrade plans for application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      responses:
        '200':
          description: OK - Returns an array of managed identity tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedUpgradePlansResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}/updateAccess?api-version=2021-07-01:
    post:
      tags:
        - Applications
      operationId: ApplicationsAccess_Update
      description: Update access for application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: applicationName
          in: path
          description: The name of the managed application.
          required: true
          schema:
            minLength: 3
            maxLength: 64
            type: string
      requestBody:
        description: Request body parameters to list tokens.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessDefinition'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccessDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: Applications_UpdateAccess
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}/listTokens?api-version=2021-07-01:
    post:
      tags:
        - Applications
      operationId: ApplicationsTokens_List
      description: List tokens for application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: applicationName
          in: path
          description: The name of the managed application.
          required: true
          schema:
            minLength: 3
            maxLength: 64
            type: string
      requestBody:
        description: Request body parameters to list tokens.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTokenRequest'
      responses:
        '200':
          description: OK - Returns an array of managed identity tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedIdentityTokenResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Applications_ListTokens
