openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure CDN
  description: The Azure Content Delivery Network (CDN) caches static web content at strategically placed locations to provide maximum throughput for delivering content to users. The CDN offers developers a global solution for delivering high-bandwidth content by caching the content at physical nodes across the world.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Azure Subscription ID.
      required: true
      schema:
        type: string
    apiVersionParameter:
      name: api-version
      in: query
      description: Version of the API to be used with the client request. Current version is 2024-02-01.
      required: false
      schema:
        type: string
    PolicyNameParameter:
      name: policyName
      in: path
      description: The name of the CdnWebApplicationFirewallPolicy.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 128
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of the Resource group within the Azure subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
        minLength: 1
        maxLength: 80
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of the Resource group within the Azure subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    profileNameParameter:
      name: profileName
      in: path
      description: Name of the Azure Front Door Standard or Azure Front Door Premium which is unique within the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 260
        type: string
  schemas:
    CdnWebApplicationFirewallPolicyList:
      description: Defines a list of WebApplicationFirewallPolicies for Azure CDN. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
          description: List of Azure CDN WebApplicationFirewallPolicies within a resource group.
        nextLink:
          type: string
          description: URL to get the next set of WebApplicationFirewallPolicy objects if there are any.
      type: object
    CdnWebApplicationFirewallPolicy:
      description: Defines web application firewall policy for Azure CDN.
      required:
        - sku
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of the web application firewall policy.
          $ref: '#/components/schemas/CdnWebApplicationFirewallPolicyProperties'
        etag:
          type: string
          description: Gets a unique read-only string that changes whenever the resource is updated.
        sku:
          description: The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
          $ref: '#/components/schemas/Sku'
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      type: object
    CdnWebApplicationFirewallPolicyPatchParameters:
      type: object
      description: Properties required to update a CdnWebApplicationFirewallPolicy.
      properties:
        tags:
          description: CdnWebApplicationFirewallPolicy tags
          type: object
          additionalProperties:
            type: string
      x-ms-azure-resource: true
    CdnWebApplicationFirewallPolicyProperties:
      description: Defines CDN web application firewall policy properties.
      properties:
        policySettings:
          description: Describes  policySettings for policy
          $ref: '#/components/schemas/policySettings'
        rateLimitRules:
          description: Describes rate limit rules inside the policy.
          $ref: '#/components/schemas/RateLimitRuleList'
        customRules:
          description: Describes custom rules inside the policy.
          $ref: '#/components/schemas/CustomRuleList'
        managedRules:
          description: Describes managed rules inside the policy.
          $ref: '#/components/schemas/ManagedRuleSetList'
        endpointLinks:
          description: Describes Azure CDN endpoints associated with this Web Application Firewall policy.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CdnEndpoint'
        extendedProperties:
          description: Key-Value pair representing additional properties for Web Application Firewall policy.
          type: object
          additionalProperties:
            type: string
        provisioningState:
          readOnly: true
          type: string
          description: Provisioning state of the WebApplicationFirewallPolicy.
          enum:
            - Creating
            - Succeeded
            - Failed
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        resourceState:
          title: Resource status of the policy.
          readOnly: true
          enum:
            - Creating
            - Enabling
            - Enabled
            - Disabling
            - Disabled
            - Deleting
          type: string
          x-ms-enum:
            name: PolicyResourceState
            modelAsString: true
      type: object
    policySettings:
      description: Defines contents of a web application firewall global configuration
      properties:
        enabledState:
          description: describes if the policy is in enabled state or disabled state
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: PolicyEnabledState
            modelAsString: true
        mode:
          description: Describes if it is in detection mode or prevention mode at policy level.
          type: string
          enum:
            - Prevention
            - Detection
          x-ms-enum:
            name: PolicyMode
            modelAsString: true
        defaultRedirectUrl:
          description: If action type is redirect, this field represents the default redirect URL for the client.
          type: string
        defaultCustomBlockResponseStatusCode:
          description: If the action type is block, this field defines the default customer overridable http response status code.
          type: integer
          format: int32
          enum:
            - 200
            - 403
            - 405
            - 406
            - 429
        defaultCustomBlockResponseBody:
          description: If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
          type: string
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
      type: object
    CdnEndpoint:
      description: Defines the ARM Resource ID for the linked endpoints
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: ARM Resource ID string.
    CustomRuleList:
      description: Defines contents of custom rules
      properties:
        rules:
          description: List of rules
          type: array
          items:
            $ref: '#/components/schemas/CustomRule'
          x-ms-identifiers:
            - name
      type: object
    CustomRule:
      description: Defines the common attributes for a custom rule that can be included in a waf policy
      type: object
      required:
        - name
        - priority
        - matchConditions
        - action
      properties:
        name:
          description: Defines the name of the custom rule
          type: string
        enabledState:
          description: Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: CustomRuleEnabledState
            modelAsString: true
        priority:
          description: Defines in what order this rule be evaluated in the overall list of custom rules
          type: integer
          format: int32
          maximum: 1000
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
        matchConditions:
          description: List of match conditions.
          type: array
          items:
            $ref: '#/components/schemas/MatchCondition'
          x-ms-identifiers: []
        action:
          description: Describes what action to be applied when rule matches
          $ref: '#/components/schemas/ActionType'
    RateLimitRuleList:
      description: Defines contents of rate limit rules
      properties:
        rules:
          description: List of rules
          type: array
          items:
            $ref: '#/components/schemas/RateLimitRule'
          x-ms-identifiers:
            - name
      type: object
    RateLimitRule:
      description: Defines a rate limiting rule that can be included in a waf policy
      required:
        - rateLimitThreshold
        - rateLimitDurationInMinutes
      properties:
        rateLimitThreshold:
          description: Defines rate limit threshold.
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: false
        rateLimitDurationInMinutes:
          description: Defines rate limit duration. Default is 1 minute.
          type: integer
          format: int32
          maximum: 60
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
        name:
          description: Defines the name of the custom rule
          type: string
        enabledState:
          description: Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: CustomRuleEnabledState
            modelAsString: true
        priority:
          description: Defines in what order this rule be evaluated in the overall list of custom rules
          type: integer
          format: int32
          maximum: 1000
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
        matchConditions:
          description: List of match conditions.
          type: array
          items:
            $ref: '#/components/schemas/MatchCondition'
          x-ms-identifiers: []
        action:
          description: Describes what action to be applied when rule matches
          $ref: '#/components/schemas/ActionType'
      type: object
    MatchCondition:
      description: Define match conditions
      required:
        - matchVariable
        - operator
        - matchValue
      properties:
        matchVariable:
          description: Match variable to compare against.
          type: string
          enum:
            - RemoteAddr
            - SocketAddr
            - RequestMethod
            - RequestHeader
            - RequestUri
            - QueryString
            - RequestBody
            - Cookies
            - PostArgs
          x-ms-enum:
            name: WafMatchVariable
            modelAsString: true
        selector:
          description: Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
          type: string
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - IPMatch
            - GeoMatch
            - Equal
            - Contains
            - LessThan
            - GreaterThan
            - LessThanOrEqual
            - GreaterThanOrEqual
            - BeginsWith
            - EndsWith
            - RegEx
          x-ms-enum:
            name: operator
            modelAsString: true
        negateCondition:
          description: Describes if the result of this condition should be negated.
          type: boolean
        matchValue:
          description: List of possible match values.
          type: array
          items:
            type: string
        transforms:
          description: List of transforms.
          type: array
          items:
            $ref: '#/components/schemas/TransformType'
      type: object
    TransformType:
      description: Describes what transforms were applied before matching.
      type: string
      enum:
        - Lowercase
        - Uppercase
        - Trim
        - UrlDecode
        - UrlEncode
        - RemoveNulls
      x-ms-enum:
        name: TransformType
        modelAsString: true
    ManagedRuleSetList:
      description: Defines the list of managed rule sets for the policy.
      properties:
        managedRuleSets:
          description: List of rule sets.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleSet'
          x-ms-identifiers:
            - ruleSetType
            - ruleSetVersion
      type: object
    ManagedRuleSet:
      type: object
      description: Defines a managed rule set.
      required:
        - ruleSetType
        - ruleSetVersion
      properties:
        ruleSetType:
          description: Defines the rule set type to use.
          type: string
        ruleSetVersion:
          description: Defines the version of the rule set to use.
          type: string
        anomalyScore:
          description: 'Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.'
          type: integer
          format: int32
          maximum: 20
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
        ruleGroupOverrides:
          description: Defines the rule overrides to apply to the rule set.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleGroupOverride'
          x-ms-identifiers:
            - ruleGroupName
    ManagedRuleGroupOverride:
      description: Defines a managed rule group override setting.
      required:
        - ruleGroupName
      properties:
        ruleGroupName:
          description: Describes the managed rule group within the rule set to override
          type: string
        rules:
          description: List of rules that will be enabled. If none specified, all rules in the group will be disabled.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleOverride'
          x-ms-identifiers:
            - ruleId
      type: object
    ManagedRuleOverride:
      description: Defines a managed rule group override setting.
      required:
        - ruleId
      properties:
        ruleId:
          description: Identifier for the managed rule.
          type: string
        enabledState:
          description: Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: ManagedRuleEnabledState
            modelAsString: true
        action:
          description: Describes the override action to be applied when rule matches.
          $ref: '#/components/schemas/ActionType'
      type: object
    ManagedRuleSetDefinitionList:
      description: List of managed rule set definitions available for use in a policy.
      properties:
        value:
          description: List of managed rule set definitions.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleSetDefinition'
        nextLink:
          type: string
          description: URL to retrieve next set of managed rule set definitions.
      type: object
    ManagedRuleSetDefinition:
      description: Describes a managed rule set definition.
      properties:
        properties:
          description: Describes managed rule set definition properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedRuleSetDefinitionProperties'
        sku:
          description: The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
          $ref: '#/components/schemas/Sku'
        id:
          description: Resource ID.
          readOnly: true
          type: string
        name:
          description: Resource name.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
      type: object
    ManagedRuleSetDefinitionProperties:
      description: Properties for a managed rule set definition.
      properties:
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the managed rule set.
        ruleSetType:
          type: string
          readOnly: true
          description: Type of the managed rule set.
        ruleSetVersion:
          type: string
          readOnly: true
          description: Version of the managed rule set type.
        ruleGroups:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ManagedRuleGroupDefinition'
          x-ms-identifiers:
            - ruleGroupName
          description: Rule groups of the managed rule set.
      type: object
    ManagedRuleGroupDefinition:
      description: Describes a managed rule group.
      properties:
        ruleGroupName:
          type: string
          readOnly: true
          description: Name of the managed rule group.
        description:
          type: string
          readOnly: true
          description: Description of the managed rule group.
        rules:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ManagedRuleDefinition'
          x-ms-identifiers:
            - ruleId
          description: List of rules within the managed rule group.
      type: object
    ManagedRuleDefinition:
      description: Describes a managed rule definition.
      properties:
        ruleId:
          description: Identifier for the managed rule.
          readOnly: true
          type: string
        description:
          description: Describes the functionality of the managed rule.
          readOnly: true
          type: string
      type: object
    ActionType:
      description: Defines the action to take on rule match.
      type: string
      enum:
        - Allow
        - Block
        - Log
        - Redirect
      x-ms-enum:
        name: ActionType
        modelAsString: true
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    ProfileChangeSkuWafMapping:
      type: object
      description: Parameters required for profile upgrade.
      required:
        - securityPolicyName
        - changeToWafPolicy
      properties:
        securityPolicyName:
          description: The security policy name.
          type: string
        changeToWafPolicy:
          description: The new waf resource for the security policy to use.
          $ref: '#/components/schemas/ResourceReference'
    ProfileUpgradeParameters:
      type: object
      description: Parameters required for profile upgrade.
      required:
        - wafMappingList
      properties:
        wafMappingList:
          description: Web Application Firewall (WAF) and security policy mapping for the profile upgrade
          type: array
          items:
            description: List of waf mappings
            $ref: '#/components/schemas/ProfileChangeSkuWafMapping'
          x-ms-identifiers: []
    AfdPurgeParameters:
      type: object
      description: Parameters required for content purge.
      required:
        - contentPaths
      properties:
        contentPaths:
          description: The path to the content to be purged. Can describe a file path or a wild card directory.
          type: array
          items:
            type: string
        domains:
          description: List of domains.
          type: array
          items:
            type: string
    Certificate:
      description: Certificate used for https
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        subject:
          description: Subject name in the certificate.
          type: string
          readOnly: true
        expirationDate:
          description: Certificate expiration date.
          type: string
          readOnly: true
      type: object
    ManagedCertificate:
      description: Managed Certificate used for https
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        subject:
          description: Subject name in the certificate.
          type: string
          readOnly: true
        expirationDate:
          description: Certificate expiration date.
          type: string
          readOnly: true
      type: object
    CustomerCertificate:
      description: Customer Certificate used for https
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        subject:
          description: Subject name in the certificate.
          type: string
          readOnly: true
        expirationDate:
          description: Certificate expiration date.
          type: string
          readOnly: true
        secretSource:
          description: Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
          $ref: '#/components/schemas/ResourceReference'
        secretVersion:
          description: Certificate version.
          type: string
        certificateAuthority:
          description: Certificate issuing authority.
          type: string
          readOnly: true
        useLatestVersion:
          description: Whether to use the latest version for the certificate
          type: boolean
        subjectAlternativeNames:
          description: The list of SANs.
          type: array
          items:
            type: string
            readOnly: true
        thumbprint:
          description: Certificate thumbprint.
          type: string
          readOnly: true
      type: object
    AzureFirstPartyManagedCertificate:
      description: Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        subject:
          description: Subject name in the certificate.
          type: string
          readOnly: true
        expirationDate:
          description: Certificate expiration date.
          type: string
          readOnly: true
      type: object
    ValidateSecretInput:
      description: Input of the secret to be validated.
      type: object
      required:
        - secretSource
        - secretType
      properties:
        secretType:
          description: The secret type.
          $ref: '#/components/schemas/SecretType'
        secretSource:
          description: Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
          $ref: '#/components/schemas/ResourceReference'
        secretVersion:
          description: Secret version, if customer is using a specific version.
          type: string
    ValidateSecretOutput:
      description: Output of the validated secret.
      type: object
      properties:
        status:
          description: The validation status.
          enum:
            - Valid
            - Invalid
            - AccessDenied
            - CertificateExpired
          type: string
          x-ms-enum:
            name: status
            modelAsString: true
        message:
          description: Detailed error message
          type: string
    AFDDomainListResult:
      description: Result of the request to list domains. It contains a list of domain objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AFDDomain'
          description: List of AzureFrontDoor domains within a profile.
        nextLink:
          type: string
          description: URL to get the next set of domain objects if there are any.
      type: object
    AFDDomain:
      description: Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDDomainProperties'
      type: object
    AFDDomainProperties:
      description: The JSON object that contains the properties of the domain to create.
      required:
        - hostName
      properties:
        profileName:
          description: The name of the profile which holds the domain.
          type: string
          readOnly: true
        tlsSettings:
          description: The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
          type: object
          $ref: '#/components/schemas/AFDDomainHttpsParameters'
        azureDnsZone:
          description: Resource reference to the Azure DNS zone
          type: object
          $ref: '#/components/schemas/ResourceReference'
        preValidatedCustomDomainResourceId:
          description: Resource reference to the Azure resource where custom domain ownership was prevalidated
          type: object
          $ref: '#/components/schemas/ResourceReference'
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
        domainValidationState:
          description: Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.
          readOnly: true
          enum:
            - Unknown
            - Submitting
            - Pending
            - Rejected
            - TimedOut
            - PendingRevalidation
            - Approved
            - RefreshingValidationToken
            - InternalError
          type: string
          x-ms-enum:
            name: DomainValidationState
            modelAsString: true
        hostName:
          description: The host name of the domain. Must be a domain name.
          type: string
        extendedProperties:
          description: Key-Value pair representing migration properties for domains.
          type: object
          additionalProperties:
            type: string
        validationProperties:
          description: Values the customer needs to validate domain ownership
          readOnly: true
          type: object
          $ref: '#/components/schemas/DomainValidationProperties'
      type: object
    AFDDomainUpdateParameters:
      description: The domain JSON object required for domain creation or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDDomainUpdatePropertiesParameters'
      type: object
    AFDDomainUpdatePropertiesParameters:
      description: The JSON object that contains the properties of the domain to create.
      properties:
        profileName:
          description: The name of the profile which holds the domain.
          type: string
          readOnly: true
        tlsSettings:
          description: The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
          type: object
          $ref: '#/components/schemas/AFDDomainHttpsParameters'
        azureDnsZone:
          description: Resource reference to the Azure DNS zone
          type: object
          $ref: '#/components/schemas/ResourceReference'
        preValidatedCustomDomainResourceId:
          description: Resource reference to the Azure resource where custom domain ownership was prevalidated
          type: object
          $ref: '#/components/schemas/ResourceReference'
      type: object
    DomainValidationProperties:
      description: The JSON object that contains the properties to validate a domain.
      properties:
        validationToken:
          description: Challenge used for DNS TXT record or file based validation
          readOnly: true
          type: string
        expirationDate:
          description: The date time that the token expires
          readOnly: true
          type: string
      type: object
    AFDDomainHttpsParameters:
      description: The JSON object that contains the properties to secure a domain.
      required:
        - certificateType
      properties:
        certificateType:
          description: Defines the source of the SSL certificate.
          enum:
            - CustomerCertificate
            - ManagedCertificate
            - AzureFirstPartyManagedCertificate
          type: string
          x-ms-enum:
            name: AfdCertificateType
            modelAsString: true
        minimumTlsVersion:
          description: TLS protocol version that will be used for Https
          enum:
            - TLS10
            - TLS12
          type: string
          x-ms-enum:
            name: AfdMinimumTlsVersion
            modelAsString: false
        secret:
          description: Resource reference to the secret. ie. subs/rg/profile/secret
          type: object
          $ref: '#/components/schemas/ResourceReference'
      type: object
    SecurityPolicy:
      description: SecurityPolicy association for AzureFrontDoor profile
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SecurityPolicyProperties'
      type: object
    SecurityPolicyProperties:
      description: The json object that contains properties required to create a security policy
      properties:
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
        profileName:
          description: The name of the profile which holds the security policy.
          type: string
          readOnly: true
        parameters:
          description: object which contains security policy parameters
          $ref: '#/components/schemas/SecurityPolicyPropertiesParameters'
      type: object
    SecurityPolicyUpdateParameters:
      description: The JSON object containing security policy update parameters.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SecurityPolicyUpdateProperties'
      type: object
    SecurityPolicyUpdateProperties:
      description: The json object that contains properties required to update a security policy
      type: object
      properties:
        parameters:
          description: object which contains security policy parameters
          $ref: '#/components/schemas/SecurityPolicyPropertiesParameters'
    SecurityPolicyPropertiesParameters:
      description: The json object containing security policy parameters
      discriminator:
        propertyName: type
      required:
        - type
      type: object
      properties:
        type:
          description: The type of the Security policy to create.
          enum:
            - WebApplicationFirewall
          type: string
          x-ms-enum:
            name: SecurityPolicyType
            modelAsString: true
    SecurityPolicyWebApplicationFirewallParameters:
      description: The json object containing security policy waf parameters
      x-ms-discriminator-value: WebApplicationFirewall
      properties:
        type:
          description: The type of the Security policy to create.
          enum:
            - WebApplicationFirewall
          type: string
          x-ms-enum:
            name: SecurityPolicyType
            modelAsString: true
        wafPolicy:
          type: object
          description: Resource ID.
          $ref: '#/components/schemas/ResourceReference'
        associations:
          description: Waf associations
          type: array
          items:
            $ref: '#/components/schemas/SecurityPolicyWebApplicationFirewallAssociation'
          x-ms-identifiers: []
      type: object
    SecurityPolicyWebApplicationFirewallAssociation:
      description: settings for security policy patterns to match
      type: object
      properties:
        domains:
          description: List of domains.
          type: array
          items:
            $ref: '#/components/schemas/ActivatedResourceReference'
        patternsToMatch:
          description: List of paths
          type: array
          items:
            type: string
    SecurityPolicyListResult:
      description: Result of the request to list security policies. It contains a list of security policy objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SecurityPolicy'
          description: List of Security policies within a profile
        nextLink:
          type: string
          description: URL to get the next set of security policy objects if there is any.
      type: object
    AutoGeneratedDomainNameLabelScope:
      description: Indicates the endpoint name reuse scope. The default value is TenantReuse.
      enum:
        - TenantReuse
        - SubscriptionReuse
        - ResourceGroupReuse
        - NoReuse
      type: string
      x-ms-enum:
        name: AutoGeneratedDomainNameLabelScope
        modelAsString: true
    AFDEndpoint:
      description: Azure Front Door endpoint is the entity within a Azure Front Door profile containing configuration information such as origin, protocol, content caching and delivery behavior. The AzureFrontDoor endpoint uses the URL format <endpointname>.azureedge.net.
      properties:
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDEndpointProperties'
      type: object
    AFDEndpointProperties:
      description: The JSON object that contains the properties required to create an endpoint.
      properties:
        profileName:
          description: The name of the profile which holds the endpoint.
          type: string
          readOnly: true
        enabledState:
          description: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnabledState
            modelAsString: true
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
        hostName:
          description: The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
          type: string
          readOnly: true
        autoGeneratedDomainNameLabelScope:
          description: Indicates the endpoint name reuse scope. The default value is TenantReuse.
          $ref: '#/components/schemas/AutoGeneratedDomainNameLabelScope'
      type: object
    AFDEndpointListResult:
      description: Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AFDEndpoint'
          description: List of AzureFrontDoor endpoints within a profile
        nextLink:
          type: string
          description: URL to get the next set of endpoint objects if there is any.
      type: object
    AFDEndpointUpdateParameters:
      description: Properties required to create or update an endpoint.
      x-ms-azure-resource: true
      properties:
        tags:
          description: Endpoint tags.
          type: object
          additionalProperties:
            type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDEndpointPropertiesUpdateParameters'
      type: object
    AFDEndpointPropertiesUpdateParameters:
      description: The JSON object containing endpoint update parameters.
      properties:
        profileName:
          description: The name of the profile which holds the endpoint.
          type: string
          readOnly: true
        enabledState:
          description: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnabledState
            modelAsString: true
      type: object
    CompressionSettings:
      description: settings for compression.
      type: object
      properties:
        contentTypesToCompress:
          description: List of content types on which compression applies. The value should be a valid MIME type.
          type: array
          items:
            type: string
        isCompressionEnabled:
          description: Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
          type: boolean
    AFDEndpointProtocols:
      description: Supported protocols for the customer's endpoint.
      enum:
        - Http
        - Https
      type: string
      x-ms-enum:
        name: AFDEndpointProtocols
        modelAsString: true
    SecretListResult:
      description: Result of the request to list secrets. It contains a list of Secret objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Secret'
          description: List of AzureFrontDoor secrets within a profile.
        nextLink:
          type: string
          description: URL to get the next set of Secret objects if there are any.
      type: object
    Secret:
      description: Friendly Secret name mapping to the any Secret or secret related information.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SecretProperties'
      type: object
    SecretProperties:
      description: The JSON object that contains the properties of the Secret to create.
      properties:
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
        profileName:
          description: The name of the profile which holds the secret.
          type: string
          readOnly: true
        parameters:
          description: object which contains secret parameters
          $ref: '#/components/schemas/SecretParameters'
      type: object
    SecretParameters:
      description: The json object containing secret parameters
      discriminator:
        propertyName: type
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
    SecretType:
      description: The type of the secret resource.
      enum:
        - UrlSigningKey
        - CustomerCertificate
        - ManagedCertificate
        - AzureFirstPartyManagedCertificate
      type: string
      x-ms-enum:
        name: SecretType
        modelAsString: true
    UrlSigningKeyParameters:
      description: Url signing key parameters
      x-ms-discriminator-value: UrlSigningKey
      required:
        - keyId
        - secretSource
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        keyId:
          description: Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
          type: string
        secretSource:
          description: Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
          type: object
          $ref: '#/components/schemas/ResourceReference'
        secretVersion:
          description: Version of the secret to be used
          type: string
      type: object
    ManagedCertificateParameters:
      description: Managed Certificate used for https
      x-ms-discriminator-value: ManagedCertificate
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        subject:
          description: Subject name in the certificate.
          type: string
          readOnly: true
        expirationDate:
          description: Certificate expiration date.
          type: string
          readOnly: true
      type: object
    CustomerCertificateParameters:
      description: Customer Certificate used for https
      x-ms-discriminator-value: CustomerCertificate
      required:
        - secretSource
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        secretSource:
          description: Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
          type: object
          $ref: '#/components/schemas/ResourceReference'
        secretVersion:
          description: Version of the secret to be used
          type: string
        useLatestVersion:
          description: Whether to use the latest version for the certificate
          type: boolean
        subject:
          description: Subject name in the certificate.
          type: string
          readOnly: true
        expirationDate:
          description: Certificate expiration date.
          type: string
          readOnly: true
        certificateAuthority:
          description: Certificate issuing authority.
          type: string
          readOnly: true
        subjectAlternativeNames:
          description: The list of SANs.
          type: array
          items:
            type: string
            readOnly: true
        thumbprint:
          description: Certificate thumbprint.
          type: string
          readOnly: true
      type: object
    AzureFirstPartyManagedCertificateParameters:
      description: Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.
      x-ms-discriminator-value: AzureFirstPartyManagedCertificate
      properties:
        type:
          $ref: '#/components/schemas/SecretType'
        secretSource:
          description: Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
          type: object
          $ref: '#/components/schemas/ResourceReference'
          readOnly: true
        subject:
          description: Subject name in the certificate.
          type: string
          readOnly: true
        expirationDate:
          description: Certificate expiration date.
          type: string
          readOnly: true
        certificateAuthority:
          description: Certificate issuing authority.
          type: string
          readOnly: true
        subjectAlternativeNames:
          description: The list of SANs.
          type: array
          items:
            type: string
            readOnly: true
        thumbprint:
          description: Certificate thumbprint.
          type: string
          readOnly: true
      type: object
    RuleSetListResult:
      description: Result of the request to list rule sets. It contains a list of rule set objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RuleSet'
          description: List of AzureFrontDoor rule sets within a profile.
        nextLink:
          type: string
          description: URL to get the next set of rule set objects if there are any.
      type: object
    RuleSet:
      description: Friendly RuleSet name mapping to the any RuleSet or secret related information.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RuleSetProperties'
      type: object
    RuleSetProperties:
      description: The JSON object that contains the properties of the Rule Set to create.
      properties:
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
        profileName:
          description: The name of the profile which holds the rule set.
          type: string
          readOnly: true
      type: object
    AFDOrigin:
      description: Azure Front Door origin is the source of the content being delivered via Azure Front Door. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDOriginProperties'
      type: object
    AFDOriginProperties:
      description: The JSON object that contains the properties of the origin.
      required:
        - hostName
      properties:
        originGroupName:
          description: The name of the origin group which contains this origin.
          type: string
          readOnly: true
        azureOrigin:
          description: Resource reference to the Azure origin resource.
          type: object
          $ref: '#/components/schemas/ResourceReference'
        hostName:
          description: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
          type: string
        httpPort:
          description: The value of the HTTP port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          default: 80
        httpsPort:
          description: The value of the HTTPS port. Must be between 1 and 65535.
          type: integer
          maximum: 65535
          format: int32
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          default: 443
        originHostHeader:
          description: The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
          type: string
        priority:
          description: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
          type: integer
          format: int32
          maximum: 5
          minimum: 1
        weight:
          description: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
          type: integer
          format: int32
          maximum: 1000
          minimum: 1
        sharedPrivateLinkResource:
          description: The properties of the private link resource for private origin.
          type: object
          $ref: '#/components/schemas/SharedPrivateLinkResourceProperties'
        enabledState:
          description: Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EnabledState
            modelAsString: true
        enforceCertificateNameCheck:
          description: Whether to enable certificate name check at origin level
          type: boolean
          default: true
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
      type: object
    AFDOriginUpdateParameters:
      description: AFDOrigin properties needed for origin update.
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDOriginUpdatePropertiesParameters'
      type: object
    AFDOriginUpdatePropertiesParameters:
      description: The JSON object that contains the properties of the origin.
      properties:
        originGroupName:
          description: The name of the origin group which contains this origin.
          type: string
          readOnly: true
        azureOrigin:
          description: Resource reference to the Azure origin resource.
          type: object
          $ref: '#/components/schemas/ResourceReference'
        hostName:
          description: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
          type: string
        httpPort:
          description: The value of the HTTP port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          default: 80
        httpsPort:
          description: The value of the HTTPS port. Must be between 1 and 65535.
          type: integer
          maximum: 65535
          format: int32
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          default: 443
        originHostHeader:
          description: The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
          type: string
        priority:
          description: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
          type: integer
          format: int32
          maximum: 5
          minimum: 1
        weight:
          description: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
          type: integer
          format: int32
          maximum: 1000
          minimum: 1
        sharedPrivateLinkResource:
          description: The properties of the private link resource for private origin.
          type: object
          $ref: '#/components/schemas/SharedPrivateLinkResourceProperties'
        enabledState:
          description: Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EnabledState
            modelAsString: true
        enforceCertificateNameCheck:
          description: Whether to enable certificate name check at origin level
          type: boolean
          default: true
      type: object
    SharedPrivateLinkResourceProperties:
      properties:
        privateLink:
          type: object
          $ref: '#/components/schemas/ResourceReference'
          description: The resource id of the resource the shared private link resource is for.
        privateLinkLocation:
          type: string
          description: The location of the shared private link resource
        groupId:
          type: string
          description: The group id from the provider of resource the shared private link resource is for.
        requestMessage:
          type: string
          description: The request message for requesting approval of the shared private link resource.
        status:
          type: string
          description: Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
            - Timeout
          x-ms-enum:
            name: SharedPrivateLinkResourceStatus
            modelAsString: false
      description: Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.
      type: object
    AFDOriginListResult:
      description: Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AFDOrigin'
          description: List of Azure Front Door origins within an Azure Front Door endpoint
        nextLink:
          type: string
          description: URL to get the next set of origin objects if there are any.
      type: object
    AFDOriginGroup:
      description: AFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be served from Azure Front Door.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDOriginGroupProperties'
      type: object
    AFDOriginGroupProperties:
      description: The JSON object that contains the properties of the origin group.
      properties:
        profileName:
          description: The name of the profile which holds the origin group.
          type: string
          readOnly: true
        loadBalancingSettings:
          description: Load balancing settings for a backend pool
          $ref: '#/components/schemas/LoadBalancingSettingsParameters'
        healthProbeSettings:
          description: Health probe settings to the origin that is used to determine the health of the origin.
          type: object
          $ref: '#/components/schemas/HealthProbeParameters'
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes:
          description: Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
          type: integer
          format: int32
          maximum: 50
          minimum: 0
        sessionAffinityState:
          description: Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnabledState
            modelAsString: true
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
      type: object
    AFDOriginGroupUpdateParameters:
      description: AFDOrigin group properties needed for origin group creation or update.
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AFDOriginGroupUpdatePropertiesParameters'
      type: object
    AFDOriginGroupUpdatePropertiesParameters:
      description: The JSON object that contains the properties of the origin group.
      properties:
        profileName:
          description: The name of the profile which holds the origin group.
          type: string
          readOnly: true
        loadBalancingSettings:
          description: Load balancing settings for a backend pool
          $ref: '#/components/schemas/LoadBalancingSettingsParameters'
        healthProbeSettings:
          description: Health probe settings to the origin that is used to determine the health of the origin.
          type: object
          $ref: '#/components/schemas/HealthProbeParameters'
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes:
          description: Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
          type: integer
          format: int32
          maximum: 50
          minimum: 0
        sessionAffinityState:
          description: Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnabledState
            modelAsString: true
      type: object
    LoadBalancingSettingsParameters:
      description: Round-Robin load balancing settings for a backend pool
      type: object
      properties:
        sampleSize:
          description: The number of samples to consider for load balancing decisions
          type: integer
          format: int32
        successfulSamplesRequired:
          description: The number of samples within the sample period that must succeed
          type: integer
          format: int32
        additionalLatencyInMilliseconds:
          description: The additional latency in milliseconds for probes to fall into the lowest latency bucket
          type: integer
          format: int32
    AFDOriginGroupListResult:
      description: Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AFDOriginGroup'
          description: List of Azure Front Door origin groups within an Azure Front Door endpoint
        nextLink:
          type: string
          description: URL to get the next set of origin objects if there are any.
      type: object
    RouteListResult:
      description: Result of the request to list routes. It contains a list of route objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Route'
          description: List of AzureFrontDoor routes within a profile.
        nextLink:
          type: string
          description: URL to get the next set of route objects if there are any.
      type: object
    Route:
      description: Friendly Routes name mapping to the any Routes or secret related information.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RouteProperties'
      type: object
    RouteProperties:
      description: The JSON object that contains the properties of the Routes to create.
      required:
        - originGroup
      properties:
        endpointName:
          description: The name of the endpoint which holds the route.
          type: string
          readOnly: true
        customDomains:
          description: Domains referenced by this endpoint.
          type: array
          items:
            $ref: '#/components/schemas/ActivatedResourceReference'
        originGroup:
          description: A reference to the origin group.
          type: object
          $ref: '#/components/schemas/ResourceReference'
        originPath:
          description: A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
          type: string
        ruleSets:
          description: rule sets referenced by this endpoint.
          type: array
          items:
            $ref: '#/components/schemas/ResourceReference'
        supportedProtocols:
          description: List of supported protocols for this route.
          type: array
          items:
            $ref: '#/components/schemas/AFDEndpointProtocols'
          default:
            - Http
            - Https
        patternsToMatch:
          description: The route patterns of the rule.
          type: array
          items:
            type: string
            description: A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.
        cacheConfiguration:
          description: The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object.
          type: object
          $ref: '#/components/schemas/AfdRouteCacheConfiguration'
        forwardingProtocol:
          description: Protocol this rule will use when forwarding traffic to backends.
          type: string
          enum:
            - HttpOnly
            - HttpsOnly
            - MatchRequest
          x-ms-enum:
            name: ForwardingProtocol
            modelAsString: true
          default: MatchRequest
        linkToDefaultDomain:
          description: whether this route will be linked to the default endpoint domain.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: LinkToDefaultDomain
            modelAsString: true
          default: Disabled
        httpsRedirect:
          description: Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: httpsRedirect
            modelAsString: true
          default: Disabled
        enabledState:
          description: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnabledState
            modelAsString: true
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
      type: object
    RouteUpdateParameters:
      description: The domain JSON object required for domain creation or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RouteUpdatePropertiesParameters'
      type: object
    RouteUpdatePropertiesParameters:
      description: The JSON object that contains the properties of the domain to create.
      properties:
        endpointName:
          description: The name of the endpoint which holds the route.
          type: string
          readOnly: true
        customDomains:
          description: Domains referenced by this endpoint.
          type: array
          items:
            $ref: '#/components/schemas/ActivatedResourceReference'
        originGroup:
          description: A reference to the origin group.
          type: object
          $ref: '#/components/schemas/ResourceReference'
        originPath:
          description: A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
          type: string
        ruleSets:
          description: rule sets referenced by this endpoint.
          type: array
          items:
            $ref: '#/components/schemas/ResourceReference'
        supportedProtocols:
          description: List of supported protocols for this route.
          type: array
          items:
            $ref: '#/components/schemas/AFDEndpointProtocols'
          default:
            - Http
            - Https
        patternsToMatch:
          description: The route patterns of the rule.
          type: array
          items:
            type: string
            description: A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.
        cacheConfiguration:
          description: The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object.
          type: object
          $ref: '#/components/schemas/AfdRouteCacheConfiguration'
        forwardingProtocol:
          description: Protocol this rule will use when forwarding traffic to backends.
          type: string
          enum:
            - HttpOnly
            - HttpsOnly
            - MatchRequest
          x-ms-enum:
            name: ForwardingProtocol
            modelAsString: true
          default: MatchRequest
        linkToDefaultDomain:
          description: whether this route will be linked to the default endpoint domain.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: LinkToDefaultDomain
            modelAsString: true
          default: Disabled
        httpsRedirect:
          description: Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: httpsRedirect
            modelAsString: true
          default: Disabled
        enabledState:
          description: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnabledState
            modelAsString: true
      type: object
    AfdRouteCacheConfiguration:
      description: Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
      type: object
      properties:
        queryStringCachingBehavior:
          description: Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
          enum:
            - IgnoreQueryString
            - UseQueryString
            - IgnoreSpecifiedQueryStrings
            - IncludeSpecifiedQueryStrings
          type: string
          x-ms-enum:
            name: afdQueryStringCachingBehavior
            modelAsString: true
        queryParameters:
          description: query parameters to include or exclude (comma separated).
          type: string
        compressionSettings:
          description: compression settings.
          type: object
          $ref: '#/components/schemas/CompressionSettings'
    RuleListResult:
      description: Result of the request to list rules. It contains a list of rule objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Rule'
          description: List of AzureFrontDoor rules within a rule set.
        nextLink:
          type: string
          description: URL to get the next set of rule objects if there are any.
      type: object
    Rule:
      description: Friendly Rules name mapping to the any Rules or secret related information.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RuleProperties'
      type: object
    RuleProperties:
      description: The JSON object that contains the properties of the Rules to create.
      required:
        - order
        - actions
      properties:
        ruleSetName:
          description: The name of the rule set containing the rule.
          type: string
          readOnly: true
        order:
          description: The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
          type: integer
          format: int32
        conditions:
          description: A list of conditions that must be matched for the actions to be executed
          type: array
          items:
            $ref: '#/components/schemas/DeliveryRuleCondition'
          x-ms-identifiers:
            - name
        actions:
          description: A list of actions that are executed when all the conditions of a rule are satisfied.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryRuleAction'
          x-ms-identifiers:
            - name
        matchProcessingBehavior:
          description: If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
          type: string
          enum:
            - Continue
            - Stop
          x-ms-enum:
            name: MatchProcessingBehavior
            modelAsString: true
          default: Continue
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
      type: object
    RuleUpdateParameters:
      description: The domain JSON object required for domain creation or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RuleUpdatePropertiesParameters'
      type: object
    RuleUpdatePropertiesParameters:
      description: The JSON object that contains the properties of the rule to update.
      properties:
        ruleSetName:
          description: The name of the rule set containing the rule.
          type: string
          readOnly: true
        order:
          description: The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
          type: integer
          format: int32
        conditions:
          description: A list of conditions that must be matched for the actions to be executed
          type: array
          items:
            $ref: '#/components/schemas/DeliveryRuleCondition'
          x-ms-identifiers:
            - name
        actions:
          description: A list of actions that are executed when all the conditions of a rule are satisfied.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryRuleAction'
          x-ms-identifiers:
            - name
        matchProcessingBehavior:
          description: If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
          type: string
          enum:
            - Continue
            - Stop
          x-ms-enum:
            name: MatchProcessingBehavior
            modelAsString: true
          default: Continue
      type: object
    CheckEndpointNameAvailabilityInput:
      description: Input of CheckNameAvailability API.
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: The resource name to validate.
          type: string
        type:
          description: The type of the resource whose name is to be validated.
          $ref: '#/components/schemas/ResourceType'
        autoGeneratedDomainNameLabelScope:
          description: Indicates the endpoint name reuse scope. The default value is TenantReuse.
          $ref: '#/components/schemas/AutoGeneratedDomainNameLabelScope'
    CheckEndpointNameAvailabilityOutput:
      description: Output of check name availability API.
      type: object
      properties:
        nameAvailable:
          description: Indicates whether the name is available.
          readOnly: true
          type: boolean
        availableHostname:
          description: Returns the available hostname generated based on the AutoGeneratedDomainNameLabelScope when the name is available, otherwise it returns empty string
          readOnly: true
          type: string
        reason:
          description: The reason why the name is not available.
          readOnly: true
          type: string
        message:
          description: The detailed error message describing why the name is not available.
          readOnly: true
          type: string
    CheckHostNameAvailabilityInput:
      description: Input of CheckHostNameAvailability API.
      type: object
      required:
        - hostName
      properties:
        hostName:
          description: The host name to validate.
          type: string
    ValidationToken:
      description: The validation token.
      type: object
      properties:
        token:
          readOnly: true
          type: string
    AFDStateProperties:
      description: The tracking states for afd resources.
      type: object
      properties:
        provisioningState:
          readOnly: true
          description: Provisioning status
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: AfdProvisioningState
            modelAsString: true
        deploymentStatus:
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
    AfdErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    MetricsResponse:
      description: Metrics Response
      properties:
        dateTimeBegin:
          type: string
          format: date-time
        dateTimeEnd:
          type: string
          format: date-time
        granularity:
          type: string
          enum:
            - PT5M
            - PT1H
            - P1D
          x-ms-enum:
            name: MetricsGranularity
            modelAsString: true
        series:
          type: array
          items:
            type: object
            properties:
              metric:
                type: string
              unit:
                type: string
                enum:
                  - count
                  - bytes
                  - bitsPerSecond
                  - milliSeconds
                x-ms-enum:
                  name: MetricsSeriesUnit
                  modelAsString: true
              groups:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                x-ms-identifiers:
                  - name
              data:
                type: array
                items:
                  type: object
                  properties:
                    dateTime:
                      type: string
                      format: date-time
                    value:
                      type: number
                x-ms-identifiers: []
          x-ms-identifiers: []
      type: object
    RankingsResponse:
      description: Rankings Response
      properties:
        dateTimeBegin:
          type: string
          format: date-time
        dateTimeEnd:
          type: string
          format: date-time
        tables:
          type: array
          items:
            type: object
            properties:
              ranking:
                type: string
              data:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    metrics:
                      type: array
                      items:
                        type: object
                        properties:
                          metric:
                            type: string
                          value:
                            type: integer
                            format: int64
                          percentage:
                            type: number
                      x-ms-identifiers: []
                x-ms-identifiers:
                  - name
          x-ms-identifiers: []
      type: object
    ContinentsResponse:
      description: Continents Response
      properties:
        continents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        countryOrRegions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              continentId:
                type: string
      type: object
    ResourcesResponse:
      description: Resources Response
      properties:
        endpoints:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              history:
                type: boolean
              customDomains:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    endpointId:
                      type: string
                    history:
                      type: boolean
        customDomains:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              endpointId:
                type: string
              history:
                type: boolean
      type: object
    WafMetricsResponse:
      description: Waf Metrics Response
      properties:
        dateTimeBegin:
          type: string
          format: date-time
        dateTimeEnd:
          type: string
          format: date-time
        granularity:
          type: string
          enum:
            - PT5M
            - PT1H
            - P1D
          x-ms-enum:
            name: WafMetricsGranularity
            modelAsString: true
        series:
          type: array
          items:
            type: object
            properties:
              metric:
                type: string
              unit:
                type: string
                enum:
                  - count
                x-ms-enum:
                  name: WafMetricsSeriesUnit
                  modelAsString: true
              groups:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                x-ms-identifiers:
                  - name
              data:
                type: array
                items:
                  type: object
                  properties:
                    dateTime:
                      type: string
                      format: date-time
                    value:
                      type: number
                x-ms-identifiers: []
          x-ms-identifiers: []
      type: object
    WafRankingsResponse:
      description: Waf Rankings Response
      properties:
        dateTimeBegin:
          type: string
          format: date-time
        dateTimeEnd:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: string
        data:
          type: array
          items:
            type: object
            properties:
              groupValues:
                type: array
                items:
                  type: string
              metrics:
                type: array
                items:
                  type: object
                  properties:
                    metric:
                      type: string
                    value:
                      type: integer
                      format: int64
                    percentage:
                      type: number
                      format: double
                x-ms-identifiers: []
          x-ms-identifiers: []
      type: object
    UsageName:
      properties:
        value:
          type: string
          description: A string describing the resource name.
        localizedValue:
          type: string
          description: A localized string describing the resource name.
      description: The usage names.
      type: object
    Usage:
      properties:
        id:
          type: string
          readOnly: true
          description: Resource identifier.
        unit:
          type: string
          description: An enum describing the unit of measurement.
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: true
        currentValue:
          type: integer
          format: int64
          description: The current value of the usage.
        limit:
          type: integer
          format: int64
          description: The limit of usage.
        name:
          $ref: '#/components/schemas/UsageName'
          description: The name of the type of usage.
      required:
        - unit
        - currentValue
        - limit
        - name
      description: Describes resource usage.
      type: object
    UsagesListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          description: The list of resource usages.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: The list usages operation response.
      type: object
    ActivatedResourceReference:
      properties:
        id:
          type: string
          description: Resource ID.
        isActive:
          readOnly: true
          type: boolean
          description: Whether the resource is active or inactive
      description: Reference to another resource along with its state.
      type: object
      x-ms-azure-resource: true
    Profile:
      description: A profile is a logical grouping of endpoints that share the same settings.
      required:
        - sku
      properties:
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        sku:
          description: The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile.
          $ref: '#/components/schemas/Sku'
        kind:
          readOnly: true
          type: string
          description: Kind of the profile. Used by portal to differentiate traditional CDN profile and new AFD profile.
        identity:
          description: Managed service identity (system assigned and/or user assigned identities).
          type: object
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProfileProperties'
      type: object
    ProfileProperties:
      description: The JSON object that contains the properties required to create a profile.
      properties:
        resourceState:
          description: Resource status of the profile.
          readOnly: true
          enum:
            - Creating
            - Active
            - Deleting
            - Disabled
            - Migrating
            - Migrated
            - PendingMigrationCommit
            - CommittingMigration
            - AbortingMigration
          type: string
          x-ms-enum:
            name: ProfileResourceState
            modelAsString: true
        provisioningState:
          readOnly: true
          description: Provisioning status of the profile.
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: ProfileProvisioningState
            modelAsString: true
        extendedProperties:
          description: Key-Value pair representing additional properties for profiles.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        frontDoorId:
          readOnly: true
          type: string
          description: The Id of the frontdoor.
        originResponseTimeoutSeconds:
          description: Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
          type: integer
          format: int32
          minimum: 16
          exclusiveMinimum: false
        logScrubbing:
          description: Defines rules that scrub sensitive fields in the Azure Front Door profile logs.
          $ref: '#/components/schemas/ProfileLogScrubbing'
      type: object
    ProfileLogScrubbing:
      description: Defines rules that scrub sensitive fields in the Azure Front Door profile logs.
      type: object
      properties:
        state:
          type: string
          description: State of the log scrubbing config. Default value is Enabled.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ProfileScrubbingState
            modelAsString: true
        scrubbingRules:
          type: array
          items:
            $ref: '#/components/schemas/ProfileScrubbingRules'
          x-ms-identifiers: []
          description: List of log scrubbing rules applied to the Azure Front Door profile logs.
    ProfileListResult:
      description: Result of the request to list profiles. It contains a list of profile objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Profile'
          description: List of CDN profiles within a resource group.
        nextLink:
          type: string
          description: URL to get the next set of profile objects if there are any.
      type: object
    ProfileUpdateParameters:
      description: Properties required to update a profile.
      x-ms-azure-resource: true
      properties:
        tags:
          description: Profile tags
          type: object
          additionalProperties:
            type: string
        identity:
          description: Managed service identity (system assigned and/or user assigned identities).
          type: object
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProfilePropertiesUpdateParameters'
      type: object
    ProfilePropertiesUpdateParameters:
      type: object
      description: The JSON object containing profile update parameters.
      properties:
        originResponseTimeoutSeconds:
          description: Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
          type: integer
          format: int32
          minimum: 16
          exclusiveMinimum: false
        logScrubbing:
          description: Defines rules to scrub sensitive fields in logs
          $ref: '#/components/schemas/ProfileLogScrubbing'
    ProfileScrubbingRules:
      description: Defines the contents of the log scrubbing rules.
      type: object
      required:
        - matchVariable
        - selectorMatchOperator
      properties:
        matchVariable:
          type: string
          enum:
            - RequestIPAddress
            - RequestUri
            - QueryStringArgNames
          description: The variable to be scrubbed from the logs.
          x-ms-enum:
            name: scrubbingRuleEntryMatchVariable
            modelAsString: true
        selectorMatchOperator:
          type: string
          enum:
            - EqualsAny
          description: When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
          x-ms-enum:
            name: ' scrubbingRuleEntryMatchOperator'
            modelAsString: true
        selector:
          type: string
          description: When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
        state:
          type: string
          enum:
            - Enabled
            - Disabled
          description: Defines the state of a log scrubbing rule. Default value is enabled.
          x-ms-enum:
            name: ' scrubbingRuleEntryState'
            modelAsString: true
    CanMigrateResult:
      description: Result for canMigrate operation.
      x-ms-azure-resource: true
      properties:
        id:
          description: Resource ID.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CanMigrateProperties'
      type: object
    CanMigrateProperties:
      type: object
      properties:
        canMigrate:
          readOnly: true
          description: Flag that says if the profile can be migrated
          type: boolean
        defaultSku:
          readOnly: true
          description: Recommended sku for the migration
          type: string
          enum:
            - Standard_AzureFrontDoor
            - Premium_AzureFrontDoor
          x-ms-enum:
            name: CanMigrateDefaultSku
            modelAsString: true
        errors:
          items:
            description: List of migration errors
            $ref: '#/components/schemas/MigrationErrorType'
          type: array
          x-ms-identifiers: []
    MigrationErrorType:
      description: Error response indicates CDN service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        code:
          description: Error code.
          readOnly: true
          type: string
        resourceName:
          description: Resource which has the problem.
          readOnly: true
          type: string
        errorMessage:
          description: Error message indicating why the operation failed.
          readOnly: true
          type: string
        nextSteps:
          description: Describes what needs to be done to fix the problem
          readOnly: true
          type: string
    CanMigrateParameters:
      type: object
      description: Request body for CanMigrate operation.
      required:
        - classicResourceReference
      properties:
        classicResourceReference:
          description: Resource reference of the classic cdn profile or classic frontdoor that need to be migrated.
          $ref: '#/components/schemas/ResourceReference'
      x-ms-azure-resource: true
    MigrationParameters:
      type: object
      description: Request body for Migrate operation.
      required:
        - classicResourceReference
        - sku
        - profileName
      properties:
        sku:
          description: Sku for the migration
          $ref: '#/components/schemas/Sku'
        classicResourceReference:
          description: Resource reference of the classic cdn profile or classic frontdoor that need to be migrated.
          $ref: '#/components/schemas/ResourceReference'
        profileName:
          description: Name of the new profile that need to be created.
          type: string
        migrationWebApplicationFirewallMappings:
          description: Waf mapping for the migrated profile
          type: array
          items:
            description: List of waf mappings
            $ref: '#/components/schemas/MigrationWebApplicationFirewallMapping'
          x-ms-identifiers: []
      x-ms-azure-resource: true
    MigrationWebApplicationFirewallMapping:
      description: 'Web Application Firewall Mapping '
      type: object
      properties:
        migratedFrom:
          description: Migration From Waf policy
          $ref: '#/components/schemas/ResourceReference'
        migratedTo:
          description: Migration to Waf policy
          $ref: '#/components/schemas/ResourceReference'
    MigrateResult:
      description: Result for migrate operation.
      x-ms-azure-resource: true
      properties:
        id:
          description: Resource ID.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MigrateResultProperties'
      type: object
    MigrateResultProperties:
      type: object
      properties:
        migratedProfileResourceId:
          readOnly: true
          description: Arm resource id of the migrated profile
          $ref: '#/components/schemas/ResourceReference'
    SsoUri:
      description: The URI required to login to the supplemental portal from the Azure portal.
      type: object
      properties:
        ssoUriValue:
          description: The URI used to login to the supplemental portal.
          readOnly: true
          type: string
    SupportedOptimizationTypesListResult:
      description: The result of the GetSupportedOptimizationTypes API
      type: object
      properties:
        supportedOptimizationTypes:
          description: Supported optimization types for a profile.
          readOnly: true
          items:
            $ref: '#/components/schemas/OptimizationType'
          type: array
    DeliveryRuleConditionParameters:
      description: Defines the parameters for delivery rule match conditions
      type: object
      discriminator:
        propertyName: typeName
      required:
        - typeName
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
    DeliveryRuleActionParameters:
      description: Defines the parameters for delivery rule actions
      type: object
      discriminator:
        propertyName: typeName
      required:
        - typeName
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
    CertificateSourceParameters:
      description: Defines the parameters for certificate source
      type: object
      discriminator:
        propertyName: typeName
      required:
        - typeName
      properties:
        typeName:
          type: string
          enum:
            - CdnCertificateSourceParameters
            - KeyVaultCertificateSourceParameters
          x-ms-enum:
            name: CertificateSourceParametersType
            modelAsString: true
    Endpoint:
      description: CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
      properties:
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EndpointProperties'
      type: object
    EndpointProperties:
      description: The JSON object that contains the properties required to create an endpoint.
      required:
        - origins
      properties:
        originPath:
          description: A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
          type: string
        contentTypesToCompress:
          description: List of content types on which compression applies. The value should be a valid MIME type.
          type: array
          items:
            type: string
        originHostHeader:
          description: The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
          type: string
        isCompressionEnabled:
          description: Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
          type: boolean
        isHttpAllowed:
          description: Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
          type: boolean
          default: true
        isHttpsAllowed:
          description: Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
          type: boolean
          default: true
        queryStringCachingBehavior:
          description: Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
          $ref: '#/components/schemas/QueryStringCachingBehavior'
          default: NotSet
        optimizationType:
          description: Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
          $ref: '#/components/schemas/OptimizationType'
        probePath:
          description: Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
          type: string
        geoFilters:
          description: List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
          type: array
          items:
            $ref: '#/components/schemas/GeoFilter'
          x-ms-identifiers: []
        defaultOriginGroup:
          description: A reference to the origin group.
          type: object
          $ref: '#/components/schemas/ResourceReference'
        urlSigningKeys:
          description: List of keys used to validate the signed URL hashes.
          type: array
          items:
            $ref: '#/components/schemas/UrlSigningKey'
          x-ms-identifiers:
            - keyId
        deliveryPolicy:
          description: A policy that specifies the delivery rules to be used for an endpoint.
          type: object
          required:
            - rules
          properties:
            description:
              description: User-friendly description of the policy.
              type: string
            rules:
              description: A list of the delivery rules.
              type: array
              items:
                $ref: '#/components/schemas/DeliveryRule'
              x-ms-identifiers:
                - name
        webApplicationFirewallPolicyLink:
          description: Defines the Web Application Firewall policy for the endpoint (if applicable)
          type: object
          properties:
            id:
              type: string
              description: Resource ID.
        hostName:
          description: The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
          type: string
          readOnly: true
        origins:
          description: The source of the content being delivered via CDN.
          type: array
          items:
            $ref: '#/components/schemas/DeepCreatedOrigin'
          x-ms-identifiers:
            - name
        originGroups:
          description: The origin groups comprising of origins that are used for load balancing the traffic based on availability.
          type: array
          items:
            $ref: '#/components/schemas/DeepCreatedOriginGroup'
          x-ms-identifiers:
            - name
        customDomains:
          description: The custom domains under the endpoint.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/DeepCreatedCustomDomain'
          x-ms-identifiers:
            - name
        resourceState:
          description: Resource status of the endpoint.
          readOnly: true
          enum:
            - Creating
            - Deleting
            - Running
            - Starting
            - Stopped
            - Stopping
          type: string
          x-ms-enum:
            name: EndpointResourceState
            modelAsString: true
        provisioningState:
          readOnly: true
          description: Provisioning status of the endpoint.
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: EndpointProvisioningState
            modelAsString: true
      type: object
    EndpointListResult:
      description: Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Endpoint'
          description: List of CDN endpoints within a profile
        nextLink:
          type: string
          description: URL to get the next set of endpoint objects if there is any.
      type: object
    EndpointUpdateParameters:
      description: Properties required to create or update an endpoint.
      x-ms-azure-resource: true
      properties:
        tags:
          description: Endpoint tags.
          type: object
          additionalProperties:
            type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EndpointPropertiesUpdateParameters'
      type: object
    EndpointPropertiesUpdateParameters:
      description: The JSON object containing endpoint update parameters.
      properties:
        originPath:
          description: A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
          type: string
        contentTypesToCompress:
          description: List of content types on which compression applies. The value should be a valid MIME type.
          type: array
          items:
            type: string
        originHostHeader:
          description: The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
          type: string
        isCompressionEnabled:
          description: Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
          type: boolean
        isHttpAllowed:
          description: Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
          type: boolean
          default: true
        isHttpsAllowed:
          description: Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
          type: boolean
          default: true
        queryStringCachingBehavior:
          description: Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
          $ref: '#/components/schemas/QueryStringCachingBehavior'
          default: NotSet
        optimizationType:
          description: Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
          $ref: '#/components/schemas/OptimizationType'
        probePath:
          description: Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
          type: string
        geoFilters:
          description: List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
          type: array
          items:
            $ref: '#/components/schemas/GeoFilter'
          x-ms-identifiers: []
        defaultOriginGroup:
          description: A reference to the origin group.
          type: object
          $ref: '#/components/schemas/ResourceReference'
        urlSigningKeys:
          description: List of keys used to validate the signed URL hashes.
          type: array
          items:
            $ref: '#/components/schemas/UrlSigningKey'
          x-ms-identifiers:
            - keyId
        deliveryPolicy:
          description: A policy that specifies the delivery rules to be used for an endpoint.
          type: object
          required:
            - rules
          properties:
            description:
              description: User-friendly description of the policy.
              type: string
            rules:
              description: A list of the delivery rules.
              type: array
              items:
                $ref: '#/components/schemas/DeliveryRule'
              x-ms-identifiers:
                - name
        webApplicationFirewallPolicyLink:
          description: Defines the Web Application Firewall policy for the endpoint (if applicable)
          type: object
          properties:
            id:
              type: string
              description: Resource ID.
      type: object
    DeliveryRule:
      description: A rule that specifies a set of actions and conditions
      type: object
      required:
        - order
        - actions
      properties:
        name:
          description: Name of the rule
          type: string
        order:
          description: The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
          type: integer
          format: int32
        conditions:
          description: A list of conditions that must be matched for the actions to be executed
          type: array
          items:
            $ref: '#/components/schemas/DeliveryRuleCondition'
          x-ms-identifiers:
            - name
        actions:
          description: A list of actions that are executed when all the conditions of a rule are satisfied.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryRuleAction'
          x-ms-identifiers:
            - name
    DeliveryRuleCondition:
      description: A condition for the delivery rule.
      discriminator:
        propertyName: name
      required:
        - name
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
      type: object
    DeliveryRuleRemoteAddressCondition:
      description: Defines the RemoteAddress condition for the delivery rule.
      x-ms-discriminator-value: RemoteAddress
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/RemoteAddressMatchConditionParameters'
      type: object
    DeliveryRuleRequestMethodCondition:
      description: Defines the RequestMethod condition for the delivery rule.
      x-ms-discriminator-value: RequestMethod
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/RequestMethodMatchConditionParameters'
      type: object
    DeliveryRuleQueryStringCondition:
      description: Defines the QueryString condition for the delivery rule.
      x-ms-discriminator-value: QueryString
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/QueryStringMatchConditionParameters'
      type: object
    DeliveryRulePostArgsCondition:
      description: Defines the PostArgs condition for the delivery rule.
      x-ms-discriminator-value: PostArgs
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/PostArgsMatchConditionParameters'
      type: object
    DeliveryRuleRequestUriCondition:
      description: Defines the RequestUri condition for the delivery rule.
      x-ms-discriminator-value: RequestUri
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/RequestUriMatchConditionParameters'
      type: object
    DeliveryRuleRequestHeaderCondition:
      description: Defines the RequestHeader condition for the delivery rule.
      x-ms-discriminator-value: RequestHeader
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/RequestHeaderMatchConditionParameters'
      type: object
    DeliveryRuleRequestBodyCondition:
      description: Defines the RequestBody condition for the delivery rule.
      x-ms-discriminator-value: RequestBody
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/RequestBodyMatchConditionParameters'
      type: object
    DeliveryRuleRequestSchemeCondition:
      description: Defines the RequestScheme condition for the delivery rule.
      x-ms-discriminator-value: RequestScheme
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/RequestSchemeMatchConditionParameters'
      type: object
    DeliveryRuleUrlPathCondition:
      description: Defines the UrlPath condition for the delivery rule.
      x-ms-discriminator-value: UrlPath
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/UrlPathMatchConditionParameters'
      type: object
    DeliveryRuleUrlFileExtensionCondition:
      description: Defines the UrlFileExtension condition for the delivery rule.
      x-ms-discriminator-value: UrlFileExtension
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/UrlFileExtensionMatchConditionParameters'
      type: object
    DeliveryRuleUrlFileNameCondition:
      description: Defines the UrlFileName condition for the delivery rule.
      x-ms-discriminator-value: UrlFileName
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/UrlFileNameMatchConditionParameters'
      type: object
    DeliveryRuleHttpVersionCondition:
      description: Defines the HttpVersion condition for the delivery rule.
      x-ms-discriminator-value: HttpVersion
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/HttpVersionMatchConditionParameters'
      type: object
    DeliveryRuleCookiesCondition:
      description: Defines the Cookies condition for the delivery rule.
      x-ms-discriminator-value: Cookies
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/CookiesMatchConditionParameters'
      type: object
    DeliveryRuleIsDeviceCondition:
      description: Defines the IsDevice condition for the delivery rule.
      x-ms-discriminator-value: IsDevice
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/IsDeviceMatchConditionParameters'
      type: object
    DeliveryRuleSocketAddrCondition:
      description: Defines the SocketAddress condition for the delivery rule.
      x-ms-discriminator-value: SocketAddr
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/SocketAddrMatchConditionParameters'
      type: object
    DeliveryRuleClientPortCondition:
      description: Defines the ClientPort condition for the delivery rule.
      x-ms-discriminator-value: ClientPort
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/ClientPortMatchConditionParameters'
      type: object
    DeliveryRuleServerPortCondition:
      description: Defines the ServerPort condition for the delivery rule.
      x-ms-discriminator-value: ServerPort
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/ServerPortMatchConditionParameters'
      type: object
    DeliveryRuleHostNameCondition:
      description: Defines the HostName condition for the delivery rule.
      x-ms-discriminator-value: HostName
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/HostNameMatchConditionParameters'
      type: object
    DeliveryRuleSslProtocolCondition:
      description: Defines the SslProtocol condition for the delivery rule.
      x-ms-discriminator-value: SslProtocol
      required:
        - parameters
      properties:
        name:
          description: The name of the condition for the delivery rule.
          type: string
          enum:
            - RemoteAddress
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - RequestScheme
            - UrlPath
            - UrlFileExtension
            - UrlFileName
            - HttpVersion
            - Cookies
            - IsDevice
            - SocketAddr
            - ClientPort
            - ServerPort
            - HostName
            - SslProtocol
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        parameters:
          description: Defines the parameters for the condition.
          $ref: '#/components/schemas/SslProtocolMatchConditionParameters'
      type: object
    RemoteAddressMatchConditionParameters:
      description: Defines the parameters for RemoteAddress match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleRemoteAddressConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - IPMatch
            - GeoMatch
          x-ms-enum:
            name: RemoteAddressOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    RequestMethodMatchConditionParameters:
      description: Defines the parameters for RequestMethod match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleRequestMethodConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Equal
          x-ms-enum:
            name: RequestMethodOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
            enum:
              - GET
              - HEAD
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - TRACE
            x-ms-enum:
              name: RequestMethodMatchValue
              modelAsString: true
      type: object
    QueryStringMatchConditionParameters:
      description: Defines the parameters for QueryString match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleQueryStringConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: QueryStringOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    PostArgsMatchConditionParameters:
      description: Defines the parameters for PostArgs match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRulePostArgsConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        selector:
          description: Name of PostArg to be matched
          type: string
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: PostArgsOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    RequestUriMatchConditionParameters:
      description: Defines the parameters for RequestUri match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleRequestUriConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: RequestUriOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    RequestHeaderMatchConditionParameters:
      description: Defines the parameters for RequestHeader match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleRequestHeaderConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        selector:
          description: Name of Header to be matched
          type: string
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: RequestHeaderOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    RequestBodyMatchConditionParameters:
      description: Defines the parameters for RequestBody match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleRequestBodyConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: RequestBodyOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    RequestSchemeMatchConditionParameters:
      description: 'Defines the parameters for RequestScheme match conditions '
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleRequestSchemeConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Equal
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
            enum:
              - HTTP
              - HTTPS
            x-ms-enum:
              name: RequestSchemeMatchValue
              modelAsString: true
      type: object
    UrlPathMatchConditionParameters:
      description: Defines the parameters for UrlPath match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleUrlPathMatchConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - Wildcard
            - RegEx
          x-ms-enum:
            name: UrlPathOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    UrlFileExtensionMatchConditionParameters:
      description: Defines the parameters for UrlFileExtension match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleUrlFileExtensionMatchConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: UrlFileExtensionOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    UrlFileNameMatchConditionParameters:
      description: Defines the parameters for UrlFilename match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleUrlFilenameConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: UrlFileNameOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    HttpVersionMatchConditionParameters:
      description: Defines the parameters for HttpVersion match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleHttpVersionConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Equal
          x-ms-enum:
            name: HttpVersionOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    CookiesMatchConditionParameters:
      description: Defines the parameters for Cookies match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleCookiesConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        selector:
          description: Name of Cookies to be matched
          type: string
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: CookiesOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    IsDeviceMatchConditionParameters:
      description: Defines the parameters for IsDevice match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleIsDeviceConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Equal
          x-ms-enum:
            name: IsDeviceOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
            enum:
              - Mobile
              - Desktop
            x-ms-enum:
              name: IsDeviceMatchValue
              modelAsString: true
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    SocketAddrMatchConditionParameters:
      description: Defines the parameters for SocketAddress match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleSocketAddrConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - IPMatch
          x-ms-enum:
            name: SocketAddrOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    ClientPortMatchConditionParameters:
      description: Defines the parameters for ClientPort match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleClientPortConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: ClientPortOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    ServerPortMatchConditionParameters:
      description: Defines the parameters for ServerPort match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleServerPortConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: ServerPortOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    HostNameMatchConditionParameters:
      description: Defines the parameters for HostName match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleHostNameConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Any
            - Equal
            - Contains
            - BeginsWith
            - EndsWith
            - LessThan
            - LessThanOrEqual
            - GreaterThan
            - GreaterThanOrEqual
            - RegEx
          x-ms-enum:
            name: HostNameOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    SslProtocolMatchConditionParameters:
      description: Defines the parameters for SslProtocol match conditions
      required:
        - operator
      x-ms-discriminator-value: DeliveryRuleSslProtocolConditionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleRemoteAddressConditionParameters
            - DeliveryRuleRequestMethodConditionParameters
            - DeliveryRuleQueryStringConditionParameters
            - DeliveryRulePostArgsConditionParameters
            - DeliveryRuleRequestUriConditionParameters
            - DeliveryRuleRequestHeaderConditionParameters
            - DeliveryRuleRequestBodyConditionParameters
            - DeliveryRuleRequestSchemeConditionParameters
            - DeliveryRuleUrlPathMatchConditionParameters
            - DeliveryRuleUrlFileExtensionMatchConditionParameters
            - DeliveryRuleUrlFilenameConditionParameters
            - DeliveryRuleHttpVersionConditionParameters
            - DeliveryRuleCookiesConditionParameters
            - DeliveryRuleIsDeviceConditionParameters
            - DeliveryRuleSocketAddrConditionParameters
            - DeliveryRuleClientPortConditionParameters
            - DeliveryRuleServerPortConditionParameters
            - DeliveryRuleHostNameConditionParameters
            - DeliveryRuleSslProtocolConditionParameters
          x-ms-enum:
            name: DeliveryRuleConditionParametersType
            modelAsString: true
        operator:
          description: Describes operator to be matched
          type: string
          enum:
            - Equal
          x-ms-enum:
            name: SslProtocolOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
          default: false
        matchValues:
          description: The match value for the condition of the delivery rule
          type: array
          items:
            $ref: '#/components/schemas/SslProtocol'
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    DeliveryRuleAction:
      description: An action for the delivery rule.
      discriminator:
        propertyName: name
      required:
        - name
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
      type: object
    UrlRedirectAction:
      description: Defines the url redirect action for the delivery rule.
      x-ms-discriminator-value: UrlRedirect
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/UrlRedirectActionParameters'
      type: object
    UrlRedirectActionParameters:
      description: Defines the parameters for the url redirect action.
      required:
        - redirectType
      x-ms-discriminator-value: DeliveryRuleUrlRedirectActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        redirectType:
          description: The redirect type the rule will use when redirecting traffic.
          type: string
          enum:
            - Moved
            - Found
            - TemporaryRedirect
            - PermanentRedirect
          x-ms-enum:
            name: RedirectType
            modelAsString: true
        destinationProtocol:
          description: Protocol to use for the redirect. The default value is MatchRequest
          type: string
          enum:
            - MatchRequest
            - Http
            - Https
          x-ms-enum:
            name: DestinationProtocol
            modelAsString: true
        customPath:
          description: The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
          type: string
        customHostname:
          description: Host to redirect. Leave empty to use the incoming host as the destination host.
          type: string
        customQueryString:
          description: The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
          type: string
        customFragment:
          type: string
          description: 'Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.'
      type: object
    UrlSigningAction:
      description: Defines the url signing action for the delivery rule.
      x-ms-discriminator-value: UrlSigning
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/UrlSigningActionParameters'
      type: object
    UrlSigningActionParameters:
      description: Defines the parameters for the Url Signing action.
      x-ms-discriminator-value: DeliveryRuleUrlSigningActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        algorithm:
          description: Algorithm to use for URL signing
          type: string
          enum:
            - SHA256
          x-ms-enum:
            name: algorithm
            modelAsString: true
        parameterNameOverride:
          description: 'Defines which query string parameters in the url to be considered for expires, key id etc. '
          type: array
          items:
            $ref: '#/components/schemas/UrlSigningParamIdentifier'
          x-ms-identifiers:
            - paramName
      type: object
    UrlSigningParamIdentifier:
      description: Defines how to identify a parameter for a specific purpose e.g. expires
      required:
        - paramIndicator
        - paramName
      properties:
        paramIndicator:
          description: Indicates the purpose of the parameter
          type: string
          enum:
            - Expires
            - KeyId
            - Signature
          x-ms-enum:
            name: paramIndicator
            modelAsString: true
        paramName:
          description: Parameter name
          type: string
      type: object
    OriginGroupOverrideAction:
      description: Defines the origin group override action for the delivery rule.
      x-ms-discriminator-value: OriginGroupOverride
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/OriginGroupOverrideActionParameters'
      type: object
    OriginGroupOverrideActionParameters:
      description: Defines the parameters for the origin group override action.
      required:
        - originGroup
      x-ms-discriminator-value: DeliveryRuleOriginGroupOverrideActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        originGroup:
          description: defines the OriginGroup that would override the DefaultOriginGroup.
          type: object
          $ref: '#/components/schemas/ResourceReference'
      type: object
    UrlRewriteAction:
      description: Defines the url rewrite action for the delivery rule.
      x-ms-discriminator-value: UrlRewrite
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/UrlRewriteActionParameters'
      type: object
    UrlRewriteActionParameters:
      description: Defines the parameters for the url rewrite action.
      required:
        - sourcePattern
        - destination
      x-ms-discriminator-value: DeliveryRuleUrlRewriteActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        sourcePattern:
          description: define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
          type: string
        destination:
          description: Define the relative URL to which the above requests will be rewritten by.
          type: string
        preserveUnmatchedPath:
          description: Whether to preserve unmatched path. Default value is true.
          type: boolean
      type: object
    DeliveryRuleRequestHeaderAction:
      description: Defines the request header action for the delivery rule.
      x-ms-discriminator-value: ModifyRequestHeader
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/HeaderActionParameters'
      type: object
    DeliveryRuleResponseHeaderAction:
      description: Defines the response header action for the delivery rule.
      x-ms-discriminator-value: ModifyResponseHeader
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/HeaderActionParameters'
      type: object
    HeaderActionParameters:
      description: Defines the parameters for the request header action.
      required:
        - headerAction
        - headerName
      x-ms-discriminator-value: DeliveryRuleHeaderActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        headerAction:
          description: Action to perform
          type: string
          enum:
            - Append
            - Overwrite
            - Delete
          x-ms-enum:
            name: HeaderAction
            modelAsString: true
        headerName:
          description: Name of the header to modify
          type: string
        value:
          description: Value for the specified action
          type: string
      type: object
    DeliveryRuleCacheExpirationAction:
      description: Defines the cache expiration action for the delivery rule.
      x-ms-discriminator-value: CacheExpiration
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/CacheExpirationActionParameters'
      type: object
    CacheExpirationActionParameters:
      description: Defines the parameters for the cache expiration action.
      required:
        - cacheBehavior
        - cacheType
      x-ms-discriminator-value: DeliveryRuleCacheExpirationActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        cacheBehavior:
          description: Caching behavior for the requests
          type: string
          enum:
            - BypassCache
            - Override
            - SetIfMissing
          x-ms-enum:
            name: cacheBehavior
            modelAsString: true
        cacheType:
          description: The level at which the content needs to be cached.
          type: string
          enum:
            - All
          x-ms-enum:
            name: CacheType
            modelAsString: true
        cacheDuration:
          description: The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
          type: string
          nullable: true
      type: object
    DeliveryRuleCacheKeyQueryStringAction:
      description: Defines the cache-key query string action for the delivery rule.
      x-ms-discriminator-value: CacheKeyQueryString
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/CacheKeyQueryStringActionParameters'
      type: object
    CacheKeyQueryStringActionParameters:
      description: Defines the parameters for the cache-key query string action.
      required:
        - queryStringBehavior
      x-ms-discriminator-value: DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        queryStringBehavior:
          description: Caching behavior for the requests
          type: string
          enum:
            - Include
            - IncludeAll
            - Exclude
            - ExcludeAll
          x-ms-enum:
            name: queryStringBehavior
            modelAsString: true
        queryParameters:
          description: query parameters to include or exclude (comma separated).
          type: string
          nullable: true
      type: object
    DeliveryRuleRouteConfigurationOverrideAction:
      description: Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
      x-ms-discriminator-value: RouteConfigurationOverride
      required:
        - parameters
      properties:
        name:
          description: The name of the action for the delivery rule.
          type: string
          enum:
            - CacheExpiration
            - CacheKeyQueryString
            - ModifyRequestHeader
            - ModifyResponseHeader
            - UrlRedirect
            - UrlRewrite
            - UrlSigning
            - OriginGroupOverride
            - RouteConfigurationOverride
          x-ms-enum:
            name: DeliveryRuleActionName
            modelAsString: true
        parameters:
          description: Defines the parameters for the action.
          $ref: '#/components/schemas/RouteConfigurationOverrideActionParameters'
      type: object
    RouteConfigurationOverrideActionParameters:
      description: Defines the parameters for the route configuration override action.
      x-ms-discriminator-value: DeliveryRuleRouteConfigurationOverrideActionParameters
      properties:
        typeName:
          type: string
          enum:
            - DeliveryRuleUrlRedirectActionParameters
            - DeliveryRuleUrlSigningActionParameters
            - DeliveryRuleOriginGroupOverrideActionParameters
            - DeliveryRuleUrlRewriteActionParameters
            - DeliveryRuleHeaderActionParameters
            - DeliveryRuleCacheExpirationActionParameters
            - DeliveryRuleCacheKeyQueryStringBehaviorActionParameters
            - DeliveryRuleRouteConfigurationOverrideActionParameters
          x-ms-enum:
            name: DeliveryRuleActionParametersType
            modelAsString: true
        originGroupOverride:
          description: A reference to the origin group override configuration. Leave empty to use the default origin group on route.
          type: object
          $ref: '#/components/schemas/OriginGroupOverride'
        cacheConfiguration:
          description: The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object.
          type: object
          $ref: '#/components/schemas/CacheConfiguration'
      type: object
    OriginGroupOverride:
      description: Defines the parameters for the origin group override configuration.
      type: object
      properties:
        originGroup:
          description: defines the OriginGroup that would override the DefaultOriginGroup on route.
          type: object
          $ref: '#/components/schemas/ResourceReference'
        forwardingProtocol:
          description: Protocol this rule will use when forwarding traffic to backends.
          type: string
          enum:
            - HttpOnly
            - HttpsOnly
            - MatchRequest
          x-ms-enum:
            name: ForwardingProtocol
            modelAsString: true
    CacheConfiguration:
      description: Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
      type: object
      properties:
        queryStringCachingBehavior:
          description: Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
          enum:
            - IgnoreQueryString
            - UseQueryString
            - IgnoreSpecifiedQueryStrings
            - IncludeSpecifiedQueryStrings
          type: string
          x-ms-enum:
            name: ruleQueryStringCachingBehavior
            modelAsString: true
        queryParameters:
          description: query parameters to include or exclude (comma separated).
          type: string
        isCompressionEnabled:
          description: Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ruleIsCompressionEnabled
            modelAsString: true
        cacheBehavior:
          description: Caching behavior for the requests
          type: string
          enum:
            - HonorOrigin
            - OverrideAlways
            - OverrideIfOriginMissing
          x-ms-enum:
            name: ruleCacheBehavior
            modelAsString: true
        cacheDuration:
          description: The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
          type: string
    transform:
      description: Describes what transforms are applied before matching
      type: string
      enum:
        - Lowercase
        - Uppercase
        - Trim
        - UrlDecode
        - UrlEncode
        - RemoveNulls
      x-ms-enum:
        name: transform
        modelAsString: true
    SslProtocol:
      description: The protocol of an established TLS connection.
      type: string
      enum:
        - TLSv1
        - TLSv1.1
        - TLSv1.2
      x-ms-enum:
        name: SslProtocol
        modelAsString: true
    DeepCreatedOrigin:
      description: The main origin of CDN content which is added when creating a CDN endpoint.
      required:
        - name
      x-ms-azure-resource: true
      properties:
        name:
          description: 'Origin name which must be unique within the endpoint. '
          type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeepCreatedOriginProperties'
      type: object
    DeepCreatedOriginProperties:
      description: Properties of the origin created on the CDN endpoint.
      type: object
      required:
        - hostName
      properties:
        hostName:
          description: The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
          type: string
        httpPort:
          description: The value of the HTTP port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        httpsPort:
          description: The value of the HTTPS port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        originHostHeader:
          description: The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
          type: string
        priority:
          description: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
          type: integer
          format: int32
          maximum: 5
          minimum: 1
        weight:
          description: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
          type: integer
          format: int32
          maximum: 1000
          minimum: 1
        enabled:
          description: Origin is enabled for load balancing or not. By default, origin is always enabled.
          type: boolean
        privateLinkAlias:
          description: The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
          type: string
        privateLinkResourceId:
          description: The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
          type: string
        privateLinkLocation:
          description: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
          type: string
        privateLinkApprovalMessage:
          description: A custom message to be included in the approval request to connect to the Private Link.
          type: string
        privateEndpointStatus:
          description: The approval status for the connection to the Private Link
          $ref: '#/components/schemas/PrivateEndpointStatus'
          type: string
          readOnly: true
      x-ms-azure-resource: true
    DeepCreatedOriginGroup:
      description: The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
      required:
        - name
      x-ms-azure-resource: true
      properties:
        name:
          description: Origin group name which must be unique within the endpoint.
          type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeepCreatedOriginGroupProperties'
      type: object
    DeepCreatedOriginGroupProperties:
      description: Properties of the origin group created on the CDN endpoint.
      type: object
      required:
        - origins
      properties:
        healthProbeSettings:
          description: Health probe settings to the origin that is used to determine the health of the origin.
          type: object
          $ref: '#/components/schemas/HealthProbeParameters'
        origins:
          description: The source of the content being delivered via CDN within given origin group.
          type: array
          items:
            description: A reference to a origin.
            $ref: '#/components/schemas/ResourceReference'
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes:
          description: Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
          type: integer
          format: int32
          maximum: 50
          minimum: 0
        responseBasedOriginErrorDetectionSettings:
          description: The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
          type: object
          $ref: '#/components/schemas/ResponseBasedOriginErrorDetectionParameters'
      x-ms-azure-resource: true
    ResourceReference:
      properties:
        id:
          type: string
          description: Resource ID.
      description: Reference to another resource.
      x-ms-azure-resource: true
      type: object
    GeoFilter:
      description: Rules defining user's geo access within a CDN endpoint.
      type: object
      required:
        - relativePath
        - action
        - countryCodes
      properties:
        relativePath:
          description: Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
          type: string
        action:
          description: Action of the geo filter, i.e. allow or block access.
          enum:
            - Block
            - Allow
          type: string
          x-ms-enum:
            name: GeoFilterActions
            modelAsString: false
        countryCodes:
          description: Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
          type: array
          items:
            type: string
    PurgeParameters:
      type: object
      description: Parameters required for content purge.
      required:
        - contentPaths
      properties:
        contentPaths:
          description: The path to the content to be purged. Can describe a file path or a wild card directory.
          type: array
          items:
            type: string
    UrlSigningKey:
      description: Url signing key
      required:
        - keyId
        - keySourceParameters
      properties:
        keyId:
          description: Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
          type: string
        keySourceParameters:
          description: Defines the parameters for using customer key vault for Url Signing Key.
          $ref: '#/components/schemas/KeyVaultSigningKeyParameters'
      type: object
    KeyVaultSigningKeyParameters:
      description: Describes the parameters for using a user's KeyVault for URL Signing Key.
      required:
        - typeName
        - subscriptionId
        - resourceGroupName
        - vaultName
        - secretName
        - secretVersion
      properties:
        typeName:
          type: string
          enum:
            - KeyVaultSigningKeyParameters
          x-ms-enum:
            name: KeyVaultSigningKeyParametersType
            modelAsString: true
        subscriptionId:
          description: Subscription Id of the user's Key Vault containing the secret
          type: string
        resourceGroupName:
          description: Resource group of the user's Key Vault containing the secret
          type: string
        vaultName:
          description: The name of the user's Key Vault containing the secret
          type: string
        secretName:
          description: The name of secret in Key Vault.
          type: string
        secretVersion:
          description: The version(GUID) of secret in Key Vault.
          type: string
      type: object
    LoadParameters:
      type: object
      description: Parameters required for content load.
      required:
        - contentPaths
      properties:
        contentPaths:
          description: The path to the content to be loaded. Path should be a relative file URL of the origin.
          type: array
          items:
            type: string
    Origin:
      description: CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OriginProperties'
      type: object
    OriginProperties:
      description: The JSON object that contains the properties of the origin.
      required:
        - hostName
      properties:
        hostName:
          description: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
          type: string
        httpPort:
          description: The value of the HTTP port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        httpsPort:
          description: The value of the HTTPS port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        originHostHeader:
          description: The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
          type: string
        priority:
          description: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
          type: integer
          format: int32
          maximum: 5
          minimum: 1
        weight:
          description: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
          type: integer
          format: int32
          maximum: 1000
          minimum: 1
        enabled:
          description: Origin is enabled for load balancing or not
          type: boolean
        privateLinkAlias:
          description: The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
          type: string
        privateLinkResourceId:
          description: The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
          type: string
        privateLinkLocation:
          description: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
          type: string
        privateLinkApprovalMessage:
          description: A custom message to be included in the approval request to connect to the Private Link.
          type: string
        resourceState:
          description: Resource status of the origin.
          readOnly: true
          enum:
            - Creating
            - Active
            - Deleting
          type: string
          x-ms-enum:
            name: OriginResourceState
            modelAsString: true
        provisioningState:
          readOnly: true
          description: Provisioning status of the origin.
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: OriginProvisioningState
            modelAsString: true
        privateEndpointStatus:
          description: The approval status for the connection to the Private Link
          $ref: '#/components/schemas/PrivateEndpointStatus'
          type: string
          readOnly: true
      type: object
    OriginUpdateParameters:
      description: Origin properties needed for origin update.
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OriginUpdatePropertiesParameters'
      type: object
    OriginUpdatePropertiesParameters:
      description: The JSON object that contains the properties of the origin.
      properties:
        hostName:
          description: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.
          type: string
        httpPort:
          description: The value of the HTTP port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        httpsPort:
          description: The value of the HTTPS port. Must be between 1 and 65535.
          type: integer
          format: int32
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        originHostHeader:
          description: The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
          type: string
        priority:
          description: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
          type: integer
          format: int32
          maximum: 5
          minimum: 1
        weight:
          description: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
          type: integer
          format: int32
          maximum: 1000
          minimum: 1
        enabled:
          description: Origin is enabled for load balancing or not
          type: boolean
        privateLinkAlias:
          description: The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
          type: string
        privateLinkResourceId:
          description: The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
          type: string
        privateLinkLocation:
          description: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
          type: string
        privateLinkApprovalMessage:
          description: A custom message to be included in the approval request to connect to the Private Link.
          type: string
      type: object
    OriginListResult:
      description: Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Origin'
          description: List of CDN origins within an endpoint
        nextLink:
          type: string
          description: URL to get the next set of origin objects if there are any.
      type: object
    OriginGroup:
      description: Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OriginGroupProperties'
      type: object
    OriginGroupProperties:
      description: The JSON object that contains the properties of the origin group.
      required:
        - origins
      properties:
        healthProbeSettings:
          description: Health probe settings to the origin that is used to determine the health of the origin.
          type: object
          $ref: '#/components/schemas/HealthProbeParameters'
        origins:
          description: The source of the content being delivered via CDN within given origin group.
          type: array
          items:
            description: A reference to a origin.
            $ref: '#/components/schemas/ResourceReference'
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes:
          description: Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
          type: integer
          format: int32
          maximum: 50
          minimum: 0
        responseBasedOriginErrorDetectionSettings:
          description: The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported.
          type: object
          $ref: '#/components/schemas/ResponseBasedOriginErrorDetectionParameters'
        resourceState:
          description: Resource status of the origin group.
          readOnly: true
          enum:
            - Creating
            - Active
            - Deleting
          type: string
          x-ms-enum:
            name: OriginGroupResourceState
            modelAsString: true
        provisioningState:
          readOnly: true
          description: Provisioning status of the origin group.
          type: string
          enum:
            - Succeeded
            - Failed
            - Updating
            - Deleting
            - Creating
          x-ms-enum:
            name: OriginGroupProvisioningState
            modelAsString: true
      type: object
    OriginGroupUpdateParameters:
      description: Origin group properties needed for origin group creation or update.
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OriginGroupUpdatePropertiesParameters'
      type: object
    OriginGroupUpdatePropertiesParameters:
      description: The JSON object that contains the properties of the origin group.
      properties:
        healthProbeSettings:
          description: Health probe settings to the origin that is used to determine the health of the origin.
          type: object
          $ref: '#/components/schemas/HealthProbeParameters'
        origins:
          description: The source of the content being delivered via CDN within given origin group.
          type: array
          items:
            description: A reference to a origin.
            $ref: '#/components/schemas/ResourceReference'
        trafficRestorationTimeToHealedOrNewEndpointsInMinutes:
          description: Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
          type: integer
          format: int32
          maximum: 50
          minimum: 0
        responseBasedOriginErrorDetectionSettings:
          description: The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported.
          type: object
          $ref: '#/components/schemas/ResponseBasedOriginErrorDetectionParameters'
      type: object
    HealthProbeParameters:
      description: The JSON object that contains the properties to send health probes to origin.
      properties:
        probePath:
          description: The path relative to the origin that is used to determine the health of the origin.
          type: string
        probeRequestType:
          description: The type of health probe request that is made.
          enum:
            - NotSet
            - GET
            - HEAD
          type: string
          x-ms-enum:
            name: HealthProbeRequestType
            modelAsString: false
        probeProtocol:
          description: Protocol to use for health probe.
          type: string
          enum:
            - NotSet
            - Http
            - Https
          x-ms-enum:
            name: ProbeProtocol
            modelAsString: false
        probeIntervalInSeconds:
          description: The number of seconds between health probes.Default is 240sec.
          type: integer
          format: int32
          maximum: 255
          minimum: 1
      type: object
    ResponseBasedOriginErrorDetectionParameters:
      description: The JSON object that contains the properties to determine origin health using real requests/responses.
      properties:
        responseBasedDetectedErrorTypes:
          description: Type of response errors for real user requests for which origin will be deemed unhealthy
          type: string
          enum:
            - None
            - TcpErrorsOnly
            - TcpAndHttpErrors
          x-ms-enum:
            name: ResponseBasedDetectedErrorTypes
            modelAsString: false
        responseBasedFailoverThresholdPercentage:
          description: The percentage of failed requests in the sample where failover should trigger.
          type: integer
          format: int32
          maximum: 100
          minimum: 0
        httpErrorRanges:
          description: The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
          type: array
          items:
            $ref: '#/components/schemas/HttpErrorRangeParameters'
          x-ms-identifiers: []
      type: object
    HttpErrorRangeParameters:
      description: The JSON object that represents the range for http status codes
      properties:
        begin:
          description: The inclusive start of the http status code range.
          type: integer
          format: int32
          maximum: 999
          minimum: 100
        end:
          description: The inclusive end of the http status code range.
          type: integer
          format: int32
          maximum: 999
          minimum: 100
      type: object
    OriginGroupListResult:
      description: Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/OriginGroup'
          description: List of CDN origin groups within an endpoint
        nextLink:
          type: string
          description: URL to get the next set of origin objects if there are any.
      type: object
    DeepCreatedCustomDomain:
      description: Custom domains created on the CDN endpoint.
      required:
        - name
      properties:
        name:
          description: Custom domain name.
          type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeepCreatedCustomDomainProperties'
      type: object
    DeepCreatedCustomDomainProperties:
      description: Properties of the custom domain created on the CDN endpoint.
      type: object
      required:
        - hostName
      properties:
        hostName:
          description: The host name of the custom domain. Must be a domain name.
          type: string
        validationData:
          description: Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
          type: string
    CustomDomain:
      description: Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CustomDomainProperties'
      type: object
    CustomDomainProperties:
      description: The JSON object that contains the properties of the custom domain to create.
      required:
        - hostName
      properties:
        hostName:
          description: The host name of the custom domain. Must be a domain name.
          type: string
        resourceState:
          description: Resource status of the custom domain.
          readOnly: true
          enum:
            - Creating
            - Active
            - Deleting
          type: string
          x-ms-enum:
            name: CustomDomainResourceState
            modelAsString: true
        customHttpsProvisioningState:
          description: Provisioning status of the custom domain.
          readOnly: true
          enum:
            - Enabling
            - Enabled
            - Disabling
            - Disabled
            - Failed
          type: string
          x-ms-enum:
            name: CustomHttpsProvisioningState
            modelAsString: true
        customHttpsProvisioningSubstate:
          description: Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
          readOnly: true
          enum:
            - SubmittingDomainControlValidationRequest
            - PendingDomainControlValidationREquestApproval
            - DomainControlValidationRequestApproved
            - DomainControlValidationRequestRejected
            - DomainControlValidationRequestTimedOut
            - IssuingCertificate
            - DeployingCertificate
            - CertificateDeployed
            - DeletingCertificate
            - CertificateDeleted
          type: string
          x-ms-enum:
            name: CustomHttpsProvisioningSubstate
            modelAsString: true
        customHttpsParameters:
          description: Certificate parameters for securing custom HTTPS
          $ref: '#/components/schemas/CustomDomainHttpsParameters'
        validationData:
          description: Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
          type: string
        provisioningState:
          description: Provisioning status of Custom Https of the custom domain.
          readOnly: true
          enum:
            - Enabling
            - Enabled
            - Disabling
            - Disabled
            - Failed
          type: string
          x-ms-enum:
            name: CustomHttpsProvisioningState
            modelAsString: true
      type: object
    CustomDomainParameters:
      description: The customDomain JSON object required for custom domain creation or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CustomDomainPropertiesParameters'
      type: object
    CustomDomainPropertiesParameters:
      description: The JSON object that contains the properties of the custom domain to create.
      required:
        - hostName
      properties:
        hostName:
          description: The host name of the custom domain. Must be a domain name.
          type: string
      type: object
    CustomDomainHttpsParameters:
      description: The JSON object that contains the properties to secure a custom domain.
      discriminator:
        propertyName: certificateSource
      required:
        - certificateSource
        - protocolType
      properties:
        certificateSource:
          description: Defines the source of the SSL certificate.
          enum:
            - AzureKeyVault
            - Cdn
          type: string
          x-ms-enum:
            name: CertificateSource
            modelAsString: true
        protocolType:
          description: Defines the TLS extension protocol that is used for secure delivery.
          enum:
            - ServerNameIndication
            - IPBased
          type: string
          x-ms-enum:
            name: ProtocolType
            modelAsString: true
        minimumTlsVersion:
          description: TLS protocol version that will be used for Https
          enum:
            - None
            - TLS10
            - TLS12
          type: string
          x-ms-enum:
            name: MinimumTlsVersion
            modelAsString: false
      type: object
    CdnManagedHttpsParameters:
      description: Defines the certificate source parameters using CDN managed certificate for enabling SSL.
      x-ms-discriminator-value: Cdn
      required:
        - certificateSourceParameters
      properties:
        certificateSource:
          description: Defines the source of the SSL certificate.
          enum:
            - AzureKeyVault
            - Cdn
          type: string
          x-ms-enum:
            name: CertificateSource
            modelAsString: true
        protocolType:
          description: Defines the TLS extension protocol that is used for secure delivery.
          enum:
            - ServerNameIndication
            - IPBased
          type: string
          x-ms-enum:
            name: ProtocolType
            modelAsString: true
        minimumTlsVersion:
          description: TLS protocol version that will be used for Https
          enum:
            - None
            - TLS10
            - TLS12
          type: string
          x-ms-enum:
            name: MinimumTlsVersion
            modelAsString: false
        certificateSourceParameters:
          description: Defines the certificate source parameters using CDN managed certificate for enabling SSL.
          $ref: '#/components/schemas/CdnCertificateSourceParameters'
      type: object
    CdnCertificateSourceParameters:
      description: Defines the parameters for using CDN managed certificate for securing custom domain.
      required:
        - certificateType
      x-ms-discriminator-value: CdnCertificateSourceParameters
      properties:
        typeName:
          type: string
          enum:
            - CdnCertificateSourceParameters
            - KeyVaultCertificateSourceParameters
          x-ms-enum:
            name: CertificateSourceParametersType
            modelAsString: true
        certificateType:
          description: Type of certificate used
          enum:
            - Shared
            - Dedicated
          type: string
          x-ms-enum:
            name: CertificateType
            modelAsString: true
      type: object
    UserManagedHttpsParameters:
      description: Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
      x-ms-discriminator-value: AzureKeyVault
      required:
        - certificateSourceParameters
      properties:
        certificateSource:
          description: Defines the source of the SSL certificate.
          enum:
            - AzureKeyVault
            - Cdn
          type: string
          x-ms-enum:
            name: CertificateSource
            modelAsString: true
        protocolType:
          description: Defines the TLS extension protocol that is used for secure delivery.
          enum:
            - ServerNameIndication
            - IPBased
          type: string
          x-ms-enum:
            name: ProtocolType
            modelAsString: true
        minimumTlsVersion:
          description: TLS protocol version that will be used for Https
          enum:
            - None
            - TLS10
            - TLS12
          type: string
          x-ms-enum:
            name: MinimumTlsVersion
            modelAsString: false
        certificateSourceParameters:
          description: Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
          $ref: '#/components/schemas/KeyVaultCertificateSourceParameters'
      type: object
    KeyVaultCertificateSourceParameters:
      description: Describes the parameters for using a user's KeyVault certificate for securing custom domain.
      required:
        - subscriptionId
        - resourceGroupName
        - vaultName
        - secretName
        - updateRule
        - deleteRule
      x-ms-discriminator-value: KeyVaultCertificateSourceParameters
      properties:
        typeName:
          type: string
          enum:
            - CdnCertificateSourceParameters
            - KeyVaultCertificateSourceParameters
          x-ms-enum:
            name: CertificateSourceParametersType
            modelAsString: true
        subscriptionId:
          description: Subscription Id of the user's Key Vault containing the SSL certificate
          type: string
        resourceGroupName:
          description: Resource group of the user's Key Vault containing the SSL certificate
          type: string
        vaultName:
          description: The name of the user's Key Vault containing the SSL certificate
          type: string
        secretName:
          description: The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
          type: string
        secretVersion:
          description: The version(GUID) of Key Vault Secret in Key Vault.
          type: string
        updateRule:
          description: Describes the action that shall be taken when the certificate is updated in Key Vault.
          type: string
          enum:
            - NoAction
          x-ms-enum:
            name: UpdateRule
            modelAsString: true
        deleteRule:
          description: Describes the action that shall be taken when the certificate is removed from Key Vault.
          type: string
          enum:
            - NoAction
          x-ms-enum:
            name: DeleteRule
            modelAsString: true
      type: object
    CustomDomainListResult:
      description: Result of the request to list custom domains. It contains a list of custom domain objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomDomain'
          description: List of CDN CustomDomains within an endpoint.
        nextLink:
          type: string
          description: URL to get the next set of custom domain objects if there are any.
      type: object
    ValidateCustomDomainInput:
      description: Input of the custom domain to be validated for DNS mapping.
      type: object
      required:
        - hostName
      properties:
        hostName:
          description: The host name of the custom domain. Must be a domain name.
          type: string
    ValidateCustomDomainOutput:
      description: Output of custom domain validation.
      type: object
      properties:
        customDomainValidated:
          description: Indicates whether the custom domain is valid or not.
          readOnly: true
          type: boolean
        reason:
          description: The reason why the custom domain is not valid.
          readOnly: true
          type: string
        message:
          description: Error message describing why the custom domain is not valid.
          readOnly: true
          type: string
    CheckNameAvailabilityInput:
      description: Input of CheckNameAvailability API.
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: The resource name to validate.
          type: string
        type:
          description: The type of the resource whose name is to be validated.
          $ref: '#/components/schemas/ResourceType'
    CheckNameAvailabilityOutput:
      description: Output of check name availability API.
      type: object
      properties:
        nameAvailable:
          description: Indicates whether the name is available.
          readOnly: true
          type: boolean
        reason:
          description: The reason why the name is not available.
          readOnly: true
          type: string
        message:
          description: The detailed error message describing why the name is not available.
          readOnly: true
          type: string
    ValidateProbeInput:
      description: Input of the validate probe API.
      properties:
        probeURL:
          description: The probe URL to validate.
          type: string
      required:
        - probeURL
      type: object
    ValidateProbeOutput:
      description: Output of the validate probe API.
      properties:
        isValid:
          description: Indicates whether the probe URL is accepted or not.
          readOnly: true
          type: boolean
        errorCode:
          description: Specifies the error code when the probe url is not accepted.
          readOnly: true
          type: string
        message:
          description: The detailed error message describing why the probe URL is not accepted.
          readOnly: true
          type: string
      type: object
    ResourceUsageListResult:
      description: Output of check resource usage API.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceUsage'
          x-ms-identifiers:
            - resourceType
          description: List of resource usages.
        nextLink:
          type: string
          description: URL to get the next set of custom domain objects if there are any.
      type: object
    ResourceUsage:
      description: Output of check resource usage API.
      type: object
      properties:
        resourceType:
          type: string
          readOnly: true
          description: Resource type for which the usage is provided.
        unit:
          type: string
          readOnly: true
          description: Unit of the usage. e.g. count.
          enum:
            - count
          x-ms-enum:
            name: ResourceUsageUnit
            modelAsString: true
        currentValue:
          type: integer
          format: int32
          readOnly: true
          description: Actual value of usage on the specified resource type.
        limit:
          type: integer
          format: int32
          readOnly: true
          description: Quota of the specified resource type.
    ResourceType:
      description: Type of CDN resource used in CheckNameAvailability.
      enum:
        - Microsoft.Cdn/Profiles/Endpoints
        - Microsoft.Cdn/Profiles/AfdEndpoints
      type: string
      x-ms-enum:
        name: ResourceType
        modelAsString: true
    OperationsListResult:
      description: Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of CDN operations supported by the CDN resource provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    Operation:
      description: CDN REST API operation
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          readOnly: true
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          description: The object that represents the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft.Cdn'
              readOnly: true
              type: string
            resource:
              description: 'Resource on which the operation is performed: Profile, endpoint, etc.'
              readOnly: true
              type: string
            operation:
              description: 'Operation type: Read, write, delete, etc.'
              readOnly: true
              type: string
            description:
              description: Description of operation.
              readOnly: true
              type: string
        origin:
          type: string
          readOnly: true
          description: The origin of operations.
        properties:
          description: Properties of operation, include metric specifications.
          x-ms-client-flatten: true
          x-ms-client-name: OperationProperties
          $ref: '#/components/schemas/OperationProperties'
      type: object
    OperationProperties:
      description: Properties of operation, include metric specifications.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: One property of operation, include metric specifications.
    ServiceSpecification:
      description: One property of operation, include log specifications.
      type: object
      properties:
        logSpecifications:
          description: Log specifications of operation.
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - name
        metricSpecifications:
          description: Metric specifications of operation.
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          x-ms-identifiers:
            - name
    LogSpecification:
      description: Log specification of operation.
      type: object
      properties:
        name:
          type: string
          description: Name of log specification.
        displayName:
          type: string
          description: Display name of log specification.
        blobDuration:
          type: string
          description: Blob duration of specification.
        logFilterPattern:
          type: string
          description: Pattern to filter based on name
    MetricSpecification:
      description: Metric specification of operation.
      type: object
      properties:
        name:
          type: string
          description: Name of metric specification.
        displayName:
          type: string
          description: Display name of metric specification.
        displayDescription:
          type: string
          description: Display description of metric specification.
        unit:
          type: string
          description: 'The metric unit. Possible values include: ''Bytes'', ''Count'', ''Milliseconds''.'
        aggregationType:
          type: string
          description: 'The metric aggregation type. Possible values include: ''Average'', ''Count'', ''Total''.'
        availabilities:
          description: Retention policies of a resource metric.
          type: array
          items:
            $ref: '#/components/schemas/MetricAvailability'
          x-ms-identifiers: []
        supportedTimeGrainTypes:
          type: array
          description: The supported time grain types for the metrics.
          items:
            type: string
        dimensions:
          type: array
          description: The dimensions of metric
          items:
            $ref: '#/components/schemas/DimensionProperties'
          x-ms-identifiers:
            - name
        fillGapWithZero:
          type: boolean
          description: Property to specify whether to fill gap with zero.
        metricFilterPattern:
          type: string
          description: Pattern to filter based on name
        isInternal:
          type: boolean
          description: Property to specify metric is internal or not.
    DimensionProperties:
      description: 'Type of operation: get, read, delete, etc.'
      type: object
      properties:
        name:
          type: string
          description: Name of dimension.
        displayName:
          type: string
          description: Display name of dimension.
        internalName:
          type: string
          description: Internal name of dimension.
    MetricAvailability:
      description: Retention policy of a resource metric.
      type: object
      properties:
        timeGrain:
          type: string
        blobDuration:
          type: string
    EdgenodeResult:
      description: Result of the request to list CDN edgenodes. It contains a list of ip address group and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/EdgeNode'
          description: Edge node of CDN service.
        nextLink:
          type: string
          description: URL to get the next set of edgenode list results if there are any.
      type: object
    EdgeNode:
      description: Edgenode is a global Point of Presence (POP) location used to deliver CDN content to end users.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EdgeNodeProperties'
      type: object
    EdgeNodeProperties:
      description: The JSON object that contains the properties required to create an edgenode.
      required:
        - ipAddressGroups
      properties:
        ipAddressGroups:
          description: List of ip address groups.
          type: array
          items:
            $ref: '#/components/schemas/IpAddressGroup'
          x-ms-identifiers:
            - deliveryRegion
      type: object
    IpAddressGroup:
      description: CDN Ip address group
      type: object
      properties:
        deliveryRegion:
          description: The delivery region of the ip address group
          type: string
        ipv4Addresses:
          description: The list of ip v4 addresses.
          type: array
          items:
            $ref: '#/components/schemas/cidrIpAddress'
          x-ms-identifiers:
            - baseIpAddress
        ipv6Addresses:
          description: The list of ip v6 addresses.
          type: array
          items:
            $ref: '#/components/schemas/cidrIpAddress'
          x-ms-identifiers:
            - baseIpAddress
    cidrIpAddress:
      description: CIDR Ip address
      type: object
      properties:
        baseIpAddress:
          description: Ip address itself.
          type: string
        prefixLength:
          description: The length of the prefix of the ip address.
          type: integer
          format: int32
    Resource:
      description: The core properties of ARM resources
      properties:
        id:
          description: Resource ID.
          readOnly: true
          type: string
        name:
          description: Resource name.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
      x-ms-azure-resource: true
      type: object
    SystemData:
      description: Read only system data
      readOnly: true
      type: object
      properties:
        createdBy:
          type: string
          description: An identifier for the identity that created the resource
        createdByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that created the resource
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC)
        lastModifiedBy:
          type: string
          description: An identifier for the identity that last modified the resource
        lastModifiedByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that last modified the resource
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    IdentityType:
      description: The type of identity that creates/modifies resources
      type: string
      enum:
        - user
        - application
        - managedIdentity
        - key
      x-ms-enum:
        name: IdentityType
        modelAsString: true
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource.
      required:
        - location
      properties:
        id:
          description: Resource ID.
          readOnly: true
          type: string
        name:
          description: Resource name.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      properties:
        id:
          description: Resource ID.
          readOnly: true
          type: string
        name:
          description: Resource name.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
      type: object
    QueryStringCachingBehavior:
      description: Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
      enum:
        - IgnoreQueryString
        - BypassCaching
        - UseQueryString
        - NotSet
      type: string
      x-ms-enum:
        name: QueryStringCachingBehavior
        modelAsString: false
    PrivateEndpointStatus:
      description: The approval status for the connection to the Private Link
      type: string
      enum:
        - Pending
        - Approved
        - Rejected
        - Disconnected
        - Timeout
      x-ms-enum:
        name: PrivateEndpointStatus
        modelAsString: true
    Sku:
      description: |
        Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
        Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
        Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
        Standard_Akamai = The SKU name for an Akamai CDN profile.
        Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
        Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
        Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
        Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
        Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
        Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
        StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
        StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
        StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
      properties:
        name:
          description: Name of the pricing tier.
          enum:
            - Standard_Verizon
            - Premium_Verizon
            - Custom_Verizon
            - Standard_Akamai
            - Standard_ChinaCdn
            - Standard_Microsoft
            - Standard_AzureFrontDoor
            - Premium_AzureFrontDoor
            - Standard_955BandWidth_ChinaCdn
            - Standard_AvgBandWidth_ChinaCdn
            - StandardPlus_ChinaCdn
            - StandardPlus_955BandWidth_ChinaCdn
            - StandardPlus_AvgBandWidth_ChinaCdn
          type: string
          x-ms-enum:
            name: SkuName
            modelAsString: true
      type: object
    OptimizationType:
      description: Specifies what scenario the customer wants this CDN endpoint to optimize, e.g. Download, Media services. With this information we can apply scenario driven optimization.
      enum:
        - GeneralWebDelivery
        - GeneralMediaStreaming
        - VideoOnDemandMediaStreaming
        - LargeFileDownload
        - DynamicSiteAcceleration
      type: string
      x-ms-enum:
        name: OptimizationType
        modelAsString: true
    ErrorResponse:
      title: Error response
      description: Error response indicates Azure Front Door Standard or Azure Front Door Premium or CDN service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
  x-stackQL-resources:
    policies:
      id: azure.cdn.policies
      name: policies
      title: policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1cdnWebApplicationFirewallPolicies?api-version=2024-02-01/get'
            operationId: Policies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CdnWebApplicationFirewallPolicyList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1cdnWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/get'
            operationId: Policies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CdnWebApplicationFirewallPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1cdnWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/put'
            operationId: Policies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CdnWebApplicationFirewallPolicy
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1cdnWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/patch'
            operationId: Policies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CdnWebApplicationFirewallPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1cdnWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/delete'
            operationId: Policies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/policies/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/policies/methods/delete'
    managed_rule_sets:
      id: azure.cdn.managed_rule_sets
      name: managed_rule_sets
      title: managed_rule_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cdn~1cdnWebApplicationFirewallManagedRuleSets?api-version=2024-02-01/get'
            operationId: ManagedRuleSets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedRuleSetDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_rule_sets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.cdn.operations
      name: operations
      title: operations
      methods:
        check_endpoint_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1checkEndpointNameAvailability?api-version=2024-02-01/post'
            operationId: Operations_CheckEndpointNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckEndpointNameAvailabilityOutput
        check_name_availability:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Cdn~1checkNameAvailability?api-version=2024-02-01/post'
            operationId: Operations_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityOutput
        check_name_availability_with_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cdn~1checkNameAvailability?api-version=2024-02-01/post'
            operationId: Operations_CheckNameAvailabilityWithSubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityOutput
        validate_probe:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cdn~1validateProbe?api-version=2024-02-01/post'
            operationId: Operations_ValidateProbe
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateProbeOutput
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Cdn~1operations?api-version=2024-02-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    afd_profiles:
      id: azure.cdn.afd_profiles
      name: afd_profiles
      title: afd_profiles
      methods:
        check_endpoint_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1checkEndpointNameAvailability?api-version=2024-02-01/post'
            operationId: AFDProfiles_CheckEndpointNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckEndpointNameAvailabilityOutput
        check_host_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1checkHostNameAvailability?api-version=2024-02-01/post'
            operationId: AFDProfiles_CheckHostNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityOutput
        validate_secret:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1validateSecret?api-version=2024-02-01/post'
            operationId: AFDProfiles_ValidateSecret
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateSecretOutput
        upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1upgrade?api-version=2024-02-01/post'
            operationId: AFDProfiles_Upgrade
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    afd_profiles_resource_usages:
      id: azure.cdn.afd_profiles_resource_usages
      name: afd_profiles_resource_usages
      title: afd_profiles_resource_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1usages?api-version=2024-02-01/post'
            operationId: AFDProfilesResourceUsage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/afd_profiles_resource_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    afd_custom_domains:
      id: azure.cdn.afd_custom_domains
      name: afd_custom_domains
      title: afd_custom_domains
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1customDomains?api-version=2024-02-01/get'
            operationId: AFDCustomDomains_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDDomainListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1customDomains~1{customDomainName}?api-version=2024-02-01/get'
            operationId: AFDCustomDomains_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDDomain
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1customDomains~1{customDomainName}?api-version=2024-02-01/put'
            operationId: AFDCustomDomains_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDDomain
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1customDomains~1{customDomainName}?api-version=2024-02-01/patch'
            operationId: AFDCustomDomains_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDDomain
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1customDomains~1{customDomainName}?api-version=2024-02-01/delete'
            operationId: AFDCustomDomains_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh_validation_token:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1customDomains~1{customDomainName}~1refreshValidationToken?api-version=2024-02-01/post'
            operationId: AFDCustomDomains_RefreshValidationToken
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/afd_custom_domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/afd_custom_domains/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/afd_custom_domains/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/afd_custom_domains/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/afd_custom_domains/methods/delete'
    afd_endpoints:
      id: azure.cdn.afd_endpoints
      name: afd_endpoints
      title: afd_endpoints
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints?api-version=2024-02-01/get'
            operationId: AFDEndpoints_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDEndpointListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}?api-version=2024-02-01/get'
            operationId: AFDEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDEndpoint
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}?api-version=2024-02-01/put'
            operationId: AFDEndpoints_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDEndpoint
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}?api-version=2024-02-01/patch'
            operationId: AFDEndpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDEndpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}?api-version=2024-02-01/delete'
            operationId: AFDEndpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        purge_content:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1purge?api-version=2024-02-01/post'
            operationId: AFDEndpoints_PurgeContent
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_custom_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1validateCustomDomain?api-version=2024-02-01/post'
            operationId: AFDEndpoints_ValidateCustomDomain
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateCustomDomainOutput
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/afd_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/afd_endpoints/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/afd_endpoints/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/afd_endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/afd_endpoints/methods/delete'
    afd_endpoints_resource_usages:
      id: azure.cdn.afd_endpoints_resource_usages
      name: afd_endpoints_resource_usages
      title: afd_endpoints_resource_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1usages?api-version=2024-02-01/post'
            operationId: AFDEndpointsResourceUsage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/afd_endpoints_resource_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    afd_origin_groups:
      id: azure.cdn.afd_origin_groups
      name: afd_origin_groups
      title: afd_origin_groups
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups?api-version=2024-02-01/get'
            operationId: AFDOriginGroups_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOriginGroupListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}?api-version=2024-02-01/get'
            operationId: AFDOriginGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOriginGroup
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}?api-version=2024-02-01/put'
            operationId: AFDOriginGroups_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOriginGroup
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}?api-version=2024-02-01/patch'
            operationId: AFDOriginGroups_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOriginGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}?api-version=2024-02-01/delete'
            operationId: AFDOriginGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/afd_origin_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/afd_origin_groups/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/afd_origin_groups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/afd_origin_groups/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/afd_origin_groups/methods/delete'
    afd_origin_groups_resource_usages:
      id: azure.cdn.afd_origin_groups_resource_usages
      name: afd_origin_groups_resource_usages
      title: afd_origin_groups_resource_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}~1usages?api-version=2024-02-01/post'
            operationId: AFDOriginGroupsResourceUsage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/afd_origin_groups_resource_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    afd_origins:
      id: azure.cdn.afd_origins
      name: afd_origins
      title: afd_origins
      methods:
        list_by_origin_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}~1origins?api-version=2024-02-01/get'
            operationId: AFDOrigins_ListByOriginGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOriginListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}~1origins~1{originName}?api-version=2024-02-01/get'
            operationId: AFDOrigins_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOrigin
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}~1origins~1{originName}?api-version=2024-02-01/put'
            operationId: AFDOrigins_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOrigin
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}~1origins~1{originName}?api-version=2024-02-01/patch'
            operationId: AFDOrigins_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AFDOrigin
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1originGroups~1{originGroupName}~1origins~1{originName}?api-version=2024-02-01/delete'
            operationId: AFDOrigins_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/afd_origins/methods/get'
          - $ref: '#/components/x-stackQL-resources/afd_origins/methods/list_by_origin_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/afd_origins/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/afd_origins/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/afd_origins/methods/delete'
    routes:
      id: azure.cdn.routes
      name: routes
      title: routes
      methods:
        list_by_endpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1routes?api-version=2024-02-01/get'
            operationId: Routes_ListByEndpoint
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RouteListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1routes~1{routeName}?api-version=2024-02-01/get'
            operationId: Routes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Route
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1routes~1{routeName}?api-version=2024-02-01/put'
            operationId: Routes_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Route
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1routes~1{routeName}?api-version=2024-02-01/patch'
            operationId: Routes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Route
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1afdEndpoints~1{endpointName}~1routes~1{routeName}?api-version=2024-02-01/delete'
            operationId: Routes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/routes/methods/list_by_endpoint'
        insert:
          - $ref: '#/components/x-stackQL-resources/routes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/routes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/routes/methods/delete'
    rule_sets:
      id: azure.cdn.rule_sets
      name: rule_sets
      title: rule_sets
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets?api-version=2024-02-01/get'
            operationId: RuleSets_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RuleSetListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}?api-version=2024-02-01/get'
            operationId: RuleSets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RuleSet
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}?api-version=2024-02-01/put'
            operationId: RuleSets_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RuleSet
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}?api-version=2024-02-01/delete'
            operationId: RuleSets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/delete'
    rule_sets_resource_usages:
      id: azure.cdn.rule_sets_resource_usages
      name: rule_sets_resource_usages
      title: rule_sets_resource_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}~1usages?api-version=2024-02-01/post'
            operationId: RuleSetsResourceUsage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rule_sets_resource_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    rules:
      id: azure.cdn.rules
      name: rules
      title: rules
      methods:
        list_by_rule_set:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}~1rules?api-version=2024-02-01/get'
            operationId: Rules_ListByRuleSet
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RuleListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}~1rules~1{ruleName}?api-version=2024-02-01/get'
            operationId: Rules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Rule
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}~1rules~1{ruleName}?api-version=2024-02-01/put'
            operationId: Rules_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Rule
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}~1rules~1{ruleName}?api-version=2024-02-01/patch'
            operationId: Rules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Rule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1ruleSets~1{ruleSetName}~1rules~1{ruleName}?api-version=2024-02-01/delete'
            operationId: Rules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/rules/methods/list_by_rule_set'
        insert:
          - $ref: '#/components/x-stackQL-resources/rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/rules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rules/methods/delete'
    security_policies:
      id: azure.cdn.security_policies
      name: security_policies
      title: security_policies
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1securityPolicies?api-version=2024-02-01/get'
            operationId: SecurityPolicies_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicyListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1securityPolicies~1{securityPolicyName}?api-version=2024-02-01/get'
            operationId: SecurityPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicy
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1securityPolicies~1{securityPolicyName}?api-version=2024-02-01/put'
            operationId: SecurityPolicies_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicy
        patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1securityPolicies~1{securityPolicyName}?api-version=2024-02-01/patch'
            operationId: SecurityPolicies_Patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1securityPolicies~1{securityPolicyName}?api-version=2024-02-01/delete'
            operationId: SecurityPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/security_policies/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/security_policies/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_policies/methods/delete'
    secrets:
      id: azure.cdn.secrets
      name: secrets
      title: secrets
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1secrets?api-version=2024-02-01/get'
            operationId: Secrets_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecretListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1secrets~1{secretName}?api-version=2024-02-01/get'
            operationId: Secrets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Secret
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1secrets~1{secretName}?api-version=2024-02-01/put'
            operationId: Secrets_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Secret
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1secrets~1{secretName}?api-version=2024-02-01/delete'
            operationId: Secrets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/get'
          - $ref: '#/components/x-stackQL-resources/secrets/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/delete'
    log_analytics_log_analytics_metrics:
      id: azure.cdn.log_analytics_log_analytics_metrics
      name: log_analytics_log_analytics_metrics
      title: log_analytics_log_analytics_metrics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1getLogAnalyticsMetrics?api-version=2024-02-01/get'
            operationId: LogAnalyticsLogAnalyticsMetrics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_analytics_log_analytics_metrics/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    log_analytics_log_analytics_rankings:
      id: azure.cdn.log_analytics_log_analytics_rankings
      name: log_analytics_log_analytics_rankings
      title: log_analytics_log_analytics_rankings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1getLogAnalyticsRankings?api-version=2024-02-01/get'
            operationId: LogAnalyticsLogAnalyticsRankings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RankingsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_analytics_log_analytics_rankings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    log_analytics_log_analytics_locations:
      id: azure.cdn.log_analytics_log_analytics_locations
      name: log_analytics_log_analytics_locations
      title: log_analytics_log_analytics_locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1getLogAnalyticsLocations?api-version=2024-02-01/get'
            operationId: LogAnalyticsLogAnalyticsLocations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContinentsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_analytics_log_analytics_locations/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    log_analytics_log_analytics_resources:
      id: azure.cdn.log_analytics_log_analytics_resources
      name: log_analytics_log_analytics_resources
      title: log_analytics_log_analytics_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1getLogAnalyticsResources?api-version=2024-02-01/get'
            operationId: LogAnalyticsLogAnalyticsResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourcesResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_analytics_log_analytics_resources/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    log_analytics_waf_log_analytics_metrics:
      id: azure.cdn.log_analytics_waf_log_analytics_metrics
      name: log_analytics_waf_log_analytics_metrics
      title: log_analytics_waf_log_analytics_metrics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1getWafLogAnalyticsMetrics?api-version=2024-02-01/get'
            operationId: LogAnalyticsWafLogAnalyticsMetrics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WafMetricsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_analytics_waf_log_analytics_metrics/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    log_analytics_waf_log_analytics_rankings:
      id: azure.cdn.log_analytics_waf_log_analytics_rankings
      name: log_analytics_waf_log_analytics_rankings
      title: log_analytics_waf_log_analytics_rankings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1getWafLogAnalyticsRankings?api-version=2024-02-01/get'
            operationId: LogAnalyticsWafLogAnalyticsRankings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WafRankingsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_analytics_waf_log_analytics_rankings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    profiles:
      id: azure.cdn.profiles
      name: profiles
      title: profiles
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cdn~1profiles?api-version=2024-02-01/get'
            operationId: Profiles_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProfileListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles?api-version=2024-02-01/get'
            operationId: Profiles_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProfileListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}?api-version=2024-02-01/get'
            operationId: Profiles_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}?api-version=2024-02-01/put'
            operationId: Profiles_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}?api-version=2024-02-01/patch'
            operationId: Profiles_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}?api-version=2024-02-01/delete'
            operationId: Profiles_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        can_migrate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1canMigrate?api-version=2024-02-01/post'
            operationId: Profiles_CanMigrate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CanMigrateResult
        migrate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1migrate?api-version=2024-02-01/post'
            operationId: Profiles_Migrate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrateResult
        migration_commit:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1migrationCommit?api-version=2024-02-01/post'
            operationId: Profiles_MigrationCommit
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_sso_uri:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1generateSsoUri?api-version=2024-02-01/post'
            operationId: Profiles_GenerateSsoUri
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SsoUri
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/delete'
    profiles_supported_optimization_types:
      id: azure.cdn.profiles_supported_optimization_types
      name: profiles_supported_optimization_types
      title: profiles_supported_optimization_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1getSupportedOptimizationTypes?api-version=2024-02-01/post'
            operationId: ProfilesSupportedOptimizationTypes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SupportedOptimizationTypesListResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles_supported_optimization_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    profiles_resource_usages:
      id: azure.cdn.profiles_resource_usages
      name: profiles_resource_usages
      title: profiles_resource_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1checkResourceUsage?api-version=2024-02-01/post'
            operationId: ProfilesResourceUsage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceUsageListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles_resource_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    endpoints:
      id: azure.cdn.endpoints
      name: endpoints
      title: endpoints
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints?api-version=2024-02-01/get'
            operationId: Endpoints_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EndpointListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}?api-version=2024-02-01/get'
            operationId: Endpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}?api-version=2024-02-01/put'
            operationId: Endpoints_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}?api-version=2024-02-01/patch'
            operationId: Endpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}?api-version=2024-02-01/delete'
            operationId: Endpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1start?api-version=2024-02-01/post'
            operationId: Endpoints_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1stop?api-version=2024-02-01/post'
            operationId: Endpoints_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        purge_content:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1purge?api-version=2024-02-01/post'
            operationId: Endpoints_PurgeContent
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        load_content:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1load?api-version=2024-02-01/post'
            operationId: Endpoints_LoadContent
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_custom_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1validateCustomDomain?api-version=2024-02-01/post'
            operationId: Endpoints_ValidateCustomDomain
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateCustomDomainOutput
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete'
    endpoints_resource_usages:
      id: azure.cdn.endpoints_resource_usages
      name: endpoints_resource_usages
      title: endpoints_resource_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1checkResourceUsage?api-version=2024-02-01/post'
            operationId: EndpointsResourceUsage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceUsageListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints_resource_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    origins:
      id: azure.cdn.origins
      name: origins
      title: origins
      methods:
        list_by_endpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1origins?api-version=2024-02-01/get'
            operationId: Origins_ListByEndpoint
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OriginListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1origins~1{originName}?api-version=2024-02-01/get'
            operationId: Origins_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Origin
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1origins~1{originName}?api-version=2024-02-01/put'
            operationId: Origins_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Origin
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1origins~1{originName}?api-version=2024-02-01/patch'
            operationId: Origins_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Origin
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1origins~1{originName}?api-version=2024-02-01/delete'
            operationId: Origins_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/origins/methods/get'
          - $ref: '#/components/x-stackQL-resources/origins/methods/list_by_endpoint'
        insert:
          - $ref: '#/components/x-stackQL-resources/origins/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/origins/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/origins/methods/delete'
    origin_groups:
      id: azure.cdn.origin_groups
      name: origin_groups
      title: origin_groups
      methods:
        list_by_endpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1originGroups?api-version=2024-02-01/get'
            operationId: OriginGroups_ListByEndpoint
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OriginGroupListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1originGroups~1{originGroupName}?api-version=2024-02-01/get'
            operationId: OriginGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OriginGroup
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1originGroups~1{originGroupName}?api-version=2024-02-01/put'
            operationId: OriginGroups_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OriginGroup
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1originGroups~1{originGroupName}?api-version=2024-02-01/patch'
            operationId: OriginGroups_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OriginGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1originGroups~1{originGroupName}?api-version=2024-02-01/delete'
            operationId: OriginGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/origin_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/origin_groups/methods/list_by_endpoint'
        insert:
          - $ref: '#/components/x-stackQL-resources/origin_groups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/origin_groups/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/origin_groups/methods/delete'
    custom_domains:
      id: azure.cdn.custom_domains
      name: custom_domains
      title: custom_domains
      methods:
        list_by_endpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1customDomains?api-version=2024-02-01/get'
            operationId: CustomDomains_ListByEndpoint
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomDomainListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1customDomains~1{customDomainName}?api-version=2024-02-01/get'
            operationId: CustomDomains_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomDomain
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1customDomains~1{customDomainName}?api-version=2024-02-01/put'
            operationId: CustomDomains_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomDomain
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1customDomains~1{customDomainName}?api-version=2024-02-01/delete'
            operationId: CustomDomains_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_custom_https:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1customDomains~1{customDomainName}~1disableCustomHttps?api-version=2024-02-01/post'
            operationId: CustomDomains_DisableCustomHttps
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomDomain
        enable_custom_https:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cdn~1profiles~1{profileName}~1endpoints~1{endpointName}~1customDomains~1{customDomainName}~1enableCustomHttps?api-version=2024-02-01/post'
            operationId: CustomDomains_EnableCustomHttps
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomDomain
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/custom_domains/methods/list_by_endpoint'
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_domains/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_domains/methods/delete'
    resource_usages:
      id: azure.cdn.resource_usages
      name: resource_usages
      title: resource_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cdn~1checkResourceUsage?api-version=2024-02-01/post'
            operationId: ResourceUsage_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceUsageListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    edge_nodes:
      id: azure.cdn.edge_nodes
      name: edge_nodes
      title: edge_nodes
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Cdn~1edgenodes?api-version=2024-02-01/get'
            operationId: EdgeNodes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EdgenodeResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/edge_nodes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_policies:
      id: azure.cdn.vw_policies
      name: vw_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              sku as sku,
              tags as tags,
              JSON_EXTRACT(properties, '$.policySettings') as "policy_settings",
              JSON_EXTRACT(properties, '$.rateLimitRules') as "rate_limit_rules",
              JSON_EXTRACT(properties, '$.customRules') as "custom_rules",
              JSON_EXTRACT(properties, '$.managedRules') as "managed_rules",
              JSON_EXTRACT(properties, '$.endpointLinks') as "endpoint_links",
              JSON_EXTRACT(properties, '$.extendedProperties') as "extended_properties",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              subscriptionId,
              resourceGroupName,
              policyName
              FROM azure.cdn.policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                sku as sku,
                tags as tags,
                json_extract_path_text(properties, '$.policySettings') as "policy_settings",
                json_extract_path_text(properties, '$.rateLimitRules') as "rate_limit_rules",
                json_extract_path_text(properties, '$.customRules') as "custom_rules",
                json_extract_path_text(properties, '$.managedRules') as "managed_rules",
                json_extract_path_text(properties, '$.endpointLinks') as "endpoint_links",
                json_extract_path_text(properties, '$.extendedProperties') as "extended_properties",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                subscriptionId,
                resourceGroupName,
                policyName
                FROM azure.cdn.policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me';
    vw_afd_custom_domains:
      id: azure.cdn.vw_afd_custom_domains
      name: vw_afd_custom_domains
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.profileName') as "profile_name",
              JSON_EXTRACT(properties, '$.tlsSettings') as "tls_settings",
              JSON_EXTRACT(properties, '$.azureDnsZone') as "azure_dns_zone",
              JSON_EXTRACT(properties, '$.preValidatedCustomDomainResourceId') as "pre_validated_custom_domain_resource_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              JSON_EXTRACT(properties, '$.domainValidationState') as "domain_validation_state",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.extendedProperties') as "extended_properties",
              JSON_EXTRACT(properties, '$.validationProperties') as "validation_properties",
              subscriptionId,
              resourceGroupName,
              profileName,
              customDomainName
              FROM azure.cdn.afd_custom_domains
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.profileName') as "profile_name",
                json_extract_path_text(properties, '$.tlsSettings') as "tls_settings",
                json_extract_path_text(properties, '$.azureDnsZone') as "azure_dns_zone",
                json_extract_path_text(properties, '$.preValidatedCustomDomainResourceId') as "pre_validated_custom_domain_resource_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                json_extract_path_text(properties, '$.domainValidationState') as "domain_validation_state",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.extendedProperties') as "extended_properties",
                json_extract_path_text(properties, '$.validationProperties') as "validation_properties",
                subscriptionId,
                resourceGroupName,
                profileName,
                customDomainName
                FROM azure.cdn.afd_custom_domains
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_afd_endpoints:
      id: azure.cdn.vw_afd_endpoints
      name: vw_afd_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.profileName') as "profile_name",
              JSON_EXTRACT(properties, '$.enabledState') as "enabled_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.autoGeneratedDomainNameLabelScope') as "auto_generated_domain_name_label_scope",
              subscriptionId,
              resourceGroupName,
              profileName,
              endpointName
              FROM azure.cdn.afd_endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.profileName') as "profile_name",
                json_extract_path_text(properties, '$.enabledState') as "enabled_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.autoGeneratedDomainNameLabelScope') as "auto_generated_domain_name_label_scope",
                subscriptionId,
                resourceGroupName,
                profileName,
                endpointName
                FROM azure.cdn.afd_endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_afd_origin_groups:
      id: azure.cdn.vw_afd_origin_groups
      name: vw_afd_origin_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.profileName') as "profile_name",
              JSON_EXTRACT(properties, '$.loadBalancingSettings') as "load_balancing_settings",
              JSON_EXTRACT(properties, '$.healthProbeSettings') as "health_probe_settings",
              JSON_EXTRACT(properties, '$.trafficRestorationTimeToHealedOrNewEndpointsInMinutes') as "traffic_restoration_time_to_healed_or_new_endpoints_in_minutes",
              JSON_EXTRACT(properties, '$.sessionAffinityState') as "session_affinity_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              subscriptionId,
              resourceGroupName,
              profileName,
              originGroupName
              FROM azure.cdn.afd_origin_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.profileName') as "profile_name",
                json_extract_path_text(properties, '$.loadBalancingSettings') as "load_balancing_settings",
                json_extract_path_text(properties, '$.healthProbeSettings') as "health_probe_settings",
                json_extract_path_text(properties, '$.trafficRestorationTimeToHealedOrNewEndpointsInMinutes') as "traffic_restoration_time_to_healed_or_new_endpoints_in_minutes",
                json_extract_path_text(properties, '$.sessionAffinityState') as "session_affinity_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                subscriptionId,
                resourceGroupName,
                profileName,
                originGroupName
                FROM azure.cdn.afd_origin_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_afd_origins:
      id: azure.cdn.vw_afd_origins
      name: vw_afd_origins
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.originGroupName') as "origin_group_name",
              JSON_EXTRACT(properties, '$.azureOrigin') as "azure_origin",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.httpPort') as "http_port",
              JSON_EXTRACT(properties, '$.httpsPort') as "https_port",
              JSON_EXTRACT(properties, '$.originHostHeader') as "origin_host_header",
              JSON_EXTRACT(properties, '$.priority') as "priority",
              JSON_EXTRACT(properties, '$.weight') as "weight",
              JSON_EXTRACT(properties, '$.sharedPrivateLinkResource') as "shared_private_link_resource",
              JSON_EXTRACT(properties, '$.enabledState') as "enabled_state",
              JSON_EXTRACT(properties, '$.enforceCertificateNameCheck') as "enforce_certificate_name_check",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              subscriptionId,
              resourceGroupName,
              profileName,
              originGroupName,
              originName
              FROM azure.cdn.afd_origins
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND originGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.originGroupName') as "origin_group_name",
                json_extract_path_text(properties, '$.azureOrigin') as "azure_origin",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.httpPort') as "http_port",
                json_extract_path_text(properties, '$.httpsPort') as "https_port",
                json_extract_path_text(properties, '$.originHostHeader') as "origin_host_header",
                json_extract_path_text(properties, '$.priority') as "priority",
                json_extract_path_text(properties, '$.weight') as "weight",
                json_extract_path_text(properties, '$.sharedPrivateLinkResource') as "shared_private_link_resource",
                json_extract_path_text(properties, '$.enabledState') as "enabled_state",
                json_extract_path_text(properties, '$.enforceCertificateNameCheck') as "enforce_certificate_name_check",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                subscriptionId,
                resourceGroupName,
                profileName,
                originGroupName,
                originName
                FROM azure.cdn.afd_origins
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND originGroupName = 'replace-me';
    vw_routes:
      id: azure.cdn.vw_routes
      name: vw_routes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.endpointName') as "endpoint_name",
              JSON_EXTRACT(properties, '$.customDomains') as "custom_domains",
              JSON_EXTRACT(properties, '$.originGroup') as "origin_group",
              JSON_EXTRACT(properties, '$.originPath') as "origin_path",
              JSON_EXTRACT(properties, '$.ruleSets') as "rule_sets",
              JSON_EXTRACT(properties, '$.supportedProtocols') as "supported_protocols",
              JSON_EXTRACT(properties, '$.patternsToMatch') as "patterns_to_match",
              JSON_EXTRACT(properties, '$.cacheConfiguration') as "cache_configuration",
              JSON_EXTRACT(properties, '$.forwardingProtocol') as "forwarding_protocol",
              JSON_EXTRACT(properties, '$.linkToDefaultDomain') as "link_to_default_domain",
              JSON_EXTRACT(properties, '$.httpsRedirect') as "https_redirect",
              JSON_EXTRACT(properties, '$.enabledState') as "enabled_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              subscriptionId,
              resourceGroupName,
              profileName,
              endpointName,
              routeName
              FROM azure.cdn.routes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.endpointName') as "endpoint_name",
                json_extract_path_text(properties, '$.customDomains') as "custom_domains",
                json_extract_path_text(properties, '$.originGroup') as "origin_group",
                json_extract_path_text(properties, '$.originPath') as "origin_path",
                json_extract_path_text(properties, '$.ruleSets') as "rule_sets",
                json_extract_path_text(properties, '$.supportedProtocols') as "supported_protocols",
                json_extract_path_text(properties, '$.patternsToMatch') as "patterns_to_match",
                json_extract_path_text(properties, '$.cacheConfiguration') as "cache_configuration",
                json_extract_path_text(properties, '$.forwardingProtocol') as "forwarding_protocol",
                json_extract_path_text(properties, '$.linkToDefaultDomain') as "link_to_default_domain",
                json_extract_path_text(properties, '$.httpsRedirect') as "https_redirect",
                json_extract_path_text(properties, '$.enabledState') as "enabled_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                subscriptionId,
                resourceGroupName,
                profileName,
                endpointName,
                routeName
                FROM azure.cdn.routes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
    vw_rule_sets:
      id: azure.cdn.vw_rule_sets
      name: vw_rule_sets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              JSON_EXTRACT(properties, '$.profileName') as "profile_name",
              subscriptionId,
              resourceGroupName,
              profileName,
              ruleSetName
              FROM azure.cdn.rule_sets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                json_extract_path_text(properties, '$.profileName') as "profile_name",
                subscriptionId,
                resourceGroupName,
                profileName,
                ruleSetName
                FROM azure.cdn.rule_sets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_rules:
      id: azure.cdn.vw_rules
      name: vw_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.ruleSetName') as "rule_set_name",
              JSON_EXTRACT(properties, '$.order') as "order",
              JSON_EXTRACT(properties, '$.conditions') as "conditions",
              JSON_EXTRACT(properties, '$.actions') as "actions",
              JSON_EXTRACT(properties, '$.matchProcessingBehavior') as "match_processing_behavior",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              subscriptionId,
              resourceGroupName,
              profileName,
              ruleSetName,
              ruleName
              FROM azure.cdn.rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND ruleSetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.ruleSetName') as "rule_set_name",
                json_extract_path_text(properties, '$.order') as "order",
                json_extract_path_text(properties, '$.conditions') as "conditions",
                json_extract_path_text(properties, '$.actions') as "actions",
                json_extract_path_text(properties, '$.matchProcessingBehavior') as "match_processing_behavior",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                subscriptionId,
                resourceGroupName,
                profileName,
                ruleSetName,
                ruleName
                FROM azure.cdn.rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND ruleSetName = 'replace-me';
    vw_security_policies:
      id: azure.cdn.vw_security_policies
      name: vw_security_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              JSON_EXTRACT(properties, '$.profileName') as "profile_name",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              subscriptionId,
              resourceGroupName,
              profileName,
              securityPolicyName
              FROM azure.cdn.security_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                json_extract_path_text(properties, '$.profileName') as "profile_name",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                subscriptionId,
                resourceGroupName,
                profileName,
                securityPolicyName
                FROM azure.cdn.security_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_secrets:
      id: azure.cdn.vw_secrets
      name: vw_secrets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deploymentStatus') as "deployment_status",
              JSON_EXTRACT(properties, '$.profileName') as "profile_name",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              subscriptionId,
              resourceGroupName,
              profileName,
              secretName
              FROM azure.cdn.secrets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deploymentStatus') as "deployment_status",
                json_extract_path_text(properties, '$.profileName') as "profile_name",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                subscriptionId,
                resourceGroupName,
                profileName,
                secretName
                FROM azure.cdn.secrets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_profiles:
      id: azure.cdn.vw_profiles
      name: vw_profiles
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              kind as kind,
              identity as identity,
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.extendedProperties') as "extended_properties",
              JSON_EXTRACT(properties, '$.frontDoorId') as "front_door_id",
              JSON_EXTRACT(properties, '$.originResponseTimeoutSeconds') as "origin_response_timeout_seconds",
              JSON_EXTRACT(properties, '$.logScrubbing') as "log_scrubbing",
              subscriptionId,
              resourceGroupName,
              profileName
              FROM azure.cdn.profiles
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                kind as kind,
                identity as identity,
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.extendedProperties') as "extended_properties",
                json_extract_path_text(properties, '$.frontDoorId') as "front_door_id",
                json_extract_path_text(properties, '$.originResponseTimeoutSeconds') as "origin_response_timeout_seconds",
                json_extract_path_text(properties, '$.logScrubbing') as "log_scrubbing",
                subscriptionId,
                resourceGroupName,
                profileName
                FROM azure.cdn.profiles
                WHERE subscriptionId = 'replace-me';
    vw_endpoints:
      id: azure.cdn.vw_endpoints
      name: vw_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.originPath') as "origin_path",
              JSON_EXTRACT(properties, '$.contentTypesToCompress') as "content_types_to_compress",
              JSON_EXTRACT(properties, '$.originHostHeader') as "origin_host_header",
              JSON_EXTRACT(properties, '$.isCompressionEnabled') as "is_compression_enabled",
              JSON_EXTRACT(properties, '$.isHttpAllowed') as "is_http_allowed",
              JSON_EXTRACT(properties, '$.isHttpsAllowed') as "is_https_allowed",
              JSON_EXTRACT(properties, '$.queryStringCachingBehavior') as "query_string_caching_behavior",
              JSON_EXTRACT(properties, '$.optimizationType') as "optimization_type",
              JSON_EXTRACT(properties, '$.probePath') as "probe_path",
              JSON_EXTRACT(properties, '$.geoFilters') as "geo_filters",
              JSON_EXTRACT(properties, '$.defaultOriginGroup') as "default_origin_group",
              JSON_EXTRACT(properties, '$.urlSigningKeys') as "url_signing_keys",
              JSON_EXTRACT(properties, '$.deliveryPolicy') as "delivery_policy",
              JSON_EXTRACT(properties, '$.webApplicationFirewallPolicyLink') as "web_application_firewall_policy_link",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.origins') as "origins",
              JSON_EXTRACT(properties, '$.originGroups') as "origin_groups",
              JSON_EXTRACT(properties, '$.customDomains') as "custom_domains",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              profileName,
              endpointName
              FROM azure.cdn.endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.originPath') as "origin_path",
                json_extract_path_text(properties, '$.contentTypesToCompress') as "content_types_to_compress",
                json_extract_path_text(properties, '$.originHostHeader') as "origin_host_header",
                json_extract_path_text(properties, '$.isCompressionEnabled') as "is_compression_enabled",
                json_extract_path_text(properties, '$.isHttpAllowed') as "is_http_allowed",
                json_extract_path_text(properties, '$.isHttpsAllowed') as "is_https_allowed",
                json_extract_path_text(properties, '$.queryStringCachingBehavior') as "query_string_caching_behavior",
                json_extract_path_text(properties, '$.optimizationType') as "optimization_type",
                json_extract_path_text(properties, '$.probePath') as "probe_path",
                json_extract_path_text(properties, '$.geoFilters') as "geo_filters",
                json_extract_path_text(properties, '$.defaultOriginGroup') as "default_origin_group",
                json_extract_path_text(properties, '$.urlSigningKeys') as "url_signing_keys",
                json_extract_path_text(properties, '$.deliveryPolicy') as "delivery_policy",
                json_extract_path_text(properties, '$.webApplicationFirewallPolicyLink') as "web_application_firewall_policy_link",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.origins') as "origins",
                json_extract_path_text(properties, '$.originGroups') as "origin_groups",
                json_extract_path_text(properties, '$.customDomains') as "custom_domains",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                profileName,
                endpointName
                FROM azure.cdn.endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_origins:
      id: azure.cdn.vw_origins
      name: vw_origins
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.httpPort') as "http_port",
              JSON_EXTRACT(properties, '$.httpsPort') as "https_port",
              JSON_EXTRACT(properties, '$.originHostHeader') as "origin_host_header",
              JSON_EXTRACT(properties, '$.priority') as "priority",
              JSON_EXTRACT(properties, '$.weight') as "weight",
              JSON_EXTRACT(properties, '$.enabled') as "enabled",
              JSON_EXTRACT(properties, '$.privateLinkAlias') as "private_link_alias",
              JSON_EXTRACT(properties, '$.privateLinkResourceId') as "private_link_resource_id",
              JSON_EXTRACT(properties, '$.privateLinkLocation') as "private_link_location",
              JSON_EXTRACT(properties, '$.privateLinkApprovalMessage') as "private_link_approval_message",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpointStatus') as "private_endpoint_status",
              subscriptionId,
              resourceGroupName,
              profileName,
              endpointName,
              originName
              FROM azure.cdn.origins
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.httpPort') as "http_port",
                json_extract_path_text(properties, '$.httpsPort') as "https_port",
                json_extract_path_text(properties, '$.originHostHeader') as "origin_host_header",
                json_extract_path_text(properties, '$.priority') as "priority",
                json_extract_path_text(properties, '$.weight') as "weight",
                json_extract_path_text(properties, '$.enabled') as "enabled",
                json_extract_path_text(properties, '$.privateLinkAlias') as "private_link_alias",
                json_extract_path_text(properties, '$.privateLinkResourceId') as "private_link_resource_id",
                json_extract_path_text(properties, '$.privateLinkLocation') as "private_link_location",
                json_extract_path_text(properties, '$.privateLinkApprovalMessage') as "private_link_approval_message",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpointStatus') as "private_endpoint_status",
                subscriptionId,
                resourceGroupName,
                profileName,
                endpointName,
                originName
                FROM azure.cdn.origins
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
    vw_origin_groups:
      id: azure.cdn.vw_origin_groups
      name: vw_origin_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.healthProbeSettings') as "health_probe_settings",
              JSON_EXTRACT(properties, '$.origins') as "origins",
              JSON_EXTRACT(properties, '$.trafficRestorationTimeToHealedOrNewEndpointsInMinutes') as "traffic_restoration_time_to_healed_or_new_endpoints_in_minutes",
              JSON_EXTRACT(properties, '$.responseBasedOriginErrorDetectionSettings') as "response_based_origin_error_detection_settings",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              profileName,
              endpointName,
              originGroupName
              FROM azure.cdn.origin_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.healthProbeSettings') as "health_probe_settings",
                json_extract_path_text(properties, '$.origins') as "origins",
                json_extract_path_text(properties, '$.trafficRestorationTimeToHealedOrNewEndpointsInMinutes') as "traffic_restoration_time_to_healed_or_new_endpoints_in_minutes",
                json_extract_path_text(properties, '$.responseBasedOriginErrorDetectionSettings') as "response_based_origin_error_detection_settings",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                profileName,
                endpointName,
                originGroupName
                FROM azure.cdn.origin_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
    vw_custom_domains:
      id: azure.cdn.vw_custom_domains
      name: vw_custom_domains
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.customHttpsProvisioningState') as "custom_https_provisioning_state",
              JSON_EXTRACT(properties, '$.customHttpsProvisioningSubstate') as "custom_https_provisioning_substate",
              JSON_EXTRACT(properties, '$.customHttpsParameters') as "custom_https_parameters",
              JSON_EXTRACT(properties, '$.validationData') as "validation_data",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              profileName,
              endpointName,
              customDomainName
              FROM azure.cdn.custom_domains
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.customHttpsProvisioningState') as "custom_https_provisioning_state",
                json_extract_path_text(properties, '$.customHttpsProvisioningSubstate') as "custom_https_provisioning_substate",
                json_extract_path_text(properties, '$.customHttpsParameters') as "custom_https_parameters",
                json_extract_path_text(properties, '$.validationData') as "validation_data",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                profileName,
                endpointName,
                customDomainName
                FROM azure.cdn.custom_domains
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies?api-version=2024-02-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Lists all of the protection policies within a resource group.
      operationId: Policies_List
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnWebApplicationFirewallPolicyList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}?api-version=2024-02-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Retrieve protection policy with specified name within a resource group.
      operationId: Policies_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - WebApplicationFirewallPolicies
      description: Create or update policy with specified rule set name within a resource group.
      operationId: Policies_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Policy to be created.
        required: true
        x-ms-requestBody-name: cdnWebApplicationFirewallPolicy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
        '201':
          description: Created. The request has been fulfilled and a new protection policy has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
          headers:
            location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - WebApplicationFirewallPolicies
      description: Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified subscription and resource group
      operationId: Policies_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: CdnWebApplicationFirewallPolicy parameters to be patched.
        required: true
        x-ms-requestBody-name: cdnWebApplicationFirewallPolicyPatchParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdnWebApplicationFirewallPolicyPatchParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnWebApplicationFirewallPolicy'
          headers:
            location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - WebApplicationFirewallPolicies
      description: Deletes Policy
      operationId: Policies_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '204':
          description: No Content. The request has been accepted but the policy was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Cdn/cdnWebApplicationFirewallManagedRuleSets?api-version=2024-02-01:
    get:
      tags:
        - WebApplicationFirewallManagedRuleSets
      description: Lists all available managed rule sets.
      operationId: ManagedRuleSets_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of all available web application firewall managed rule sets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleSetDefinitionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/checkEndpointNameAvailability?api-version=2024-02-01:
    post:
      tags:
        - CheckEndpointNameAvailability
      description: Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint.
      operationId: Operations_CheckEndpointNameAvailability
      requestBody:
        description: Input to check.
        required: true
        x-ms-requestBody-name: checkEndpointNameAvailabilityInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckEndpointNameAvailabilityInput'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckEndpointNameAvailabilityOutput'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-original-operationId: CheckEndpointNameAvailability
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkEndpointNameAvailability?api-version=2024-02-01:
    post:
      tags:
        - AFDProfiles
      description: Check the availability of an afdx endpoint name, and return the globally unique endpoint host name.
      operationId: AFDProfiles_CheckEndpointNameAvailability
      requestBody:
        description: Input to check.
        required: true
        x-ms-requestBody-name: checkEndpointNameAvailabilityInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckEndpointNameAvailabilityInput'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/profileNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckEndpointNameAvailabilityOutput'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/usages?api-version=2024-02-01:
    post:
      tags:
        - AFDProfiles
      description: Checks the quota and actual usage of endpoints under the given Azure Front Door profile.
      operationId: AFDProfilesResourceUsage_List
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: AFDProfiles_ListResourceUsage
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkHostNameAvailability?api-version=2024-02-01:
    post:
      tags:
        - AFDProfiles
      description: Validates the custom domain mapping to ensure it maps to the correct Azure Front Door endpoint in DNS.
      operationId: AFDProfiles_CheckHostNameAvailability
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Custom domain to be validated.
        required: true
        x-ms-requestBody-name: checkHostNameAvailabilityInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckHostNameAvailabilityInput'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityOutput'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/validateSecret?api-version=2024-02-01:
    post:
      tags:
        - AFDProfiles
      description: Validate a Secret in the profile.
      operationId: AFDProfiles_ValidateSecret
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/profileNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The Secret source.
        required: true
        x-ms-requestBody-name: validateSecretInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateSecretInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateSecretOutput'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/upgrade?api-version=2024-02-01:
    post:
      tags:
        - AFDProfiles
      description: Upgrade a profile from Standard_AzureFrontDoor to Premium_AzureFrontDoor.
      operationId: AFDProfiles_Upgrade
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/profileNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Profile upgrade input parameter.
        required: true
        x-ms-requestBody-name: profileUpgradeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpgradeParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains?api-version=2024-02-01:
    get:
      tags:
        - AFDCustomDomains
      description: Lists existing AzureFrontDoor domains.
      operationId: AFDCustomDomains_ListByProfile
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDDomainListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}?api-version=2024-02-01:
    get:
      tags:
        - AFDCustomDomains
      description: Gets an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource group and profile.
      operationId: AFDCustomDomains_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the domain under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDDomain'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - AFDCustomDomains
      description: Creates a new domain within the specified profile.
      operationId: AFDCustomDomains_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the domain under the profile which is unique globally
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Domain properties
        required: true
        x-ms-requestBody-name: customDomain
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDDomain'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDDomain'
        '201':
          description: Created. The request has been fulfilled and a new domain has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDDomain'
          headers:
            location:
              schema:
                type: string
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDDomain'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - AFDCustomDomains
      description: Updates an existing domain within a profile.
      operationId: AFDCustomDomains_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the domain under the profile which is unique globally
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Domain properties
        required: true
        x-ms-requestBody-name: customDomainUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDDomainUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDDomain'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDDomain'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - AFDCustomDomains
      description: Deletes an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource group and profile.
      operationId: AFDCustomDomains_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the domain under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the domain was not found.
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}/refreshValidationToken?api-version=2024-02-01:
    post:
      tags:
        - AFDCustomDomains
      description: Updates the domain validation token.
      operationId: AFDCustomDomains_RefreshValidationToken
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the domain under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously. Please poll the targeted custom domain and check the 'validationProperties' field for the new validation token values.
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints?api-version=2024-02-01:
    get:
      tags:
        - AFDEndpoints
      description: Lists existing AzureFrontDoor endpoints.
      operationId: AFDEndpoints_ListByProfile
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDEndpointListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}?api-version=2024-02-01:
    get:
      tags:
        - AFDEndpoints
      description: Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.
      operationId: AFDEndpoints_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDEndpoint'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - AFDEndpoints
      description: Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.
      operationId: AFDEndpoints_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Endpoint properties
        required: true
        x-ms-requestBody-name: endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDEndpoint'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDEndpoint'
        '201':
          description: Created. The request has been fulfilled and a new endpoint has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDEndpoint'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDEndpoint'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - AFDEndpoints
      description: Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update domains, use the Update Custom Domain operation.
      operationId: AFDEndpoints_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Endpoint update properties
        required: true
        x-ms-requestBody-name: endpointUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDEndpointUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDEndpoint'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDEndpoint'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - AFDEndpoints
      description: Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.
      operationId: AFDEndpoints_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/purge?api-version=2024-02-01:
    post:
      tags:
        - AFDEndpoints
      description: Removes a content from AzureFrontDoor.
      operationId: AFDEndpoints_PurgeContent
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The list of paths to the content and the list of linked domains to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.
        required: true
        x-ms-requestBody-name: contents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AfdPurgeParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/usages?api-version=2024-02-01:
    post:
      tags:
        - AFDEndpoints
      description: Checks the quota and actual usage of endpoints under the given Azure Front Door profile.
      operationId: AFDEndpointsResourceUsage_List
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: AFDEndpoints_ListResourceUsage
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/validateCustomDomain?api-version=2024-02-01:
    post:
      tags:
        - AFDEndpoints
      description: Validates the custom domain mapping to ensure it maps to the correct Azure Front Door endpoint in DNS.
      operationId: AFDEndpoints_ValidateCustomDomain
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Custom domain to be validated.
        required: true
        x-ms-requestBody-name: customDomainProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCustomDomainInput'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCustomDomainOutput'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups?api-version=2024-02-01:
    get:
      tags:
        - AFDOriginGroups
      description: Lists all of the existing origin groups within a profile.
      operationId: AFDOriginGroups_ListByProfile
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginGroupListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}?api-version=2024-02-01:
    get:
      tags:
        - AFDOriginGroups
      description: Gets an existing origin group within a profile.
      operationId: AFDOriginGroups_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginGroup'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - AFDOriginGroups
      description: Creates a new origin group within the specified profile.
      operationId: AFDOriginGroups_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin group properties
        required: true
        x-ms-requestBody-name: originGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDOriginGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginGroup'
        '201':
          description: Created. The request has been fulfilled and a new origin group has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginGroup'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginGroup'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - AFDOriginGroups
      description: Updates an existing origin group within a profile.
      operationId: AFDOriginGroups_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin group properties
        required: true
        x-ms-requestBody-name: originGroupUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDOriginGroupUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginGroup'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginGroup'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - AFDOriginGroups
      description: Deletes an existing origin group within a profile.
      operationId: AFDOriginGroups_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the origin group was not found.
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/usages?api-version=2024-02-01:
    post:
      tags:
        - AFDOriginGroups
      description: Checks the quota and actual usage of endpoints under the given Azure Front Door profile..
      operationId: AFDOriginGroupsResourceUsage_List
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: AFDOriginGroups_ListResourceUsage
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins?api-version=2024-02-01:
    get:
      tags:
        - AFDOrigins
      description: Lists all of the existing origins within an origin group.
      operationId: AFDOrigins_ListByOriginGroup
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOriginListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins/{originName}?api-version=2024-02-01:
    get:
      tags:
        - AFDOrigins
      description: Gets an existing origin within an origin group.
      operationId: AFDOrigins_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the profile.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin which is unique within the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOrigin'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - AFDOrigins
      description: Creates a new origin within the specified origin group.
      operationId: AFDOrigins_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the profile.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin that is unique within the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin properties
        required: true
        x-ms-requestBody-name: origin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDOrigin'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOrigin'
        '201':
          description: Created. The request has been fulfilled and a new origin has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOrigin'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOrigin'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - AFDOrigins
      description: Updates an existing origin within an origin group.
      operationId: AFDOrigins_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the profile.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin which is unique within the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin properties
        required: true
        x-ms-requestBody-name: originUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AFDOriginUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOrigin'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AFDOrigin'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - AFDOrigins
      description: Deletes an existing origin within an origin group.
      operationId: AFDOrigins_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the profile.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin which is unique within the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the origin was not found.
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes?api-version=2024-02-01:
    get:
      tags:
        - Routes
      description: Lists all of the existing origins within a profile.
      operationId: Routes_ListByEndpoint
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}?api-version=2024-02-01:
    get:
      tags:
        - Routes
      description: Gets an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.
      operationId: Routes_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: routeName
          in: path
          description: Name of the routing rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - Routes
      description: Creates a new route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.
      operationId: Routes_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: routeName
          in: path
          description: Name of the routing rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Route properties
        required: true
        x-ms-requestBody-name: route
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '201':
          description: Created. The request has been fulfilled and a new endpoint has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Routes
      description: Updates an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.
      operationId: Routes_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: routeName
          in: path
          description: Name of the routing rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Route update properties
        required: true
        x-ms-requestBody-name: routeUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Routes
      description: Deletes an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.
      operationId: Routes_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: routeName
          in: path
          description: Name of the routing rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets?api-version=2024-02-01:
    get:
      tags:
        - RuleSets
      description: Lists existing AzureFrontDoor rule sets within a profile.
      operationId: RuleSets_ListByProfile
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSetListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}?api-version=2024-02-01:
    get:
      tags:
        - RuleSets
      description: Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription, resource group and profile.
      operationId: RuleSets_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSet'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - RuleSets
      description: Creates a new rule set within the specified profile.
      operationId: RuleSets_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile which is unique globally
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSet'
        '201':
          description: Created. The request has been fulfilled and a new rule set has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSet'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    delete:
      tags:
        - RuleSets
      description: Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription, resource group and profile.
      operationId: RuleSets_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the rule set was not found.
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/usages?api-version=2024-02-01:
    post:
      tags:
        - RuleSets
      description: Checks the quota and actual usage of endpoints under the given Azure Front Door profile..
      operationId: RuleSetsResourceUsage_List
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: RuleSets_ListResourceUsage
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules?api-version=2024-02-01:
    get:
      tags:
        - Rules
      description: Lists all of the existing delivery rules within a rule set.
      operationId: Rules_ListByRuleSet
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules/{ruleName}?api-version=2024-02-01:
    get:
      tags:
        - Rules
      description: Gets an existing delivery rule within a rule set.
      operationId: Rules_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile.
          required: true
          schema:
            type: string
        - name: ruleName
          in: path
          description: Name of the delivery rule which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - Rules
      description: Creates a new delivery rule within the specified rule set.
      operationId: Rules_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile.
          required: true
          schema:
            type: string
        - name: ruleName
          in: path
          description: Name of the delivery rule which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The delivery rule properties.
        required: true
        x-ms-requestBody-name: rule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '201':
          description: Created. The request has been fulfilled and a new delivery rule has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Rules
      description: Updates an existing delivery rule within a rule set.
      operationId: Rules_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile.
          required: true
          schema:
            type: string
        - name: ruleName
          in: path
          description: Name of the delivery rule which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Delivery rule properties
        required: true
        x-ms-requestBody-name: ruleUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Rules
      description: Deletes an existing delivery rule within a rule set.
      operationId: Rules_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the rule set under the profile.
          required: true
          schema:
            type: string
        - name: ruleName
          in: path
          description: Name of the delivery rule which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the origin was not found.
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies?api-version=2024-02-01:
    get:
      tags:
        - SecurityPolicies
      description: Lists security policies associated with the profile
      operationId: SecurityPolicies_ListByProfile
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicyListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}?api-version=2024-02-01:
    get:
      tags:
        - SecurityPolicies
      description: Gets an existing security policy within a profile.
      operationId: SecurityPolicies_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: securityPolicyName
          in: path
          description: Name of the security policy under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - SecurityPolicies
      description: Creates a new security policy within the specified profile.
      operationId: SecurityPolicies_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: securityPolicyName
          in: path
          description: Name of the security policy under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The security policy properties.
        required: true
        x-ms-requestBody-name: securityPolicy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityPolicy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
        '201':
          description: Created. The request has been fulfilled and a new delivery rule has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - SecurityPolicies
      description: Updates an existing security policy within a profile.
      operationId: SecurityPolicies_Patch
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: securityPolicyName
          in: path
          description: Name of the security policy under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Security policy update properties
        required: true
        x-ms-requestBody-name: securityPolicyUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityPolicyUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - SecurityPolicies
      description: Deletes an existing security policy within profile.
      operationId: SecurityPolicies_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: securityPolicyName
          in: path
          description: Name of the security policy under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets?api-version=2024-02-01:
    get:
      tags:
        - Secrets
      description: Lists existing AzureFrontDoor secrets.
      operationId: Secrets_ListByProfile
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretListResult'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}?api-version=2024-02-01:
    get:
      tags:
        - Secrets
      description: Gets an existing Secret within a profile.
      operationId: Secrets_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: secretName
          in: path
          description: Name of the Secret under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
    put:
      tags:
        - Secrets
      description: Creates a new Secret within the specified profile.
      operationId: Secrets_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: secretName
          in: path
          description: Name of the Secret under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The Secret properties.
        required: true
        x-ms-requestBody-name: secret
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '201':
          description: Created. The request has been fulfilled and a new delivery rule has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          headers:
            location:
              schema:
                type: string
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Secrets
      description: Deletes an existing Secret within profile.
      operationId: Secrets_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: secretName
          in: path
          description: Name of the Secret under the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the origin was not found.
        default:
          description: Azure Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsMetrics?api-version=2024-02-01:
    get:
      tags:
        - LogAnalytics
      operationId: LogAnalyticsLogAnalyticsMetrics_Get
      description: Get log report for AFD profile
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - clientRequestCount
                - clientRequestTraffic
                - clientRequestBandwidth
                - originRequestTraffic
                - originRequestBandwidth
                - totalLatency
              x-ms-enum:
                name: LogMetric
                modelAsString: true
        - name: dateTimeBegin
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: dateTimeEnd
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: granularity
          in: query
          required: true
          schema:
            enum:
              - PT5M
              - PT1H
              - P1D
            x-ms-enum:
              name: LogMetricsGranularity
              modelAsString: true
            type: string
        - name: groupBy
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - httpStatusCode
                - protocol
                - cacheStatus
                - countryOrRegion
                - customDomain
              x-ms-enum:
                name: LogMetricsGroupBy
                modelAsString: true
        - name: continents
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: countryOrRegions
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: customDomains
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: protocols
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        default:
          description: Azure Front Door Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-original-operationId: LogAnalytics_GetLogAnalyticsMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsRankings?api-version=2024-02-01:
    get:
      tags:
        - LogAnalytics
      operationId: LogAnalyticsLogAnalyticsRankings_Get
      description: Get log analytics ranking report for AFD profile
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: rankings
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - url
                - referrer
                - browser
                - userAgent
                - countryOrRegion
              x-ms-enum:
                name: LogRanking
                modelAsString: true
        - name: metrics
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - clientRequestCount
                - clientRequestTraffic
                - hitCount
                - missCount
                - userErrorCount
                - errorCount
              x-ms-enum:
                name: LogRankingMetric
                modelAsString: true
        - name: maxRanking
          in: query
          required: true
          schema:
            format: int32
            type: integer
        - name: dateTimeBegin
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: dateTimeEnd
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: customDomains
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankingsResponse'
        default:
          description: Azure Front Door Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-original-operationId: LogAnalytics_GetLogAnalyticsRankings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsLocations?api-version=2024-02-01:
    get:
      tags:
        - LogAnalytics
      operationId: LogAnalyticsLogAnalyticsLocations_Get
      description: Get all available location names for AFD log analytics report.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinentsResponse'
        default:
          description: Azure Front Door  Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-original-operationId: LogAnalytics_GetLogAnalyticsLocations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsResources?api-version=2024-02-01:
    get:
      tags:
        - LogAnalytics
      operationId: LogAnalyticsLogAnalyticsResources_Get
      description: Get all endpoints and custom domains available for AFD log report
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesResponse'
        default:
          description: Azure Front Door Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-original-operationId: LogAnalytics_GetLogAnalyticsResources
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsMetrics?api-version=2024-02-01:
    get:
      tags:
        - WafLogAnalytics
      operationId: LogAnalyticsWafLogAnalyticsMetrics_Get
      description: Get Waf related log analytics report for AFD profile.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - clientRequestCount
              x-ms-enum:
                name: WafMetric
                modelAsString: true
        - name: dateTimeBegin
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: dateTimeEnd
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: granularity
          in: query
          required: true
          schema:
            enum:
              - PT5M
              - PT1H
              - P1D
            x-ms-enum:
              name: WafGranularity
              modelAsString: true
            type: string
        - name: actions
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - allow
                - block
                - log
                - redirect
              x-ms-enum:
                name: WafAction
                modelAsString: true
        - name: groupBy
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - httpStatusCode
                - customDomain
              x-ms-enum:
                name: WafRankingGroupBy
                modelAsString: true
        - name: ruleTypes
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - managed
                - custom
                - bot
              x-ms-enum:
                name: WafRuleType
                modelAsString: true
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WafMetricsResponse'
        default:
          description: Azure Front Door Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-original-operationId: LogAnalytics_GetWafLogAnalyticsMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsRankings?api-version=2024-02-01:
    get:
      tags:
        - WafLogAnalytics
      operationId: LogAnalyticsWafLogAnalyticsRankings_Get
      description: Get WAF log analytics charts for AFD profile
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - clientRequestCount
              x-ms-enum:
                name: WafMetric
                modelAsString: true
        - name: dateTimeBegin
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: dateTimeEnd
          in: query
          required: true
          schema:
            format: date-time
            type: string
        - name: maxRanking
          in: query
          required: true
          schema:
            format: int32
            type: integer
        - name: rankings
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - action
                - ruleGroup
                - ruleId
                - userAgent
                - clientIp
                - url
                - countryOrRegion
                - ruleType
              x-ms-enum:
                name: WafRankingType
                modelAsString: true
        - name: actions
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - allow
                - block
                - log
                - redirect
              x-ms-enum:
                name: WafAction
                modelAsString: true
        - name: ruleTypes
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - managed
                - custom
                - bot
              x-ms-enum:
                name: WafRuleType
                modelAsString: true
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WafRankingsResponse'
        default:
          description: Azure Front Door Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AfdErrorResponse'
      x-ms-original-operationId: LogAnalytics_GetWafLogAnalyticsRankings
  /subscriptions/{subscriptionId}/providers/Microsoft.Cdn/profiles?api-version=2024-02-01:
    get:
      tags:
        - Profiles
      description: Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within an Azure subscription.
      operationId: Profiles_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles?api-version=2024-02-01:
    get:
      tags:
        - Profiles
      description: Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within a resource group.
      operationId: Profiles_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}?api-version=2024-02-01:
    get:
      tags:
        - Profiles
      description: Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.
      operationId: Profiles_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Profiles
      description: Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile name under the specified subscription and resource group.
      operationId: Profiles_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Profile properties needed to create a new profile.
        required: true
        x-ms-requestBody-name: profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '201':
          description: Created. The request has been fulfilled and a new profile has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Profiles
      description: Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.
      operationId: Profiles_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Profile properties needed to update an existing profile.
        required: true
        x-ms-requestBody-name: profileUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Profiles
      description: Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.
      operationId: Profiles_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the profile was not found.
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/canMigrate?api-version=2024-02-01:
    post:
      tags:
        - Profiles
      description: Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium) profile.
      operationId: Profiles_CanMigrate
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Properties needed to check if cdn profile or classic frontdoor can be migrated.
        required: true
        x-ms-requestBody-name: canMigrateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CanMigrateParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CanMigrateResult'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/migrate?api-version=2024-02-01:
    post:
      tags:
        - Profiles
      description: Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile. The change need to be committed after this.
      operationId: Profiles_Migrate
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Properties needed to migrate the profile.
        required: true
        x-ms-requestBody-name: migrationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateResult'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateResult'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/migrationCommit?api-version=2024-02-01:
    post:
      tags:
        - Profiles
      description: Commit the migrated Azure Frontdoor(Standard/Premium) profile.
      operationId: Profiles_MigrationCommit
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri?api-version=2024-02-01:
    post:
      tags:
        - Profiles
      description: Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.
      operationId: Profiles_GenerateSsoUri
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoUri'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getSupportedOptimizationTypes?api-version=2024-02-01:
    post:
      tags:
        - Profiles
      description: Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.
      operationId: ProfilesSupportedOptimizationTypes_List
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedOptimizationTypesListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Profiles_ListSupportedOptimizationTypes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkResourceUsage?api-version=2024-02-01:
    post:
      tags:
        - Profiles
      description: Checks the quota and actual usage of endpoints under the given Azure Front Door Standard or Azure Front Door Premium or CDN profile.
      operationId: ProfilesResourceUsage_List
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUsageListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Profiles_ListResourceUsage
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints?api-version=2024-02-01:
    get:
      tags:
        - Endpoints
      description: Lists existing CDN endpoints.
      operationId: Endpoints_ListByProfile
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}?api-version=2024-02-01:
    get:
      tags:
        - Endpoints
      description: Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
      operationId: Endpoints_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Endpoints
      description: Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
      operationId: Endpoints_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Endpoint properties
        required: true
        x-ms-requestBody-name: endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '201':
          description: Created. The request has been fulfilled and a new endpoint has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Endpoints
      description: Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the Update Custom Domain operation.
      operationId: Endpoints_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Endpoint update properties
        required: true
        x-ms-requestBody-name: endpointUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointUpdateParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '202':
          description: Accepted and the operation will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Endpoints
      description: Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
      operationId: Endpoints_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the endpoint was not found.
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start?api-version=2024-02-01:
    post:
      tags:
        - Endpoints
      description: Starts an existing CDN endpoint that is on a stopped state.
      operationId: Endpoints_Start
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop?api-version=2024-02-01:
    post:
      tags:
        - Endpoints
      description: Stops an existing running CDN endpoint.
      operationId: Endpoints_Stop
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge?api-version=2024-02-01:
    post:
      tags:
        - Endpoints
      description: Removes a content from CDN.
      operationId: Endpoints_PurgeContent
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.
        required: true
        x-ms-requestBody-name: contentFilePaths
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load?api-version=2024-02-01:
    post:
      tags:
        - Endpoints
      description: Pre-loads a content to CDN. Available for Verizon Profiles.
      operationId: Endpoints_LoadContent
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: 'The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png'' which loads a single file '
        required: true
        x-ms-requestBody-name: contentFilePaths
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/validateCustomDomain?api-version=2024-02-01:
    post:
      tags:
        - Endpoints
      description: Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.
      operationId: Endpoints_ValidateCustomDomain
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Custom domain to be validated.
        required: true
        x-ms-requestBody-name: customDomainProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCustomDomainInput'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCustomDomainOutput'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/checkResourceUsage?api-version=2024-02-01:
    post:
      tags:
        - Endpoints
      description: Checks the quota and usage of geo filters and custom domains under the given endpoint.
      operationId: EndpointsResourceUsage_List
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUsageListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Endpoints_ListResourceUsage
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins?api-version=2024-02-01:
    get:
      tags:
        - Origins
      description: Lists all of the existing origins within an endpoint.
      operationId: Origins_ListByEndpoint
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}?api-version=2024-02-01:
    get:
      tags:
        - Origins
      description: Gets an existing origin within an endpoint.
      operationId: Origins_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Origin'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Origins
      description: Creates a new origin within the specified endpoint.
      operationId: Origins_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin that is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin properties
        required: true
        x-ms-requestBody-name: origin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Origin'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Origin'
        '201':
          description: Created. The request has been fulfilled and a new origin has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Origin'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Origin'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Origins
      description: Updates an existing origin within an endpoint.
      operationId: Origins_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin properties
        required: true
        x-ms-requestBody-name: originUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OriginUpdateParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Origin'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Origin'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Origins
      description: Deletes an existing origin within an endpoint.
      operationId: Origins_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originName
          in: path
          description: Name of the origin which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the origin was not found.
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups?api-version=2024-02-01:
    get:
      tags:
        - OriginGroups
      description: Lists all of the existing origin groups within an endpoint.
      operationId: OriginGroups_ListByEndpoint
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroupListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}?api-version=2024-02-01:
    get:
      tags:
        - OriginGroups
      description: Gets an existing origin group within an endpoint.
      operationId: OriginGroups_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroup'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - OriginGroups
      description: Creates a new origin group within the specified endpoint.
      operationId: OriginGroups_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin group properties
        required: true
        x-ms-requestBody-name: originGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OriginGroup'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroup'
        '201':
          description: Created. The request has been fulfilled and a new origin group has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroup'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroup'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - OriginGroups
      description: Updates an existing origin group within an endpoint.
      operationId: OriginGroups_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Origin group properties
        required: true
        x-ms-requestBody-name: originGroupUpdateProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OriginGroupUpdateParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroup'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroup'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - OriginGroups
      description: Deletes an existing origin group within an endpoint.
      operationId: OriginGroups_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: originGroupName
          in: path
          description: Name of the origin group which is unique within the endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the origin was not found.
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains?api-version=2024-02-01:
    get:
      tags:
        - CustomDomains
      description: Lists all of the existing custom domains within an endpoint.
      operationId: CustomDomains_ListByEndpoint
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomainListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}?api-version=2024-02-01:
    get:
      tags:
        - CustomDomains
      description: Gets an existing custom domain within an endpoint.
      operationId: CustomDomains_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the custom domain within an endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CustomDomains
      description: Creates a new custom domain within an endpoint.
      operationId: CustomDomains_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the custom domain within an endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Properties required to create a new custom domain.
        required: true
        x-ms-requestBody-name: customDomainProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '201':
          description: Created. The request has been fulfilled and a new custom domain has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - CustomDomains
      description: Deletes an existing custom domain within an endpoint.
      operationId: CustomDomains_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the custom domain within an endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
          headers:
            location:
              schema:
                type: string
        '204':
          description: No Content. The request has been accepted but the custom domain was not found
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps?api-version=2024-02-01:
    post:
      tags:
        - CustomDomains
      description: Disable https delivery of the custom domain.
      operationId: CustomDomains_DisableCustomHttps
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the custom domain within an endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps?api-version=2024-02-01:
    post:
      tags:
        - CustomDomains
      description: Enable https delivery of the custom domain.
      operationId: CustomDomains_EnableCustomHttps
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - name: profileName
          in: path
          description: Name of the CDN profile which is unique within the resource group.
          required: true
          schema:
            type: string
        - name: endpointName
          in: path
          description: Name of the endpoint under the profile which is unique globally.
          required: true
          schema:
            type: string
        - name: customDomainName
          in: path
          description: Name of the custom domain within an endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user's own certificate. If not specified, enabling ssl uses CDN managed certificate by default.
        required: false
        x-ms-requestBody-name: customDomainHttpsParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainHttpsParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
          headers:
            location:
              schema:
                type: string
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /providers/Microsoft.Cdn/checkNameAvailability?api-version=2024-02-01:
    post:
      tags:
        - CheckNameAvailability
      description: Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.
      operationId: Operations_CheckNameAvailability
      requestBody:
        description: Input to check.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityInput'
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityOutput'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckNameAvailability
  /subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkNameAvailability?api-version=2024-02-01:
    post:
      tags:
        - CheckNameAvailabilityWithSubscription
      description: Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.
      operationId: Operations_CheckNameAvailabilityWithSubscription
      requestBody:
        description: Input to check.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityInput'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityOutput'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckNameAvailabilityWithSubscription
  /subscriptions/{subscriptionId}/providers/Microsoft.Cdn/validateProbe?api-version=2024-02-01:
    post:
      tags:
        - ValidateProbe
      description: Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative to the origin path specified in the endpoint configuration.
      operationId: Operations_ValidateProbe
      requestBody:
        description: Input to check.
        required: true
        x-ms-requestBody-name: validateProbeInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateProbeInput'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateProbeOutput'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ValidateProbe
  /subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkResourceUsage?api-version=2024-02-01:
    post:
      tags:
        - CheckResourceUsage
      description: Check the quota and actual usage of the CDN profiles under the given subscription.
      operationId: ResourceUsage_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUsageListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Cdn/operations?api-version=2024-02-01:
    get:
      tags:
        - Operations
      description: Lists all of the available CDN REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsListResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Cdn/edgenodes?api-version=2024-02-01:
    get:
      tags:
        - Edgenodes
      description: Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.
      operationId: EdgeNodes_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgenodeResult'
        default:
          description: CDN error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
