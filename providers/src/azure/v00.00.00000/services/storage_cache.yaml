openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure HPC Cache
  description: Use Azure HPC Cache to speed up NFS file access for read-intensive high-performance computing (HPC) workloads.  By caching files in Azure, Azure HPC Cache brings the scalability of cloud computing to your existing workflow. This service can be used even for workflows where your data is stored across WAN links, such as in your local data center network-attached storage (NAS) environment.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    CacheNameParameter:
      name: cacheName
      in: path
      description: Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-0-9a-zA-Z_]{1,80}$
        type: string
    StorageTargetParameter:
      name: storageTargetName
      in: path
      description: Name of Storage Target.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-0-9a-zA-Z_]{1,80}$
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AmlFilesystemNameParameter:
      name: amlFilesystemName
      in: path
      description: Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$
        minLength: 2
        maxLength: 80
        type: string
    ImportJobNameParameter:
      name: importJobName
      in: path
      description: Name for the import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$
        minLength: 2
        maxLength: 80
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ApiOperation:
      description: 'REST API operation description: see https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/openapi-authoring-automated-guidelines.md#r3023-operationsapiimplementation'
      properties:
        display:
          type: object
          description: The object that represents the operation.
          properties:
            operation:
              description: 'Operation type: Read, write, delete, etc.'
              type: string
            provider:
              description: 'Service provider: Microsoft.StorageCache'
              type: string
            resource:
              description: 'Resource on which the operation is performed: Cache, etc.'
              type: string
            description:
              description: The description of the operation
              type: string
        origin:
          description: Origin of the operation.
          type: string
        isDataAction:
          description: The flag that indicates whether the operation applies to data plane.
          type: boolean
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        properties:
          x-ms-client-flatten: true
          description: Additional details about an operation.
          type: object
          properties:
            serviceSpecification:
              type: object
              description: Specification of the all the metrics provided for a resource type.
              properties:
                metricSpecifications:
                  description: Details about operations related to metrics.
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricSpecification'
                  x-ms-identifiers:
                    - name
                logSpecifications:
                  description: Details about operations related to logs.
                  type: array
                  items:
                    $ref: '#/components/schemas/LogSpecification'
                  x-ms-identifiers:
                    - name
      type: object
    ApiOperationListResult:
      description: Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          type: string
        value:
          description: List of Resource Provider operations supported by the Microsoft.StorageCache resource provider.
          items:
            $ref: '#/components/schemas/ApiOperation'
          type: array
          x-ms-identifiers: []
      type: object
    CloudError:
      x-ms-external: true
      description: An error response.
      properties:
        error:
          description: The body of the error.
          $ref: '#/components/schemas/CloudErrorBody'
      type: object
    CloudErrorBody:
      description: An error response.
      properties:
        code:
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
          type: string
        details:
          description: A list of additional details about the error.
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          type: array
          x-ms-identifiers: []
        message:
          description: A message describing the error, intended to be suitable for display in a user interface.
          type: string
        target:
          description: The target of the particular error. For example, the name of the property in error.
          type: string
      type: object
    AscOperation:
      description: The status of operation.
      properties:
        id:
          type: string
          description: The operation Id.
        name:
          type: string
          description: The operation name.
        startTime:
          type: string
          description: The start time of the operation.
        endTime:
          type: string
          description: The end time of the operation.
        status:
          type: string
          description: The status of the operation.
        error:
          type: object
          description: The error detail of the operation if any.
          $ref: '#/components/schemas/AscOperationErrorResponse'
        properties:
          x-ms-client-flatten: true
          description: Additional operation-specific properties
          $ref: '#/components/schemas/AscOperationProperties'
      type: object
    AscOperationProperties:
      type: object
      description: Additional operation-specific output.
      properties:
        output:
          type: object
          description: Additional operation-specific output.
          additionalProperties:
            type: object
    AscOperationErrorResponse:
      description: Describes the format of Error response.
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
    Cache:
      description: 'A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md'
      x-ms-azure-resource: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        id:
          description: Resource ID of the cache.
          readOnly: true
          $ref: '#/components/schemas/URLString'
        location:
          description: Region name string.
          type: string
          x-ms-mutability:
            - read
            - create
        name:
          description: Name of cache.
          readOnly: true
          $ref: '#/components/schemas/ResourceName'
        type:
          description: Type of the cache; Microsoft.StorageCache/Cache
          readOnly: true
          type: string
        identity:
          $ref: '#/components/schemas/CacheIdentity'
          description: The identity of the cache, if configured.
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          description: Properties of the cache.
          properties:
            cacheSizeGB:
              description: The size of this Cache, in GB.
              type: integer
              format: int32
              x-ms-mutability:
                - read
                - create
            health:
              description: Health of the cache.
              readOnly: true
              $ref: '#/components/schemas/CacheHealth'
            mountAddresses:
              description: Array of IPv4 addresses that can be used by clients mounting this cache.
              readOnly: true
              items:
                type: string
              type: array
            provisioningState:
              description: ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
              enum:
                - Succeeded
                - Failed
                - Canceled
                - Creating
                - Deleting
                - Updating
              x-ms-enum:
                name: ProvisioningStateType
                modelAsString: true
              type: string
              readOnly: true
            subnet:
              description: Subnet used for the cache.
              $ref: '#/components/schemas/URLString'
              x-ms-mutability:
                - read
                - create
            upgradeStatus:
              description: Upgrade status of the cache.
              $ref: '#/components/schemas/CacheUpgradeStatus'
              readOnly: true
            upgradeSettings:
              description: Upgrade settings of the cache.
              $ref: '#/components/schemas/CacheUpgradeSettings'
            networkSettings:
              $ref: '#/components/schemas/CacheNetworkSettings'
              description: Specifies network settings of the cache.
            encryptionSettings:
              $ref: '#/components/schemas/CacheEncryptionSettings'
              description: Specifies encryption settings of the cache.
            securitySettings:
              $ref: '#/components/schemas/CacheSecuritySettings'
              description: Specifies security settings of the cache.
            directoryServicesSettings:
              $ref: '#/components/schemas/CacheDirectorySettings'
              description: Specifies Directory Services settings of the cache.
            zones:
              type: array
              items:
                type: string
              description: Availability zones for resources. This field should only contain a single element in the array.
              x-ms-mutability:
                - read
                - create
            primingJobs:
              $ref: '#/components/schemas/PrimingJobList'
              description: Specifies the priming jobs defined in the cache.
            spaceAllocation:
              $ref: '#/components/schemas/SpaceAllocationList'
              description: Specifies the space allocation percentage for each storage target in the cache.
          type: object
        sku:
          x-ms-mutability:
            - read
            - create
          description: SKU for the cache.
          properties:
            name:
              description: SKU name for this cache.
              type: string
          type: object
      type: object
    CacheIdentity:
      type: object
      description: Cache identity properties.
      x-ms-mutability:
        - read
        - create
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID for the system-assigned identity of the cache.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID associated with the cache.
        type:
          type: string
          description: The type of identity used for the cache
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: CacheIdentityType
            modelAsString: false
        userAssignedIdentities:
          type: object
          description: A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.
          additionalProperties:
            type: object
            x-ms-client-name: userAssignedIdentitiesValue
            properties:
              principalId:
                readOnly: true
                type: string
                description: The principal ID of the user-assigned identity.
              clientId:
                readOnly: true
                type: string
                description: The client ID of the user-assigned identity.
    CacheNetworkSettings:
      type: object
      description: Cache network settings.
      properties:
        mtu:
          description: The IPv4 maximum transmission unit configured for the subnet.
          type: integer
          format: int32
          minimum: 576
          maximum: 1500
          default: 1500
        utilityAddresses:
          description: Array of additional IP addresses used by this cache.
          readOnly: true
          items:
            type: string
          type: array
        dnsServers:
          description: DNS servers for the cache to use.  It will be set from the network configuration if no value is provided.
          type: array
          items:
            type: string
        dnsSearchDomain:
          description: DNS search domain
          type: string
        ntpServer:
          description: NTP server IP Address or FQDN for the cache to use. The default is time.windows.com.
          type: string
          default: time.windows.com
    CacheEncryptionSettings:
      type: object
      description: Cache encryption settings.
      properties:
        keyEncryptionKey:
          x-ms-secret: true
          $ref: '#/components/schemas/KeyVaultKeyReference'
          description: Specifies the location of the key encryption key in key vault.
        rotationToLatestKeyVersionEnabled:
          type: boolean
          description: Specifies whether the service will automatically rotate to the newest version of the key in the key vault.
    CacheSecuritySettings:
      type: object
      description: Cache security settings.
      properties:
        accessPolicies:
          description: NFS access policies defined for this cache.
          items:
            $ref: '#/components/schemas/NfsAccessPolicy'
          type: array
          x-ms-identifiers:
            - name
    CacheDirectorySettings:
      description: Cache Directory Services settings.
      type: object
      properties:
        activeDirectory:
          $ref: '#/components/schemas/CacheActiveDirectorySettings'
          description: Specifies settings for joining the HPC Cache to an Active Directory domain.
        usernameDownload:
          $ref: '#/components/schemas/CacheUsernameDownloadSettings'
          description: Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups.
    CacheActiveDirectorySettings:
      description: Active Directory settings used to join a cache to a domain.
      properties:
        primaryDnsIpAddress:
          description: Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
          type: string
        secondaryDnsIpAddress:
          description: Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
          type: string
        domainName:
          description: The fully qualified domain name of the Active Directory domain controller.
          type: string
        domainNetBiosName:
          description: The Active Directory domain's NetBIOS name.
          type: string
        cacheNetBiosName:
          description: The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].
          pattern: ^[-0-9a-zA-Z]{1,15}$
          type: string
        domainJoined:
          description: True if the HPC Cache is joined to the Active Directory domain.
          type: string
          readOnly: true
          enum:
            - 'Yes'
            - 'No'
            - Error
          x-ms-enum:
            name: DomainJoinedType
            modelAsString: true
        credentials:
          type: object
          description: Active Directory admin credentials used to join the HPC Cache to a domain.
          properties:
            username:
              description: Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
              type: string
            password:
              description: Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
              x-ms-secret: true
              type: string
              x-ms-mutability:
                - read
                - create
                - update
          required:
            - username
      type: object
      required:
        - primaryDnsIpAddress
        - domainNetBiosName
        - domainName
        - cacheNetBiosName
    CacheUsernameDownloadSettings:
      description: Settings for Extended Groups username and group download.
      type: object
      properties:
        extendedGroups:
          type: boolean
          description: Whether or not Extended Groups is enabled.
        usernameSource:
          description: This setting determines how the cache gets username and group names for clients.
          enum:
            - AD
            - LDAP
            - File
            - None
          x-ms-enum:
            name: UsernameSource
            modelAsString: true
          type: string
          default: None
        groupFileURI:
          type: string
          description: The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'.
        userFileURI:
          type: string
          description: The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'.
        ldapServer:
          type: string
          description: The fully qualified domain name or IP address of the LDAP server to use.
        ldapBaseDN:
          type: string
          description: The base distinguished name for the LDAP domain.
        encryptLdapConnection:
          type: boolean
          description: Whether or not the LDAP connection should be encrypted.
          default: false
        requireValidCertificate:
          type: boolean
          description: Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided.
          default: false
        autoDownloadCertificate:
          type: boolean
          description: Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true.
          default: false
        caCertificateURI:
          type: string
          description: The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true.
        usernameDownloaded:
          description: Indicates whether or not the HPC Cache has performed the username download successfully.
          type: string
          readOnly: true
          enum:
            - 'Yes'
            - 'No'
            - Error
          x-ms-enum:
            name: UsernameDownloadedType
            modelAsString: true
        credentials:
          type: object
          description: When present, these are the credentials for the secure LDAP connection.
          properties:
            bindDn:
              type: string
              description: The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
              x-ms-mutability:
                - read
                - create
                - update
            bindPassword:
              type: string
              x-ms-secret: true
              description: The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response.
    NfsAccessPolicy:
      type: object
      description: A set of rules describing access policies applied to NFSv3 clients of the cache.
      properties:
        name:
          description: Name identifying this policy. Access Policy names are not case sensitive.
          type: string
        accessRules:
          description: The set of rules describing client accesses allowed under this policy.
          type: array
          items:
            $ref: '#/components/schemas/NfsAccessRule'
          x-ms-identifiers: []
      required:
        - name
        - accessRules
    NfsAccessRule:
      type: object
      description: Rule to place restrictions on portions of the cache namespace being presented to clients.
      properties:
        scope:
          description: Scope for this rule. The scope and filter determine which clients match the rule.
          type: string
          enum:
            - default
            - network
            - host
          x-ms-enum:
            name: NfsAccessRuleScope
            modelAsString: true
        filter:
          description: Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied.
          type: string
        access:
          description: Access allowed by this rule.
          type: string
          enum:
            - 'no'
            - ro
            - rw
          x-ms-enum:
            name: NfsAccessRuleAccess
            modelAsString: true
        suid:
          description: Allow SUID semantics.
          type: boolean
        submountAccess:
          description: For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'.
          type: boolean
        rootSquash:
          description: Map root accesses to anonymousUID and anonymousGID.
          type: boolean
        anonymousUID:
          description: UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided.
          type: string
        anonymousGID:
          description: GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided.
          type: string
      required:
        - scope
        - access
    KeyVaultKeyReference:
      type: object
      description: Describes a reference to key vault key.
      properties:
        keyUrl:
          type: string
          description: The URL referencing a key encryption key in key vault.
        sourceVault:
          type: object
          description: Describes a resource Id to source key vault.
          properties:
            id:
              type: string
              description: Resource Id.
      required:
        - keyUrl
        - sourceVault
    CachesListResult:
      description: Result of the request to list caches. It contains a list of caches and a URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of cache list results, if there are any.
          type: string
        value:
          description: List of Caches.
          items:
            $ref: '#/components/schemas/Cache'
          type: array
      type: object
    CacheHealth:
      type: object
      description: An indication of cache health. Gives more information about health than just that related to provisioning.
      properties:
        state:
          description: List of cache health states. Down is when the cluster is not responding.  Degraded is when its functioning but has some alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access to the encryption key in the encryption settings.
          enum:
            - Unknown
            - Healthy
            - Degraded
            - Down
            - Transitioning
            - Stopping
            - Stopped
            - Upgrading
            - Flushing
            - WaitingForKey
            - StartFailed
            - UpgradeFailed
          x-ms-enum:
            name: HealthStateType
            modelAsString: true
          type: string
        statusDescription:
          description: Describes explanation of state.
          type: string
        conditions:
          description: Outstanding conditions that need to be investigated and resolved.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          x-ms-identifiers: []
    Condition:
      type: object
      description: Outstanding conditions that will need to be resolved.
      properties:
        timestamp:
          readOnly: true
          type: string
          format: date-time
          description: The time when the condition was raised.
        message:
          readOnly: true
          type: string
          description: The issue requiring attention.
    CacheUpgradeStatus:
      description: Properties describing the software upgrade state of the cache.
      properties:
        currentFirmwareVersion:
          description: Version string of the firmware currently installed on this cache.
          type: string
          readOnly: true
        firmwareUpdateStatus:
          description: True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
          enum:
            - available
            - unavailable
          x-ms-enum:
            name: FirmwareStatusType
            modelAsString: true
          readOnly: true
          type: string
        firmwareUpdateDeadline:
          description: Time at which the pending firmware update will automatically be installed on the cache.
          format: date-time
          type: string
          readOnly: true
        lastFirmwareUpdate:
          description: Time of the last successful firmware update.
          format: date-time
          type: string
          readOnly: true
        pendingFirmwareVersion:
          description: When firmwareUpdateAvailable is true, this field holds the version string for the update.
          type: string
          readOnly: true
      type: object
    CacheUpgradeSettings:
      description: Cache Upgrade Settings.
      properties:
        upgradeScheduleEnabled:
          description: True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
          type: boolean
        scheduledTime:
          description: When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.
          format: date-time
          type: string
      type: object
    UnknownProperties:
      description: Properties of an unknown type of Storage Target.
      additionalProperties:
        type: string
      properties: {}
      type: object
    StorageTarget:
      description: Type of the Storage Target.
      properties:
        name:
          description: Name of the Storage Target.
          readOnly: true
          $ref: '#/components/schemas/ResourceName'
        id:
          readOnly: true
          type: string
          description: Resource ID of the Storage Target.
        type:
          description: Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
          readOnly: true
          type: string
        location:
          description: Region name string.
          readOnly: true
          type: string
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          description: StorageTarget properties
          $ref: '#/components/schemas/StorageTargetProperties'
      type: object
    StorageTargetResource:
      type: object
      description: Resource used by a cache.
      properties:
        name:
          description: Name of the Storage Target.
          readOnly: true
          $ref: '#/components/schemas/ResourceName'
        id:
          readOnly: true
          type: string
          description: Resource ID of the Storage Target.
        type:
          description: Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
          readOnly: true
          type: string
        location:
          description: Region name string.
          readOnly: true
          type: string
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    StorageTargetProperties:
      type: object
      description: Properties of the Storage Target.
      required:
        - targetType
      properties:
        junctions:
          description: List of cache namespace junctions to target for namespace associations.
          type: array
          items:
            $ref: '#/components/schemas/NamespaceJunction'
          x-ms-identifiers: []
        targetType:
          description: Type of the Storage Target.
          enum:
            - nfs3
            - clfs
            - unknown
            - blobNfs
          x-ms-enum:
            name: StorageTargetType
            modelAsString: true
          type: string
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Creating
            - Deleting
            - Updating
          x-ms-enum:
            name: ProvisioningStateType
            modelAsString: true
          type: string
          readOnly: true
        state:
          description: Storage target operational state.
          enum:
            - Ready
            - Busy
            - Suspended
            - Flushing
          x-ms-enum:
            name: OperationalStateType
            modelAsString: true
          type: string
        nfs3:
          description: Properties when targetType is nfs3.
          $ref: '#/components/schemas/Nfs3Target'
        clfs:
          description: Properties when targetType is clfs.
          $ref: '#/components/schemas/ClfsTarget'
        unknown:
          description: Properties when targetType is unknown.
          $ref: '#/components/schemas/UnknownTarget'
        blobNfs:
          description: Properties when targetType is blobNfs.
          $ref: '#/components/schemas/BlobNfsTarget'
        allocationPercentage:
          description: The percentage of cache space allocated for this storage target
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          readOnly: true
    Nfs3Target:
      type: object
      description: Properties pertaining to the Nfs3Target
      properties:
        target:
          description: IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
          pattern: ^[-.,0-9a-zA-Z]+$
          type: string
          x-ms-mutability:
            - read
            - create
        usageModel:
          description: Identifies the StorageCache usage model to be used for this storage target.
          type: string
        verificationTimer:
          description: Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
          type: integer
          format: int32
        writeBackTimer:
          description: Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
          type: integer
          format: int32
    ClfsTarget:
      type: object
      description: Properties pertaining to the ClfsTarget
      properties:
        target:
          description: Resource ID of storage container.
          $ref: '#/components/schemas/URLString'
          x-ms-mutability:
            - read
            - create
    UnknownTarget:
      type: object
      description: Properties pertaining to the UnknownTarget
      properties:
        attributes:
          description: Dictionary of string->string pairs containing information about the Storage Target.
          $ref: '#/components/schemas/UnknownProperties'
    BlobNfsTarget:
      type: object
      description: Properties pertaining to the BlobNfsTarget.
      properties:
        target:
          description: Resource ID of the storage container.
          $ref: '#/components/schemas/URLString'
          x-ms-mutability:
            - read
            - create
        usageModel:
          description: Identifies the StorageCache usage model to be used for this storage target.
          type: string
        verificationTimer:
          description: Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
          type: integer
          format: int32
        writeBackTimer:
          description: Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
          type: integer
          format: int32
    ResourceName:
      description: Schema for the name of resources served by this provider. Note that objects will contain an odata @id annotation as appropriate. This will contain the complete resource id of the object. These names are case-preserving, but not case sensitive.
      pattern: ^[-0-9a-zA-Z_]{1,80}$
      type: string
    ResourceSku:
      description: A resource SKU.
      properties:
        resourceType:
          readOnly: true
          type: string
          description: The type of resource the SKU applies to.
        capabilities:
          description: A list of capabilities of this SKU, such as throughput or ops/sec.
          items:
            $ref: '#/components/schemas/ResourceSkuCapabilities'
          type: array
          x-ms-identifiers:
            - name
        locations:
          readOnly: true
          type: array
          items:
            type: string
          description: The set of locations where the SKU is available. This is the supported and registered Azure Geo Regions (e.g., West US, East US, Southeast Asia, etc.).
        locationInfo:
          description: The set of locations where the SKU is available.
          items:
            $ref: '#/components/schemas/ResourceSkuLocationInfo'
          type: array
          x-ms-identifiers: []
        name:
          description: The name of this SKU.
          type: string
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/Restriction'
          description: The restrictions preventing this SKU from being used. This is empty if there are no restrictions.
          x-ms-identifiers: []
      type: object
    Restriction:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The type of restrictions. In this version, the only possible value for this is location.
        values:
          readOnly: true
          type: array
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location, then this would be the different locations where the SKU is restricted.
        reasonCode:
          type: string
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: ReasonCode
            modelAsString: true
          description: The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". "QuotaId" is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. "NotAvailableForSubscription" is related to capacity at the datacenter.
      description: The restrictions preventing this SKU from being used.
    ResourceSkuCapabilities:
      description: A resource SKU capability.
      properties:
        name:
          description: Name of a capability, such as ops/sec.
          type: string
        value:
          description: Quantity, if the capability is measured by quantity.
          type: string
      type: object
    ResourceSkuLocationInfo:
      description: Resource SKU location information.
      properties:
        location:
          description: Location where this SKU is available.
          type: string
        zones:
          description: Zones if any.
          type: array
          items:
            type: string
      type: object
    ResourceSkusResult:
      type: object
      description: The response from the List Cache SKUs operation.
      properties:
        nextLink:
          description: The URI to fetch the next page of cache SKUs.
          type: string
        value:
          description: The list of SKUs available for the subscription.
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSku'
          type: array
          x-ms-identifiers: []
    NamespaceJunction:
      description: A namespace junction.
      type: object
      properties:
        namespacePath:
          description: Namespace path on a cache for a Storage Target.
          type: string
        targetPath:
          description: Path in Storage Target to which namespacePath points.
          type: string
        nfsExport:
          description: NFS export where targetPath exists.
          type: string
        nfsAccessPolicy:
          description: Name of the access policy applied to this junction.
          type: string
          default: default
    StorageTargetsResult:
      description: A list of Storage Targets.
      properties:
        nextLink:
          description: The URI to fetch the next page of Storage Targets.
          type: string
        value:
          description: The list of Storage Targets defined for the cache.
          items:
            $ref: '#/components/schemas/StorageTarget'
          type: array
      type: object
    URLString:
      description: A fully qualified URL.
      type: string
    UsageModel:
      description: A usage model.
      properties:
        display:
          description: Localized information describing this usage model.
          type: object
          properties:
            description:
              description: String to display for this usage model.
              type: string
        modelName:
          description: Non-localized keyword name for this usage model.
          type: string
        targetType:
          description: The type of Storage Target to which this model is applicable (only nfs3 as of this version).
          type: string
      type: object
    UsageModelsResult:
      description: A list of cache usage models.
      properties:
        nextLink:
          description: The URI to fetch the next page of cache usage models.
          type: string
        value:
          description: The list of usage models available for the subscription.
          items:
            $ref: '#/components/schemas/UsageModel'
          type: array
          x-ms-identifiers:
            - modelName
      type: object
    ResourceUsagesListResult:
      description: Result of the request to list resource usages. It contains a list of resource usages & limits and a URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of resource usage list results if there are any.
          readOnly: true
          type: string
        value:
          description: List of usages and limits for resources controlled by the Microsoft.StorageCache resource provider.
          items:
            $ref: '#/components/schemas/ResourceUsage'
          readOnly: true
          type: array
          x-ms-identifiers:
            - name
      type: object
    ResourceUsage:
      description: The usage and limit (quota) for a resource.
      properties:
        limit:
          description: The limit (quota) for this resource.
          readOnly: true
          type: integer
          format: int32
          minimum: 0
        unit:
          description: Unit that the limit and usages are expressed in, such as 'Count'.
          readOnly: true
          type: string
        currentValue:
          description: The current usage of this resource.
          readOnly: true
          type: integer
          format: int32
          minimum: 0
        name:
          description: Naming information for this resource type.
          readOnly: true
          type: object
          properties:
            value:
              description: Canonical name for this resource type.
              type: string
            localizedValue:
              description: Localized name for this resource type.
              type: string
      type: object
    MetricSpecification:
      type: object
      description: Details about operation related to metrics.
      properties:
        name:
          type: string
          description: The name of the metric.
        displayName:
          type: string
          description: Localized display name of the metric.
        displayDescription:
          type: string
          description: The description of the metric.
        unit:
          type: string
          description: The unit that the metric is measured in.
        aggregationType:
          type: string
          description: The type of metric aggregation.
        supportedAggregationTypes:
          description: Support metric aggregation type.
          type: array
          items:
            enum:
              - NotSpecified
              - None
              - Average
              - Minimum
              - Maximum
              - Total
              - Count
            type: string
            x-ms-enum:
              name: MetricAggregationType
              modelAsString: true
        metricClass:
          description: Type of metrics.
          type: string
        dimensions:
          description: Dimensions of the metric
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers: []
    LogSpecification:
      type: object
      description: Details about operation related to logs.
      properties:
        name:
          type: string
          description: The name of the log.
        displayName:
          type: string
          description: Localized display name of the log.
    MetricDimension:
      type: object
      description: Specifications of the Dimension of metrics.
      properties:
        name:
          type: string
          description: Name of the dimension
        displayName:
          type: string
          description: Localized friendly display name of the dimension
        internalName:
          type: string
          description: Internal name of the dimension.
        toBeExportedForShoebox:
          description: To be exported to shoe box.
          type: boolean
    PrimingJob:
      description: A priming job instance.
      properties:
        primingJobName:
          description: The priming job name.
          $ref: '#/components/schemas/ResourceName'
          x-ms-mutability:
            - read
            - create
        primingManifestUrl:
          description: The URL for the priming manifest file to download. This file must be readable from the HPC Cache. When the file is in Azure blob storage the URL should include a Shared Access Signature (SAS) granting read permissions on the blob.
          type: string
          x-ms-mutability:
            - create
          x-ms-secret: true
        primingJobId:
          description: The unique identifier of the priming job.
          pattern: ^[-0-9a-zA-Z_]{1,80}$
          readOnly: true
          type: string
        primingJobState:
          description: The state of the priming operation.
          enum:
            - Queued
            - Running
            - Paused
            - Complete
          readOnly: true
          type: string
          x-ms-enum:
            name: PrimingJobState
            modelAsString: true
        primingJobStatus:
          description: The status code of the priming job.
          type: string
          readOnly: true
        primingJobDetails:
          description: The job details or error information if any.
          type: string
          readOnly: true
        primingJobPercentComplete:
          description: The current progress of the priming job, as a percentage.
          type: number
          format: double
          maximum: 100
          minimum: 0
          readOnly: true
      required:
        - primingJobName
        - primingManifestUrl
      type: object
    PrimingJobList:
      description: The list of priming jobs defined for the cache.
      items:
        $ref: '#/components/schemas/PrimingJob'
      type: array
      x-ms-identifiers:
        - primingJobId
      readOnly: true
    PrimingJobIdParameter:
      description: Object containing the priming job ID.
      properties:
        primingJobId:
          description: The unique identifier of the priming job.
          pattern: ^[-0-9a-zA-Z_]{1,80}$
          type: string
      required:
        - primingJobId
      type: object
    SpaceAllocationList:
      description: List of storage target space allocations.
      items:
        $ref: '#/components/schemas/StorageTargetSpaceAllocation'
      type: array
      x-ms-identifiers:
        - name
      readOnly: true
    SpaceAllocationParameter:
      description: List of storage target space allocations.
      items:
        $ref: '#/components/schemas/StorageTargetSpaceAllocation'
      type: array
      x-ms-identifiers:
        - name
    StorageTargetSpaceAllocation:
      description: Storage Target space allocation properties.
      properties:
        name:
          description: Name of the storage target.
          $ref: '#/components/schemas/ResourceName'
        allocationPercentage:
          description: The percentage of cache space allocated for this storage target
          type: integer
          format: int32
          minimum: 1
          maximum: 100
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    AmlFilesystemIdentity:
      type: object
      description: Managed Identity properties.
      x-ms-mutability:
        - read
        - create
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID for the user-assigned identity of the resource.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID associated with the resource.
        type:
          type: string
          description: The type of identity used for the resource.
          enum:
            - UserAssigned
            - None
          x-ms-enum:
            name: AmlFilesystemIdentityType
            modelAsString: false
        userAssignedIdentities:
          description: A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.
          $ref: '#/components/schemas/UserAssignedIdentities'
    AmlFilesystem:
      description: 'An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md'
      x-ms-azure-resource: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        identity:
          $ref: '#/components/schemas/AmlFilesystemIdentity'
          description: The managed identity used by the AML file system, if configured.
        sku:
          description: SKU for the resource.
          $ref: '#/components/schemas/SkuName'
        zones:
          type: array
          items:
            type: string
          description: Availability zones for resources. This field should only contain a single element in the array.
          x-ms-mutability:
            - read
            - create
        properties:
          x-ms-client-flatten: true
          description: Properties of the AML file system.
          properties:
            storageCapacityTiB:
              description: The size of the AML file system, in TiB. This might be rounded up.
              x-ms-mutability:
                - read
                - create
              type: number
              format: float
            health:
              description: Health of the AML file system.
              readOnly: true
              $ref: '#/components/schemas/AmlFilesystemHealth'
            provisioningState:
              description: ARM provisioning state.
              enum:
                - Succeeded
                - Failed
                - Creating
                - Deleting
                - Updating
                - Canceled
              x-ms-enum:
                name: AmlFilesystemProvisioningStateType
                modelAsString: true
              type: string
              readOnly: true
            filesystemSubnet:
              description: Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
              x-ms-mutability:
                - read
                - create
              $ref: '#/components/schemas/URLString'
            clientInfo:
              $ref: '#/components/schemas/AmlFilesystemClientInfo'
              description: Client information for the AML file system.
            throughputProvisionedMBps:
              type: integer
              format: int32
              description: Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
              readOnly: true
            encryptionSettings:
              $ref: '#/components/schemas/AmlFilesystemEncryptionSettings'
              description: Specifies encryption settings of the AML file system.
            maintenanceWindow:
              description: Start time of a 30-minute weekly maintenance window.
              type: object
              properties:
                dayOfWeek:
                  type: string
                  enum:
                    - Monday
                    - Tuesday
                    - Wednesday
                    - Thursday
                    - Friday
                    - Saturday
                    - Sunday
                  x-ms-enum:
                    name: MaintenanceDayOfWeekType
                    modelAsString: false
                  description: Day of the week on which the maintenance window will occur.
                timeOfDayUTC:
                  type: string
                  pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
                  description: The time of day (in UTC) to start the maintenance window.
            hsm:
              type: object
              description: Hydration and archive settings and status
              properties:
                settings:
                  $ref: '#/components/schemas/AmlFilesystemHsmSettings'
                  description: Specifies HSM settings of the AML file system.
                archiveStatus:
                  type: array
                  readOnly: true
                  description: Archive status
                  items:
                    $ref: '#/components/schemas/AmlFilesystemArchive'
                  x-ms-identifiers:
                    - filesystemPath
            rootSquashSettings:
              $ref: '#/components/schemas/AmlFilesystemRootSquashSettings'
              description: Specifies root squash settings of the AML file system.
          type: object
          required:
            - filesystemSubnet
            - storageCapacityTiB
            - maintenanceWindow
      type: object
    AmlFilesystemUpdate:
      description: An AML file system update instance.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        properties:
          type: object
          x-ms-client-flatten: true
          description: Properties of the AML file system.
          properties:
            encryptionSettings:
              $ref: '#/components/schemas/AmlFilesystemEncryptionSettings'
              description: Specifies encryption settings of the AML file system.
            maintenanceWindow:
              description: Start time of a 30-minute weekly maintenance window.
              type: object
              properties:
                dayOfWeek:
                  type: string
                  enum:
                    - Monday
                    - Tuesday
                    - Wednesday
                    - Thursday
                    - Friday
                    - Saturday
                    - Sunday
                  x-ms-enum:
                    name: MaintenanceDayOfWeekType
                    modelAsString: false
                  description: Day of the week on which the maintenance window will occur.
                timeOfDayUTC:
                  type: string
                  pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
                  description: The time of day (in UTC) to start the maintenance window.
            rootSquashSettings:
              $ref: '#/components/schemas/AmlFilesystemRootSquashSettings'
              description: Specifies root squash settings of the AML file system.
      type: object
    AmlFilesystemName:
      readOnly: true
      description: Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
      type: string
      pattern: ^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$
      minLength: 2
      maxLength: 80
    AmlFilesystemsListResult:
      description: Result of the request to list AML file systems. It contains a list of AML file systems and a URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of AML file system list results, if there are any.
          type: string
        value:
          description: List of AML file systems.
          items:
            $ref: '#/components/schemas/AmlFilesystem'
          type: array
      type: object
    AmlFilesystemHealth:
      description: An indication of AML file system health. Gives more information about health than just that related to provisioning.
      readOnly: true
      properties:
        state:
          description: List of AML file system health states.
          enum:
            - Unavailable
            - Available
            - Degraded
            - Transitioning
            - Maintenance
          x-ms-enum:
            name: AmlFilesystemHealthStateType
            modelAsString: true
          type: string
        statusCode:
          description: Server-defined error code for the AML file system health
          type: string
        statusDescription:
          description: Describes the health state.
          type: string
      type: object
    AmlFilesystemEncryptionSettings:
      description: AML file system encryption settings.
      properties:
        keyEncryptionKey:
          $ref: '#/components/schemas/KeyVaultKeyReference'
          description: Specifies the location of the encryption key in Key Vault.
      type: object
    AmlFilesystemHsmSettings:
      description: AML file system HSM settings.
      x-ms-mutability:
        - read
        - create
      type: object
      properties:
        container:
          description: Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.
          $ref: '#/components/schemas/URLString'
        loggingContainer:
          description: Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.
          $ref: '#/components/schemas/URLString'
        importPrefix:
          description: Only blobs in the non-logging container that start with this path/prefix get imported into the cluster namespace. This is only used during initial creation of the AML file system. It automatically creates an import job resource that can be deleted.
          type: string
          default: /
        importPrefixesInitial:
          type: array
          description: Only blobs in the non-logging container that start with one of the paths/prefixes in this array get imported into the cluster namespace. This is only used during initial creation of the AML file system and has '/' as the default value. It automatically creates an import job resource that can be deleted.
          items:
            type: string
      required:
        - container
        - loggingContainer
    AmlFilesystemRootSquashSettings:
      description: AML file system squash settings.
      properties:
        mode:
          type: string
          description: 'Squash mode of the AML file system. ''All'': User and Group IDs on files will be squashed to the provided values for all users on non-trusted systems. ''RootOnly'': User and Group IDs on files will be squashed to provided values for solely the root user on non-trusted systems. ''None'': No squashing of User and Group IDs is performed for any users on any systems.'
          enum:
            - None
            - RootOnly
            - All
          x-ms-enum:
            name: AmlFilesystemSquashMode
            modelAsString: true
        noSquashNidLists:
          description: Semicolon separated NID IP Address list(s) to be added to the TrustedSystems.
          type: string
        squashUID:
          type: integer
          description: User ID to squash to.
          format: int64
        squashGID:
          type: integer
          description: Group ID to squash to.
          format: int64
        status:
          readOnly: true
          type: string
          description: AML file system squash status.
      type: object
    AmlFilesystemClientInfo:
      type: object
      description: AML file system client information
      readOnly: true
      properties:
        mgsAddress:
          description: The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
          readOnly: true
          type: string
        mountCommand:
          description: Recommended command to mount the AML file system
          readOnly: true
          type: string
        lustreVersion:
          type: string
          description: The version of Lustre running in the AML file system
          readOnly: true
        containerStorageInterface:
          $ref: '#/components/schemas/AmlFilesystemContainerStorageInterface'
          description: Container Storage Interface information for the AML file system.
    AmlFilesystemContainerStorageInterface:
      type: object
      description: AML file system container storage interface information
      readOnly: true
      properties:
        persistentVolumeClaim:
          description: Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
          readOnly: true
          type: string
        persistentVolume:
          description: Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML
          readOnly: true
          type: string
        storageClass:
          description: Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML
          readOnly: true
          type: string
    AmlFilesystemArchiveInfo:
      type: object
      description: Information required to execute the archive operation
      properties:
        filesystemPath:
          type: string
          description: Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data.
          default: /
    AmlFilesystemArchive:
      description: Information about the AML file system archive
      type: object
      readOnly: true
      properties:
        filesystemPath:
          readOnly: true
          type: string
          description: Lustre file system path to archive relative to the file system root.  Specify '/' to archive all modified data.
        status:
          description: The status of the archive
          type: object
          readOnly: true
          properties:
            state:
              readOnly: true
              description: The state of the archive operation
              type: string
              enum:
                - NotConfigured
                - Idle
                - InProgress
                - Canceled
                - Completed
                - Failed
                - Cancelling
                - FSScanInProgress
              x-ms-enum:
                name: ArchiveStatusType
                modelAsString: true
            lastCompletionTime:
              readOnly: true
              description: The time of the last completed archive operation
              type: string
              format: date-time
            lastStartedTime:
              readOnly: true
              description: The time the latest archive operation started
              type: string
              format: date-time
            percentComplete:
              readOnly: true
              description: The completion percentage of the archive operation
              type: integer
              format: int32
            errorCode:
              readOnly: true
              description: Server-defined error code for the archive operation
              type: string
            errorMessage:
              readOnly: true
              description: Server-defined error message for the archive operation
              type: string
    ImportJob:
      description: 'An import job instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md'
      x-ms-azure-resource: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          type: object
          description: Properties of the import job.
          properties:
            provisioningState:
              description: ARM provisioning state.
              enum:
                - Succeeded
                - Failed
                - Creating
                - Deleting
                - Updating
                - Canceled
              x-ms-enum:
                name: ImportJobProvisioningStateType
                modelAsString: true
              type: string
              readOnly: true
            importPrefixes:
              type: array
              description: An array of blob paths/prefixes that get imported into the cluster namespace. It has '/' as the default value.
              items:
                type: string
            conflictResolutionMode:
              description: How the import job will handle conflicts. For example, if the import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or was not previously imported. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/ for a thorough explanation of these resolution modes.
              type: string
              enum:
                - Fail
                - Skip
                - OverwriteIfDirty
                - OverwriteAlways
              default: Fail
              x-ms-enum:
                name: ConflictResolutionMode
                modelAsString: true
              x-ms-mutability:
                - read
                - create
            maximumErrors:
              description: Total non-conflict oriented errors the import job will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately and is the default.
              type: integer
              format: int32
              default: 0
              x-ms-mutability:
                - read
                - create
            status:
              x-ms-client-flatten: true
              description: The status of the import
              type: object
              readOnly: true
              properties:
                state:
                  readOnly: true
                  description: The state of the import job. InProgress indicates the import is still running. Canceled indicates it has been canceled by the user. Completed indicates import finished, successfully importing all discovered blobs into the Lustre namespace. CompletedPartial indicates the import finished but some blobs either were found to be conflicting and could not be imported or other errors were encountered. Failed means the import was unable to complete due to a fatal error.
                  type: string
                  enum:
                    - InProgress
                    - Cancelling
                    - Canceled
                    - Completed
                    - CompletedPartial
                    - Failed
                  x-ms-enum:
                    name: ImportStatusType
                    modelAsString: true
                statusMessage:
                  readOnly: true
                  description: The status message of the import job.
                  type: string
                totalBlobsWalked:
                  readOnly: true
                  description: The total blob objects walked.
                  type: integer
                  format: int64
                blobsWalkedPerSecond:
                  readOnly: true
                  description: A recent and frequently updated rate of blobs walked per second.
                  type: integer
                  format: int64
                totalBlobsImported:
                  readOnly: true
                  description: The total blobs that have been imported since import began.
                  type: integer
                  format: int64
                blobsImportedPerSecond:
                  readOnly: true
                  description: A recent and frequently updated rate of total files, directories, and symlinks imported per second.
                  type: integer
                  format: int64
                lastCompletionTime:
                  readOnly: true
                  description: The time of the last completed archive operation
                  type: string
                  format: date-time
                lastStartedTime:
                  readOnly: true
                  description: The time the latest archive operation started
                  type: string
                  format: date-time
                totalErrors:
                  readOnly: true
                  description: Number of errors in the import job.
                  type: integer
                  format: int32
                totalConflicts:
                  readOnly: true
                  description: Number of conflicts in the import job.
                  type: integer
                  format: int32
      type: object
    ImportJobUpdate:
      description: An import job update instance.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
    ImportJobsListResult:
      description: Result of the request to list import jobs. It contains a list of import jobs and a URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of import job list results, if there are any.
          type: string
        value:
          description: List of import jobs.
          items:
            $ref: '#/components/schemas/ImportJob'
          type: array
      type: object
    RequiredAmlFilesystemSubnetsSizeInfo:
      type: object
      description: Information required to get the number of available IP addresses a subnet should have that will be used in AML file system create
      properties:
        storageCapacityTiB:
          description: The size of the AML file system, in TiB.
          type: number
          format: float
        sku:
          description: SKU for the resource.
          $ref: '#/components/schemas/SkuName'
    RequiredAmlFilesystemSubnetsSize:
      type: object
      description: Information about the number of available IP addresses that are required for the AML file system.
      properties:
        filesystemSubnetSize:
          description: The number of available IP addresses that are required for the AML file system.
          type: integer
          format: int32
    AmlFilesystemSubnetInfo:
      type: object
      description: Information required to validate the subnet that will be used in AML file system create
      properties:
        filesystemSubnet:
          description: Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
          $ref: '#/components/schemas/URLString'
        storageCapacityTiB:
          description: The size of the AML file system, in TiB.
          type: number
          format: float
        sku:
          description: SKU for the resource.
          $ref: '#/components/schemas/SkuName'
        location:
          description: Region that the AML file system will be created in.
          type: string
          x-ms-mutability:
            - create
            - read
    AmlFilesystemCheckSubnetError:
      type: object
      description: The error details provided when the checkAmlFSSubnets call fails.
      readOnly: true
      properties:
        filesystemSubnet:
          type: object
          description: The error details for the AML file system's subnet.
          properties:
            status:
              type: string
              enum:
                - Ok
                - Invalid
              x-ms-enum:
                name: FilesystemSubnetStatusType
                modelAsString: true
              description: The status of the AML file system subnet check.
            message:
              type: string
              description: The details of the AML file system subnet check.
    UserAssignedIdentities:
      description: A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.
      additionalProperties:
        type: object
        x-ms-client-name: userAssignedIdentitiesValue
        properties:
          principalId:
            readOnly: true
            type: string
            description: The principal ID of the user-assigned identity.
          clientId:
            readOnly: true
            type: string
            description: The client ID of the user-assigned identity.
      properties: {}
      type: object
    SkuName:
      x-ms-mutability:
        - read
        - create
      description: SKU for the resource.
      properties:
        name:
          description: SKU name for this resource.
          type: string
      type: object
  x-stackQL-resources:
    operations:
      id: azure.storage_cache.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StorageCache~1operations~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    skus:
      id: azure.storage_cache.skus
      name: skus
      title: skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageCache~1skus~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list'
        insert: []
        update: []
        delete: []
    usage_models:
      id: azure.storage_cache.usage_models
      name: usage_models
      title: usage_models
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageCache~1usageModels~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usage_models/methods/list'
        insert: []
        update: []
        delete: []
    asc_operations:
      id: azure.storage_cache.asc_operations
      name: asc_operations
      title: asc_operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageCache~1locations~1{location}~1ascOperations~1{operationId}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/asc_operations/methods/get'
        insert: []
        update: []
        delete: []
    asc_usages:
      id: azure.storage_cache.asc_usages
      name: asc_usages
      title: asc_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageCache~1locations~1{location}~1usages~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/asc_usages/methods/list'
        insert: []
        update: []
        delete: []
    caches:
      id: azure.storage_cache.caches
      name: caches
      title: caches
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageCache~1caches~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        debug_info:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1debugInfo~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        flush:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1flush~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1start~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1stop~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_priming_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1startPrimingJob~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_priming_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1stopPrimingJob~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause_priming_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1pausePrimingJob~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume_priming_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1resumePrimingJob~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade_firmware:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1upgrade~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        space_allocation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1spaceAllocation~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/caches/methods/get'
          - $ref: '#/components/x-stackQL-resources/caches/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/caches/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/caches/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/caches/methods/delete'
    storage_targets:
      id: azure.storage_cache.storage_targets
      name: storage_targets
      title: storage_targets
      methods:
        dns_refresh:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1dnsRefresh~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_cache:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore_defaults:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1restoreDefaults~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_targets/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_targets/methods/list_by_cache'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_targets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_targets/methods/delete'
    storage_target:
      id: azure.storage_cache.storage_target
      name: storage_target
      title: storage_target
      methods:
        flush:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1flush~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        suspend:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1suspend~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1resume~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        invalidate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1caches~1{cacheName}~1storageTargets~1{storageTargetName}~1invalidate~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    aml_filesystems:
      id: azure.storage_cache.aml_filesystems
      name: aml_filesystems
      title: aml_filesystems
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageCache~1amlFilesystems~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        archive:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1archive~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_archive:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1cancelArchive~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        aml_filesystems:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageCache~1getRequiredAmlFSSubnetsSize~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/aml_filesystems/methods/get'
          - $ref: '#/components/x-stackQL-resources/aml_filesystems/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/aml_filesystems/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/aml_filesystems/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/aml_filesystems/methods/delete'
    import_jobs:
      id: azure.storage_cache.import_jobs
      name: import_jobs
      title: import_jobs
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1importJobs~1{importJobName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1importJobs~1{importJobName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1importJobs~1{importJobName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1importJobs~1{importJobName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_aml_filesystem:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageCache~1amlFilesystems~1{amlFilesystemName}~1importJobs~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/list_by_aml_filesystem'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/delete'
paths:
  /providers/Microsoft.StorageCache/operations/?api-version=2024-03-01:
    get:
      parameters: []
      responses:
        '200':
          description: The list of available Resource Provider operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - Operations
      description: Lists all of the available Resource Provider operations.
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/skus/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list of SKU descriptors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - SKUs
      description: Get the list of StorageCache.Cache SKUs available to this subscription.
      operationId: Skus_List
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/usageModels/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list of UsageModel descriptors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageModelsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - UsageModels
      description: Get the list of cache usage models available to this subscription.
      operationId: UsageModels_List
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/locations/{location}/ascOperations/{operationId}/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: The asynchronous operation was returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AscOperation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - AscOperations
      description: Gets the status of an asynchronous operation for the Azure HPC Cache
      operationId: AscOperations_Get
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/locations/{location}/usages/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The name of the region to query for usage information.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The usage information was returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUsagesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - AscUsages
      description: Gets the quantity used and quota limit for resources
      operationId: AscUsages_List
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/caches/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list of cache objects. Note that entity references might replace complete cache objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - Caches
      description: Returns all caches the user has access to under a subscription.
      operationId: Caches_List
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list of cache objects. Note that entity references might replace complete cache objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - Caches
      description: Returns all caches the user has access to under a resource group.
      operationId: Caches_ListByResourceGroup
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/?api-version=2024-03-01:
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Cache deleted.
        '202':
          description: Started the cache's transition to Deleted state. Poll the cache to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Cache deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      tags:
        - Caches
      description: Schedules a cache for deletion.
      operationId: Caches_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns the cache object corresponding to cache name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - Caches
      description: Returns a cache.
      operationId: Caches_Get
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      requestBody:
        description: Object containing the user-selectable properties of the new cache. If read-only properties are included, they must match the existing values of those properties.
        required: true
        x-ms-requestBody-name: cache
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cache'
      responses:
        '200':
          description: Cache created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
        '201':
          description: Cache creation or update has been initiated. Poll the cache's provisioningState property to monitor creation/update progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
        '202':
          description: Cache creation or update has been initiated. Poll the cache's provisioningState property to monitor creation/update progress.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      tags:
        - Caches
      description: Create or update a cache.
      operationId: Caches_CreateOrUpdate
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      requestBody:
        description: Object containing the user-selectable properties of the cache. If read-only properties are included, they must match the existing values of those properties.
        x-ms-requestBody-name: cache
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cache'
      responses:
        '200':
          description: Updated the cache.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
        '202':
          description: Cache update has been initiated.  Poll the cache's provisioningState property to monitor update progress.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Update a cache instance.
      operationId: Caches_Update
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/dnsRefresh/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      responses:
        '200':
          description: Cache has refreshed the storage target's DNS information.
        '202':
          description: Cache has started refreshing storage target DNS information.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - StorageTargets
      description: Tells a storage target to refresh its DNS information.
      operationId: StorageTargets_DnsRefresh
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/debugInfo/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '200':
          description: Cache has started generating debug info.
        '202':
          description: Cache has started generating debug info.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Cache has started generating debug info.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Tells a cache to write generate debug info for support to process.
      operationId: Caches_DebugInfo
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/flush/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '200':
          description: All cached data has been flushed to the Storage Target(s).
        '202':
          description: Cache has started flushing to its Storage Target(s). Poll the cache's state field to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Cache flush already in progress or has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Tells a cache to write all dirty data to the Storage Target(s). During the flush, clients will see errors returned until the flush is complete.
      operationId: Caches_Flush
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/start/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '200':
          description: Cache is Active.
        '202':
          description: Cache has started the transition to Active. Poll the cache's state field to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Restarted VMs associated with the cache.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Tells a Stopped state cache to transition to Active state.
      operationId: Caches_Start
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/stop/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '200':
          description: Cache is stopped.
        '202':
          description: Cache has started the transition to Stopped. Poll the cache's state field to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Stopped VMs associated with the cache.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Tells an Active cache to transition to Stopped state.
      operationId: Caches_Stop
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '200':
          description: Returns the list of Storage Targets defined by cache name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTargetsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - StorageTargets
      description: Returns a list of Storage Targets for the specified cache.
      operationId: StorageTargets_ListByCache
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/?api-version=2024-03-01:
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
        - name: force
          in: query
          description: Boolean value requesting the force delete operation for a storage target. Force delete discards unwritten-data in the cache instead of flushing it to back-end storage.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Storage Target deleted.
        '202':
          description: Started the Storage Target's deletion. Poll the cache's Storage Targets to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Storage Target deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      tags:
        - StorageTargets
      description: Removes a Storage Target from a cache. This operation is allowed at any time, but if the cache is down or unhealthy, the actual removal of the Storage Target may be delayed until the cache is healthy again. Note that if the cache has data to flush to the Storage Target, the data will be flushed before the Storage Target will be deleted.
      operationId: StorageTargets_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      responses:
        '200':
          description: Returns the Storage Target object corresponding to storageTargetName.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTarget'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - StorageTargets
      description: Returns a Storage Target from a cache.
      operationId: StorageTargets_Get
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      requestBody:
        description: Object containing the definition of a Storage Target.
        required: true
        x-ms-requestBody-name: storagetarget
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTarget'
      responses:
        '200':
          description: Storage Target has been created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTarget'
        '201':
          description: Storage Target creation or update has been initiated. Poll the Storage Target's provisioningState property to monitor creation/update progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTarget'
        '202':
          description: Storage Target creation or update has been initiated. Poll the Storage Target's provisioningState property to monitor creation/update progress.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      tags:
        - StorageTargets
      description: Create or update a Storage Target. This operation is allowed at any time, but if the cache is down or unhealthy, the actual creation/modification of the Storage Target may be delayed until the cache is healthy again.
      operationId: StorageTargets_CreateOrUpdate
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/flush/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      responses:
        '200':
          description: All data has been flushed to the storage target.
        '202':
          description: Cache has started flushing to the storage target. Poll the storage target's state field to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Flush already in progress or has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - StorageTargets
      description: Tells the cache to write all dirty data to the Storage Target's backend storage. Client requests to this storage target's namespace will return errors until the flush operation completes.
      operationId: StorageTarget_Flush
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/suspend/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      responses:
        '200':
          description: Client access to the storage target has been suspended.
        '202':
          description: Storage target suspend has started. Poll the storage target's state field to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: The storage target is already suspended or suspend is in progress.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - StorageTargets
      description: Suspends client access to a storage target.
      operationId: StorageTarget_Suspend
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/resume/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      responses:
        '200':
          description: Client access to the storage target has been resumed.
        '202':
          description: Storage target resume has started. Poll the storage target's state field to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: The storage target has already resumed or resume is in progress.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - StorageTargets
      description: Resumes client access to a previously suspended storage target.
      operationId: StorageTarget_Resume
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/invalidate/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      responses:
        '200':
          description: All cached data for the storage target was invalidated
        '202':
          description: Storage target invalidation has started. Poll the storage target's state field to monitor progress.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: The storage target already has been invalidated, or invalidate is in progress.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - StorageTargets
      description: Invalidate all cached data for a storage target. Cached files are discarded and fetched from the back end on the next request.
      operationId: StorageTarget_Invalidate
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/startPrimingJob/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      requestBody:
        description: Object containing the definition of a priming job.
        x-ms-requestBody-name: primingjob
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimingJob'
      responses:
        '202':
          description: The priming job is being created and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Create a priming job. This operation is only allowed when the cache is healthy.
      operationId: Caches_StartPrimingJob
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/stopPrimingJob/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Object containing the priming job ID.
        x-ms-requestBody-name: primingJobId
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimingJobIdParameter'
      responses:
        '202':
          description: Started priming job deletion.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: The priming job is being deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Schedule a priming job for deletion.
      operationId: Caches_StopPrimingJob
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/pausePrimingJob/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Object containing the priming job ID.
        x-ms-requestBody-name: primingJobId
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimingJobIdParameter'
      responses:
        '202':
          description: Priming job is being paused.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: The priming job is paused.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Schedule a priming job to be paused.
      operationId: Caches_PausePrimingJob
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/resumePrimingJob/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Object containing the priming job ID.
        x-ms-requestBody-name: primingJobId
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimingJobIdParameter'
      responses:
        '202':
          description: Priming job is being resumed.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: The priming job is running.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Resumes a paused priming job.
      operationId: Caches_ResumePrimingJob
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/upgrade/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '201':
          description: Cache firmware is up to date.
        '202':
          description: Cache has started the upgrade. Poll the cache's state field to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Cache firmware is up to date.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Upgrade a cache's firmware if a new version is available. Otherwise, this operation has no effect.
      operationId: Caches_UpgradeFirmware
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/spaceAllocation/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      requestBody:
        description: List containing storage target cache space percentage allocations.
        x-ms-requestBody-name: spaceAllocation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpaceAllocationParameter'
      responses:
        '202':
          description: Error response describing why the operation failed.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - Caches
      description: Update cache space allocation.
      operationId: Caches_SpaceAllocation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/restoreDefaults/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/StorageTargetParameter'
      responses:
        '200':
          description: Cache has restored the storage target's settings to their default values.
        '202':
          description: Cache has started restoring the storage target's settings to their default values.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      tags:
        - StorageTargets
      description: Tells a storage target to restore its settings to their default values.
      operationId: StorageTargets_RestoreDefaults
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/amlFilesystems/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list of AML file systems. Note that entity references might replace complete file system objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlFilesystemsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - amlFilesystems
      description: Returns all AML file systems the user has access to under a subscription.
      operationId: amlFilesystems_List
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list of AmlFilesystem objects. Note that entity references might replace complete AmlFilesystem objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlFilesystemsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - amlFilesystems
      description: Returns all AML file systems the user has access to under a resource group.
      operationId: amlFilesystems_ListByResourceGroup
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/?api-version=2024-03-01:
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: AML file system deleted.
        '202':
          description: Started the AML file system's transition to Deleted state. Poll the AML file system to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: AML file system deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      tags:
        - amlFilesystems
      description: Schedules an AML file system for deletion.
      operationId: amlFilesystems_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns the AML file system object corresponding to amlFilesystemName.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlFilesystem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - amlFilesystems
      description: Returns an AML file system.
      operationId: amlFilesystems_Get
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
      requestBody:
        description: Object containing the user-selectable properties of the AML file system. If read-only properties are included, they must match the existing values of those properties.
        required: true
        x-ms-requestBody-name: amlFilesystem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmlFilesystem'
      responses:
        '200':
          description: The AML file system has been created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlFilesystem'
        '201':
          description: AML file system creation has been initiated. Poll the AML file system's provisioningState property to monitor creation progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlFilesystem'
          headers:
            azure-async-operation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - amlFilesystems
      description: Create or update an AML file system.
      operationId: amlFilesystems_CreateOrUpdate
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
      requestBody:
        description: Object containing the user-selectable properties of the AML file system. If read-only properties are included, they must match the existing values of those properties.
        required: true
        x-ms-requestBody-name: amlFilesystem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmlFilesystemUpdate'
      responses:
        '200':
          description: Updated the AML file system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlFilesystem'
        '202':
          description: AML file system update has been initiated. Poll the AML file system's provisioningState property to monitor update progress.
          headers:
            Location:
              schema:
                type: string
              description: URI to poll for the operation status
            azure-async-operation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - amlFilesystems
      description: Update an AML file system instance.
      operationId: amlFilesystems_Update
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/archive/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
      requestBody:
        description: Information about the archive operation
        x-ms-requestBody-name: archiveInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmlFilesystemArchiveInfo'
      responses:
        '200':
          description: AML file system has started the archive operation. Poll the AML file system's hsm.archiveStatus field to monitor the progress.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - amlFilesystems
      description: Archive data from the AML file system.
      operationId: amlFilesystems_Archive
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/cancelArchive/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
      responses:
        '200':
          description: AML file system has started the cancellation of the archive operation. Poll the AML file system's hsm.archiveStatus field to monitor the progress.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - amlFilesystems
      description: Cancel archiving data from the AML file system.
      operationId: amlFilesystems_CancelArchive
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/importJobs/{importJobName}/?api-version=2024-03-01:
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ImportJobNameParameter'
      responses:
        '202':
          description: Started the import job's transition to Deleted state. Poll the import job to monitor.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: Import job deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      tags:
        - importJobs
      description: Schedules an import job for deletion.
      operationId: importJobs_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ImportJobNameParameter'
      responses:
        '200':
          description: Returns the import job object corresponding to amlFilesystemName.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - importJobs
      description: Returns an import job.
      operationId: importJobs_Get
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
        - $ref: '#/components/parameters/ImportJobNameParameter'
      requestBody:
        description: Object containing the user-selectable properties of the import job. If read-only properties are included, they must match the existing values of those properties.
        required: true
        x-ms-requestBody-name: importJob
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      responses:
        '200':
          description: The import job has been created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
        '201':
          description: Import job creation has been initiated. Poll the import job's provisioningState property to monitor creation progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
          headers:
            azure-async-operation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - importJobs
      description: Create or update an import job. Import jobs are automatically deleted 72 hours after completion.
      operationId: importJobs_CreateOrUpdate
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
        - $ref: '#/components/parameters/ImportJobNameParameter'
      requestBody:
        description: Object containing the user-selectable properties of the import job. If read-only properties are included, they must match the existing values of those properties.
        required: true
        x-ms-requestBody-name: importJob
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJobUpdate'
      responses:
        '200':
          description: Updated the import job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
        '202':
          description: Import job update has been initiated. Poll the import job's provisioningState property to monitor update progress.
          headers:
            Location:
              schema:
                type: string
              description: URI to poll for the operation status
            azure-async-operation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      tags:
        - importJobs
      description: Update an import job instance.
      operationId: importJobs_Update
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/importJobs/?api-version=2024-03-01:
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AmlFilesystemNameParameter'
      responses:
        '200':
          description: A list of import jobs. Note that entity references might replace complete AmlFilesystem objects, as described in http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJobsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - importJobs
      description: Returns all import jobs the user has access to under an AML File System.
      operationId: importJobs_ListByAmlFilesystem
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/checkAmlFSSubnets/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Information about the subnets to validate.
        x-ms-requestBody-name: amlFilesystemSubnetInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmlFilesystemSubnetInfo'
      responses:
        '200':
          description: The subnets provided meet the requirements for AML file system create.
        '400':
          description: The subnets provided do not meet the requirements for AML file system create.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlFilesystemCheckSubnetError'
          x-ms-error-response: true
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - amlFilesystems
      description: Check that subnets will be valid for AML file system create calls.
      operationId: checkAmlFSSubnets
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/getRequiredAmlFSSubnetsSize/?api-version=2024-03-01:
    post:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Information to determine the number of available IPs a subnet will need to host the AML file system.
        x-ms-requestBody-name: requiredAMLFilesystemSubnetsSizeInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredAmlFilesystemSubnetsSizeInfo'
      responses:
        '200':
          description: The number of available IP addresses a subnet will need for an AML file system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredAmlFilesystemSubnetsSize'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      tags:
        - amlFilesystems
      description: Get the number of available IP addresses needed for the AML file system information provided.
      operationId: getRequiredAmlFSSubnetsSize
