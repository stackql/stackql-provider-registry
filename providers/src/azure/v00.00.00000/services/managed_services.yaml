openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Managed Services (Azure Delegated Resource Management)
  description: Azure Managed Services enables you to delegate resources for access through an Azure Active Directory tenant.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ScopeParameter:
      name: scope
      in: path
      description: The scope of the resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    MarketplaceIdentifier:
      name: marketplaceIdentifier
      in: path
      description: 'The Azure Marketplace identifier. Expected formats: {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName} or {publisher}.{product[-preview]} or {publisher}).'
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    RegistrationAssignmentIdParameter:
      name: registrationAssignmentId
      in: path
      description: The GUID of the registration assignment.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    registrationDefinitionIdParameter:
      name: registrationDefinitionId
      in: path
      description: The GUID of the registration definition.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ExpandRegistrationDefinition:
      name: $expandRegistrationDefinition
      in: query
      description: The flag indicating whether to return the registration definition details along with the registration assignment details.
      x-ms-parameter-location: method
      schema:
        type: boolean
    Filter:
      name: $filter
      in: query
      description: The filter query parameter to filter managed services resources by.
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    RegistrationDefinition:
      x-ms-azure-resource: true
      description: The registration definition.
      properties:
        properties:
          description: The properties of a registration definition.
          $ref: '#/components/schemas/RegistrationDefinitionProperties'
        plan:
          description: The details for the Managed Services offerâ€™s plan in Azure Marketplace.
          $ref: '#/components/schemas/Plan'
        id:
          readOnly: true
          type: string
          description: The fully qualified path of the registration definition.
        type:
          readOnly: true
          type: string
          description: The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).
        name:
          readOnly: true
          type: string
          description: The name of the registration definition.
        systemData:
          readOnly: true
          description: The metadata for the registration assignment resource.
          $ref: '#/components/schemas/systemData'
      type: object
    RegistrationDefinitionProperties:
      properties:
        description:
          type: string
          description: The description of the registration definition.
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/Authorization'
          description: The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
        eligibleAuthorizations:
          type: array
          items:
            $ref: '#/components/schemas/EligibleAuthorization'
          description: The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
        registrationDefinitionName:
          type: string
          description: The name of the registration definition.
        managedByTenantId:
          type: string
          description: The identifier of the managedBy tenant.
        provisioningState:
          type: string
          readOnly: true
          description: The current provisioning state of the registration definition.
          enum:
            - NotSpecified
            - Accepted
            - Running
            - Ready
            - Creating
            - Created
            - Deleting
            - Deleted
            - Canceled
            - Failed
            - Succeeded
            - Updating
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        manageeTenantId:
          readOnly: true
          type: string
          description: The identifier of the managed tenant.
        manageeTenantName:
          readOnly: true
          type: string
          description: The name of the managed tenant.
        managedByTenantName:
          readOnly: true
          type: string
          description: The name of the managedBy tenant.
      required:
        - managedByTenantId
        - authorizations
      type: object
      description: The properties of a registration definition.
    RegistrationDefinitionList:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RegistrationDefinition'
          description: The list of registration definitions.
        nextLink:
          description: The link to the next page of registration definitions.
          type: string
          readOnly: true
      description: The list of registration definitions.
      type: object
    RegistrationAssignment:
      x-ms-azure-resource: true
      description: The registration assignment.
      properties:
        properties:
          description: The properties of a registration assignment.
          $ref: '#/components/schemas/RegistrationAssignmentProperties'
        id:
          readOnly: true
          type: string
          description: The fully qualified path of the registration assignment.
        type:
          readOnly: true
          type: string
          description: The type of the Azure resource (Microsoft.ManagedServices/registrationAssignments).
        name:
          readOnly: true
          type: string
          description: The name of the registration assignment.
        systemData:
          readOnly: true
          description: The metadata for the registration assignment resource.
          $ref: '#/components/schemas/systemData'
      type: object
    RegistrationAssignmentProperties:
      properties:
        registrationDefinitionId:
          type: string
          description: The fully qualified path of the registration definition.
        provisioningState:
          readOnly: true
          type: string
          description: The current provisioning state of the registration assignment.
          enum:
            - NotSpecified
            - Accepted
            - Running
            - Ready
            - Creating
            - Created
            - Deleting
            - Deleted
            - Canceled
            - Failed
            - Succeeded
            - Updating
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        registrationDefinition:
          readOnly: true
          properties:
            properties:
              properties:
                description:
                  type: string
                  description: The description of the registration definition.
                authorizations:
                  type: array
                  items:
                    $ref: '#/components/schemas/Authorization'
                  description: The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
                eligibleAuthorizations:
                  type: array
                  items:
                    $ref: '#/components/schemas/EligibleAuthorization'
                  description: The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
                registrationDefinitionName:
                  type: string
                  description: The name of the registration definition.
                provisioningState:
                  type: string
                  description: The current provisioning state of the registration definition.
                  enum:
                    - NotSpecified
                    - Accepted
                    - Running
                    - Ready
                    - Creating
                    - Created
                    - Deleting
                    - Deleted
                    - Canceled
                    - Failed
                    - Succeeded
                    - Updating
                  x-ms-enum:
                    name: ProvisioningState
                    modelAsString: true
                manageeTenantId:
                  type: string
                  description: The identifier of the managed tenant.
                manageeTenantName:
                  type: string
                  description: The name of the managed tenant.
                managedByTenantId:
                  type: string
                  description: The identifier of the managedBy tenant.
                managedByTenantName:
                  type: string
                  description: The name of the managedBy tenant.
              description: The properties of the registration definition associated with the registration assignment.
            plan:
              description: The details for the Managed Services offerâ€™s plan in Azure Marketplace.
              $ref: '#/components/schemas/Plan'
            id:
              readOnly: true
              type: string
              description: The fully qualified path of the registration definition.
            type:
              readOnly: true
              type: string
              description: The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).
            name:
              readOnly: true
              type: string
              description: The name of the registration definition.
            systemData:
              readOnly: true
              description: The metadata for the registration definition resource.
              $ref: '#/components/schemas/systemData'
          type: object
          description: The registration definition associated with the registration assignment.
      required:
        - registrationDefinitionId
      type: object
      description: The properties of the registration assignment.
    RegistrationAssignmentList:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RegistrationAssignment'
          description: The list of registration assignments.
        nextLink:
          description: The link to the next page of registration assignments.
          type: string
          readOnly: true
      description: The list of registration assignments.
      type: object
    MarketplaceRegistrationDefinition:
      x-ms-azure-resource: true
      properties:
        properties:
          description: The properties of the marketplace registration definition.
          $ref: '#/components/schemas/MarketplaceRegistrationDefinitionProperties'
        plan:
          description: The details for the Managed Services offerâ€™s plan in Azure Marketplace.
          $ref: '#/components/schemas/Plan'
        id:
          readOnly: true
          type: string
          description: The fully qualified path of the marketplace registration definition.
        type:
          readOnly: true
          type: string
          description: The type of the Azure resource (Microsoft.ManagedServices/marketplaceRegistrationDefinitions).
        name:
          readOnly: true
          type: string
          description: The name of the marketplace registration definition.
      type: object
    MarketplaceRegistrationDefinitionProperties:
      properties:
        managedByTenantId:
          type: string
          description: The identifier of the managedBy tenant.
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/Authorization'
          description: The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
        eligibleAuthorizations:
          type: array
          items:
            $ref: '#/components/schemas/EligibleAuthorization'
          description: The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
        offerDisplayName:
          type: string
          description: The marketplace offer display name.
        publisherDisplayName:
          type: string
          description: The marketplace publisher display name.
        planDisplayName:
          type: string
          description: The marketplace plan display name.
      required:
        - managedByTenantId
        - authorizations
      type: object
      description: The properties of the marketplace registration definition.
    MarketplaceRegistrationDefinitionList:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MarketplaceRegistrationDefinition'
          description: The list of marketplace registration definitions.
        nextLink:
          description: The link to the next page of marketplace registration definitions.
          type: string
          readOnly: true
      description: The list of marketplace registration definitions.
      type: object
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationList:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: The list of Microsoft.ManagedServices operations.
      type: object
      description: The list of the operations.
    Authorization:
      properties:
        principalId:
          type: string
          description: The identifier of the Azure Active Directory principal.
        principalIdDisplayName:
          type: string
          description: The display name of the Azure Active Directory principal.
        roleDefinitionId:
          type: string
          description: The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
        delegatedRoleDefinitionIds:
          type: array
          description: The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
          items:
            format: uuid
            type: string
      required:
        - principalId
        - roleDefinitionId
      type: object
      description: The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
    EligibleAuthorization:
      properties:
        principalId:
          type: string
          description: The identifier of the Azure Active Directory principal.
        principalIdDisplayName:
          type: string
          description: The display name of the Azure Active Directory principal.
        roleDefinitionId:
          type: string
          description: The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
        justInTimeAccessPolicy:
          description: The just-in-time access policy setting.
          $ref: '#/components/schemas/JustInTimeAccessPolicy'
      required:
        - principalId
        - roleDefinitionId
      type: object
      description: The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.
    EligibleApprover:
      properties:
        principalId:
          type: string
          description: The identifier of the Azure Active Directory principal.
        principalIdDisplayName:
          type: string
          description: The display name of the Azure Active Directory principal.
      required:
        - principalId
      type: object
      description: Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.
    JustInTimeAccessPolicy:
      properties:
        multiFactorAuthProvider:
          type: string
          description: The multi-factor authorization provider to be used for just-in-time access requests.
          enum:
            - Azure
            - None
          x-ms-enum:
            name: MultiFactorAuthProvider
            modelAsString: true
          default: None
        maximumActivationDuration:
          type: string
          format: duration
          description: The maximum access duration in ISO 8601 format for just-in-time access requests.
          default: PT8H
        managedByTenantApprovers:
          type: array
          items:
            $ref: '#/components/schemas/EligibleApprover'
          description: The list of managedByTenant approvers for the eligible authorization.
      required:
        - multiFactorAuthProvider
      type: object
      description: Just-in-time access policy setting.
    ErrorDefinition:
      properties:
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message indicating why the operation failed.
        details:
          description: The internal error details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDefinition'
      required:
        - code
        - message
      type: object
      description: The error response indicating why the incoming request wasnâ€™t able to be processed
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    registration_definitions:
      id: azure.managed_services.registration_definitions
      name: registration_definitions
      title: registration_definitions
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationDefinitions~1{registrationDefinitionId}?api-version=2022-10-01/get'
            operationId: RegistrationDefinitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationDefinition
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationDefinitions~1{registrationDefinitionId}?api-version=2022-10-01/delete'
            operationId: RegistrationDefinitions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationDefinitions~1{registrationDefinitionId}?api-version=2022-10-01/put'
            operationId: RegistrationDefinitions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationDefinition
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationDefinitions?api-version=2022-10-01/get'
            operationId: RegistrationDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registration_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/registration_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/registration_definitions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/registration_definitions/methods/delete'
    registration_assignments:
      id: azure.managed_services.registration_assignments
      name: registration_assignments
      title: registration_assignments
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationAssignments~1{registrationAssignmentId}?api-version=2022-10-01/get'
            operationId: RegistrationAssignments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationAssignment
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationAssignments~1{registrationAssignmentId}?api-version=2022-10-01/delete'
            operationId: RegistrationAssignments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationAssignments~1{registrationAssignmentId}?api-version=2022-10-01/put'
            operationId: RegistrationAssignments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationAssignment
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1registrationAssignments?api-version=2022-10-01/get'
            operationId: RegistrationAssignments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationAssignmentList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registration_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/registration_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/registration_assignments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/registration_assignments/methods/delete'
    marketplace_registration_definitions:
      id: azure.managed_services.marketplace_registration_definitions
      name: marketplace_registration_definitions
      title: marketplace_registration_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1marketplaceRegistrationDefinitions?api-version=2022-10-01/get'
            operationId: MarketplaceRegistrationDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MarketplaceRegistrationDefinitionList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1marketplaceRegistrationDefinitions~1{marketplaceIdentifier}?api-version=2022-10-01/get'
            operationId: MarketplaceRegistrationDefinitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MarketplaceRegistrationDefinition
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_registration_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/marketplace_registration_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    marketplace_registration_definitions_without_scopes:
      id: azure.managed_services.marketplace_registration_definitions_without_scopes
      name: marketplace_registration_definitions_without_scopes
      title: marketplace_registration_definitions_without_scopes
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagedServices~1marketplaceRegistrationDefinitions?api-version=2022-10-01/get'
            operationId: MarketplaceRegistrationDefinitionsWithoutScope_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MarketplaceRegistrationDefinitionList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagedServices~1marketplaceRegistrationDefinitions~1{marketplaceIdentifier}?api-version=2022-10-01/get'
            operationId: MarketplaceRegistrationDefinitionsWithoutScope_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MarketplaceRegistrationDefinition
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_registration_definitions_without_scopes/methods/get'
          - $ref: '#/components/x-stackQL-resources/marketplace_registration_definitions_without_scopes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.managed_services.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagedServices~1operations?api-version=2022-10-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations_with_scopes:
      id: azure.managed_services.operations_with_scopes
      name: operations_with_scopes
      title: operations_with_scopes
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedServices~1operations?api-version=2022-10-01/get'
            operationId: OperationsWithScope_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_with_scopes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_registration_definitions:
      id: azure.managed_services.vw_registration_definitions
      name: vw_registration_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              plan as plan,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.authorizations') as "authorizations",
              JSON_EXTRACT(properties, '$.eligibleAuthorizations') as "eligible_authorizations",
              JSON_EXTRACT(properties, '$.registrationDefinitionName') as "registration_definition_name",
              JSON_EXTRACT(properties, '$.managedByTenantId') as "managed_by_tenant_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.manageeTenantId') as "managee_tenant_id",
              JSON_EXTRACT(properties, '$.manageeTenantName') as "managee_tenant_name",
              JSON_EXTRACT(properties, '$.managedByTenantName') as "managed_by_tenant_name",
              scope,
              registrationDefinitionId
              FROM azure.managed_services.registration_definitions
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                plan as plan,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.authorizations') as "authorizations",
                json_extract_path_text(properties, '$.eligibleAuthorizations') as "eligible_authorizations",
                json_extract_path_text(properties, '$.registrationDefinitionName') as "registration_definition_name",
                json_extract_path_text(properties, '$.managedByTenantId') as "managed_by_tenant_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.manageeTenantId') as "managee_tenant_id",
                json_extract_path_text(properties, '$.manageeTenantName') as "managee_tenant_name",
                json_extract_path_text(properties, '$.managedByTenantName') as "managed_by_tenant_name",
                scope,
                registrationDefinitionId
                FROM azure.managed_services.registration_definitions
                WHERE scope = 'replace-me';
    vw_registration_assignments:
      id: azure.managed_services.vw_registration_assignments
      name: vw_registration_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.registrationDefinitionId') as "registration_definition_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.registrationDefinition') as "registration_definition",
              scope,
              registrationAssignmentId
              FROM azure.managed_services.registration_assignments
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.registrationDefinitionId') as "registration_definition_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.registrationDefinition') as "registration_definition",
                scope,
                registrationAssignmentId
                FROM azure.managed_services.registration_assignments
                WHERE scope = 'replace-me';
    vw_marketplace_registration_definitions:
      id: azure.managed_services.vw_marketplace_registration_definitions
      name: vw_marketplace_registration_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              plan as plan,
              type as type,
              JSON_EXTRACT(properties, '$.managedByTenantId') as "managed_by_tenant_id",
              JSON_EXTRACT(properties, '$.authorizations') as "authorizations",
              JSON_EXTRACT(properties, '$.eligibleAuthorizations') as "eligible_authorizations",
              JSON_EXTRACT(properties, '$.offerDisplayName') as "offer_display_name",
              JSON_EXTRACT(properties, '$.publisherDisplayName') as "publisher_display_name",
              JSON_EXTRACT(properties, '$.planDisplayName') as "plan_display_name",
              scope,
              marketplaceIdentifier
              FROM azure.managed_services.marketplace_registration_definitions
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                plan as plan,
                type as type,
                json_extract_path_text(properties, '$.managedByTenantId') as "managed_by_tenant_id",
                json_extract_path_text(properties, '$.authorizations') as "authorizations",
                json_extract_path_text(properties, '$.eligibleAuthorizations') as "eligible_authorizations",
                json_extract_path_text(properties, '$.offerDisplayName') as "offer_display_name",
                json_extract_path_text(properties, '$.publisherDisplayName') as "publisher_display_name",
                json_extract_path_text(properties, '$.planDisplayName') as "plan_display_name",
                scope,
                marketplaceIdentifier
                FROM azure.managed_services.marketplace_registration_definitions
                WHERE scope = 'replace-me';
    vw_marketplace_registration_definitions_without_scopes:
      id: azure.managed_services.vw_marketplace_registration_definitions_without_scopes
      name: vw_marketplace_registration_definitions_without_scopes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              plan as plan,
              type as type,
              JSON_EXTRACT(properties, '$.managedByTenantId') as "managed_by_tenant_id",
              JSON_EXTRACT(properties, '$.authorizations') as "authorizations",
              JSON_EXTRACT(properties, '$.eligibleAuthorizations') as "eligible_authorizations",
              JSON_EXTRACT(properties, '$.offerDisplayName') as "offer_display_name",
              JSON_EXTRACT(properties, '$.publisherDisplayName') as "publisher_display_name",
              JSON_EXTRACT(properties, '$.planDisplayName') as "plan_display_name",
              marketplaceIdentifier
              FROM azure.managed_services.marketplace_registration_definitions_without_scopes
              WHERE marketplaceIdentifier = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                plan as plan,
                type as type,
                json_extract_path_text(properties, '$.managedByTenantId') as "managed_by_tenant_id",
                json_extract_path_text(properties, '$.authorizations') as "authorizations",
                json_extract_path_text(properties, '$.eligibleAuthorizations') as "eligible_authorizations",
                json_extract_path_text(properties, '$.offerDisplayName') as "offer_display_name",
                json_extract_path_text(properties, '$.publisherDisplayName') as "publisher_display_name",
                json_extract_path_text(properties, '$.planDisplayName') as "plan_display_name",
                marketplaceIdentifier
                FROM azure.managed_services.marketplace_registration_definitions_without_scopes
                WHERE marketplaceIdentifier = 'replace-me';
paths:
  /{scope}/providers/Microsoft.ManagedServices/registrationDefinitions/{registrationDefinitionId}?api-version=2022-10-01:
    get:
      tags:
        - RegistrationDefinitions
      operationId: RegistrationDefinitions_Get
      description: Gets the registration definition details.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/registrationDefinitionIdParameter'
      responses:
        '200':
          description: OK - Returns the complete registration definition with plan details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationDefinition'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - RegistrationDefinitions
      operationId: RegistrationDefinitions_Delete
      description: Deletes the registration definition.
      parameters:
        - $ref: '#/components/parameters/registrationDefinitionIdParameter'
        - $ref: '#/components/parameters/ScopeParameter'
      responses:
        '200':
          description: OK - The registration definition is deleted.
        '204':
          description: No Content - The registration definition does not exist.
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - RegistrationDefinitions
      operationId: RegistrationDefinitions_CreateOrUpdate
      x-ms-long-running-operation: true
      description: Creates or updates a registration definition.
      parameters:
        - $ref: '#/components/parameters/registrationDefinitionIdParameter'
        - $ref: '#/components/parameters/ScopeParameter'
      requestBody:
        description: The parameters required to create a new registration definition.
        required: true
        x-ms-requestBody-name: requestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationDefinition'
      responses:
        '200':
          description: Ok - Returns information about the updated registration definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationDefinition'
        '201':
          description: Created - Returns information about the created registration definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationDefinition'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.ManagedServices/registrationAssignments/{registrationAssignmentId}?api-version=2022-10-01:
    get:
      tags:
        - RegistrationAssignments
      operationId: RegistrationAssignments_Get
      description: Gets the details of the specified registration assignment.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/RegistrationAssignmentIdParameter'
        - $ref: '#/components/parameters/ExpandRegistrationDefinition'
      responses:
        '200':
          description: OK - Returns the registration assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationAssignment'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - RegistrationAssignments
      operationId: RegistrationAssignments_Delete
      x-ms-long-running-operation: true
      description: Deletes the specified registration assignment.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/RegistrationAssignmentIdParameter'
      responses:
        '200':
          description: OK - The registration assignment is deleted.
        '202':
          description: Accepted - The registration assignment deletion operation is accepted.
        '204':
          description: No Content - The registration assignment does not exist.
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - RegistrationAssignments
      operationId: RegistrationAssignments_CreateOrUpdate
      x-ms-long-running-operation: true
      description: Creates or updates a registration assignment.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/RegistrationAssignmentIdParameter'
      requestBody:
        description: The parameters required to create new registration assignment.
        required: true
        x-ms-requestBody-name: requestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationAssignment'
      responses:
        '200':
          description: Ok - Returns information about the updated registration assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationAssignment'
        '201':
          description: Created - Returns information about the created registration assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationAssignment'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.ManagedServices/registrationDefinitions?api-version=2022-10-01:
    get:
      tags:
        - RegistrationDefinitions
      operationId: RegistrationDefinitions_List
      description: Gets a list of the registration definitions.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK - Returns a list of the registration definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationDefinitionList'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.ManagedServices/registrationAssignments?api-version=2022-10-01:
    get:
      tags:
        - RegistrationAssignments
      operationId: RegistrationAssignments_List
      description: Gets a list of the registration assignments.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/ExpandRegistrationDefinition'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK - Returns a list of the registration assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationAssignmentList'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions?api-version=2022-10-01:
    get:
      tags:
        - MarketplaceRegistrationDefinitions
      operationId: MarketplaceRegistrationDefinitions_List
      description: Gets a list of the marketplace registration definitions for the marketplace identifier.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK - Returns a list of the marketplace registration definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceRegistrationDefinitionList'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions?api-version=2022-10-01:
    get:
      tags:
        - MarketplaceRegistrationDefinitions
      operationId: MarketplaceRegistrationDefinitionsWithoutScope_List
      description: Gets a list of the marketplace registration definitions for the marketplace identifier.
      parameters:
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK - Returns a list of the marketplace registration definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceRegistrationDefinitionList'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions/{marketplaceIdentifier}?api-version=2022-10-01:
    get:
      tags:
        - MarketplaceRegistrationDefinitions
      operationId: MarketplaceRegistrationDefinitions_Get
      description: Get the marketplace registration definition for the marketplace identifier.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/MarketplaceIdentifier'
      responses:
        '200':
          description: OK - Returns the details of the marketplace registration definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceRegistrationDefinition'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions/{marketplaceIdentifier}?api-version=2022-10-01:
    get:
      tags:
        - MarketplaceRegistrationDefinitions
      operationId: MarketplaceRegistrationDefinitionsWithoutScope_Get
      description: Get the marketplace registration definition for the marketplace identifier.
      parameters:
        - $ref: '#/components/parameters/MarketplaceIdentifier'
      responses:
        '200':
          description: OK - Returns the details of the marketplace registration definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceRegistrationDefinition'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.ManagedServices/operations?api-version=2022-10-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Gets a list of the operations.
      parameters: []
      responses:
        '200':
          description: OK - Returns a list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.ManagedServices/operations?api-version=2022-10-01:
    get:
      tags:
        - Operations
      operationId: OperationsWithScope_List
      description: Gets a list of the operations with the scope.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      responses:
        '200':
          description: OK - Returns a list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: The error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
