openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Storage Actions Management Client
  description: The Azure Storage Actions Management API.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    StorageTaskName:
      name: storageTaskName
      in: path
      description: The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9]{3,18}$
        maxLength: 18
        minLength: 3
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    StorageTask:
      required:
        - identity
        - properties
      description: Represents Storage Task.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identity of the resource.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageTaskProperties'
          description: Properties of the storage task.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StorageTaskUpdateParameters:
      description: Parameters of the storage task update request
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageTaskProperties'
          description: Properties of the storage task.
      type: object
    StorageTaskProperties:
      type: object
      properties:
        taskVersion:
          readOnly: true
          type: integer
          minimum: 1
          maximum: 1
          format: int64
          description: Storage task version.
        enabled:
          type: boolean
          description: Storage Task is enabled when set to true and disabled when set to false
        description:
          type: string
          description: Text that describes the purpose of the storage task
        action:
          $ref: '#/components/schemas/StorageTaskAction'
          description: The storage task action that is executed
        provisioningState:
          readOnly: true
          type: string
          description: Represents the provisioning state of the storage task.
          enum:
            - ValidateSubscriptionQuotaBegin
            - ValidateSubscriptionQuotaEnd
            - Creating
            - Succeeded
            - Deleting
            - Canceled
            - Failed
          x-ms-enum:
            name: ProvisioningState
            modelAsString: false
        creationTimeInUtc:
          readOnly: true
          type: string
          format: date-time
          description: The creation date and time of the storage task in UTC.
      required:
        - enabled
        - description
        - action
      description: Properties of the storage task.
    StorageTaskAction:
      type: object
      properties:
        if:
          $ref: '#/components/schemas/IfCondition'
          description: The if block of storage task operation
        else:
          $ref: '#/components/schemas/ElseCondition'
          description: The else block of storage task operation
      required:
        - if
      description: The storage task action represents conditional statements and operations to be performed on target objects.
    IfCondition:
      type: object
      properties:
        condition:
          type: string
          description: Condition predicate to evaluate each object. See https://aka.ms/storagetaskconditions for valid properties and operators.
        operations:
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskOperation'
          x-ms-identifiers: []
          description: List of operations to execute when the condition predicate satisfies.
      required:
        - condition
        - operations
      description: The if block of storage task operation
    ElseCondition:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskOperation'
          x-ms-identifiers: []
          description: List of operations to execute in the else block
      required:
        - operations
      description: The else block of storage task operation
    StorageTaskOperation:
      type: object
      properties:
        name:
          type: string
          description: The operation to be performed on the object.
          enum:
            - SetBlobTier
            - SetBlobTags
            - SetBlobImmutabilityPolicy
            - SetBlobLegalHold
            - SetBlobExpiry
            - DeleteBlob
            - UndeleteBlob
          x-ms-enum:
            name: StorageTaskOperationName
            modelAsString: true
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Key-value parameters for the operation.
        onSuccess:
          type: string
          description: Action to be taken when the operation is successful for a object.
          enum:
            - continue
          x-ms-enum:
            name: onSuccess
            modelAsString: false
        onFailure:
          type: string
          description: Action to be taken when the operation fails for a object.
          enum:
            - break
          x-ms-enum:
            name: onFailure
            modelAsString: false
      required:
        - name
      description: Represents an operation to be performed on the object
    StorageTasksListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageTask'
          x-ms-identifiers: []
          description: Gets the list of storage tasks and their properties.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of storage tasks. Returned when total number of requested storage tasks exceed maximum page size.
          readOnly: true
      description: The response from the List Storage Task operation.
    StorageTaskAssignmentsListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskAssignment'
          x-ms-identifiers: []
          description: List of Storage Task Assignment Resource IDs associated with this Storage Task.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of Resource IDs. Returned when total number of requested Resource IDs exceed maximum page size.
          readOnly: true
      description: The response from the List Storage Tasks operation.
    StorageTaskAssignment:
      type: object
      properties:
        id:
          type: string
          format: arm-id
          description: Resource ID of the Storage Task Assignment.
          readOnly: true
      description: Storage Task Assignment associated with this Storage Task.
    StorageTaskReportSummary:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskReportInstance'
          x-ms-identifiers: []
          description: Gets storage tasks run result summary.
        nextLink:
          type: string
          description: Request URL that can be used to query next page of storage task run results summary. Returned when the number of run instances and summary reports exceed maximum page size.
          readOnly: true
      description: Fetch Storage Tasks Run Summary.
    StorageTaskReportInstance:
      description: Storage Tasks run report instance
      properties:
        properties:
          $ref: '#/components/schemas/StorageTaskReportProperties'
      type: object
    StorageTaskReportProperties:
      type: object
      properties:
        taskAssignmentId:
          readOnly: true
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts/storageTaskAssignments
          description: Resource ID of the Storage Task Assignment associated with this reported run.
        storageAccountId:
          readOnly: true
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
          description: Resource ID of the Storage Account where this reported run executed.
        startTime:
          readOnly: true
          type: string
          description: Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        finishTime:
          readOnly: true
          type: string
          description: End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectsTargetedCount:
          readOnly: true
          type: string
          description: Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectsOperatedOnCount:
          readOnly: true
          type: string
          description: Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectFailedCount:
          readOnly: true
          type: string
          description: Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        objectsSucceededCount:
          readOnly: true
          type: string
          description: Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        runStatusError:
          readOnly: true
          type: string
          description: Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        runStatusEnum:
          readOnly: true
          type: string
          enum:
            - InProgress
            - Finished
          x-ms-enum:
            name: RunStatusEnum
            modelAsString: true
          description: Represents the status of the execution.
        summaryReportPath:
          readOnly: true
          type: string
          description: 'Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account. '
        taskId:
          readOnly: true
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.StorageActions/storageTasks
          description: Resource ID of the Storage Task applied during this run.
        taskVersion:
          readOnly: true
          type: string
          description: Storage Task Version
        runResult:
          readOnly: true
          type: string
          enum:
            - Succeeded
            - Failed
          x-ms-enum:
            name: RunResult
            modelAsString: true
          description: Represents the overall result of the execution for the run instance
      description: Storage task execution report for a run instance.
    StorageTaskPreviewAction:
      required:
        - properties
      description: Storage Task Preview Action.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageTaskPreviewActionProperties'
          description: Properties of the storage task preview.
      type: object
    StorageTaskPreviewActionProperties:
      type: object
      properties:
        container:
          type: object
          $ref: '#/components/schemas/StorageTaskPreviewContainerProperties'
          description: Properties of a sample container to test for a match with the preview action.
        blobs:
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskPreviewBlobProperties'
          x-ms-identifiers: []
          description: Properties of some sample blobs in the container to test for matches with the preview action.
        action:
          type: object
          $ref: '#/components/schemas/StorageTaskPreviewActionCondition'
          description: Preview action to test
      required:
        - container
        - blobs
        - action
      description: Storage task preview action properties.
    StorageTaskPreviewActionCondition:
      type: object
      properties:
        if:
          $ref: '#/components/schemas/StorageTaskPreviewActionIfCondition'
          description: The condition to be tested for a match with container and blob properties.
        elseBlockExists:
          type: boolean
          description: Specify whether the else block is present in the condition.
      required:
        - if
        - elseBlockExists
      description: Represents the storage task conditions to be tested for a match with container and blob properties.
    StorageTaskPreviewActionIfCondition:
      type: object
      properties:
        condition:
          type: string
          description: Storage task condition to bes tested for a match.
      description: Represents storage task preview action condition.
    StorageTaskPreviewContainerProperties:
      type: object
      properties:
        name:
          type: string
          description: Name of test container
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskPreviewKeyValueProperties'
          x-ms-identifiers: []
          description: metadata key value pairs to be tested for a match against the provided condition.
      description: Storage task preview container properties
    StorageTaskPreviewBlobProperties:
      description: Storage task preview container properties
      properties:
        name:
          type: string
          description: Name of test blob
        properties:
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskPreviewKeyValueProperties'
          x-ms-identifiers: []
          description: properties key value pairs to be tested for a match against the provided condition.
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskPreviewKeyValueProperties'
          x-ms-identifiers: []
          description: metadata key value pairs to be tested for a match against the provided condition.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/StorageTaskPreviewKeyValueProperties'
          x-ms-identifiers: []
          description: tags key value pairs to be tested for a match against the provided condition.
        matchedBlock:
          type: string
          readOnly: true
          enum:
            - If
            - Else
            - None
          x-ms-enum:
            name: matchedBlockName
            modelAsString: true
          description: Represents the condition block name that matched blob properties.
      type: object
    StorageTaskPreviewKeyValueProperties:
      type: object
      properties:
        key:
          type: string
          description: Represents the key property of the pair.
        value:
          type: string
          description: Represents the value property of the pair.
      description: Storage task preview object key value pair properties.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.storageactions.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StorageActions~1operations?api-version=2023-01-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    storage_tasks:
      id: azure.storageactions.storage_tasks
      name: storage_tasks
      title: storage_tasks
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageActions~1storageTasks~1{storageTaskName}?api-version=2023-01-01/put'
            operationId: StorageTasks_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTask
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageActions~1storageTasks~1{storageTaskName}?api-version=2023-01-01/delete'
            operationId: StorageTasks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageActions~1storageTasks~1{storageTaskName}?api-version=2023-01-01/get'
            operationId: StorageTasks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTask
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageActions~1storageTasks~1{storageTaskName}?api-version=2023-01-01/patch'
            operationId: StorageTasks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTask
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageActions~1storageTasks?api-version=2023-01-01/get'
            operationId: StorageTasks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTasksListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageActions~1storageTasks?api-version=2023-01-01/get'
            operationId: StorageTasks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTasksListResult
            objectKey: $.value
        preview_actions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageActions~1locations~1{location}~1previewActions?api-version=2023-01-01/post'
            operationId: StorageTasks_PreviewActions
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskPreviewAction
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_tasks/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_tasks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/storage_tasks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_tasks/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/storage_tasks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_tasks/methods/delete'
    storage_task_assignments:
      id: azure.storageactions.storage_task_assignments
      name: storage_task_assignments
      title: storage_task_assignments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageActions~1storageTasks~1{storageTaskName}~1storageTaskAssignments?api-version=2023-01-01/get'
            operationId: StorageTaskAssignment_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskAssignmentsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_task_assignments/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    storage_tasks_reports:
      id: azure.storageactions.storage_tasks_reports
      name: storage_tasks_reports
      title: storage_tasks_reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageActions~1storageTasks~1{storageTaskName}~1reports?api-version=2023-01-01/get'
            operationId: StorageTasksReport_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageTaskReportSummary
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_tasks_reports/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_storage_tasks:
      id: azure.storageactions.vw_storage_tasks
      name: vw_storage_tasks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.taskVersion') as "task_version",
              JSON_EXTRACT(properties, '$.enabled') as "enabled",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.action') as "action",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.creationTimeInUtc') as "creation_time_in_utc",
              subscriptionId,
              resourceGroupName,
              storageTaskName
              FROM azure.storageactions.storage_tasks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.taskVersion') as "task_version",
                json_extract_path_text(properties, '$.enabled') as "enabled",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.action') as "action",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.creationTimeInUtc') as "creation_time_in_utc",
                subscriptionId,
                resourceGroupName,
                storageTaskName
                FROM azure.storageactions.storage_tasks
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.StorageActions/operations?api-version=2023-01-01:
    get:
      tags:
        - Storage Actions Operations
      description: Lists all of the available Storage Actions Rest API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}?api-version=2023-01-01:
    put:
      tags:
        - StorageTasks
      description: Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already created and a subsequent create request is issued with different properties, the storage task properties will be updated. If a storage task is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
      operationId: StorageTasks_Create
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageTaskName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to create a Storage Task.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTask'
      responses:
        '200':
          description: OK -- Update storage task with the same properties specified in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTask'
        '201':
          description: OK -- Create storage task with the same properties specified in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTask'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - StorageTasks
      description: Delete the storage task resource.
      operationId: StorageTasks_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageTaskName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent -- specified storage task does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - StorageTasks
      description: Get the storage task properties
      operationId: StorageTasks_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageTaskName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- properties retrieved successfully for the storage task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTask'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - StorageTasks
      operationId: StorageTasks_Update
      description: Update storage task properties
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageTaskName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide to update the storage task resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTaskUpdateParameters'
      responses:
        '200':
          description: OK -- returned when the update request body had no changes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTask'
        '202':
          description: Accepted -- update request accepted; operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/storageTasks?api-version=2023-01-01:
    get:
      tags:
        - StorageTasks
      operationId: StorageTasks_ListBySubscription
      description: Lists all the storage tasks available under the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage tasks was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTasksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks?api-version=2023-01-01:
    get:
      tags:
        - StorageTasks
      operationId: StorageTasks_ListByResourceGroup
      description: Lists all the storage tasks available under the given resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage tasks in the given resource group retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTasksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}/storageTaskAssignments?api-version=2023-01-01:
    get:
      tags:
        - StorageTasks
      operationId: StorageTaskAssignment_List
      description: Lists Resource IDs of the Storage Task Assignments associated with this Storage Task.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageTaskName'
        - name: $maxpagesize
          in: query
          description: Optional, specifies the maximum number of Storage Task Assignment Resource IDs to be included in the list response.
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of Storage Task Assignment Resource IDs retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskAssignmentsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}/reports?api-version=2023-01-01:
    get:
      tags:
        - StorageTasks
      operationId: StorageTasksReport_List
      description: Fetch the storage tasks run report summary for each assignment.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageTaskName'
        - name: $maxpagesize
          in: query
          description: Optional, specifies the maximum number of Storage Task Assignment Resource IDs to be included in the list response.
          schema:
            format: int32
            type: integer
        - name: $filter
          in: query
          description: Optional. When specified, it can be used to query using reporting properties.
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Storage tasks run report summary retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskReportSummary'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/locations/{location}/previewActions?api-version=2023-01-01:
    post:
      tags:
        - StorageTasks
      operationId: StorageTasks_PreviewActions
      description: Runs the input conditions against input object metadata properties and designates matched objects in response.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The location to perform preview of the actions.
          required: true
          schema:
            type: string
      requestBody:
        description: The parameters to preview action condition.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTaskPreviewAction'
      responses:
        '200':
          description: OK -- Storage tasks preview action was performed and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTaskPreviewAction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
