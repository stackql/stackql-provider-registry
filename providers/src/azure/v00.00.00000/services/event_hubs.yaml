openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Event Hubs
  description: Azure Event Hubs is a highly scalable data ingress service that ingests millions of events per second so that you can process and analyze the massive amounts of data produced by your connected devices and applications. Once data is collected into an event hub, it can be transformed and stored using any real-time analytics provider or batching/storage adapters.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SchemaGroupNameParameter:
      name: schemaGroupName
      in: path
      description: 'The Schema Group name '
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        type: string
    ApplicationGroupNameParameter:
      name: applicationGroupName
      in: path
      description: 'The Application Group name '
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API Version.
      required: false
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of the resource group within the azure subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    NamespaceNameParameter:
      name: namespaceName
      in: path
      description: The Namespace name
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$
        minLength: 6
        maxLength: 50
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The PrivateEndpointConnection name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceAssociationNameParameter:
      name: resourceAssociationName
      in: path
      description: The ResourceAssociation Name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    EventHubNameParameter:
      name: eventHubName
      in: path
      description: The Event Hub name
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        type: string
    ConsumerGroupNameParameter:
      name: consumerGroupName
      in: path
      description: The consumer group name
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 50
        type: string
    SkipParameter:
      name: $skip
      in: query
      description: Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.
      required: false
      x-ms-parameter-location: method
      schema:
        minimum: 0
        maximum: 1000
        type: integer
    TopParameter:
      name: $top
      in: query
      description: May be used to limit the number of results to the most recent N usageDetails.
      required: false
      x-ms-parameter-location: method
      schema:
        minimum: 1
        maximum: 1000
        type: integer
    AuthorizationRuleNameParameter:
      name: authorizationRuleName
      in: path
      description: The authorization rule name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    AliasNameParameter:
      name: alias
      in: path
      description: The Disaster Recovery configuration name
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 50
        type: string
    ClusterNameParameter:
      name: clusterName
      in: path
      description: The name of the Event Hubs Cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 6
        maxLength: 50
        type: string
    IpFilterRuleNameParameter:
      name: ipFilterRuleName
      in: path
      description: The IP Filter Rule name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    VirtualNetworkRuleNameParameter:
      name: virtualNetworkRuleName
      in: path
      description: The Virtual Network Rule name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    SkuNameParameter:
      name: sku
      in: path
      description: The sku type.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 50
        type: string
  schemas:
    OperationListResult:
      description: Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          description: List of Event Hub operations supported by the Microsoft.EventHub resource provider.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Operation'
        nextLink:
          readOnly: true
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    Operation:
      description: A Event Hub REST API operation
      properties:
        name:
          readOnly: true
          type: string
          description: 'Operation name: {provider}/{resource}/{operation}'
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: Display of the operation
        origin:
          description: Origin of the operation
          type: string
        properties:
          description: Properties of the operation
          type: object
          x-ms-client-flatten: true
      type: object
    OperationDisplay:
      description: Operation display payload
      type: object
      properties:
        provider:
          description: Resource provider of the operation
          type: string
          readOnly: true
        resource:
          description: Resource of the operation
          type: string
          readOnly: true
        operation:
          description: Localized friendly name for the operation
          type: string
          readOnly: true
        description:
          description: Localized friendly description for the operation
          type: string
          readOnly: true
    ProxyResource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      x-ms-azure-resource: true
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          description: The error additional info.
    ErrorResponse:
      description: Error response indicates Event Hub service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    SchemaGroup:
      description: Single item in List or Get Schema Group operation
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          properties:
            updatedAtUtc:
              readOnly: true
              format: date-time
              type: string
              description: Exact time the Schema Group was updated
            createdAtUtc:
              readOnly: true
              format: date-time
              type: string
              description: Exact time the Schema Group was created.
            eTag:
              readOnly: true
              format: uuid
              type: string
              description: The ETag value.
            groupProperties:
              type: object
              additionalProperties:
                type: string
              description: dictionary object for SchemaGroup group properties
            schemaCompatibility:
              type: string
              description: ''
              enum:
                - None
                - Backward
                - Forward
              x-ms-enum:
                name: SchemaCompatibility
                modelAsString: true
            schemaType:
              type: string
              description: ''
              enum:
                - Unknown
                - Avro
              x-ms-enum:
                name: SchemaType
                modelAsString: true
          description: ''
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    SchemaGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SchemaGroup'
          description: Result of the List SchemaGroups operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of Schema Groups.
      description: The result of the List SchemaGroup operation.
    AvailableClustersList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailableCluster'
          description: The count of readily available and pre-provisioned Event Hubs Clusters per region.
      description: The response of the List Available Clusters operation.
    AvailableCluster:
      type: object
      properties:
        location:
          type: string
          description: Location fo the Available Cluster
      description: Pre-provisioned and readily available Event Hubs Cluster count per region.
    CaptureDescription:
      properties:
        enabled:
          type: boolean
          description: 'A value that indicates whether capture description is enabled. '
        encoding:
          type: string
          description: 'Enumerates the possible values for the encoding format of capture description. Note: ''AvroDeflate'' will be deprecated in New API Version'
          enum:
            - Avro
            - AvroDeflate
          x-ms-enum:
            name: EncodingCaptureDescription
            modelAsString: false
        intervalInSeconds:
          format: int32
          type: integer
          description: The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
        sizeLimitInBytes:
          format: int32
          type: integer
          description: The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
        destination:
          $ref: '#/components/schemas/Destination'
          description: Properties of Destination where capture will be stored. (Storage Account, Blob Names)
        skipEmptyArchives:
          type: boolean
          description: A value that indicates whether to Skip Empty Archives
      description: Properties to configure capture description for eventhub
      type: object
    RetentionDescription:
      type: object
      properties:
        cleanupPolicy:
          type: string
          description: Enumerates the possible values for cleanup policy
          enum:
            - Delete
            - Compact
          x-ms-enum:
            name: CleanupPolicyRetentionDescription
            modelAsString: true
        retentionTimeInHours:
          format: int64
          type: integer
          description: 'Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue '
        tombstoneRetentionTimeInHours:
          format: int32
          type: integer
          description: Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub
      description: Properties to configure retention settings for the  eventhub
    Eventhub:
      description: Single item in List or Get Event Hub operation
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            partitionIds:
              readOnly: true
              type: array
              items:
                type: string
              description: Current number of shards on the Event Hub.
            createdAt:
              readOnly: true
              format: date-time
              type: string
              description: Exact time the Event Hub was created.
            updatedAt:
              readOnly: true
              format: date-time
              type: string
              description: The exact time the message was updated.
            messageRetentionInDays:
              format: int64
              type: integer
              minimum: 1
              description: Number of days to retain the events for this Event Hub, value should be 1 to 7 days
            partitionCount:
              format: int64
              type: integer
              minimum: 1
              description: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
            status:
              type: string
              description: Enumerates the possible values for the status of the Event Hub.
              enum:
                - Active
                - Disabled
                - Restoring
                - SendDisabled
                - ReceiveDisabled
                - Creating
                - Deleting
                - Renaming
                - Unknown
              x-ms-enum:
                name: EntityStatus
                modelAsString: false
            userMetadata:
              type: string
              description: Gets and Sets Metadata of User.
            captureDescription:
              $ref: '#/components/schemas/CaptureDescription'
              description: Properties of capture description
            retentionDescription:
              $ref: '#/components/schemas/RetentionDescription'
              description: Event Hub retention settings
          description: Properties supplied to the Create Or Update Event Hub operation.
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    EventHubListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Eventhub'
          description: Result of the List EventHubs operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of EventHubs.
      description: The result of the List EventHubs operation.
      type: object
    CaptureIdentity:
      type: object
      description: A value that indicates whether capture description is enabled.
      properties:
        type:
          type: string
          description: Type of Azure Active Directory Managed Identity.
          enum:
            - SystemAssigned
            - UserAssigned
          x-ms-enum:
            name: CaptureIdentityType
            modelAsString: false
        userAssignedIdentity:
          type: string
          description: ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used.
    Destination:
      description: Capture storage details for capture description
      properties:
        name:
          type: string
          description: Name for capture destination
        identity:
          $ref: '#/components/schemas/CaptureIdentity'
        properties:
          x-ms-client-flatten: true
          properties:
            storageAccountResourceId:
              type: string
              description: Resource id of the storage account to be used to create the blobs
            blobContainer:
              type: string
              description: Blob container Name
            archiveNameFormat:
              type: string
              description: Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
            dataLakeSubscriptionId:
              type: string
              format: uuid
              description: Subscription Id of Azure Data Lake Store
            dataLakeAccountName:
              type: string
              description: The Azure Data Lake Store name for the captured events
            dataLakeFolderPath:
              type: string
              description: The destination folder path for the captured events
          description: Properties describing the storage account, blob container and archive name format for capture destination
      type: object
    Cluster:
      description: Single Event Hubs Cluster resource in List or Get operations.
      properties:
        sku:
          $ref: '#/components/schemas/ClusterSku'
          description: Properties of the cluster SKU.
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        properties:
          type: object
          x-ms-client-flatten: true
          properties:
            createdAt:
              readOnly: true
              type: string
              description: The UTC time when the Event Hubs Cluster was created.
            provisioningState:
              readOnly: true
              type: string
              enum:
                - Unknown
                - Creating
                - Deleting
                - Scaling
                - Active
                - Failed
                - Succeeded
                - Canceled
              x-ms-enum:
                name: provisioningState
                modelAsString: true
              description: Provisioning state of the Cluster.
            updatedAt:
              readOnly: true
              type: string
              description: The UTC time when the Event Hubs Cluster was last updated.
            metricId:
              readOnly: true
              type: string
              description: The metric ID of the cluster resource. Provided by the service and not modifiable by the user.
            status:
              readOnly: true
              type: string
              description: Status of the Cluster resource
            supportsScaling:
              type: boolean
              description: A value that indicates whether Scaling is Supported.
          description: Event Hubs Cluster properties supplied in responses in List or Get operations.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ClusterSku:
      type: object
      properties:
        name:
          type: string
          description: Name of this SKU.
          enum:
            - Dedicated
          x-ms-enum:
            name: ClusterSkuName
            modelAsString: true
        capacity:
          format: int32
          minimum: 1
          type: integer
          description: The quantity of Event Hubs Cluster Capacity Units contained in this cluster.
      required:
        - name
      description: SKU parameters particular to a cluster instance.
    ClusterListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          description: The Event Hubs Clusters present in the List Event Hubs operation results.
        nextLink:
          type: string
          description: Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters.
      description: The response of the List Event Hubs Clusters operation.
    EHNamespaceIdListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EHNamespaceIdContainer'
          description: Result of the List Namespace IDs operation
      description: The response of the List Namespace IDs operation
    EHNamespaceIdContainer:
      type: object
      properties:
        id:
          type: string
          description: id parameter
      description: The full ARM ID of an Event Hubs Namespace
    EHNamespaceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EHNamespace'
          description: Result of the List Namespace operation
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of namespaces.
      description: The response of the List Namespace operation
      type: object
    EHNamespace:
      description: Single Namespace item in List or Get Operation
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: Properties of sku resource
        identity:
          $ref: '#/components/schemas/Identity'
          description: Properties of BYOK Identity description
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          properties:
            minimumTlsVersion:
              type: string
              description: The minimum TLS version for the cluster to support, e.g. '1.2'
              enum:
                - '1.0'
                - '1.1'
                - '1.2'
              x-ms-enum:
                name: TlsVersion
                modelAsString: true
            provisioningState:
              readOnly: true
              type: string
              description: Provisioning state of the Namespace.
            status:
              readOnly: true
              type: string
              description: Status of the Namespace.
            createdAt:
              readOnly: true
              format: date-time
              type: string
              description: The time the Namespace was created.
            updatedAt:
              readOnly: true
              format: date-time
              type: string
              description: The time the Namespace was updated.
            serviceBusEndpoint:
              readOnly: true
              type: string
              description: Endpoint you can use to perform Service Bus operations.
            clusterArmId:
              type: string
              description: Cluster ARM ID of the Namespace.
            metricId:
              readOnly: true
              type: string
              description: Identifier for Azure Insights metrics.
            isAutoInflateEnabled:
              type: boolean
              description: Value that indicates whether AutoInflate is enabled for eventhub namespace.
            publicNetworkAccess:
              description: This determines if traffic is allowed over public network. By default it is enabled.
              enum:
                - Enabled
                - Disabled
                - SecuredByPerimeter
              type: string
              x-ms-enum:
                name: PublicNetworkAccess
                modelAsString: true
              default: Enabled
            maximumThroughputUnits:
              format: int32
              type: integer
              minimum: 0
              description: Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
            kafkaEnabled:
              type: boolean
              description: Value that indicates whether Kafka is enabled for eventhub namespace.
            zoneRedundant:
              type: boolean
              description: Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.
            encryption:
              $ref: '#/components/schemas/Encryption'
              description: Properties of BYOK Encryption description
            privateEndpointConnections:
              description: List of private endpoint connections.
              type: array
              items:
                $ref: '#/components/schemas/PrivateEndpointConnection'
            disableLocalAuth:
              type: boolean
              description: This property disables SAS authentication for the Event Hubs namespace.
            alternateName:
              type: string
              description: Alternate name specified when alias and namespace names are same.
          description: Namespace properties supplied for create namespace operation.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    Sku:
      type: object
      properties:
        name:
          type: string
          description: Name of this SKU.
          enum:
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuName
            modelAsString: true
        tier:
          type: string
          description: The billing tier of this particular SKU.
          enum:
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: true
        capacity:
          format: int32
          minimum: 0
          type: integer
          description: The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.
      required:
        - name
      description: SKU parameters supplied to the create namespace operation
    Identity:
      x-ms-client-flatten: true
      properties:
        principalId:
          type: string
          description: ObjectId from the KeyVault
          readOnly: true
        tenantId:
          type: string
          description: TenantId from the KeyVault
          readOnly: true
        type:
          type: string
          description: Type of managed service identity.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ManagedServiceIdentityType
            modelAsString: false
        userAssignedIdentities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
          description: Properties for User Assigned Identities
      description: Properties to configure Identity for Bring your Own Keys
      type: object
    UserAssignedIdentity:
      description: Recognized Dictionary value.
      type: object
      properties:
        principalId:
          description: Principal Id of user assigned identity
          type: string
          x-ms-client-name: PrincipalId
          readOnly: true
        clientId:
          description: Client Id of user assigned identity
          type: string
          x-ms-client-name: ClientId
          readOnly: true
    Encryption:
      x-ms-client-flatten: true
      properties:
        keyVaultProperties:
          type: array
          items:
            $ref: '#/components/schemas/KeyVaultProperties'
          x-ms-client-name: KeyVaultProperties
          description: Properties of KeyVault
        keySource:
          type: string
          description: Enumerates the possible value of keySource for Encryption
          default: Microsoft.KeyVault
          enum:
            - Microsoft.KeyVault
          x-ms-enum:
            name: keySource
            modelAsString: false
        requireInfrastructureEncryption:
          type: boolean
          description: Enable Infrastructure Encryption (Double Encryption)
      description: Properties to configure Encryption
      type: object
    KeyVaultProperties:
      properties:
        keyName:
          type: string
          description: Name of the Key from KeyVault
          x-ms-client-name: KeyName
        keyVaultUri:
          type: string
          description: Uri of KeyVault
          x-ms-client-name: KeyVaultUri
        keyVersion:
          type: string
          description: Key Version
          x-ms-client-name: KeyVersion
        identity:
          $ref: '#/components/schemas/userAssignedIdentityProperties'
      description: Properties to configure keyVault Properties
      type: object
    PrivateEndpointConnection:
      description: Properties of the PrivateEndpointConnection.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Properties of the PrivateEndpointConnection.
          x-ms-client-flatten: true
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      description: Properties of the private endpoint connection resource.
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The Private Endpoint resource for this Connection.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/ConnectionState'
          description: Details about the state of the connection.
        provisioningState:
          description: Provisioning state of the Private Endpoint Connection.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: EndPointProvisioningState
            modelAsString: true
      type: object
    PrivateEndpoint:
      description: PrivateEndpoint information.
      properties:
        id:
          description: The ARM identifier for Private Endpoint.
          type: string
      type: object
    ConnectionState:
      description: ConnectionState information.
      properties:
        status:
          description: Status of the connection.
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateLinkConnectionStatus
            modelAsString: true
        description:
          description: Description of the connection state.
          type: string
      type: object
    PrivateEndpointConnectionListResult:
      description: Result of the list of all private endpoint connections operation.
      properties:
        value:
          description: A collection of private endpoint connection resources.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          description: A link for the next page of private endpoint connection resources.
          type: string
      type: object
    PrivateLinkResource:
      description: Information of the private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Properties of the private link resource.
          x-ms-client-flatten: true
        id:
          description: Fully qualified identifier of the resource.
          type: string
        name:
          description: Name of the resource
          type: string
        type:
          description: Type of the resource
          type: string
      type: object
    PrivateLinkResourceProperties:
      description: Properties of PrivateLinkResource
      properties:
        groupId:
          description: The private link resource group id.
          type: string
        requiredMembers:
          type: array
          description: The private link resource required member names.
          items:
            type: string
        requiredZoneNames:
          type: array
          description: The private link resource Private link DNS zone name.
          items:
            type: string
      type: object
    PrivateLinkResourcesListResult:
      description: Result of the List private link resources operation.
      properties:
        value:
          description: A collection of private link resources
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: A link for the next page of private link resources.
          type: string
      type: object
    userAssignedIdentityProperties:
      x-ms-client-flatten: true
      type: object
      properties:
        userAssignedIdentity:
          type: string
          description: ARM ID of user Identity selected for encryption
    NetworkSecurityPerimeterConfigurationList:
      description: Result of the List NetworkSecurityPerimeterConfiguration operation.
      type: object
      properties:
        value:
          description: A collection of NetworkSecurityPerimeterConfigurations
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
    NetworkSecurityPerimeterConfiguration:
      description: Network Security Perimeter related configurations of a given namespace
      readOnly: true
      properties:
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProperties'
          description: Properties of the Network Security Perimeter Configuration
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    NetworkSecurityPerimeterConfigurationProperties:
      description: Properties of NetworkSecurityPerimeterConfiguration
      type: object
      readOnly: true
      properties:
        provisioningState:
          description: Provisioning state of NetworkSecurityPerimeter configuration propagation
          enum:
            - Unknown
            - Creating
            - Updating
            - Accepted
            - InvalidResponse
            - Succeeded
            - SucceededWithIssues
            - Failed
            - Deleting
            - Deleted
            - Canceled
          type: string
          x-ms-enum:
            name: NetworkSecurityPerimeterConfigurationProvisioningState
            modelAsString: true
        provisioningIssues:
          description: List of Provisioning Issues if any
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningIssue'
          x-ms-identifiers:
            - name
        networkSecurityPerimeter:
          $ref: '#/components/schemas/NetworkSecurityPerimeter'
        resourceAssociation:
          description: Information about resource association
          readOnly: true
          type: object
          properties:
            name:
              description: Name of the resource association
              type: string
            accessMode:
              description: Access Mode of the resource association
              enum:
                - NoAssociationMode
                - EnforcedMode
                - LearningMode
                - AuditMode
                - UnspecifiedMode
              type: string
              x-ms-enum:
                name: ResourceAssociationAccessMode
                modelAsString: true
        profile:
          description: Information about current network profile
          readOnly: true
          type: object
          properties:
            name:
              description: Name of the resource
              type: string
            accessRulesVersion:
              description: Current access rules version
              type: string
            accessRules:
              description: List of Access Rules
              type: array
              items:
                $ref: '#/components/schemas/NspAccessRule'
        isBackingResource:
          readOnly: true
          type: boolean
          description: True if the EventHub namespace is backed by another Azure resource and not visible to end users.
        applicableFeatures:
          readOnly: true
          type: array
          description: Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane.
          items:
            type: string
        parentAssociationName:
          readOnly: true
          type: string
          description: Source Resource Association name
        sourceResourceId:
          readOnly: true
          type: string
          description: ARM Id of source resource
    ProvisioningIssue:
      description: Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration
      readOnly: true
      properties:
        name:
          description: Name of the issue
          type: string
        properties:
          description: Properties of Provisioning Issue
          type: object
          readOnly: true
          properties:
            issueType:
              description: Type of Issue
              type: string
            description:
              description: Description of the issue
              type: string
      type: object
    NspAccessRule:
      description: Information of Access Rule in Network Profile
      readOnly: true
      properties:
        id:
          description: Fully qualified identifier of the resource
          type: string
        name:
          description: Name of the resource
          type: string
        type:
          description: Type of the resource
          type: string
        properties:
          description: Properties of Access Rule
          readOnly: true
          type: object
          properties:
            direction:
              description: Direction of Access Rule
              enum:
                - Inbound
                - Outbound
              type: string
              x-ms-enum:
                name: NspAccessRuleDirection
                modelAsString: true
            addressPrefixes:
              description: Address prefixes in the CIDR format for inbound rules
              type: array
              items:
                description: IP Address
                type: string
            subscriptions:
              description: Subscriptions for inbound rules
              type: array
              items:
                description: Subscription for inbound rule
                type: object
                readOnly: true
                properties:
                  id:
                    description: Fully qualified identifier of subscription
                    type: string
            networkSecurityPerimeters:
              description: NetworkSecurityPerimeters for inbound rules
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/NetworkSecurityPerimeter'
            fullyQualifiedDomainNames:
              description: FQDN for outbound rules
              type: array
              readOnly: true
              items:
                description: Fully qualified domain name
                type: string
      type: object
    NetworkSecurityPerimeter:
      description: NetworkSecurityPerimeter related information
      type: object
      readOnly: true
      properties:
        id:
          description: Fully qualified identifier of the resource
          type: string
        perimeterGuid:
          description: Guid of the resource
          type: string
        location:
          description: Location of the resource
          type: string
    AuthorizationRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationRule'
          description: Result of the List Authorization Rules operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules
      description: The response from the List namespace operation.
      type: object
    AuthorizationRule:
      description: Single item in a List or Get AuthorizationRule operation
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            rights:
              type: array
              items:
                type: string
                enum:
                  - Manage
                  - Send
                  - Listen
                x-ms-enum:
                  name: AccessRights
                  modelAsString: true
              description: The rights associated with the rule.
          required:
            - rights
          description: Properties supplied to create or update AuthorizationRule
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    AccessKeys:
      properties:
        primaryConnectionString:
          readOnly: true
          type: string
          description: Primary connection string of the created namespace AuthorizationRule.
        secondaryConnectionString:
          readOnly: true
          type: string
          description: Secondary connection string of the created namespace AuthorizationRule.
        aliasPrimaryConnectionString:
          readOnly: true
          type: string
          description: Primary connection string of the alias if GEO DR is enabled
        aliasSecondaryConnectionString:
          readOnly: true
          type: string
          description: Secondary  connection string of the alias if GEO DR is enabled
        primaryKey:
          readOnly: true
          type: string
          description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
        secondaryKey:
          readOnly: true
          type: string
          description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
        keyName:
          readOnly: true
          type: string
          description: A string that describes the AuthorizationRule.
      description: Namespace/EventHub Connection String
      type: object
    RegenerateAccessKeyParameters:
      properties:
        keyType:
          type: string
          description: The access key to regenerate.
          enum:
            - PrimaryKey
            - SecondaryKey
          x-ms-enum:
            name: KeyType
            modelAsString: true
        key:
          type: string
          description: Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType
      required:
        - keyType
      description: Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset.
      type: object
    UnavailableReason:
      type: string
      enum:
        - None
        - InvalidName
        - SubscriptionIsDisabled
        - NameInUse
        - NameInLockdown
        - TooManyNamespaceInCurrentSubscription
      x-ms-enum:
        name: UnavailableReason
        modelAsString: false
      description: Specifies the reason for the unavailability of the service.
    CheckNameAvailabilityParameter:
      properties:
        name:
          type: string
          description: Name to check the namespace name availability
      required:
        - name
      description: 'Parameter supplied to check Namespace name availability operation '
      type: object
    CheckNameAvailabilityResult:
      properties:
        message:
          type: string
          readOnly: true
          description: The detailed info regarding the reason associated with the Namespace.
        nameAvailable:
          type: boolean
          description: Value indicating Namespace is availability, true if the Namespace is available; otherwise, false.
        reason:
          $ref: '#/components/schemas/UnavailableReason'
          description: The reason for unavailability of a Namespace.
      description: The Result of the CheckNameAvailability operation
      type: object
    ArmDisasterRecovery:
      description: Single item in List or Get Alias(Disaster Recovery configuration) operation
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            provisioningState:
              readOnly: true
              type: string
              description: Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
              enum:
                - Accepted
                - Succeeded
                - Failed
              x-ms-enum:
                name: ProvisioningStateDR
                modelAsString: false
            partnerNamespace:
              type: string
              description: ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
            alternateName:
              type: string
              description: Alternate name specified when alias and namespace names are same.
            role:
              readOnly: true
              type: string
              description: role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
              enum:
                - Primary
                - PrimaryNotReplicating
                - Secondary
              x-ms-enum:
                name: RoleDisasterRecovery
                modelAsString: false
            pendingReplicationOperationsCount:
              readOnly: true
              format: int64
              type: integer
              description: Number of entities pending to be replicated.
          description: Properties required to the Create Or Update Alias(Disaster Recovery configurations)
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    ArmDisasterRecoveryListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArmDisasterRecovery'
          description: List of Alias(Disaster Recovery configurations)
        nextLink:
          type: string
          readOnly: true
          description: Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)
      description: The result of the List Alias(Disaster Recovery configuration) operation.
      type: object
    ConsumerGroup:
      description: Single item in List or Get Consumer group operation
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            createdAt:
              readOnly: true
              format: date-time
              type: string
              description: Exact time the message was created.
            updatedAt:
              readOnly: true
              format: date-time
              type: string
              description: The exact time the message was updated.
            userMetadata:
              type: string
              description: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
          description: Single item in List or Get Consumer group operation
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    ConsumerGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerGroup'
          description: Result of the List Consumer Group operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group
      description: The result to the List Consumer Group operation.
      type: object
    Subnet:
      properties:
        id:
          type: string
          description: Resource ID of Virtual Network Subnet
      description: Properties supplied for Subnet
      type: object
    NWRuleSetIpRules:
      x-ms-client-flatten: true
      properties:
        ipMask:
          type: string
          description: IP Mask
        action:
          type: string
          description: The IP Filter Action
          enum:
            - Allow
          x-ms-enum:
            name: NetworkRuleIPAction
            modelAsString: true
      description: The response from the List namespace operation.
      type: object
    NWRuleSetVirtualNetworkRules:
      x-ms-client-flatten: true
      properties:
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: Subnet properties
        ignoreMissingVnetServiceEndpoint:
          type: boolean
          description: Value that indicates whether to ignore missing Vnet Service Endpoint
      description: The response from the List namespace operation.
      type: object
    NetworkRuleSet:
      description: Description of topic resource.
      properties:
        properties:
          description: NetworkRuleSet properties
          x-ms-client-flatten: true
          properties:
            trustedServiceAccessEnabled:
              type: boolean
              description: Value that indicates whether Trusted Service Access is Enabled or not.
            defaultAction:
              type: string
              description: Default Action for Network Rule Set
              enum:
                - Allow
                - Deny
              x-ms-enum:
                name: DefaultAction
                modelAsString: true
            virtualNetworkRules:
              type: array
              items:
                $ref: '#/components/schemas/NWRuleSetVirtualNetworkRules'
              description: List VirtualNetwork Rules
            ipRules:
              type: array
              items:
                $ref: '#/components/schemas/NWRuleSetIpRules'
              description: List of IpRules
            publicNetworkAccess:
              description: 'This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile''s access rules. '
              enum:
                - Enabled
                - Disabled
                - SecuredByPerimeter
              type: string
              x-ms-enum:
                name: PublicNetworkAccessFlag
                modelAsString: true
              default: Enabled
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    NetworkRuleSetListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkRuleSet'
          description: Result of the List NetworkRuleSet operation
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet.
      description: The response of the List NetworkRuleSet operation
    ApplicationGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGroup'
          description: Result of the List Application Groups operation.
        nextLink:
          readOnly: true
          type: string
          description: Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules
      description: The response from the List Application Groups operation.
    ApplicationGroup:
      description: The Application Group object
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          properties:
            isEnabled:
              type: boolean
              description: Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed
            clientAppGroupIdentifier:
              type: string
              description: The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)
            policies:
              type: array
              items:
                $ref: '#/components/schemas/ApplicationGroupPolicy'
              x-ms-identifiers: []
              description: List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.
          required:
            - clientAppGroupIdentifier
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    ApplicationGroupPolicy:
      type: object
      discriminator:
        propertyName: type
      description: Properties of the Application Group policy
      properties:
        name:
          type: string
          description: The Name of this policy
        type:
          type: string
          enum:
            - ThrottlingPolicy
          x-ms-enum:
            name: ApplicationGroupPolicyType
            modelAsString: true
          description: Application Group Policy types
      required:
        - name
        - type
    ThrottlingPolicy:
      x-ms-discriminator-value: ThrottlingPolicy
      description: Properties of the throttling policy
      required:
        - rateLimitThreshold
        - metricId
      properties:
        rateLimitThreshold:
          format: int64
          type: integer
          description: The Threshold limit above which the application group will be throttled.Rate limit is always per second.
        metricId:
          type: string
          description: Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal
          enum:
            - IncomingBytes
            - OutgoingBytes
            - IncomingMessages
            - OutgoingMessages
          x-ms-enum:
            name: MetricId
            modelAsString: true
        name:
          type: string
          description: The Name of this policy
        type:
          type: string
          enum:
            - ThrottlingPolicy
          x-ms-enum:
            name: ApplicationGroupPolicyType
            modelAsString: true
          description: Application Group Policy types
      type: object
    ClusterQuotaConfigurationProperties:
      type: object
      properties:
        settings:
          type: object
          additionalProperties:
            type: string
          description: All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster.
      description: Contains all settings for the cluster.
    TrackedResource:
      description: Definition of resource.
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
      type: object
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The type of identity that last modified the resource.
  x-stackQL-resources:
    operations:
      id: azure.event_hubs.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventHub~1operations?api-version=2024-01-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    schema_registries:
      id: azure.event_hubs.schema_registries
      name: schema_registries
      title: schema_registries
      methods:
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1schemagroups?api-version=2024-01-01/get'
            operationId: SchemaRegistry_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SchemaGroupListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1schemagroups~1{schemaGroupName}?api-version=2024-01-01/put'
            operationId: SchemaRegistry_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SchemaGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1schemagroups~1{schemaGroupName}?api-version=2024-01-01/delete'
            operationId: SchemaRegistry_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1schemagroups~1{schemaGroupName}?api-version=2024-01-01/get'
            operationId: SchemaRegistry_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SchemaGroup
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schema_registries/methods/get'
          - $ref: '#/components/x-stackQL-resources/schema_registries/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/schema_registries/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schema_registries/methods/delete'
    clusters_available_cluster_regions:
      id: azure.event_hubs.clusters_available_cluster_regions
      name: clusters_available_cluster_regions
      title: clusters_available_cluster_regions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventHub~1availableClusterRegions?api-version=2024-01-01/get'
            operationId: ClustersAvailableClusterRegion_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableClustersList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters_available_cluster_regions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_hubs:
      id: azure.event_hubs.event_hubs
      name: event_hubs
      title: event_hubs
      methods:
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs?api-version=2024-01-01/get'
            operationId: EventHubs_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventHubListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}?api-version=2024-01-01/put'
            operationId: EventHubs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Eventhub
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}?api-version=2024-01-01/delete'
            operationId: EventHubs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}?api-version=2024-01-01/get'
            operationId: EventHubs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Eventhub
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1authorizationRules~1{authorizationRuleName}~1regenerateKeys?api-version=2024-01-01/post'
            operationId: EventHubs_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_hubs/methods/get'
          - $ref: '#/components/x-stackQL-resources/event_hubs/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/event_hubs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/event_hubs/methods/delete'
    clusters:
      id: azure.event_hubs.clusters
      name: clusters
      title: clusters
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventHub~1clusters?api-version=2024-01-01/get'
            operationId: Clusters_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters?api-version=2024-01-01/get'
            operationId: Clusters_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters~1{clusterName}?api-version=2024-01-01/get'
            operationId: Clusters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters~1{clusterName}?api-version=2024-01-01/put'
            operationId: Clusters_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters~1{clusterName}?api-version=2024-01-01/patch'
            operationId: Clusters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters~1{clusterName}?api-version=2024-01-01/delete'
            operationId: Clusters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    clusters_namespaces:
      id: azure.event_hubs.clusters_namespaces
      name: clusters_namespaces
      title: clusters_namespaces
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters~1{clusterName}~1namespaces?api-version=2024-01-01/get'
            operationId: ClustersNamespaces_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EHNamespaceIdListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters_namespaces/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    namespaces:
      id: azure.event_hubs.namespaces
      name: namespaces
      title: namespaces
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventHub~1namespaces?api-version=2024-01-01/get'
            operationId: Namespaces_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EHNamespaceListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces?api-version=2024-01-01/get'
            operationId: Namespaces_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EHNamespaceListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}?api-version=2024-01-01/put'
            operationId: Namespaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EHNamespace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}?api-version=2024-01-01/delete'
            operationId: Namespaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}?api-version=2024-01-01/get'
            operationId: Namespaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EHNamespace
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}?api-version=2024-01-01/patch'
            operationId: Namespaces_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EHNamespace
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1regenerateKeys?api-version=2024-01-01/post'
            operationId: Namespaces_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessKeys
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventHub~1checkNameAvailability?api-version=2024-01-01/post'
            operationId: Namespaces_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/delete'
    private_endpoint_connections:
      id: azure.event_hubs.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1privateEndpointConnections?api-version=2024-01-01/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-01-01/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-01-01/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-01-01/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.event_hubs.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1privateLinkResources?api-version=2024-01-01/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourcesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    network_security_perimeter_configurations:
      id: azure.event_hubs.network_security_perimeter_configurations
      name: network_security_perimeter_configurations
      title: network_security_perimeter_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1networkSecurityPerimeterConfigurations?api-version=2024-01-01/get'
            operationId: NetworkSecurityPerimeterConfiguration_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfigurationList
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1networkSecurityPerimeterConfigurations~1{resourceAssociationName}~1reconcile?api-version=2024-01-01/post'
            operationId: NetworkSecurityPerimeterConfigurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/create_or_update'
        update: []
        replace: []
        delete: []
    namespaces_authorization_rules:
      id: azure.event_hubs.namespaces_authorization_rules
      name: namespaces_authorization_rules
      title: namespaces_authorization_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1authorizationRules?api-version=2024-01-01/get'
            operationId: NamespacesAuthorizationRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRuleListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}?api-version=2024-01-01/put'
            operationId: NamespacesAuthorizationRule_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}?api-version=2024-01-01/delete'
            operationId: NamespacesAuthorizationRule_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}?api-version=2024-01-01/get'
            operationId: NamespacesAuthorizationRule_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRule
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/delete'
    namespaces_keys:
      id: azure.event_hubs.namespaces_keys
      name: namespaces_keys
      title: namespaces_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1listKeys?api-version=2024-01-01/post'
            operationId: NamespacesKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    disaster_recovery_configs_authorization_rules:
      id: azure.event_hubs.disaster_recovery_configs_authorization_rules
      name: disaster_recovery_configs_authorization_rules
      title: disaster_recovery_configs_authorization_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}~1authorizationRules?api-version=2024-01-01/get'
            operationId: DisasterRecoveryConfigsAuthorizationRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRuleListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}~1authorizationRules~1{authorizationRuleName}?api-version=2024-01-01/get'
            operationId: DisasterRecoveryConfigsAuthorizationRule_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRule
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disaster_recovery_configs_authorization_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/disaster_recovery_configs_authorization_rules/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    disaster_recovery_configs_keys:
      id: azure.event_hubs.disaster_recovery_configs_keys
      name: disaster_recovery_configs_keys
      title: disaster_recovery_configs_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}~1authorizationRules~1{authorizationRuleName}~1listKeys?api-version=2024-01-01/post'
            operationId: DisasterRecoveryConfigsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disaster_recovery_configs_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    authorization_rules:
      id: azure.event_hubs.authorization_rules
      name: authorization_rules
      title: authorization_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1authorizationRules?api-version=2024-01-01/get'
            operationId: EventHubsAuthorizationRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRuleListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1authorizationRules~1{authorizationRuleName}?api-version=2024-01-01/put'
            operationId: EventHubsAuthorizationRule_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRule
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1authorizationRules~1{authorizationRuleName}?api-version=2024-01-01/get'
            operationId: EventHubsAuthorizationRule_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthorizationRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1authorizationRules~1{authorizationRuleName}?api-version=2024-01-01/delete'
            operationId: EventHubsAuthorizationRule_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/delete'
    keys:
      id: azure.event_hubs.keys
      name: keys
      title: keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1authorizationRules~1{authorizationRuleName}~1listKeys?api-version=2024-01-01/post'
            operationId: EventHubsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    disaster_recovery_configs:
      id: azure.event_hubs.disaster_recovery_configs
      name: disaster_recovery_configs
      title: disaster_recovery_configs
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1checkNameAvailability?api-version=2024-01-01/post'
            operationId: DisasterRecoveryConfigs_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResult
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs?api-version=2024-01-01/get'
            operationId: DisasterRecoveryConfigs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ArmDisasterRecoveryListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}?api-version=2024-01-01/put'
            operationId: DisasterRecoveryConfigs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ArmDisasterRecovery
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}?api-version=2024-01-01/delete'
            operationId: DisasterRecoveryConfigs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}?api-version=2024-01-01/get'
            operationId: DisasterRecoveryConfigs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ArmDisasterRecovery
        break_pairing:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}~1breakPairing?api-version=2024-01-01/post'
            operationId: DisasterRecoveryConfigs_BreakPairing
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        fail_over:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1disasterRecoveryConfigs~1{alias}~1failover?api-version=2024-01-01/post'
            operationId: DisasterRecoveryConfigs_FailOver
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disaster_recovery_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/disaster_recovery_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/disaster_recovery_configs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/disaster_recovery_configs/methods/delete'
    consumer_groups:
      id: azure.event_hubs.consumer_groups
      name: consumer_groups
      title: consumer_groups
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1consumergroups~1{consumerGroupName}?api-version=2024-01-01/put'
            operationId: ConsumerGroups_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsumerGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1consumergroups~1{consumerGroupName}?api-version=2024-01-01/delete'
            operationId: ConsumerGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1consumergroups~1{consumerGroupName}?api-version=2024-01-01/get'
            operationId: ConsumerGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsumerGroup
        list_by_event_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1eventhubs~1{eventHubName}~1consumergroups?api-version=2024-01-01/get'
            operationId: ConsumerGroups_ListByEventHub
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsumerGroupListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/consumer_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/consumer_groups/methods/list_by_event_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/consumer_groups/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/consumer_groups/methods/delete'
    namespaces_network_rule_sets:
      id: azure.event_hubs.namespaces_network_rule_sets
      name: namespaces_network_rule_sets
      title: namespaces_network_rule_sets
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1networkRuleSets~1default?api-version=2024-01-01/put'
            operationId: NamespacesNetworkRuleSet_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRuleSet
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1networkRuleSets~1default?api-version=2024-01-01/get'
            operationId: NamespacesNetworkRuleSet_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRuleSet
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1networkRuleSets?api-version=2024-01-01/get'
            operationId: NamespacesNetworkRuleSet_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRuleSetListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_network_rule_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespaces_network_rule_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces_network_rule_sets/methods/create_or_update'
        update: []
        replace: []
        delete: []
    application_groups:
      id: azure.event_hubs.application_groups
      name: application_groups
      title: application_groups
      methods:
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1applicationGroups?api-version=2024-01-01/get'
            operationId: ApplicationGroup_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroupListResult
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1applicationGroups~1{applicationGroupName}?api-version=2024-01-01/delete'
            operationId: ApplicationGroup_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1applicationGroups~1{applicationGroupName}?api-version=2024-01-01/get'
            operationId: ApplicationGroup_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroup
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/list_by_namespace'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/delete'
    application_group_application_groups:
      id: azure.event_hubs.application_group_application_groups
      name: application_group_application_groups
      title: application_group_application_groups
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1namespaces~1{namespaceName}~1applicationGroups~1{applicationGroupName}?api-version=2024-01-01/put'
            operationId: ApplicationGroupApplicationGroup_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroup
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/application_group_application_groups/methods/create_or_update'
        update: []
        replace: []
        delete: []
    configurations:
      id: azure.event_hubs.configurations
      name: configurations
      title: configurations
      methods:
        patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters~1{clusterName}~1quotaConfiguration~1default?api-version=2024-01-01/patch'
            operationId: Configuration_Patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterQuotaConfigurationProperties
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventHub~1clusters~1{clusterName}~1quotaConfiguration~1default?api-version=2024-01-01/get'
            operationId: Configuration_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterQuotaConfigurationProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/get'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/patch'
        replace: []
        delete: []
    vw_private_endpoint_connections:
      id: azure.event_hubs.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              privateEndpointConnectionName
              FROM azure.event_hubs.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                privateEndpointConnectionName
                FROM azure.event_hubs.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
paths:
  /providers/Microsoft.EventHub/operations?api-version=2024-01-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Event Hub REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups?api-version=2024-01-01:
    get:
      tags:
        - SchemaRegistry
      operationId: SchemaRegistry_ListByNamespace
      description: Gets all the Schema Groups in a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/SkipParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: Successfully retrieved the list of SchemaGroups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaGroupListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups/{schemaGroupName}?api-version=2024-01-01:
    put:
      tags:
        - SchemaRegistry
      operationId: SchemaRegistry_CreateOrUpdate
      description: Creates or Updates an EventHub schema group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SchemaGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create an Event Hub resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaGroup'
      responses:
        '200':
          description: SchemaGroup successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaGroup'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SchemaRegistry
      operationId: SchemaRegistry_Delete
      description: Deletes an EventHub schema group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SchemaGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: SchemaGroup successfully deleted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - SchemaRegistry
      operationId: SchemaRegistry_Get
      description: Gets the details of an EventHub schema group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SchemaGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Schema Group description.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaGroup'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/availableClusterRegions?api-version=2024-01-01:
    get:
      tags:
        - Event Hubs Clusters AvailableClusterRegions
      operationId: ClustersAvailableClusterRegion_List
      description: List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Available clusters listed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableClustersList'
        default:
          description: Error response describing why available clusters could not be successfully listed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Clusters_ListAvailableClusterRegion
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs?api-version=2024-01-01:
    get:
      tags:
        - EventHubs
      operationId: EventHubs_ListByNamespace
      description: Gets all the Event Hubs in a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/SkipParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: Successfully retrieved the list of Event Hubs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHubListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}?api-version=2024-01-01:
    put:
      tags:
        - EventHubs
      operationId: EventHubs_CreateOrUpdate
      description: Creates or updates a new Event Hub as a nested resource within a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create an Event Hub resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Eventhub'
      responses:
        '200':
          description: Event Hub successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eventhub'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - EventHubs
      operationId: EventHubs_Delete
      description: Deletes an Event Hub from the specified Namespace and resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub successfully deleted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - EventHubs
      operationId: EventHubs_Get
      description: Gets an Event Hubs description for the specified Event Hub.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Event Hub description.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eventhub'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/clusters?api-version=2024-01-01:
    get:
      tags:
        - EventHubs Clusters
      operationId: Clusters_ListBySubscription
      description: Lists the available Event Hubs Clusters within an ARM resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Clusters returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Event Hub Cluster error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters?api-version=2024-01-01:
    get:
      tags:
        - EventHubs Clusters
      operationId: Clusters_ListByResourceGroup
      description: Lists the available Event Hubs Clusters within an ARM resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Clusters returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Event Hub Cluster error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}?api-version=2024-01-01:
    get:
      tags:
        - EventHubs Clusters
      operationId: Clusters_Get
      description: Gets the resource description of the specified Event Hubs Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Event Hubs Cluster resource description returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Event Hubs Cluster error response describing why the cluster description get operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - EventHubs Clusters
      operationId: Clusters_CreateOrUpdate
      description: Creates or updates an instance of an Event Hubs Cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: Parameters for creating a eventhub cluster resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
              required:
                - location
      responses:
        '200':
          description: Event Hubs Cluster successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: Event Hubs Cluster create or update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: Event Hubs Cluster create or update request accepted.
        default:
          description: Event Hubs error response detailing why the Event Hubs Cluster create or update operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - EventHubs Clusters
      operationId: Clusters_Update
      description: Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The properties of the Event Hubs Cluster which should be updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: Event Hubs Cluster successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: Event Hubs Cluster update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: Event Hubs Cluster update request accepted.
        default:
          description: Event Hubs error response detailing why the Event Hubs Cluster update operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - EventHubs Clusters
      operationId: Clusters_Delete
      description: Deletes an existing Event Hubs Cluster. This operation is idempotent.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Event Hubs Cluster successfully deleted.
        '202':
          description: Event Hubs Cluster delete request accepted.
        '204':
          description: No content.
        default:
          description: Event Hubs error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/namespaces?api-version=2024-01-01:
    get:
      tags:
        - EventHubs Clusters Namespace
      operationId: ClustersNamespaces_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      description: List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.
      responses:
        '200':
          description: List of Namespace IDs in Cluster successfully delivered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespaceIdListResult'
        default:
          description: Event Hubs Cluster error response detailing why this operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Clusters_ListNamespaces
  /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces?api-version=2024-01-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_List
      description: Lists all the available Namespaces within a subscription, irrespective of the resource groups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespaces returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespaceListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces?api-version=2024-01-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_ListByResourceGroup
      description: Lists the available Namespaces within a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespaces returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespaceListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}?api-version=2024-01-01:
    put:
      tags:
        - Namespaces
      operationId: Namespaces_CreateOrUpdate
      description: Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for creating a namespace resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EHNamespace'
              required:
                - location
      responses:
        '200':
          description: Namespace successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespace'
        '201':
          description: Namespace create request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespace'
        '202':
          description: Namespace create or update request accepted.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Namespaces
      operationId: Namespaces_Delete
      description: Deletes an existing namespace. This operation also removes all associated resources under the namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace successfully deleted.
        '202':
          description: Namespace delete request accepted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - Namespaces
      operationId: Namespaces_Get
      description: Gets the description of the specified namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespace'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Namespaces
      operationId: Namespaces_Update
      description: Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for updating a namespace resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EHNamespace'
      responses:
        '200':
          description: Namespace successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespace'
        '201':
          description: Namespace update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EHNamespace'
        '202':
          description: Namespace create or update request accepted.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections?api-version=2024-01-01:
    get:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: Gets the available PrivateEndpointConnections within a namespace.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: PrivateEndpointConnections successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: EventHub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-01-01:
    put:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_CreateOrUpdate
      description: Creates or updates PrivateEndpointConnections of service namespace.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Status of PrivateEndPoint Connection Created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Request to update Status of PrivateEndPoint Connection accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Request to update Status of PrivateEndPoint Connection accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes an existing namespace. This operation also removes all associated resources under the namespace.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: Private Endpoint Connection successfully deleted.
        '202':
          description: Private Endpoint Connection  delete request accepted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets a description for the specified Private Endpoint Connection name.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Private Endpoint Connection  successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateLinkResources?api-version=2024-01-01:
    get:
      tags:
        - Namespaces PrivateLinkResources
      operationId: PrivateLinkResources_Get
      description: Gets lists of resources that supports Privatelinks.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Private Link resource List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourcesListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations?api-version=2024-01-01:
    get:
      tags:
        - Namespaces NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfiguration_List
      description: Gets list of current NetworkSecurityPerimeterConfiguration for Namespace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Network Security Perimeter Configuration List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationList'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}/reconcile?api-version=2024-01-01:
    post:
      tags:
        - Namespaces NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_CreateOrUpdate
      description: Refreshes any information about the association.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/ResourceAssociationNameParameter'
      responses:
        '200':
          description: Association reconciled
        '202':
          description: Request to reconcile the association accepted.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules?api-version=2024-01-01:
    get:
      tags:
        - AuthorizationRules Namespaces
      operationId: NamespacesAuthorizationRules_List
      description: Gets a list of authorization rules for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace AuthorizationRule successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRuleListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Namespaces_ListAuthorizationRules
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}?api-version=2024-01-01:
    put:
      tags:
        - AuthorizationRules Namespaces
      operationId: NamespacesAuthorizationRule_CreateOrUpdate
      description: Creates or updates an AuthorizationRule for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The shared access AuthorizationRule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
      responses:
        '200':
          description: Namespace AuthorizationRule created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_CreateOrUpdateAuthorizationRule
    delete:
      tags:
        - AuthorizationRules Namespaces
      operationId: NamespacesAuthorizationRule_Delete
      description: Deletes an AuthorizationRule for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace AuthorizationRule successfully deleted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_DeleteAuthorizationRule
    get:
      tags:
        - AuthorizationRules Namespaces
      operationId: NamespacesAuthorizationRule_Get
      description: Gets an AuthorizationRule for a Namespace by rule name.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace AuthorizationRule returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_GetAuthorizationRule
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys?api-version=2024-01-01:
    post:
      tags:
        - AuthorizationRules Namespaces
      operationId: NamespacesKeys_List
      description: Gets the primary and secondary connection strings for the Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Connection strings returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys?api-version=2024-01-01:
    post:
      tags:
        - AuthorizationRules Namespaces
      operationId: Namespaces_RegenerateKeys
      description: Regenerates the primary or secondary connection strings for the specified Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters required to regenerate the connection string.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateAccessKeyParameters'
      responses:
        '200':
          description: Connection strings regenerated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules?api-version=2024-01-01:
    get:
      tags:
        - AuthorizationRules DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigsAuthorizationRules_List
      description: Gets a list of authorization rules for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace AuthorizationRule successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRuleListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: DisasterRecoveryConfigs_ListAuthorizationRules
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}?api-version=2024-01-01:
    get:
      tags:
        - AuthorizationRules DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigsAuthorizationRule_Get
      description: Gets an AuthorizationRule for a Namespace by rule name.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Alias Namespace AuthorizationRule returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: DisasterRecoveryConfigs_GetAuthorizationRule
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys?api-version=2024-01-01:
    post:
      tags:
        - AuthorizationRules DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigsKeys_List
      description: Gets the primary and secondary connection strings for the Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Connection strings returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: DisasterRecoveryConfigs_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules?api-version=2024-01-01:
    get:
      tags:
        - AuthorizationRules EventHubs
      operationId: EventHubsAuthorizationRules_List
      description: Gets the authorization rules for an Event Hub.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub AuthorizationRule returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRuleListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventHubs_ListAuthorizationRules
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}?api-version=2024-01-01:
    put:
      tags:
        - AuthorizationRules EventHubs
      operationId: EventHubsAuthorizationRule_CreateOrUpdate
      description: Creates or updates an AuthorizationRule for the specified Event Hub. Creation/update of the AuthorizationRule will take a few seconds to take effect.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The shared access AuthorizationRule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
      responses:
        '200':
          description: Event Hub AuthorizationRule successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: EventHubs_CreateOrUpdateAuthorizationRule
    get:
      tags:
        - EventHubs
      operationId: EventHubsAuthorizationRule_Get
      description: Gets an AuthorizationRule for an Event Hub by rule name.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub AuthorizationRule successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: EventHubs_GetAuthorizationRule
    delete:
      tags:
        - EventHubs
      operationId: EventHubsAuthorizationRule_Delete
      description: Deletes an Event Hub AuthorizationRule.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub AuthorizationRule successfully deleted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: EventHubs_DeleteAuthorizationRule
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/listKeys?api-version=2024-01-01:
    post:
      tags:
        - AuthorizationRules EventHubs
      operationId: EventHubsKeys_List
      description: Gets the ACS and SAS connection strings for the Event Hub.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Connection strings successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: EventHubs_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys?api-version=2024-01-01:
    post:
      tags:
        - AuthorizationRules EventHubs
      operationId: EventHubs_RegenerateKeys
      description: Regenerates the ACS and SAS connection strings for the Event Hub.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey).
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateAccessKeyParameters'
      responses:
        '200':
          description: Connection strings successfully regenerated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/checkNameAvailability?api-version=2024-01-01:
    post:
      tags:
        - CheckNameAvailability DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigs_CheckNameAvailability
      description: Check the give Namespace name availability.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
      requestBody:
        description: Parameters to check availability of the given Alias name
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameter'
      responses:
        '200':
          description: check availability returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs?api-version=2024-01-01:
    get:
      tags:
        - DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigs_List
      description: Gets all Alias(Disaster Recovery configurations)
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the list of Alias(Disaster Recovery configurations) for eventhub namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmDisasterRecoveryListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}?api-version=2024-01-01:
    put:
      tags:
        - DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigs_CreateOrUpdate
      description: Creates or updates a new Alias(Disaster Recovery configuration)
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters required to create an Alias(Disaster Recovery configuration)
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArmDisasterRecovery'
      responses:
        '200':
          description: Alias(Disaster Recovery configuration) successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmDisasterRecovery'
        '201':
          description: Alias(Disaster Recovery configuration) creation request received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmDisasterRecovery'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigs_Delete
      description: Deletes an Alias(Disaster Recovery configuration)
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete Alias(Disaster Recovery configuration) request accepted
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigs_Get
      description: Retrieves Alias(Disaster Recovery configuration) for primary or secondary namespace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Alias(Disaster Recovery configurations)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmDisasterRecovery'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing?api-version=2024-01-01:
    post:
      tags:
        - DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigs_BreakPairing
      description: This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Break-Pairing operation is successful.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover?api-version=2024-01-01:
    post:
      tags:
        - DisasterRecoveryConfigs
      operationId: DisasterRecoveryConfigs_FailOver
      description: Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AliasNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Failover operation is successful.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/checkNameAvailability?api-version=2024-01-01:
    post:
      tags:
        - CheckNameAvailability Namespaces
      operationId: Namespaces_CheckNameAvailability
      description: Check the give Namespace name availability.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to check availability of the given Namespace name
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameter'
      responses:
        '200':
          description: check availability returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}?api-version=2024-01-01:
    put:
      tags:
        - ConsumerGroups
      operationId: ConsumerGroups_CreateOrUpdate
      description: Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/ConsumerGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create or update a consumer group resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerGroup'
      responses:
        '200':
          description: Consumer group successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerGroup'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ConsumerGroups
      operationId: ConsumerGroups_Delete
      description: Deletes a consumer group from the specified Event Hub and resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/ConsumerGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Consumer group deleted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ConsumerGroups
      operationId: ConsumerGroups_Get
      description: Gets a description for the specified consumer group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/ConsumerGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the consumer group description.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerGroup'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups?api-version=2024-01-01:
    get:
      tags:
        - ConsumerGroups
      operationId: ConsumerGroups_ListByEventHub
      description: Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/EventHubNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/SkipParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: Successfully retrieved the list of consumer groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerGroupListResult'
        default:
          description: Eventhub error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default?api-version=2024-01-01:
    put:
      tags:
        - NetworkRuleSets
      operationId: NamespacesNetworkRuleSet_CreateOrUpdate
      description: Create or update NetworkRuleSet for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Namespace IpFilterRule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkRuleSet'
      responses:
        '200':
          description: Namespace NetworkRuleSet successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRuleSet'
        default:
          description: ServiceBus error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_CreateOrUpdateNetworkRuleSet
    get:
      tags:
        - NetworkRuleSets
      operationId: NamespacesNetworkRuleSet_Get
      description: Gets NetworkRuleSet for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace NetworkRuleSet successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRuleSet'
        default:
          description: ServiceBus error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_GetNetworkRuleSet
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets?api-version=2024-01-01:
    get:
      tags:
        - NetworkRuleSets
      operationId: NamespacesNetworkRuleSet_List
      description: Gets NetworkRuleSet for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace NetworkRuleSet successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRuleSetListResult'
        default:
          description: ServiceBus error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_ListNetworkRuleSet
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups?api-version=2024-01-01:
    get:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroup_ListByNamespace
      description: Gets a list of application groups for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace ApplicationGroups successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupListResult'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}?api-version=2024-01-01:
    put:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroupApplicationGroup_CreateOrUpdate
      x-ms-azure-resource: true
      description: Creates or updates an ApplicationGroup for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The ApplicationGroup.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroup'
      responses:
        '200':
          description: ApplicationGroup successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroup'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ApplicationGroup_CreateOrUpdateApplicationGroup
    delete:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroup_Delete
      description: Deletes an ApplicationGroup for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ApplicationGroup successfully deleted.
        '204':
          description: No content.
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroup_Get
      description: Gets an ApplicationGroup for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace ApplicationGroup returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroup'
        default:
          description: Eventhub error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default?api-version=2024-01-01:
    patch:
      tags:
        - Event Hubs Clusters Configuration
      operationId: Configuration_Patch
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: Parameters for creating an Event Hubs Cluster resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterQuotaConfigurationProperties'
              required:
                - settings
      description: Replace all specified Event Hubs Cluster settings with those contained in the request body. Leaves the settings not specified in the request body unmodified.
      responses:
        '200':
          description: Event Hubs Cluster settings configuration returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterQuotaConfigurationProperties'
        '201':
          description: Event Hubs Cluster setting configuration request successfully accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterQuotaConfigurationProperties'
        '202':
          description: Event Hubs Cluster update request accepted.
        default:
          description: Event Hubs Cluster error response describing why the get cluster quotas and settings operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Event Hubs Clusters Configuration
      operationId: Configuration_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      description: Get all Event Hubs Cluster settings - a collection of key/value pairs which represent the quotas and settings imposed on the cluster.
      responses:
        '200':
          description: Event Hubs Cluster settings configuration returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterQuotaConfigurationProperties'
        default:
          description: Event Hubs Cluster error response describing why the get cluster quotas and settings operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
