openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Fleet
  description: Fleet cluster enables centralized management of all your clusters at scale.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      type: object
      description: The Resource model definition.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      required:
        - location
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        location:
          type: string
          description: Resource location
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
      type: object
    ProxyResource:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
      description: The resource model definition for an Azure Resource Manager proxy resource. It will not have tags and a location
      x-ms-azure-resource: true
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      properties:
        name:
          type: string
          description: The sku name.
        tier:
          type: string
          description: Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
        capacity:
          type: integer
          format: int64
          description: Specifies the number of virtual machines in the scale set.
      description: 'Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.'
      type: object
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      properties:
        name:
          type: string
          description: The plan ID.
        publisher:
          type: string
          description: The publisher ID.
        product:
          type: string
          description: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
        promotionCode:
          type: string
          description: The promotion code.
      description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
      type: object
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ComputeOperationListResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ComputeOperationValue'
          x-ms-identifiers:
            - name
          description: The list of compute operations
      description: The List Compute Operation operation response.
      type: object
    ComputeOperationValue:
      properties:
        origin:
          type: string
          readOnly: true
          description: The origin of the compute operation.
        name:
          type: string
          readOnly: true
          description: The name of the compute operation.
        display:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ComputeOperationValueDisplay'
      description: Describes the properties of a Compute Operation value.
      type: object
    ComputeOperationValueDisplay:
      properties:
        operation:
          type: string
          readOnly: true
          description: The display name of the compute operation.
        resource:
          type: string
          readOnly: true
          description: The display name of the resource the operation applies to.
        description:
          type: string
          readOnly: true
          description: The description of the operation.
        provider:
          type: string
          readOnly: true
          description: The resource provider for the operation.
      description: Describes the properties of a Compute Operation Value Display.
      type: object
    UsageName:
      properties:
        value:
          type: string
          description: The name of the resource.
        localizedValue:
          type: string
          description: The localized name of the resource.
      description: The Usage Names.
      type: object
    Usage:
      properties:
        unit:
          type: string
          description: An enum describing the unit of usage measurement.
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: false
        currentValue:
          type: integer
          format: int32
          description: The current usage of the resource.
        limit:
          type: integer
          format: int64
          description: The maximum permitted usage of the resource.
        name:
          $ref: '#/components/schemas/UsageName'
          description: The name of the type of usage.
      required:
        - unit
        - currentValue
        - limit
        - name
      description: Describes Compute Resource Usage.
      type: object
    ListUsagesResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers: []
          description: The list of compute resource usages.
        nextLink:
          type: string
          description: The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information.
      required:
        - value
      description: The List Usages operation response.
      type: object
    HyperVGenerationType:
      type: string
      description: Specifies the HyperVGeneration Type
      enum:
        - V1
        - V2
      x-ms-enum:
        name: HyperVGenerationTypes
        modelAsString: true
    InstanceViewStatus:
      properties:
        code:
          type: string
          description: The status code.
        level:
          type: string
          description: The level code.
          enum:
            - Info
            - Warning
            - Error
          x-ms-enum:
            name: StatusLevelTypes
            modelAsString: false
        displayStatus:
          type: string
          description: The short localizable label for the status.
        message:
          type: string
          description: The detailed status message, including for alerts and error messages.
        time:
          type: string
          format: date-time
          description: The time of the status.
      type: object
      description: Instance view status.
    SubResourceWithColocationStatus:
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          description: Resource Id
        colocationStatus:
          $ref: '#/components/schemas/InstanceViewStatus'
          description: Describes colocation status of a resource in the Proximity Placement Group.
      type: object
    VirtualMachineSize:
      properties:
        name:
          type: string
          description: The name of the virtual machine size.
        numberOfCores:
          type: integer
          format: int32
          description: The number of cores supported by the virtual machine size. For Constrained vCPU capable VM sizes, this number represents the total vCPUs of quota that the VM uses. For accurate vCPU count, please refer to https://docs.microsoft.com/azure/virtual-machines/constrained-vcpu or https://docs.microsoft.com/rest/api/compute/resourceskus/list
        osDiskSizeInMB:
          type: integer
          format: int32
          description: The OS disk size, in MB, allowed by the virtual machine size.
        resourceDiskSizeInMB:
          type: integer
          format: int32
          description: The resource disk size, in MB, allowed by the virtual machine size.
        memoryInMB:
          type: integer
          format: int32
          description: The amount of memory, in MB, supported by the virtual machine size.
        maxDataDiskCount:
          type: integer
          format: int32
          description: The maximum number of data disks that can be attached to the virtual machine size.
      description: Describes the properties of a VM size.
      type: object
    VirtualMachineSizeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineSize'
          x-ms-identifiers:
            - name
          description: The list of virtual machine sizes.
      description: The List Virtual Machine operation response.
      type: object
    HardwareProfile:
      properties:
        vmSize:
          type: string
          description: 'Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. The recommended way to get the list of available sizes is using these APIs: [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes), [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list), [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). The available VM sizes depend on region and availability set.'
          enum:
            - Basic_A0
            - Basic_A1
            - Basic_A2
            - Basic_A3
            - Basic_A4
            - Standard_A0
            - Standard_A1
            - Standard_A2
            - Standard_A3
            - Standard_A4
            - Standard_A5
            - Standard_A6
            - Standard_A7
            - Standard_A8
            - Standard_A9
            - Standard_A10
            - Standard_A11
            - Standard_A1_v2
            - Standard_A2_v2
            - Standard_A4_v2
            - Standard_A8_v2
            - Standard_A2m_v2
            - Standard_A4m_v2
            - Standard_A8m_v2
            - Standard_B1s
            - Standard_B1ms
            - Standard_B2s
            - Standard_B2ms
            - Standard_B4ms
            - Standard_B8ms
            - Standard_D1
            - Standard_D2
            - Standard_D3
            - Standard_D4
            - Standard_D11
            - Standard_D12
            - Standard_D13
            - Standard_D14
            - Standard_D1_v2
            - Standard_D2_v2
            - Standard_D3_v2
            - Standard_D4_v2
            - Standard_D5_v2
            - Standard_D2_v3
            - Standard_D4_v3
            - Standard_D8_v3
            - Standard_D16_v3
            - Standard_D32_v3
            - Standard_D64_v3
            - Standard_D2s_v3
            - Standard_D4s_v3
            - Standard_D8s_v3
            - Standard_D16s_v3
            - Standard_D32s_v3
            - Standard_D64s_v3
            - Standard_D11_v2
            - Standard_D12_v2
            - Standard_D13_v2
            - Standard_D14_v2
            - Standard_D15_v2
            - Standard_DS1
            - Standard_DS2
            - Standard_DS3
            - Standard_DS4
            - Standard_DS11
            - Standard_DS12
            - Standard_DS13
            - Standard_DS14
            - Standard_DS1_v2
            - Standard_DS2_v2
            - Standard_DS3_v2
            - Standard_DS4_v2
            - Standard_DS5_v2
            - Standard_DS11_v2
            - Standard_DS12_v2
            - Standard_DS13_v2
            - Standard_DS14_v2
            - Standard_DS15_v2
            - Standard_DS13-4_v2
            - Standard_DS13-2_v2
            - Standard_DS14-8_v2
            - Standard_DS14-4_v2
            - Standard_E2_v3
            - Standard_E4_v3
            - Standard_E8_v3
            - Standard_E16_v3
            - Standard_E32_v3
            - Standard_E64_v3
            - Standard_E2s_v3
            - Standard_E4s_v3
            - Standard_E8s_v3
            - Standard_E16s_v3
            - Standard_E32s_v3
            - Standard_E64s_v3
            - Standard_E32-16_v3
            - Standard_E32-8s_v3
            - Standard_E64-32s_v3
            - Standard_E64-16s_v3
            - Standard_F1
            - Standard_F2
            - Standard_F4
            - Standard_F8
            - Standard_F16
            - Standard_F1s
            - Standard_F2s
            - Standard_F4s
            - Standard_F8s
            - Standard_F16s
            - Standard_F2s_v2
            - Standard_F4s_v2
            - Standard_F8s_v2
            - Standard_F16s_v2
            - Standard_F32s_v2
            - Standard_F64s_v2
            - Standard_F72s_v2
            - Standard_G1
            - Standard_G2
            - Standard_G3
            - Standard_G4
            - Standard_G5
            - Standard_GS1
            - Standard_GS2
            - Standard_GS3
            - Standard_GS4
            - Standard_GS5
            - Standard_GS4-8
            - Standard_GS4-4
            - Standard_GS5-16
            - Standard_GS5-8
            - Standard_H8
            - Standard_H16
            - Standard_H8m
            - Standard_H16m
            - Standard_H16r
            - Standard_H16mr
            - Standard_L4s
            - Standard_L8s
            - Standard_L16s
            - Standard_L32s
            - Standard_M64s
            - Standard_M64ms
            - Standard_M128s
            - Standard_M128ms
            - Standard_M64-32ms
            - Standard_M64-16ms
            - Standard_M128-64ms
            - Standard_M128-32ms
            - Standard_NC6
            - Standard_NC12
            - Standard_NC24
            - Standard_NC24r
            - Standard_NC6s_v2
            - Standard_NC12s_v2
            - Standard_NC24s_v2
            - Standard_NC24rs_v2
            - Standard_NC6s_v3
            - Standard_NC12s_v3
            - Standard_NC24s_v3
            - Standard_NC24rs_v3
            - Standard_ND6s
            - Standard_ND12s
            - Standard_ND24s
            - Standard_ND24rs
            - Standard_NV6
            - Standard_NV12
            - Standard_NV24
          x-ms-enum:
            name: VirtualMachineSizeTypes
            modelAsString: true
        vmSizeProperties:
          $ref: '#/components/schemas/VMSizeProperties'
          description: 'Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details.'
      description: Specifies the hardware settings for the virtual machine.
      type: object
    VMSizeProperties:
      type: object
      properties:
        vCPUsAvailable:
          type: integer
          format: int32
          description: Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list).
        vCPUsPerCore:
          type: integer
          format: int32
          description: Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**
      description: Specifies VM Size Property settings on the virtual machine.
    ImageReference:
      description: 'Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.'
      properties:
        publisher:
          type: string
          description: The image publisher.
        offer:
          type: string
          description: Specifies the offer of the platform image or marketplace image used to create the virtual machine.
        sku:
          type: string
          description: The image SKU.
        version:
          type: string
          description: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input.
        exactVersion:
          type: string
          readOnly: true
          description: Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
        sharedGalleryImageId:
          type: string
          description: Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
        communityGalleryImageId:
          type: string
          description: Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call.
        id:
          type: string
          description: Resource Id
      type: object
    DiskControllerType:
      type: string
      enum:
        - SCSI
        - NVMe
      x-ms-enum:
        name: DiskControllerTypes
        modelAsString: true
      description: Specifies the disk controller type configured for the VM and VirtualMachineScaleSet. This property is only supported for virtual machines whose operating system disk and VM sku supports Generation 2 (https://docs.microsoft.com/en-us/azure/virtual-machines/generation-2), please check the HyperVGenerations capability returned as part of VM sku capabilities in the response of Microsoft.Compute SKUs api for the region contains V2 (https://docs.microsoft.com/rest/api/compute/resourceskus/list). For more information about Disk Controller Types supported please refer to https://aka.ms/azure-diskcontrollertypes.
    KeyVaultSecretReference:
      properties:
        secretUrl:
          type: string
          description: The URL referencing a secret in a Key Vault.
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing the secret.
      required:
        - secretUrl
        - sourceVault
      description: Describes a reference to Key Vault Secret
      type: object
    DiskEncryptionSetParameters:
      description: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. **Note:** The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          description: Resource Id
      type: object
    KeyVaultKeyReference:
      properties:
        keyUrl:
          type: string
          description: The URL referencing a key encryption key in Key Vault.
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing the key.
      required:
        - keyUrl
        - sourceVault
      description: Describes a reference to Key Vault Key
      type: object
    DiskEncryptionSettings:
      properties:
        diskEncryptionKey:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: Specifies the location of the disk encryption key, which is a Key Vault Secret.
        keyEncryptionKey:
          $ref: '#/components/schemas/KeyVaultKeyReference'
          description: Specifies the location of the key encryption key in Key Vault.
        enabled:
          type: boolean
          description: Specifies whether disk encryption should be enabled on the virtual machine.
      description: Describes a Encryption Settings for a Disk
      type: object
    VMDiskSecurityProfile:
      type: object
      properties:
        securityEncryptionType:
          type: string
          description: Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs.
          enum:
            - VMGuestStateOnly
            - DiskWithVMGuestState
            - NonPersistedTPM
          x-ms-enum:
            name: securityEncryptionTypes
            modelAsString: true
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob.
      description: Specifies the security profile settings for the managed disk. **Note:** It can only be set for Confidential VMs.
    VirtualHardDisk:
      properties:
        uri:
          type: string
          description: Specifies the virtual hard disk's uri.
      description: Describes the uri of a disk.
      type: object
    Caching:
      type: string
      description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage**'
      enum:
        - None
        - ReadOnly
        - ReadWrite
      x-ms-enum:
        name: CachingTypes
        modelAsString: false
    CreateOption:
      type: string
      description: 'Specifies how the virtual machine should be created. Possible values are: **Attach.** This value is used when you are using a specialized disk to create the virtual machine. **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.'
      enum:
        - FromImage
        - Empty
        - Attach
      x-ms-enum:
        name: DiskCreateOptionTypes
        modelAsString: true
    DetachOption:
      type: string
      description: 'Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values are: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. **This feature is still in preview** mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to ''true'' along with setting detachOption: ''ForceDetach''.'
      enum:
        - ForceDetach
      x-ms-enum:
        name: DiskDetachOptionTypes
        modelAsString: true
    DeleteOption:
      type: string
      description: 'Specifies the behavior of the managed disk when the VM gets deleted, for example whether the managed disk is deleted or detached. Supported values are: **Delete.** If this value is used, the managed disk is deleted when VM gets deleted. **Detach.** If this value is used, the managed disk is retained after VM gets deleted. Minimum api-version: 2021-03-01.'
      enum:
        - Delete
        - Detach
      x-ms-enum:
        name: DiskDeleteOptionTypes
        modelAsString: true
    StorageAccountType:
      type: string
      description: 'Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks. It cannot be used with OS Disk. Standard_LRS uses Standard HDD. StandardSSD_LRS uses Standard SSD. Premium_LRS uses Premium SSD. UltraSSD_LRS uses Ultra disk. Premium_ZRS uses Premium SSD zone redundant storage. StandardSSD_ZRS uses Standard SSD zone redundant storage. For more information regarding disks supported for Windows Virtual Machines, refer to https://docs.microsoft.com/azure/virtual-machines/windows/disks-types and, for Linux Virtual Machines, refer to https://docs.microsoft.com/azure/virtual-machines/linux/disks-types'
      enum:
        - Standard_LRS
        - Premium_LRS
        - StandardSSD_LRS
        - UltraSSD_LRS
        - Premium_ZRS
        - StandardSSD_ZRS
        - PremiumV2_LRS
      x-ms-enum:
        name: StorageAccountTypes
        modelAsString: true
    DiffDiskOption:
      type: string
      description: Specifies the ephemeral disk option for operating system disk.
      enum:
        - Local
      x-ms-enum:
        name: DiffDiskOptions
        modelAsString: true
    DiffDiskPlacement:
      type: string
      description: Specifies the ephemeral disk placement for operating system disk. This property can be used by user in the request to choose the location i.e, cache disk or resource disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer Ephemeral OS disk size requirements for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements
      enum:
        - CacheDisk
        - ResourceDisk
      x-ms-enum:
        name: DiffDiskPlacement
        modelAsString: true
    DiffDiskSettings:
      properties:
        option:
          $ref: '#/components/schemas/DiffDiskOption'
          description: Specifies the ephemeral disk settings for operating system disk.
        placement:
          $ref: '#/components/schemas/DiffDiskPlacement'
          description: 'Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.'
      description: Describes the parameters of ephemeral disk settings that can be specified for operating system disk. **Note:** The ephemeral disk settings can only be specified for managed disk.
      type: object
    ManagedDiskParameters:
      description: The parameters of a managed disk.
      properties:
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed disk.
        securityProfile:
          $ref: '#/components/schemas/VMDiskSecurityProfile'
          description: Specifies the security profile for the managed disk.
        id:
          type: string
          description: Resource Id
      type: object
    OSDisk:
      properties:
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        encryptionSettings:
          $ref: '#/components/schemas/DiskEncryptionSettings'
          description: 'Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15.'
        name:
          type: string
          description: The disk name.
        vhd:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The virtual hard disk.
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        diffDiskSettings:
          $ref: '#/components/schemas/DiffDiskSettings'
          description: Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: 'Specifies how the virtual machine should be created. Possible values are: **Attach.** This value is used when you are using a specialized disk to create the virtual machine. **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described.'
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/ManagedDiskParameters'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether OS Disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the OS disk is deleted when VM is deleted. **Detach.** If this value is used, the os disk is retained after VM is deleted. The default value is set to **Detach**. For an ephemeral OS Disk, the default value is set to **Delete**. The user cannot change the delete option for an ephemeral OS Disk.'
      required:
        - createOption
      description: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
      type: object
    DataDisk:
      properties:
        lun:
          type: integer
          format: int32
          description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        name:
          type: string
          description: The disk name.
        vhd:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The virtual hard disk.
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: 'Specifies how the virtual machine should be created. Possible values are: **Attach.** This value is used when you are using a specialized disk to create the virtual machine. **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described.'
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/ManagedDiskParameters'
        toBeDetached:
          type: boolean
          description: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
        diskIOPSReadWrite:
          type: integer
          readOnly: true
          format: int64
          description: Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        diskMBpsReadWrite:
          type: integer
          readOnly: true
          format: int64
          description: Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        detachOption:
          $ref: '#/components/schemas/DetachOption'
          description: 'Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. **This feature is still in preview** mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to ''true'' along with setting detachOption: ''ForceDetach''.'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**.'
      required:
        - lun
        - createOption
      description: Describes a data disk.
      type: object
    CapacityReservationProfile:
      type: object
      properties:
        capacityReservationGroup:
          $ref: '#/components/schemas/SubResource'
          description: Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details.
      description: The parameters of a capacity reservation Profile.
    StorageProfile:
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
        osDisk:
          $ref: '#/components/schemas/OSDisk'
          description: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/DataDisk'
          x-ms-identifiers:
            - lun
          description: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        diskControllerType:
          $ref: '#/components/schemas/DiskControllerType'
          description: 'Specifies the disk controller type configured for the VM. **Note:** This property will be set to the default disk controller type if not specified provided virtual machine is being created with ''hyperVGeneration'' set to V2 based on the capabilities of the operating system disk and VM size from the the specified minimum api version. You need to deallocate the VM before updating its disk controller type unless you are updating the VM size in the VM configuration which implicitly deallocates and reallocates the VM. Minimum api-version: 2022-08-01.'
      description: Specifies the storage settings for the virtual machine disks.
      type: object
    UefiSettings:
      properties:
        secureBootEnabled:
          type: boolean
          description: 'Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01.'
        vTpmEnabled:
          type: boolean
          description: 'Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01.'
      description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01.'
      type: object
    EncryptionIdentity:
      type: object
      properties:
        userAssignedIdentityResourceId:
          type: string
          description: Specifies ARM Resource ID of one of the user identities associated with the VM.
      description: Specifies the Managed Identity used by ADE to get access token for keyvault operations.
    ProxyAgentSettings:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set.
        mode:
          type: string
          description: Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode.
          enum:
            - Audit
            - Enforce
          x-ms-enum:
            name: Mode
            modelAsString: true
        keyIncarnationId:
          type: integer
          format: int32
          description: Increase the value of this property allows user to reset the key used for securing communication channel between guest and host.
      description: 'Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01.'
    SecurityProfile:
      properties:
        uefiSettings:
          $ref: '#/components/schemas/UefiSettings'
          description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01.'
        encryptionAtHost:
          type: boolean
          description: 'This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource.'
        securityType:
          type: string
          description: 'Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.'
          enum:
            - TrustedLaunch
            - ConfidentialVM
          x-ms-enum:
            name: SecurityTypes
            modelAsString: true
        encryptionIdentity:
          $ref: '#/components/schemas/EncryptionIdentity'
          description: Specifies the Managed Identity used by ADE to get access token for keyvault operations.
        proxyAgentSettings:
          $ref: '#/components/schemas/ProxyAgentSettings'
          description: 'Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01.'
      description: Specifies the Security profile settings for the virtual machine or virtual machine scale set.
      type: object
    VMGalleryApplication:
      type: object
      properties:
        tags:
          type: string
          description: Optional, Specifies a passthrough value for more generic context.
        order:
          type: integer
          format: int32
          description: Optional, Specifies the order in which the packages have to be installed
        packageReferenceId:
          type: string
          description: Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
        configurationReference:
          type: string
          description: Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided
        treatFailureAsDeploymentFailure:
          type: boolean
          description: Optional, If true, any failure for any operation in the VmApplication will fail the deployment
        enableAutomaticUpgrade:
          type: boolean
          description: If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS
      required:
        - packageReferenceId
      description: Specifies the required information to reference a compute gallery application version
    ApplicationProfile:
      type: object
      properties:
        galleryApplications:
          type: array
          items:
            $ref: '#/components/schemas/VMGalleryApplication'
          x-ms-identifiers:
            - packageReferenceId
          description: Specifies the gallery applications that should be made available to the VM/VMSS
      description: Contains the list of gallery applications that should be made available to the VM/VMSS
    AdditionalCapabilities:
      properties:
        ultraSSDEnabled:
          type: boolean
          description: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.
        hibernationEnabled:
          type: boolean
          description: The flag that enables or disables hibernation capability on the VM.
      description: Enables or disables a capability on the virtual machine or virtual machine scale set.
      type: object
    AdditionalUnattendContent:
      properties:
        passName:
          type: string
          description: The pass name. Currently, the only allowable value is OobeSystem.
          enum:
            - OobeSystem
          x-ms-enum:
            name: PassNames
            modelAsString: false
        componentName:
          type: string
          description: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
          enum:
            - Microsoft-Windows-Shell-Setup
          x-ms-enum:
            name: ComponentNames
            modelAsString: false
        settingName:
          type: string
          description: 'Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.'
          enum:
            - AutoLogon
            - FirstLogonCommands
          x-ms-enum:
            name: SettingNames
            modelAsString: false
        content:
          type: string
          description: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
      description: Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
      type: object
    WinRMListener:
      properties:
        protocol:
          type: string
          description: 'Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**'
          enum:
            - Http
            - Https
          x-ms-enum:
            name: ProtocolTypes
            modelAsString: false
        certificateUrl:
          type: string
          description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
      description: Describes Protocol and thumbprint of Windows Remote Management listener
      type: object
    WinRMConfiguration:
      properties:
        listeners:
          type: array
          items:
            $ref: '#/components/schemas/WinRMListener'
          x-ms-identifiers: []
          description: The list of Windows Remote Management listeners
      description: Describes Windows Remote Management configuration of the VM
      type: object
    WindowsConfiguration:
      properties:
        provisionVMAgent:
          type: boolean
          description: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
        enableAutomaticUpdates:
          type: boolean
          description: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
        timeZone:
          type: string
          description: Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        additionalUnattendContent:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalUnattendContent'
          x-ms-identifiers: []
          description: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
        patchSettings:
          $ref: '#/components/schemas/PatchSettings'
          description: '[Preview Feature] Specifies settings related to VM Guest Patching on Windows.'
        winRM:
          $ref: '#/components/schemas/WinRMConfiguration'
          description: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
        enableVMAgentPlatformUpdates:
          type: boolean
          description: Indicates whether VMAgent Platform Updates is enabled for the Windows virtual machine. Default value is false.
      description: Specifies Windows operating system settings on the virtual machine.
      type: object
    SshPublicKey:
      properties:
        path:
          type: string
          description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
        keyData:
          type: string
          description: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
      description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
      type: object
    SshConfiguration:
      properties:
        publicKeys:
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers:
            - path
          description: The list of SSH public keys used to authenticate with linux based VMs.
      description: SSH configuration for Linux based VMs running on Azure
      type: object
    LinuxConfiguration:
      properties:
        disablePasswordAuthentication:
          type: boolean
          description: Specifies whether password authentication should be disabled.
        ssh:
          $ref: '#/components/schemas/SshConfiguration'
          description: Specifies the ssh key configuration for a Linux OS.
        provisionVMAgent:
          type: boolean
          description: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
        patchSettings:
          $ref: '#/components/schemas/LinuxPatchSettings'
          description: '[Preview Feature] Specifies settings related to VM Guest Patching on Linux.'
        enableVMAgentPlatformUpdates:
          type: boolean
          description: Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false.
      description: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
      type: object
    VaultCertificate:
      properties:
        certificateUrl:
          type: string
          description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
        certificateStore:
          type: string
          description: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
      description: Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
      type: object
    VaultSecretGroup:
      properties:
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
        vaultCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VaultCertificate'
          x-ms-identifiers:
            - certificateUrl
          description: The list of key vault references in SourceVault which contain certificates.
      description: Describes a set of certificates which are all in the same Key Vault.
      type: object
    OSProfile:
      properties:
        computerName:
          type: string
          description: Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. **Max-length (Windows):** 15 characters. **Max-length (Linux):** 64 characters. For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules).
        adminUsername:
          type: string
          description: Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters.
        adminPassword:
          type: string
          description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
          x-ms-secret: true
        customData:
          type: string
          description: 'Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property ''customData'' is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init).'
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: Specifies Windows operating system settings on the virtual machine.
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
          description: Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        allowExtensionOperations:
          type: boolean
          description: Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine.
        requireGuestProvisionSignal:
          type: boolean
          description: Optional property which must either be set to True or omitted.
      description: Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
      type: object
    NetworkInterfaceReferenceProperties:
      properties:
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
      description: Describes a network interface reference properties.
      type: object
    NetworkInterfaceReference:
      description: Describes a network interface reference.
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetworkInterfaceReferenceProperties'
        id:
          type: string
          description: Resource Id
      type: object
    PublicIPAddressSku:
      properties:
        name:
          type: string
          description: Specify public IP sku name
          enum:
            - Basic
            - Standard
          x-ms-enum:
            name: PublicIPAddressSkuName
            modelAsString: true
        tier:
          type: string
          description: Specify public IP sku tier
          enum:
            - Regional
            - Global
          x-ms-enum:
            name: PublicIPAddressSkuTier
            modelAsString: true
      description: Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible.
      type: object
    NetworkProfile:
      properties:
        networkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceReference'
          description: Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
        networkApiVersion:
          type: string
          description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations
          enum:
            - '2020-11-01'
          x-ms-enum:
            name: NetworkApiVersion
            modelAsString: true
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineNetworkInterfaceConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the networking configurations that will be used to create the virtual machine networking resources.
      description: Specifies the network interfaces or the networking configuration of the virtual machine.
      type: object
    BootDiagnostics:
      properties:
        enabled:
          type: boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
        storageUri:
          type: string
          description: Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
      description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.
      type: object
    DiagnosticsProfile:
      properties:
        bootDiagnostics:
          $ref: '#/components/schemas/BootDiagnostics'
          description: 'Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.'
      description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
      type: object
    priority:
      type: string
      description: Specifies the priority for a standalone virtual machine or the virtual machines in the scale set. 'Low' enum will be deprecated in the future, please use 'Spot' as the enum to deploy Azure Spot VM/VMSS.
      enum:
        - Regular
        - Low
        - Spot
      x-ms-enum:
        name: VirtualMachinePriorityTypes
        modelAsString: true
    evictionPolicy:
      type: string
      description: Specifies the eviction policy for the Azure Spot VM/VMSS
      enum:
        - Deallocate
        - Delete
      x-ms-enum:
        name: VirtualMachineEvictionPolicyTypes
        modelAsString: true
    BillingProfile:
      properties:
        maxPrice:
          type: number
          format: double
          description: 'Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.'
      description: 'Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01.'
      type: object
    DiskInstanceView:
      properties:
        name:
          type: string
          description: The disk name.
        encryptionSettings:
          type: array
          items:
            $ref: '#/components/schemas/DiskEncryptionSettings'
          x-ms-identifiers:
            - diskEncryptionKey/sourceVault/id
          description: 'Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of the disk.
      type: object
    BootDiagnosticsInstanceView:
      properties:
        consoleScreenshotBlobUri:
          readOnly: true
          type: string
          description: The console screenshot blob URI. **Note:** This will **not** be set if boot diagnostics is currently enabled with managed storage.
        serialConsoleLogBlobUri:
          readOnly: true
          type: string
          description: The serial console log blob Uri. **Note:** This will **not** be set if boot diagnostics is currently enabled with managed storage.
        status:
          readOnly: true
          $ref: '#/components/schemas/InstanceViewStatus'
          description: The boot diagnostics status information for the VM. **Note:** It will be set only if there are errors encountered in enabling boot diagnostics.
      description: The instance view of a virtual machine boot diagnostics.
      type: object
    MaintenanceRedeployStatus:
      properties:
        isCustomerInitiatedMaintenanceAllowed:
          type: boolean
          description: True, if customer is allowed to perform Maintenance.
        preMaintenanceWindowStartTime:
          type: string
          format: date-time
          description: Start Time for the Pre Maintenance Window.
        preMaintenanceWindowEndTime:
          type: string
          format: date-time
          description: End Time for the Pre Maintenance Window.
        maintenanceWindowStartTime:
          type: string
          format: date-time
          description: Start Time for the Maintenance Window.
        maintenanceWindowEndTime:
          type: string
          format: date-time
          description: End Time for the Maintenance Window.
        lastOperationResultCode:
          type: string
          description: The Last Maintenance Operation Result Code.
          enum:
            - None
            - RetryLater
            - MaintenanceAborted
            - MaintenanceCompleted
          x-ms-enum:
            name: MaintenanceOperationResultCodeTypes
            modelAsString: false
        lastOperationMessage:
          type: string
          description: Message returned for the last Maintenance Operation.
      description: Maintenance Operation Status.
      type: object
    ApiEntityReference:
      properties:
        id:
          type: string
          description: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
      description: The API entity reference.
      type: object
    RollbackStatusInfo:
      properties:
        successfullyRolledbackInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances which have been successfully rolled back.
        failedRolledbackInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances which failed to rollback.
        rollbackError:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: Error details if OS rollback failed.
      description: Information about rollback on failed VM instances after a OS Upgrade operation.
      type: object
    ScheduledEventsProfile:
      type: object
      properties:
        terminateNotificationProfile:
          $ref: '#/components/schemas/TerminateNotificationProfile'
          description: Specifies Terminate Scheduled Event related configurations.
        osImageNotificationProfile:
          $ref: '#/components/schemas/OSImageNotificationProfile'
          description: Specifies OS Image Scheduled Event related configurations.
    TerminateNotificationProfile:
      type: object
      properties:
        notBeforeTimeout:
          type: string
          description: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)
        enable:
          type: boolean
          description: Specifies whether the Terminate Scheduled event is enabled or disabled.
    OSImageNotificationProfile:
      type: object
      properties:
        notBeforeTimeout:
          type: string
          description: Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)
        enable:
          type: boolean
          description: Specifies whether the OS Image Scheduled event is enabled or disabled.
    UpdateResource:
      type: object
      description: The Update Resource model definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
    PatchSettings:
      properties:
        patchMode:
          type: string
          description: 'Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true '
          enum:
            - Manual
            - AutomaticByOS
            - AutomaticByPlatform
          x-ms-enum:
            name: WindowsVMGuestPatchMode
            modelAsString: true
        enableHotpatching:
          type: boolean
          description: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.
        assessmentMode:
          type: string
          description: 'Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. '
          enum:
            - ImageDefault
            - AutomaticByPlatform
          x-ms-enum:
            name: WindowsPatchAssessmentMode
            modelAsString: true
        automaticByPlatformSettings:
          $ref: '#/components/schemas/WindowsVMGuestPatchAutomaticByPlatformSettings'
          description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows.
      description: Specifies settings related to VM Guest Patching on Windows.
      type: object
    LinuxPatchSettings:
      properties:
        patchMode:
          type: string
          description: Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
          enum:
            - ImageDefault
            - AutomaticByPlatform
          x-ms-enum:
            name: LinuxVMGuestPatchMode
            modelAsString: true
        assessmentMode:
          type: string
          description: Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
          enum:
            - ImageDefault
            - AutomaticByPlatform
          x-ms-enum:
            name: LinuxPatchAssessmentMode
            modelAsString: true
        automaticByPlatformSettings:
          $ref: '#/components/schemas/LinuxVMGuestPatchAutomaticByPlatformSettings'
          description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux.
      description: Specifies settings related to VM Guest Patching on Linux.
      type: object
    WindowsVMGuestPatchAutomaticByPlatformSettings:
      type: object
      properties:
        rebootSetting:
          type: string
          description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
          enum:
            - Unknown
            - IfRequired
            - Never
            - Always
          x-ms-enum:
            name: WindowsVMGuestPatchAutomaticByPlatformRebootSetting
            modelAsString: true
        bypassPlatformSafetyChecksOnUserSchedule:
          type: boolean
          description: Enables customer to schedule patching without accidental upgrades
      description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Windows patch settings.
    LinuxVMGuestPatchAutomaticByPlatformSettings:
      type: object
      properties:
        rebootSetting:
          type: string
          description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
          enum:
            - Unknown
            - IfRequired
            - Never
            - Always
          x-ms-enum:
            name: LinuxVMGuestPatchAutomaticByPlatformRebootSetting
            modelAsString: true
        bypassPlatformSafetyChecksOnUserSchedule:
          type: boolean
          description: Enables customer to schedule patching without accidental upgrades
      description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Linux patch settings.
    AttachDetachDataDisksRequest:
      type: object
      properties:
        dataDisksToAttach:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataDisksToAttach'
          x-ms-identifiers:
            - diskId
          description: The list of managed data disks to be attached.
        dataDisksToDetach:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataDisksToDetach'
          x-ms-identifiers:
            - diskId
          description: The list of managed data disks to be detached.
      description: Specifies the input for attaching and detaching a list of managed data disks.
    DataDisksToAttach:
      type: object
      properties:
        diskId:
          type: string
          description: ID of the managed data disk.
        lun:
          type: integer
          format: int32
          description: The logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. If not specified, lun would be auto assigned.
      required:
        - diskId
      description: Describes the data disk to be attached.
    DataDisksToDetach:
      type: object
      properties:
        diskId:
          type: string
          description: ID of the managed data disk.
        detachOption:
          $ref: '#/components/schemas/DetachOption'
          description: Supported options available for Detach of a disk from a VM. Refer to DetachOption object reference for more details.
      required:
        - diskId
      description: Describes the data disk to be detached.
    Azure.ResourceManager.Legacy.ManagedServiceIdentityType:
      type: string
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
        values:
          - name: None
            value: None
            description: No managed identity.
          - name: SystemAssigned
            value: SystemAssigned
            description: System assigned managed identity.
          - name: UserAssigned
            value: UserAssigned
            description: User assigned managed identity.
          - name: SystemAndUserAssigned
            value: SystemAssigned, UserAssigned
            description: System and user assigned managed identity.
    BasePriorityProfile:
      type: object
      description: Contains common properties that are applicable to both Spot and Regular.
      properties:
        capacity:
          type: integer
          format: int32
          description: Total capacity to achieve. It is currently in terms of number of VMs.
          minimum: 0
        minCapacity:
          type: integer
          format: int32
          description: Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
          minimum: 0
    ComputeProfile:
      type: object
      description: Compute Profile to use for running user's workloads.
      properties:
        baseVirtualMachineProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProfile'
          description: Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
        computeApiVersion:
          type: string
          description: |-
            Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
            The default value will be the latest supported computeApiVersion by Compute Fleet.
        platformFaultDomainCount:
          type: integer
          format: int32
          description: |-
            Specifies the number of fault domains to use when creating the underlying VMSS.
            A fault domain is a logical group of hardware within an Azure datacenter.
            VMs in the same fault domain share a common power source and network switch.
            If not specified, defaults to 1, which represents "Max Spreading" (using as many fault domains as possible).
            This property cannot be updated.
      required:
        - baseVirtualMachineProfile
    ComputeProfileUpdate:
      type: object
      description: Compute Profile to use for running user's workloads.
      properties:
        baseVirtualMachineProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProfile'
          description: Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
        computeApiVersion:
          type: string
          description: |-
            Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
            The default value will be the latest supported computeApiVersion by Compute Fleet.
        platformFaultDomainCount:
          type: integer
          format: int32
          description: |-
            Specifies the number of fault domains to use when creating the underlying VMSS.
            A fault domain is a logical group of hardware within an Azure datacenter.
            VMs in the same fault domain share a common power source and network switch.
            If not specified, defaults to 1, which represents "Max Spreading" (using as many fault domains as possible).
            This property cannot be updated.
    EvictionPolicy:
      type: string
      description: Different kind of eviction policies
      enum:
        - Delete
        - Deallocate
      x-ms-enum:
        name: EvictionPolicy
        modelAsString: true
        values:
          - name: Delete
            value: Delete
            description: When evicted, the Spot VM will be deleted and the corresponding capacity will be updated to reflect this.
          - name: Deallocate
            value: Deallocate
            description: When evicted, the Spot VM will be deallocated/stopped
    Fleet:
      description: An Compute Fleet resource
      properties:
        properties:
          $ref: '#/components/schemas/FleetProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        zones:
          type: array
          description: Zones in which the Compute Fleet is available
          items:
            type: string
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        plan:
          $ref: '#/components/schemas/Plan'
          description: Details of the resource plan.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    FleetListResult:
      type: object
      description: The response of a Fleet list operation.
      properties:
        value:
          type: array
          description: The Fleet items on this page
          items:
            $ref: '#/components/schemas/Fleet'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    FleetProperties:
      type: object
      description: Details of the Compute Fleet.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
        spotPriorityProfile:
          $ref: '#/components/schemas/SpotPriorityProfile'
          description: Configuration Options for Spot instances in Compute Fleet.
        regularPriorityProfile:
          $ref: '#/components/schemas/RegularPriorityProfile'
          description: Configuration Options for Regular instances in Compute Fleet.
        vmSizesProfile:
          type: array
          description: List of VM sizes supported for Compute Fleet
          items:
            $ref: '#/components/schemas/VmSizeProfile'
          x-ms-identifiers: []
        computeProfile:
          $ref: '#/components/schemas/ComputeProfile'
          description: Compute Profile to use for running user's workloads.
      required:
        - vmSizesProfile
        - computeProfile
    FleetPropertiesUpdate:
      type: object
      description: Details of the Compute Fleet.
      properties:
        spotPriorityProfile:
          $ref: '#/components/schemas/SpotPriorityProfile'
          description: Configuration Options for Spot instances in Compute Fleet.
        regularPriorityProfile:
          $ref: '#/components/schemas/RegularPriorityProfile'
          description: Configuration Options for Regular instances in Compute Fleet.
        vmSizesProfile:
          type: array
          description: List of VM sizes supported for Compute Fleet
          items:
            $ref: '#/components/schemas/VmSizeProfile'
          x-ms-identifiers: []
        computeProfile:
          $ref: '#/components/schemas/ComputeProfileUpdate'
          description: Compute Profile to use for running user's workloads.
    FleetUpdate:
      description: Fleet Update Model
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentityUpdate'
          description: Updatable managed service identity
        plan:
          $ref: '#/components/schemas/ResourcePlanUpdate'
          description: Updatable resource plan
        properties:
          $ref: '#/components/schemas/FleetPropertiesUpdate'
          description: RP-specific updatable properties
      type: object
    ManagedServiceIdentityUpdate:
      type: object
      description: The template for adding optional properties.
      properties:
        type:
          $ref: '#/components/schemas/Azure.ResourceManager.Legacy.ManagedServiceIdentityType'
          description: The type of managed identity assigned to this resource.
        userAssignedIdentities:
          type: object
          description: The identities assigned to this resource by the user.
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
    ProvisioningState:
      type: string
      description: The status of the current operation.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Updating
        - Deleting
        - Migrating
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Creating
            value: Creating
            description: Initial creation in progress.
          - name: Updating
            value: Updating
            description: Update in progress.
          - name: Deleting
            value: Deleting
            description: Deletion in progress.
          - name: Migrating
            value: Migrating
            description: Resource is being migrated from one subscription or resource group to another.
      readOnly: true
    RegularPriorityAllocationStrategy:
      type: string
      description: Regular VM Allocation strategy types for Compute Fleet
      enum:
        - LowestPrice
        - Prioritized
      x-ms-enum:
        name: RegularPriorityAllocationStrategy
        modelAsString: true
        values:
          - name: LowestPrice
            value: LowestPrice
            description: Default. VM sizes distribution will be determined to optimize for price.
          - name: Prioritized
            value: Prioritized
            description: VM sizes distribution will be determined to optimize for the 'priority' as specified for each vm size.
    RegularPriorityProfile:
      type: object
      description: Configuration Options for Regular instances in Compute Fleet.
      properties:
        capacity:
          type: integer
          format: int32
          description: Total capacity to achieve. It is currently in terms of number of VMs.
          minimum: 0
        minCapacity:
          type: integer
          format: int32
          description: Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
          minimum: 0
        allocationStrategy:
          $ref: '#/components/schemas/RegularPriorityAllocationStrategy'
          description: Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
    ResourcePlanUpdate:
      type: object
      description: The template for adding optional properties.
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
    SpotAllocationStrategy:
      type: string
      description: Spot allocation strategy types for Compute Fleet
      enum:
        - PriceCapacityOptimized
        - LowestPrice
        - CapacityOptimized
      x-ms-enum:
        name: SpotAllocationStrategy
        modelAsString: true
        values:
          - name: PriceCapacityOptimized
            value: PriceCapacityOptimized
            description: Default. VM sizes distribution will be determined to optimize for both price and capacity.
          - name: LowestPrice
            value: LowestPrice
            description: 'VM sizes distribution will be determined to optimize for price. Note: Capacity will still be considered here but will be given much less weight.'
          - name: CapacityOptimized
            value: CapacityOptimized
            description: VM sizes distribution will be determined to optimize for capacity.
    SpotPriorityProfile:
      type: object
      description: Configuration Options for Spot instances in Compute Fleet.
      properties:
        capacity:
          type: integer
          format: int32
          description: Total capacity to achieve. It is currently in terms of number of VMs.
          minimum: 0
        minCapacity:
          type: integer
          format: int32
          description: Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
          minimum: 0
        maxPricePerVM:
          type: number
          format: float
          description: Price per hour of each Spot VM will never exceed this.
        evictionPolicy:
          $ref: '#/components/schemas/EvictionPolicy'
          description: Eviction Policy to follow when evicting Spot VMs.
        allocationStrategy:
          $ref: '#/components/schemas/SpotAllocationStrategy'
          description: Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
        maintain:
          type: boolean
          description: |-
            Flag to enable/disable continuous goal seeking for the desired capacity and restoration of evicted Spot VMs.
            If maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to create new VMs (if VMs are evicted deleted)
            or update existing VMs with new VM sizes (if VMs are evicted deallocated or failed to allocate due to capacity constraint) in order to achieve the desired capacity.
            Maintain is enabled by default.
    VirtualMachineScaleSet:
      description: Describes a Virtual Machine Scale Set.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The virtual machine scale set sku.
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetProperties'
        identity:
          $ref: '#/components/schemas/VirtualMachineScaleSetIdentity'
          description: The identity of the virtual machine scale set, if configured.
        zones:
          type: array
          items:
            type: string
          description: 'The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the Virtual Machine Scale Set.
        etag:
          readOnly: true
          type: string
          description: Etag is property returned in Create/Update/Get response of the VMSS, so that customer can supply it in the header to ensure optimistic updates
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineScaleSetListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSet'
          description: The list of virtual machine scale sets.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of VMSS.
      required:
        - value
      description: The List Virtual Machine operation response.
      type: object
    VmSizeProfile:
      type: object
      description: Specifications about a VM Size. This will also contain the corresponding rank and weight in future.
      properties:
        name:
          type: string
          description: The Sku name (e.g. 'Standard_DS1_v2')
        rank:
          type: integer
          format: int32
          description: |-
            The rank of the VM size. This is used with 'RegularPriorityAllocationStrategy.Prioritized'
            The lower the number, the higher the priority. Starting with 0.
          minimum: 0
          maximum: 65535
      required:
        - name
    ApiErrorBase:
      type: object
      properties:
        code:
          type: string
          description: The error code.
        target:
          type: string
          description: The target of the particular error.
        message:
          type: string
          description: The error message.
      description: Api error base.
    InnerError:
      type: object
      properties:
        exceptiontype:
          type: string
          description: The exception type.
        errordetail:
          type: string
          description: The internal error message or exception dump.
      description: Inner error details.
    CloudError:
      type: object
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/ApiError'
      description: An error response from the Compute service.
    ApiError:
      type: object
      properties:
        details:
          type: array
          items:
            $ref: '#/components/schemas/ApiErrorBase'
          x-ms-identifiers:
            - message
            - target
          description: The Api error details
        innererror:
          $ref: '#/components/schemas/InnerError'
          description: The Api inner error
        code:
          type: string
          description: The error code.
        target:
          type: string
          description: The target of the particular error.
        message:
          type: string
          description: The error message.
      description: Api error.
    SubResource:
      type: object
      properties:
        id:
          type: string
          description: Resource Id
    SubResourceReadOnly:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
    ResourceWithOptionalLocation:
      type: object
      description: The Resource model definition with location property as optional.
      properties:
        location:
          type: string
          description: Resource location
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      x-ms-azure-resource: true
    ExtendedLocationType:
      type: string
      description: The type of extendedLocation.
      enum:
        - EdgeZone
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    ExtendedLocation:
      type: object
      description: The complex type of the extended location.
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    SystemData:
      description: The system meta data relating to this resource.
      type: object
      properties:
        createdAt:
          format: date-time
          description: 'Specifies the time in UTC at which the Cloud Service (extended support) resource was created. <br />Minimum api-version: 2022-04-04.'
          type: string
          readOnly: true
        lastModifiedAt:
          format: date-time
          description: 'Specifies the time in UTC at which the Cloud Service (extended support) resource was last modified. <br />Minimum api-version: 2022-04-04.'
          type: string
          readOnly: true
    VirtualMachineScaleSetVMExtension:
      description: Describes a VMSS VM Extension.
      x-ms-azure-resource: true
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: The location of the extension.
          x-ms-mutability:
            - read
            - create
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetVMExtensionUpdate:
      description: Describes a VMSS VM Extension.
      x-ms-azure-resource: true
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionUpdateProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetVMExtensionsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
          description: The list of VMSS VM extensions
      description: The List VMSS VM Extension operation response
      type: object
    VirtualMachineScaleSetHardwareProfile:
      type: object
      properties:
        vmSizeProperties:
          $ref: '#/components/schemas/VMSizeProperties'
          description: 'Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-11-01. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details.'
      description: Specifies the hardware settings for the virtual machine scale set.
    AutomaticRepairsPolicy:
      properties:
        enabled:
          type: boolean
          description: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
        gracePeriod:
          type: string
          description: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 10 minutes (PT10M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).
        repairAction:
          type: string
          description: Type of repair action (replace, restart, reimage) that will be used for repairing unhealthy virtual machines in the scale set. Default value is replace.
          enum:
            - Replace
            - Restart
            - Reimage
          x-ms-enum:
            name: RepairAction
            modelAsString: true
      description: Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
      type: object
    AutomaticOSUpgradePolicy:
      properties:
        enableAutomaticOSUpgrade:
          type: boolean
          description: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true.
        disableAutomaticRollback:
          type: boolean
          description: Whether OS image rollback feature should be disabled. Default value is false.
        useRollingUpgradePolicy:
          type: boolean
          description: Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Default value is false. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS.
        osRollingUpgradeDeferral:
          type: boolean
          description: Indicates whether Auto OS Upgrade should undergo deferral. Deferred OS upgrades will send advanced notifications on a per-VM basis that an OS upgrade from rolling upgrades is incoming, via the IMDS tag 'Platform.PendingOSUpgrade'. The upgrade then defers until the upgrade is approved via an ApproveRollingUpgrade call.
      description: The configuration parameters used for performing automatic OS upgrade.
      type: object
    UpgradePolicy:
      properties:
        mode:
          type: string
          description: Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
          enum:
            - Automatic
            - Manual
            - Rolling
          x-ms-enum:
            name: UpgradeMode
            modelAsString: false
        rollingUpgradePolicy:
          $ref: '#/components/schemas/RollingUpgradePolicy'
          description: The configuration parameters used while performing a rolling upgrade.
        automaticOSUpgradePolicy:
          $ref: '#/components/schemas/AutomaticOSUpgradePolicy'
          description: Configuration parameters used for performing automatic OS Upgrade.
      description: Describes an upgrade policy - automatic, manual, or rolling.
      type: object
    ResiliencyPolicy:
      type: object
      properties:
        resilientVMCreationPolicy:
          $ref: '#/components/schemas/ResilientVMCreationPolicy'
          description: The configuration parameters used while performing resilient VM creation.
        resilientVMDeletionPolicy:
          $ref: '#/components/schemas/ResilientVMDeletionPolicy'
          description: The configuration parameters used while performing resilient VM deletion.
      description: Describes an resiliency policy - resilientVMCreationPolicy and/or resilientVMDeletionPolicy.
    ResilientVMCreationPolicy:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies whether resilient VM creation should be enabled on the virtual machine scale set. The default value is false.
      description: The configuration parameters used while performing resilient VM creation.
    ResilientVMDeletionPolicy:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies whether resilient VM deletion should be enabled on the virtual machine scale set. The default value is false.
      description: The configuration parameters used while performing resilient VM deletion.
    RollingUpgradePolicy:
      properties:
        maxBatchInstancePercent:
          type: integer
          format: int32
          minimum: 5
          maximum: 100
          description: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.
        maxUnhealthyInstancePercent:
          type: integer
          format: int32
          minimum: 5
          maximum: 100
          description: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.
        maxUnhealthyUpgradedInstancePercent:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.
        pauseTimeBetweenBatches:
          type: string
          description: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).
        enableCrossZoneUpgrade:
          type: boolean
          description: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size.
        prioritizeUnhealthyInstances:
          type: boolean
          description: Upgrade all unhealthy instances in a scale set before any healthy instances.
        rollbackFailedInstancesOnPolicyBreach:
          type: boolean
          description: Rollback failed instances to previous model if the Rolling Upgrade policy is violated.
        maxSurge:
          type: boolean
          description: Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch.
      description: The configuration parameters used while performing a rolling upgrade.
      type: object
    ScaleInPolicy:
      properties:
        rules:
          type: array
          items:
            type: string
            enum:
              - Default
              - OldestVM
              - NewestVM
            x-ms-enum:
              name: VirtualMachineScaleSetScaleInRules
              modelAsString: true
          description: 'The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>'
        forceDeletion:
          type: boolean
          description: This property allows you to specify if virtual machines chosen for removal have to be force deleted when a virtual machine scale set is being scaled-in.(Feature in Preview)
      description: Describes a scale-in policy for a virtual machine scale set.
      type: object
    SpotRestorePolicy:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enables the Spot-Try-Restore feature where evicted VMSS SPOT instances will be tried to be restored opportunistically based on capacity availability and pricing constraints
        restoreTimeout:
          type: string
          description: Timeout value expressed as an ISO 8601 time duration after which the platform will not try to restore the VMSS SPOT instances
      description: Specifies the Spot-Try-Restore properties for the virtual machine scale set. With this property customer can enable or disable automatic restore of the evicted Spot VMSS VM instances opportunistically based on capacity availability and pricing constraint.
    PriorityMixPolicy:
      type: object
      properties:
        baseRegularPriorityCount:
          type: integer
          format: int32
          minimum: 0
          description: The base number of regular priority VMs that will be created in this scale set as it scales out.
        regularPriorityPercentageAboveBase:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: The percentage of VM instances, after the base regular priority count has been reached, that are expected to use regular priority.
      description: Specifies the target splits for Spot and Regular priority VMs within a scale set with flexible orchestration mode. With this property the customer is able to specify the base number of regular priority VMs created as the VMSS flex instance scales out and the split between Spot and Regular priority VMs after this base target has been reached.
    OrchestrationMode:
      type: string
      description: Specifies the orchestration mode for the virtual machine scale set.
      enum:
        - Uniform
        - Flexible
      x-ms-enum:
        name: OrchestrationMode
        modelAsString: true
    VirtualMachineScaleSetIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of virtual machine scale set identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id associated with the virtual machine scale set. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
          description: 'The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: Identity for the virtual machine scale set.
      type: object
    VirtualMachineScaleSetOSProfile:
      properties:
        computerNamePrefix:
          type: string
          description: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
        adminUsername:
          type: string
          description: Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
        adminPassword:
          type: string
          description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
          x-ms-secret: true
        customData:
          type: string
          description: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: Specifies Windows operating system settings on the virtual machine.
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
          description: Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        allowExtensionOperations:
          type: boolean
          description: Specifies whether extension operations should be allowed on the virtual machine scale set. This may only be set to False when no extensions are present on the virtual machine scale set.
        requireGuestProvisionSignal:
          type: boolean
          description: Optional property which must either be set to True or omitted.
      description: Describes a virtual machine scale set OS profile.
      type: object
    VirtualMachineScaleSetUpdateOSProfile:
      properties:
        customData:
          type: string
          description: A base-64 encoded string of custom data.
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: The Windows Configuration of the OS profile.
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: The Linux Configuration of the OS profile.
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
          description: The List of certificates for addition to the VM.
      description: Describes a virtual machine scale set OS profile.
      type: object
    VirtualMachineScaleSetManagedDiskParameters:
      properties:
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed disk.
        securityProfile:
          $ref: '#/components/schemas/VMDiskSecurityProfile'
          description: Specifies the security profile for the managed disk.
      description: Describes the parameters of a ScaleSet managed disk.
      type: object
    VirtualMachineScaleSetOSDisk:
      properties:
        name:
          type: string
          description: The disk name.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: 'Specifies how the virtual machines in the scale set should be created. The only allowed value is: **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.'
        diffDiskSettings:
          $ref: '#/components/schemas/DiffDiskSettings'
          description: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: Specifies information about the unmanaged user image to base the scale set on.
        vhdContainers:
          type: array
          items:
            type: string
          description: Specifies the container urls that are used to store operating system disks for the scale set.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk.'
      required:
        - createOption
      description: Describes a virtual machine scale set operating system disk.
      type: object
    VirtualMachineScaleSetUpdateOSDisk:
      properties:
        caching:
          $ref: '#/components/schemas/Caching'
          description: The caching type.
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
        vhdContainers:
          type: array
          items:
            type: string
          description: The list of virtual hard disk container uris.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk.'
      description: Describes virtual machine scale set operating system disk Update Object. This should be used for Updating VMSS OS Disk.
      type: object
    VirtualMachineScaleSetDataDisk:
      properties:
        name:
          type: string
          description: The disk name.
        lun:
          type: integer
          format: int32
          description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: The create option.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
        diskIOPSReadWrite:
          type: integer
          format: int64
          description: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
        diskMBpsReadWrite:
          type: integer
          format: int64
          description: Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether data disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only).<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VMSS Flex VM is deleted.<br><br> The default value is set to **Delete**.'
      required:
        - lun
        - createOption
      description: Describes a virtual machine scale set data disk.
      type: object
    VirtualMachineScaleSetStorageProfile:
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
        osDisk:
          $ref: '#/components/schemas/VirtualMachineScaleSetOSDisk'
          description: Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetDataDisk'
          x-ms-identifiers:
            - name
            - lun
          description: Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        diskControllerType:
          type: string
          items:
            $ref: '#/components/schemas/DiskControllerType'
            description: 'Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01'
      description: Describes a virtual machine scale set storage profile.
      type: object
    VirtualMachineScaleSetUpdateStorageProfile:
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: The image reference.
        osDisk:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateOSDisk'
          description: The OS disk.
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetDataDisk'
          x-ms-identifiers:
            - name
            - lun
          description: The data disks.
        diskControllerType:
          type: string
          items:
            $ref: '#/components/schemas/DiskControllerType'
            description: 'Specifies the disk controller type configured for the virtual machines in the scale set. **Note:** You need to deallocate the virtual machines in the scale set before updating its disk controller type based on the upgrade mode configured for the scale set. Minimum api-version: 2022-08-01.'
      description: Describes a virtual machine scale set storage profile.
      type: object
    VirtualMachineScaleSetIPConfigurationProperties:
      properties:
        subnet:
          $ref: '#/components/schemas/ApiEntityReference'
          description: Specifies the identifier of the subnet.
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfiguration'
          description: The publicIPAddressConfiguration.
        privateIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersion
            modelAsString: true
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to application security group.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        loadBalancerInboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
      description: Describes a virtual machine scale set network profile's IP configuration properties.
      type: object
    VirtualMachineScaleSetUpdateIPConfigurationProperties:
      properties:
        subnet:
          $ref: '#/components/schemas/ApiEntityReference'
          description: The subnet.
        primary:
          type: boolean
          description: Specifies the primary IP Configuration in case the network interface has more than one IP Configuration.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdatePublicIPAddressConfiguration'
          description: The publicIPAddressConfiguration.
        privateIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersion
            modelAsString: true
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The application gateway backend address pools.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to application security group.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The load balancer backend address pools.
        loadBalancerInboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The load balancer inbound nat pools.
      description: Describes a virtual machine scale set network profile's IP configuration properties.
      type: object
    VirtualMachineScaleSetIPConfiguration:
      required:
        - name
      description: Describes a virtual machine scale set network profile's IP configuration.
      properties:
        name:
          type: string
          description: The IP configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetIPConfigurationProperties'
      type: object
    VirtualMachineScaleSetUpdateIPConfiguration:
      description: 'Describes a virtual machine scale set network profile''s IP configuration. NOTE: The subnet of a scale set may be modified as long as the original subnet and the new subnet are in the same virtual network'
      x-ms-azure-resource: true
      properties:
        name:
          type: string
          description: The IP configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateIPConfigurationProperties'
      type: object
    VirtualMachineScaleSetNetworkConfigurationProperties:
      properties:
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        disableTcpStateTracking:
          type: boolean
          description: Specifies whether the network interface is disabled for tcp state tracking.
        enableFpga:
          type: boolean
          description: Specifies whether the network interface is FPGA networking-enabled.
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The network security group.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationDnsSettings'
          description: The dns settings to be applied on the network interfaces.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetIPConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the IP configurations of the network interface.
        enableIPForwarding:
          type: boolean
          description: Whether IP forwarding enabled on this NIC.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        auxiliaryMode:
          type: string
          description: Specifies whether the Auxiliary mode is enabled for the Network Interface resource.
          enum:
            - None
            - AcceleratedConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
        auxiliarySku:
          type: string
          description: Specifies whether the Auxiliary sku is enabled for the Network Interface resource.
          enum:
            - None
            - A1
            - A2
            - A4
            - A8
          x-ms-enum:
            name: NetworkInterfaceAuxiliarySku
            modelAsString: true
      required:
        - ipConfigurations
      description: Describes a virtual machine scale set network profile's IP configuration.
      type: object
    VirtualMachineScaleSetUpdateNetworkConfigurationProperties:
      properties:
        primary:
          type: boolean
          description: Whether this is a primary NIC on a virtual machine.
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        disableTcpStateTracking:
          type: boolean
          description: Specifies whether the network interface is disabled for tcp state tracking.
        enableFpga:
          type: boolean
          description: Specifies whether the network interface is FPGA networking-enabled.
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The network security group.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationDnsSettings'
          description: The dns settings to be applied on the network interfaces.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetUpdateIPConfiguration'
          x-ms-identifiers:
            - name
          description: The virtual machine scale set IP Configuration.
        enableIPForwarding:
          type: boolean
          description: Whether IP forwarding enabled on this NIC.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        auxiliaryMode:
          type: string
          description: Specifies whether the Auxiliary mode is enabled for the Network Interface resource.
          enum:
            - None
            - AcceleratedConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
        auxiliarySku:
          type: string
          description: Specifies whether the Auxiliary sku is enabled for the Network Interface resource.
          enum:
            - None
            - A1
            - A2
            - A4
            - A8
          x-ms-enum:
            name: NetworkInterfaceAuxiliarySku
            modelAsString: true
      description: Describes a virtual machine scale set updatable network profile's IP configuration.Use this object for updating network profile's IP Configuration.
      type: object
    VirtualMachineScaleSetNetworkConfiguration:
      required:
        - name
      description: Describes a virtual machine scale set network profile's network configurations.
      properties:
        name:
          type: string
          description: The network configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationProperties'
      type: object
    VirtualMachineScaleSetUpdateNetworkConfiguration:
      description: Describes a virtual machine scale set network profile's network configurations.
      x-ms-azure-resource: true
      properties:
        name:
          type: string
          description: The network configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateNetworkConfigurationProperties'
      type: object
    VirtualMachineScaleSetNetworkConfigurationDnsSettings:
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: List of DNS servers IP addresses
      description: Describes a virtual machines scale sets network configuration's DNS settings.
      type: object
    VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings:
      properties:
        domainNameLabel:
          type: string
          description: The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created
        domainNameLabelScope:
          type: string
          description: The Domain name label scope.The concatenation of the hashed domain name label that generated according to the policy from domain name label scope and vm index will be the domain name labels of the PublicIPAddress resources that will be created
          enum:
            - TenantReuse
            - SubscriptionReuse
            - ResourceGroupReuse
            - NoReuse
          x-ms-enum:
            name: DomainNameLabelScopeTypes
            modelAsString: true
      required:
        - domainNameLabel
      description: Describes a virtual machines scale sets network configuration's DNS settings.
      type: object
    VirtualMachineScaleSetIpTag:
      properties:
        ipTagType:
          type: string
          description: 'IP tag type. Example: FirstPartyUsage.'
        tag:
          type: string
          description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
      description: Contains the IP tag associated with the public IP address.
      type: object
    VirtualMachineScaleSetPublicIPAddressConfiguration:
      required:
        - name
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      properties:
        name:
          type: string
          description: The publicIP address configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationProperties'
        sku:
          $ref: '#/components/schemas/PublicIPAddressSku'
      type: object
    VirtualMachineScaleSetUpdatePublicIPAddressConfiguration:
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      properties:
        name:
          type: string
          description: The publicIP address configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdatePublicIPAddressConfigurationProperties'
      type: object
    VirtualMachineScaleSetPublicIPAddressConfigurationProperties:
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings'
          description: The dns settings to be applied on the publicIP addresses .
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetIpTag'
          x-ms-identifiers: []
          description: The list of IP tags associated with the public IP address.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The PublicIPPrefix from which to allocate publicIP addresses.
        publicIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersion
            modelAsString: true
        deleteOption:
          type: string
          description: Specify what happens to the public IP when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      type: object
    VirtualMachineScaleSetUpdatePublicIPAddressConfigurationProperties:
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings'
          description: The dns settings to be applied on the publicIP addresses .
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The PublicIPPrefix from which to allocate publicIP addresses.
        deleteOption:
          type: string
          description: Specify what happens to the public IP when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      type: object
    VirtualMachineScaleSetNetworkProfile:
      properties:
        healthProbe:
          $ref: '#/components/schemas/ApiEntityReference'
          description: 'A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}''.'
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfiguration'
          x-ms-identifiers: []
          description: The list of network configurations.
        networkApiVersion:
          type: string
          description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'
          enum:
            - '2020-11-01'
          x-ms-enum:
            name: NetworkApiVersion
            modelAsString: true
      description: Describes a virtual machine scale set network profile.
      type: object
    VirtualMachineScaleSetUpdateNetworkProfile:
      properties:
        healthProbe:
          $ref: '#/components/schemas/ApiEntityReference'
          description: 'A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}''.'
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetUpdateNetworkConfiguration'
          x-ms-identifiers:
            - name
          description: The list of network configurations.
        networkApiVersion:
          type: string
          description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'
          enum:
            - '2020-11-01'
          x-ms-enum:
            name: NetworkApiVersion
            modelAsString: true
      description: Describes a virtual machine scale set network profile.
      type: object
    VirtualMachineScaleSetExtensionProperties:
      properties:
        forceUpdateTag:
          type: string
          description: If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        provisionAfterExtensions:
          type: array
          items:
            type: string
          description: Collection of extension names after which this extension needs to be provisioned.
        suppressFailures:
          type: boolean
          description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: The extensions protected settings that are passed by reference, and consumed from key vault
      description: Describes the properties of a Virtual Machine Scale Set Extension.
      type: object
    VirtualMachineScaleSetExtension:
      description: Describes a Virtual Machine Scale Set Extension.
      properties:
        name:
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetExtensionUpdate:
      description: Describes a Virtual Machine Scale Set Extension.
      x-ms-azure-resource: true
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetExtensionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
          description: The list of VM scale set extensions.
        nextLink:
          type: string
          description: The uri to fetch the next page of VM scale set extensions. Call ListNext() with this to fetch the next page of VM scale set extensions.
      required:
        - value
      description: The List VM scale set extension operation response.
      type: object
    VirtualMachineScaleSetExtensionProfile:
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
          description: The virtual machine scale set child extension resources.
        extensionsTimeBudget:
          type: string
          description: 'Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01.'
      description: Describes a virtual machine scale set extension profile.
      type: object
    VirtualMachineScaleSetVMProfile:
      properties:
        osProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetOSProfile'
          description: Specifies the operating system settings for the virtual machines in the scale set.
        storageProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetStorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        networkProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkProfile'
          description: Specifies properties of the network interfaces of the virtual machines in the scale set.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: Specifies the Security related profile settings for the virtual machines in the scale set.
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
        extensionProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProfile'
          description: Specifies a collection of settings for extensions installed on virtual machines in the scale set.
        licenseType:
          type: string
          description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
        priority:
          $ref: '#/components/schemas/priority'
          description: 'Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview.'
        evictionPolicy:
          $ref: '#/components/schemas/evictionPolicy'
          description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        billingProfile:
          $ref: '#/components/schemas/BillingProfile'
          description: 'Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01.'
        scheduledEventsProfile:
          $ref: '#/components/schemas/ScheduledEventsProfile'
          description: Specifies Scheduled Event related configurations.
        userData:
          type: string
          description: 'UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01.'
        capacityReservation:
          $ref: '#/components/schemas/CapacityReservationProfile'
          description: 'Specifies the capacity reservation related details of a scale set. Minimum api-version: 2021-04-01.'
        applicationProfile:
          $ref: '#/components/schemas/ApplicationProfile'
          description: Specifies the gallery applications that should be made available to the VM/VMSS
        hardwareProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetHardwareProfile'
          description: 'Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01.'
        serviceArtifactReference:
          $ref: '#/components/schemas/ServiceArtifactReference'
          description: 'Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using ''latest'' image version. Minimum api-version: 2022-11-01'
        securityPostureReference:
          $ref: '#/components/schemas/SecurityPostureReference'
          description: 'Specifies the security posture to be used for all virtual machines in the scale set. Minimum api-version: 2023-03-01'
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: Specifies the time in which this VM profile for the Virtual Machine Scale Set was created. Minimum API version for this property is 2023-09-01. This value will be added to VMSS Flex VM tags when creating/updating the VMSS VM Profile with minimum api-version 2023-09-01.
      description: Describes a virtual machine scale set virtual machine profile.
      type: object
    VirtualMachineScaleSetUpdateVMProfile:
      properties:
        osProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateOSProfile'
          description: The virtual machine scale set OS profile.
        storageProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateStorageProfile'
          description: The virtual machine scale set storage profile.
        networkProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateNetworkProfile'
          description: The virtual machine scale set network profile.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: The virtual machine scale set Security profile
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: The virtual machine scale set diagnostics profile.
        extensionProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProfile'
          description: The virtual machine scale set extension profile.
        licenseType:
          type: string
          description: The license type, which is for bring your own license scenario.
        billingProfile:
          $ref: '#/components/schemas/BillingProfile'
          description: 'Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01.'
        scheduledEventsProfile:
          $ref: '#/components/schemas/ScheduledEventsProfile'
          description: Specifies Scheduled Event related configurations.
        userData:
          type: string
          description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01'
        hardwareProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetHardwareProfile'
          description: 'Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01.'
      description: Describes a virtual machine scale set virtual machine profile.
      type: object
    VirtualMachineScaleSetProperties:
      properties:
        upgradePolicy:
          $ref: '#/components/schemas/UpgradePolicy'
          description: The upgrade policy.
        automaticRepairsPolicy:
          $ref: '#/components/schemas/AutomaticRepairsPolicy'
          description: Policy for automatic repairs.
        virtualMachineProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProfile'
          description: The virtual machine profile.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        overprovision:
          type: boolean
          description: Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        doNotRunExtensionsOnOverprovisionedVMs:
          type: boolean
          description: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
        uniqueId:
          readOnly: true
          type: string
          description: Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
        singlePlacementGroup:
          type: boolean
          description: 'When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.'
        zoneBalance:
          type: boolean
          description: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set.
        platformFaultDomainCount:
          type: integer
          format: int32
          description: Fault Domain count for each placement group.
        proximityPlacementGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01.'
        hostGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01.'
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: 'Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.'
        scaleInPolicy:
          $ref: '#/components/schemas/ScaleInPolicy'
          description: Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set.
        orchestrationMode:
          $ref: '#/components/schemas/OrchestrationMode'
          description: Specifies the orchestration mode for the virtual machine scale set.
        spotRestorePolicy:
          $ref: '#/components/schemas/SpotRestorePolicy'
          description: Specifies the Spot Restore properties for the virtual machine scale set.
        priorityMixPolicy:
          $ref: '#/components/schemas/PriorityMixPolicy'
          description: Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance.
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Virtual Machine Scale Set resource was created. Minimum api-version: 2021-11-01.'
        constrainedMaximumCapacity:
          type: boolean
          description: Optional property which must either be set to True or omitted.
        resiliencyPolicy:
          $ref: '#/components/schemas/ResiliencyPolicy'
          description: Policy for Resiliency
      description: Describes the properties of a Virtual Machine Scale Set.
      type: object
    VirtualMachineScaleSetUpdateProperties:
      properties:
        upgradePolicy:
          $ref: '#/components/schemas/UpgradePolicy'
          description: The upgrade policy.
        automaticRepairsPolicy:
          $ref: '#/components/schemas/AutomaticRepairsPolicy'
          description: Policy for automatic repairs.
        virtualMachineProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateVMProfile'
          description: The virtual machine profile.
        overprovision:
          type: boolean
          description: Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        doNotRunExtensionsOnOverprovisionedVMs:
          type: boolean
          description: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
        singlePlacementGroup:
          type: boolean
          description: 'When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.'
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: 'Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.'
        scaleInPolicy:
          $ref: '#/components/schemas/ScaleInPolicy'
          description: Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set.
        proximityPlacementGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.'
        priorityMixPolicy:
          $ref: '#/components/schemas/PriorityMixPolicy'
          description: Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance.
        spotRestorePolicy:
          $ref: '#/components/schemas/SpotRestorePolicy'
          description: Specifies the Spot Restore properties for the virtual machine scale set.
        resiliencyPolicy:
          $ref: '#/components/schemas/ResiliencyPolicy'
          description: Policy for Resiliency
      description: Describes the properties of a Virtual Machine Scale Set.
      type: object
    VirtualMachineScaleSetVMReimageParameters:
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
      properties:
        tempDisk:
          type: boolean
          description: 'Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage parameter is only supported for VM/VMSS with Ephemeral OS disk.'
        exactVersion:
          type: string
          description: Specifies in decimal number, the version the OS disk should be reimaged to. If exact version is not provided, the OS disk is reimaged to the existing version of OS Disk.
        osProfile:
          $ref: '#/components/schemas/OSProfileProvisioningData'
          description: Specifies information required for reimaging the non-ephemeral OS disk.
      type: object
    VirtualMachineScaleSetReimageParameters:
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
      properties:
        instanceIds:
          type: array
          items:
            type: string
          description: The virtual machine scale set instance ids. Omitting the virtual machine scale set instance ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
      type: object
    VirtualMachineScaleSetUpdate:
      description: Describes a Virtual Machine Scale Set.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The virtual machine scale set sku.
        plan:
          $ref: '#/components/schemas/Plan'
          description: The purchase plan when deploying a virtual machine scale set from VM Marketplace images.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateProperties'
        identity:
          $ref: '#/components/schemas/VirtualMachineScaleSetIdentity'
          description: The identity of the virtual machine scale set, if configured.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineScaleSetVMInstanceIDs:
      properties:
        instanceIds:
          type: array
          items:
            type: string
          description: The virtual machine scale set instance ids. Omitting the virtual machine scale set instance ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
      description: Specifies a list of virtual machine instance IDs from the VM scale set.
      type: object
    VirtualMachineScaleSetVMInstanceRequiredIDs:
      properties:
        instanceIds:
          type: array
          items:
            type: string
          description: The virtual machine scale set instance ids.
      required:
        - instanceIds
      description: Specifies a list of virtual machine instance IDs from the VM scale set.
      type: object
    VirtualMachineStatusCodeCount:
      properties:
        code:
          readOnly: true
          type: string
          description: The instance view status code.
        count:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances having a particular status code.
      description: The status code and count of the virtual machine scale set instance view status summary.
      type: object
    VirtualMachineScaleSetInstanceViewStatusesSummary:
      properties:
        statusesSummary:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineStatusCodeCount'
          x-ms-identifiers: []
          description: The extensions information.
      description: Instance view statuses summary for virtual machines of a virtual machine scale set.
      type: object
    VirtualMachineScaleSetVMExtensionsSummary:
      properties:
        name:
          readOnly: true
          type: string
          description: The extension name.
        statusesSummary:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineStatusCodeCount'
          x-ms-identifiers: []
          description: The extensions information.
      description: Extensions summary for virtual machines of a virtual machine scale set.
      type: object
    OrchestrationServiceSummary:
      properties:
        serviceName:
          type: string
          readOnly: true
          description: The name of the service.
          enum:
            - AutomaticRepairs
          x-ms-enum:
            name: OrchestrationServiceNames
            modelAsString: true
        serviceState:
          type: string
          readOnly: true
          description: The current state of the service.
          enum:
            - NotRunning
            - Running
            - Suspended
          x-ms-enum:
            name: OrchestrationServiceState
            modelAsString: true
      description: Summary for an orchestration service of a virtual machine scale set.
      type: object
    VirtualMachineScaleSetInstanceView:
      properties:
        virtualMachine:
          $ref: '#/components/schemas/VirtualMachineScaleSetInstanceViewStatusesSummary'
          readOnly: true
          description: The instance view status summary for the virtual machine scale set.
        extensions:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetVMExtensionsSummary'
          x-ms-identifiers:
            - name
          description: The extensions information.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        orchestrationServices:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/OrchestrationServiceSummary'
          x-ms-identifiers:
            - serviceName
          description: The orchestration services information.
      description: The instance view of a virtual machine scale set.
      type: object
    VirtualMachineScaleSetListWithLinkResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSet'
          description: The list of virtual machine scale sets.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of Virtual Machine Scale Sets.
      required:
        - value
      description: The List Virtual Machine operation response.
      type: object
    VirtualMachineScaleSetSkuCapacity:
      properties:
        minimum:
          readOnly: true
          type: integer
          format: int64
          description: The minimum capacity.
        maximum:
          readOnly: true
          type: integer
          format: int64
          description: The maximum capacity that can be set.
        defaultCapacity:
          readOnly: true
          type: integer
          format: int64
          description: The default capacity.
        scaleType:
          readOnly: true
          type: string
          description: The scale type applicable to the sku.
          enum:
            - Automatic
            - None
          x-ms-enum:
            name: VirtualMachineScaleSetSkuScaleType
            modelAsString: false
      description: Describes scaling information of a sku.
      type: object
    VirtualMachineScaleSetSku:
      properties:
        resourceType:
          readOnly: true
          type: string
          description: The type of resource the sku applies to.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: The Sku.
        capacity:
          $ref: '#/components/schemas/VirtualMachineScaleSetSkuCapacity'
          readOnly: true
          description: Specifies the number of virtual machines in the scale set.
      description: Describes an available virtual machine scale set sku.
      type: object
    VirtualMachineScaleSetListSkusResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetSku'
          x-ms-identifiers:
            - resourceType
            - sku/name
          description: The list of skus available for the virtual machine scale set.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Set Skus. Call ListNext() with this to fetch the next page of VMSS Skus.
      required:
        - value
      description: The Virtual Machine Scale Set List Skus operation response.
      type: object
    UpgradeOperationHistoryStatus:
      properties:
        code:
          type: string
          readOnly: true
          description: Code indicating the current status of the upgrade.
          enum:
            - RollingForward
            - Cancelled
            - Completed
            - Faulted
          x-ms-enum:
            name: UpgradeState
            modelAsString: false
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: Start time of the upgrade.
        endTime:
          readOnly: true
          type: string
          format: date-time
          description: End time of the upgrade.
      description: Information about the current running state of the overall upgrade.
      type: object
    UpgradeOperationHistoricalStatusInfoProperties:
      properties:
        runningStatus:
          $ref: '#/components/schemas/UpgradeOperationHistoryStatus'
          readOnly: true
          description: Information about the overall status of the upgrade operation.
        progress:
          $ref: '#/components/schemas/RollingUpgradeProgressInfo'
          readOnly: true
          description: Counts of the VMs in each state.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: Error Details for this upgrade if there are any.
        startedBy:
          readOnly: true
          type: string
          description: Invoker of the Upgrade Operation
          enum:
            - Unknown
            - User
            - Platform
          x-ms-enum:
            name: UpgradeOperationInvoker
            modelAsString: false
        targetImageReference:
          $ref: '#/components/schemas/ImageReference'
          readOnly: true
          description: Image Reference details
        rollbackInfo:
          $ref: '#/components/schemas/RollbackStatusInfo'
          readOnly: true
          description: Information about OS rollback if performed
      description: Describes each OS upgrade on the Virtual Machine Scale Set.
      type: object
    UpgradeOperationHistoricalStatusInfo:
      description: Virtual Machine Scale Set OS Upgrade History operation response.
      properties:
        properties:
          $ref: '#/components/schemas/UpgradeOperationHistoricalStatusInfoProperties'
          readOnly: true
          description: Information about the properties of the upgrade operation.
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          readOnly: true
          type: string
          description: Resource location
      type: object
    VirtualMachineScaleSetListOSUpgradeHistory:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/UpgradeOperationHistoricalStatusInfo'
          x-ms-identifiers:
            - type
            - location
          description: The list of OS upgrades performed on the virtual machine scale set.
        nextLink:
          type: string
          description: The uri to fetch the next page of OS Upgrade History. Call ListNext() with this to fetch the next page of history of upgrades.
      required:
        - value
      description: List of Virtual Machine Scale Set OS Upgrade History operation response.
      type: object
    VirtualMachineScaleSetVMProperties:
      properties:
        latestModelApplied:
          readOnly: true
          type: boolean
          description: Specifies whether the latest model has been applied to the virtual machine.
        vmId:
          readOnly: true
          type: string
          description: Azure VM unique ID.
        instanceView:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceView'
          readOnly: true
          description: The virtual machine instance view.
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfile'
          description: Specifies the hardware settings for the virtual machine.
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: 'Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type.'
        osProfile:
          $ref: '#/components/schemas/OSProfile'
          description: Specifies the operating system settings for the virtual machine.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: Specifies the Security related profile settings for the virtual machine.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: Specifies the network interfaces of the virtual machine.
        networkProfileConfiguration:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMNetworkProfileConfiguration'
          description: Specifies the network profile configuration of the virtual machine.
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
        availabilitySet:
          $ref: '#/components/schemas/SubResource'
          description: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        licenseType:
          type: string
          description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
        modelDefinitionApplied:
          readOnly: true
          type: string
          description: Specifies whether the model applied to the virtual machine is the model of the virtual machine scale set or the customized model for the virtual machine.
        protectionPolicy:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProtectionPolicy'
          description: Specifies the protection policy of the virtual machine.
        userData:
          type: string
          description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01'
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2021-11-01.'
      description: Describes the properties of a virtual machine scale set virtual machine.
      type: object
    VirtualMachineScaleSetVM:
      description: Describes a virtual machine scale set virtual machine.
      properties:
        instanceId:
          readOnly: true
          type: string
          description: The virtual machine instance ID.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: The virtual machine SKU.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProperties'
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        resources:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtension'
          description: The virtual machine child extension resources.
        zones:
          readOnly: true
          type: array
          items:
            type: string
          description: The virtual machine zones.
        identity:
          $ref: '#/components/schemas/VirtualMachineIdentity'
          description: The identity of the virtual machine, if configured.
        etag:
          readOnly: true
          type: string
          description: Etag is property returned in Update/Get response of the VMSS VM, so that customer can supply it in the header to ensure optimistic updates.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineScaleSetVMInstanceView:
      properties:
        platformUpdateDomain:
          type: integer
          format: int32
          description: The Update Domain count.
        platformFaultDomain:
          type: integer
          format: int32
          description: The Fault Domain count.
        rdpThumbPrint:
          type: string
          description: The Remote desktop certificate thumbprint.
        vmAgent:
          $ref: '#/components/schemas/VirtualMachineAgentInstanceView'
          description: The VM Agent running on the virtual machine.
        maintenanceRedeployStatus:
          $ref: '#/components/schemas/MaintenanceRedeployStatus'
          description: The Maintenance Operation status on the virtual machine.
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskInstanceView'
          x-ms-identifiers:
            - name
          description: The disks information.
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtensionInstanceView'
          x-ms-identifiers:
            - name
            - type
          description: The extensions information.
        vmHealth:
          readOnly: true
          $ref: '#/components/schemas/VirtualMachineHealthStatus'
          description: The health status for the VM.
        bootDiagnostics:
          $ref: '#/components/schemas/BootDiagnosticsInstanceView'
          description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        assignedHost:
          type: string
          readOnly: true
          description: 'Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. Minimum api-version: 2020-06-01.'
        placementGroupId:
          type: string
          description: The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId.
        computerName:
          type: string
          description: Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
        osName:
          type: string
          description: The Operating System running on the hybrid machine.
        osVersion:
          type: string
          description: The version of Operating System running on the hybrid machine.
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine [V1, V2]
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
      description: The instance view of a virtual machine scale set VM.
      type: object
    VirtualMachineScaleSetVMNetworkProfileConfiguration:
      properties:
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfiguration'
          x-ms-identifiers:
            - name
          description: The list of network configurations.
      description: Describes a virtual machine scale set VM network profile.
      type: object
    VirtualMachineScaleSetVMProtectionPolicy:
      properties:
        protectFromScaleIn:
          type: boolean
          description: Indicates that the virtual machine scale set VM shouldn't be considered for deletion during a scale-in operation.
        protectFromScaleSetActions:
          type: boolean
          description: Indicates that model updates or actions (including scale-in) initiated on the virtual machine scale set should not be applied to the virtual machine scale set VM.
      description: The protection policy of a virtual machine scale set VM.
      type: object
    VirtualMachineScaleSetVMListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetVM'
          description: The list of virtual machine scale sets VMs.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Set VMs. Call ListNext() with this to fetch the next page of VMSS VMs
      required:
        - value
      description: The List Virtual Machine Scale Set VMs operation response.
      type: object
    RollingUpgradeStatusInfo:
      description: The status of the latest virtual machine scale set rolling upgrade.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RollingUpgradeStatusInfoProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    RollingUpgradeStatusInfoProperties:
      properties:
        policy:
          readOnly: true
          $ref: '#/components/schemas/RollingUpgradePolicy'
          description: The rolling upgrade policies applied for this upgrade.
        runningStatus:
          readOnly: true
          $ref: '#/components/schemas/RollingUpgradeRunningStatus'
          description: Information about the current running state of the overall upgrade.
        progress:
          readOnly: true
          $ref: '#/components/schemas/RollingUpgradeProgressInfo'
          description: Information about the number of virtual machine instances in each upgrade state.
        error:
          readOnly: true
          $ref: '#/components/schemas/ApiError'
          description: Error details for this upgrade, if there are any.
      description: The status of the latest virtual machine scale set rolling upgrade.
      type: object
    RollingUpgradeRunningStatus:
      properties:
        code:
          type: string
          readOnly: true
          description: Code indicating the current status of the upgrade.
          enum:
            - RollingForward
            - Cancelled
            - Completed
            - Faulted
          x-ms-enum:
            name: RollingUpgradeStatusCode
            modelAsString: false
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: Start time of the upgrade.
        lastAction:
          type: string
          readOnly: true
          description: The last action performed on the rolling upgrade.
          enum:
            - Start
            - Cancel
          x-ms-enum:
            name: RollingUpgradeActionType
            modelAsString: false
        lastActionTime:
          readOnly: true
          type: string
          format: date-time
          description: Last action time of the upgrade.
      description: Information about the current running state of the overall upgrade.
      type: object
    RollingUpgradeProgressInfo:
      properties:
        successfulInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that have been successfully upgraded.
        failedInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that have failed to be upgraded successfully.
        inProgressInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that are currently being upgraded.
        pendingInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that have not yet begun to be upgraded.
      description: Information about the number of virtual machine instances in each upgrade state.
      type: object
    RecoveryWalkResponse:
      properties:
        walkPerformed:
          type: boolean
          readOnly: true
          description: Whether the recovery walk was performed
        nextPlatformUpdateDomain:
          type: integer
          readOnly: true
          description: The next update domain that needs to be walked. Null means walk spanning all update domains has been completed
      description: Response after calling a manual recovery walk
      type: object
    VMScaleSetConvertToSinglePlacementGroupInput:
      properties:
        activePlacementGroupId:
          type: string
          description: Id of the placement group in which you want future virtual machine instances to be placed. To query placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided, the platform will choose one with maximum number of virtual machine instances.
      type: object
    OrchestrationServiceStateInput:
      properties:
        serviceName:
          type: string
          description: The name of the service.
          enum:
            - AutomaticRepairs
          x-ms-enum:
            name: OrchestrationServiceNames
            modelAsString: true
        action:
          type: string
          description: The action to be performed.
          enum:
            - Resume
            - Suspend
          x-ms-enum:
            name: OrchestrationServiceStateAction
            modelAsString: true
      description: The input for OrchestrationServiceState
      required:
        - serviceName
        - action
      type: object
    ServiceArtifactReference:
      type: object
      properties:
        id:
          type: string
          description: The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
      description: 'Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using ''latest'' image version. Minimum api-version: 2022-11-01'
    SecurityPostureReference:
      type: object
      properties:
        id:
          type: string
          description: The security posture reference id in the form of /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
        excludeExtensions:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtension'
          description: List of virtual machine extensions to exclude when applying the Security Posture.
      description: 'Specifies the security posture to be used for all virtual machines in the scale set. Minimum api-version: 2023-03-01'
    RetrieveBootDiagnosticsDataResult:
      properties:
        consoleScreenshotBlobUri:
          type: string
          readOnly: true
          description: The console screenshot blob URI
        serialConsoleLogBlobUri:
          type: string
          readOnly: true
          description: The serial console log blob URI.
      description: The SAS URIs of the console screenshot and serial log blobs.
      type: object
    VirtualMachineExtensionInstanceView:
      properties:
        name:
          type: string
          description: The virtual machine extension name.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        substatuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of a virtual machine extension.
      type: object
    VirtualMachineExtensionProperties:
      properties:
        forceUpdateTag:
          type: string
          description: How the extension handler should be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        instanceView:
          $ref: '#/components/schemas/VirtualMachineExtensionInstanceView'
          description: The virtual machine extension instance view.
        suppressFailures:
          type: boolean
          description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: The extensions protected settings that are passed by reference, and consumed from key vault
        provisionAfterExtensions:
          type: array
          items:
            type: string
          description: Collection of extension names after which this extension needs to be provisioned.
      description: Describes the properties of a Virtual Machine Extension.
      type: object
    VirtualMachineExtensionUpdateProperties:
      properties:
        forceUpdateTag:
          type: string
          description: How the extension handler should be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        suppressFailures:
          type: boolean
          description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: The extensions protected settings that are passed by reference, and consumed from key vault
      description: Describes the properties of a Virtual Machine Extension.
      type: object
    VirtualMachineExtension:
      description: Describes a Virtual Machine Extension.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionProperties'
        location:
          type: string
          description: Resource location
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineExtensionUpdate:
      description: Describes a Virtual Machine Extension.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineExtensionsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtension'
          description: The list of extensions
      description: The List Extension operation response
      type: object
    VirtualMachineSoftwarePatchProperties:
      properties:
        patchId:
          type: string
          readOnly: true
          description: A unique identifier for the patch.
        name:
          type: string
          readOnly: true
          description: The friendly name of the patch.
        version:
          type: string
          readOnly: true
          description: The version number of the patch. This property applies only to Linux patches.
        kbId:
          type: string
          readOnly: true
          description: The KBID of the patch. Only applies to Windows patches.
        classifications:
          type: array
          readOnly: true
          items:
            type: string
          description: The classification(s) of the patch as provided by the patch publisher.
        rebootBehavior:
          type: string
          readOnly: true
          description: Describes the reboot requirements of the patch.
          enum:
            - Unknown
            - NeverReboots
            - AlwaysRequiresReboot
            - CanRequestReboot
          x-ms-enum:
            name: VMGuestPatchRebootBehavior
            modelAsString: true
        activityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        publishedDate:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the repository published this patch.
        lastModifiedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp of the last update to this patch record.
        assessmentState:
          type: string
          readOnly: true
          description: Describes the availability of a given patch.
          enum:
            - Unknown
            - Available
          x-ms-enum:
            name: PatchAssessmentState
            modelAsString: true
      description: Describes the properties of a Virtual Machine software patch.
      type: object
    VirtualMachineAssessPatchesResult:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        assessmentActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        rebootPending:
          type: boolean
          readOnly: true
          description: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.
        criticalAndSecurityPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of critical or security patches that have been detected as available and not yet installed.
        otherPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches excluding critical and security.
        startDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        availablePatches:
          type: array
          readOnly: true
          items:
            x-ms-client-flatten: true
            $ref: '#/components/schemas/VirtualMachineSoftwarePatchProperties'
          x-ms-identifiers:
            - patchId
          description: The list of patches that have been detected as available for installation.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: Describes the properties of an AssessPatches result.
      type: object
    VirtualMachineInstallPatchesParameters:
      properties:
        maximumDuration:
          type: string
          description: Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)
        rebootSetting:
          type: string
          description: Defines when it is acceptable to reboot a VM during a software update operation.
          enum:
            - IfRequired
            - Never
            - Always
          x-ms-enum:
            name: VMGuestPatchRebootSetting
            modelAsString: true
        windowsParameters:
          $ref: '#/components/schemas/WindowsParameters'
          description: Input for InstallPatches on a Windows VM, as directly received by the API
        linuxParameters:
          $ref: '#/components/schemas/LinuxParameters'
          description: Input for InstallPatches on a Linux VM, as directly received by the API
      required:
        - rebootSetting
      description: Input for InstallPatches as directly received by the API
      type: object
    WindowsParameters:
      properties:
        classificationsToInclude:
          type: array
          description: The update classifications to select when installing patches for Windows.
          items:
            type: string
            enum:
              - Critical
              - Security
              - UpdateRollUp
              - FeaturePack
              - ServicePack
              - Definition
              - Tools
              - Updates
            x-ms-enum:
              name: VMGuestPatchClassification_Windows
              modelAsString: true
        kbNumbersToInclude:
          type: array
          description: Kbs to include in the patch operation
          items:
            type: string
        kbNumbersToExclude:
          type: array
          description: Kbs to exclude in the patch operation
          items:
            type: string
        excludeKbsRequiringReboot:
          type: boolean
          description: Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true.
        maxPatchPublishDate:
          type: string
          format: date-time
          description: This is used to install patches that were published on or before this given max published date.
      description: Input for InstallPatches on a Windows VM, as directly received by the API
      type: object
    LinuxParameters:
      properties:
        classificationsToInclude:
          type: array
          description: The update classifications to select when installing patches for Linux.
          items:
            type: string
            enum:
              - Critical
              - Security
              - Other
            x-ms-enum:
              name: VMGuestPatchClassification_Linux
              modelAsString: true
        packageNameMasksToInclude:
          type: array
          description: 'packages to include in the patch operation. Format: packageName_packageVersion'
          items:
            type: string
        packageNameMasksToExclude:
          type: array
          description: 'packages to exclude in the patch operation. Format: packageName_packageVersion'
          items:
            type: string
        maintenanceRunId:
          type: string
          description: This is used as a maintenance run identifier for Auto VM Guest Patching in Linux.
      description: Input for InstallPatches on a Linux VM, as directly received by the API
      type: object
    VirtualMachineInstallPatchesResult:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Failed", "Succeeded", "Unknown" or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        installationActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        rebootStatus:
          type: string
          readOnly: true
          description: The reboot state of the VM following completion of the operation.
          enum:
            - Unknown
            - NotNeeded
            - Required
            - Started
            - Failed
            - Completed
          x-ms-enum:
            name: VMGuestPatchRebootStatus
            modelAsString: true
        maintenanceWindowExceeded:
          type: boolean
          readOnly: true
          description: Whether the operation ran out of time before it completed all its intended actions.
        excludedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were not installed due to the user blocking their installation.
        notSelectedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were detected as available for install, but did not meet the operation's criteria.
        pendingPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true.
        installedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches successfully installed.
        failedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that could not be installed due to some issue. See errors for details.
        patches:
          type: array
          readOnly: true
          items:
            x-ms-client-flatten: true
            $ref: '#/components/schemas/PatchInstallationDetail'
          x-ms-identifiers:
            - patchId
          description: The patches that were installed during the operation.
        startDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: The result summary of an installation operation.
      type: object
    PatchInstallationDetail:
      properties:
        patchId:
          type: string
          readOnly: true
          description: A unique identifier for the patch.
        name:
          type: string
          readOnly: true
          description: The friendly name of the patch.
        version:
          type: string
          readOnly: true
          description: The version string of the package. It may conform to Semantic Versioning. Only applies to Linux.
        kbId:
          type: string
          readOnly: true
          description: The KBID of the patch. Only applies to Windows patches.
        classifications:
          type: array
          readOnly: true
          items:
            type: string
          description: The classification(s) of the patch as provided by the patch publisher.
        installationState:
          type: string
          readOnly: true
          description: The state of the patch after the installation operation completed.
          enum:
            - Unknown
            - Installed
            - Failed
            - Excluded
            - NotSelected
            - Pending
          x-ms-enum:
            name: PatchInstallationState
            modelAsString: true
      description: Information about a specific patch that was encountered during an installation action.
      type: object
    VirtualMachineReimageParameters:
      properties:
        tempDisk:
          type: boolean
          description: 'Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage parameter is only supported for VM/VMSS with Ephemeral OS disk.'
        exactVersion:
          type: string
          description: Specifies in decimal number, the version the OS disk should be reimaged to. If exact version is not provided, the OS disk is reimaged to the existing version of OS Disk.
        osProfile:
          $ref: '#/components/schemas/OSProfileProvisioningData'
          description: Specifies information required for reimaging the non-ephemeral OS disk.
      description: 'Parameters for Reimaging Virtual Machine. NOTE: Virtual Machine OS disk will always be reimaged'
      type: object
    OSProfileProvisioningData:
      type: object
      properties:
        adminPassword:
          type: string
          description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
          x-ms-secret: true
        customData:
          type: string
          description: 'Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). If using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init).'
      description: Additional parameters for Reimaging Non-Ephemeral Virtual Machine.
    VirtualMachineCaptureParameters:
      properties:
        vhdPrefix:
          type: string
          description: The captured virtual hard disk's name prefix.
        destinationContainerName:
          type: string
          description: The destination container name.
        overwriteVhds:
          type: boolean
          description: Specifies whether to overwrite the destination virtual hard disk, in case of conflict.
      required:
        - vhdPrefix
        - destinationContainerName
        - overwriteVhds
      description: Capture Virtual Machine parameters.
      type: object
    VirtualMachineCaptureResult:
      description: Output of virtual machine capture operation.
      x-ms-azure-resource: true
      properties:
        $schema:
          readOnly: true
          type: string
          description: the schema of the captured virtual machine
        contentVersion:
          readOnly: true
          type: string
          description: the version of the content
        parameters:
          readOnly: true
          type: object
          description: parameters of the captured virtual machine
        resources:
          readOnly: true
          type: array
          items:
            type: object
            description: resource item
          x-ms-identifiers: []
          description: a list of resource items of the captured virtual machine
        id:
          type: string
          description: Resource Id
      type: object
    VirtualMachineIpTag:
      properties:
        ipTagType:
          type: string
          description: 'IP tag type. Example: FirstPartyUsage.'
        tag:
          type: string
          description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
      description: Contains the IP tag associated with the public IP address.
      type: object
    VirtualMachinePublicIPAddressDnsSettingsConfiguration:
      properties:
        domainNameLabel:
          type: string
          description: The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID.
        domainNameLabelScope:
          type: string
          description: The Domain name label scope of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the hashed domain name label with policy according to the domain name label scope and vm network profile unique ID.
          enum:
            - TenantReuse
            - SubscriptionReuse
            - ResourceGroupReuse
            - NoReuse
          x-ms-enum:
            name: DomainNameLabelScopeTypes
            modelAsString: true
      required:
        - domainNameLabel
      description: Describes a virtual machines network configuration's DNS settings.
      type: object
    VirtualMachinePublicIPAddressConfigurationProperties:
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        deleteOption:
          type: string
          description: Specify what happens to the public IP address when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachinePublicIPAddressDnsSettingsConfiguration'
          description: The dns settings to be applied on the publicIP addresses .
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineIpTag'
          x-ms-identifiers: []
          description: The list of IP tags associated with the public IP address.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The PublicIPPrefix from which to allocate publicIP addresses.
        publicIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersions
            modelAsString: true
        publicIPAllocationMethod:
          type: string
          description: Specify the public IP allocation type
          enum:
            - Dynamic
            - Static
          x-ms-enum:
            name: PublicIPAllocationMethod
            modelAsString: true
      description: Describes a virtual machines IP Configuration's PublicIPAddress configuration
      type: object
    VirtualMachinePublicIPAddressConfiguration:
      required:
        - name
      description: Describes a virtual machines IP Configuration's PublicIPAddress configuration
      properties:
        name:
          type: string
          description: The publicIP address configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachinePublicIPAddressConfigurationProperties'
        sku:
          $ref: '#/components/schemas/PublicIPAddressSku'
      type: object
    VirtualMachineNetworkInterfaceIPConfigurationProperties:
      properties:
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Specifies the identifier of the subnet.
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/VirtualMachinePublicIPAddressConfiguration'
          description: The publicIPAddressConfiguration.
        privateIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersions
            modelAsString: true
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to application security group.
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].
      description: Describes a virtual machine network interface IP configuration properties.
      type: object
    VirtualMachineNetworkInterfaceIPConfiguration:
      required:
        - name
      description: Describes a virtual machine network profile's IP configuration.
      properties:
        name:
          type: string
          description: The IP configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineNetworkInterfaceIPConfigurationProperties'
      type: object
    VirtualMachineNetworkInterfaceDnsSettingsConfiguration:
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: List of DNS servers IP addresses
      description: Describes a virtual machines network configuration's DNS settings.
      type: object
    VirtualMachineNetworkInterfaceConfigurationProperties:
      properties:
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        disableTcpStateTracking:
          type: boolean
          description: Specifies whether the network interface is disabled for tcp state tracking.
        enableFpga:
          type: boolean
          description: Specifies whether the network interface is FPGA networking-enabled.
        enableIPForwarding:
          type: boolean
          description: Whether IP forwarding enabled on this NIC.
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The network security group.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineNetworkInterfaceDnsSettingsConfiguration'
          description: The dns settings to be applied on the network interfaces.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineNetworkInterfaceIPConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the IP configurations of the network interface.
        dscpConfiguration:
          $ref: '#/components/schemas/SubResource'
        auxiliaryMode:
          type: string
          description: Specifies whether the Auxiliary mode is enabled for the Network Interface resource.
          enum:
            - None
            - AcceleratedConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
        auxiliarySku:
          type: string
          description: Specifies whether the Auxiliary sku is enabled for the Network Interface resource.
          enum:
            - None
            - A1
            - A2
            - A4
            - A8
          x-ms-enum:
            name: NetworkInterfaceAuxiliarySku
            modelAsString: true
      required:
        - ipConfigurations
      description: Describes a virtual machine network profile's IP configuration.
      type: object
    VirtualMachineNetworkInterfaceConfiguration:
      required:
        - name
      description: Describes a virtual machine network interface configurations.
      properties:
        name:
          type: string
          description: The network interface configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineNetworkInterfaceConfigurationProperties'
      type: object
    VirtualMachineExtensionHandlerInstanceView:
      properties:
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        status:
          $ref: '#/components/schemas/InstanceViewStatus'
          description: The extension handler status.
      description: The instance view of a virtual machine extension handler.
      type: object
    VirtualMachineAgentInstanceView:
      properties:
        vmAgentVersion:
          type: string
          description: The VM Agent full version.
        extensionHandlers:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtensionHandlerInstanceView'
          x-ms-identifiers: []
          description: The virtual machine extension handler instance view.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of the VM Agent running on the virtual machine.
      type: object
    VirtualMachineIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of virtual machine identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
          description: 'The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: Identity for the virtual machine.
      type: object
    VirtualMachineInstanceView:
      properties:
        platformUpdateDomain:
          type: integer
          format: int32
          description: Specifies the update domain of the virtual machine.
        platformFaultDomain:
          type: integer
          format: int32
          description: Specifies the fault domain of the virtual machine.
        computerName:
          type: string
          description: The computer name assigned to the virtual machine.
        osName:
          type: string
          description: The Operating System running on the virtual machine.
        osVersion:
          type: string
          description: The version of Operating System running on the virtual machine.
        hyperVGeneration:
          type: string
          description: Specifies the HyperVGeneration Type associated with a resource
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGenerationType
            modelAsString: true
        rdpThumbPrint:
          type: string
          description: The Remote desktop certificate thumbprint.
        vmAgent:
          $ref: '#/components/schemas/VirtualMachineAgentInstanceView'
          description: The VM Agent running on the virtual machine.
        maintenanceRedeployStatus:
          $ref: '#/components/schemas/MaintenanceRedeployStatus'
          description: The Maintenance Operation status on the virtual machine.
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskInstanceView'
          x-ms-identifiers:
            - name
          description: The virtual machine disk information.
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtensionInstanceView'
          x-ms-identifiers:
            - name
            - type
          description: The extensions information.
        vmHealth:
          readOnly: true
          $ref: '#/components/schemas/VirtualMachineHealthStatus'
          description: The health status for the VM.
        bootDiagnostics:
          $ref: '#/components/schemas/BootDiagnosticsInstanceView'
          description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.
        assignedHost:
          type: string
          readOnly: true
          description: 'Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. Minimum api-version: 2020-06-01.'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        patchStatus:
          $ref: '#/components/schemas/VirtualMachinePatchStatus'
          description: '[Preview Feature] The status of virtual machine patch operations.'
        isVMInStandbyPool:
          type: boolean
          readOnly: true
          description: '[Preview Feature] Specifies whether the VM is currently in or out of the Standby Pool.'
      description: The instance view of a virtual machine.
      type: object
    VirtualMachineProperties:
      properties:
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfile'
          description: Specifies the hardware settings for the virtual machine.
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: Specifies additional capabilities enabled or disabled on the virtual machine.
        osProfile:
          $ref: '#/components/schemas/OSProfile'
          description: Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: Specifies the network interfaces of the virtual machine.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: Specifies the Security related profile settings for the virtual machine.
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
        availabilitySet:
          $ref: '#/components/schemas/SubResource'
          description: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
        virtualMachineScaleSet:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api‐version: 2019‐03‐01.'
        proximityPlacementGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01.'
        priority:
          $ref: '#/components/schemas/priority'
          description: 'Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01'
        evictionPolicy:
          $ref: '#/components/schemas/evictionPolicy'
          description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        billingProfile:
          $ref: '#/components/schemas/BillingProfile'
          description: 'Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01.'
        host:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01.'
        hostGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the dedicated host group that the virtual machine resides in. **Note:** User cannot specify both host and hostGroup properties. Minimum api-version: 2020-06-01.'
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        instanceView:
          $ref: '#/components/schemas/VirtualMachineInstanceView'
          readOnly: true
          description: The virtual machine instance view.
        licenseType:
          type: string
          description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
        vmId:
          readOnly: true
          type: string
          description: Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.
        extensionsTimeBudget:
          type: string
          description: 'Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01.'
        platformFaultDomain:
          type: integer
          format: int32
          description: 'Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the ''virtualMachineScaleSet'' property of this Virtual Machine is set. The Virtual Machine Scale Set that is referenced, must have ''platformFaultDomainCount'' greater than 1. This property cannot be updated once the Virtual Machine is created. Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01.'
        scheduledEventsProfile:
          $ref: '#/components/schemas/ScheduledEventsProfile'
          description: Specifies Scheduled Event related configurations.
        userData:
          type: string
          description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01.'
        capacityReservation:
          $ref: '#/components/schemas/CapacityReservationProfile'
          description: 'Specifies information about the capacity reservation that is used to allocate virtual machine. Minimum api-version: 2021-04-01.'
        applicationProfile:
          $ref: '#/components/schemas/ApplicationProfile'
          description: Specifies the gallery applications that should be made available to the VM/VMSS.
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Virtual Machine resource was created. Minimum api-version: 2021-11-01.'
      description: Describes the properties of a Virtual Machine.
      type: object
    VirtualMachine:
      description: Describes a Virtual Machine.
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineProperties'
        resources:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtension'
          description: The virtual machine child extension resources.
        identity:
          $ref: '#/components/schemas/VirtualMachineIdentity'
          description: The identity of the virtual machine, if configured.
        zones:
          type: array
          items:
            type: string
          description: The virtual machine zones.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the Virtual Machine.
        managedBy:
          readOnly: true
          type: string
          description: ManagedBy is set to Virtual Machine Scale Set(VMSS) flex ARM resourceID, if the VM is part of the VMSS. This property is used by platform for internal resource group delete optimization.
        etag:
          readOnly: true
          type: string
          description: Etag is property returned in Create/Update/Get response of the VM, so that customer can supply it in the header to ensure optimistic updates.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineUpdate:
      description: Describes a Virtual Machine Update.
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineProperties'
        identity:
          $ref: '#/components/schemas/VirtualMachineIdentity'
          description: The identity of the virtual machine, if configured.
        zones:
          type: array
          items:
            type: string
          description: The virtual machine zones.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachine'
          description: The list of virtual machines.
        nextLink:
          type: string
          description: The URI to fetch the next page of VMs. Call ListNext() with this URI to fetch the next page of Virtual Machines.
      required:
        - value
      description: The List Virtual Machine operation response.
      type: object
    VirtualMachineHealthStatus:
      properties:
        status:
          readOnly: true
          $ref: '#/components/schemas/InstanceViewStatus'
          description: The health status information for the VM.
      description: The health status of the VM.
      type: object
    VirtualMachinePatchStatus:
      properties:
        availablePatchSummary:
          $ref: '#/components/schemas/AvailablePatchSummary'
          description: The available patch summary of the latest assessment operation for the virtual machine.
        lastPatchInstallationSummary:
          $ref: '#/components/schemas/LastPatchInstallationSummary'
          description: The installation summary of the latest installation operation for the virtual machine.
        configurationStatuses:
          description: The enablement status of the specified patchMode
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
      description: The status of virtual machine patch operations.
      type: object
    AvailablePatchSummary:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        assessmentActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        rebootPending:
          type: boolean
          readOnly: true
          description: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.
        criticalAndSecurityPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of critical or security patches that have been detected as available and not yet installed.
        otherPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches excluding critical and security.
        startTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        lastModifiedTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: Describes the properties of an virtual machine instance view for available patch summary.
      type: object
    LastPatchInstallationSummary:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        installationActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        maintenanceWindowExceeded:
          type: boolean
          readOnly: true
          description: Describes whether the operation ran out of time before it completed all its intended actions
        notSelectedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches but not going to be installed because it didn't match a classification or inclusion list entry.
        excludedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        pendingPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches expected to be installed over the course of the patch installation operation.
        installedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The count of patches that successfully installed.
        failedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The count of patches that failed installation.
        startTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        lastModifiedTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: Describes the properties of the last installed patch summary.
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.azurefleet.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureFleet~1operations~1?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    usage:
      id: azure.azurefleet.usage
      name: usage
      title: usage
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1usages~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usage/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_sizes:
      id: azure.azurefleet.virtual_machine_sizes
      name: virtual_machine_sizes
      title: virtual_machine_sizes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1vmSizes~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_sizes/methods/list'
        insert: []
        update: []
        delete: []
    fleets:
      id: azure.azurefleet.fleets
      name: fleets
      title: fleets
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureFleet~1fleets~1?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}~1?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}~1?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}~1?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{fleetName}~1?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/get'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/delete'
    fleets_virtual_machine_scale_sets:
      id: azure.azurefleet.fleets_virtual_machine_scale_sets
      name: fleets_virtual_machine_scale_sets
      title: fleets_virtual_machine_scale_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureFleet~1fleets~1{name}~1virtualMachineScaleSets~1?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fleets_virtual_machine_scale_sets/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_sets:
      id: azure.azurefleet.virtual_machine_scale_sets
      name: virtual_machine_scale_sets
      title: virtual_machine_scale_sets
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1virtualMachineScaleSets~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2023-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2023-09-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2023-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1deallocate~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1poweroff~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1restart~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1start~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reapply:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1reapply~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1redeploy~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        perform_maintenance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1performMaintenance~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1reimage~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage_all:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1reimageall~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_rolling_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1approveRollingUpgrade~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        force_recovery_service_fabric_platform_update_domain_walk:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1forceRecoveryServiceFabricPlatformUpdateDomainWalk~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        convert_to_single_placement_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1convertToSinglePlacementGroup~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_orchestration_service_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1setOrchestrationServiceState~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/list_by_location'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/delete'
    virtual_machine_scale_sets_instances:
      id: azure.azurefleet.virtual_machine_scale_sets_instances
      name: virtual_machine_scale_sets_instances
      title: virtual_machine_scale_sets_instances
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1delete~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1manualupgrade~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_instances/methods/delete'
    virtual_machine_scale_sets_instance_view:
      id: azure.azurefleet.virtual_machine_scale_sets_instance_view
      name: virtual_machine_scale_sets_instance_view
      title: virtual_machine_scale_sets_instance_view
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1instanceView~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_instance_view/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_extensions:
      id: azure.azurefleet.virtual_machine_scale_set_extensions
      name: virtual_machine_scale_set_extensions
      title: virtual_machine_scale_set_extensions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2023-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2023-09-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2023-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/delete'
    virtual_machine_scale_sets_all:
      id: azure.azurefleet.virtual_machine_scale_sets_all
      name: virtual_machine_scale_sets_all
      title: virtual_machine_scale_sets_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_all/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_sets_skus:
      id: azure.azurefleet.virtual_machine_scale_sets_skus
      name: virtual_machine_scale_sets_skus
      title: virtual_machine_scale_sets_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1skus~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_skus/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_sets_os_upgrade_history:
      id: azure.azurefleet.virtual_machine_scale_sets_os_upgrade_history
      name: virtual_machine_scale_sets_os_upgrade_history
      title: virtual_machine_scale_sets_os_upgrade_history
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1osUpgradeHistory~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_os_upgrade_history/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_rolling_upgrades:
      id: azure.azurefleet.virtual_machine_scale_set_rolling_upgrades
      name: virtual_machine_scale_set_rolling_upgrades
      title: virtual_machine_scale_set_rolling_upgrades
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1rollingUpgrades~1cancel~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_os_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1osRollingUpgrade~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_extension_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensionRollingUpgrade~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_rolling_upgrades_latest:
      id: azure.azurefleet.virtual_machine_scale_set_rolling_upgrades_latest
      name: virtual_machine_scale_set_rolling_upgrades_latest
      title: virtual_machine_scale_set_rolling_upgrades_latest
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1rollingUpgrades~1latest~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_rolling_upgrades_latest/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_vm_extensions:
      id: azure.azurefleet.virtual_machine_scale_set_vm_extensions
      name: virtual_machine_scale_set_vm_extensions
      title: virtual_machine_scale_set_vm_extensions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/delete'
    virtual_machine_scale_set_vms:
      id: azure.azurefleet.virtual_machine_scale_set_vms
      name: virtual_machine_scale_set_vms
      title: virtual_machine_scale_set_vms
      methods:
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1reimage~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage_all:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1reimageall~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_rolling_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1approveRollingUpgrade~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1deallocate~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1?api-version=2023-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1?api-version=2023-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1poweroff~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1restart~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1start~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1redeploy~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retrieve_boot_diagnostics_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1retrieveBootDiagnosticsData~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        perform_maintenance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1performMaintenance~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        simulate_eviction:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1simulateEviction~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        attach_detach_data_disks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1attachDetachDataDisks~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms/methods/delete'
    virtual_machine_scale_set_vms_instance_view:
      id: azure.azurefleet.virtual_machine_scale_set_vms_instance_view
      name: virtual_machine_scale_set_vms_instance_view
      title: virtual_machine_scale_set_vms_instance_view
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1instanceView~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms_instance_view/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_extensions:
      id: azure.azurefleet.virtual_machine_extensions
      name: virtual_machine_extensions
      title: virtual_machine_extensions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/delete'
    virtual_machines:
      id: azure.azurefleet.virtual_machines
      name: virtual_machines
      title: virtual_machines
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1virtualMachines~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        capture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1capture~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2023-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2023-09-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2023-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        instance_view:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1instanceView~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        convert_to_managed_disks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1convertToManagedDisks~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1deallocate~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generalize:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1generalize~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1powerOff~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reapply:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1reapply~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1restart~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1start~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1redeploy~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1reimage~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retrieve_boot_diagnostics_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1retrieveBootDiagnosticsData~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        perform_maintenance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1performMaintenance~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        simulate_eviction:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1simulateEviction~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assess_patches:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1assessPatches~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        install_patches:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1installPatches~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        attach_detach_data_disks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1attachDetachDataDisks~1?api-version=2023-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list_by_location'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/delete'
    virtual_machines_all:
      id: azure.azurefleet.virtual_machines_all
      name: virtual_machines_all
      title: virtual_machines_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1virtualMachines~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines_all/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machines_available_sizes:
      id: azure.azurefleet.virtual_machines_available_sizes
      name: virtual_machines_available_sizes
      title: virtual_machines_available_sizes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1vmSizes~1?api-version=2023-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines_available_sizes/methods/list'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.Compute/operations/?api-version=2023-09-01:
    get:
      tags:
        - ComputeOperations
      operationId: Operations_List
      description: Gets a list of compute operations.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeOperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/usages/?api-version=2023-09-01:
    get:
      tags:
        - Usage
      operationId: Usage_List
      description: Gets, for the specified location, the current compute resource usage information as well as the limits for compute resources under the subscription.
      parameters:
        - name: location
          in: path
          description: The location for which resource usage is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/vmSizes/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineSizes
      operationId: VirtualMachineSizes_List
      description: This API is deprecated. Use [Resources Skus](https://docs.microsoft.com/rest/api/compute/resourceskus/list)
      parameters:
        - name: location
          in: path
          description: The location upon which virtual-machine-sizes is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineSizeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /providers/Microsoft.AzureFleet/operations/?api-version=2024-05-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureFleet/fleets/?api-version=2024-05-01-preview:
    get:
      operationId: Fleets_ListBySubscription
      tags:
        - Fleets
      description: List Fleet resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/?api-version=2024-05-01-preview:
    get:
      operationId: Fleets_ListByResourceGroup
      tags:
        - Fleets
      description: List Fleet resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{fleetName}/?api-version=2024-05-01-preview:
    get:
      operationId: Fleets_Get
      tags:
        - Fleets
      description: Get a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w-._]{0,79}(?<![-.])$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Fleets_CreateOrUpdate
      tags:
        - Fleets
      description: Create a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w-._]{0,79}(?<![-.])$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      responses:
        '200':
          description: Resource 'Fleet' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '201':
          description: Resource 'Fleet' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Fleets_Update
      tags:
        - Fleets
      description: Update a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w-._]{0,79}(?<![-.])$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FleetUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Fleets_Delete
      tags:
        - Fleets
      description: Delete a Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: fleetName
          in: path
          description: The name of the Compute Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w-._]{0,79}(?<![-.])$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureFleet/fleets/{name}/virtualMachineScaleSets/?api-version=2024-05-01-preview:
    get:
      operationId: Fleets_ListVirtualMachineScaleSets
      tags:
        - Fleets
      description: List VirtualMachineScaleSet resources by Fleet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Fleet
          required: true
          schema:
            pattern: ^[^_\W][\w-._]{0,79}(?<![-.])$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/virtualMachineScaleSets/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ListByLocation
      description: Gets all the VM scale sets under the specified subscription for the specified location.
      parameters:
        - name: location
          in: path
          description: The location for which VM scale sets under the subscription are queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/?api-version=2023-09-01:
    put:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_CreateOrUpdate
      description: Create or update a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: The scale set object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Update
      description: Update a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: The scale set object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Delete
      description: Deletes a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete a VM scale set. (Feature in Preview)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Get
      description: Display information about a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'UserData' retrieves the UserData property of the VM scale set that was provided by the user during the VM scale set Create/Update operation
          required: false
          schema:
            enum:
              - userData
            x-ms-enum:
              name: ExpandTypesForGetVMScaleSets
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Deallocate
      description: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: hibernate
          in: query
          description: Optional parameter to hibernate a virtual machine from the VM scale set. (This feature is available for VMSS with Flexible OrchestrationMode only)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_DeleteInstances
      description: Deletes virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete virtual machines from the VM scale set. (Feature in Preview)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: true
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceRequiredIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/instanceView/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_GetInstanceView
      description: Gets the status of a VM scale set instance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetInstanceView'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_List
      description: Gets a list of all VM scale sets under a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}/?api-version=2023-09-01:
    put:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_CreateOrUpdate
      description: The operation to create or update an extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be create or updated.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create VM scale set Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_Update
      description: The operation to update an extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be updated.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update VM scale set Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetExtensionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_Delete
      description: The operation to delete the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be deleted.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_Get
      description: The operation to get the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set containing the extension.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_List
      description: Gets a list of all extensions in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set containing the extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtensionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ListAll
      description: Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListWithLinkResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/skus/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ListSkus
      description: Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListSkusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osUpgradeHistory/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_GetOSUpgradeHistory
      description: Gets list of OS upgrades on a VM scale set instance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListOSUpgradeHistory'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_PowerOff
      description: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: skipShutdown
          in: query
          description: The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Restart
      description: Restarts one or more virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Start
      description: Starts one or more virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reapply/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Reapply
      description: Reapplies the Virtual Machine Scale Set Virtual Machine Profile to the Virtual Machine Instances
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/redeploy/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Redeploy
      description: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/performMaintenance/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_PerformMaintenance
      description: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_UpdateInstances
      description: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: true
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceRequiredIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Reimage
      description: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for Reimaging VM ScaleSet.
        required: false
        x-ms-requestBody-name: vmScaleSetReimageInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetReimageParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ReimageAll
      description: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/approveRollingUpgrade/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ApproveRollingUpgrade
      description: Approve upgrade on deferred rolling upgrades for OS disks in the virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_Cancel
      description: Cancels the current virtual machine scale set rolling upgrade.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_StartOSUpgrade
      description: Starts a rolling upgrade to move all virtual machine scale set instances to the latest available Platform Image OS version. Instances which are already running the latest available OS version are not affected.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensionRollingUpgrade/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_StartExtensionUpgrade
      description: Starts a rolling upgrade to move all extensions for all virtual machine scale set instances to the latest available extension version. Instances which are already running the latest extension versions are not affected.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/latest/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_GetLatest
      description: Gets the status of the latest virtual machine scale set rolling upgrade.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingUpgradeStatusInfo'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/forceRecoveryServiceFabricPlatformUpdateDomainWalk/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ForceRecoveryServiceFabricPlatformUpdateDomainWalk
      description: Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: platformUpdateDomain
          in: query
          description: The platform update domain for which a manual recovery walk is requested
          required: true
          schema:
            type: integer
        - name: zone
          in: query
          description: The zone in which the manual recovery walk is requested for cross zone virtual machine scale set
          required: false
          schema:
            type: string
        - name: placementGroupId
          in: query
          description: The placement group id for which the manual recovery walk is requested.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryWalkResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/convertToSinglePlacementGroup/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ConvertToSinglePlacementGroup
      description: Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the virtual machine scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The input object for ConvertToSinglePlacementGroup API.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMScaleSetConvertToSinglePlacementGroupInput'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/setOrchestrationServiceState/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_SetOrchestrationServiceState
      description: Changes ServiceState property for a given service
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the virtual machine scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The input object for SetOrchestrationServiceState API.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrchestrationServiceStateInput'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/{vmExtensionName}/?api-version=2023-09-01:
    put:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_CreateOrUpdate
      description: The operation to create or update the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_Update
      description: The operation to update the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMExtensionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_Delete
      description: The operation to delete the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_Get
      description: The operation to get the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_List
      description: The operation to get all extensions of an instance in Virtual Machine Scaleset.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtensionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/reimage/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Reimage
      description: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for the Reimaging Virtual machine in ScaleSet.
        required: false
        x-ms-requestBody-name: vmScaleSetVMReimageInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMReimageParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/reimageall/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_ReimageAll
      description: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/approveRollingUpgrade/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_ApproveRollingUpgrade
      description: Approve upgrade on deferred rolling upgrade for OS disk on a VM scale set instance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/deallocate/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Deallocate
      description: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/?api-version=2023-09-01:
    put:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Update
      description: Updates a virtual machine of a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be create or updated.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Update Virtual Machine Scale Sets VM operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVM'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVM'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVM'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Delete
      description: Deletes a virtual machine from a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete a virtual machine from a VM scale set. (Feature in Preview)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Get
      description: Gets a virtual machine from a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' will retrieve the instance view of the virtual machine. 'UserData' will retrieve the UserData of the virtual machine.
          required: false
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVM'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/instanceView/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_GetInstanceView
      description: Gets the status of a virtual machine from a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceView'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_List
      description: Gets a list of all virtual machines in a VM scale sets.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply to the operation. Allowed values are 'startswith(instanceView/statuses/code, 'PowerState') eq true', 'properties/latestModelApplied eq true', 'properties/latestModelApplied eq false'.
          required: false
          schema:
            type: string
        - name: $select
          in: query
          description: The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'.
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply to the operation. Allowed values are 'instanceView'.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/VirtualMachineScaleSetVM'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_PowerOff
      description: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: skipShutdown
          in: query
          description: The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Restart
      description: Restarts a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Start
      description: Starts a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/redeploy/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Redeploy
      description: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/retrieveBootDiagnosticsData/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_RetrieveBootDiagnosticsData
      description: The operation to retrieve SAS URIs of boot diagnostic logs for a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: sasUriExpirationTimeInMinutes
          in: query
          description: Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes. **Note:** If not specified, SAS URIs will be generated with a default expiration duration of 120 minutes.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveBootDiagnosticsDataResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/performMaintenance/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_PerformMaintenance
      description: Performs maintenance on a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/simulateEviction/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_SimulateEviction
      description: The operation to simulate the eviction of spot virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/attachDetachDataDisks/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_AttachDetachDataDisks
      description: Attach and detach data disks to/from a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the attach and detach data disks operation on a Virtual Machine Scale Sets VM.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachDataDisksRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageProfile'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}/?api-version=2023-09-01:
    put:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_CreateOrUpdate
      description: The operation to create or update the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the extension should be created or updated.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineExtension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_Update
      description: The operation to update the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the extension should be updated.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineExtensionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_Delete
      description: The operation to delete the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the extension should be deleted.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_Get
      description: The operation to get the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine containing the extension.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_List
      description: The operation to get all extensions of a Virtual Machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine containing the extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtensionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/virtualMachines/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListByLocation
      description: Gets all the virtual machines under the specified subscription for the specified location.
      parameters:
        - name: location
          in: path
          description: The location for which virtual machines under the subscription are queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Capture
      description: Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to create similar VMs.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Capture Virtual Machine operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineCaptureParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineCaptureResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/?api-version=2023-09-01:
    put:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_CreateOrUpdate
      description: The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Create Virtual Machine operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachine'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Update
      description: The operation to update a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Update Virtual Machine operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Delete
      description: The operation to delete a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete virtual machines.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Get
      description: Retrieves information about the model view or the instance view of a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation.
          required: false
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/instanceView/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_InstanceView
      description: Retrieves information about the run-time state of a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstanceView'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ConvertToManagedDisks
      description: Converts virtual machine disks from blob-based to managed disks. Virtual machine must be stop-deallocated before invoking this operation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Deallocate
      description: Shuts down the virtual machine and releases the compute resources. You are not billed for the compute resources that this virtual machine uses.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: hibernate
          in: query
          description: Optional parameter to hibernate a virtual machine. (Feature in Preview)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/generalize/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Generalize
      description: Sets the OS state of the virtual machine to generalized. It is recommended to sysprep the virtual machine before performing this operation. For Windows, please refer to [Create a managed image of a generalized VM in Azure](https://docs.microsoft.com/azure/virtual-machines/windows/capture-image-resource). For Linux, please refer to [How to create an image of a virtual machine or VHD](https://docs.microsoft.com/azure/virtual-machines/linux/capture-image).
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_List
      description: Lists all of the virtual machines in the specified resource group. Use the nextLink property in the response to get the next page of virtual machines.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}'
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on operation. 'instanceView' enables fetching run time status of all Virtual Machines, this can only be specified if a valid $filter option is specified
          required: false
          schema:
            enum:
              - instanceView
            x-ms-enum:
              name: ExpandTypeForListVMs
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListAll
      description: Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: statusOnly
          in: query
          description: statusOnly=true enables fetching run time status of all Virtual Machines in the subscription.
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}'
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on operation. 'instanceView' enables fetching run time status of all Virtual Machines, this can only be specified if a valid $filter option is specified
          required: false
          schema:
            enum:
              - instanceView
            x-ms-enum:
              name: ExpandTypesForListVMs
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/vmSizes/?api-version=2023-09-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListAvailableSizes
      description: Lists all available virtual machine sizes to which the specified virtual machine can be resized.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineSizeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_PowerOff
      description: The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the same provisioned resources. You are still charged for this virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: skipShutdown
          in: query
          description: The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/reapply/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Reapply
      description: The operation to reapply a virtual machine's state.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Restart
      description: The operation to restart a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Start
      description: The operation to start a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Redeploy
      description: Shuts down the virtual machine, moves it to a new node, and powers it back on.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/reimage/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Reimage
      description: 'Reimages (upgrade the operating system) a virtual machine which don''t have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state. NOTE: The retaining of old OS disk depends on the value of deleteOption of OS disk. If deleteOption is detach, the old OS disk will be preserved after reimage. If deleteOption is delete, the old OS disk will be deleted after reimage. The deleteOption of the OS disk should be updated accordingly before performing the reimage.'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Reimage Virtual Machine operation.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineReimageParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/retrieveBootDiagnosticsData/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_RetrieveBootDiagnosticsData
      description: The operation to retrieve SAS URIs for a virtual machine's boot diagnostic logs.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: sasUriExpirationTimeInMinutes
          in: query
          description: Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes. **Note:** If not specified, SAS URIs will be generated with a default expiration duration of 120 minutes.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveBootDiagnosticsDataResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_PerformMaintenance
      description: The operation to perform maintenance on a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/simulateEviction/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_SimulateEviction
      description: The operation to simulate the eviction of spot virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/assessPatches/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_AssessPatches
      description: Assess patches on the VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineAssessPatchesResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/installPatches/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_InstallPatches
      description: Installs patches on the VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Input for InstallPatches as directly received by the API
        required: true
        x-ms-requestBody-name: installPatchesInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstallPatchesParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstallPatchesResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/attachDetachDataDisks/?api-version=2023-09-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_AttachDetachDataDisks
      description: Attach and detach data disks to/from the virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the attach and detach data disks operation on the virtual machine.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachDataDisksRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageProfile'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
