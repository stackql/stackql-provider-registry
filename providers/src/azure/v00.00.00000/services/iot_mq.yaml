openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: IoT MQ
  description: Azure IoT MQ is an enterprise-grade, standards-compliant MQTT Broker that is scalable, highly available and Kubernetes-native. It provides the messaging plane for Azure IoT Operations, enables bi-directional edge/cloud communication and powers event-driven applications at the edge.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    AuthorizationBasicRule:
      type: object
      description: BasicRules of AuthorizationConfig Polar rules are not supported
      properties:
        brokerResources:
          type: array
          description: This subfield defines the broker resources that the Basic Rule is applied on.
          items:
            $ref: '#/components/schemas/ResourceInfoDefinition'
          x-ms-identifiers: []
        principals:
          $ref: '#/components/schemas/PrincipalDefinition'
          description: This subfield defines the identities that represent the clients.
      required:
        - brokerResources
        - principals
    AuthorizationConfig:
      type: object
      description: Broker AuthorizationConfig properties
      properties:
        enableCache:
          type: boolean
          description: Enable caching of the authorization rules.
          default: true
        rules:
          type: array
          description: Authorization Rules to be used. If no rule is set, but Authorization Resource is used that would mean DenyAll.
          items:
            $ref: '#/components/schemas/AuthorizationBasicRule'
          x-ms-identifiers: []
    AutomaticCertMethod:
      type: object
      description: Automatic TLS server certificate management with cert-manager
      properties:
        duration:
          type: string
          description: Lifetime of automatically-managed certificate.
          default: 720h
        issuerRef:
          $ref: '#/components/schemas/CertManagerIssuerRef'
          description: cert-manager issuerRef.
        privateKey:
          $ref: '#/components/schemas/CertManagerPrivateKey'
          description: Cert Manager private key.
        renewBefore:
          type: string
          description: When to begin renewing automatically-managed certificate.
          default: 240h
        san:
          $ref: '#/components/schemas/SanForCert'
          description: Additional SANs to include in the certificate.
        secretName:
          type: string
          description: Secret for storing server certificate. Any existing data will be overwritten.
        secretNamespace:
          type: string
          description: Certificate K8S namespace. Omit to use default namespace.
      required:
        - issuerRef
    AutomaticCertMethodUpdate:
      type: object
      description: Automatic TLS server certificate management with cert-manager
      properties:
        duration:
          type: string
          description: Lifetime of automatically-managed certificate.
          default: 720h
        issuerRef:
          $ref: '#/components/schemas/CertManagerIssuerRefUpdate'
          description: cert-manager issuerRef.
        privateKey:
          $ref: '#/components/schemas/CertManagerPrivateKeyUpdate'
          description: Cert Manager private key.
        renewBefore:
          type: string
          description: When to begin renewing automatically-managed certificate.
          default: 240h
        san:
          $ref: '#/components/schemas/SanForCertUpdate'
          description: Additional SANs to include in the certificate.
        secretName:
          type: string
          description: Secret for storing server certificate. Any existing data will be overwritten.
        secretNamespace:
          type: string
          description: Certificate K8S namespace. Omit to use default namespace.
    BackendChain:
      type: object
      description: Desired properties of the Frontend Instances of the DMQTT Broker
      properties:
        partitions:
          type: integer
          format: int32
          description: Partitions is desired number of physical backend chains of the given distributed MQTT broker.
          minimum: 0
          maximum: 65535
        redundancyFactor:
          type: integer
          format: int32
          description: Redundancy Factor is desired numbers of broker instances in one chain.
          minimum: 0
          maximum: 65535
        temporaryDiskTransferEnabled:
          type: boolean
          description: Defines whether disk transfer is enabled or not.
        temporaryDiskTransferHighWatermarkPercent:
          type: integer
          format: int32
          description: Defines the percentage usage of buffer pool above which disk transfer will start.
          minimum: 0
          maximum: 100
        temporaryDiskTransferLowWatermarkPercent:
          type: integer
          format: int32
          description: Defines the percentage usage of buffer pool below which disk transfer will stop.
          minimum: 0
          maximum: 100
        temporaryMaxBackendMemUsagePercent:
          type: integer
          format: int32
          description: Defines the limits for memory usage percent of the backend instances of the MQTT broker.
          minimum: 0
          maximum: 100
        temporaryResourceLimits:
          $ref: '#/components/schemas/TemporaryResourceLimitsConfig'
          description: Defines the limits for resources of the backend instances of the MQTT broker.
        workers:
          type: integer
          format: int32
          description: Number of logical backend workers per pod.
          default: 1
          minimum: 0
          maximum: 65535
      required:
        - partitions
        - redundancyFactor
    BackendChainUpdate:
      type: object
      description: Desired properties of the Frontend Instances of the DMQTT Broker
      properties:
        partitions:
          type: integer
          format: int32
          description: Partitions is desired number of physical backend chains of the given distributed MQTT broker.
          minimum: 0
          maximum: 65535
        redundancyFactor:
          type: integer
          format: int32
          description: Redundancy Factor is desired numbers of broker instances in one chain.
          minimum: 0
          maximum: 65535
        temporaryDiskTransferEnabled:
          type: boolean
          description: Defines whether disk transfer is enabled or not.
        temporaryDiskTransferHighWatermarkPercent:
          type: integer
          format: int32
          description: Defines the percentage usage of buffer pool above which disk transfer will start.
          minimum: 0
          maximum: 100
        temporaryDiskTransferLowWatermarkPercent:
          type: integer
          format: int32
          description: Defines the percentage usage of buffer pool below which disk transfer will stop.
          minimum: 0
          maximum: 100
        temporaryMaxBackendMemUsagePercent:
          type: integer
          format: int32
          description: Defines the limits for memory usage percent of the backend instances of the MQTT broker.
          minimum: 0
          maximum: 100
        temporaryResourceLimits:
          $ref: '#/components/schemas/TemporaryResourceLimitsConfigUpdate'
          description: Defines the limits for resources of the backend instances of the MQTT broker.
        workers:
          type: integer
          format: int32
          description: Number of logical backend workers per pod.
          default: 1
          minimum: 0
          maximum: 65535
    BrokerAuthenticationProperties:
      type: object
      description: Broker Resource properties
      properties:
        authenticationMethods:
          type: array
          description: The list of authentication methods supported by the Authentication Resource. For each array element, NOTE - Enum only authenticator type supported.
          items:
            $ref: '#/components/schemas/BrokerAuthenticatorMethods'
          x-ms-identifiers: []
        listenerRef:
          type: array
          description: The array of listener Resources it supports.
          items:
            type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - authenticationMethods
        - listenerRef
    BrokerAuthenticationResource:
      description: MQ broker/authentication resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/BrokerAuthenticationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BrokerAuthenticationResourceListResult:
      type: object
      description: The response of a BrokerAuthenticationResource list operation.
      properties:
        value:
          type: array
          description: The BrokerAuthenticationResource items on this page
          items:
            $ref: '#/components/schemas/BrokerAuthenticationResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    BrokerAuthenticationResourceUpdate:
      description: The type used for update operations of the BrokerAuthenticationResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/BrokerAuthenticationResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    BrokerAuthenticationResourceUpdateProperties:
      type: object
      description: The updatable properties of the BrokerAuthenticationResource.
      properties:
        authenticationMethods:
          type: array
          description: The list of authentication methods supported by the Authentication Resource. For each array element, NOTE - Enum only authenticator type supported.
          items:
            $ref: '#/components/schemas/BrokerAuthenticatorMethods'
          x-ms-identifiers: []
        listenerRef:
          type: array
          description: The array of listener Resources it supports.
          items:
            type: string
    BrokerAuthenticatorCustomAuth:
      type: object
      description: Custom Authentication properties
      properties:
        x509:
          $ref: '#/components/schemas/BrokerAuthenticatorCustomAuthX509'
          description: X509 Custom Auth type details.
      required:
        - x509
    BrokerAuthenticatorCustomAuthX509:
      type: object
      description: X509 Custom Authentication properties. NOTE - Enum only authenticator type supported at a time.
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultCertificateProperties'
          description: Keyvault X509 secret properties.
        secretName:
          type: string
          description: Secret where cert details are stored.
    BrokerAuthenticatorMethodCustom:
      type: object
      description: Custom method for BrokerAuthentication
      properties:
        auth:
          $ref: '#/components/schemas/BrokerAuthenticatorCustomAuth'
          description: Custom Broker Authentication Method.
        caCertConfigMap:
          type: string
          description: CA cert config map to use.
        endpoint:
          type: string
          description: Endpoint to connect to.
        headers:
          type: object
          description: Configuration Headers to use.
          additionalProperties:
            type: string
      required:
        - endpoint
    BrokerAuthenticatorMethodSat:
      type: object
      description: Service Account Token for BrokerAuthentication
      properties:
        audiences:
          type: array
          description: List of allowed audience.
          items:
            type: string
      required:
        - audiences
    BrokerAuthenticatorMethodSvid:
      type: object
      description: SVID for BrokerAuthentication
      properties:
        agentSocketPath:
          type: string
          description: Mounted socket path for spiffe agent.
        identityMaxRetry:
          type: integer
          format: int64
          description: Maximum number of re-tries to fetch identity.
          default: 3
          minimum: 0
          maximum: 4294967295
        identityWaitRetryMs:
          type: integer
          format: int64
          description: Maximum time to wait before fetching identity again.
          default: 5000
          minimum: 0
          maximum: 9223372036854000000
      required:
        - agentSocketPath
    BrokerAuthenticatorMethodUsernamePassword:
      type: object
      description: UsernamePassword for BrokerAuthentication
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultSecretProperties'
          description: Keyvault username password secret properties.
        secretName:
          type: string
          description: Secret where username and password are stored.
    BrokerAuthenticatorMethodX509:
      type: object
      description: X509 for BrokerAuthentication.
      properties:
        attributes:
          $ref: '#/components/schemas/BrokerAuthenticatorMethodX509Attributes'
          description: K8S Secret name to mount for username and password.
        trustedClientCaCertConfigMap:
          type: string
          description: Trusted client ca cert config map.
          default: client-ca
    BrokerAuthenticatorMethodX509Attributes:
      type: object
      description: BrokerAuthenticatorMethodX509Attributes properties. NOTE - Enum only type supported at a time.
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultSecretProperties'
          description: Keyvault x509 attributes secret properties.
        secretName:
          type: string
          description: Secret where x509 attributes are stored.
    BrokerAuthenticatorMethods:
      type: object
      description: Collection of different CrdAuthenticator methods of Broker Resource. NOTE Enum - Only one method is supported for each entry.
      properties:
        custom:
          $ref: '#/components/schemas/BrokerAuthenticatorMethodCustom'
          description: Custom Authentication Method.
        sat:
          $ref: '#/components/schemas/BrokerAuthenticatorMethodSat'
          description: Service Account Token Method.
        svid:
          $ref: '#/components/schemas/BrokerAuthenticatorMethodSvid'
          description: Service Account Token Method.
        usernamePassword:
          $ref: '#/components/schemas/BrokerAuthenticatorMethodUsernamePassword'
          description: UsernamePassword Method.
        x509:
          $ref: '#/components/schemas/BrokerAuthenticatorMethodX509'
          description: X509 Method.
    BrokerAuthorizationProperties:
      type: object
      description: Broker Resource properties
      properties:
        authorizationPolicies:
          $ref: '#/components/schemas/AuthorizationConfig'
          description: The list of authorization policies supported by the Authorization Resource.
        listenerRef:
          type: array
          description: The array of listener Resources it supports.
          items:
            type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - authorizationPolicies
        - listenerRef
    BrokerAuthorizationResource:
      description: MQ broker/authorization resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/BrokerAuthorizationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BrokerAuthorizationResourceListResult:
      type: object
      description: The response of a BrokerAuthorizationResource list operation.
      properties:
        value:
          type: array
          description: The BrokerAuthorizationResource items on this page
          items:
            $ref: '#/components/schemas/BrokerAuthorizationResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    BrokerAuthorizationResourceUpdate:
      description: The type used for update operations of the BrokerAuthorizationResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/BrokerAuthorizationResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    BrokerAuthorizationResourceUpdateProperties:
      type: object
      description: The updatable properties of the BrokerAuthorizationResource.
      properties:
        authorizationPolicies:
          $ref: '#/components/schemas/AuthorizationConfig'
          description: The list of authorization policies supported by the Authorization Resource.
        listenerRef:
          type: array
          description: The array of listener Resources it supports.
          items:
            type: string
    BrokerDiagnostics:
      type: object
      description: Diagnostics setting specific to Broker
      properties:
        diagnosticServiceEndpoint:
          type: string
          description: Diagnostic Service endpoint
        enableMetrics:
          type: boolean
          description: Knob to enable/disable metrics. Default = true
          default: true
        enableSelfCheck:
          type: boolean
          description: Enable self check on Broker via Probe.
          default: true
        enableSelfTracing:
          type: boolean
          description: Enable self tracing on the Broker so that every selfCheckFrequencySeconds a random message is traced even if it didn't have trace context.
          default: true
        enableTracing:
          type: boolean
          description: Knob to enable/disable entire tracing infrastructure.
          default: true
        logFormat:
          type: string
          description: Format for the logs generated.
          default: text
        logLevel:
          type: string
          description: Log level for the Broker.
          default: info,hyper=off,kube_client=off,tower=off,conhash=off,h2=off
        maxCellMapLifetime:
          type: integer
          format: int64
          description: Maximum time for the CellMap to live.
          default: 60
          minimum: 0
          maximum: 9223372036854000000
        metricUpdateFrequencySeconds:
          type: integer
          format: int64
          description: Metric update frequency in seconds.
          default: 30
          minimum: 0
          maximum: 9223372036854000000
        probeImage:
          type: string
          description: Probe Image to run.
          default: sample.azurecr.io/diagnostics-probe:0.5.0
        selfCheckFrequencySeconds:
          type: integer
          format: int64
          description: Frequency for the self check to run.
          default: 30
          minimum: 0
          maximum: 9223372036854000000
        selfCheckTimeoutSeconds:
          type: integer
          format: int64
          description: Time out period of the self check.
          default: 15
          minimum: 0
          maximum: 9223372036854000000
        selfTraceFrequencySeconds:
          type: integer
          format: int64
          description: The frequency at which selfTrace should run.
          default: 30
          minimum: 0
          maximum: 9223372036854000000
        spanChannelCapacity:
          type: integer
          format: int64
          description: The number of the spans generated by the Tracing.
          default: 1000
          minimum: 0
          maximum: 9223372036854000000
    BrokerListenerProperties:
      type: object
      description: Broker Listener Resource properties
      properties:
        authenticationEnabled:
          type: boolean
          description: The flag for enabling Authentication rules on Listener Port.
          default: false
        authorizationEnabled:
          type: boolean
          description: The flag for enabling Authorization policies on Listener Port. false - AllowAll, true - Use Authorization resource rules if present.
          default: false
        brokerRef:
          type: string
          description: The k8s cr/resource reference of mq/broker.
        nodePort:
          type: integer
          format: int32
          description: The node port to use on the Host node.
          minimum: 0
          maximum: 65535
        port:
          type: integer
          format: int32
          description: The port to start Listening for connections on.
          minimum: 0
          maximum: 65535
        serviceName:
          type: string
          description: The service name to expose Listener port on.
          default: aio-mq-dmqtt-frontend
        serviceType:
          type: string
          description: The Kubernetes Service type to deploy for Listener.
          default: clusterIp
          enum:
            - clusterIp
            - loadBalancer
            - nodePort
          x-ms-enum:
            name: ServiceType
            modelAsString: true
            values:
              - name: clusterIp
                value: clusterIp
                description: Cluster IP Service.
              - name: loadBalancer
                value: loadBalancer
                description: Load Balancer Service.
              - name: nodePort
                value: nodePort
                description: Node Port Service.
        tls:
          $ref: '#/components/schemas/TlsCertMethod'
          description: Defines configuration of a TLS server certificate. NOTE Enum - Only one TLS Cert method is supported
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - brokerRef
        - port
    BrokerListenerResource:
      description: MQ broker/listener resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/BrokerListenerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BrokerListenerResourceListResult:
      type: object
      description: The response of a BrokerListenerResource list operation.
      properties:
        value:
          type: array
          description: The BrokerListenerResource items on this page
          items:
            $ref: '#/components/schemas/BrokerListenerResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    BrokerListenerResourceUpdate:
      description: The type used for update operations of the BrokerListenerResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/BrokerListenerResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    BrokerListenerResourceUpdateProperties:
      type: object
      description: The updatable properties of the BrokerListenerResource.
      properties:
        authenticationEnabled:
          type: boolean
          description: The flag for enabling Authentication rules on Listener Port.
          default: false
        authorizationEnabled:
          type: boolean
          description: The flag for enabling Authorization policies on Listener Port. false - AllowAll, true - Use Authorization resource rules if present.
          default: false
        brokerRef:
          type: string
          description: The k8s cr/resource reference of mq/broker.
        nodePort:
          type: integer
          format: int32
          description: The node port to use on the Host node.
          minimum: 0
          maximum: 65535
        port:
          type: integer
          format: int32
          description: The port to start Listening for connections on.
          minimum: 0
          maximum: 65535
        serviceName:
          type: string
          description: The service name to expose Listener port on.
          default: aio-mq-dmqtt-frontend
        serviceType:
          type: string
          description: The Kubernetes Service type to deploy for Listener.
          default: clusterIp
          enum:
            - clusterIp
            - loadBalancer
            - nodePort
          x-ms-enum:
            name: ServiceType
            modelAsString: true
            values:
              - name: clusterIp
                value: clusterIp
                description: Cluster IP Service.
              - name: loadBalancer
                value: loadBalancer
                description: Load Balancer Service.
              - name: nodePort
                value: nodePort
                description: Node Port Service.
        tls:
          $ref: '#/components/schemas/TlsCertMethodUpdate'
          description: Defines configuration of a TLS server certificate. NOTE Enum - Only one TLS Cert method is supported
    BrokerMemoryProfile:
      type: string
      description: The memory profile settings of the Broker
      enum:
        - tiny
        - low
        - medium
        - high
      x-ms-enum:
        name: BrokerMemoryProfile
        modelAsString: true
        values:
          - name: tiny
            value: tiny
            description: Tiny memory profile.
          - name: low
            value: low
            description: Low memory profile.
          - name: medium
            value: medium
            description: Medium memory profile.
          - name: high
            value: high
            description: High memory profile.
    BrokerProperties:
      type: object
      description: Broker Resource properties
      properties:
        authImage:
          $ref: '#/components/schemas/ContainerImage'
          description: The details of Authentication Docker Image.
        brokerImage:
          $ref: '#/components/schemas/ContainerImage'
          description: The details of Broker Docker Image.
        brokerNodeTolerations:
          $ref: '#/components/schemas/NodeTolerations'
          description: The details of Node Tolerations for Broker Pods.
        cardinality:
          $ref: '#/components/schemas/Cardinality'
          description: The cardinality details of the broker.
        diagnostics:
          $ref: '#/components/schemas/BrokerDiagnostics'
          description: The diagnostic details of the broker deployment.
        diskBackedMessageBufferSettings:
          $ref: '#/components/schemas/DiskBackedMessageBufferSettings'
          description: The settings of the disk-backed message buffer.
        encryptInternalTraffic:
          type: boolean
          description: The setting to enable or disable encryption of internal Traffic.
          default: true
        healthManagerImage:
          $ref: '#/components/schemas/ContainerImage'
          description: The details of Health Manager Docker Image.
        healthManagerNodeTolerations:
          $ref: '#/components/schemas/NodeTolerations'
          description: The details of Node Tolerations for Health Manager Pods.
        internalCerts:
          $ref: '#/components/schemas/CertManagerCertOptions'
          description: Details of the internal CA cert that will be used to secure communication between pods.
        memoryProfile:
          type: string
          description: Memory profile of broker.
          default: medium
          enum:
            - tiny
            - low
            - medium
            - high
          x-ms-enum:
            name: BrokerMemoryProfile
            modelAsString: true
            values:
              - name: tiny
                value: tiny
                description: Tiny memory profile.
              - name: low
                value: low
                description: Low memory profile.
              - name: medium
                value: medium
                description: Medium memory profile.
              - name: high
                value: high
                description: High memory profile.
        mode:
          $ref: '#/components/schemas/RunMode'
          description: The Running Mode of the Broker Deployment.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - authImage
        - brokerImage
        - healthManagerImage
        - mode
    BrokerResource:
      description: MQ broker resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/BrokerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BrokerResourceListResult:
      type: object
      description: The response of a BrokerResource list operation.
      properties:
        value:
          type: array
          description: The BrokerResource items on this page
          items:
            $ref: '#/components/schemas/BrokerResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    BrokerResourceUpdate:
      description: The type used for update operations of the BrokerResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/BrokerResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    BrokerResourceUpdateProperties:
      type: object
      description: The updatable properties of the BrokerResource.
      properties:
        authImage:
          $ref: '#/components/schemas/ContainerImageUpdate'
          description: The details of Authentication Docker Image.
        brokerImage:
          $ref: '#/components/schemas/ContainerImageUpdate'
          description: The details of Broker Docker Image.
        brokerNodeTolerations:
          $ref: '#/components/schemas/NodeTolerationsUpdate'
          description: The details of Node Tolerations for Broker Pods.
        cardinality:
          $ref: '#/components/schemas/CardinalityUpdate'
          description: The cardinality details of the broker.
        diagnostics:
          $ref: '#/components/schemas/BrokerDiagnostics'
          description: The diagnostic details of the broker deployment.
        diskBackedMessageBufferSettings:
          $ref: '#/components/schemas/DiskBackedMessageBufferSettingsUpdate'
          description: The settings of the disk-backed message buffer.
        encryptInternalTraffic:
          type: boolean
          description: The setting to enable or disable encryption of internal Traffic.
          default: true
        healthManagerImage:
          $ref: '#/components/schemas/ContainerImageUpdate'
          description: The details of Health Manager Docker Image.
        healthManagerNodeTolerations:
          $ref: '#/components/schemas/NodeTolerationsUpdate'
          description: The details of Node Tolerations for Health Manager Pods.
        internalCerts:
          $ref: '#/components/schemas/CertManagerCertOptionsUpdate'
          description: Details of the internal CA cert that will be used to secure communication between pods.
        memoryProfile:
          type: string
          description: Memory profile of broker.
          default: medium
          enum:
            - tiny
            - low
            - medium
            - high
          x-ms-enum:
            name: BrokerMemoryProfile
            modelAsString: true
            values:
              - name: tiny
                value: tiny
                description: Tiny memory profile.
              - name: low
                value: low
                description: Low memory profile.
              - name: medium
                value: medium
                description: Medium memory profile.
              - name: high
                value: high
                description: High memory profile.
        mode:
          $ref: '#/components/schemas/RunMode'
          description: The Running Mode of the Broker Deployment.
    Cardinality:
      type: object
      description: Cardinality properties
      properties:
        backendChain:
          $ref: '#/components/schemas/BackendChain'
          description: The backend broker desired properties
        frontend:
          $ref: '#/components/schemas/Frontend'
          description: The frontend broker desired properties
      required:
        - backendChain
        - frontend
    CardinalityUpdate:
      type: object
      description: Cardinality properties
      properties:
        backendChain:
          $ref: '#/components/schemas/BackendChainUpdate'
          description: The backend broker desired properties
        frontend:
          $ref: '#/components/schemas/FrontendUpdate'
          description: The frontend broker desired properties
    CertManagerCertOptions:
      type: object
      description: Cert Manager CA Cert properties
      properties:
        duration:
          type: string
          description: Duration of CA cert.
          default: 720h
        privateKey:
          $ref: '#/components/schemas/CertManagerPrivateKey'
          description: Cert Manager private key.
        renewBefore:
          type: string
          description: Renew before time of CA cert.
          default: 240h
      required:
        - duration
        - privateKey
        - renewBefore
    CertManagerCertOptionsUpdate:
      type: object
      description: Cert Manager CA Cert properties
      properties:
        duration:
          type: string
          description: Duration of CA cert.
          default: 720h
        privateKey:
          $ref: '#/components/schemas/CertManagerPrivateKeyUpdate'
          description: Cert Manager private key.
        renewBefore:
          type: string
          description: Renew before time of CA cert.
          default: 240h
    CertManagerIssuerRef:
      type: object
      description: Cert-Manager issuerRef properties
      properties:
        group:
          type: string
          description: group of issuer.
          default: cert-manager.io
        kind:
          type: string
          description: kind of issuer (Issuer or ClusterIssuer).
        name:
          type: string
          description: name of issuer.
      required:
        - group
        - kind
        - name
    CertManagerIssuerRefUpdate:
      type: object
      description: Cert-Manager issuerRef properties
      properties:
        group:
          type: string
          description: group of issuer.
          default: cert-manager.io
        kind:
          type: string
          description: kind of issuer (Issuer or ClusterIssuer).
        name:
          type: string
          description: name of issuer.
    CertManagerPrivateKey:
      type: object
      description: Cert Manager private key properties
      properties:
        algorithm:
          type: string
          description: algorithm for private key.
          default: ECDSA
        rotationPolicy:
          type: string
          description: cert-manager rotationPolicy.
          default: Always
        size:
          type: integer
          format: int32
          description: size of private key.
          default: 256
          minimum: 0
          maximum: 65535
      required:
        - algorithm
        - rotationPolicy
        - size
    CertManagerPrivateKeyUpdate:
      type: object
      description: Cert Manager private key properties
      properties:
        algorithm:
          type: string
          description: algorithm for private key.
          default: ECDSA
        rotationPolicy:
          type: string
          description: cert-manager rotationPolicy.
          default: Always
        size:
          type: integer
          format: int32
          description: size of private key.
          default: 256
          minimum: 0
          maximum: 65535
    ContainerImage:
      type: object
      description: Defines the Docker image details
      properties:
        pullPolicy:
          type: string
          description: Image pull policy.
        pullSecrets:
          type: string
          description: Image pull secrets.
        repository:
          type: string
          description: The Docker image name.
        tag:
          type: string
          description: The Docker  image tag.
      required:
        - repository
        - tag
    ContainerImageUpdate:
      type: object
      description: Defines the Docker image details
      properties:
        pullPolicy:
          type: string
          description: Image pull policy.
        pullSecrets:
          type: string
          description: Image pull secrets.
        repository:
          type: string
          description: The Docker image name.
        tag:
          type: string
          description: The Docker  image tag.
    DataLakeConnectorMap:
      type: object
      description: DataLake connector map route properties
      properties:
        allowedLatencySecs:
          type: integer
          format: int32
          description: Allowed latency for transferring data.
          minimum: 0
          maximum: 65535
        clientId:
          type: string
          description: Client Id to use.
        maxMessagesPerBatch:
          type: integer
          format: int64
          description: Maximum messages to send per Batch.
          minimum: 0
          maximum: 4294967295
        messagePayloadType:
          type: string
          description: Message payload type.
        mqttSourceTopic:
          type: string
          description: Mqtt source topic.
        qos:
          type: integer
          format: int32
          description: Quality of Service.
          default: 1
          minimum: 0
          maximum: 2
        table:
          $ref: '#/components/schemas/DeltaTable'
          description: Delta table properties to use.
      required:
        - allowedLatencySecs
        - clientId
        - maxMessagesPerBatch
        - messagePayloadType
        - mqttSourceTopic
        - table
    DataLakeConnectorMapUpdate:
      type: object
      description: DataLake connector map route properties
      properties:
        allowedLatencySecs:
          type: integer
          format: int32
          description: Allowed latency for transferring data.
          minimum: 0
          maximum: 65535
        clientId:
          type: string
          description: Client Id to use.
        maxMessagesPerBatch:
          type: integer
          format: int64
          description: Maximum messages to send per Batch.
          minimum: 0
          maximum: 4294967295
        messagePayloadType:
          type: string
          description: Message payload type.
        mqttSourceTopic:
          type: string
          description: Mqtt source topic.
        qos:
          type: integer
          format: int32
          description: Quality of Service.
          default: 1
          minimum: 0
          maximum: 2
        table:
          $ref: '#/components/schemas/DeltaTableUpdate'
          description: Delta table properties to use.
    DataLakeConnectorProperties:
      type: object
      description: MQ DataLakeConnector  Resource properties
      properties:
        databaseFormat:
          $ref: '#/components/schemas/DataLakeDatabaseFormat'
          description: DataLake database format to use.
        image:
          $ref: '#/components/schemas/ContainerImage'
          description: The details of DataLakeConnector Docker Image.
        instances:
          type: integer
          format: int32
          description: The number of DataLakeConnector pods to spin up.
          minimum: 0
          maximum: 65535
        localBrokerConnection:
          $ref: '#/components/schemas/LocalBrokerConnectionSpec'
          description: The details for connecting with Local Broker.
        logLevel:
          type: string
          description: The log level of the DataLake Connector instances.
        nodeTolerations:
          $ref: '#/components/schemas/NodeTolerations'
          description: The Node Tolerations for the DataLake Connector pods.
        protocol:
          $ref: '#/components/schemas/MqttProtocol'
          description: The protocol to use for connecting with Brokers.
        target:
          $ref: '#/components/schemas/DataLakeTargetStorage'
          description: The protocol to use for connecting with Brokers. NOTE - Enum only storage is supported at at time.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - databaseFormat
        - image
        - protocol
        - target
    DataLakeConnectorResource:
      description: MQ dataLakeConnector resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/DataLakeConnectorProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    DataLakeConnectorResourceListResult:
      type: object
      description: The response of a DataLakeConnectorResource list operation.
      properties:
        value:
          type: array
          description: The DataLakeConnectorResource items on this page
          items:
            $ref: '#/components/schemas/DataLakeConnectorResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DataLakeConnectorResourceUpdate:
      description: The type used for update operations of the DataLakeConnectorResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/DataLakeConnectorResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DataLakeConnectorResourceUpdateProperties:
      type: object
      description: The updatable properties of the DataLakeConnectorResource.
      properties:
        databaseFormat:
          $ref: '#/components/schemas/DataLakeDatabaseFormat'
          description: DataLake database format to use.
        image:
          $ref: '#/components/schemas/ContainerImageUpdate'
          description: The details of DataLakeConnector Docker Image.
        instances:
          type: integer
          format: int32
          description: The number of DataLakeConnector pods to spin up.
          minimum: 0
          maximum: 65535
        localBrokerConnection:
          $ref: '#/components/schemas/LocalBrokerConnectionSpecUpdate'
          description: The details for connecting with Local Broker.
        logLevel:
          type: string
          description: The log level of the DataLake Connector instances.
        nodeTolerations:
          $ref: '#/components/schemas/NodeTolerationsUpdate'
          description: The Node Tolerations for the DataLake Connector pods.
        protocol:
          $ref: '#/components/schemas/MqttProtocol'
          description: The protocol to use for connecting with Brokers.
        target:
          $ref: '#/components/schemas/DataLakeTargetStorageUpdate'
          description: The protocol to use for connecting with Brokers. NOTE - Enum only storage is supported at at time.
    DataLakeConnectorTopicMapProperties:
      type: object
      description: MQ DataLakeConnector TopicMap Resource properties
      properties:
        dataLakeConnectorRef:
          type: string
          description: DataLake Connector CRD to use.
        mapping:
          $ref: '#/components/schemas/DataLakeConnectorMap'
          description: TopicMap for DataLake connector.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - dataLakeConnectorRef
        - mapping
    DataLakeDatabaseFormat:
      type: string
      description: DataLake possible database formats
      enum:
        - delta
        - parquet
      x-ms-enum:
        name: DataLakeDatabaseFormat
        modelAsString: true
        values:
          - name: delta
            value: delta
            description: Delta format.
          - name: parquet
            value: parquet
            description: Parquet format.
    DataLakeFabricStorage:
      type: object
      description: DataLake Fabric Storage details.
      properties:
        authentication:
          $ref: '#/components/schemas/DataLakeFabricStorageAuthentication'
          description: DataLake fabric storage authentication details.
        endpoint:
          type: string
          description: DataLake fabric storage endpoint to use.
        fabricPath:
          $ref: '#/components/schemas/FabricPathType'
          description: Fabric path type to use.
        guids:
          $ref: '#/components/schemas/FabricGuids'
          description: Fabric one lake Guids.
        names:
          $ref: '#/components/schemas/FabricNames'
          description: Fabric one lake Names.
      required:
        - authentication
        - endpoint
        - fabricPath
    DataLakeFabricStorageAuthentication:
      type: object
      description: DataLake Fabric Storage authentication details.
      properties:
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthentication'
          description: Configuration for managed identity authentication.
      required:
        - systemAssignedManagedIdentity
    DataLakeFabricStorageAuthenticationUpdate:
      type: object
      description: DataLake Fabric Storage authentication details.
      properties:
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthenticationUpdate'
          description: Configuration for managed identity authentication.
    DataLakeFabricStorageUpdate:
      type: object
      description: DataLake Fabric Storage details.
      properties:
        authentication:
          $ref: '#/components/schemas/DataLakeFabricStorageAuthenticationUpdate'
          description: DataLake fabric storage authentication details.
        endpoint:
          type: string
          description: DataLake fabric storage endpoint to use.
        fabricPath:
          $ref: '#/components/schemas/FabricPathType'
          description: Fabric path type to use.
        guids:
          $ref: '#/components/schemas/FabricGuidsUpdate'
          description: Fabric one lake Guids.
        names:
          $ref: '#/components/schemas/FabricNamesUpdate'
          description: Fabric one lake Names.
    DataLakeLocalStorage:
      type: object
      description: DataLake Local Storage details.
      properties:
        volumeName:
          type: string
          description: Volume name to write to.
      required:
        - volumeName
    DataLakeLocalStorageUpdate:
      type: object
      description: DataLake Local Storage details.
      properties:
        volumeName:
          type: string
          description: Volume name to write to.
    DataLakeServiceStorage:
      type: object
      description: DataLake Service Storage details.
      properties:
        endpoint:
          type: string
          description: DataLake service storage endpoint to use.
        authentication:
          $ref: '#/components/schemas/DataLakeServiceStorageAuthentication'
          description: DataLake service storage authentication details. NOTE - Enum only one method is supported.
      required:
        - endpoint
        - authentication
    DataLakeServiceStorageAuthentication:
      type: object
      description: DataLake Service Storage authentication details. NOTE - Enum only one method is supported.
      properties:
        accessTokenSecretName:
          type: string
          description: Access token secret name.
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthentication'
          description: Configuration for managed identity authentication.
    DataLakeServiceStorageAuthenticationUpdate:
      type: object
      description: DataLake Service Storage authentication details. NOTE - Enum only one method is supported.
      properties:
        accessTokenSecretName:
          type: string
          description: Access token secret name.
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthenticationUpdate'
          description: Configuration for managed identity authentication.
    DataLakeServiceStorageUpdate:
      type: object
      description: DataLake Service Storage details.
      properties:
        endpoint:
          type: string
          description: DataLake service storage endpoint to use.
        authentication:
          $ref: '#/components/schemas/DataLakeServiceStorageAuthenticationUpdate'
          description: DataLake service storage authentication details. NOTE - Enum only one method is supported.
    DataLakeTargetStorage:
      type: object
      description: Target storage for the DataLake. NOTE - Enum only storage is supported at a time.
      properties:
        datalakeStorage:
          $ref: '#/components/schemas/DataLakeServiceStorage'
          description: DataLake service storage details.
        localStorage:
          $ref: '#/components/schemas/DataLakeLocalStorage'
          description: Local storage details.
        fabricOneLake:
          $ref: '#/components/schemas/DataLakeFabricStorage'
          description: Fabric one lake storage details.
    DataLakeTargetStorageUpdate:
      type: object
      description: Target storage for the DataLake. NOTE - Enum only storage is supported at a time.
      properties:
        datalakeStorage:
          $ref: '#/components/schemas/DataLakeServiceStorageUpdate'
          description: DataLake service storage details.
        localStorage:
          $ref: '#/components/schemas/DataLakeLocalStorageUpdate'
          description: Local storage details.
        fabricOneLake:
          $ref: '#/components/schemas/DataLakeFabricStorageUpdate'
          description: Fabric one lake storage details.
    DataLakeTopicMapResource:
      description: MQ dataLakeConnector/topicMap resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/DataLakeConnectorTopicMapProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    DataLakeTopicMapResourceListResult:
      type: object
      description: The response of a DataLakeTopicMapResource list operation.
      properties:
        value:
          type: array
          description: The DataLakeTopicMapResource items on this page
          items:
            $ref: '#/components/schemas/DataLakeTopicMapResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DataLakeTopicMapResourceUpdate:
      description: The type used for update operations of the DataLakeTopicMapResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/DataLakeTopicMapResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DataLakeTopicMapResourceUpdateProperties:
      type: object
      description: The updatable properties of the DataLakeTopicMapResource.
      properties:
        dataLakeConnectorRef:
          type: string
          description: DataLake Connector CRD to use.
        mapping:
          $ref: '#/components/schemas/DataLakeConnectorMapUpdate'
          description: TopicMap for DataLake connector.
    DeltaTable:
      type: object
      description: Delta table properties
      properties:
        schema:
          type: array
          description: Schema list supported.
          items:
            $ref: '#/components/schemas/DeltaTableSchema'
          x-ms-identifiers: []
        tableName:
          type: string
          description: Delta table name.
        tablePath:
          type: string
          description: Delta table path.
      required:
        - schema
        - tableName
    DeltaTableFormatEnum:
      type: string
      description: Delta table format properties
      enum:
        - boolean
        - int8
        - int16
        - int32
        - uInt8
        - uInt16
        - uInt32
        - uInt64
        - float16
        - float32
        - float64
        - date32
        - date64
        - binary
        - utf8
      x-ms-enum:
        name: DeltaTableFormatEnum
        modelAsString: true
        values:
          - name: boolean
            value: boolean
            description: Bool format
          - name: int8
            value: int8
            description: Signed integer 8
          - name: int16
            value: int16
            description: Signed integer 16
          - name: int32
            value: int32
            description: Signed integer 32
          - name: uInt8
            value: uInt8
            description: Unsigned integer 8
          - name: uInt16
            value: uInt16
            description: Unsigned integer 16
          - name: uInt32
            value: uInt32
            description: Unsigned integer 32
          - name: uInt64
            value: uInt64
            description: Unsigned integer 64
          - name: float16
            value: float16
            description: Float 16
          - name: float32
            value: float32
            description: Float 32
          - name: float64
            value: float64
            description: Float 64
          - name: date32
            value: date32
            description: Date 32
          - name: date64
            value: date64
            description: Date 64
          - name: binary
            value: binary
            description: Binary data
          - name: utf8
            value: utf8
            description: UTF8 format
    DeltaTableSchema:
      type: object
      description: Delta table schema properties
      properties:
        format:
          $ref: '#/components/schemas/DeltaTableFormatEnum'
          description: Delta table format supported.
        mapping:
          type: string
          description: Delta table schema mapping.
        name:
          type: string
          description: Delta table schema name.
        optional:
          type: boolean
          description: Delta table schema optional.
      required:
        - format
        - mapping
        - name
        - optional
    DeltaTableUpdate:
      type: object
      description: Delta table properties
      properties:
        schema:
          type: array
          description: Schema list supported.
          items:
            $ref: '#/components/schemas/DeltaTableSchema'
          x-ms-identifiers: []
        tableName:
          type: string
          description: Delta table name.
        tablePath:
          type: string
          description: Delta table path.
    DiagnosticServiceProperties:
      type: object
      description: MQ Diagnostic Services Resource properties
      properties:
        dataExportFrequencySeconds:
          type: integer
          format: int32
          description: The frequency at which the data will be exported.
          default: 10
          minimum: 0
          maximum: 65535
        image:
          $ref: '#/components/schemas/ContainerImage'
          description: The details of Diagnostic Service Docker Image.
        logFormat:
          type: string
          description: The format for the logs generated.
          default: json
        logLevel:
          type: string
          description: The format for the logs generated.
          default: info
        maxDataStorageSize:
          type: integer
          format: int64
          description: The maximum data stored in MiB.
          default: 16
          minimum: 0
          maximum: 4294967295
        metricsPort:
          type: integer
          format: int32
          description: The port at which metrics is exposed.
          default: 9600
          minimum: 0
          maximum: 65535
        openTelemetryTracesCollectorAddr:
          type: string
          description: The destination to collect traces. Diagnostic service will push traces to this endpoint
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
        staleDataTimeoutSeconds:
          type: integer
          format: int32
          description: Metric inactivity timeout.
          default: 600
          minimum: 0
          maximum: 65535
      required:
        - image
    DiagnosticServiceResource:
      description: MQ diagnostic services resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/DiagnosticServiceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    DiagnosticServiceResourceListResult:
      type: object
      description: The response of a DiagnosticServiceResource list operation.
      properties:
        value:
          type: array
          description: The DiagnosticServiceResource items on this page
          items:
            $ref: '#/components/schemas/DiagnosticServiceResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DiagnosticServiceResourceUpdate:
      description: The type used for update operations of the DiagnosticServiceResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/DiagnosticServiceResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DiagnosticServiceResourceUpdateProperties:
      type: object
      description: The updatable properties of the DiagnosticServiceResource.
      properties:
        dataExportFrequencySeconds:
          type: integer
          format: int32
          description: The frequency at which the data will be exported.
          default: 10
          minimum: 0
          maximum: 65535
        image:
          $ref: '#/components/schemas/ContainerImageUpdate'
          description: The details of Diagnostic Service Docker Image.
        logFormat:
          type: string
          description: The format for the logs generated.
          default: json
        logLevel:
          type: string
          description: The format for the logs generated.
          default: info
        maxDataStorageSize:
          type: integer
          format: int64
          description: The maximum data stored in MiB.
          default: 16
          minimum: 0
          maximum: 4294967295
        metricsPort:
          type: integer
          format: int32
          description: The port at which metrics is exposed.
          default: 9600
          minimum: 0
          maximum: 65535
        openTelemetryTracesCollectorAddr:
          type: string
          description: The destination to collect traces. Diagnostic service will push traces to this endpoint
        staleDataTimeoutSeconds:
          type: integer
          format: int32
          description: Metric inactivity timeout.
          default: 600
          minimum: 0
          maximum: 65535
    DiskBackedMessageBufferSettings:
      type: object
      description: DiskBackedMessageBufferSettings properties
      properties:
        ephemeralVolumeClaimSpec:
          $ref: '#/components/schemas/VolumeClaimSpec'
          description: Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
        maxSize:
          type: string
          description: The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
        persistentVolumeClaimSpec:
          $ref: '#/components/schemas/VolumeClaimSpec'
          description: Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
      required:
        - maxSize
    DiskBackedMessageBufferSettingsUpdate:
      type: object
      description: DiskBackedMessageBufferSettings properties
      properties:
        ephemeralVolumeClaimSpec:
          $ref: '#/components/schemas/VolumeClaimSpecUpdate'
          description: Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
        maxSize:
          type: string
          description: The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
        persistentVolumeClaimSpec:
          $ref: '#/components/schemas/VolumeClaimSpecUpdate'
          description: Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
    ExtendedLocationProperty:
      type: object
      description: ExtendedLocation properties
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: Type of ExtendedLocation.
      required:
        - name
        - type
    ExtendedLocationType:
      type: string
      description: The enum defining type of ExtendedLocation accepted.
      enum:
        - CustomLocation
      x-ms-enum:
        name: ExtendedLocationType
        modelAsString: true
        values:
          - name: CustomLocation
            value: CustomLocation
            description: CustomLocation type
    FabricGuids:
      type: object
      description: Fabric one lake guids.
      properties:
        lakehouseGuid:
          type: string
          description: Fabric one lake house guid.
        workspaceGuid:
          type: string
          description: Fabric one lake workspace guid.
      required:
        - lakehouseGuid
        - workspaceGuid
    FabricGuidsUpdate:
      type: object
      description: Fabric one lake guids.
      properties:
        lakehouseGuid:
          type: string
          description: Fabric one lake house guid.
        workspaceGuid:
          type: string
          description: Fabric one lake workspace guid.
    FabricNames:
      type: object
      description: Fabric one lake names.
      properties:
        lakehouseName:
          type: string
          description: Fabric one lake house name.
        workspaceName:
          type: string
          description: Fabric one lake workspace name.
      required:
        - lakehouseName
        - workspaceName
    FabricNamesUpdate:
      type: object
      description: Fabric one lake names.
      properties:
        lakehouseName:
          type: string
          description: Fabric one lake house name.
        workspaceName:
          type: string
          description: Fabric one lake workspace name.
    FabricPathType:
      type: string
      description: Fabric path type to use.
      enum:
        - files
        - tables
      x-ms-enum:
        name: FabricPathType
        modelAsString: true
        values:
          - name: files
            value: files
            description: Fabric path type is Files.
          - name: tables
            value: tables
            description: Fabric path type is Tables.
    Frontend:
      type: object
      description: Desired properties of the Frontend Instances of the DMQTT Broker
      properties:
        replicas:
          type: integer
          format: int32
          description: Replicas is desired number of frontend replicas of the given distributed MQTT broker.
          minimum: 0
          maximum: 65535
        temporaryResourceLimits:
          $ref: '#/components/schemas/TemporaryResourceLimitsConfig'
          description: Defines the limits for resources of the frontend instances of the MQTT broker.
        workers:
          type: integer
          format: int32
          description: Number of logical frontend workers per pod.
          default: 2
          minimum: 0
          maximum: 65535
      required:
        - replicas
    FrontendUpdate:
      type: object
      description: Desired properties of the Frontend Instances of the DMQTT Broker
      properties:
        replicas:
          type: integer
          format: int32
          description: Replicas is desired number of frontend replicas of the given distributed MQTT broker.
          minimum: 0
          maximum: 65535
        temporaryResourceLimits:
          $ref: '#/components/schemas/TemporaryResourceLimitsConfigUpdate'
          description: Defines the limits for resources of the frontend instances of the MQTT broker.
        workers:
          type: integer
          format: int32
          description: Number of logical frontend workers per pod.
          default: 2
          minimum: 0
          maximum: 65535
    KafkaAcks:
      type: string
      description: Kafka Acks enum properties
      enum:
        - zero
        - one
        - all
      x-ms-enum:
        name: KafkaAcks
        modelAsString: true
        values:
          - name: zero
            value: zero
            description: Kafka acks zero.
          - name: one
            value: one
            description: Kafka acks one.
          - name: all
            value: all
            description: Kafka acks all.
    KafkaConnectorProperties:
      type: object
      description: KafkaConnector Properties
      properties:
        clientIdPrefix:
          type: string
          description: The client id prefix of the dynamically generated client ids.
        image:
          $ref: '#/components/schemas/ContainerImage'
          description: The details of KafkaConnector Docker Image.
        instances:
          type: integer
          format: int32
          description: The number of KafkaConnector pods to spin up.
          minimum: 0
          maximum: 65535
        kafkaConnection:
          $ref: '#/components/schemas/KafkaRemoteBrokerConnectionSpec'
          description: The details for connecting with Remote Kafka Broker.
        localBrokerConnection:
          $ref: '#/components/schemas/LocalBrokerConnectionSpec'
          description: The details for connecting with Local Broker.
        logLevel:
          type: string
          description: The log level of the Bridge Connector instances.
          default: info
        nodeTolerations:
          $ref: '#/components/schemas/NodeTolerations'
          description: The Node Tolerations for the Bridge Connector pods.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - kafkaConnection
    KafkaConnectorResource:
      description: MQ kafkaConnector resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/KafkaConnectorProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    KafkaConnectorResourceListResult:
      type: object
      description: The response of a KafkaConnectorResource list operation.
      properties:
        value:
          type: array
          description: The KafkaConnectorResource items on this page
          items:
            $ref: '#/components/schemas/KafkaConnectorResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    KafkaConnectorResourceUpdate:
      description: The type used for update operations of the KafkaConnectorResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/KafkaConnectorResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    KafkaConnectorResourceUpdateProperties:
      type: object
      description: The updatable properties of the KafkaConnectorResource.
      properties:
        clientIdPrefix:
          type: string
          description: The client id prefix of the dynamically generated client ids.
        image:
          $ref: '#/components/schemas/ContainerImageUpdate'
          description: The details of KafkaConnector Docker Image.
        instances:
          type: integer
          format: int32
          description: The number of KafkaConnector pods to spin up.
          minimum: 0
          maximum: 65535
        kafkaConnection:
          $ref: '#/components/schemas/KafkaRemoteBrokerConnectionSpecUpdate'
          description: The details for connecting with Remote Kafka Broker.
        localBrokerConnection:
          $ref: '#/components/schemas/LocalBrokerConnectionSpecUpdate'
          description: The details for connecting with Local Broker.
        logLevel:
          type: string
          description: The log level of the Bridge Connector instances.
          default: info
        nodeTolerations:
          $ref: '#/components/schemas/NodeTolerationsUpdate'
          description: The Node Tolerations for the Bridge Connector pods.
    KafkaMessageCompressionType:
      type: string
      description: Kafka Message compression enum properties
      enum:
        - none
        - gzip
        - snappy
        - lz4
      x-ms-enum:
        name: KafkaMessageCompressionType
        modelAsString: true
        values:
          - name: none
            value: none
            description: No Kafka message compression.
          - name: gzip
            value: gzip
            description: Gzip Kafka message compression.
          - name: snappy
            value: snappy
            description: Snappy Kafka message compression.
          - name: lz4
            value: lz4
            description: Lz4 Kafka message compression.
    KafkaPartitionStrategy:
      type: string
      description: Kafka Partition Strategy enum properties
      enum:
        - default
        - static
        - topic
        - property
      x-ms-enum:
        name: KafkaPartitionStrategy
        modelAsString: true
        values:
          - name: default
            value: default
            description: Default partition strategy.
          - name: static
            value: static
            description: Static partition strategy.
          - name: topic
            value: topic
            description: Topic partition strategy.
          - name: property
            value: property
            description: Property partition strategy.
    KafkaRemoteBrokerAuthenticationProperties:
      type: object
      description: Kafka RemoteBrokerConnection Authentication methods
      properties:
        authType:
          $ref: '#/components/schemas/KafkaRemoteBrokerAuthenticationTypes'
          description: The type of authentication to use for Kafka remote broker.
        enabled:
          type: boolean
          description: If authentication is enabled for Kafka remote broker.
      required:
        - enabled
    KafkaRemoteBrokerAuthenticationPropertiesUpdate:
      type: object
      description: Kafka RemoteBrokerConnection Authentication methods
      properties:
        authType:
          $ref: '#/components/schemas/KafkaRemoteBrokerAuthenticationTypesUpdate'
          description: The type of authentication to use for Kafka remote broker.
        enabled:
          type: boolean
          description: If authentication is enabled for Kafka remote broker.
    KafkaRemoteBrokerAuthenticationTypes:
      type: object
      description: Kafka RemoteBrokerConnection Authentication types. NOTE - Enum only one method is allowed to be passed.
      properties:
        sasl:
          $ref: '#/components/schemas/SaslRemoteBrokerBasicAuthentication'
          description: Sasl remote broker authentication method.
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthentication'
          description: Managed identity remote broker authentication method.
        x509:
          $ref: '#/components/schemas/KafkaX509Authentication'
          description: X509 remote broker authentication method.
    KafkaRemoteBrokerAuthenticationTypesUpdate:
      type: object
      description: Kafka RemoteBrokerConnection Authentication types. NOTE - Enum only one method is allowed to be passed.
      properties:
        sasl:
          $ref: '#/components/schemas/SaslRemoteBrokerBasicAuthenticationUpdate'
          description: Sasl remote broker authentication method.
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthenticationUpdate'
          description: Managed identity remote broker authentication method.
        x509:
          $ref: '#/components/schemas/KafkaX509AuthenticationUpdate'
          description: X509 remote broker authentication method.
    KafkaRemoteBrokerConnectionSpec:
      type: object
      description: Kafka RemoteBrokerConnectionSpec details
      properties:
        authentication:
          $ref: '#/components/schemas/KafkaRemoteBrokerAuthenticationProperties'
          description: The remote broker authentication methods.
        endpoint:
          type: string
          description: The endpoint of remote broker to connect to.
        tls:
          $ref: '#/components/schemas/KafkaRemoteBrokerConnectionTls'
          description: TLS details for Remote broker Connection.
      required:
        - authentication
        - endpoint
        - tls
    KafkaRemoteBrokerConnectionSpecUpdate:
      type: object
      description: Kafka RemoteBrokerConnectionSpec details
      properties:
        authentication:
          $ref: '#/components/schemas/KafkaRemoteBrokerAuthenticationPropertiesUpdate'
          description: The remote broker authentication methods.
        endpoint:
          type: string
          description: The endpoint of remote broker to connect to.
        tls:
          $ref: '#/components/schemas/KafkaRemoteBrokerConnectionTlsUpdate'
          description: TLS details for Remote broker Connection.
    KafkaRemoteBrokerConnectionTls:
      type: object
      description: Kafka RemoteBrokerConnection TLS details
      properties:
        tlsEnabled:
          type: boolean
          description: Tls Enabled on Remote Broker Connection.
        trustedCaCertificateConfigMap:
          type: string
          description: Trusted CA certificate name for Remote Broker.
      required:
        - tlsEnabled
    KafkaRemoteBrokerConnectionTlsUpdate:
      type: object
      description: Kafka RemoteBrokerConnection TLS details
      properties:
        tlsEnabled:
          type: boolean
          description: Tls Enabled on Remote Broker Connection.
        trustedCaCertificateConfigMap:
          type: string
          description: Trusted CA certificate name for Remote Broker.
    KafkaRoutes:
      type: object
      description: Kafka Routes properties. NOTE - Enum only one method is allowed to be passed.
      properties:
        kafkaToMqtt:
          $ref: '#/components/schemas/KafkaToMqttRoutes'
          description: Kafka to Mqtt route.
        mqttToKafka:
          $ref: '#/components/schemas/MqttToKafkaRoutes'
          description: Mqtt to Kafka route.
    KafkaSaslType:
      type: string
      description: Kafka Sasl Authentication types
      enum:
        - plain
        - scramSha256
        - scramSha512
      x-ms-enum:
        name: KafkaSaslType
        modelAsString: true
        values:
          - name: plain
            value: plain
            description: Sasl Plain authentication.
          - name: scramSha256
            value: scramSha256
            description: Sasl ScramSha256 authentication.
          - name: scramSha512
            value: scramSha512
            description: Sasl ScramSha512 authentication.
    KafkaSharedSubscriptionProperties:
      type: object
      description: Kafka Shared Subscription properties
      properties:
        groupMinimumShareNumber:
          type: integer
          format: int32
          description: The minimum number to use in a group for subscription.
          minimum: 0
          maximum: 255
        groupName:
          type: string
          description: The name of the shared subscription.
      required:
        - groupMinimumShareNumber
        - groupName
    KafkaToMqttRoutes:
      type: object
      description: Kafka to Mqtt route properties
      properties:
        consumerGroupId:
          type: string
          description: The consumer group id to use.
        kafkaTopic:
          type: string
          description: The kafka topic to pull from.
        mqttTopic:
          type: string
          description: The mqtt topic to publish to.
        name:
          type: string
          description: The name of the route.
        qos:
          type: integer
          format: int32
          description: The qos to use for mqtt.
          default: 1
          minimum: 0
          maximum: 1
      required:
        - kafkaTopic
        - mqttTopic
        - name
    KafkaTokenKeyVaultProperties:
      type: object
      description: Kafka Token KeyVault properties.
      properties:
        username:
          type: string
          description: Username to connect with.
        vault:
          $ref: '#/components/schemas/KeyVaultConnectionProperties'
          description: KeyVault properties.
        vaultSecret:
          $ref: '#/components/schemas/KeyVaultSecretObject'
          description: KeyVault secret details.
      required:
        - vault
        - vaultSecret
    KafkaTokenKeyVaultPropertiesUpdate:
      type: object
      description: Kafka Token KeyVault properties.
      properties:
        username:
          type: string
          description: Username to connect with.
        vault:
          $ref: '#/components/schemas/KeyVaultConnectionPropertiesUpdate'
          description: KeyVault properties.
        vaultSecret:
          $ref: '#/components/schemas/KeyVaultSecretObjectUpdate'
          description: KeyVault secret details.
    KafkaTopicMapBatching:
      type: object
      description: Kafka TopicMap Batching properties
      properties:
        enabled:
          type: boolean
          description: The setting to enable or disable batching.
          default: false
        latencyMs:
          type: integer
          format: int32
          description: The latency of message batching.
          default: 5
          minimum: 0
          maximum: 65535
        maxBytes:
          type: integer
          format: int64
          description: The maximum bytes to send in a batch.
          default: 1000000
          minimum: 0
          maximum: 4294967295
        maxMessages:
          type: integer
          format: int64
          description: The maximum messages to send in a batch.
          default: 100000
          minimum: 0
          maximum: 4294967295
    KafkaTopicMapProperties:
      type: object
      description: KafkaTopicMap Properties
      properties:
        batching:
          $ref: '#/components/schemas/KafkaTopicMapBatching'
          description: The batching settings for kafka messages.
        compression:
          type: string
          description: The compression to use for kafka messages.
          default: none
          enum:
            - none
            - gzip
            - snappy
            - lz4
          x-ms-enum:
            name: KafkaMessageCompressionType
            modelAsString: true
            values:
              - name: none
                value: none
                description: No Kafka message compression.
              - name: gzip
                value: gzip
                description: Gzip Kafka message compression.
              - name: snappy
                value: snappy
                description: Snappy Kafka message compression.
              - name: lz4
                value: lz4
                description: Lz4 Kafka message compression.
        copyMqttProperties:
          type: string
          description: The flag to copy Mqtt properties.
        kafkaConnectorRef:
          type: string
          description: The kafkaConnector CRD it refers to.
        partitionKeyProperty:
          type: string
          description: The partition to use for Kafka.
        partitionStrategy:
          type: string
          description: The partition strategy to use for Kafka.
          default: default
          enum:
            - default
            - static
            - topic
            - property
          x-ms-enum:
            name: KafkaPartitionStrategy
            modelAsString: true
            values:
              - name: default
                value: default
                description: Default partition strategy.
              - name: static
                value: static
                description: Static partition strategy.
              - name: topic
                value: topic
                description: Topic partition strategy.
              - name: property
                value: property
                description: Property partition strategy.
        routes:
          type: array
          description: The route details for Kafka connector.
          items:
            $ref: '#/components/schemas/KafkaRoutes'
          x-ms-identifiers: []
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - kafkaConnectorRef
        - routes
    KafkaTopicMapResource:
      description: MQ kafkaConnector/topicMap resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/KafkaTopicMapProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    KafkaTopicMapResourceListResult:
      type: object
      description: The response of a KafkaTopicMapResource list operation.
      properties:
        value:
          type: array
          description: The KafkaTopicMapResource items on this page
          items:
            $ref: '#/components/schemas/KafkaTopicMapResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    KafkaTopicMapResourceUpdate:
      description: The type used for update operations of the KafkaTopicMapResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/KafkaTopicMapResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    KafkaTopicMapResourceUpdateProperties:
      type: object
      description: The updatable properties of the KafkaTopicMapResource.
      properties:
        batching:
          $ref: '#/components/schemas/KafkaTopicMapBatching'
          description: The batching settings for kafka messages.
        compression:
          type: string
          description: The compression to use for kafka messages.
          default: none
          enum:
            - none
            - gzip
            - snappy
            - lz4
          x-ms-enum:
            name: KafkaMessageCompressionType
            modelAsString: true
            values:
              - name: none
                value: none
                description: No Kafka message compression.
              - name: gzip
                value: gzip
                description: Gzip Kafka message compression.
              - name: snappy
                value: snappy
                description: Snappy Kafka message compression.
              - name: lz4
                value: lz4
                description: Lz4 Kafka message compression.
        copyMqttProperties:
          type: string
          description: The flag to copy Mqtt properties.
        kafkaConnectorRef:
          type: string
          description: The kafkaConnector CRD it refers to.
        partitionKeyProperty:
          type: string
          description: The partition to use for Kafka.
        partitionStrategy:
          type: string
          description: The partition strategy to use for Kafka.
          default: default
          enum:
            - default
            - static
            - topic
            - property
          x-ms-enum:
            name: KafkaPartitionStrategy
            modelAsString: true
            values:
              - name: default
                value: default
                description: Default partition strategy.
              - name: static
                value: static
                description: Static partition strategy.
              - name: topic
                value: topic
                description: Topic partition strategy.
              - name: property
                value: property
                description: Property partition strategy.
        routes:
          type: array
          description: The route details for Kafka connector.
          items:
            $ref: '#/components/schemas/KafkaRoutes'
          x-ms-identifiers: []
    KafkaX509Authentication:
      type: object
      description: Kafka RemoteBrokerConnection X509 Authentication properties.
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultCertificateProperties'
          description: Keyvault X509 secret properties.
        secretName:
          type: string
          description: Secret where cert details are stored.
    KafkaX509AuthenticationUpdate:
      type: object
      description: Kafka RemoteBrokerConnection X509 Authentication properties.
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultCertificatePropertiesUpdate'
          description: Keyvault X509 secret properties.
        secretName:
          type: string
          description: Secret where cert details are stored.
    KeyVaultCertificateProperties:
      type: object
      description: KeyVault certificate properties
      properties:
        vault:
          $ref: '#/components/schemas/KeyVaultConnectionProperties'
          description: KeyVault properties.
        vaultCaChainSecret:
          $ref: '#/components/schemas/KeyVaultSecretObject'
          description: KeyVault CA chain secret details.
        vaultCert:
          $ref: '#/components/schemas/KeyVaultSecretObject'
          description: KeyVault Cert secret details.
      required:
        - vault
        - vaultCert
    KeyVaultCertificatePropertiesUpdate:
      type: object
      description: KeyVault certificate properties
      properties:
        vault:
          $ref: '#/components/schemas/KeyVaultConnectionPropertiesUpdate'
          description: KeyVault properties.
        vaultCaChainSecret:
          $ref: '#/components/schemas/KeyVaultSecretObjectUpdate'
          description: KeyVault CA chain secret details.
        vaultCert:
          $ref: '#/components/schemas/KeyVaultSecretObjectUpdate'
          description: KeyVault Cert secret details.
    KeyVaultConnectionProperties:
      type: object
      description: KeyVault properties
      properties:
        credentials:
          $ref: '#/components/schemas/KeyVaultCredentialsProperties'
          description: KeyVault credentials.
        directoryId:
          type: string
          description: KeyVault directoryId.
        name:
          type: string
          description: KeyVault name.
      required:
        - credentials
        - directoryId
        - name
    KeyVaultConnectionPropertiesUpdate:
      type: object
      description: KeyVault properties
      properties:
        credentials:
          $ref: '#/components/schemas/KeyVaultCredentialsPropertiesUpdate'
          description: KeyVault credentials.
        directoryId:
          type: string
          description: KeyVault directoryId.
        name:
          type: string
          description: KeyVault name.
    KeyVaultCredentialsProperties:
      type: object
      description: KeyVault credentials properties. NOTE - Future this will be ENUM.
      properties:
        servicePrincipalLocalSecretName:
          type: string
          description: KeyVault service principal local secret name.
      required:
        - servicePrincipalLocalSecretName
    KeyVaultCredentialsPropertiesUpdate:
      type: object
      description: KeyVault credentials properties. NOTE - Future this will be ENUM.
      properties:
        servicePrincipalLocalSecretName:
          type: string
          description: KeyVault service principal local secret name.
    KeyVaultSecretObject:
      type: object
      description: KeyVault secret object properties
      properties:
        name:
          type: string
          description: KeyVault secret name.
        version:
          type: string
          description: KeyVault secret version.
      required:
        - name
    KeyVaultSecretObjectUpdate:
      type: object
      description: KeyVault secret object properties
      properties:
        name:
          type: string
          description: KeyVault secret name.
        version:
          type: string
          description: KeyVault secret version.
    KeyVaultSecretProperties:
      type: object
      description: KeyVault secret properties
      properties:
        vault:
          $ref: '#/components/schemas/KeyVaultConnectionProperties'
          description: KeyVault properties.
        vaultSecret:
          $ref: '#/components/schemas/KeyVaultSecretObject'
          description: KeyVault secret details.
      required:
        - vault
        - vaultSecret
    LocalBrokerAuthenticationMethods:
      type: object
      description: Mqtt Local Broker Authentication details. Only one method at a time is supported. Default - kubernetes authentication
      properties:
        kubernetes:
          $ref: '#/components/schemas/LocalBrokerKubernetesAuthentication'
          description: Kubernetes local broker authentication method.
      required:
        - kubernetes
    LocalBrokerAuthenticationMethodsUpdate:
      type: object
      description: Mqtt Local Broker Authentication details. Only one method at a time is supported. Default - kubernetes authentication
      properties:
        kubernetes:
          $ref: '#/components/schemas/LocalBrokerKubernetesAuthentication'
          description: Kubernetes local broker authentication method.
    LocalBrokerConnectionSpec:
      type: object
      description: Mqtt Local Broker ConnectionSpec details
      properties:
        authentication:
          $ref: '#/components/schemas/LocalBrokerAuthenticationMethods'
          description: The authentication methods for LocalBroker connection. NOTE - Enum only one method at a time is supported.
        endpoint:
          type: string
          description: The endpoint of local broker to connect to.
          default: aio-mq-dmqtt-frontend:1883
        tls:
          $ref: '#/components/schemas/LocalBrokerConnectionTls'
          description: TLS details for Local broker Connection.
    LocalBrokerConnectionSpecUpdate:
      type: object
      description: Mqtt Local Broker ConnectionSpec details
      properties:
        authentication:
          $ref: '#/components/schemas/LocalBrokerAuthenticationMethodsUpdate'
          description: The authentication methods for LocalBroker connection. NOTE - Enum only one method at a time is supported.
        endpoint:
          type: string
          description: The endpoint of local broker to connect to.
          default: aio-mq-dmqtt-frontend:1883
        tls:
          $ref: '#/components/schemas/LocalBrokerConnectionTls'
          description: TLS details for Local broker Connection.
    LocalBrokerConnectionTls:
      type: object
      description: Mqtt Local Broker Connection TLS details
      properties:
        tlsEnabled:
          type: boolean
          description: Tls Enabled on Local Broker Connection.
          default: false
        trustedCaCertificateConfigMap:
          type: string
          description: Trusted CA certificate config map name for Local Broker.
    LocalBrokerKubernetesAuthentication:
      type: object
      description: Local Broker Kubernetes Authentication
      properties:
        secretPath:
          type: string
          description: Secret Path where SAT is mounted.
          default: /var/run/serviceaccount/localbroker
        serviceAccountTokenName:
          type: string
          description: Token name where SAT is mounted on secret path.
          default: sat
    ManagedIdentityAuthentication:
      type: object
      description: Managed identity authentication details.
      properties:
        audience:
          type: string
          description: Token audience.
        extensionName:
          type: string
          description: Arc Extension name.
      required:
        - audience
    ManagedIdentityAuthenticationUpdate:
      type: object
      description: Managed identity authentication details.
      properties:
        audience:
          type: string
          description: Token audience.
        extensionName:
          type: string
          description: Arc Extension name.
    ManualCertMethod:
      type: object
      description: Manual TLS server certificate management through a defined secret
      properties:
        secretName:
          type: string
          description: secret containing TLS cert.
        secretNamespace:
          type: string
          description: namespace of secret; omit to use default namespace.
      required:
        - secretName
    ManualCertMethodUpdate:
      type: object
      description: Manual TLS server certificate management through a defined secret
      properties:
        secretName:
          type: string
          description: secret containing TLS cert.
        secretNamespace:
          type: string
          description: namespace of secret; omit to use default namespace.
    MqProperties:
      type: object
      description: MQ Resource properties
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    MqResource:
      description: MQ resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/MqProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MqResourceListResult:
      type: object
      description: The response of a MqResource list operation.
      properties:
        value:
          type: array
          description: The MqResource items on this page
          items:
            $ref: '#/components/schemas/MqResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    MqResourceUpdate:
      type: object
      description: The type used for update operations of the MqResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
    MqttBridgeConnectorProperties:
      type: object
      description: MqttBridgeConnector Properties
      properties:
        bridgeInstances:
          type: integer
          format: int32
          description: The number of instances to deploy for a bridge rollout.
          minimum: 0
          maximum: 65535
        clientIdPrefix:
          type: string
          description: The client id prefix of the dynamically generated client ids.
        image:
          $ref: '#/components/schemas/ContainerImage'
          description: The details of MqttBridge Docker Image.
        localBrokerConnection:
          $ref: '#/components/schemas/LocalBrokerConnectionSpec'
          description: The details for connecting with Local Broker.
        logLevel:
          type: string
          description: The log level of the Bridge Connector instances.
        nodeTolerations:
          $ref: '#/components/schemas/NodeTolerations'
          description: The Node Tolerations for the Bridge Connector pods.
        protocol:
          $ref: '#/components/schemas/MqttProtocol'
          description: The protocol to use for connecting with Brokers.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
        remoteBrokerConnection:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerConnectionSpec'
          description: The details for connecting with Remote Broker.
      required:
        - image
        - protocol
        - remoteBrokerConnection
    MqttBridgeConnectorResource:
      description: MQ mqttBridgeConnector resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/MqttBridgeConnectorProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MqttBridgeConnectorResourceListResult:
      type: object
      description: The response of a MqttBridgeConnectorResource list operation.
      properties:
        value:
          type: array
          description: The MqttBridgeConnectorResource items on this page
          items:
            $ref: '#/components/schemas/MqttBridgeConnectorResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    MqttBridgeConnectorResourceUpdate:
      description: The type used for update operations of the MqttBridgeConnectorResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/MqttBridgeConnectorResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    MqttBridgeConnectorResourceUpdateProperties:
      type: object
      description: The updatable properties of the MqttBridgeConnectorResource.
      properties:
        bridgeInstances:
          type: integer
          format: int32
          description: The number of instances to deploy for a bridge rollout.
          minimum: 0
          maximum: 65535
        clientIdPrefix:
          type: string
          description: The client id prefix of the dynamically generated client ids.
        image:
          $ref: '#/components/schemas/ContainerImageUpdate'
          description: The details of MqttBridge Docker Image.
        localBrokerConnection:
          $ref: '#/components/schemas/LocalBrokerConnectionSpecUpdate'
          description: The details for connecting with Local Broker.
        logLevel:
          type: string
          description: The log level of the Bridge Connector instances.
        nodeTolerations:
          $ref: '#/components/schemas/NodeTolerationsUpdate'
          description: The Node Tolerations for the Bridge Connector pods.
        protocol:
          $ref: '#/components/schemas/MqttProtocol'
          description: The protocol to use for connecting with Brokers.
        remoteBrokerConnection:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerConnectionSpecUpdate'
          description: The details for connecting with Remote Broker.
    MqttBridgeRemoteBrokerAuthenticationMethods:
      type: object
      description: MqttBridge RemoteBrokerConnection Authentication methods. NOTE - Enum only one is allowed to be passed.
      properties:
        x509:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerX509Authentication'
          description: X509 remote broker authentication method.
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthentication'
          description: Managed identity remote broker authentication method.
    MqttBridgeRemoteBrokerAuthenticationMethodsUpdate:
      type: object
      description: MqttBridge RemoteBrokerConnection Authentication methods. NOTE - Enum only one is allowed to be passed.
      properties:
        x509:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerX509AuthenticationUpdate'
          description: X509 remote broker authentication method.
        systemAssignedManagedIdentity:
          $ref: '#/components/schemas/ManagedIdentityAuthenticationUpdate'
          description: Managed identity remote broker authentication method.
    MqttBridgeRemoteBrokerConnectionSpec:
      type: object
      description: MqttBridge RemoteBrokerConnectionSpec details
      properties:
        authentication:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerAuthenticationMethods'
          description: The remote broker authentication methods. NOTE - Enum only one method is allowed to be passed.
        endpoint:
          type: string
          description: The endpoint of remote broker to connect to.
        protocol:
          type: string
          description: Protocol for remote connection.
          default: mqtt
          enum:
            - mqtt
            - webSocket
          x-ms-enum:
            name: MqttBridgeRemoteBrokerProtocol
            modelAsString: true
            values:
              - name: mqtt
                value: mqtt
                description: MQTT protocol.
              - name: webSocket
                value: webSocket
                description: MQTT over WebSocket protocol.
        tls:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerConnectionTls'
          description: TLS details for Remote broker Connection.
      required:
        - authentication
        - endpoint
        - tls
    MqttBridgeRemoteBrokerConnectionSpecUpdate:
      type: object
      description: MqttBridge RemoteBrokerConnectionSpec details
      properties:
        authentication:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerAuthenticationMethodsUpdate'
          description: The remote broker authentication methods. NOTE - Enum only one method is allowed to be passed.
        endpoint:
          type: string
          description: The endpoint of remote broker to connect to.
        protocol:
          type: string
          description: Protocol for remote connection.
          default: mqtt
          enum:
            - mqtt
            - webSocket
          x-ms-enum:
            name: MqttBridgeRemoteBrokerProtocol
            modelAsString: true
            values:
              - name: mqtt
                value: mqtt
                description: MQTT protocol.
              - name: webSocket
                value: webSocket
                description: MQTT over WebSocket protocol.
        tls:
          $ref: '#/components/schemas/MqttBridgeRemoteBrokerConnectionTlsUpdate'
          description: TLS details for Remote broker Connection.
    MqttBridgeRemoteBrokerConnectionTls:
      type: object
      description: MqttBridge RemoteBrokerConnection TLS details
      properties:
        tlsEnabled:
          type: boolean
          description: Tls Enabled on Remote Broker Connection.
        trustedCaCertificateConfigMap:
          type: string
          description: Trusted CA certificate name for Remote Broker.
      required:
        - tlsEnabled
    MqttBridgeRemoteBrokerConnectionTlsUpdate:
      type: object
      description: MqttBridge RemoteBrokerConnection TLS details
      properties:
        tlsEnabled:
          type: boolean
          description: Tls Enabled on Remote Broker Connection.
        trustedCaCertificateConfigMap:
          type: string
          description: Trusted CA certificate name for Remote Broker.
    MqttBridgeRemoteBrokerProtocol:
      type: string
      description: Protocol for remote connection.
      enum:
        - mqtt
        - webSocket
      x-ms-enum:
        name: MqttBridgeRemoteBrokerProtocol
        modelAsString: true
        values:
          - name: mqtt
            value: mqtt
            description: MQTT protocol.
          - name: webSocket
            value: webSocket
            description: MQTT over WebSocket protocol.
    MqttBridgeRemoteBrokerX509Authentication:
      type: object
      description: MqttBridge RemoteBroker X509 Authentication properties.
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultCertificateProperties'
          description: Keyvault X509 secret properties.
        secretName:
          type: string
          description: Secret where cert details are stored.
    MqttBridgeRemoteBrokerX509AuthenticationUpdate:
      type: object
      description: MqttBridge RemoteBroker X509 Authentication properties.
      properties:
        keyVault:
          $ref: '#/components/schemas/KeyVaultCertificatePropertiesUpdate'
          description: Keyvault X509 secret properties.
        secretName:
          type: string
          description: Secret where cert details are stored.
    MqttBridgeRouteDirection:
      type: string
      description: MqttBridgeRoute direction properties
      enum:
        - remote-to-local
        - local-to-remote
      x-ms-enum:
        name: MqttBridgeRouteDirection
        modelAsString: true
        values:
          - name: RemoteToLocal
            value: remote-to-local
            description: Remote to Local Broker.
          - name: LocalToRemote
            value: local-to-remote
            description: Local to Remote Broker.
    MqttBridgeRouteSharedSubscription:
      type: object
      description: MqttBridgeRoute Shared subscription properties
      properties:
        groupMinimumShareNumber:
          type: integer
          format: int32
          description: The group shared subscription minimum share number.
          minimum: 0
          maximum: 255
        groupName:
          type: string
          description: The group name for Shared subscription.
      required:
        - groupMinimumShareNumber
        - groupName
    MqttBridgeRoutes:
      type: object
      description: MqttBridgeTopicMap route properties
      properties:
        direction:
          $ref: '#/components/schemas/MqttBridgeRouteDirection'
          description: Direction of the route.
        name:
          type: string
          description: Name of the route.
        qos:
          type: integer
          format: int32
          description: Qos for MQTT connection.
          default: 1
          minimum: 0
          maximum: 2
        sharedSubscription:
          $ref: '#/components/schemas/MqttBridgeRouteSharedSubscription'
          description: Shared subscription topic details.
        source:
          type: string
          description: Source topic of the route.
        target:
          type: string
          description: Target topic of the route. Ignore if same as source
      required:
        - direction
        - name
        - source
    MqttBridgeTopicMapProperties:
      type: object
      description: MqttBridgeTopicMap Properties
      properties:
        mqttBridgeConnectorRef:
          type: string
          description: The MqttBridgeConnector CRD it refers to.
        routes:
          type: array
          description: The route details for MqttBridge connector.
          items:
            $ref: '#/components/schemas/MqttBridgeRoutes'
          x-ms-identifiers: []
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - mqttBridgeConnectorRef
    MqttBridgeTopicMapResource:
      description: MQ mqttBridgeTopicMap resource
      required:
        - extendedLocation
      properties:
        properties:
          $ref: '#/components/schemas/MqttBridgeTopicMapProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocationProperty'
          description: Extended Location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MqttBridgeTopicMapResourceListResult:
      type: object
      description: The response of a MqttBridgeTopicMapResource list operation.
      properties:
        value:
          type: array
          description: The MqttBridgeTopicMapResource items on this page
          items:
            $ref: '#/components/schemas/MqttBridgeTopicMapResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    MqttBridgeTopicMapResourceUpdate:
      description: The type used for update operations of the MqttBridgeTopicMapResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/MqttBridgeTopicMapResourceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    MqttBridgeTopicMapResourceUpdateProperties:
      type: object
      description: The updatable properties of the MqttBridgeTopicMapResource.
      properties:
        mqttBridgeConnectorRef:
          type: string
          description: The MqttBridgeConnector CRD it refers to.
        routes:
          type: array
          description: The route details for MqttBridge connector.
          items:
            $ref: '#/components/schemas/MqttBridgeRoutes'
          x-ms-identifiers: []
    MqttProtocol:
      type: string
      description: Mqtt Protocol types
      enum:
        - v3
        - v5
      x-ms-enum:
        name: MqttProtocol
        modelAsString: true
        values:
          - name: v3
            value: v3
            description: Mqttv3
          - name: v5
            value: v5
            description: Mqttv5
    MqttToKafkaRoutes:
      type: object
      description: Mqtt to Kafka route properties
      properties:
        kafkaAcks:
          $ref: '#/components/schemas/KafkaAcks'
          description: The kafka acks to use.
        kafkaTopic:
          type: string
          description: The kafka topic to publish to.
        mqttTopic:
          type: string
          description: The mqtt topic to pull from.
        name:
          type: string
          description: The name of the route.
        qos:
          type: integer
          format: int32
          description: The qos to use for mqtt.
          default: 1
          minimum: 0
          maximum: 1
        sharedSubscription:
          $ref: '#/components/schemas/KafkaSharedSubscriptionProperties'
          description: The properties for shared subscription.
      required:
        - kafkaAcks
        - kafkaTopic
        - mqttTopic
        - name
    NodeTolerations:
      type: object
      description: Defines the Node Tolerations details
      properties:
        effect:
          type: string
          description: Toleration effect.
        key:
          type: string
          description: Toleration key.
        operator:
          type: string
          description: Toleration operator like 'Exists', 'Equal' etc.
        value:
          type: string
          description: Toleration Value.
      required:
        - effect
        - key
        - operator
        - value
    NodeTolerationsUpdate:
      type: object
      description: Defines the Node Tolerations details
      properties:
        effect:
          type: string
          description: Toleration effect.
        key:
          type: string
          description: Toleration key.
        operator:
          type: string
          description: Toleration operator like 'Exists', 'Equal' etc.
        value:
          type: string
          description: Toleration Value.
    PrincipalDefinition:
      type: object
      description: PrincipalDefinition properties of Basic Rule
      properties:
        attributes:
          type: array
          description: A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.
          default: []
          items:
            type: object
            additionalProperties:
              type: string
          x-ms-identifiers: []
        clientids:
          type: array
          description: A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.
          items:
            type: string
        usernames:
          type: array
          description: A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.
          items:
            type: string
    ProvisioningState:
      type: string
      description: The enum defining status of resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Provisioning
            value: Provisioning
            description: Resource is getting provisioned.
          - name: Updating
            value: Updating
            description: Resource is Updating.
          - name: Deleting
            value: Deleting
            description: Resource is Deleting.
          - name: Accepted
            value: Accepted
            description: Resource has been Accepted.
    ResourceInfoDefinition:
      type: object
      description: ResourceInfoDefinition properties of Basic Rule. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.
      properties:
        method:
          $ref: '#/components/schemas/ResourceInfoDefinitionMethods'
          description: 'The type of action that the clients can perform on the broker: Connect, Publish or Subscribe.'
        topics:
          type: array
          description: A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.
          items:
            type: string
      required:
        - method
    ResourceInfoDefinitionMethods:
      type: string
      description: ResourceInfoDefinition methods allowed
      enum:
        - Connect
        - Publish
        - Subscribe
      x-ms-enum:
        name: ResourceInfoDefinitionMethods
        modelAsString: true
        values:
          - name: Connect
            value: Connect
            description: Allowed Connecting to Broker
          - name: Publish
            value: Publish
            description: Allowed Publishing to Broker
          - name: Subscribe
            value: Subscribe
            description: Allowed Subscribing to Broker
    RunMode:
      type: string
      description: The enum defining run mode of the broker deployment
      enum:
        - auto
        - distributed
      x-ms-enum:
        name: RunMode
        modelAsString: true
        values:
          - name: auto
            value: auto
            description: Automatically provision Frontend and Backend pods.
          - name: distributed
            value: distributed
            description: Use Cardinality to set Frontend and Backend pods.
    SanForCert:
      type: object
      description: SANs for certificate.
      properties:
        dns:
          type: array
          description: DNS SANs.
          default: []
          items:
            type: string
        ip:
          type: array
          description: IP address SANs.
          default: []
          items:
            type: string
      required:
        - dns
        - ip
    SanForCertUpdate:
      type: object
      description: SANs for certificate.
      properties:
        dns:
          type: array
          description: DNS SANs.
          default: []
          items:
            type: string
        ip:
          type: array
          description: IP address SANs.
          default: []
          items:
            type: string
    SaslRemoteBrokerBasicAuthentication:
      type: object
      description: Kafka RemoteBrokerConnection Sasl Authentication properties.
      properties:
        saslType:
          $ref: '#/components/schemas/KafkaSaslType'
          description: Sasl Mechanism for remote broker authentication.
        token:
          $ref: '#/components/schemas/SaslRemoteBrokerBasicAuthenticationToken'
          description: Sasl token for remote broker authentication.
      required:
        - saslType
        - token
    SaslRemoteBrokerBasicAuthenticationToken:
      type: object
      description: Kafka RemoteBrokerConnection Sasl Authentication token properties. NOTE - Enum only one method is allowed to be passed.
      properties:
        keyVault:
          $ref: '#/components/schemas/KafkaTokenKeyVaultProperties'
          description: Keyvault token keyvault secret properties.
        secretName:
          type: string
          description: Secret where cert details are stored.
    SaslRemoteBrokerBasicAuthenticationTokenUpdate:
      type: object
      description: Kafka RemoteBrokerConnection Sasl Authentication token properties. NOTE - Enum only one method is allowed to be passed.
      properties:
        keyVault:
          $ref: '#/components/schemas/KafkaTokenKeyVaultPropertiesUpdate'
          description: Keyvault token keyvault secret properties.
        secretName:
          type: string
          description: Secret where cert details are stored.
    SaslRemoteBrokerBasicAuthenticationUpdate:
      type: object
      description: Kafka RemoteBrokerConnection Sasl Authentication properties.
      properties:
        saslType:
          $ref: '#/components/schemas/KafkaSaslType'
          description: Sasl Mechanism for remote broker authentication.
        token:
          $ref: '#/components/schemas/SaslRemoteBrokerBasicAuthenticationTokenUpdate'
          description: Sasl token for remote broker authentication.
    ServiceType:
      type: string
      description: Kubernetes Service Types supported by Listener
      enum:
        - clusterIp
        - loadBalancer
        - nodePort
      x-ms-enum:
        name: ServiceType
        modelAsString: true
        values:
          - name: clusterIp
            value: clusterIp
            description: Cluster IP Service.
          - name: loadBalancer
            value: loadBalancer
            description: Load Balancer Service.
          - name: nodePort
            value: nodePort
            description: Node Port Service.
    TemporaryResourceLimitsConfig:
      type: object
      description: Internal knobs of Resource Limits for FE and BE
      properties:
        maxInflightMessages:
          type: integer
          format: int32
          description: Maximum number of messages a client can have inflight.
          minimum: 0
          maximum: 65535
        maxInflightPatches:
          type: integer
          format: int32
          description: Maximum number of patch inflight per node.
          minimum: 0
          maximum: 65535
        maxInflightPatchesPerClient:
          type: integer
          format: int32
          description: Maximum number of patch a client can have in flight.
          minimum: 0
          maximum: 65535
        maxMessageExpirySecs:
          type: integer
          format: int64
          description: Maximum message expiry interval, in seconds.
          minimum: 0
          maximum: 4294967295
        maxQueuedMessages:
          type: integer
          format: int64
          description: Maximum receive for external clients.
          minimum: 0
          maximum: 9223372036854000000
        maxQueuedQos0Messages:
          type: integer
          format: int64
          description: Maximum receive QoS0 for external clients.
          minimum: 0
          maximum: 9223372036854000000
        maxSessionExpirySecs:
          type: integer
          format: int64
          description: Maximum session expiry interval, in seconds.
          minimum: 0
          maximum: 4294967295
      required:
        - maxInflightMessages
        - maxInflightPatches
        - maxInflightPatchesPerClient
        - maxQueuedMessages
        - maxQueuedQos0Messages
        - maxSessionExpirySecs
    TemporaryResourceLimitsConfigUpdate:
      type: object
      description: Internal knobs of Resource Limits for FE and BE
      properties:
        maxInflightMessages:
          type: integer
          format: int32
          description: Maximum number of messages a client can have inflight.
          minimum: 0
          maximum: 65535
        maxInflightPatches:
          type: integer
          format: int32
          description: Maximum number of patch inflight per node.
          minimum: 0
          maximum: 65535
        maxInflightPatchesPerClient:
          type: integer
          format: int32
          description: Maximum number of patch a client can have in flight.
          minimum: 0
          maximum: 65535
        maxMessageExpirySecs:
          type: integer
          format: int64
          description: Maximum message expiry interval, in seconds.
          minimum: 0
          maximum: 4294967295
        maxQueuedMessages:
          type: integer
          format: int64
          description: Maximum receive for external clients.
          minimum: 0
          maximum: 9223372036854000000
        maxQueuedQos0Messages:
          type: integer
          format: int64
          description: Maximum receive QoS0 for external clients.
          minimum: 0
          maximum: 9223372036854000000
        maxSessionExpirySecs:
          type: integer
          format: int64
          description: Maximum session expiry interval, in seconds.
          minimum: 0
          maximum: 4294967295
    TlsCertMethod:
      type: object
      description: Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
      properties:
        automatic:
          $ref: '#/components/schemas/AutomaticCertMethod'
          description: Option 1 - Automatic TLS server certificate management with cert-manager.
        manual:
          $ref: '#/components/schemas/ManualCertMethod'
          description: Option 2 - Manual TLS server certificate management through a defined secret.
        keyVault:
          $ref: '#/components/schemas/KeyVaultCertificateProperties'
          description: Option 3 - TLS server certificate retrieved from Key Vault..
    TlsCertMethodUpdate:
      type: object
      description: Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
      properties:
        automatic:
          $ref: '#/components/schemas/AutomaticCertMethodUpdate'
          description: Option 1 - Automatic TLS server certificate management with cert-manager.
        manual:
          $ref: '#/components/schemas/ManualCertMethodUpdate'
          description: Option 2 - Manual TLS server certificate management through a defined secret.
        keyVault:
          $ref: '#/components/schemas/KeyVaultCertificatePropertiesUpdate'
          description: Option 3 - TLS server certificate retrieved from Key Vault..
    VolumeClaimDataSource:
      type: object
      description: VolumeClaimDataSource properties
      properties:
        apiGroup:
          type: string
          description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
        kind:
          type: string
          description: Kind is the type of resource being referenced
        name:
          type: string
          description: Name is the name of resource being referenced
      required:
        - kind
        - name
    VolumeClaimDataSourceRef:
      type: object
      description: VolumeClaimDataSourceRef properties
      properties:
        apiGroup:
          type: string
          description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
        kind:
          type: string
          description: Kind is the type of resource being referenced
        name:
          type: string
          description: Name is the name of resource being referenced
      required:
        - kind
        - name
    VolumeClaimDataSourceRefUpdate:
      type: object
      description: VolumeClaimDataSourceRef properties
      properties:
        apiGroup:
          type: string
          description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
        kind:
          type: string
          description: Kind is the type of resource being referenced
        name:
          type: string
          description: Name is the name of resource being referenced
    VolumeClaimDataSourceUpdate:
      type: object
      description: VolumeClaimDataSource properties
      properties:
        apiGroup:
          type: string
          description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
        kind:
          type: string
          description: Kind is the type of resource being referenced
        name:
          type: string
          description: Name is the name of resource being referenced
    VolumeClaimResourceRequirements:
      type: object
      description: VolumeClaimResourceRequirements properties
      properties:
        limits:
          type: object
          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
          additionalProperties:
            type: string
        requests:
          type: object
          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
          additionalProperties:
            type: string
    VolumeClaimSpec:
      type: object
      description: VolumeClaimSpec properties
      properties:
        accessModes:
          type: array
          description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
          items:
            type: string
          x-ms-identifiers: []
        dataSource:
          $ref: '#/components/schemas/VolumeClaimDataSource'
          description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.'
        dataSourceRef:
          $ref: '#/components/schemas/VolumeClaimDataSourceRef'
          description: 'Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.'
        resources:
          $ref: '#/components/schemas/VolumeClaimResourceRequirements'
          description: 'Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
        selector:
          $ref: '#/components/schemas/VolumeClaimSpecSelector'
          description: A label query over volumes to consider for binding.
        storageClassName:
          type: string
          description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
        volumeMode:
          type: string
          description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
        volumeName:
          type: string
          description: VolumeName is the binding reference to the PersistentVolume backing this claim.
    VolumeClaimSpecSelector:
      type: object
      description: VolumeClaimSpecSelector properties
      properties:
        matchExpressions:
          type: array
          description: MatchExpressions is a list of label selector requirements. The requirements are ANDed.
          items:
            $ref: '#/components/schemas/VolumeClaimSpecSelectorMatchExpressions'
          x-ms-identifiers: []
        matchLabels:
          type: object
          description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
          additionalProperties:
            type: string
    VolumeClaimSpecSelectorMatchExpressions:
      type: object
      description: VolumeClaimSpecSelectorMatchExpressions properties
      properties:
        key:
          type: string
          description: key is the label key that the selector applies to.
        operator:
          type: string
          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
        values:
          type: array
          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
          items:
            type: string
      required:
        - key
        - operator
    VolumeClaimSpecUpdate:
      type: object
      description: VolumeClaimSpec properties
      properties:
        accessModes:
          type: array
          description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
          items:
            type: string
          x-ms-identifiers: []
        dataSource:
          $ref: '#/components/schemas/VolumeClaimDataSourceUpdate'
          description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.'
        dataSourceRef:
          $ref: '#/components/schemas/VolumeClaimDataSourceRefUpdate'
          description: 'Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.'
        resources:
          $ref: '#/components/schemas/VolumeClaimResourceRequirements'
          description: 'Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
        selector:
          $ref: '#/components/schemas/VolumeClaimSpecSelector'
          description: A label query over volumes to consider for binding.
        storageClassName:
          type: string
          description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
        volumeMode:
          type: string
          description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
        volumeName:
          type: string
          description: VolumeName is the binding reference to the PersistentVolume backing this claim.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.iot_mq.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.IoTOperationsMQ~1operations?api-version=2023-10-04-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    mqs:
      id: azure.iot_mq.mqs
      name: mqs
      title: mqs
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.IoTOperationsMQ~1mq?api-version=2023-10-04-preview/get'
            operationId: Mq_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqResourceListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq?api-version=2023-10-04-preview/get'
            operationId: Mq_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}?api-version=2023-10-04-preview/get'
            operationId: Mq_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}?api-version=2023-10-04-preview/put'
            operationId: Mq_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}?api-version=2023-10-04-preview/patch'
            operationId: Mq_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}?api-version=2023-10-04-preview/delete'
            operationId: Mq_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mqs/methods/get'
          - $ref: '#/components/x-stackQL-resources/mqs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/mqs/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/mqs/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/mqs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mqs/methods/delete'
    brokers:
      id: azure.iot_mq.brokers
      name: brokers
      title: brokers
      methods:
        list_by_mq_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker?api-version=2023-10-04-preview/get'
            operationId: Broker_ListByMqResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}?api-version=2023-10-04-preview/get'
            operationId: Broker_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}?api-version=2023-10-04-preview/put'
            operationId: Broker_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}?api-version=2023-10-04-preview/patch'
            operationId: Broker_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}?api-version=2023-10-04-preview/delete'
            operationId: Broker_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/brokers/methods/get'
          - $ref: '#/components/x-stackQL-resources/brokers/methods/list_by_mq_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/brokers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/brokers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/brokers/methods/delete'
    broker_authentications:
      id: azure.iot_mq.broker_authentications
      name: broker_authentications
      title: broker_authentications
      methods:
        list_by_broker_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authentication?api-version=2023-10-04-preview/get'
            operationId: BrokerAuthentication_ListByBrokerResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthenticationResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authentication~1{authenticationName}?api-version=2023-10-04-preview/get'
            operationId: BrokerAuthentication_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthenticationResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authentication~1{authenticationName}?api-version=2023-10-04-preview/put'
            operationId: BrokerAuthentication_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthenticationResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authentication~1{authenticationName}?api-version=2023-10-04-preview/patch'
            operationId: BrokerAuthentication_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthenticationResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authentication~1{authenticationName}?api-version=2023-10-04-preview/delete'
            operationId: BrokerAuthentication_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/broker_authentications/methods/get'
          - $ref: '#/components/x-stackQL-resources/broker_authentications/methods/list_by_broker_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/broker_authentications/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/broker_authentications/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/broker_authentications/methods/delete'
    broker_authorizations:
      id: azure.iot_mq.broker_authorizations
      name: broker_authorizations
      title: broker_authorizations
      methods:
        list_by_broker_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authorization?api-version=2023-10-04-preview/get'
            operationId: BrokerAuthorization_ListByBrokerResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthorizationResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authorization~1{authorizationName}?api-version=2023-10-04-preview/get'
            operationId: BrokerAuthorization_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthorizationResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authorization~1{authorizationName}?api-version=2023-10-04-preview/put'
            operationId: BrokerAuthorization_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthorizationResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authorization~1{authorizationName}?api-version=2023-10-04-preview/patch'
            operationId: BrokerAuthorization_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerAuthorizationResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1authorization~1{authorizationName}?api-version=2023-10-04-preview/delete'
            operationId: BrokerAuthorization_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/broker_authorizations/methods/get'
          - $ref: '#/components/x-stackQL-resources/broker_authorizations/methods/list_by_broker_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/broker_authorizations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/broker_authorizations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/broker_authorizations/methods/delete'
    broker_listeners:
      id: azure.iot_mq.broker_listeners
      name: broker_listeners
      title: broker_listeners
      methods:
        list_by_broker_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1listener?api-version=2023-10-04-preview/get'
            operationId: BrokerListener_ListByBrokerResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerListenerResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1listener~1{listenerName}?api-version=2023-10-04-preview/get'
            operationId: BrokerListener_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerListenerResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1listener~1{listenerName}?api-version=2023-10-04-preview/put'
            operationId: BrokerListener_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerListenerResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1listener~1{listenerName}?api-version=2023-10-04-preview/patch'
            operationId: BrokerListener_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BrokerListenerResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1broker~1{brokerName}~1listener~1{listenerName}?api-version=2023-10-04-preview/delete'
            operationId: BrokerListener_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/broker_listeners/methods/get'
          - $ref: '#/components/x-stackQL-resources/broker_listeners/methods/list_by_broker_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/broker_listeners/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/broker_listeners/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/broker_listeners/methods/delete'
    data_lake_connectors:
      id: azure.iot_mq.data_lake_connectors
      name: data_lake_connectors
      title: data_lake_connectors
      methods:
        list_by_mq_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector?api-version=2023-10-04-preview/get'
            operationId: DataLakeConnector_ListByMqResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeConnectorResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}?api-version=2023-10-04-preview/get'
            operationId: DataLakeConnector_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeConnectorResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}?api-version=2023-10-04-preview/put'
            operationId: DataLakeConnector_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeConnectorResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}?api-version=2023-10-04-preview/patch'
            operationId: DataLakeConnector_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeConnectorResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}?api-version=2023-10-04-preview/delete'
            operationId: DataLakeConnector_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_lake_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_lake_connectors/methods/list_by_mq_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_lake_connectors/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/data_lake_connectors/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_lake_connectors/methods/delete'
    data_lake_connector_topic_maps:
      id: azure.iot_mq.data_lake_connector_topic_maps
      name: data_lake_connector_topic_maps
      title: data_lake_connector_topic_maps
      methods:
        list_by_data_lake_connector_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}~1topicMap?api-version=2023-10-04-preview/get'
            operationId: DataLakeConnectorTopicMap_ListByDataLakeConnectorResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeTopicMapResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/get'
            operationId: DataLakeConnectorTopicMap_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeTopicMapResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/put'
            operationId: DataLakeConnectorTopicMap_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeTopicMapResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/patch'
            operationId: DataLakeConnectorTopicMap_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataLakeTopicMapResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1dataLakeConnector~1{dataLakeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/delete'
            operationId: DataLakeConnectorTopicMap_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_lake_connector_topic_maps/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_lake_connector_topic_maps/methods/list_by_data_lake_connector_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_lake_connector_topic_maps/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/data_lake_connector_topic_maps/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_lake_connector_topic_maps/methods/delete'
    diagnostic_services:
      id: azure.iot_mq.diagnostic_services
      name: diagnostic_services
      title: diagnostic_services
      methods:
        list_by_mq_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1diagnosticService?api-version=2023-10-04-preview/get'
            operationId: DiagnosticService_ListByMqResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticServiceResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1diagnosticService~1{diagnosticServiceName}?api-version=2023-10-04-preview/get'
            operationId: DiagnosticService_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticServiceResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1diagnosticService~1{diagnosticServiceName}?api-version=2023-10-04-preview/put'
            operationId: DiagnosticService_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticServiceResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1diagnosticService~1{diagnosticServiceName}?api-version=2023-10-04-preview/patch'
            operationId: DiagnosticService_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticServiceResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1diagnosticService~1{diagnosticServiceName}?api-version=2023-10-04-preview/delete'
            operationId: DiagnosticService_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostic_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/diagnostic_services/methods/list_by_mq_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/diagnostic_services/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/diagnostic_services/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/diagnostic_services/methods/delete'
    kafka_connectors:
      id: azure.iot_mq.kafka_connectors
      name: kafka_connectors
      title: kafka_connectors
      methods:
        list_by_mq_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector?api-version=2023-10-04-preview/get'
            operationId: KafkaConnector_ListByMqResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaConnectorResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}?api-version=2023-10-04-preview/get'
            operationId: KafkaConnector_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaConnectorResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}?api-version=2023-10-04-preview/put'
            operationId: KafkaConnector_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaConnectorResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}?api-version=2023-10-04-preview/patch'
            operationId: KafkaConnector_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaConnectorResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}?api-version=2023-10-04-preview/delete'
            operationId: KafkaConnector_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/kafka_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/kafka_connectors/methods/list_by_mq_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/kafka_connectors/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/kafka_connectors/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/kafka_connectors/methods/delete'
    kafka_connector_topic_maps:
      id: azure.iot_mq.kafka_connector_topic_maps
      name: kafka_connector_topic_maps
      title: kafka_connector_topic_maps
      methods:
        list_by_kafka_connector_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}~1topicMap?api-version=2023-10-04-preview/get'
            operationId: KafkaConnectorTopicMap_ListByKafkaConnectorResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaTopicMapResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/get'
            operationId: KafkaConnectorTopicMap_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaTopicMapResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/put'
            operationId: KafkaConnectorTopicMap_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaTopicMapResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/patch'
            operationId: KafkaConnectorTopicMap_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KafkaTopicMapResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1kafkaConnector~1{kafkaConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/delete'
            operationId: KafkaConnectorTopicMap_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/kafka_connector_topic_maps/methods/get'
          - $ref: '#/components/x-stackQL-resources/kafka_connector_topic_maps/methods/list_by_kafka_connector_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/kafka_connector_topic_maps/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/kafka_connector_topic_maps/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/kafka_connector_topic_maps/methods/delete'
    mqtt_bridge_connectors:
      id: azure.iot_mq.mqtt_bridge_connectors
      name: mqtt_bridge_connectors
      title: mqtt_bridge_connectors
      methods:
        list_by_mq_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector?api-version=2023-10-04-preview/get'
            operationId: MqttBridgeConnector_ListByMqResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeConnectorResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}?api-version=2023-10-04-preview/get'
            operationId: MqttBridgeConnector_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeConnectorResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}?api-version=2023-10-04-preview/put'
            operationId: MqttBridgeConnector_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeConnectorResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}?api-version=2023-10-04-preview/patch'
            operationId: MqttBridgeConnector_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeConnectorResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}?api-version=2023-10-04-preview/delete'
            operationId: MqttBridgeConnector_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_connectors/methods/list_by_mq_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_connectors/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_connectors/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_connectors/methods/delete'
    mqtt_bridge_topic_maps:
      id: azure.iot_mq.mqtt_bridge_topic_maps
      name: mqtt_bridge_topic_maps
      title: mqtt_bridge_topic_maps
      methods:
        list_by_mqtt_bridge_connector_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}~1topicMap?api-version=2023-10-04-preview/get'
            operationId: MqttBridgeTopicMap_ListByMqttBridgeConnectorResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeTopicMapResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/get'
            operationId: MqttBridgeTopicMap_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeTopicMapResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/put'
            operationId: MqttBridgeTopicMap_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeTopicMapResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/patch'
            operationId: MqttBridgeTopicMap_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MqttBridgeTopicMapResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.IoTOperationsMQ~1mq~1{mqName}~1mqttBridgeConnector~1{mqttBridgeConnectorName}~1topicMap~1{topicMapName}?api-version=2023-10-04-preview/delete'
            operationId: MqttBridgeTopicMap_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_topic_maps/methods/get'
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_topic_maps/methods/list_by_mqtt_bridge_connector_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_topic_maps/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_topic_maps/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mqtt_bridge_topic_maps/methods/delete'
    vw_mqs:
      id: azure.iot_mq.vw_mqs
      name: vw_mqs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName
              FROM azure.iot_mq.mqs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName
                FROM azure.iot_mq.mqs
                WHERE subscriptionId = 'replace-me';
    vw_brokers:
      id: azure.iot_mq.vw_brokers
      name: vw_brokers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.authImage') as "auth_image",
              JSON_EXTRACT(properties, '$.brokerImage') as "broker_image",
              JSON_EXTRACT(properties, '$.brokerNodeTolerations') as "broker_node_tolerations",
              JSON_EXTRACT(properties, '$.cardinality') as "cardinality",
              JSON_EXTRACT(properties, '$.diagnostics') as "diagnostics",
              JSON_EXTRACT(properties, '$.diskBackedMessageBufferSettings') as "disk_backed_message_buffer_settings",
              JSON_EXTRACT(properties, '$.encryptInternalTraffic') as "encrypt_internal_traffic",
              JSON_EXTRACT(properties, '$.healthManagerImage') as "health_manager_image",
              JSON_EXTRACT(properties, '$.healthManagerNodeTolerations') as "health_manager_node_tolerations",
              JSON_EXTRACT(properties, '$.internalCerts') as "internal_certs",
              JSON_EXTRACT(properties, '$.memoryProfile') as "memory_profile",
              JSON_EXTRACT(properties, '$.mode') as "mode",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              brokerName
              FROM azure.iot_mq.brokers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.authImage') as "auth_image",
                json_extract_path_text(properties, '$.brokerImage') as "broker_image",
                json_extract_path_text(properties, '$.brokerNodeTolerations') as "broker_node_tolerations",
                json_extract_path_text(properties, '$.cardinality') as "cardinality",
                json_extract_path_text(properties, '$.diagnostics') as "diagnostics",
                json_extract_path_text(properties, '$.diskBackedMessageBufferSettings') as "disk_backed_message_buffer_settings",
                json_extract_path_text(properties, '$.encryptInternalTraffic') as "encrypt_internal_traffic",
                json_extract_path_text(properties, '$.healthManagerImage') as "health_manager_image",
                json_extract_path_text(properties, '$.healthManagerNodeTolerations') as "health_manager_node_tolerations",
                json_extract_path_text(properties, '$.internalCerts') as "internal_certs",
                json_extract_path_text(properties, '$.memoryProfile') as "memory_profile",
                json_extract_path_text(properties, '$.mode') as "mode",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                brokerName
                FROM azure.iot_mq.brokers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
    vw_broker_authentications:
      id: azure.iot_mq.vw_broker_authentications
      name: vw_broker_authentications
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.authenticationMethods') as "authentication_methods",
              JSON_EXTRACT(properties, '$.listenerRef') as "listener_ref",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              brokerName,
              authenticationName
              FROM azure.iot_mq.broker_authentications
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND brokerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.authenticationMethods') as "authentication_methods",
                json_extract_path_text(properties, '$.listenerRef') as "listener_ref",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                brokerName,
                authenticationName
                FROM azure.iot_mq.broker_authentications
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND brokerName = 'replace-me';
    vw_broker_authorizations:
      id: azure.iot_mq.vw_broker_authorizations
      name: vw_broker_authorizations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.authorizationPolicies') as "authorization_policies",
              JSON_EXTRACT(properties, '$.listenerRef') as "listener_ref",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              brokerName,
              authorizationName
              FROM azure.iot_mq.broker_authorizations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND brokerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.authorizationPolicies') as "authorization_policies",
                json_extract_path_text(properties, '$.listenerRef') as "listener_ref",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                brokerName,
                authorizationName
                FROM azure.iot_mq.broker_authorizations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND brokerName = 'replace-me';
    vw_broker_listeners:
      id: azure.iot_mq.vw_broker_listeners
      name: vw_broker_listeners
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.authenticationEnabled') as "authentication_enabled",
              JSON_EXTRACT(properties, '$.authorizationEnabled') as "authorization_enabled",
              JSON_EXTRACT(properties, '$.brokerRef') as "broker_ref",
              JSON_EXTRACT(properties, '$.nodePort') as "node_port",
              JSON_EXTRACT(properties, '$.port') as "port",
              JSON_EXTRACT(properties, '$.serviceName') as "service_name",
              JSON_EXTRACT(properties, '$.serviceType') as "service_type",
              JSON_EXTRACT(properties, '$.tls') as "tls",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              brokerName,
              listenerName
              FROM azure.iot_mq.broker_listeners
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND brokerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.authenticationEnabled') as "authentication_enabled",
                json_extract_path_text(properties, '$.authorizationEnabled') as "authorization_enabled",
                json_extract_path_text(properties, '$.brokerRef') as "broker_ref",
                json_extract_path_text(properties, '$.nodePort') as "node_port",
                json_extract_path_text(properties, '$.port') as "port",
                json_extract_path_text(properties, '$.serviceName') as "service_name",
                json_extract_path_text(properties, '$.serviceType') as "service_type",
                json_extract_path_text(properties, '$.tls') as "tls",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                brokerName,
                listenerName
                FROM azure.iot_mq.broker_listeners
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND brokerName = 'replace-me';
    vw_data_lake_connectors:
      id: azure.iot_mq.vw_data_lake_connectors
      name: vw_data_lake_connectors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.databaseFormat') as "database_format",
              JSON_EXTRACT(properties, '$.image') as "image",
              JSON_EXTRACT(properties, '$.instances') as "instances",
              JSON_EXTRACT(properties, '$.localBrokerConnection') as "local_broker_connection",
              JSON_EXTRACT(properties, '$.logLevel') as "log_level",
              JSON_EXTRACT(properties, '$.nodeTolerations') as "node_tolerations",
              JSON_EXTRACT(properties, '$.protocol') as "protocol",
              JSON_EXTRACT(properties, '$.target') as "target",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              dataLakeConnectorName
              FROM azure.iot_mq.data_lake_connectors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.databaseFormat') as "database_format",
                json_extract_path_text(properties, '$.image') as "image",
                json_extract_path_text(properties, '$.instances') as "instances",
                json_extract_path_text(properties, '$.localBrokerConnection') as "local_broker_connection",
                json_extract_path_text(properties, '$.logLevel') as "log_level",
                json_extract_path_text(properties, '$.nodeTolerations') as "node_tolerations",
                json_extract_path_text(properties, '$.protocol') as "protocol",
                json_extract_path_text(properties, '$.target') as "target",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                dataLakeConnectorName
                FROM azure.iot_mq.data_lake_connectors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
    vw_data_lake_connector_topic_maps:
      id: azure.iot_mq.vw_data_lake_connector_topic_maps
      name: vw_data_lake_connector_topic_maps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.dataLakeConnectorRef') as "data_lake_connector_ref",
              JSON_EXTRACT(properties, '$.mapping') as "mapping",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              dataLakeConnectorName,
              topicMapName
              FROM azure.iot_mq.data_lake_connector_topic_maps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND dataLakeConnectorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.dataLakeConnectorRef') as "data_lake_connector_ref",
                json_extract_path_text(properties, '$.mapping') as "mapping",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                dataLakeConnectorName,
                topicMapName
                FROM azure.iot_mq.data_lake_connector_topic_maps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND dataLakeConnectorName = 'replace-me';
    vw_diagnostic_services:
      id: azure.iot_mq.vw_diagnostic_services
      name: vw_diagnostic_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.dataExportFrequencySeconds') as "data_export_frequency_seconds",
              JSON_EXTRACT(properties, '$.image') as "image",
              JSON_EXTRACT(properties, '$.logFormat') as "log_format",
              JSON_EXTRACT(properties, '$.logLevel') as "log_level",
              JSON_EXTRACT(properties, '$.maxDataStorageSize') as "max_data_storage_size",
              JSON_EXTRACT(properties, '$.metricsPort') as "metrics_port",
              JSON_EXTRACT(properties, '$.openTelemetryTracesCollectorAddr') as "open_telemetry_traces_collector_addr",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.staleDataTimeoutSeconds') as "stale_data_timeout_seconds",
              subscriptionId,
              resourceGroupName,
              mqName,
              diagnosticServiceName
              FROM azure.iot_mq.diagnostic_services
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.dataExportFrequencySeconds') as "data_export_frequency_seconds",
                json_extract_path_text(properties, '$.image') as "image",
                json_extract_path_text(properties, '$.logFormat') as "log_format",
                json_extract_path_text(properties, '$.logLevel') as "log_level",
                json_extract_path_text(properties, '$.maxDataStorageSize') as "max_data_storage_size",
                json_extract_path_text(properties, '$.metricsPort') as "metrics_port",
                json_extract_path_text(properties, '$.openTelemetryTracesCollectorAddr') as "open_telemetry_traces_collector_addr",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.staleDataTimeoutSeconds') as "stale_data_timeout_seconds",
                subscriptionId,
                resourceGroupName,
                mqName,
                diagnosticServiceName
                FROM azure.iot_mq.diagnostic_services
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
    vw_kafka_connectors:
      id: azure.iot_mq.vw_kafka_connectors
      name: vw_kafka_connectors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.clientIdPrefix') as "client_id_prefix",
              JSON_EXTRACT(properties, '$.image') as "image",
              JSON_EXTRACT(properties, '$.instances') as "instances",
              JSON_EXTRACT(properties, '$.kafkaConnection') as "kafka_connection",
              JSON_EXTRACT(properties, '$.localBrokerConnection') as "local_broker_connection",
              JSON_EXTRACT(properties, '$.logLevel') as "log_level",
              JSON_EXTRACT(properties, '$.nodeTolerations') as "node_tolerations",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              kafkaConnectorName
              FROM azure.iot_mq.kafka_connectors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.clientIdPrefix') as "client_id_prefix",
                json_extract_path_text(properties, '$.image') as "image",
                json_extract_path_text(properties, '$.instances') as "instances",
                json_extract_path_text(properties, '$.kafkaConnection') as "kafka_connection",
                json_extract_path_text(properties, '$.localBrokerConnection') as "local_broker_connection",
                json_extract_path_text(properties, '$.logLevel') as "log_level",
                json_extract_path_text(properties, '$.nodeTolerations') as "node_tolerations",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                kafkaConnectorName
                FROM azure.iot_mq.kafka_connectors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
    vw_kafka_connector_topic_maps:
      id: azure.iot_mq.vw_kafka_connector_topic_maps
      name: vw_kafka_connector_topic_maps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.batching') as "batching",
              JSON_EXTRACT(properties, '$.compression') as "compression",
              JSON_EXTRACT(properties, '$.copyMqttProperties') as "copy_mqtt_properties",
              JSON_EXTRACT(properties, '$.kafkaConnectorRef') as "kafka_connector_ref",
              JSON_EXTRACT(properties, '$.partitionKeyProperty') as "partition_key_property",
              JSON_EXTRACT(properties, '$.partitionStrategy') as "partition_strategy",
              JSON_EXTRACT(properties, '$.routes') as "routes",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              kafkaConnectorName,
              topicMapName
              FROM azure.iot_mq.kafka_connector_topic_maps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND kafkaConnectorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.batching') as "batching",
                json_extract_path_text(properties, '$.compression') as "compression",
                json_extract_path_text(properties, '$.copyMqttProperties') as "copy_mqtt_properties",
                json_extract_path_text(properties, '$.kafkaConnectorRef') as "kafka_connector_ref",
                json_extract_path_text(properties, '$.partitionKeyProperty') as "partition_key_property",
                json_extract_path_text(properties, '$.partitionStrategy') as "partition_strategy",
                json_extract_path_text(properties, '$.routes') as "routes",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                kafkaConnectorName,
                topicMapName
                FROM azure.iot_mq.kafka_connector_topic_maps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND kafkaConnectorName = 'replace-me';
    vw_mqtt_bridge_connectors:
      id: azure.iot_mq.vw_mqtt_bridge_connectors
      name: vw_mqtt_bridge_connectors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.bridgeInstances') as "bridge_instances",
              JSON_EXTRACT(properties, '$.clientIdPrefix') as "client_id_prefix",
              JSON_EXTRACT(properties, '$.image') as "image",
              JSON_EXTRACT(properties, '$.localBrokerConnection') as "local_broker_connection",
              JSON_EXTRACT(properties, '$.logLevel') as "log_level",
              JSON_EXTRACT(properties, '$.nodeTolerations') as "node_tolerations",
              JSON_EXTRACT(properties, '$.protocol') as "protocol",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.remoteBrokerConnection') as "remote_broker_connection",
              subscriptionId,
              resourceGroupName,
              mqName,
              mqttBridgeConnectorName
              FROM azure.iot_mq.mqtt_bridge_connectors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.bridgeInstances') as "bridge_instances",
                json_extract_path_text(properties, '$.clientIdPrefix') as "client_id_prefix",
                json_extract_path_text(properties, '$.image') as "image",
                json_extract_path_text(properties, '$.localBrokerConnection') as "local_broker_connection",
                json_extract_path_text(properties, '$.logLevel') as "log_level",
                json_extract_path_text(properties, '$.nodeTolerations') as "node_tolerations",
                json_extract_path_text(properties, '$.protocol') as "protocol",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.remoteBrokerConnection') as "remote_broker_connection",
                subscriptionId,
                resourceGroupName,
                mqName,
                mqttBridgeConnectorName
                FROM azure.iot_mq.mqtt_bridge_connectors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me';
    vw_mqtt_bridge_topic_maps:
      id: azure.iot_mq.vw_mqtt_bridge_topic_maps
      name: vw_mqtt_bridge_topic_maps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.mqttBridgeConnectorRef') as "mqtt_bridge_connector_ref",
              JSON_EXTRACT(properties, '$.routes') as "routes",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              mqName,
              mqttBridgeConnectorName,
              topicMapName
              FROM azure.iot_mq.mqtt_bridge_topic_maps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND mqttBridgeConnectorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.mqttBridgeConnectorRef') as "mqtt_bridge_connector_ref",
                json_extract_path_text(properties, '$.routes') as "routes",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                mqName,
                mqttBridgeConnectorName,
                topicMapName
                FROM azure.iot_mq.mqtt_bridge_topic_maps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND mqName = 'replace-me' AND mqttBridgeConnectorName = 'replace-me';
paths:
  /providers/Microsoft.IoTOperationsMQ/operations?api-version=2023-10-04-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.IoTOperationsMQ/mq?api-version=2023-10-04-preview:
    get:
      operationId: Mq_ListBySubscription
      tags:
        - Mq
      description: List MqResource resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq?api-version=2023-10-04-preview:
    get:
      operationId: Mq_ListByResourceGroup
      tags:
        - Mq
      description: List MqResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}?api-version=2023-10-04-preview:
    get:
      operationId: Mq_Get
      tags:
        - Mq
      description: Get a MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Mq_CreateOrUpdate
      tags:
        - Mq
      description: Create a MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MqResource'
      responses:
        '200':
          description: Resource 'MqResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqResource'
        '201':
          description: Resource 'MqResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Mq_Update
      tags:
        - Mq
      description: Update a MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MqResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Mq_Delete
      tags:
        - Mq
      description: Delete a MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker?api-version=2023-10-04-preview:
    get:
      operationId: Broker_ListByMqResource
      tags:
        - Broker
      description: List BrokerResource resources by MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}?api-version=2023-10-04-preview:
    get:
      operationId: Broker_Get
      tags:
        - Broker
      description: Get a BrokerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Broker_CreateOrUpdate
      tags:
        - Broker
      description: Create a BrokerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerResource'
      responses:
        '200':
          description: Resource 'BrokerResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResource'
        '201':
          description: Resource 'BrokerResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Broker_Update
      tags:
        - Broker
      description: Update a BrokerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Broker_Delete
      tags:
        - Broker
      description: Delete a BrokerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}/authentication?api-version=2023-10-04-preview:
    get:
      operationId: BrokerAuthentication_ListByBrokerResource
      tags:
        - BrokerAuthentication
      description: List BrokerAuthenticationResource resources by BrokerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthenticationResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}/authentication/{authenticationName}?api-version=2023-10-04-preview:
    get:
      operationId: BrokerAuthentication_Get
      tags:
        - BrokerAuthentication
      description: Get a BrokerAuthenticationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authenticationName
          in: path
          description: Name of MQ broker/authentication resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthenticationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: BrokerAuthentication_CreateOrUpdate
      tags:
        - BrokerAuthentication
      description: Create a BrokerAuthenticationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authenticationName
          in: path
          description: Name of MQ broker/authentication resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerAuthenticationResource'
      responses:
        '200':
          description: Resource 'BrokerAuthenticationResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthenticationResource'
        '201':
          description: Resource 'BrokerAuthenticationResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthenticationResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: BrokerAuthentication_Update
      tags:
        - BrokerAuthentication
      description: Update a BrokerAuthenticationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authenticationName
          in: path
          description: Name of MQ broker/authentication resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerAuthenticationResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthenticationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: BrokerAuthentication_Delete
      tags:
        - BrokerAuthentication
      description: Delete a BrokerAuthenticationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authenticationName
          in: path
          description: Name of MQ broker/authentication resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}/authorization?api-version=2023-10-04-preview:
    get:
      operationId: BrokerAuthorization_ListByBrokerResource
      tags:
        - BrokerAuthorization
      description: List BrokerAuthorizationResource resources by BrokerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthorizationResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}/authorization/{authorizationName}?api-version=2023-10-04-preview:
    get:
      operationId: BrokerAuthorization_Get
      tags:
        - BrokerAuthorization
      description: Get a BrokerAuthorizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authorizationName
          in: path
          description: Name of MQ broker/authorization resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthorizationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: BrokerAuthorization_CreateOrUpdate
      tags:
        - BrokerAuthorization
      description: Create a BrokerAuthorizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authorizationName
          in: path
          description: Name of MQ broker/authorization resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerAuthorizationResource'
      responses:
        '200':
          description: Resource 'BrokerAuthorizationResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthorizationResource'
        '201':
          description: Resource 'BrokerAuthorizationResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthorizationResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: BrokerAuthorization_Update
      tags:
        - BrokerAuthorization
      description: Update a BrokerAuthorizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authorizationName
          in: path
          description: Name of MQ broker/authorization resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerAuthorizationResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAuthorizationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: BrokerAuthorization_Delete
      tags:
        - BrokerAuthorization
      description: Delete a BrokerAuthorizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: authorizationName
          in: path
          description: Name of MQ broker/authorization resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}/listener?api-version=2023-10-04-preview:
    get:
      operationId: BrokerListener_ListByBrokerResource
      tags:
        - BrokerListener
      description: List BrokerListenerResource resources by BrokerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerListenerResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}/listener/{listenerName}?api-version=2023-10-04-preview:
    get:
      operationId: BrokerListener_Get
      tags:
        - BrokerListener
      description: Get a BrokerListenerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: listenerName
          in: path
          description: Name of MQ broker/listener resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerListenerResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: BrokerListener_CreateOrUpdate
      tags:
        - BrokerListener
      description: Create a BrokerListenerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: listenerName
          in: path
          description: Name of MQ broker/listener resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerListenerResource'
      responses:
        '200':
          description: Resource 'BrokerListenerResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerListenerResource'
        '201':
          description: Resource 'BrokerListenerResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerListenerResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: BrokerListener_Update
      tags:
        - BrokerListener
      description: Update a BrokerListenerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: listenerName
          in: path
          description: Name of MQ broker/listener resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerListenerResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerListenerResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: BrokerListener_Delete
      tags:
        - BrokerListener
      description: Delete a BrokerListenerResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: brokerName
          in: path
          description: Name of MQ broker resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: listenerName
          in: path
          description: Name of MQ broker/listener resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/dataLakeConnector?api-version=2023-10-04-preview:
    get:
      operationId: DataLakeConnector_ListByMqResource
      tags:
        - DataLakeConnector
      description: List DataLakeConnectorResource resources by MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeConnectorResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/dataLakeConnector/{dataLakeConnectorName}?api-version=2023-10-04-preview:
    get:
      operationId: DataLakeConnector_Get
      tags:
        - DataLakeConnector
      description: Get a DataLakeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeConnectorResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: DataLakeConnector_CreateOrUpdate
      tags:
        - DataLakeConnector
      description: Create a DataLakeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLakeConnectorResource'
      responses:
        '200':
          description: Resource 'DataLakeConnectorResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeConnectorResource'
        '201':
          description: Resource 'DataLakeConnectorResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeConnectorResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: DataLakeConnector_Update
      tags:
        - DataLakeConnector
      description: Update a DataLakeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLakeConnectorResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeConnectorResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: DataLakeConnector_Delete
      tags:
        - DataLakeConnector
      description: Delete a DataLakeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/dataLakeConnector/{dataLakeConnectorName}/topicMap?api-version=2023-10-04-preview:
    get:
      operationId: DataLakeConnectorTopicMap_ListByDataLakeConnectorResource
      tags:
        - DataLakeConnectorTopicMap
      description: List DataLakeTopicMapResource resources by DataLakeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeTopicMapResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/dataLakeConnector/{dataLakeConnectorName}/topicMap/{topicMapName}?api-version=2023-10-04-preview:
    get:
      operationId: DataLakeConnectorTopicMap_Get
      tags:
        - DataLakeConnectorTopicMap
      description: Get a DataLakeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ dataLakeConnector/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeTopicMapResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: DataLakeConnectorTopicMap_CreateOrUpdate
      tags:
        - DataLakeConnectorTopicMap
      description: Create a DataLakeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ dataLakeConnector/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLakeTopicMapResource'
      responses:
        '200':
          description: Resource 'DataLakeTopicMapResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeTopicMapResource'
        '201':
          description: Resource 'DataLakeTopicMapResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeTopicMapResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: DataLakeConnectorTopicMap_Update
      tags:
        - DataLakeConnectorTopicMap
      description: Update a DataLakeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ dataLakeConnector/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLakeTopicMapResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeTopicMapResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: DataLakeConnectorTopicMap_Delete
      tags:
        - DataLakeConnectorTopicMap
      description: Delete a DataLakeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: dataLakeConnectorName
          in: path
          description: Name of MQ dataLakeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ dataLakeConnector/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/diagnosticService?api-version=2023-10-04-preview:
    get:
      operationId: DiagnosticService_ListByMqResource
      tags:
        - DiagnosticService
      description: List DiagnosticServiceResource resources by MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticServiceResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/diagnosticService/{diagnosticServiceName}?api-version=2023-10-04-preview:
    get:
      operationId: DiagnosticService_Get
      tags:
        - DiagnosticService
      description: Get a DiagnosticServiceResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: diagnosticServiceName
          in: path
          description: Name of MQ diagnostic resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticServiceResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: DiagnosticService_CreateOrUpdate
      tags:
        - DiagnosticService
      description: Create a DiagnosticServiceResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: diagnosticServiceName
          in: path
          description: Name of MQ diagnostic resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticServiceResource'
      responses:
        '200':
          description: Resource 'DiagnosticServiceResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticServiceResource'
        '201':
          description: Resource 'DiagnosticServiceResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticServiceResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: DiagnosticService_Update
      tags:
        - DiagnosticService
      description: Update a DiagnosticServiceResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: diagnosticServiceName
          in: path
          description: Name of MQ diagnostic resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticServiceResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticServiceResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: DiagnosticService_Delete
      tags:
        - DiagnosticService
      description: Delete a DiagnosticServiceResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: diagnosticServiceName
          in: path
          description: Name of MQ diagnostic resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/kafkaConnector?api-version=2023-10-04-preview:
    get:
      operationId: KafkaConnector_ListByMqResource
      tags:
        - KafkaConnector
      description: List KafkaConnectorResource resources by MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaConnectorResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/kafkaConnector/{kafkaConnectorName}?api-version=2023-10-04-preview:
    get:
      operationId: KafkaConnector_Get
      tags:
        - KafkaConnector
      description: Get a KafkaConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaConnectorResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: KafkaConnector_CreateOrUpdate
      tags:
        - KafkaConnector
      description: Create a KafkaConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaConnectorResource'
      responses:
        '200':
          description: Resource 'KafkaConnectorResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaConnectorResource'
        '201':
          description: Resource 'KafkaConnectorResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaConnectorResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: KafkaConnector_Update
      tags:
        - KafkaConnector
      description: Update a KafkaConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaConnectorResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaConnectorResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: KafkaConnector_Delete
      tags:
        - KafkaConnector
      description: Delete a KafkaConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/kafkaConnector/{kafkaConnectorName}/topicMap?api-version=2023-10-04-preview:
    get:
      operationId: KafkaConnectorTopicMap_ListByKafkaConnectorResource
      tags:
        - KafkaConnectorTopicMap
      description: List KafkaTopicMapResource resources by KafkaConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopicMapResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/kafkaConnector/{kafkaConnectorName}/topicMap/{topicMapName}?api-version=2023-10-04-preview:
    get:
      operationId: KafkaConnectorTopicMap_Get
      tags:
        - KafkaConnectorTopicMap
      description: Get a KafkaTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ kafka/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopicMapResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: KafkaConnectorTopicMap_CreateOrUpdate
      tags:
        - KafkaConnectorTopicMap
      description: Create a KafkaTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ kafka/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaTopicMapResource'
      responses:
        '200':
          description: Resource 'KafkaTopicMapResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopicMapResource'
        '201':
          description: Resource 'KafkaTopicMapResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopicMapResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: KafkaConnectorTopicMap_Update
      tags:
        - KafkaConnectorTopicMap
      description: Update a KafkaTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ kafka/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaTopicMapResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopicMapResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: KafkaConnectorTopicMap_Delete
      tags:
        - KafkaConnectorTopicMap
      description: Delete a KafkaTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: kafkaConnectorName
          in: path
          description: Name of MQ kafkaConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ kafka/topicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/mqttBridgeConnector?api-version=2023-10-04-preview:
    get:
      operationId: MqttBridgeConnector_ListByMqResource
      tags:
        - MqttBridgeConnector
      description: List MqttBridgeConnectorResource resources by MqResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeConnectorResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/mqttBridgeConnector/{mqttBridgeConnectorName}?api-version=2023-10-04-preview:
    get:
      operationId: MqttBridgeConnector_Get
      tags:
        - MqttBridgeConnector
      description: Get a MqttBridgeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeConnectorResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MqttBridgeConnector_CreateOrUpdate
      tags:
        - MqttBridgeConnector
      description: Create a MqttBridgeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MqttBridgeConnectorResource'
      responses:
        '200':
          description: Resource 'MqttBridgeConnectorResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeConnectorResource'
        '201':
          description: Resource 'MqttBridgeConnectorResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeConnectorResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: MqttBridgeConnector_Update
      tags:
        - MqttBridgeConnector
      description: Update a MqttBridgeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MqttBridgeConnectorResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeConnectorResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: MqttBridgeConnector_Delete
      tags:
        - MqttBridgeConnector
      description: Delete a MqttBridgeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/mqttBridgeConnector/{mqttBridgeConnectorName}/topicMap?api-version=2023-10-04-preview:
    get:
      operationId: MqttBridgeTopicMap_ListByMqttBridgeConnectorResource
      tags:
        - MqttBridgeTopicMap
      description: List MqttBridgeTopicMapResource resources by MqttBridgeConnectorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeTopicMapResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/mqttBridgeConnector/{mqttBridgeConnectorName}/topicMap/{topicMapName}?api-version=2023-10-04-preview:
    get:
      operationId: MqttBridgeTopicMap_Get
      tags:
        - MqttBridgeTopicMap
      description: Get a MqttBridgeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ mqttBridgeTopicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeTopicMapResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MqttBridgeTopicMap_CreateOrUpdate
      tags:
        - MqttBridgeTopicMap
      description: Create a MqttBridgeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ mqttBridgeTopicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MqttBridgeTopicMapResource'
      responses:
        '200':
          description: Resource 'MqttBridgeTopicMapResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeTopicMapResource'
        '201':
          description: Resource 'MqttBridgeTopicMapResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeTopicMapResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: MqttBridgeTopicMap_Update
      tags:
        - MqttBridgeTopicMap
      description: Update a MqttBridgeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ mqttBridgeTopicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MqttBridgeTopicMapResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttBridgeTopicMapResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: MqttBridgeTopicMap_Delete
      tags:
        - MqttBridgeTopicMap
      description: Delete a MqttBridgeTopicMapResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mqName
          in: path
          description: Name of MQ resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: mqttBridgeConnectorName
          in: path
          description: Name of MQ mqttBridgeConnector resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: topicMapName
          in: path
          description: Name of MQ mqttBridgeTopicMap resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
