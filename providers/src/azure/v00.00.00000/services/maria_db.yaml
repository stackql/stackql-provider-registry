openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Database for MariaDB
  description: Azure Database for MariaDB provides a managed database service for app development and deployment that allows you to stand up a MariaDB database in minutes and scale on the fly - on the cloud you trust most.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ServerNameParameter:
      name: serverName
      in: path
      description: The name of the server.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FirewallRuleNameParameter:
      name: firewallRuleName
      in: path
      description: The name of the server firewall rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    virtualNetworkRuleNameParameter:
      name: virtualNetworkRuleName
      in: path
      description: The name of the virtual network rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DatabaseNameParameter:
      name: databaseName
      in: path
      description: The name of the database.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the server configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LocationNameParameter:
      name: locationName
      in: path
      description: The name of the location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QueryIdParameter:
      name: queryId
      in: path
      description: The Query-Store query identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QueryStatisticIdParameter:
      name: queryStatisticId
      in: path
      description: The Query Statistic identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    WaitStatisticsIdParameter:
      name: waitStatisticsId
      in: path
      description: The Wait Statistic identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    AdvisorNameParameter:
      name: advisorName
      in: path
      description: The advisor name for recommendation action.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RecommendedActionNameParameter:
      name: recommendedActionName
      in: path
      description: The recommended action name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The operation identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
      description: An error response from the Batch service.
      type: object
    PrivateLinkResourceListResult:
      description: A list of private link resources
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    PrivateLinkResourceProperties:
      description: Properties of a private link resource.
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: The private link resource group id.
          readOnly: true
      type: object
    SecurityAlertPolicyProperties:
      description: Properties of a security alert policy.
      required:
        - state
      type: object
      properties:
        state:
          description: Specifies the state of the policy, whether it is enabled or disabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ServerSecurityAlertPolicyState
            modelAsString: false
        disabledAlerts:
          description: 'Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly'
          type: array
          items:
            type: string
        emailAddresses:
          description: Specifies an array of e-mail addresses to which the alert is sent.
          type: array
          items:
            type: string
        emailAccountAdmins:
          description: Specifies that the alert is sent to the account administrators.
          type: boolean
        storageEndpoint:
          description: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
          type: string
        storageAccountAccessKey:
          description: Specifies the identifier key of the Threat Detection audit storage account.
          type: string
        retentionDays:
          format: int32
          description: Specifies the number of days to keep in the Threat Detection audit logs.
          type: integer
    ServerSecurityAlertPolicy:
      description: A server security alert policy.
      properties:
        properties:
          $ref: '#/components/schemas/SecurityAlertPolicyProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    ServerSecurityAlertPolicyListResult:
      description: A list of the server's security alert policies.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/ServerSecurityAlertPolicy'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    ServerVersion:
      type: string
      description: The version of a server.
      enum:
        - '10.2'
        - '10.3'
      x-ms-enum:
        name: ServerVersion
        modelAsString: true
    SslEnforcement:
      type: string
      description: Enable ssl enforcement or not when connect to server.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SslEnforcementEnum
        modelAsString: false
    MinimalTlsVersion:
      type: string
      description: Enforce a minimal Tls version for the server.
      enum:
        - TLS1_0
        - TLS1_1
        - TLS1_2
        - TLSEnforcementDisabled
      x-ms-enum:
        name: MinimalTlsVersionEnum
        modelAsString: true
    PublicNetworkAccess:
      type: string
      description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: PublicNetworkAccessEnum
        modelAsString: true
    ServerPrivateEndpointConnection:
      description: A private endpoint connection under a server
      properties:
        id:
          description: Resource Id of the private endpoint connection.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ServerPrivateEndpointConnectionProperties'
          description: Private endpoint connection properties
          readOnly: true
      type: object
    ServerPrivateEndpointConnectionProperties:
      description: Properties of a private endpoint connection.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpointProperty'
          description: Private endpoint which the connection belongs to.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/ServerPrivateLinkServiceConnectionStateProperty'
          description: Connection state of the private endpoint connection.
        provisioningState:
          description: State of the private endpoint connection.
          enum:
            - Approving
            - Ready
            - Dropping
            - Failed
            - Rejecting
          type: string
          readOnly: true
          x-ms-enum:
            name: PrivateEndpointProvisioningState
            modelAsString: true
    PrivateEndpointProperty:
      type: object
      properties:
        id:
          description: Resource id of the private endpoint.
          type: string
      x-ms-azure-resource: true
    ServerPrivateLinkServiceConnectionStateProperty:
      required:
        - status
        - description
      type: object
      properties:
        status:
          description: The private link service connection status.
          enum:
            - Approved
            - Pending
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateLinkServiceConnectionStateStatus
            modelAsString: true
        description:
          description: The private link service connection description.
          type: string
        actionsRequired:
          description: The actions required for private link service connection.
          enum:
            - None
          type: string
          readOnly: true
          x-ms-enum:
            name: PrivateLinkServiceConnectionStateActionsRequire
            modelAsString: true
    ServerProperties:
      properties:
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        userVisibleState:
          type: string
          description: A state of a server that is visible to user.
          enum:
            - Ready
            - Dropping
            - Disabled
          x-ms-enum:
            name: ServerState
            modelAsString: true
        fullyQualifiedDomainName:
          type: string
          description: The fully qualified domain name of a server.
        earliestRestoreDate:
          type: string
          format: date-time
          description: Earliest restore point creation time (ISO8601 format)
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        replicationRole:
          type: string
          description: The replication role of the server.
        masterServerId:
          type: string
          description: The master server id of a replica server.
        replicaCapacity:
          type: integer
          format: int32
          minimum: 0
          description: The maximum number of replicas that a master server can have.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        privateEndpointConnections:
          description: List of private endpoint connections on a server
          type: array
          items:
            $ref: '#/components/schemas/ServerPrivateEndpointConnection'
          readOnly: true
      description: The properties of a server.
      type: object
    StorageProfile:
      properties:
        backupRetentionDays:
          type: integer
          format: int32
          description: Backup retention days for the server.
        geoRedundantBackup:
          type: string
          description: Enable Geo-redundant or not for server backup.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: GeoRedundantBackup
            modelAsString: true
        storageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        storageAutogrow:
          type: string
          description: Enable Storage Auto Grow.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: StorageAutogrow
            modelAsString: true
      description: Storage Profile properties of a server
      type: object
    ServerPropertiesForCreate:
      discriminator:
        propertyName: createMode
      required:
        - createMode
      properties:
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        createMode:
          type: string
          description: The mode to create a new server.
          enum:
            - Default
            - PointInTimeRestore
            - GeoRestore
            - Replica
          x-ms-enum:
            name: CreateMode
            modelAsString: true
      description: The properties used to create a new server.
      type: object
    ServerPropertiesForDefaultCreate:
      x-ms-discriminator-value: Default
      required:
        - administratorLogin
        - administratorLoginPassword
      description: The properties used to create a new server.
      properties:
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        createMode:
          type: string
          description: The mode to create a new server.
          enum:
            - Default
            - PointInTimeRestore
            - GeoRestore
            - Replica
          x-ms-enum:
            name: CreateMode
            modelAsString: true
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
        administratorLoginPassword:
          type: string
          format: password
          description: The password of the administrator login.
          x-ms-secret: true
      type: object
    ServerPropertiesForRestore:
      x-ms-discriminator-value: PointInTimeRestore
      required:
        - sourceServerId
        - restorePointInTime
      description: The properties used to create a new server by restoring from a backup.
      properties:
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        createMode:
          type: string
          description: The mode to create a new server.
          enum:
            - Default
            - PointInTimeRestore
            - GeoRestore
            - Replica
          x-ms-enum:
            name: CreateMode
            modelAsString: true
        sourceServerId:
          type: string
          description: The source server id to restore from.
        restorePointInTime:
          type: string
          format: date-time
          description: Restore point creation time (ISO8601 format), specifying the time to restore from.
      type: object
    ServerPropertiesForGeoRestore:
      x-ms-discriminator-value: GeoRestore
      required:
        - sourceServerId
      description: The properties used to create a new server by restoring to a different region from a geo replicated backup.
      properties:
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        createMode:
          type: string
          description: The mode to create a new server.
          enum:
            - Default
            - PointInTimeRestore
            - GeoRestore
            - Replica
          x-ms-enum:
            name: CreateMode
            modelAsString: true
        sourceServerId:
          type: string
          description: The source server id to restore from.
      type: object
    ServerPropertiesForReplica:
      x-ms-discriminator-value: Replica
      required:
        - sourceServerId
      description: The properties to create a new replica.
      properties:
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        createMode:
          type: string
          description: The mode to create a new server.
          enum:
            - Default
            - PointInTimeRestore
            - GeoRestore
            - Replica
          x-ms-enum:
            name: CreateMode
            modelAsString: true
        sourceServerId:
          type: string
          description: The master server id to create replica from.
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Server:
      description: Represents a server.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerProperties'
          x-ms-client-flatten: true
          description: Properties of the server.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ServerForCreate:
      required:
        - properties
        - location
      description: Represents a server to be created.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerPropertiesForCreate'
          x-ms-client-flatten: false
          description: Properties of the server.
        location:
          type: string
          description: The location the resource resides in.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      type: object
    ServerUpdateParameters:
      description: Parameters allowed to update for a server.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          properties:
            storageProfile:
              $ref: '#/components/schemas/StorageProfile'
              description: Storage profile of a server.
            administratorLoginPassword:
              type: string
              format: password
              description: The password of the administrator login.
            version:
              $ref: '#/components/schemas/ServerVersion'
              description: The version of a server.
            sslEnforcement:
              $ref: '#/components/schemas/SslEnforcement'
              description: Enable ssl enforcement or not when connect to server.
            minimalTlsVersion:
              $ref: '#/components/schemas/MinimalTlsVersion'
              description: Enforce a minimal Tls version for the server.
            publicNetworkAccess:
              $ref: '#/components/schemas/PublicNetworkAccess'
              description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
            replicationRole:
              type: string
              description: The replication role of the server.
          x-ms-client-flatten: true
          description: The properties that can be updated for a server.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      type: object
    ServerListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: The list of servers
      description: A list of servers.
      type: object
    FirewallRuleProperties:
      properties:
        startIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The start IP address of the server firewall rule. Must be IPv4 format.
        endIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The end IP address of the server firewall rule. Must be IPv4 format.
      required:
        - startIpAddress
        - endIpAddress
      description: The properties of a server firewall rule.
      type: object
    FirewallRule:
      required:
        - properties
      description: Represents a server firewall rule.
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          x-ms-client-flatten: true
          description: The properties of a firewall rule.
      type: object
    FirewallRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The list of firewall rules in a server.
      description: A list of firewall rules.
      type: object
    VirtualNetworkRuleProperties:
      description: Properties of a virtual network rule.
      required:
        - virtualNetworkSubnetId
      type: object
      properties:
        virtualNetworkSubnetId:
          description: The ARM resource id of the virtual network subnet.
          type: string
        ignoreMissingVnetServiceEndpoint:
          description: Create firewall rule before the virtual network has vnet service endpoint enabled.
          type: boolean
        state:
          description: Virtual Network Rule State
          enum:
            - Initializing
            - InProgress
            - Ready
            - Deleting
            - Unknown
          type: string
          readOnly: true
          x-ms-enum:
            name: VirtualNetworkRuleState
            modelAsString: true
    VirtualNetworkRule:
      description: A virtual network rule.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualNetworkRuleProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    VirtualNetworkRuleListResult:
      description: A list of virtual network rules.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    DatabaseProperties:
      properties:
        charset:
          type: string
          description: The charset of the database.
        collation:
          type: string
          description: The collation of the database.
      description: The properties of a database.
      type: object
    Database:
      description: Represents a Database.
      properties:
        properties:
          $ref: '#/components/schemas/DatabaseProperties'
          x-ms-client-flatten: true
          description: The properties of a database.
      type: object
    DatabaseListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Database'
          description: The list of databases housed in a server
      description: A List of databases.
      type: object
    ConfigurationProperties:
      properties:
        value:
          type: string
          description: Value of the configuration.
        description:
          type: string
          readOnly: true
          description: Description of the configuration.
        defaultValue:
          type: string
          readOnly: true
          description: Default value of the configuration.
        dataType:
          type: string
          readOnly: true
          description: Data type of the configuration.
        allowedValues:
          type: string
          readOnly: true
          description: Allowed values of the configuration.
        source:
          type: string
          description: Source of the configuration.
      description: The properties of a configuration.
      type: object
    Configuration:
      description: Represents a Configuration.
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          x-ms-client-flatten: true
          description: The properties of a configuration.
      type: object
    ConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
          description: The list of server configurations.
      description: A list of server configurations.
      type: object
    OperationDisplay:
      properties:
        provider:
          type: string
          readOnly: true
          description: Operation resource provider name.
        resource:
          type: string
          readOnly: true
          description: Resource on which the operation is performed.
        operation:
          type: string
          readOnly: true
          description: Localized friendly name for the operation.
        description:
          type: string
          readOnly: true
          description: Operation description.
      readOnly: true
      description: Display metadata associated with the operation.
      type: object
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    LogFileProperties:
      properties:
        sizeInKB:
          type: integer
          format: int64
          description: Size of the log file.
        createdTime:
          type: string
          readOnly: true
          format: date-time
          description: Creation timestamp of the log file.
        lastModifiedTime:
          type: string
          readOnly: true
          format: date-time
          description: Last modified timestamp of the log file.
        type:
          type: string
          description: Type of the log file.
        url:
          type: string
          readOnly: true
          description: The url to download the log file from.
      description: The properties of a log file.
      type: object
    LogFile:
      description: Represents a log file.
      properties:
        name:
          type: string
          description: The name of the log file.
        properties:
          $ref: '#/components/schemas/LogFileProperties'
          x-ms-client-flatten: true
          description: The properties of the log file.
      type: object
    LogFileListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LogFile'
          description: The list of log files.
      description: A list of log files.
      type: object
    PerformanceTierServiceLevelObjectives:
      properties:
        id:
          type: string
          description: ID for the service level objective.
        edition:
          type: string
          description: Edition of the performance tier.
        vCore:
          type: integer
          format: int32
          description: vCore associated with the service level objective
        hardwareGeneration:
          type: string
          description: Hardware generation associated with the service level objective
        maxBackupRetentionDays:
          type: integer
          format: int32
          description: Maximum Backup retention in days for the performance tier edition
        minBackupRetentionDays:
          type: integer
          format: int32
          description: Minimum Backup retention in days for the performance tier edition
        maxStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        minStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
      description: Service level objectives for performance tier.
      type: object
    PerformanceTierProperties:
      properties:
        id:
          type: string
          description: ID of the performance tier.
        maxBackupRetentionDays:
          type: integer
          format: int32
          description: Maximum Backup retention in days for the performance tier edition
        minBackupRetentionDays:
          type: integer
          format: int32
          description: Minimum Backup retention in days for the performance tier edition
        maxStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        minLargeStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        maxLargeStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        minStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        serviceLevelObjectives:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceTierServiceLevelObjectives'
          description: Service level objectives associated with the performance tier
      description: Performance tier properties
      type: object
    PerformanceTierListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceTierProperties'
          description: The list of performance tiers
      description: A list of performance tiers.
      type: object
    NameAvailabilityRequest:
      required:
        - name
      properties:
        name:
          type: string
          description: Resource name to verify.
        type:
          type: string
          description: Resource type used for verification.
      description: Request from client to check resource name availability.
      type: object
    NameAvailability:
      properties:
        message:
          type: string
          description: Error Message.
        nameAvailable:
          type: boolean
          description: Indicates whether the resource name is available.
        reason:
          type: string
          description: Reason for name being unavailable.
      description: Represents a resource name availability.
      type: object
    RecoverableServerProperties:
      description: The recoverable server's properties.
      type: object
      properties:
        lastAvailableBackupDateTime:
          type: string
          description: The last available backup date time.
          readOnly: true
        serviceLevelObjective:
          type: string
          description: The service level objective
          readOnly: true
        edition:
          type: string
          description: Edition of the performance tier.
          readOnly: true
        vCore:
          type: integer
          format: int32
          description: vCore associated with the service level objective
          readOnly: true
        hardwareGeneration:
          type: string
          description: Hardware generation associated with the service level objective
          readOnly: true
        version:
          type: string
          description: The MariaDB version
          readOnly: true
    RecoverableServerResource:
      description: A recoverable server resource.
      properties:
        properties:
          $ref: '#/components/schemas/RecoverableServerProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    QueryTextProperties:
      properties:
        queryId:
          type: string
          description: Query identifier unique to the server.
        queryText:
          type: string
          description: Query text.
      description: The properties of a query text.
      type: object
    QueryText:
      description: Represents a Query Text.
      properties:
        properties:
          $ref: '#/components/schemas/QueryTextProperties'
          x-ms-client-flatten: true
          description: The properties of a query text.
      type: object
    QueryTextsResultList:
      description: A list of query texts.
      type: object
      properties:
        value:
          description: The list of query texts.
          type: array
          items:
            $ref: '#/components/schemas/QueryText'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    TopQueryStatisticsInputProperties:
      properties:
        numberOfTopQueries:
          type: integer
          format: int32
          description: Max number of top queries to return.
        aggregationFunction:
          type: string
          description: Aggregation function name.
        observedMetric:
          type: string
          description: Observed metric name.
        observationStartTime:
          type: string
          format: date-time
          description: Observation start time.
        observationEndTime:
          type: string
          format: date-time
          description: Observation end time.
        aggregationWindow:
          type: string
          description: Aggregation interval type in ISO 8601 format.
      required:
        - numberOfTopQueries
        - aggregationFunction
        - observedMetric
        - observationStartTime
        - observationEndTime
        - aggregationWindow
      description: The properties for input to get top query statistics
      type: object
    TopQueryStatisticsInput:
      required:
        - properties
      description: Input to get top query statistics
      properties:
        properties:
          $ref: '#/components/schemas/TopQueryStatisticsInputProperties'
          x-ms-client-flatten: true
          description: The properties of a wait statistics input.
      type: object
    QueryStatisticProperties:
      properties:
        queryId:
          type: string
          description: Database query identifier.
        startTime:
          type: string
          format: date-time
          description: Observation start time.
        endTime:
          type: string
          format: date-time
          description: Observation end time.
        aggregationFunction:
          type: string
          description: Aggregation function name.
        databaseNames:
          type: array
          items:
            type: string
          description: The list of database names.
        queryExecutionCount:
          type: integer
          format: int64
          description: Number of query executions in this time interval.
        metricName:
          type: string
          description: Metric name.
        metricDisplayName:
          type: string
          description: Metric display name.
        metricValue:
          type: number
          format: double
          description: Metric value.
        metricValueUnit:
          type: string
          description: Metric value unit.
      description: The properties of a query statistic.
      type: object
    QueryStatistic:
      description: Represents a Query Statistic.
      properties:
        properties:
          $ref: '#/components/schemas/QueryStatisticProperties'
          x-ms-client-flatten: true
          description: The properties of a query statistic.
      type: object
    TopQueryStatisticsResultList:
      description: A list of query statistics.
      type: object
      properties:
        value:
          description: The list of top query statistics.
          type: array
          items:
            $ref: '#/components/schemas/QueryStatistic'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    WaitStatisticsInputProperties:
      properties:
        observationStartTime:
          type: string
          format: date-time
          description: Observation start time.
        observationEndTime:
          type: string
          format: date-time
          description: Observation end time.
        aggregationWindow:
          type: string
          description: Aggregation interval type in ISO 8601 format.
      required:
        - observationStartTime
        - observationEndTime
        - aggregationWindow
      description: The properties for input to get wait statistics
      type: object
    WaitStatisticsInput:
      required:
        - properties
      description: Input to get wait statistics
      properties:
        properties:
          $ref: '#/components/schemas/WaitStatisticsInputProperties'
          x-ms-client-flatten: true
          description: The properties of a wait statistics input.
      type: object
    WaitStatisticProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: Observation start time.
        endTime:
          type: string
          format: date-time
          description: Observation end time.
        eventName:
          type: string
          description: Wait event name.
        eventTypeName:
          type: string
          description: Wait event type name.
        queryId:
          type: integer
          format: int64
          description: Database query identifier.
        databaseName:
          type: string
          description: Database Name.
        userId:
          type: integer
          format: int64
          description: Database user identifier.
        count:
          type: integer
          format: int64
          description: Wait event count observed in this time interval.
        totalTimeInMs:
          type: number
          format: double
          description: Total time of wait in milliseconds in this time interval.
      description: The properties of a wait statistic.
      type: object
    WaitStatistic:
      description: Represents a Wait Statistic.
      properties:
        properties:
          $ref: '#/components/schemas/WaitStatisticProperties'
          x-ms-client-flatten: true
          description: The properties of a wait statistic.
      type: object
    WaitStatisticsResultList:
      description: A list of wait statistics.
      type: object
      properties:
        value:
          description: The list of wait statistics.
          type: array
          items:
            $ref: '#/components/schemas/WaitStatistic'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    QueryPerformanceInsightResetDataResult:
      description: Result of Query Performance Insight data reset.
      type: object
      properties:
        status:
          type: string
          enum:
            - Succeeded
            - Failed
          x-ms-enum:
            name: QueryPerformanceInsightResetDataResultState
            modelAsString: true
          description: Indicates result of the operation.
        message:
          type: string
          description: operation message.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    PrivateEndpointConnectionProperties:
      description: Properties of a private endpoint connection.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpointProperty'
          description: Private endpoint which the connection belongs to.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionStateProperty'
          description: Connection state of the private endpoint connection.
        provisioningState:
          description: State of the private endpoint connection.
          type: string
          readOnly: true
    PrivateLinkServiceConnectionStateProperty:
      required:
        - status
        - description
      type: object
      properties:
        status:
          description: The private link service connection status.
          type: string
        description:
          description: The private link service connection description.
          type: string
        actionsRequired:
          description: The actions required for private link service connection.
          type: string
          readOnly: true
    PrivateEndpointConnection:
      description: A private endpoint connection
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    PrivateEndpointConnectionListResult:
      description: A list of private endpoint connections.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    TagsObject:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
      type: object
    AdvisorProperties:
      properties: {}
      description: The properties of a recommendation action advisor.
      type: object
    Advisor:
      description: Represents a recommendation action advisor.
      properties:
        properties:
          $ref: '#/components/schemas/AdvisorProperties'
          x-ms-client-flatten: true
          description: The properties of a recommendation action advisor.
      type: object
    AdvisorsResultList:
      description: A list of query statistics.
      type: object
      properties:
        value:
          description: The list of recommendation action advisors.
          type: array
          items:
            $ref: '#/components/schemas/Advisor'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    RecommendationActionProperties:
      properties:
        advisorName:
          type: string
          description: Advisor name.
        sessionId:
          type: string
          description: Recommendation action session identifier.
        actionId:
          type: integer
          format: int32
          description: Recommendation action identifier.
        createdTime:
          type: string
          format: date-time
          description: Recommendation action creation time.
        expirationTime:
          type: string
          format: date-time
          description: Recommendation action expiration time.
        reason:
          type: string
          description: Recommendation action reason.
        recommendationType:
          type: string
          description: Recommendation action type.
        details:
          type: object
          additionalProperties:
            type: string
          description: Recommendation action details.
      description: The properties of a recommendation action.
      type: object
    RecommendationAction:
      description: Represents a Recommendation Action.
      properties:
        properties:
          $ref: '#/components/schemas/RecommendationActionProperties'
          x-ms-client-flatten: true
          description: The properties of a recommendation action.
      type: object
    RecommendationActionsResultList:
      description: A list of recommendation actions.
      type: object
      properties:
        value:
          description: The list of recommendation action advisors.
          type: array
          items:
            $ref: '#/components/schemas/RecommendationAction'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    RecommendedActionSessionsOperationStatus:
      properties:
        name:
          type: string
          description: Operation identifier.
        startTime:
          type: string
          format: date-time
          description: Operation start time.
        status:
          type: string
          description: Operation status.
      description: Recommendation action session operation status.
      type: object
  x-stackQL-resources:
    servers:
      id: azure.maria_db.servers
      name: servers
      title: servers
      methods:
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1start?api-version=2020-01-01/post'
            operationId: Servers_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1stop?api-version=2020-01-01/post'
            operationId: Servers_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}?api-version=2018-06-01/put'
            operationId: Servers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}?api-version=2018-06-01/patch'
            operationId: Servers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}?api-version=2018-06-01/delete'
            operationId: Servers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}?api-version=2018-06-01/get'
            operationId: Servers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers?api-version=2018-06-01/get'
            operationId: Servers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1servers?api-version=2018-06-01/get'
            operationId: Servers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1restart?api-version=2018-06-01/post'
            operationId: Servers_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/servers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/servers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/servers/methods/delete'
    private_link_resources:
      id: azure.maria_db.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateLinkResources?api-version=2018-06-01/get'
            operationId: PrivateLinkResources_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateLinkResources~1{groupName}?api-version=2018-06-01/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    server_security_alert_policies:
      id: azure.maria_db.server_security_alert_policies
      name: server_security_alert_policies
      title: server_security_alert_policies
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1securityAlertPolicies~1{securityAlertPolicyName}?api-version=2018-06-01/get'
            operationId: ServerSecurityAlertPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSecurityAlertPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1securityAlertPolicies~1{securityAlertPolicyName}?api-version=2018-06-01/put'
            operationId: ServerSecurityAlertPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSecurityAlertPolicy
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1securityAlertPolicies?api-version=2018-06-01/get'
            operationId: ServerSecurityAlertPolicies_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSecurityAlertPolicyListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_security_alert_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/server_security_alert_policies/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/server_security_alert_policies/methods/create_or_update'
        update: []
        replace: []
        delete: []
    replicas:
      id: azure.maria_db.replicas
      name: replicas
      title: replicas
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1replicas?api-version=2018-06-01/get'
            operationId: Replicas_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replicas/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    firewall_rules:
      id: azure.maria_db.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2018-06-01/put'
            operationId: FirewallRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2018-06-01/delete'
            operationId: FirewallRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2018-06-01/get'
            operationId: FirewallRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules?api-version=2018-06-01/get'
            operationId: FirewallRules_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    virtual_network_rules:
      id: azure.maria_db.virtual_network_rules
      name: virtual_network_rules
      title: virtual_network_rules
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules~1{virtualNetworkRuleName}?api-version=2018-06-01/get'
            operationId: VirtualNetworkRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkRule
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules~1{virtualNetworkRuleName}?api-version=2018-06-01/put'
            operationId: VirtualNetworkRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules~1{virtualNetworkRuleName}?api-version=2018-06-01/delete'
            operationId: VirtualNetworkRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules?api-version=2018-06-01/get'
            operationId: VirtualNetworkRules_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/delete'
    databases:
      id: azure.maria_db.databases
      name: databases
      title: databases
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases~1{databaseName}?api-version=2018-06-01/put'
            operationId: Databases_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases~1{databaseName}?api-version=2018-06-01/delete'
            operationId: Databases_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases~1{databaseName}?api-version=2018-06-01/get'
            operationId: Databases_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases?api-version=2018-06-01/get'
            operationId: Databases_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/databases/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/delete'
    configurations:
      id: azure.maria_db.configurations
      name: configurations
      title: configurations
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1configurations~1{configurationName}?api-version=2018-06-01/put'
            operationId: Configurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1configurations~1{configurationName}?api-version=2018-06-01/get'
            operationId: Configurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1configurations?api-version=2018-06-01/get'
            operationId: Configurations_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/configurations/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/create_or_update'
        update: []
        replace: []
        delete: []
    server_parameters_update_configurations:
      id: azure.maria_db.server_parameters_update_configurations
      name: server_parameters_update_configurations
      title: server_parameters_update_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1updateConfigurations?api-version=2018-06-01/post'
            operationId: ServerParametersUpdateConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_parameters_update_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    log_files:
      id: azure.maria_db.log_files
      name: log_files
      title: log_files
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1logFiles?api-version=2018-06-01/get'
            operationId: LogFiles_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogFileListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_files/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    recoverable_servers:
      id: azure.maria_db.recoverable_servers
      name: recoverable_servers
      title: recoverable_servers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1recoverableServers?api-version=2018-06-01/get'
            operationId: RecoverableServers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecoverableServerResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recoverable_servers/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    server_based_performance_tiers:
      id: azure.maria_db.server_based_performance_tiers
      name: server_based_performance_tiers
      title: server_based_performance_tiers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1performanceTiers?api-version=2018-06-01/get'
            operationId: ServerBasedPerformanceTier_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PerformanceTierListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_based_performance_tiers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    location_based_performance_tiers:
      id: azure.maria_db.location_based_performance_tiers
      name: location_based_performance_tiers
      title: location_based_performance_tiers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1locations~1{locationName}~1performanceTiers?api-version=2018-06-01/get'
            operationId: LocationBasedPerformanceTier_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PerformanceTierListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_based_performance_tiers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.maria_db.operations
      name: operations
      title: operations
      methods:
        check_name_availability_execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1checkNameAvailability?api-version=2018-06-01/post'
            operationId: Operations_CheckNameAvailabilityExecute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailability
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBforMariaDB~1operations?api-version=2018-06-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
        reset_query_performance_insight_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1resetQueryPerformanceInsightData?api-version=2018-06-01/post'
            operationId: Operations_ResetQueryPerformanceInsightData
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QueryPerformanceInsightResetDataResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    query_text:
      id: azure.maria_db.query_text
      name: query_text
      title: query_text
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1queryTexts~1{queryId}?api-version=2018-06-01/get'
            operationId: QueryTexts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QueryText
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1queryTexts?api-version=2018-06-01/get'
            operationId: QueryTexts_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QueryTextsResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/query_text/methods/get'
          - $ref: '#/components/x-stackQL-resources/query_text/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    top_query_statistics:
      id: azure.maria_db.top_query_statistics
      name: top_query_statistics
      title: top_query_statistics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1topQueryStatistics~1{queryStatisticId}?api-version=2018-06-01/get'
            operationId: TopQueryStatistics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QueryStatistic
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1topQueryStatistics?api-version=2018-06-01/get'
            operationId: TopQueryStatistics_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopQueryStatisticsResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/top_query_statistics/methods/get'
          - $ref: '#/components/x-stackQL-resources/top_query_statistics/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    wait_statistics:
      id: azure.maria_db.wait_statistics
      name: wait_statistics
      title: wait_statistics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1waitStatistics~1{waitStatisticsId}?api-version=2018-06-01/get'
            operationId: WaitStatistics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WaitStatistic
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1waitStatistics?api-version=2018-06-01/get'
            operationId: WaitStatistics_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WaitStatisticsResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/wait_statistics/methods/get'
          - $ref: '#/components/x-stackQL-resources/wait_statistics/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connections:
      id: azure.maria_db.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2018-06-01/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2018-06-01/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2018-06-01/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_tags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2018-06-01/patch'
            operationId: PrivateEndpointConnections_UpdateTags
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections?api-version=2018-06-01/get'
            operationId: PrivateEndpointConnections_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    advisors:
      id: azure.maria_db.advisors
      name: advisors
      title: advisors
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}?api-version=2018-06-01/get'
            operationId: Advisors_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Advisor
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors?api-version=2018-06-01/get'
            operationId: Advisors_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AdvisorsResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/advisors/methods/get'
          - $ref: '#/components/x-stackQL-resources/advisors/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    recommended_action_sessions:
      id: azure.maria_db.recommended_action_sessions
      name: recommended_action_sessions
      title: recommended_action_sessions
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}~1createRecommendedActionSession?api-version=2018-06-01/post'
            operationId: RecommendedActionSession_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/recommended_action_sessions/methods/create'
        update: []
        replace: []
        delete: []
    recommended_actions:
      id: azure.maria_db.recommended_actions
      name: recommended_actions
      title: recommended_actions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}~1recommendedActions~1{recommendedActionName}?api-version=2018-06-01/get'
            operationId: RecommendedActions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecommendationAction
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}~1recommendedActions?api-version=2018-06-01/get'
            operationId: RecommendedActions_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecommendationActionsResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommended_actions/methods/get'
          - $ref: '#/components/x-stackQL-resources/recommended_actions/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    location_based_recommended_action_sessions_operation_status:
      id: azure.maria_db.location_based_recommended_action_sessions_operation_status
      name: location_based_recommended_action_sessions_operation_status
      title: location_based_recommended_action_sessions_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1locations~1{locationName}~1recommendedActionSessionsAzureAsyncOperation~1{operationId}?api-version=2018-06-01/get'
            operationId: LocationBasedRecommendedActionSessionsOperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecommendedActionSessionsOperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_based_recommended_action_sessions_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    location_based_recommended_action_sessions_results:
      id: azure.maria_db.location_based_recommended_action_sessions_results
      name: location_based_recommended_action_sessions_results
      title: location_based_recommended_action_sessions_results
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1locations~1{locationName}~1recommendedActionSessionsOperationResults~1{operationId}?api-version=2018-06-01/get'
            operationId: LocationBasedRecommendedActionSessionsResult_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecommendationActionsResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_based_recommended_action_sessions_results/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_servers:
      id: azure.maria_db.vw_servers
      name: vw_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              sku as sku,
              tags as tags,
              JSON_EXTRACT(properties, '$.administratorLogin') as "administrator_login",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.sslEnforcement') as "ssl_enforcement",
              JSON_EXTRACT(properties, '$.minimalTlsVersion') as "minimal_tls_version",
              JSON_EXTRACT(properties, '$.userVisibleState') as "user_visible_state",
              JSON_EXTRACT(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
              JSON_EXTRACT(properties, '$.earliestRestoreDate') as "earliest_restore_date",
              JSON_EXTRACT(properties, '$.storageProfile') as "storage_profile",
              JSON_EXTRACT(properties, '$.replicationRole') as "replication_role",
              JSON_EXTRACT(properties, '$.masterServerId') as "master_server_id",
              JSON_EXTRACT(properties, '$.replicaCapacity') as "replica_capacity",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              subscriptionId,
              resourceGroupName,
              serverName
              FROM azure.maria_db.servers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                sku as sku,
                tags as tags,
                json_extract_path_text(properties, '$.administratorLogin') as "administrator_login",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.sslEnforcement') as "ssl_enforcement",
                json_extract_path_text(properties, '$.minimalTlsVersion') as "minimal_tls_version",
                json_extract_path_text(properties, '$.userVisibleState') as "user_visible_state",
                json_extract_path_text(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
                json_extract_path_text(properties, '$.earliestRestoreDate') as "earliest_restore_date",
                json_extract_path_text(properties, '$.storageProfile') as "storage_profile",
                json_extract_path_text(properties, '$.replicationRole') as "replication_role",
                json_extract_path_text(properties, '$.masterServerId') as "master_server_id",
                json_extract_path_text(properties, '$.replicaCapacity') as "replica_capacity",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                subscriptionId,
                resourceGroupName,
                serverName
                FROM azure.maria_db.servers
                WHERE subscriptionId = 'replace-me';
    vw_private_link_resources:
      id: azure.maria_db.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              subscriptionId,
              resourceGroupName,
              serverName,
              groupName
              FROM azure.maria_db.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                subscriptionId,
                resourceGroupName,
                serverName,
                groupName
                FROM azure.maria_db.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_server_security_alert_policies:
      id: azure.maria_db.vw_server_security_alert_policies
      name: vw_server_security_alert_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.disabledAlerts') as "disabled_alerts",
              JSON_EXTRACT(properties, '$.emailAddresses') as "email_addresses",
              JSON_EXTRACT(properties, '$.emailAccountAdmins') as "email_account_admins",
              JSON_EXTRACT(properties, '$.storageEndpoint') as "storage_endpoint",
              JSON_EXTRACT(properties, '$.storageAccountAccessKey') as "storage_account_access_key",
              JSON_EXTRACT(properties, '$.retentionDays') as "retention_days",
              subscriptionId,
              resourceGroupName,
              serverName,
              securityAlertPolicyName
              FROM azure.maria_db.server_security_alert_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.disabledAlerts') as "disabled_alerts",
                json_extract_path_text(properties, '$.emailAddresses') as "email_addresses",
                json_extract_path_text(properties, '$.emailAccountAdmins') as "email_account_admins",
                json_extract_path_text(properties, '$.storageEndpoint') as "storage_endpoint",
                json_extract_path_text(properties, '$.storageAccountAccessKey') as "storage_account_access_key",
                json_extract_path_text(properties, '$.retentionDays') as "retention_days",
                subscriptionId,
                resourceGroupName,
                serverName,
                securityAlertPolicyName
                FROM azure.maria_db.server_security_alert_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_firewall_rules:
      id: azure.maria_db.vw_firewall_rules
      name: vw_firewall_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startIpAddress') as "start_ip_address",
              JSON_EXTRACT(properties, '$.endIpAddress') as "end_ip_address",
              subscriptionId,
              resourceGroupName,
              serverName,
              firewallRuleName
              FROM azure.maria_db.firewall_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startIpAddress') as "start_ip_address",
                json_extract_path_text(properties, '$.endIpAddress') as "end_ip_address",
                subscriptionId,
                resourceGroupName,
                serverName,
                firewallRuleName
                FROM azure.maria_db.firewall_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_virtual_network_rules:
      id: azure.maria_db.vw_virtual_network_rules
      name: vw_virtual_network_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.virtualNetworkSubnetId') as "virtual_network_subnet_id",
              JSON_EXTRACT(properties, '$.ignoreMissingVnetServiceEndpoint') as "ignore_missing_vnet_service_endpoint",
              JSON_EXTRACT(properties, '$.state') as "state",
              subscriptionId,
              resourceGroupName,
              serverName,
              virtualNetworkRuleName
              FROM azure.maria_db.virtual_network_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.virtualNetworkSubnetId') as "virtual_network_subnet_id",
                json_extract_path_text(properties, '$.ignoreMissingVnetServiceEndpoint') as "ignore_missing_vnet_service_endpoint",
                json_extract_path_text(properties, '$.state') as "state",
                subscriptionId,
                resourceGroupName,
                serverName,
                virtualNetworkRuleName
                FROM azure.maria_db.virtual_network_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_databases:
      id: azure.maria_db.vw_databases
      name: vw_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.charset') as "charset",
              JSON_EXTRACT(properties, '$.collation') as "collation",
              subscriptionId,
              resourceGroupName,
              serverName,
              databaseName
              FROM azure.maria_db.databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.charset') as "charset",
                json_extract_path_text(properties, '$.collation') as "collation",
                subscriptionId,
                resourceGroupName,
                serverName,
                databaseName
                FROM azure.maria_db.databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_configurations:
      id: azure.maria_db.vw_configurations
      name: vw_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.value') as "value",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.defaultValue') as "default_value",
              JSON_EXTRACT(properties, '$.dataType') as "data_type",
              JSON_EXTRACT(properties, '$.allowedValues') as "allowed_values",
              JSON_EXTRACT(properties, '$.source') as "source",
              subscriptionId,
              resourceGroupName,
              serverName,
              configurationName
              FROM azure.maria_db.configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.value') as "value",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.defaultValue') as "default_value",
                json_extract_path_text(properties, '$.dataType') as "data_type",
                json_extract_path_text(properties, '$.allowedValues') as "allowed_values",
                json_extract_path_text(properties, '$.source') as "source",
                subscriptionId,
                resourceGroupName,
                serverName,
                configurationName
                FROM azure.maria_db.configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_recoverable_servers:
      id: azure.maria_db.vw_recoverable_servers
      name: vw_recoverable_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.lastAvailableBackupDateTime') as "last_available_backup_date_time",
              JSON_EXTRACT(properties, '$.serviceLevelObjective') as "service_level_objective",
              JSON_EXTRACT(properties, '$.edition') as "edition",
              JSON_EXTRACT(properties, '$.vCore') as "v_core",
              JSON_EXTRACT(properties, '$.hardwareGeneration') as "hardware_generation",
              JSON_EXTRACT(properties, '$.version') as "version",
              subscriptionId,
              resourceGroupName,
              serverName
              FROM azure.maria_db.recoverable_servers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.lastAvailableBackupDateTime') as "last_available_backup_date_time",
                json_extract_path_text(properties, '$.serviceLevelObjective') as "service_level_objective",
                json_extract_path_text(properties, '$.edition') as "edition",
                json_extract_path_text(properties, '$.vCore') as "v_core",
                json_extract_path_text(properties, '$.hardwareGeneration') as "hardware_generation",
                json_extract_path_text(properties, '$.version') as "version",
                subscriptionId,
                resourceGroupName,
                serverName
                FROM azure.maria_db.recoverable_servers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_query_text:
      id: azure.maria_db.vw_query_text
      name: vw_query_text
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.queryId') as "query_id",
              JSON_EXTRACT(properties, '$.queryText') as "query_text",
              subscriptionId,
              resourceGroupName,
              serverName,
              queryId,
              queryIds
              FROM azure.maria_db.query_text
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND queryIds = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.queryId') as "query_id",
                json_extract_path_text(properties, '$.queryText') as "query_text",
                subscriptionId,
                resourceGroupName,
                serverName,
                queryId,
                queryIds
                FROM azure.maria_db.query_text
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND queryIds = 'replace-me';
    vw_top_query_statistics:
      id: azure.maria_db.vw_top_query_statistics
      name: vw_top_query_statistics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.queryId') as "query_id",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.aggregationFunction') as "aggregation_function",
              JSON_EXTRACT(properties, '$.databaseNames') as "database_names",
              JSON_EXTRACT(properties, '$.queryExecutionCount') as "query_execution_count",
              JSON_EXTRACT(properties, '$.metricName') as "metric_name",
              JSON_EXTRACT(properties, '$.metricDisplayName') as "metric_display_name",
              JSON_EXTRACT(properties, '$.metricValue') as "metric_value",
              JSON_EXTRACT(properties, '$.metricValueUnit') as "metric_value_unit",
              subscriptionId,
              resourceGroupName,
              serverName,
              queryStatisticId
              FROM azure.maria_db.top_query_statistics
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND queryStatisticId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.queryId') as "query_id",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.aggregationFunction') as "aggregation_function",
                json_extract_path_text(properties, '$.databaseNames') as "database_names",
                json_extract_path_text(properties, '$.queryExecutionCount') as "query_execution_count",
                json_extract_path_text(properties, '$.metricName') as "metric_name",
                json_extract_path_text(properties, '$.metricDisplayName') as "metric_display_name",
                json_extract_path_text(properties, '$.metricValue') as "metric_value",
                json_extract_path_text(properties, '$.metricValueUnit') as "metric_value_unit",
                subscriptionId,
                resourceGroupName,
                serverName,
                queryStatisticId
                FROM azure.maria_db.top_query_statistics
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND queryStatisticId = 'replace-me';
    vw_wait_statistics:
      id: azure.maria_db.vw_wait_statistics
      name: vw_wait_statistics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.eventName') as "event_name",
              JSON_EXTRACT(properties, '$.eventTypeName') as "event_type_name",
              JSON_EXTRACT(properties, '$.queryId') as "query_id",
              JSON_EXTRACT(properties, '$.databaseName') as "database_name",
              JSON_EXTRACT(properties, '$.userId') as "user_id",
              JSON_EXTRACT(properties, '$.count') as "count",
              JSON_EXTRACT(properties, '$.totalTimeInMs') as "total_time_in_ms",
              subscriptionId,
              resourceGroupName,
              serverName,
              waitStatisticsId
              FROM azure.maria_db.wait_statistics
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND waitStatisticsId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.eventName') as "event_name",
                json_extract_path_text(properties, '$.eventTypeName') as "event_type_name",
                json_extract_path_text(properties, '$.queryId') as "query_id",
                json_extract_path_text(properties, '$.databaseName') as "database_name",
                json_extract_path_text(properties, '$.userId') as "user_id",
                json_extract_path_text(properties, '$.count') as "count",
                json_extract_path_text(properties, '$.totalTimeInMs') as "total_time_in_ms",
                subscriptionId,
                resourceGroupName,
                serverName,
                waitStatisticsId
                FROM azure.maria_db.wait_statistics
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND waitStatisticsId = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.maria_db.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              serverName,
              privateEndpointConnectionName
              FROM azure.maria_db.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                serverName,
                privateEndpointConnectionName
                FROM azure.maria_db.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_advisors:
      id: azure.maria_db.vw_advisors
      name: vw_advisors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              subscriptionId,
              resourceGroupName,
              serverName,
              advisorName
              FROM azure.maria_db.advisors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                subscriptionId,
                resourceGroupName,
                serverName,
                advisorName
                FROM azure.maria_db.advisors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_recommended_actions:
      id: azure.maria_db.vw_recommended_actions
      name: vw_recommended_actions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.advisorName') as "advisor_name",
              JSON_EXTRACT(properties, '$.sessionId') as "session_id",
              JSON_EXTRACT(properties, '$.actionId') as "action_id",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.expirationTime') as "expiration_time",
              JSON_EXTRACT(properties, '$.reason') as "reason",
              JSON_EXTRACT(properties, '$.recommendationType') as "recommendation_type",
              JSON_EXTRACT(properties, '$.details') as "details",
              subscriptionId,
              resourceGroupName,
              serverName,
              advisorName,
              recommendedActionName
              FROM azure.maria_db.recommended_actions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND advisorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.advisorName') as "advisor_name",
                json_extract_path_text(properties, '$.sessionId') as "session_id",
                json_extract_path_text(properties, '$.actionId') as "action_id",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.expirationTime') as "expiration_time",
                json_extract_path_text(properties, '$.reason') as "reason",
                json_extract_path_text(properties, '$.recommendationType') as "recommendation_type",
                json_extract_path_text(properties, '$.details') as "details",
                subscriptionId,
                resourceGroupName,
                serverName,
                advisorName,
                recommendedActionName
                FROM azure.maria_db.recommended_actions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me' AND advisorName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/start?api-version=2020-01-01:
    post:
      tags:
        - ServerStart
      operationId: Servers_Start
      description: Starts a stopped server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/stop?api-version=2020-01-01:
    post:
      tags:
        - ServerStop
      operationId: Servers_Stop
      description: Stops a running server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateLinkResources?api-version=2018-06-01:
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources for MariaDB server.
      operationId: PrivateLinkResources_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateLinkResources/{groupName}?api-version=2018-06-01:
    get:
      tags:
        - PrivateLinkResources
      description: Gets a private link resource for MariaDB server.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: groupName
          in: path
          description: The name of the private link resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}?api-version=2018-06-01:
    get:
      tags:
        - ServerSecurityAlertPolicies
      description: Get a server's security alert policy.
      operationId: ServerSecurityAlertPolicies_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: securityAlertPolicyName
          in: path
          description: The name of the security alert policy.
          required: true
          schema:
            enum:
              - Default
            x-ms-enum:
              name: SecurityAlertPolicyName
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the server threat detection policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicy'
        default:
          description: Error response describing why the operation of getting security alert policies failed.
    put:
      tags:
        - ServerSecurityAlertPolicies
      description: Creates or updates a threat detection policy.
      operationId: ServerSecurityAlertPolicies_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: securityAlertPolicyName
          in: path
          description: The name of the threat detection policy.
          required: true
          schema:
            enum:
              - Default
            x-ms-enum:
              name: SecurityAlertPolicyName
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The server security alert policy.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerSecurityAlertPolicy'
      responses:
        '200':
          description: Successfully updated the threat detection policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicy'
        '202':
          description: Created request to set the server threat detection policy.
        default:
          description: Error response describing why the operation of setting security alert policies failed.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/securityAlertPolicies?api-version=2018-06-01:
    get:
      tags:
        - ServerSecurityAlertPolicies
      description: Get the server's threat detection policies.
      operationId: ServerSecurityAlertPolicies_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the server threat detection policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicyListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.

             * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.

             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress

             * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.

             * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}?api-version=2018-06-01:
    put:
      tags:
        - Servers
      operationId: Servers_Create
      description: Creates a new server or updates an existing server. The update action will overwrite the existing server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerForCreate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Servers
      operationId: Servers_Update
      description: Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Servers
      operationId: Servers_Delete
      description: Deletes a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Servers
      operationId: Servers_Get
      description: Gets information about a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers?api-version=2018-06-01:
    get:
      tags:
        - Servers
      operationId: Servers_ListByResourceGroup
      description: List all the servers in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/servers?api-version=2018-06-01:
    get:
      tags:
        - Servers
      operationId: Servers_List
      description: List all the servers in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/restart?api-version=2018-06-01:
    post:
      tags:
        - ServerRestart
      operationId: Servers_Restart
      description: Restarts a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/replicas?api-version=2018-06-01:
    get:
      tags:
        - Replicas
      operationId: Replicas_ListByServer
      description: List all the replicas for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules/{firewallRuleName}?api-version=2018-06-01:
    put:
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Creates a new firewall rule or updates an existing firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes a server firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      description: Gets information about a server firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules?api-version=2018-06-01:
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByServer
      description: List all the firewall rules in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}?api-version=2018-06-01:
    get:
      tags:
        - VirtualNetworkRules
      description: Gets a virtual network rule.
      operationId: VirtualNetworkRules_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/virtualNetworkRuleNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
        default:
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
    put:
      tags:
        - VirtualNetworkRules
      description: Creates or updates an existing virtual network rule.
      operationId: VirtualNetworkRules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/virtualNetworkRuleNameParameter'
      requestBody:
        description: The requested virtual Network Rule Resource state.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkRule'
      responses:
        '200':
          description: Successfully updated a virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
        '201':
          description: Successfully created a virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceId - Invalid resource identifier.

             * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

             * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

             * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

             * 400 NullVirtualNetworkRequest - Virtual Network Request is Null

             * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null

             * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled

             * 404 OperationIdNotFound - The operation with Id does not exist.

             * 409 OperationCancelled - The operation has been cancelled by user.

             * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

             * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualNetworkRules
      description: Deletes the virtual network rule with the given name.
      operationId: VirtualNetworkRules_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/virtualNetworkRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the virtual network rule.
        '202':
          description: Accepted
        '204':
          description: The specified virtual network rule does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceId - Invalid resource identifier.

             * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

             * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

             * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

             * 400 NullVirtualNetworkRequest - Virtual Network Request is Null

             * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 OperationIdNotFound - The operation with Id does not exist.

             * 409 OperationCancelled - The operation has been cancelled by user.

             * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

             * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules?api-version=2018-06-01:
    get:
      tags:
        - VirtualNetworkRules
      description: Gets a list of virtual network rules in a server.
      operationId: VirtualNetworkRules_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the list of virtual network rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRuleListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases/{databaseName}?api-version=2018-06-01:
    put:
      tags:
        - Databases
      operationId: Databases_CreateOrUpdate
      description: Creates a new database or updates an existing database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      requestBody:
        description: The required parameters for creating or updating a database.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Databases
      operationId: Databases_Delete
      description: Deletes a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Databases
      operationId: Databases_Get
      description: Gets information about a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases?api-version=2018-06-01:
    get:
      tags:
        - Databases
      operationId: Databases_ListByServer
      description: List all the databases in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations/{configurationName}?api-version=2018-06-01:
    put:
      tags:
        - Configurations
      operationId: Configurations_CreateOrUpdate
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Configurations
      operationId: Configurations_Get
      description: Gets information about a configuration of server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations?api-version=2018-06-01:
    get:
      tags:
        - Configurations
      operationId: Configurations_ListByServer
      description: List all the configurations in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/updateConfigurations?api-version=2018-06-01:
    post:
      tags:
        - ConfigurationsUpdate
      operationId: ServerParametersUpdateConfigurations_List
      description: Update a list of configurations in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The parameters for updating a list of server configuration.
        required: true
        x-ms-requestBody-name: value
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationListResult'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-original-operationId: ServerParameters_ListUpdateConfigurations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/logFiles?api-version=2018-06-01:
    get:
      tags:
        - LogFiles
      operationId: LogFiles_ListByServer
      description: List all the log files in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogFileListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/recoverableServers?api-version=2018-06-01:
    get:
      tags:
        - RecoverableServers
      operationId: RecoverableServers_Get
      description: Gets a recoverable MariaDB Server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoverableServerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/performanceTiers?api-version=2018-06-01:
    get:
      tags:
        - ServerBasedPerformanceTier
      operationId: ServerBasedPerformanceTier_List
      description: List all the performance tiers for a MariaDB server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceTierListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/performanceTiers?api-version=2018-06-01:
    get:
      tags:
        - LocationBasedPerformanceTier
      operationId: LocationBasedPerformanceTier_List
      description: List all the performance tiers at specified location in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceTierListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/checkNameAvailability?api-version=2018-06-01:
    post:
      tags:
        - CheckNameAvailability
      operationId: Operations_CheckNameAvailabilityExecute
      description: Check the availability of name for resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: CheckNameAvailability_Execute
  /providers/Microsoft.DBforMariaDB/operations?api-version=2018-06-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available REST API operations.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/queryTexts/{queryId}?api-version=2018-06-01:
    get:
      tags:
        - QueryTexts
      operationId: QueryTexts_Get
      description: Retrieve the Query-Store query texts for the queryId.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/QueryIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryText'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/queryTexts?api-version=2018-06-01:
    get:
      tags:
        - QueryTexts
      operationId: QueryTexts_ListByServer
      description: Retrieve the Query-Store query texts for specified queryIds.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: queryIds
          in: query
          description: The query identifiers
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTextsResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics/{queryStatisticId}?api-version=2018-06-01:
    get:
      tags:
        - TopQueryStatistics
      operationId: TopQueryStatistics_Get
      description: Retrieve the query statistic for specified identifier.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/QueryStatisticIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryStatistic'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics?api-version=2018-06-01:
    get:
      tags:
        - TopQueryStatistics
      operationId: TopQueryStatistics_ListByServer
      description: Retrieve the Query-Store top queries for specified metric and aggregation.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for retrieving top query statistics.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopQueryStatisticsInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopQueryStatisticsResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/waitStatistics/{waitStatisticsId}?api-version=2018-06-01:
    get:
      tags:
        - WaitStatistics
      operationId: WaitStatistics_Get
      description: Retrieve wait statistics for specified identifier.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/WaitStatisticsIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitStatistic'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/waitStatistics?api-version=2018-06-01:
    get:
      tags:
        - WaitStatistics
      operationId: WaitStatistics_ListByServer
      description: Retrieve wait statistics for specified aggregation window.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for retrieving wait statistics.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitStatisticsInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitStatisticsResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/resetQueryPerformanceInsightData?api-version=2018-06-01:
    post:
      tags:
        - ResetQueryPerformanceInsightData
      operationId: Operations_ResetQueryPerformanceInsightData
      description: Reset data for Query Performance Insight.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPerformanceInsightResetDataResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: ResetQueryPerformanceInsightData
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2018-06-01:
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets a private endpoint connection.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - PrivateEndpointConnections
      description: Approve or reject a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully approved or rejected private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted private endpoint connection.
        '202':
          description: Accepted
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_UpdateTags
      summary: Updates tags on private endpoint connection.
      description: Updates private endpoint connection with the specified tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Update private endpoint connection Tags operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateEndpointConnections?api-version=2018-06-01:
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets all private endpoint connections on a server.
      operationId: PrivateEndpointConnections_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}?api-version=2018-06-01:
    get:
      tags:
        - Advisors
      operationId: Advisors_Get
      description: Get a recommendation action advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisor'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors?api-version=2018-06-01:
    get:
      tags:
        - Advisors
      operationId: Advisors_ListByServer
      description: List recommendation action advisors.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisorsResultList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/createRecommendedActionSession?api-version=2018-06-01:
    post:
      tags:
        - RecommendedActionSessions
      operationId: RecommendedActionSession_Create
      description: Create recommendation action session for the advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
        - name: databaseName
          in: query
          description: The name of the database.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-original-operationId: CreateRecommendedActionSession
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}?api-version=2018-06-01:
    get:
      tags:
        - RecommendedActions
      operationId: RecommendedActions_Get
      description: Retrieve recommended actions from the advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
        - $ref: '#/components/parameters/RecommendedActionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationAction'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/recommendedActions?api-version=2018-06-01:
    get:
      tags:
        - RecommendedActions
      operationId: RecommendedActions_ListByServer
      description: Retrieve recommended actions from the advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
        - name: sessionId
          in: query
          description: The recommendation action session identifier.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationActionsResultList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/recommendedActionSessionsAzureAsyncOperation/{operationId}?api-version=2018-06-01:
    get:
      tags:
        - LocationBasedRecommendedActionSessionsOperationStatus
      operationId: LocationBasedRecommendedActionSessionsOperationStatus_Get
      description: Recommendation action session operation status.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedActionSessionsOperationStatus'
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/recommendedActionSessionsOperationResults/{operationId}?api-version=2018-06-01:
    get:
      tags:
        - LocationBasedRecommendedActionSessionsResult
      operationId: LocationBasedRecommendedActionSessionsResult_List
      description: Recommendation action session operation result.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationActionsResultList'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationActionsResultList'
      x-ms-pageable:
        nextLinkName: nextLink
