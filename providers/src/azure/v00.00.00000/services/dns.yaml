openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure DNS
  description: The Microsoft Azure DNS Resource Provider REST API allows you to create and modify DNS zones and records hosted within Azure. Zones and records are managed as Azure Resources.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ZoneNameParameter:
      name: zoneName
      in: path
      description: The name of the DNS zone (without a terminating dot).
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RelativeRecordSetNameParameter:
      name: relativeRecordSetName
      in: path
      description: The name of the record set, relative to the name of the zone.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    RecordTypeParameter:
      name: recordType
      in: path
      description: The type of DNS record in this record set.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - A
          - AAAA
          - CAA
          - CNAME
          - MX
          - NS
          - PTR
          - SOA
          - SRV
          - TXT
          - TLSA
          - DS
          - NAPTR
        x-ms-enum:
          name: RecordType
          modelAsString: false
        type: string
  schemas:
    Resource:
      type: object
      x-ms-azure-resource: true
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      required:
        - location
      description: Common properties of an Azure Resource Manager resource
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        location:
          type: string
          description: Resource location.
          x-ms-mutability:
            - read
            - create
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ARecord:
      type: object
      properties:
        ipv4Address:
          type: string
          description: The IPv4 address of this A record.
      description: An A record.
    AaaaRecord:
      type: object
      properties:
        ipv6Address:
          type: string
          description: The IPv6 address of this AAAA record.
      description: An AAAA record.
    MxRecord:
      type: object
      properties:
        preference:
          type: integer
          format: int32
          description: The preference value for this MX record.
        exchange:
          type: string
          description: The domain name of the mail host for this MX record.
      description: An MX record.
    NsRecord:
      type: object
      properties:
        nsdname:
          type: string
          description: The name server name for this NS record.
      description: An NS record.
    PtrRecord:
      type: object
      properties:
        ptrdname:
          type: string
          description: The PTR target domain name for this PTR record.
      description: A PTR record.
    SrvRecord:
      type: object
      properties:
        priority:
          type: integer
          format: int32
          description: The priority value for this SRV record.
        weight:
          type: integer
          format: int32
          description: The weight value for this SRV record.
        port:
          type: integer
          format: int32
          description: The port value for this SRV record.
        target:
          type: string
          description: The target domain name for this SRV record.
      description: An SRV record.
    TxtRecord:
      type: object
      properties:
        value:
          type: array
          x-ms-identifiers: []
          items:
            type: string
          description: The text value of this TXT record.
      description: A TXT record.
    CnameRecord:
      type: object
      properties:
        cname:
          type: string
          description: The canonical name for this CNAME record.
      description: A CNAME record.
    SoaRecord:
      type: object
      properties:
        host:
          type: string
          description: The domain name of the authoritative name server for this SOA record.
        email:
          type: string
          description: The email contact for this SOA record.
        serialNumber:
          type: integer
          format: int64
          description: The serial number for this SOA record.
        refreshTime:
          type: integer
          format: int64
          description: The refresh value for this SOA record.
        retryTime:
          type: integer
          format: int64
          description: The retry time for this SOA record.
        expireTime:
          type: integer
          format: int64
          description: The expire time for this SOA record.
        minimumTTL:
          type: integer
          format: int64
          x-ms-client-name: minimumTtl
          description: The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
      description: An SOA record.
    CaaRecord:
      type: object
      properties:
        flags:
          type: integer
          format: int32
          description: The flags for this CAA record as an integer between 0 and 255.
        tag:
          type: string
          description: The tag for this CAA record.
        value:
          type: string
          description: The value for this CAA record.
      description: A CAA record.
    DigestAlgorithmType:
      type: integer
      format: int32
      description: 'The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml'
    SecurityAlgorithmType:
      type: integer
      format: int32
      description: 'The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml'
    Digest:
      type: object
      properties:
        algorithmType:
          $ref: '#/components/schemas/DigestAlgorithmType'
        value:
          type: string
          description: The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
      description: A digest.
    DsRecord:
      type: object
      properties:
        keyTag:
          type: integer
          format: int32
          description: The key tag value is used to determine which DNSKEY Resource Record is used for signature verification.
        algorithm:
          $ref: '#/components/schemas/SecurityAlgorithmType'
        digest:
          $ref: '#/components/schemas/Digest'
          description: The digest entity.
      description: 'A DS record. For more information about the DS record format, see RFC 4034: https://www.rfc-editor.org/rfc/rfc4034'
    TlsaRecord:
      type: object
      properties:
        usage:
          type: integer
          format: int32
          description: The usage specifies the provided association that will be used to match the certificate presented in the TLS handshake.
        selector:
          type: integer
          format: int32
          description: The selector specifies which part of the TLS certificate presented by the server will be matched against the association data.
        matchingType:
          type: integer
          format: int32
          description: The matching type specifies how the certificate association is presented.
        certAssociationData:
          type: string
          description: This specifies the certificate association data to be matched.
      description: 'A TLSA record. For more information about the TLSA record format, see RFC 6698: https://www.rfc-editor.org/rfc/rfc6698'
    NaptrRecord:
      type: object
      properties:
        order:
          type: integer
          format: int32
          description: 'The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The ordering is from lowest to highest. Valid values: 0-65535.'
        preference:
          type: integer
          format: int32
          description: 'The preference specifies the order in which NAPTR records with equal ''order'' values should be processed, low numbers being processed before high numbers. Valid values: 0-65535.'
        flags:
          type: string
          description: The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters "A", "P", "S", and "U", and the empty string, "". Enclose Flags in quotation marks.
        services:
          type: string
          description: The services specific to DDDS applications. Enclose Services in quotation marks.
        regexp:
          type: string
          description: 'The regular expression that the DDDS application uses to convert an input value into an output value. For example: an IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose the regular expression in quotation marks. Specify either a value for ''regexp'' or a value for ''replacement''.'
        replacement:
          type: string
          description: The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'.
      description: 'A NAPTR record. For more information about the NAPTR record format, see RFC 3403: https://www.rfc-editor.org/rfc/rfc3403'
    RecordSetProperties:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: The metadata attached to the record set.
        TTL:
          type: integer
          format: int64
          description: The TTL (time-to-live) of the records in the record set.
        fqdn:
          type: string
          description: Fully qualified domain name of the record set.
          readOnly: true
        provisioningState:
          type: string
          description: provisioning State of the record set.
          readOnly: true
        targetResource:
          $ref: '#/components/schemas/SubResource'
          description: A reference to an azure resource from where the dns resource value is taken.
        trafficManagementProfile:
          $ref: '#/components/schemas/SubResource'
          description: A reference to an azure traffic manager profile resource from where the dns resource value is taken.
        ARecords:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ARecord'
          description: The list of A records in the record set.
        AAAARecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: AaaaRecords
          items:
            $ref: '#/components/schemas/AaaaRecord'
          description: The list of AAAA records in the record set.
        MXRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: MxRecords
          items:
            $ref: '#/components/schemas/MxRecord'
          description: The list of MX records in the record set.
        NSRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: NsRecords
          items:
            $ref: '#/components/schemas/NsRecord'
          description: The list of NS records in the record set.
        PTRRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: PtrRecords
          items:
            $ref: '#/components/schemas/PtrRecord'
          description: The list of PTR records in the record set.
        SRVRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: SrvRecords
          items:
            $ref: '#/components/schemas/SrvRecord'
          description: The list of SRV records in the record set.
        TXTRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: TxtRecords
          items:
            $ref: '#/components/schemas/TxtRecord'
          description: The list of TXT records in the record set.
        CNAMERecord:
          $ref: '#/components/schemas/CnameRecord'
          x-ms-client-name: CnameRecord
          description: The CNAME record in the  record set.
        SOARecord:
          $ref: '#/components/schemas/SoaRecord'
          x-ms-client-name: SoaRecord
          description: The SOA record in the record set.
        caaRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: CaaRecords
          items:
            $ref: '#/components/schemas/CaaRecord'
          description: The list of CAA records in the record set.
        DSRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: DsRecords
          items:
            $ref: '#/components/schemas/DsRecord'
          description: The list of DS records in the record set.
        TLSARecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: TlsaRecords
          items:
            $ref: '#/components/schemas/TlsaRecord'
          description: The list of TLSA records in the record set.
        NAPTRRecords:
          type: array
          x-ms-identifiers: []
          x-ms-client-name: NaptrRecords
          items:
            $ref: '#/components/schemas/NaptrRecord'
          description: The list of NAPTR records in the record set.
      description: Represents the properties of the records in the record set.
    RecordSet:
      x-ms-azure-resource: true
      description: Describes a DNS record set (a collection of DNS records with the same name and type).
      properties:
        id:
          type: string
          description: The ID of the record set.
          readOnly: true
        name:
          type: string
          description: The name of the record set.
          readOnly: true
        type:
          type: string
          description: The type of the record set.
          readOnly: true
        etag:
          type: string
          description: The etag of the record set.
        properties:
          $ref: '#/components/schemas/RecordSetProperties'
          x-ms-client-flatten: true
          description: The properties of the record set.
      type: object
    RecordSetUpdateParameters:
      type: object
      properties:
        RecordSet:
          $ref: '#/components/schemas/RecordSet'
          description: Specifies information about the record set being updated.
      description: Parameters supplied to update a record set.
    RecordSetListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RecordSet'
          description: Information about the record sets in the response.
        nextLink:
          type: string
          description: The continuation token for the next page of results.
          readOnly: true
      description: The response to a record set List operation.
    DelegationSignerInfo:
      type: object
      properties:
        digestAlgorithmType:
          $ref: '#/components/schemas/DigestAlgorithmType'
          readOnly: true
        digestValue:
          type: string
          description: The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
          readOnly: true
        record:
          type: string
          description: The record represents a delegation signer (DS) record.
          readOnly: true
      description: The delegation signer information.
    SigningKey:
      type: object
      properties:
        delegationSignerInfo:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/DelegationSignerInfo'
          description: The delegation signer information.
          readOnly: true
        flags:
          type: integer
          format: int32
          description: The flags specifies how the key is used.
          readOnly: true
        keyTag:
          type: integer
          format: int32
          description: The key tag value of the DNSKEY Resource Record.
          readOnly: true
        protocol:
          type: integer
          format: int32
          description: The protocol value. The value is always 3.
          readOnly: true
        publicKey:
          type: string
          description: The public key, represented as a Base64 encoding.
          readOnly: true
        securityAlgorithmType:
          $ref: '#/components/schemas/SecurityAlgorithmType'
          readOnly: true
      description: Represents the signing key.
    DnssecProperties:
      type: object
      properties:
        provisioningState:
          type: string
          description: Provisioning State of the DNSSEC configuration.
          readOnly: true
        signingKeys:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/SigningKey'
          description: The list of signing keys.
          readOnly: true
      description: Represents the DNSSEC properties.
    DnssecConfig:
      x-ms-azure-resource: true
      description: Represents the DNSSEC configuration.
      properties:
        properties:
          $ref: '#/components/schemas/DnssecProperties'
          x-ms-client-flatten: true
          description: The DNSSEC properties.
          readOnly: true
        id:
          type: string
          description: The ID of the DNSSEC configuration.
          readOnly: true
        name:
          type: string
          description: The name of the DNSSEC configuration.
          readOnly: true
        type:
          type: string
          description: The type of the DNSSEC configuration.
          readOnly: true
        etag:
          type: string
          description: The etag of the DNSSEC configuration.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
      type: object
    DnssecConfigListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DnssecConfig'
          description: Information about the DNSSEC configurations in the response.
        nextLink:
          type: string
          description: The continuation token for the next page of results.
          readOnly: true
      description: The response to a List DNSSEC configurations operation.
    ZoneProperties:
      type: object
      properties:
        maxNumberOfRecordSets:
          type: integer
          format: int64
          description: The maximum number of record sets that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.
          readOnly: true
        maxNumberOfRecordsPerRecordSet:
          type: integer
          format: int64
          description: The maximum number of records per record set that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.
          readOnly: true
        numberOfRecordSets:
          type: integer
          format: int64
          description: The current number of record sets in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.
          readOnly: true
        nameServers:
          type: array
          x-ms-identifiers: []
          items:
            type: string
          description: The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
          readOnly: true
        zoneType:
          type: string
          enum:
            - Public
            - Private
          x-ms-enum:
            name: ZoneType
            modelAsString: false
          default: Public
          description: The type of this DNS zone (Public or Private).
        registrationVirtualNetworks:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/SubResource'
          description: A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
        resolutionVirtualNetworks:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/SubResource'
          description: A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
        signingKeys:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/SigningKey'
          description: The list of signing keys.
          readOnly: true
      description: Represents the properties of the zone.
    Zone:
      description: Describes a DNS zone.
      properties:
        etag:
          type: string
          description: The etag of the zone.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ZoneProperties'
          description: The properties of the zone.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ZoneUpdate:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Describes a request to update a DNS zone.
    ZoneListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
          description: Information about the DNS zones.
        nextLink:
          type: string
          description: The continuation token for the next page of results.
          readOnly: true
      description: The response to a Zone List or ListAll operation.
    DnsResourceReferenceRequest:
      description: Represents the properties of the Dns Resource Reference Request.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DnsResourceReferenceRequestProperties'
          description: The properties of the Resource Reference Request.
      type: object
    DnsResourceReferenceRequestProperties:
      type: object
      properties:
        targetResources:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A list of references to azure resources for which referencing dns records need to be queried.
      description: Represents the properties of the Dns Resource Reference Request.
    DnsResourceReferenceResult:
      description: Represents the properties of the Dns Resource Reference Result.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DnsResourceReferenceResultProperties'
          description: The result of dns resource reference request. Returns a list of dns resource references for each of the azure resource in the request.
      type: object
    DnsResourceReferenceResultProperties:
      type: object
      properties:
        dnsResourceReferences:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/DnsResourceReference'
          description: The result of dns resource reference request. A list of dns resource references for each of the azure resource in the request
      description: The result of dns resource reference request. Returns a list of dns resource references for each of the azure resource in the request.
    DnsResourceReference:
      type: object
      properties:
        dnsResources:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: 'A list of dns Records '
        targetResource:
          $ref: '#/components/schemas/SubResource'
          description: A reference to an azure resource from where the dns resource value is taken.
      description: Represents a single Azure resource and its referencing DNS records.
    SubResource:
      type: object
      properties:
        id:
          type: string
          description: Resource Id.
      description: A reference to a another resource
    CloudError:
      type: object
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: Cloud error body.
      description: An error response from the service.
    CloudErrorBody:
      type: object
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          description: A list of additional details about the error.
      description: An error response from the service.
  x-stackQL-resources:
    dnssec_configs:
      id: azure.dns.dnssec_configs
      name: dnssec_configs
      title: dnssec_configs
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1dnssecConfigs~1default?api-version=2023-07-01-preview/put'
            operationId: DnssecConfigs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnssecConfig
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1dnssecConfigs~1default?api-version=2023-07-01-preview/delete'
            operationId: DnssecConfigs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1dnssecConfigs~1default?api-version=2023-07-01-preview/get'
            operationId: DnssecConfigs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnssecConfig
        list_by_dns_zone:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1dnssecConfigs?api-version=2023-07-01-preview/get'
            operationId: DnssecConfigs_ListByDnsZone
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnssecConfigListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dnssec_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/dnssec_configs/methods/list_by_dns_zone'
        insert:
          - $ref: '#/components/x-stackQL-resources/dnssec_configs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dnssec_configs/methods/delete'
    record_sets:
      id: azure.dns.record_sets
      name: record_sets
      title: record_sets
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1{recordType}~1{relativeRecordSetName}?api-version=2023-07-01-preview/patch'
            operationId: RecordSets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecordSet
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1{recordType}~1{relativeRecordSetName}?api-version=2023-07-01-preview/put'
            operationId: RecordSets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecordSet
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1{recordType}~1{relativeRecordSetName}?api-version=2023-07-01-preview/delete'
            operationId: RecordSets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1{recordType}~1{relativeRecordSetName}?api-version=2023-07-01-preview/get'
            operationId: RecordSets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecordSet
        list_by_type:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1{recordType}?api-version=2023-07-01-preview/get'
            operationId: RecordSets_ListByType
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecordSetListResult
            objectKey: $.value
        list_by_dns_zone:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1recordsets?api-version=2023-07-01-preview/get'
            operationId: RecordSets_ListByDnsZone
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecordSetListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/record_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/record_sets/methods/list_by_type'
          - $ref: '#/components/x-stackQL-resources/record_sets/methods/list_by_dns_zone'
        insert:
          - $ref: '#/components/x-stackQL-resources/record_sets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/record_sets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/record_sets/methods/delete'
    record_sets_all_by_dns_zones:
      id: azure.dns.record_sets_all_by_dns_zones
      name: record_sets_all_by_dns_zones
      title: record_sets_all_by_dns_zones
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}~1all?api-version=2023-07-01-preview/get'
            operationId: RecordSetsAllByDnsZone_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RecordSetListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/record_sets_all_by_dns_zones/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    zones:
      id: azure.dns.zones
      name: zones
      title: zones
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}?api-version=2023-07-01-preview/put'
            operationId: Zones_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Zone
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}?api-version=2023-07-01-preview/delete'
            operationId: Zones_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}?api-version=2023-07-01-preview/get'
            operationId: Zones_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Zone
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones~1{zoneName}?api-version=2023-07-01-preview/patch'
            operationId: Zones_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Zone
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsZones?api-version=2023-07-01-preview/get'
            operationId: Zones_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ZoneListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1dnszones?api-version=2023-07-01-preview/get'
            operationId: Zones_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ZoneListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones/methods/get'
          - $ref: '#/components/x-stackQL-resources/zones/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/zones/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/zones/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones/methods/delete'
    resource_references:
      id: azure.dns.resource_references
      name: resource_references
      title: resource_references
      methods:
        get_by_target_resources:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1getDnsResourceReference?api-version=2023-07-01-preview/post'
            operationId: DnsResourceReference_GetByTargetResources
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsResourceReferenceResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_references/methods/get_by_target_resources'
        insert: []
        update: []
        replace: []
        delete: []
    vw_dnssec_configs:
      id: azure.dns.vw_dnssec_configs
      name: vw_dnssec_configs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.signingKeys') as "signing_keys",
              subscriptionId,
              resourceGroupName,
              zoneName
              FROM azure.dns.dnssec_configs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND zoneName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.signingKeys') as "signing_keys",
                subscriptionId,
                resourceGroupName,
                zoneName
                FROM azure.dns.dnssec_configs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND zoneName = 'replace-me';
    vw_record_sets:
      id: azure.dns.vw_record_sets
      name: vw_record_sets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.TTL') as "ttl",
              JSON_EXTRACT(properties, '$.fqdn') as "fqdn",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.targetResource') as "target_resource",
              JSON_EXTRACT(properties, '$.trafficManagementProfile') as "traffic_management_profile",
              JSON_EXTRACT(properties, '$.ARecords') as "a_records",
              JSON_EXTRACT(properties, '$.AAAARecords') as "aaaa_records",
              JSON_EXTRACT(properties, '$.MXRecords') as "mx_records",
              JSON_EXTRACT(properties, '$.NSRecords') as "ns_records",
              JSON_EXTRACT(properties, '$.PTRRecords') as "ptr_records",
              JSON_EXTRACT(properties, '$.SRVRecords') as "srv_records",
              JSON_EXTRACT(properties, '$.TXTRecords') as "txt_records",
              JSON_EXTRACT(properties, '$.CNAMERecord') as "cname_record",
              JSON_EXTRACT(properties, '$.SOARecord') as "soa_record",
              JSON_EXTRACT(properties, '$.caaRecords') as "caa_records",
              JSON_EXTRACT(properties, '$.DSRecords') as "ds_records",
              JSON_EXTRACT(properties, '$.TLSARecords') as "tlsa_records",
              JSON_EXTRACT(properties, '$.NAPTRRecords') as "naptr_records",
              subscriptionId,
              resourceGroupName,
              zoneName,
              recordType,
              relativeRecordSetName
              FROM azure.dns.record_sets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND zoneName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.TTL') as "ttl",
                json_extract_path_text(properties, '$.fqdn') as "fqdn",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.targetResource') as "target_resource",
                json_extract_path_text(properties, '$.trafficManagementProfile') as "traffic_management_profile",
                json_extract_path_text(properties, '$.ARecords') as "a_records",
                json_extract_path_text(properties, '$.AAAARecords') as "aaaa_records",
                json_extract_path_text(properties, '$.MXRecords') as "mx_records",
                json_extract_path_text(properties, '$.NSRecords') as "ns_records",
                json_extract_path_text(properties, '$.PTRRecords') as "ptr_records",
                json_extract_path_text(properties, '$.SRVRecords') as "srv_records",
                json_extract_path_text(properties, '$.TXTRecords') as "txt_records",
                json_extract_path_text(properties, '$.CNAMERecord') as "cname_record",
                json_extract_path_text(properties, '$.SOARecord') as "soa_record",
                json_extract_path_text(properties, '$.caaRecords') as "caa_records",
                json_extract_path_text(properties, '$.DSRecords') as "ds_records",
                json_extract_path_text(properties, '$.TLSARecords') as "tlsa_records",
                json_extract_path_text(properties, '$.NAPTRRecords') as "naptr_records",
                subscriptionId,
                resourceGroupName,
                zoneName,
                recordType,
                relativeRecordSetName
                FROM azure.dns.record_sets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND zoneName = 'replace-me';
    vw_zones:
      id: azure.dns.vw_zones
      name: vw_zones
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              etag as etag,
              systemData as system_data,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.maxNumberOfRecordSets') as "max_number_of_record_sets",
              JSON_EXTRACT(properties, '$.maxNumberOfRecordsPerRecordSet') as "max_number_of_records_per_record_set",
              JSON_EXTRACT(properties, '$.numberOfRecordSets') as "number_of_record_sets",
              JSON_EXTRACT(properties, '$.nameServers') as "name_servers",
              JSON_EXTRACT(properties, '$.zoneType') as "zone_type",
              JSON_EXTRACT(properties, '$.registrationVirtualNetworks') as "registration_virtual_networks",
              JSON_EXTRACT(properties, '$.resolutionVirtualNetworks') as "resolution_virtual_networks",
              JSON_EXTRACT(properties, '$.signingKeys') as "signing_keys",
              subscriptionId,
              resourceGroupName,
              zoneName
              FROM azure.dns.zones
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                etag as etag,
                systemData as system_data,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.maxNumberOfRecordSets') as "max_number_of_record_sets",
                json_extract_path_text(properties, '$.maxNumberOfRecordsPerRecordSet') as "max_number_of_records_per_record_set",
                json_extract_path_text(properties, '$.numberOfRecordSets') as "number_of_record_sets",
                json_extract_path_text(properties, '$.nameServers') as "name_servers",
                json_extract_path_text(properties, '$.zoneType') as "zone_type",
                json_extract_path_text(properties, '$.registrationVirtualNetworks') as "registration_virtual_networks",
                json_extract_path_text(properties, '$.resolutionVirtualNetworks') as "resolution_virtual_networks",
                json_extract_path_text(properties, '$.signingKeys') as "signing_keys",
                subscriptionId,
                resourceGroupName,
                zoneName
                FROM azure.dns.zones
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/dnssecConfigs/default?api-version=2023-07-01-preview:
    put:
      tags:
        - DnssecConfigs
      operationId: DnssecConfigs_CreateOrUpdate
      description: Creates or updates the DNSSEC configuration on a DNS zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - name: If-Match
          in: header
          description: The etag of the DNSSEC configuration. Omit this value to always overwrite the DNSSEC configuration. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow this DNSSEC configuration to be created, but to prevent updating existing DNSSEC configuration. Other values will be ignored.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The DNSSEC configuration has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnssecConfig'
        '201':
          description: The DNSSEC configuration has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnssecConfig'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - DnssecConfigs
      operationId: DnssecConfigs_Delete
      description: Deletes the DNSSEC configuration on a DNS zone. This operation cannot be undone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - name: If-Match
          in: header
          description: The etag of this DNSSEC configuration. Omit this value to always delete the DNSSEC configuration. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The DNSSEC configuration has been deleted.
        '202':
          description: The DNSSEC configuration delete operation has been accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
        '204':
          description: The DNSSEC configuration was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DnssecConfigs
      operationId: DnssecConfigs_Get
      description: Gets the DNSSEC configuration.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnssecConfig'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/dnssecConfigs?api-version=2023-07-01-preview:
    get:
      tags:
        - DnssecConfigs
      operationId: DnssecConfigs_ListByDnsZone
      description: Lists the DNSSEC configurations in a DNS zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnssecConfigListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}?api-version=2023-07-01-preview:
    patch:
      tags:
        - RecordSets
      operationId: RecordSets_Update
      description: Updates a record set within a DNS zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/RelativeRecordSetNameParameter'
        - $ref: '#/components/parameters/RecordTypeParameter'
        - name: If-Match
          in: header
          description: The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordSet'
      responses:
        '200':
          description: The record set has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordSet'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - RecordSets
      operationId: RecordSets_CreateOrUpdate
      description: Creates or updates a record set within a DNS zone. Record sets of type SOA can be updated but not created (they are created when the DNS zone is created).
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/RelativeRecordSetNameParameter'
        - $ref: '#/components/parameters/RecordTypeParameter'
        - name: If-Match
          in: header
          description: The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordSet'
      responses:
        '200':
          description: The record set has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordSet'
        '201':
          description: The record set has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordSet'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - RecordSets
      operationId: RecordSets_Delete
      description: Deletes a record set from a DNS zone. This operation cannot be undone. Record sets of type SOA cannot be deleted (they are deleted when the DNS zone is deleted).
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/RelativeRecordSetNameParameter'
        - $ref: '#/components/parameters/RecordTypeParameter'
        - name: If-Match
          in: header
          description: The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The record set has been deleted.
        '204':
          description: The record set was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - RecordSets
      operationId: RecordSets_Get
      description: Gets a record set.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/RelativeRecordSetNameParameter'
        - $ref: '#/components/parameters/RecordTypeParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordSet'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}?api-version=2023-07-01-preview:
    get:
      tags:
        - RecordSets
      operationId: RecordSets_ListByType
      description: Lists the record sets of a specified type in a DNS zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/RecordTypeParameter'
        - name: $top
          in: query
          description: The maximum number of record sets to return. If not specified, returns up to 100 record sets.
          required: false
          schema:
            format: int32
            type: integer
        - name: $recordsetnamesuffix
          in: query
          description: The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .<recordSetNameSuffix>
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordSetListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/recordsets?api-version=2023-07-01-preview:
    get:
      tags:
        - RecordSets
      operationId: RecordSets_ListByDnsZone
      description: Lists all record sets in a DNS zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - name: $top
          in: query
          description: The maximum number of record sets to return. If not specified, returns up to 100 record sets.
          required: false
          schema:
            format: int32
            type: integer
        - name: $recordsetnamesuffix
          in: query
          description: The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .<recordSetNameSuffix>
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordSetListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/all?api-version=2023-07-01-preview:
    get:
      tags:
        - RecordSets
      operationId: RecordSetsAllByDnsZone_List
      description: Lists all record sets in a DNS zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - name: $top
          in: query
          description: The maximum number of record sets to return. If not specified, returns up to 100 record sets.
          required: false
          schema:
            format: int32
            type: integer
        - name: $recordsetnamesuffix
          in: query
          description: The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .<recordSetNameSuffix>
          required: false
          x-ms-client-name: recordSetNameSuffix
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordSetListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: RecordSets_ListAllByDnsZone
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}?api-version=2023-07-01-preview:
    put:
      tags:
        - Zones
      operationId: Zones_CreateOrUpdate
      description: Creates or updates a DNS zone. Does not modify DNS records within the zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - name: If-Match
          in: header
          description: The etag of the DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new DNS zone to be created, but to prevent updating an existing zone. Other values will be ignored.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
      responses:
        '200':
          description: The DNS zone has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        '201':
          description: The DNS zone has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Zones
      operationId: Zones_Delete
      description: 'Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone.'
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - name: If-Match
          in: header
          description: The etag of the DNS zone. Omit this value to always delete the current zone. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The DNS zone has been deleted.
        '202':
          description: The DNS zone delete operation has been accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
        '204':
          description: The DNS zone was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Zones
      operationId: Zones_Get
      description: Gets a DNS zone. Retrieves the zone properties, but not the record sets within the zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Zones
      operationId: Zones_Update
      description: Updates a DNS zone. Does not modify DNS records within the zone.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ZoneNameParameter'
        - name: If-Match
          in: header
          description: The etag of the DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneUpdate'
      responses:
        '200':
          description: The DNS zone has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones?api-version=2023-07-01-preview:
    get:
      tags:
        - Zones
      operationId: Zones_ListByResourceGroup
      description: Lists the DNS zones within a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $top
          in: query
          description: The maximum number of record sets to return. If not specified, returns up to 100 record sets.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/getDnsResourceReference?api-version=2023-07-01-preview:
    post:
      operationId: DnsResourceReference_GetByTargetResources
      description: Returns the DNS records specified by the referencing targetResourceIds.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Properties for dns resource reference request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsResourceReferenceRequest'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsResourceReferenceResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/dnszones?api-version=2023-07-01-preview:
    get:
      tags:
        - Zones
      operationId: Zones_List
      description: Lists the DNS zones in all resource groups in a subscription.
      parameters:
        - name: $top
          in: query
          description: The maximum number of DNS zones to return. If not specified, returns up to 100 zones.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
