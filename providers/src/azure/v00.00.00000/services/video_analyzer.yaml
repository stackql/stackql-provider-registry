openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Video Analyzer
  description: Azure Video Analyzer resource provider API definition.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    AzureVideoAnalyzerAccountName:
      name: accountName
      in: path
      description: The Azure Video Analyzer account name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    PipelineTopologyProperties:
      properties:
        description:
          type: string
          description: An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here.
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDeclaration'
          x-ms-identifiers:
            - name
          description: List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of "${PARAMETER_NAME}" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline.
        sources:
          type: array
          items:
            $ref: '#/components/schemas/SourceNodeBase'
          x-ms-identifiers:
            - name
          description: List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline.
        processors:
          type: array
          items:
            $ref: '#/components/schemas/ProcessorNodeBase'
          x-ms-identifiers:
            - name
          description: List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed.
        sinks:
          type: array
          items:
            $ref: '#/components/schemas/SinkNodeBase'
          x-ms-identifiers:
            - name
          description: List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported.
      type: object
      required:
        - sources
        - sinks
      description: Describes the properties of a pipeline topology.
    PipelineTopologyPropertiesUpdate:
      properties:
        description:
          type: string
          description: An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here.
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDeclaration'
          x-ms-identifiers:
            - name
          description: List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of "${PARAMETER_NAME}" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline.
        sources:
          type: array
          items:
            $ref: '#/components/schemas/SourceNodeBase'
          x-ms-identifiers:
            - name
          description: List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline.
        processors:
          type: array
          items:
            $ref: '#/components/schemas/ProcessorNodeBase'
          x-ms-identifiers:
            - name
          description: List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed.
        sinks:
          type: array
          items:
            $ref: '#/components/schemas/SinkNodeBase'
          x-ms-identifiers:
            - name
          description: List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported.
      type: object
      description: Describes the properties of a pipeline topology.
    ParameterDeclaration:
      properties:
        name:
          type: string
          description: Name of the parameter.
        type:
          type: string
          enum:
            - String
            - SecretString
            - Int
            - Double
            - Bool
          x-ms-enum:
            name: ParameterType
            values:
              - value: String
                description: The parameter's value is a string.
              - value: SecretString
                description: The parameter's value is a string that holds sensitive information.
              - value: Int
                description: The parameter's value is a 32-bit signed integer.
              - value: Double
                description: The parameter's value is a 64-bit double-precision floating point.
              - value: Bool
                description: The parameter's value is a boolean value that is either true or false.
            modelAsString: true
          description: Type of the parameter.
        description:
          type: string
          description: Description of the parameter.
        default:
          type: string
          description: The default value for the parameter to be used if the pipeline does not specify a value.
      type: object
      required:
        - name
        - type
      description: Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines.
    NodeBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        name:
          type: string
          description: Node name. Must be unique within the topology.
      type: object
      required:
        - '@type'
        - name
      description: Base class for nodes.
    SourceNodeBase:
      discriminator:
        propertyName: '@type'
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.SourceNodeBase'
      required:
        - '@type'
      description: Base class for topology source nodes.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        name:
          type: string
          description: Node name. Must be unique within the topology.
      type: object
    ProcessorNodeBase:
      discriminator:
        propertyName: '@type'
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.ProcessorNodeBase'
      required:
        - '@type'
        - inputs
      description: Base class for topology processor nodes.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        name:
          type: string
          description: Node name. Must be unique within the topology.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/NodeInput'
          x-ms-identifiers:
            - nodeName
          description: An array of upstream node references within the topology to be used as inputs for this node.
      type: object
    SinkNodeBase:
      discriminator:
        propertyName: '@type'
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.SinkNodeBase'
      required:
        - '@type'
        - inputs
      description: Base class for topology sink nodes.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        name:
          type: string
          description: Node name. Must be unique within the topology.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/NodeInput'
          x-ms-identifiers:
            - nodeName
          description: An array of upstream node references within the topology to be used as inputs for this node.
      type: object
    NodeInput:
      properties:
        nodeName:
          type: string
          description: The name of the upstream node in the pipeline which output is used as input of the current node.
      type: object
      required:
        - nodeName
      description: Describes an input signal to be used on a pipeline node.
    RtspSource:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.RtspSource'
      required:
        - endpoint
      description: RTSP source allows for media from an RTSP camera or generic RTSP server to be ingested into a pipeline.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        transport:
          type: string
          enum:
            - Http
            - Tcp
          x-ms-enum:
            name: RtspTransport
            values:
              - value: Http
                description: HTTP transport. RTSP messages are exchanged over long running HTTP requests and RTP packets are interleaved within the HTTP channel.
              - value: Tcp
                description: TCP transport. RTSP is used directly over TCP and RTP packets are interleaved within the TCP channel.
            modelAsString: true
          description: 'Network transport utilized by the RTSP and RTP exchange: TCP or HTTP. When using TCP, the RTP packets are interleaved on the TCP RTSP connection. When using HTTP, the RTSP messages are exchanged through long lived HTTP connections, and the RTP packages are interleaved in the HTTP connections alongside the RTSP messages.'
        endpoint:
          $ref: '#/components/schemas/EndpointBase'
          description: RTSP endpoint information for Video Analyzer to connect to. This contains the required information for Video Analyzer to connect to RTSP cameras and/or generic RTSP servers.
      type: object
    EndpointBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        credentials:
          $ref: '#/components/schemas/CredentialsBase'
          description: Credentials to be presented to the endpoint.
        url:
          type: string
          description: The endpoint URL for Video Analyzer to connect to.
        tunnel:
          $ref: '#/components/schemas/TunnelBase'
          description: Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.
      type: object
      required:
        - '@type'
        - credentials
        - url
      description: Base class for endpoints.
    CredentialsBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@type'
      description: Base class for credential objects.
    TunnelBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@type'
      description: Base class for tunnel objects.
    UsernamePasswordCredentials:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.UsernamePasswordCredentials'
      required:
        - username
        - password
      description: Username and password credentials.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        username:
          type: string
          description: Username to be presented as part of the credentials.
        password:
          type: string
          description: Password to be presented as part of the credentials. It is recommended that this value is parameterized as a secret string in order to prevent this value to be returned as part of the resource on API requests.
      type: object
    SecureIotDeviceRemoteTunnel:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.SecureIotDeviceRemoteTunnel'
      required:
        - iotHubName
        - deviceId
      description: A remote tunnel securely established using IoT Hub device information.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        iotHubName:
          type: string
          description: Name of the IoT Hub.
        deviceId:
          type: string
          description: The IoT device id to use when establishing the remote tunnel. This string is case-sensitive.
      type: object
    UnsecuredEndpoint:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.UnsecuredEndpoint'
      description: Unsecured endpoint describes an endpoint that the pipeline can connect to over clear transport (no encryption in transit).
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        credentials:
          $ref: '#/components/schemas/CredentialsBase'
          description: Credentials to be presented to the endpoint.
        url:
          type: string
          description: The endpoint URL for Video Analyzer to connect to.
        tunnel:
          $ref: '#/components/schemas/TunnelBase'
          description: Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.
      type: object
    TlsEndpoint:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.TlsEndpoint'
      description: TLS endpoint describes an endpoint that the pipeline can connect to over TLS transport (data is encrypted in transit).
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        credentials:
          $ref: '#/components/schemas/CredentialsBase'
          description: Credentials to be presented to the endpoint.
        url:
          type: string
          description: The endpoint URL for Video Analyzer to connect to.
        tunnel:
          $ref: '#/components/schemas/TunnelBase'
          description: Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.
        trustedCertificates:
          $ref: '#/components/schemas/CertificateSource'
          description: List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used.
        validationOptions:
          $ref: '#/components/schemas/TlsValidationOptions'
          description: Validation options to use when authenticating a TLS connection. By default, strict validation is used.
      type: object
    CertificateSource:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@type'
      description: Base class for certificate sources.
    TlsValidationOptions:
      properties:
        ignoreHostname:
          type: string
          description: When set to 'true' causes the certificate subject name validation to be skipped. Default is 'false'.
        ignoreSignature:
          type: string
          description: When set to 'true' causes the certificate chain trust validation to be skipped. Default is 'false'.
      type: object
      description: Options for controlling the validation of TLS endpoints.
    PemCertificateList:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.PemCertificateList'
      required:
        - certificates
      description: A list of PEM formatted certificates.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        certificates:
          type: array
          items:
            type: string
          description: PEM formatted public certificates. One certificate per entry.
      type: object
    VideoSource:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.VideoSource'
      required:
        - videoName
        - timeSequences
      description: Video source allows for content from a Video Analyzer video resource to be ingested into a pipeline. Currently supported only with batch pipelines.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        videoName:
          type: string
          description: Name of the Video Analyzer video resource to be used as the source.
        timeSequences:
          $ref: '#/components/schemas/TimeSequenceBase'
          description: Describes a sequence of datetime ranges. The video source only picks up recorded media within these ranges.
      type: object
    TimeSequenceBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@type'
      description: A sequence of datetime ranges as a string.
    VideoSequenceAbsoluteTimeMarkers:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.VideoSequenceAbsoluteTimeMarkers'
      required:
        - ranges
      description: A sequence of absolute datetime ranges as a string. The datetime values should follow IS08601, and the sum of the ranges should add up to 24 hours or less. Currently, there can be only one range specified in the sequence.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        ranges:
          type: string
          description: 'The sequence of datetime ranges. Example: ''[["2021-10-05T03:30:00Z", "2021-10-05T03:40:00Z"]]''.'
      type: object
    EncoderProcessor:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.EncoderProcessor'
      required:
        - preset
      description: Encoder processor allows for encoding of the input content. For example, it can used to change the resolution from 4K to 1280x720.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/NodeInput'
          x-ms-identifiers:
            - nodeName
          description: An array of upstream node references within the topology to be used as inputs for this node.
        preset:
          $ref: '#/components/schemas/EncoderPresetBase'
          description: The encoder preset, which defines the recipe or instructions on how the input content should be processed.
      type: object
    EncoderPresetBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@type'
      description: Base type for all encoder presets, which define the recipe or instructions on how the input content should be processed.
    EncoderSystemPreset:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.EncoderSystemPreset'
      required:
        - name
      description: Describes a built-in preset for encoding the input content using the encoder processor.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        name:
          type: string
          enum:
            - SingleLayer_540p_H264_AAC
            - SingleLayer_720p_H264_AAC
            - SingleLayer_1080p_H264_AAC
            - SingleLayer_2160p_H264_AAC
          x-ms-enum:
            name: EncoderSystemPresetType
            values:
              - value: SingleLayer_540p_H264_AAC
                description: Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 540 pixels, and at a maximum bitrate of 2000 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 96 Kbps
              - value: SingleLayer_720p_H264_AAC
                description: Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 720 pixels, and at a maximum bitrate of 3500 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 96 Kbps
              - value: SingleLayer_1080p_H264_AAC
                description: Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 1080 pixels, and at a maximum bitrate of 6000 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 128 Kbps
              - value: SingleLayer_2160p_H264_AAC
                description: Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 2160 pixels, and at a maximum bitrate of 16000 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 128 Kbps
            modelAsString: true
          description: Name of the built-in encoding preset.
      type: object
    EncoderCustomPreset:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.EncoderCustomPreset'
      description: Describes a custom preset for encoding the input content using the encoder processor.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        audioEncoder:
          $ref: '#/components/schemas/AudioEncoderBase'
          description: Describes a custom preset for encoding audio.
        videoEncoder:
          $ref: '#/components/schemas/VideoEncoderBase'
          description: Describes a custom preset for encoding video.
      type: object
    AudioEncoderBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        bitrateKbps:
          type: string
          description: Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used.
      type: object
      required:
        - '@type'
      description: Base type for all audio encoder presets, which define the recipe or instructions on how audio should be processed.
    VideoEncoderBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        bitrateKbps:
          type: string
          description: The maximum bitrate, in kilobits per second or Kbps, at which video should be encoded. If omitted, encoder sets it automatically to try and match the quality of the input video.
        frameRate:
          type: string
          description: The frame rate (in frames per second) of the encoded video. The value must be greater than zero, and less than or equal to 300. If omitted, the encoder uses the average frame rate of the input video.
        scale:
          $ref: '#/components/schemas/VideoScale'
          description: Describes the resolution of the encoded video. If omitted, the encoder uses the resolution of the input video.
      type: object
      required:
        - '@type'
      description: Base type for all video encoding presets, which define the recipe or instructions on how the input video should be processed.
    AudioEncoderAac:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.AudioEncoderAac'
      description: A custom preset for encoding audio with the AAC codec.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        bitrateKbps:
          type: string
          description: Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used.
      type: object
    VideoScale:
      properties:
        height:
          type: string
          description: The desired output video height.
        width:
          type: string
          description: The desired output video width.
        mode:
          type: string
          enum:
            - Pad
            - PreserveAspectRatio
            - Stretch
          x-ms-enum:
            name: VideoScaleMode
            values:
              - value: Pad
                description: Pads the video with black horizontal stripes (letterbox) or black vertical stripes (pillar-box) so the video is resized to the specified dimensions while not altering the content aspect ratio.
              - value: PreserveAspectRatio
                description: Preserves the same aspect ratio as the input video. If only one video dimension is provided, the second dimension is calculated based on the input video aspect ratio. When 2 dimensions are provided, the video is resized to fit the most constraining dimension, considering the input video size and aspect ratio.
              - value: Stretch
                description: Stretches the original video so it resized to the specified dimensions.
            modelAsString: true
          description: Describes the video scaling mode to be applied. Default mode is 'Pad'. If the mode is 'Pad' or 'Stretch' then both width and height must be specified. Else if the mode is 'PreserveAspectRatio' then only one of width or height need be provided.
      type: object
      description: The video scaling information.
    VideoEncoderH264:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.VideoEncoderH264'
      description: A custom preset for encoding video with the H.264 (AVC) codec.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        bitrateKbps:
          type: string
          description: The maximum bitrate, in kilobits per second or Kbps, at which video should be encoded. If omitted, encoder sets it automatically to try and match the quality of the input video.
        frameRate:
          type: string
          description: The frame rate (in frames per second) of the encoded video. The value must be greater than zero, and less than or equal to 300. If omitted, the encoder uses the average frame rate of the input video.
        scale:
          $ref: '#/components/schemas/VideoScale'
          description: Describes the resolution of the encoded video. If omitted, the encoder uses the resolution of the input video.
      type: object
    VideoSink:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.VideoSink'
      required:
        - videoName
      description: Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video resource. If archiving is enabled, this results in a video of type 'archive'. If used in a batch topology, this allows for video and audio to be stored as a file, and published via a video resource of type 'file'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/NodeInput'
          x-ms-identifiers:
            - nodeName
          description: An array of upstream node references within the topology to be used as inputs for this node.
        videoName:
          type: string
          description: 'Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and if disableArchive is set to true, then no content is archived.'
        videoCreationProperties:
          $ref: '#/components/schemas/VideoCreationProperties'
          description: Optional video properties to be used in case a new video resource needs to be created on the service.
        videoPublishingOptions:
          $ref: '#/components/schemas/VideoPublishingOptions'
          description: Options to change how the video sink publishes content via the video resource. This property is only allowed for topologies where "kind" is set to "live".
      type: object
    VideoCreationProperties:
      properties:
        title:
          type: string
          description: Optional title provided by the user. Value can be up to 256 characters long.
        description:
          type: string
          description: Optional description provided by the user. Value can be up to 2048 characters long.
        segmentLength:
          type: string
          description: Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where "kind" is set to "live".
        retentionPeriod:
          type: string
          description: Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. "P1D" equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where "kind" is set to "live".
      type: object
      description: Optional properties to be used in case a new video resource needs to be created on the service. These will not take effect if the video already exists.
    VideoPublishingOptions:
      properties:
        disableArchive:
          type: string
          description: When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only for low latency video streaming. Default is 'false'.  If set to 'true', then "disableRtspPublishing" must be set to 'false'.
        disableRtspPublishing:
          type: string
          description: When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example, when the topology is used only for archiving content. Default is 'false'.  If set to 'true', then "disableArchive" must be set to 'false'.
      type: object
      description: Optional flags used to change how video is published. These are only allowed for topologies where "kind" is set to "live".
    ParameterDefinition:
      properties:
        name:
          type: string
          description: Name of the parameter declared in the pipeline topology.
        value:
          type: string
          description: Parameter value to be applied on this specific pipeline.
      type: object
      required:
        - name
      description: Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information.
    PipelineTopology:
      required:
        - kind
        - sku
      description: "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
      properties:
        properties:
          $ref: '#/components/schemas/PipelineTopologyProperties'
          description: The resource properties.
          x-ms-client-flatten: true
        kind:
          type: string
          enum:
            - Live
            - Batch
          x-ms-enum:
            name: Kind
            values:
              - value: Live
                description: Live pipeline topology resource.
              - value: Batch
                description: Batch pipeline topology resource.
            modelAsString: true
          description: Topology kind.
        sku:
          $ref: '#/components/schemas/Sku'
          description: Describes the properties of a SKU.
      type: object
    PipelineTopologyUpdate:
      description: "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
      properties:
        properties:
          $ref: '#/components/schemas/PipelineTopologyPropertiesUpdate'
          description: The resource properties.
          x-ms-client-flatten: true
        kind:
          type: string
          enum:
            - Live
            - Batch
          x-ms-enum:
            name: Kind
            values:
              - value: Live
                description: Live pipeline topology resource.
              - value: Batch
                description: Batch pipeline topology resource.
            modelAsString: true
          description: Topology kind.
        sku:
          $ref: '#/components/schemas/Sku'
          description: Describes the properties of a SKU.
      type: object
    LivePipelineProperties:
      properties:
        topologyName:
          type: string
          description: The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition.
        description:
          type: string
          description: An optional description for the pipeline.
        bitrateKbps:
          type: integer
          format: int32
          description: Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account.
        state:
          type: string
          enum:
            - Inactive
            - Activating
            - Active
            - Deactivating
          x-ms-enum:
            name: LivePipelineState
            values:
              - value: Inactive
                description: The live pipeline is idle and not processing media.
              - value: Activating
                description: The live pipeline is transitioning into the active state.
              - value: Active
                description: The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state.
              - value: Deactivating
                description: The live pipeline is transitioning into the inactive state.
            modelAsString: true
          description: Current state of the pipeline (read-only).
          readOnly: true
          nullable: false
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDefinition'
          x-ms-identifiers:
            - name
          description: List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
      type: object
      required:
        - topologyName
        - bitrateKbps
      description: Live pipeline properties.
    LivePipelinePropertiesUpdate:
      properties:
        topologyName:
          type: string
          description: The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition.
        description:
          type: string
          description: An optional description for the pipeline.
        bitrateKbps:
          type: integer
          format: int32
          description: Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account.
        state:
          type: string
          enum:
            - Inactive
            - Activating
            - Active
            - Deactivating
          x-ms-enum:
            name: LivePipelineState
            values:
              - value: Inactive
                description: The live pipeline is idle and not processing media.
              - value: Activating
                description: The live pipeline is transitioning into the active state.
              - value: Active
                description: The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state.
              - value: Deactivating
                description: The live pipeline is transitioning into the inactive state.
            modelAsString: true
          description: Current state of the pipeline (read-only).
          readOnly: true
          nullable: false
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDefinition'
          x-ms-identifiers:
            - name
          description: List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
      type: object
      description: Live pipeline properties.
    LivePipeline:
      description: Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera.
      properties:
        properties:
          $ref: '#/components/schemas/LivePipelineProperties'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    LivePipelineUpdate:
      description: Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera.
      properties:
        properties:
          $ref: '#/components/schemas/LivePipelinePropertiesUpdate'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    PipelineJobProperties:
      properties:
        topologyName:
          type: string
          description: Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
        description:
          type: string
          description: An optional description for the pipeline.
        state:
          type: string
          enum:
            - Processing
            - Canceled
            - Completed
            - Failed
          x-ms-enum:
            name: PipelineJobState
            values:
              - value: Processing
                description: Pipeline job is processing.
              - value: Canceled
                description: Pipeline job is canceled.
              - value: Completed
                description: Pipeline job completed.
              - value: Failed
                description: Pipeline job failed.
            modelAsString: true
          description: Current state of the pipeline (read-only).
          readOnly: true
          nullable: false
        expiration:
          type: string
          format: date-time
          description: The date-time by when this pipeline job will be automatically deleted from your account.
          readOnly: true
          nullable: false
        error:
          $ref: '#/components/schemas/PipelineJobError'
          description: Details about the error, in case the pipeline job fails.
          readOnly: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDefinition'
          x-ms-identifiers:
            - name
          description: List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
      type: object
      required:
        - topologyName
      description: Pipeline job properties.
    PipelineJobPropertiesUpdate:
      properties:
        topologyName:
          type: string
          description: Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition.
        description:
          type: string
          description: An optional description for the pipeline.
        state:
          type: string
          enum:
            - Processing
            - Canceled
            - Completed
            - Failed
          x-ms-enum:
            name: PipelineJobState
            values:
              - value: Processing
                description: Pipeline job is processing.
              - value: Canceled
                description: Pipeline job is canceled.
              - value: Completed
                description: Pipeline job completed.
              - value: Failed
                description: Pipeline job failed.
            modelAsString: true
          description: Current state of the pipeline (read-only).
          readOnly: true
          nullable: false
        expiration:
          type: string
          format: date-time
          description: The date-time by when this pipeline job will be automatically deleted from your account.
          readOnly: true
          nullable: false
        error:
          $ref: '#/components/schemas/PipelineJobError'
          description: Details about the error, in case the pipeline job fails.
          readOnly: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterDefinition'
          x-ms-identifiers:
            - name
          description: List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.
      type: object
      description: Pipeline job properties.
    PipelineJobError:
      properties:
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message.
      type: object
      description: Details about the error for a failed pipeline job.
    PipelineJob:
      description: Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content.
      properties:
        properties:
          $ref: '#/components/schemas/PipelineJobProperties'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    PipelineJobUpdate:
      description: Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content.
      properties:
        properties:
          $ref: '#/components/schemas/PipelineJobPropertiesUpdate'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    LivePipelineOperationStatus:
      properties:
        name:
          type: string
          description: The name of the live pipeline operation.
          readOnly: true
        status:
          type: string
          description: The status of the live pipeline operation.
          readOnly: true
        error:
          $ref: '#/components/schemas/ErrorDetail'
          description: The error details for the live pipeline operation.
          readOnly: true
      type: object
      description: Used for tracking the status of an operation on the live pipeline.
    PipelineJobOperationStatus:
      properties:
        name:
          type: string
          description: The name of the pipeline job operation.
          readOnly: true
        status:
          type: string
          description: The status of the pipeline job operation.
          readOnly: true
        error:
          $ref: '#/components/schemas/ErrorDetail'
          description: The error details for the pipeline job operation.
          readOnly: true
      type: object
      description: Used for tracking the status of an operation on the pipeline job.
    PipelineTopologyCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PipelineTopology'
          description: A collection of PipelineTopology items.
        '@nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of PipelineTopology items.
    LivePipelineCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LivePipeline'
          description: A collection of LivePipeline items.
        '@nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of LivePipeline items.
    PipelineJobCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PipelineJob'
          description: A collection of PipelineJob items.
        '@nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of PipelineJob items.
    OperationDisplay:
      properties:
        provider:
          type: string
          description: The service provider.
        resource:
          type: string
          description: Resource on which the operation is performed.
        operation:
          type: string
          description: The operation type.
        description:
          type: string
          description: The operation description.
      type: object
      description: Operation details.
    MetricDimension:
      properties:
        name:
          type: string
          description: The metric dimension name.
          readOnly: true
        displayName:
          type: string
          description: The display name for the dimension.
          readOnly: true
        toBeExportedForShoebox:
          type: boolean
          description: Whether to export metric to shoebox.
          readOnly: true
          nullable: false
      type: object
      description: A metric dimension.
    MetricSpecification:
      properties:
        name:
          type: string
          description: The metric name.
          readOnly: true
        displayName:
          type: string
          description: The metric display name.
          readOnly: true
        displayDescription:
          type: string
          description: The metric display description.
          readOnly: true
        unit:
          type: string
          enum:
            - Bytes
            - Count
            - Milliseconds
          x-ms-enum:
            name: MetricUnit
            values:
              - value: Bytes
                description: The number of bytes.
              - value: Count
                description: The count.
              - value: Milliseconds
                description: The number of milliseconds.
            modelAsString: true
          description: The metric unit
          readOnly: true
          nullable: false
        aggregationType:
          type: string
          enum:
            - Average
            - Count
            - Total
          x-ms-enum:
            name: MetricAggregationType
            values:
              - value: Average
                description: The average.
              - value: Count
                description: The count of a number of items, usually requests.
              - value: Total
                description: The sum.
            modelAsString: true
          description: The metric aggregation type
          readOnly: true
          nullable: false
        lockAggregationType:
          type: string
          enum:
            - Average
            - Count
            - Total
          x-ms-enum:
            name: MetricAggregationType
            values:
              - value: Average
                description: The average.
              - value: Count
                description: The count of a number of items, usually requests.
              - value: Total
                description: The sum.
            modelAsString: true
          description: The metric lock aggregation type
          readOnly: true
          nullable: true
        supportedAggregationTypes:
          type: array
          items:
            type: string
          description: Supported aggregation types.
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
          description: The metric dimensions.
          readOnly: true
        enableRegionalMdmAccount:
          type: boolean
          description: Indicates whether regional MDM account is enabled.
          readOnly: true
          nullable: false
        sourceMdmAccount:
          type: string
          description: The source MDM account.
          readOnly: true
        sourceMdmNamespace:
          type: string
          description: The source MDM namespace.
          readOnly: true
        supportedTimeGrainTypes:
          type: array
          items:
            type: string
          description: The supported time grain types.
          readOnly: true
      type: object
      description: A metric emitted by service.
    Properties:
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: The service specifications.
          readOnly: true
      type: object
      description: Metric properties.
    ServiceSpecification:
      properties:
        logSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - blobDuration
            - name
          description: List of log specifications.
          readOnly: true
        metricSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          x-ms-identifiers:
            - name
            - unit
          description: List of metric specifications.
          readOnly: true
      type: object
      description: The service metric specifications.
    LogSpecification:
      properties:
        name:
          type: string
          description: The diagnostic log category name.
          readOnly: true
        displayName:
          type: string
          description: The diagnostic log category display name.
          readOnly: true
        blobDuration:
          type: string
          description: The time range for requests in each blob.
          readOnly: true
      type: object
      description: A diagnostic log emitted by service.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    StorageAccount:
      properties:
        id:
          type: string
          description: The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage).
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: A managed identity that Video Analyzer will use to access the storage account.
        status:
          type: string
          description: The current status of the storage account mapping.
          readOnly: true
      type: object
      required:
        - id
      description: The details about the associated storage account.
    VideoAnalyzerProperties:
      properties:
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          description: The storage accounts for this resource.
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
          x-ms-identifiers:
            - endpointUrl
          description: The endpoints associated with this resource.
          readOnly: true
        encryption:
          $ref: '#/components/schemas/AccountEncryption'
          description: The account encryption properties.
        iotHubs:
          type: array
          items:
            $ref: '#/components/schemas/IotHub'
          description: The IoT Hubs for this resource.
        publicNetworkAccess:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            values:
              - value: Enabled
                description: Public network access is enabled.
              - value: Disabled
                description: Public network access is disabled.
            modelAsString: true
          description: Whether or not public network access is allowed for resources under the Video Analyzer account.
          nullable: true
        networkAccessControl:
          $ref: '#/components/schemas/NetworkAccessControl'
          description: Network access control for Video Analyzer.
          nullable: true
          x-nullable: true
        provisioningState:
          type: string
          enum:
            - Failed
            - InProgress
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            values:
              - value: Failed
                description: Provisioning state failed.
              - value: InProgress
                description: Provisioning state in progress.
              - value: Succeeded
                description: Provisioning state succeeded.
            modelAsString: true
          description: Provisioning state of the Video Analyzer account.
          readOnly: true
          nullable: false
        privateEndpointConnections:
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          type: array
          description: Private Endpoint Connections created under Video Analyzer account.
          readOnly: true
      type: object
      required:
        - storageAccounts
      description: The properties of the Video Analyzer account.
    VideoAnalyzerPropertiesUpdate:
      properties:
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          description: The storage accounts for this resource.
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
          x-ms-identifiers:
            - endpointUrl
          description: The endpoints associated with this resource.
          readOnly: true
        encryption:
          $ref: '#/components/schemas/AccountEncryption'
          description: The account encryption properties.
        iotHubs:
          type: array
          items:
            $ref: '#/components/schemas/IotHub'
          description: The IoT Hubs for this resource.
        publicNetworkAccess:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            values:
              - value: Enabled
                description: Public network access is enabled.
              - value: Disabled
                description: Public network access is disabled.
            modelAsString: true
          description: Whether or not public network access is allowed for resources under the Video Analyzer account.
          nullable: true
        networkAccessControl:
          $ref: '#/components/schemas/NetworkAccessControl'
          description: Network access control for Video Analyzer.
          nullable: true
          x-nullable: true
        provisioningState:
          type: string
          enum:
            - Failed
            - InProgress
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            values:
              - value: Failed
                description: Provisioning state failed.
              - value: InProgress
                description: Provisioning state in progress.
              - value: Succeeded
                description: Provisioning state succeeded.
            modelAsString: true
          description: Provisioning state of the Video Analyzer account.
          readOnly: true
          nullable: false
        privateEndpointConnections:
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          type: array
          description: Private Endpoint Connections created under Video Analyzer account.
          readOnly: true
      type: object
      description: The properties of the Video Analyzer account.
    VideoAnalyzer:
      description: The Video Analyzer account.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/VideoAnalyzerProperties'
          description: The resource properties.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/VideoAnalyzerIdentity'
          description: The identities associated to the Video Analyzer resource.
      type: object
    VideoAnalyzerUpdate:
      description: The update operation for a Video Analyzer account.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          $ref: '#/components/schemas/VideoAnalyzerPropertiesUpdate'
          description: The resource properties.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/VideoAnalyzerIdentity'
          description: The identities associated to the Video Analyzer resource.
      type: object
    Endpoint:
      properties:
        endpointUrl:
          type: string
          description: The URL of the endpoint.
        type:
          type: string
          enum:
            - ClientApi
          x-ms-enum:
            name: VideoAnalyzerEndpointType
            values:
              - value: ClientApi
                description: The client API endpoint.
            modelAsString: true
          description: The type of the endpoint.
      type: object
      required:
        - type
      description: The endpoint details.
    UserAssignedManagedIdentity:
      properties:
        clientId:
          type: string
          format: uuid
          description: The client ID.
          readOnly: true
          nullable: true
        principalId:
          type: string
          format: uuid
          description: The principal ID.
          readOnly: true
          nullable: true
      type: object
      description: The details of the user assigned managed identity used by the Video Analyzer resource.
    UserAssignedManagedIdentities:
      description: The User Assigned Managed Identities.
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedManagedIdentity'
      properties: {}
      type: object
    VideoAnalyzerIdentity:
      properties:
        type:
          type: string
          description: The identity type.
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedManagedIdentities'
          description: The User Assigned Managed Identities.
      type: object
      required:
        - type
      description: The managed identity for the Video Analyzer resource.
    ResourceIdentity:
      properties:
        userAssignedIdentity:
          type: string
          description: The user assigned managed identity's resource identifier to use when accessing a resource.
      type: object
      required:
        - userAssignedIdentity
      description: The user assigned managed identity to use when accessing a resource.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    AccountEncryption:
      properties:
        type:
          type: string
          enum:
            - SystemKey
            - CustomerKey
          x-ms-enum:
            name: AccountEncryptionKeyType
            values:
              - value: SystemKey
                description: The Account Key is encrypted with a System Key.
              - value: CustomerKey
                description: The Account Key is encrypted with a Customer Key.
            modelAsString: true
          description: The type of key used to encrypt the Account Key.
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: The properties of the key used to encrypt the account.
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: The Key Vault identity.
        status:
          type: string
          description: The current status of the Key Vault mapping.
          readOnly: true
      type: object
      required:
        - type
      description: Defines how the Video Analyzer account is (optionally) encrypted.
    IotHub:
      properties:
        id:
          type: string
          description: The IoT Hub resource identifier.
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: The IoT Hub identity.
        status:
          type: string
          description: The current status of the Iot Hub mapping.
          readOnly: true
      type: object
      required:
        - id
        - identity
      description: The IoT Hub details.
    GroupLevelAccessControl:
      properties:
        publicNetworkAccess:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            values:
              - value: Enabled
                description: Public network access is enabled.
              - value: Disabled
                description: Public network access is disabled.
            modelAsString: true
          description: Whether or not public network access is allowed for specified resources under the Video Analyzer account.
          nullable: true
      type: object
      description: Group level network access control.
    NetworkAccessControl:
      properties:
        integration:
          $ref: '#/components/schemas/GroupLevelAccessControl'
          description: Public network access for integration group.
          nullable: true
          x-nullable: true
        ingestion:
          $ref: '#/components/schemas/GroupLevelAccessControl'
          description: Public network access for ingestion group.
          nullable: true
          x-nullable: true
        consumption:
          $ref: '#/components/schemas/GroupLevelAccessControl'
          description: Public network access for consumption group.
          nullable: true
          x-nullable: true
      type: object
      description: Network access control for video analyzer account.
    VideoAnalyzerPrivateEndpointConnectionOperationStatus:
      properties:
        name:
          type: string
          description: Operation identifier.
        id:
          type: string
          description: Operation resource ID.
        startTime:
          type: string
          description: Operation start time.
        endTime:
          type: string
          description: Operation end time.
        status:
          type: string
          description: Operation status.
        error:
          $ref: '#/components/schemas/ErrorDetail'
          nullable: true
          x-nullable: true
      type: object
      required:
        - name
      description: Status of private endpoint connection operation.
    VideoAnalyzerOperationStatus:
      properties:
        name:
          type: string
          description: Operation identifier.
        id:
          type: string
          description: Operation resource ID.
        startTime:
          type: string
          description: Operation start time.
        endTime:
          type: string
          description: Operation end time.
        status:
          type: string
          description: Operation status.
        error:
          $ref: '#/components/schemas/ErrorDetail'
          nullable: true
          x-nullable: true
      type: object
      required:
        - name
      description: Status of video analyzer operation.
    OperationCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: A collection of Operation items.
      type: object
      description: A collection of Operation items.
    VideoAnalyzerCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VideoAnalyzer'
          description: A collection of VideoAnalyzer items.
      type: object
      description: A collection of VideoAnalyzer items.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    EdgeModuleProperties:
      properties:
        edgeModuleId:
          type: string
          format: uuid
          description: Internal ID generated for the instance of the Video Analyzer edge module.
          readOnly: true
          nullable: false
      type: object
      description: Application level properties for the edge module resource.
    ListProvisioningTokenInput:
      properties:
        expirationDate:
          type: string
          format: date-time
          description: The desired expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.
      type: object
      required:
        - expirationDate
      description: The input parameters to generate registration token for the Azure Video Analyzer IoT edge module.
    EdgeModuleProvisioningToken:
      properties:
        expirationDate:
          type: string
          format: date-time
          description: The expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.
          readOnly: true
          nullable: false
        token:
          type: string
          description: The token blob to be provided to the Azure Video Analyzer IoT edge module through the Azure IoT Edge module twin properties.
          readOnly: true
      type: object
      description: Provisioning token properties. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset.
    EdgeModuleEntity:
      description: The representation of an edge module.
      properties:
        properties:
          $ref: '#/components/schemas/EdgeModuleProperties'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    EdgeModuleEntityCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EdgeModuleEntity'
          description: A collection of EdgeModuleEntity items.
        '@nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of EdgeModuleEntity items.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
    VideoContentUrls:
      properties:
        downloadUrl:
          type: string
          description: Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption.
        archiveBaseUrl:
          type: string
          description: "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
        rtspTunnelUrl:
          type: string
          description: Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source.
        previewImageUrls:
          $ref: '#/components/schemas/VideoPreviewImageUrls'
          description: Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.
      type: object
      description: Set of URLs to the video content.
    VideoPreviewImageUrls:
      properties:
        small:
          type: string
          description: Low resolution preview image URL.
        medium:
          type: string
          description: Medium resolution preview image URL.
        large:
          type: string
          description: High resolution preview image URL.
      type: object
      description: Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.
    VideoFlags:
      properties:
        canStream:
          type: boolean
          description: Value indicating whether or not the video can be streamed. Only "archive" type videos can be streamed.
        hasData:
          type: boolean
          description: Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false.
        isInUse:
          type: boolean
          description: Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time.
      type: object
      required:
        - canStream
        - hasData
        - isInUse
      description: Video flags contain information about the available video actions and its dynamic properties based on the current video state.
    VideoMediaInfo:
      properties:
        segmentLength:
          type: string
          description: Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments.
      type: object
      description: Contains information about the video and audio content.
    VideoContentToken:
      properties:
        expirationDate:
          type: string
          format: date-time
          description: The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).
          readOnly: true
          nullable: false
        token:
          type: string
          description: The content token value to be added to the video content URL as the value for the "token" query string parameter. The token is specific to a single video.
          readOnly: true
      type: object
      description: '"Video content token grants access to the video content URLs."'
    VideoProperties:
      properties:
        title:
          type: string
          description: Optional video title provided by the user. Value can be up to 256 characters long.
        description:
          type: string
          description: Optional video description provided by the user. Value can be up to 2048 characters long.
        type:
          type: string
          enum:
            - Archive
            - File
          x-ms-enum:
            name: VideoType
            values:
              - value: Archive
                description: Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival.
              - value: File
                description: File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption.
            modelAsString: true
          description: Video content type. Different content types are suitable for different applications and scenarios.
          readOnly: true
          nullable: false
        flags:
          $ref: '#/components/schemas/VideoFlags'
          description: Video flags contain information about the available video actions and its dynamic properties based on the current video state.
          readOnly: true
        contentUrls:
          $ref: '#/components/schemas/VideoContentUrls'
          description: Set of URLs to the video content.
          readOnly: true
        mediaInfo:
          $ref: '#/components/schemas/VideoMediaInfo'
          description: Contains information about the video and audio content.
        archival:
          $ref: '#/components/schemas/VideoArchival'
          description: Video archival properties.
      type: object
      description: Application level properties for the video resource.
    VideoArchival:
      properties:
        retentionPeriod:
          type: string
          description: Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours.
      type: object
      description: Video archival properties.
    AuthenticationBase:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
      type: object
      required:
        - '@type'
      description: Base class for access policies authentication methods.
    TokenClaim:
      properties:
        name:
          type: string
          description: Name of the claim which must be present on the token.
        value:
          type: string
          description: Expected value of the claim to be present on the token.
      type: object
      required:
        - name
        - value
      description: Properties for expected token claims.
    JwtAuthentication:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.JwtAuthentication'
      description: Properties for access validation based on JSON Web Tokens (JWT).
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        issuers:
          type: array
          items:
            type: string
          description: List of expected token issuers. Token issuer is valid if it matches at least one of the given values.
        audiences:
          type: array
          items:
            type: string
          description: List of expected token audiences. Token audience is valid if it matches at least one of the given values.
        claims:
          type: array
          items:
            $ref: '#/components/schemas/TokenClaim'
          x-ms-identifiers:
            - name
            - value
          description: List of additional token claims to be validated. Token must contains all claims and respective values for it to be valid.
        keys:
          type: array
          items:
            $ref: '#/components/schemas/TokenKey'
          x-ms-identifiers:
            - kid
          description: List of keys which can be used to validate access tokens. Having multiple keys allow for seamless key rotation of the token signing key. Token signature must match exactly one key.
      type: object
    TokenKey:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        kid:
          type: string
          description: JWT token key id. Validation keys are looked up based on the key id present on the JWT token header.
      type: object
      required:
        - '@type'
        - kid
      description: Key properties for JWT token validation.
    RsaTokenKey:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.RsaTokenKey'
      required:
        - alg
        - 'n'
        - e
      description: Required validation properties for tokens generated with RSA algorithm.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        kid:
          type: string
          description: JWT token key id. Validation keys are looked up based on the key id present on the JWT token header.
        alg:
          type: string
          enum:
            - RS256
            - RS384
            - RS512
          x-ms-enum:
            name: AccessPolicyRsaAlgo
            values:
              - value: RS256
                description: RS256
              - value: RS384
                description: RS384
              - value: RS512
                description: RS512
            modelAsString: true
          description: 'RSA algorithm to be used: RS256, RS384 or RS512.'
        'n':
          type: string
          description: RSA public key modulus.
        e:
          type: string
          description: RSA public key exponent.
      type: object
    EccTokenKey:
      x-ms-discriminator-value: '#Microsoft.VideoAnalyzer.EccTokenKey'
      required:
        - alg
        - x
        - 'y'
      description: Required validation properties for tokens generated with Elliptical Curve algorithm.
      properties:
        '@type':
          type: string
          description: The discriminator for derived types.
        kid:
          type: string
          description: JWT token key id. Validation keys are looked up based on the key id present on the JWT token header.
        alg:
          type: string
          enum:
            - ES256
            - ES384
            - ES512
          x-ms-enum:
            name: AccessPolicyEccAlgo
            values:
              - value: ES256
                description: ES265
              - value: ES384
                description: ES384
              - value: ES512
                description: ES512
            modelAsString: true
          description: 'Elliptical curve algorithm to be used: ES256, ES384 or ES512.'
        x:
          type: string
          description: X coordinate.
        'y':
          type: string
          description: Y coordinate.
      type: object
    AccessPolicyProperties:
      properties:
        role:
          type: string
          enum:
            - Reader
          x-ms-enum:
            name: AccessPolicyRole
            values:
              - value: Reader
                description: Reader role allows for read-only operations to be performed through the client APIs.
            modelAsString: true
          description: Defines the access level granted by this policy.
          nullable: true
        authentication:
          $ref: '#/components/schemas/AuthenticationBase'
          description: Authentication method to be used when validating client API access.
      type: object
      description: Application level properties for the access policy resource.
    VideoEntity:
      description: Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files.
      properties:
        properties:
          $ref: '#/components/schemas/VideoProperties'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    AccessPolicyEntity:
      description: Access policies help define the authentication rules, and control access to specific video resources.
      properties:
        properties:
          $ref: '#/components/schemas/AccessPolicyProperties'
          description: The resource properties.
          x-ms-client-flatten: true
      type: object
    VideoEntityCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VideoEntity'
          description: A collection of VideoEntity items.
        '@nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of VideoEntity items.
    AccessPolicyEntityCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessPolicyEntity'
          description: A collection of AccessPolicyEntity items.
        '@nextLink':
          type: string
          description: A link to the next page of the collection (when the collection contains too many results to return in one response).
      type: object
      description: A collection of AccessPolicyEntity items.
  x-stackQL-resources:
    pipeline_topologies:
      id: azure.video_analyzer.pipeline_topologies
      name: pipeline_topologies
      title: pipeline_topologies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineTopologies?api-version=2021-11-01-preview/get'
            operationId: PipelineTopologies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineTopologyCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineTopologies~1{pipelineTopologyName}?api-version=2021-11-01-preview/get'
            operationId: PipelineTopologies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineTopology
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineTopologies~1{pipelineTopologyName}?api-version=2021-11-01-preview/put'
            operationId: PipelineTopologies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineTopology
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineTopologies~1{pipelineTopologyName}?api-version=2021-11-01-preview/delete'
            operationId: PipelineTopologies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineTopologies~1{pipelineTopologyName}?api-version=2021-11-01-preview/patch'
            operationId: PipelineTopologies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineTopology
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipeline_topologies/methods/get'
          - $ref: '#/components/x-stackQL-resources/pipeline_topologies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipeline_topologies/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/pipeline_topologies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipeline_topologies/methods/delete'
    live_pipelines:
      id: azure.video_analyzer.live_pipelines
      name: live_pipelines
      title: live_pipelines
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines?api-version=2021-11-01-preview/get'
            operationId: LivePipelines_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LivePipelineCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines~1{livePipelineName}?api-version=2021-11-01-preview/get'
            operationId: LivePipelines_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LivePipeline
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines~1{livePipelineName}?api-version=2021-11-01-preview/put'
            operationId: LivePipelines_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LivePipeline
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines~1{livePipelineName}?api-version=2021-11-01-preview/delete'
            operationId: LivePipelines_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines~1{livePipelineName}?api-version=2021-11-01-preview/patch'
            operationId: LivePipelines_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LivePipeline
        activate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines~1{livePipelineName}~1activate?api-version=2021-11-01-preview/post'
            operationId: LivePipelines_Activate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines~1{livePipelineName}~1deactivate?api-version=2021-11-01-preview/post'
            operationId: LivePipelines_Deactivate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_pipelines/methods/get'
          - $ref: '#/components/x-stackQL-resources/live_pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/live_pipelines/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/live_pipelines/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_pipelines/methods/delete'
    pipeline_jobs:
      id: azure.video_analyzer.pipeline_jobs
      name: pipeline_jobs
      title: pipeline_jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineJobs?api-version=2021-11-01-preview/get'
            operationId: PipelineJobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineJobCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineJobs~1{pipelineJobName}?api-version=2021-11-01-preview/get'
            operationId: PipelineJobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineJob
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineJobs~1{pipelineJobName}?api-version=2021-11-01-preview/put'
            operationId: PipelineJobs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineJob
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineJobs~1{pipelineJobName}?api-version=2021-11-01-preview/delete'
            operationId: PipelineJobs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineJobs~1{pipelineJobName}?api-version=2021-11-01-preview/patch'
            operationId: PipelineJobs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineJob
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineJobs~1{pipelineJobName}~1cancel?api-version=2021-11-01-preview/post'
            operationId: PipelineJobs_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipeline_jobs/methods/delete'
    live_pipeline_operation_status:
      id: azure.video_analyzer.live_pipeline_operation_status
      name: live_pipeline_operation_status
      title: live_pipeline_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1livePipelines~1{livePipelineName}~1operationStatuses~1{operationId}?api-version=2021-11-01-preview/get'
            operationId: LivePipelineOperationStatuses_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LivePipelineOperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_pipeline_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    pipeline_job_operation_status:
      id: azure.video_analyzer.pipeline_job_operation_status
      name: pipeline_job_operation_status
      title: pipeline_job_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1pipelineJobs~1{pipelineJobName}~1operationStatuses~1{operationId}?api-version=2021-11-01-preview/get'
            operationId: PipelineJobOperationStatuses_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PipelineJobOperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipeline_job_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.video_analyzer.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Media~1operations?api-version=2021-11-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    video_analyzers:
      id: azure.video_analyzer.video_analyzers
      name: video_analyzers
      title: video_analyzers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers?api-version=2021-11-01-preview/get'
            operationId: VideoAnalyzers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoAnalyzerCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}?api-version=2021-11-01-preview/get'
            operationId: VideoAnalyzers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoAnalyzer
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}?api-version=2021-11-01-preview/put'
            operationId: VideoAnalyzers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoAnalyzer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}?api-version=2021-11-01-preview/delete'
            operationId: VideoAnalyzers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}?api-version=2021-11-01-preview/patch'
            operationId: VideoAnalyzers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '202'
            schemaRef: VideoAnalyzer
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Media~1videoAnalyzers?api-version=2021-11-01-preview/get'
            operationId: VideoAnalyzers_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoAnalyzerCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/video_analyzers/methods/get'
          - $ref: '#/components/x-stackQL-resources/video_analyzers/methods/list'
          - $ref: '#/components/x-stackQL-resources/video_analyzers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/video_analyzers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/video_analyzers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/video_analyzers/methods/delete'
    private_link_resources:
      id: azure.video_analyzer.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1privateLinkResources?api-version=2021-11-01-preview/get'
            operationId: PrivateLinkResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1privateLinkResources~1{name}?api-version=2021-11-01-preview/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connections:
      id: azure.video_analyzer.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1privateEndpointConnections?api-version=2021-11-01-preview/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1privateEndpointConnections~1{name}?api-version=2021-11-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1privateEndpointConnections~1{name}?api-version=2021-11-01-preview/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1privateEndpointConnections~1{name}?api-version=2021-11-01-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    operation_status:
      id: azure.video_analyzer.operation_status
      name: operation_status
      title: operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Media~1locations~1{locationName}~1videoAnalyzerOperationStatuses~1{operationId}?api-version=2021-11-01-preview/get'
            operationId: VideoAnalyzerOperationStatuses_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoAnalyzerOperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operation_results:
      id: azure.video_analyzer.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Media~1locations~1{locationName}~1videoAnalyzerOperationResults~1{operationId}?api-version=2021-11-01-preview/get'
            operationId: VideoAnalyzerOperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoAnalyzer
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: azure.video_analyzer.locations
      name: locations
      title: locations
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Media~1locations~1{locationName}~1checkNameAvailability?api-version=2021-11-01-preview/post'
            operationId: Locations_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    edge_modules:
      id: azure.video_analyzer.edge_modules
      name: edge_modules
      title: edge_modules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1edgeModules?api-version=2021-11-01-preview/get'
            operationId: EdgeModules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EdgeModuleEntityCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1edgeModules~1{edgeModuleName}?api-version=2021-11-01-preview/get'
            operationId: EdgeModules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EdgeModuleEntity
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1edgeModules~1{edgeModuleName}?api-version=2021-11-01-preview/put'
            operationId: EdgeModules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EdgeModuleEntity
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1edgeModules~1{edgeModuleName}?api-version=2021-11-01-preview/delete'
            operationId: EdgeModules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/edge_modules/methods/get'
          - $ref: '#/components/x-stackQL-resources/edge_modules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/edge_modules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/edge_modules/methods/delete'
    edge_modules_provisioning_tokens:
      id: azure.video_analyzer.edge_modules_provisioning_tokens
      name: edge_modules_provisioning_tokens
      title: edge_modules_provisioning_tokens
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1edgeModules~1{edgeModuleName}~1listProvisioningToken?api-version=2021-11-01-preview/post'
            operationId: EdgeModulesProvisioningToken_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EdgeModuleProvisioningToken
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/edge_modules_provisioning_tokens/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    videos:
      id: azure.video_analyzer.videos
      name: videos
      title: videos
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1videos?api-version=2021-11-01-preview/get'
            operationId: Videos_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoEntityCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1videos~1{videoName}?api-version=2021-11-01-preview/get'
            operationId: Videos_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoEntity
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1videos~1{videoName}?api-version=2021-11-01-preview/put'
            operationId: Videos_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoEntity
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1videos~1{videoName}?api-version=2021-11-01-preview/delete'
            operationId: Videos_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1videos~1{videoName}?api-version=2021-11-01-preview/patch'
            operationId: Videos_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoEntity
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/videos/methods/get'
          - $ref: '#/components/x-stackQL-resources/videos/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/videos/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/videos/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/videos/methods/delete'
    videos_content_tokens:
      id: azure.video_analyzer.videos_content_tokens
      name: videos_content_tokens
      title: videos_content_tokens
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1videos~1{videoName}~1listContentToken?api-version=2021-11-01-preview/post'
            operationId: VideosContentToken_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VideoContentToken
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/videos_content_tokens/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    access_policies:
      id: azure.video_analyzer.access_policies
      name: access_policies
      title: access_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1accessPolicies?api-version=2021-11-01-preview/get'
            operationId: AccessPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyEntityCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1accessPolicies~1{accessPolicyName}?api-version=2021-11-01-preview/get'
            operationId: AccessPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyEntity
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1accessPolicies~1{accessPolicyName}?api-version=2021-11-01-preview/put'
            operationId: AccessPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyEntity
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1accessPolicies~1{accessPolicyName}?api-version=2021-11-01-preview/delete'
            operationId: AccessPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Media~1videoAnalyzers~1{accountName}~1accessPolicies~1{accessPolicyName}?api-version=2021-11-01-preview/patch'
            operationId: AccessPolicies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyEntity
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/delete'
    vw_pipeline_topologies:
      id: azure.video_analyzer.vw_pipeline_topologies
      name: vw_pipeline_topologies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              kind as kind,
              sku as sku,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.sources') as "sources",
              JSON_EXTRACT(properties, '$.processors') as "processors",
              JSON_EXTRACT(properties, '$.sinks') as "sinks",
              subscriptionId,
              resourceGroupName,
              accountName,
              pipelineTopologyName
              FROM azure.video_analyzer.pipeline_topologies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                kind as kind,
                sku as sku,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.sources') as "sources",
                json_extract_path_text(properties, '$.processors') as "processors",
                json_extract_path_text(properties, '$.sinks') as "sinks",
                subscriptionId,
                resourceGroupName,
                accountName,
                pipelineTopologyName
                FROM azure.video_analyzer.pipeline_topologies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_live_pipelines:
      id: azure.video_analyzer.vw_live_pipelines
      name: vw_live_pipelines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.topologyName') as "topology_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.bitrateKbps') as "bitrate_kbps",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              subscriptionId,
              resourceGroupName,
              accountName,
              livePipelineName
              FROM azure.video_analyzer.live_pipelines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.topologyName') as "topology_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.bitrateKbps') as "bitrate_kbps",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                subscriptionId,
                resourceGroupName,
                accountName,
                livePipelineName
                FROM azure.video_analyzer.live_pipelines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_pipeline_jobs:
      id: azure.video_analyzer.vw_pipeline_jobs
      name: vw_pipeline_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.topologyName') as "topology_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.expiration') as "expiration",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              subscriptionId,
              resourceGroupName,
              accountName,
              pipelineJobName
              FROM azure.video_analyzer.pipeline_jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.topologyName') as "topology_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.expiration') as "expiration",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                subscriptionId,
                resourceGroupName,
                accountName,
                pipelineJobName
                FROM azure.video_analyzer.pipeline_jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_video_analyzers:
      id: azure.video_analyzer.vw_video_analyzers
      name: vw_video_analyzers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.storageAccounts') as "storage_accounts",
              JSON_EXTRACT(properties, '$.endpoints') as "endpoints",
              JSON_EXTRACT(properties, '$.encryption') as "encryption",
              JSON_EXTRACT(properties, '$.iotHubs') as "iot_hubs",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.networkAccessControl') as "network_access_control",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.video_analyzer.video_analyzers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.storageAccounts') as "storage_accounts",
                json_extract_path_text(properties, '$.endpoints') as "endpoints",
                json_extract_path_text(properties, '$.encryption') as "encryption",
                json_extract_path_text(properties, '$.iotHubs') as "iot_hubs",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.networkAccessControl') as "network_access_control",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.video_analyzer.video_analyzers
                WHERE subscriptionId = 'replace-me';
    vw_private_link_resources:
      id: azure.video_analyzer.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              accountName,
              name
              FROM azure.video_analyzer.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                accountName,
                name
                FROM azure.video_analyzer.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.video_analyzer.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              name
              FROM azure.video_analyzer.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                name
                FROM azure.video_analyzer.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_operation_results:
      id: azure.video_analyzer.vw_operation_results
      name: vw_operation_results
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.storageAccounts') as "storage_accounts",
              JSON_EXTRACT(properties, '$.endpoints') as "endpoints",
              JSON_EXTRACT(properties, '$.encryption') as "encryption",
              JSON_EXTRACT(properties, '$.iotHubs') as "iot_hubs",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.networkAccessControl') as "network_access_control",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              subscriptionId,
              locationName,
              operationId
              FROM azure.video_analyzer.operation_results
              WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me' AND operationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.storageAccounts') as "storage_accounts",
                json_extract_path_text(properties, '$.endpoints') as "endpoints",
                json_extract_path_text(properties, '$.encryption') as "encryption",
                json_extract_path_text(properties, '$.iotHubs') as "iot_hubs",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.networkAccessControl') as "network_access_control",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                subscriptionId,
                locationName,
                operationId
                FROM azure.video_analyzer.operation_results
                WHERE subscriptionId = 'replace-me' AND locationName = 'replace-me' AND operationId = 'replace-me';
    vw_edge_modules:
      id: azure.video_analyzer.vw_edge_modules
      name: vw_edge_modules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.edgeModuleId') as "edge_module_id",
              subscriptionId,
              resourceGroupName,
              accountName,
              edgeModuleName
              FROM azure.video_analyzer.edge_modules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.edgeModuleId') as "edge_module_id",
                subscriptionId,
                resourceGroupName,
                accountName,
                edgeModuleName
                FROM azure.video_analyzer.edge_modules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_videos:
      id: azure.video_analyzer.vw_videos
      name: vw_videos
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.flags') as "flags",
              JSON_EXTRACT(properties, '$.contentUrls') as "content_urls",
              JSON_EXTRACT(properties, '$.mediaInfo') as "media_info",
              JSON_EXTRACT(properties, '$.archival') as "archival",
              subscriptionId,
              resourceGroupName,
              accountName,
              videoName
              FROM azure.video_analyzer.videos
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.flags') as "flags",
                json_extract_path_text(properties, '$.contentUrls') as "content_urls",
                json_extract_path_text(properties, '$.mediaInfo') as "media_info",
                json_extract_path_text(properties, '$.archival') as "archival",
                subscriptionId,
                resourceGroupName,
                accountName,
                videoName
                FROM azure.video_analyzer.videos
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_access_policies:
      id: azure.video_analyzer.vw_access_policies
      name: vw_access_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.role') as "role",
              JSON_EXTRACT(properties, '$.authentication') as "authentication",
              subscriptionId,
              resourceGroupName,
              accountName,
              accessPolicyName
              FROM azure.video_analyzer.access_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.role') as "role",
                json_extract_path_text(properties, '$.authentication') as "authentication",
                subscriptionId,
                resourceGroupName,
                accountName,
                accessPolicyName
                FROM azure.video_analyzer.access_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineTopologies?api-version=2021-11-01-preview:
    get:
      summary: Retrieves a list of pipeline topologies.
      description: Retrieves a list of pipeline topologies that have been added to the account, if any, along with their JSON representation.
      operationId: PipelineTopologies_List
      responses:
        '200':
          description: Pipeline topologies were successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineTopologyCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
      x-ms-pageable:
        nextLinkName: '@nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineTopologies/{pipelineTopologyName}?api-version=2021-11-01-preview:
    get:
      summary: Retrieves a specific pipeline topology by name.
      description: Retrieves a specific pipeline topology by name. If a topology with that name has been previously created, the call will return the JSON representation of that topology.
      operationId: PipelineTopologies_Get
      responses:
        '200':
          description: Pipeline topology was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineTopology'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineTopologyName
          in: path
          description: Pipeline topology unique identifier.
          required: true
          schema:
            type: string
    put:
      summary: Creates or updates a pipeline topology.
      description: Creates a new pipeline topology or updates an existing one, with the given name. A pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics.
      operationId: PipelineTopologies_CreateOrUpdate
      responses:
        '200':
          description: The existing pipeline topology was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineTopology'
        '201':
          description: A new pipeline topology was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineTopology'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineTopologyName
          in: path
          description: Pipeline topology unique identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineTopology'
    delete:
      summary: Deletes a pipeline topology.
      description: Deletes a pipeline topology with the given name. This method should be called after all instances of the topology have been stopped and deleted.
      operationId: PipelineTopologies_Delete
      responses:
        '200':
          description: The pipeline topology was deleted successfully.
        '204':
          description: The pipeline topology was not found.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineTopologyName
          in: path
          description: Pipeline topology unique identifier.
          required: true
          schema:
            type: string
    patch:
      summary: Updates an existing pipeline topology.
      description: 'Updates an existing pipeline topology with the given name. If the associated live pipelines or pipeline jobs are in active or processing state, respectively, then only the description can be updated. Else, the properties that can be updated include: description, parameter declarations, sources, processors, and sinks.'
      operationId: PipelineTopologies_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineTopology'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineTopologyName
          in: path
          description: Pipeline topology unique identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineTopologyUpdate'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines?api-version=2021-11-01-preview:
    get:
      summary: Retrieves a list of live pipelines.
      description: Retrieves a list of live pipelines that have been created, along with their JSON representations.
      operationId: LivePipelines_List
      responses:
        '200':
          description: List of live pipelines that were successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivePipelineCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
      x-ms-pageable:
        nextLinkName: '@nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}?api-version=2021-11-01-preview:
    get:
      summary: Retrieves a specific live pipeline by name.
      description: Retrieves a specific live pipeline by name. If a live pipeline with that name has been previously created, the call will return the JSON representation of that instance.
      operationId: LivePipelines_Get
      responses:
        '200':
          description: The live pipeline was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivePipeline'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: livePipelineName
          in: path
          description: Live pipeline unique identifier.
          required: true
          schema:
            type: string
    put:
      summary: Creates or updates a live pipeline.
      description: Creates a new live pipeline or updates an existing one, with the given name.
      operationId: LivePipelines_CreateOrUpdate
      responses:
        '200':
          description: The existing live pipeline was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivePipeline'
        '201':
          description: A new live pipeline was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivePipeline'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: livePipelineName
          in: path
          description: Live pipeline unique identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LivePipeline'
    delete:
      summary: Deletes a live pipeline.
      description: Deletes a live pipeline with the given name.
      operationId: LivePipelines_Delete
      responses:
        '200':
          description: The live pipeline was deleted successfully.
        '204':
          description: The live pipeline was not found.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: livePipelineName
          in: path
          description: Live pipeline unique identifier.
          required: true
          schema:
            type: string
    patch:
      summary: Updates an existing live pipeline.
      description: 'Updates an existing live pipeline with the given name. Properties that can be updated include: description, bitrateKbps, and parameter definitions. Only the description can be updated while the live pipeline is active.'
      operationId: LivePipelines_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivePipeline'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: livePipelineName
          in: path
          description: Live pipeline unique identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LivePipelineUpdate'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/activate?api-version=2021-11-01-preview:
    post:
      summary: Activates a live pipeline.
      description: Activates a live pipeline with the given name.
      operationId: LivePipelines_Activate
      responses:
        '200':
          description: The live pipeline was activated successfully.
        '202':
          description: Request to activate a live pipeline was accepted, and is being processed.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: livePipelineName
          in: path
          description: Live pipeline unique identifier.
          required: true
          schema:
            type: string
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/deactivate?api-version=2021-11-01-preview:
    post:
      summary: Deactivates a live pipeline.
      description: Deactivates a live pipeline with the given name.
      operationId: LivePipelines_Deactivate
      responses:
        '200':
          description: The live pipeline was deactivated successfully.
        '202':
          description: Request to deactivate a live pipeline was accepted, and is being processed.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: livePipelineName
          in: path
          description: Live pipeline unique identifier.
          required: true
          schema:
            type: string
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs?api-version=2021-11-01-preview:
    get:
      summary: Retrieves a list of pipeline jobs.
      description: Retrieves a list of all live pipelines that have been created, along with their JSON representations.
      operationId: PipelineJobs_List
      responses:
        '200':
          description: List of pipeline jobs that were successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJobCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: $filter
          in: query
          description: Restricts the set of items returned.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
      x-ms-pageable:
        nextLinkName: '@nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}?api-version=2021-11-01-preview:
    get:
      summary: Gets a specific pipeline job by name.
      description: Retrieves a specific pipeline job by name. If a pipeline job with that name has been previously created, the call will return the JSON representation of that instance.
      operationId: PipelineJobs_Get
      responses:
        '200':
          description: Pipeline job was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJob'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineJobName
          in: path
          description: The pipeline job name.
          required: true
          schema:
            type: string
    put:
      summary: Creates or updates a pipeline job.
      description: Creates a new pipeline job or updates an existing one, with the given name.
      operationId: PipelineJobs_CreateOrUpdate
      responses:
        '200':
          description: The existing pipeline job was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJob'
        '201':
          description: A new pipeline job was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJob'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineJobName
          in: path
          description: The pipeline job name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineJob'
    delete:
      summary: Deletes a pipeline job.
      description: Deletes a pipeline job with the given name.
      operationId: PipelineJobs_Delete
      responses:
        '200':
          description: The pipeline job was deleted successfully.
        '204':
          description: The pipeline job was not found.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineJobName
          in: path
          description: The pipeline job name.
          required: true
          schema:
            type: string
    patch:
      summary: Updates an existing pipeline job.
      description: 'Updates an existing pipeline job with the given name. Properties that can be updated include: description.'
      operationId: PipelineJobs_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJob'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineJobName
          in: path
          description: The pipeline job name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineJobUpdate'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}/cancel?api-version=2021-11-01-preview:
    post:
      summary: Cancels a pipeline job.
      description: Cancels a pipeline job with the given name.
      operationId: PipelineJobs_Cancel
      responses:
        '200':
          description: The pipeline job was cancelled successfully.
        '202':
          description: Request to cancel the pipeline job was accepted, and is being processed.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineJobName
          in: path
          description: The pipeline job name.
          required: true
          schema:
            type: string
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/operationStatuses/{operationId}?api-version=2021-11-01-preview:
    get:
      summary: Get the operation status
      description: Get the operation status of a live pipeline.
      operationId: LivePipelineOperationStatuses_Get
      responses:
        '200':
          description: Live pipeline operation status was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivePipelineOperationStatus'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: livePipelineName
          in: path
          description: Live pipeline unique identifier.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: The operation ID.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}/operationStatuses/{operationId}?api-version=2021-11-01-preview:
    get:
      summary: Get the operation statuses.
      description: Get the operation status of a pipeline job with the given operationId.
      operationId: PipelineJobOperationStatuses_Get
      responses:
        '200':
          description: The pipeline job operation status was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJobOperationStatus'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: pipelineJobName
          in: path
          description: The pipeline job name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: The operation ID.
          required: true
          schema:
            type: string
  /providers/Microsoft.Media/operations?api-version=2021-11-01-preview:
    get:
      summary: List Operations
      description: Lists all the Media operations.
      operationId: Operations_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters: []
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers?api-version=2021-11-01-preview:
    get:
      summary: List Video Analyzer accounts
      description: Lists the Video Analyzer accounts in the specified resource group.
      operationId: VideoAnalyzers_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzerCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}?api-version=2021-11-01-preview:
    get:
      summary: Get a Video Analyzer account
      description: Get the details of the specified Video Analyzer account
      operationId: VideoAnalyzers_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzer'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
    put:
      summary: Create or update a Video Analyzer account
      description: Create or update an instance of a Video Analyzer account
      operationId: VideoAnalyzers_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzer'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzer'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoAnalyzer'
      x-ms-long-running-operation: true
    delete:
      summary: Delete a Video Analyzer account.
      description: Delete the specified Video Analyzer account
      operationId: VideoAnalyzers_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
    patch:
      summary: Update a Video Analyzer account
      description: Updates an existing instance of Video Analyzer account
      operationId: VideoAnalyzers_Update
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzer'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoAnalyzerUpdate'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateLinkResources?api-version=2021-11-01-preview:
    get:
      summary: Get list of group IDs.
      description: Get list of group IDs for video analyzer account.
      operationId: PrivateLinkResources_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateLinkResources/{name}?api-version=2021-11-01-preview:
    get:
      summary: Get group ID.
      description: Get group ID for video analyzer account.
      operationId: PrivateLinkResources_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Name of the private link resource (Group ID).
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections?api-version=2021-11-01-preview:
    get:
      summary: Get all private endpoint connections.
      description: Get all private endpoint connections under video analyzer account.
      operationId: PrivateEndpointConnections_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections/{name}?api-version=2021-11-01-preview:
    get:
      summary: Get private endpoint connection.
      description: Get private endpoint connection under video analyzer account.
      operationId: PrivateEndpointConnections_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
    put:
      summary: Update private endpoint connection.
      description: Update private endpoint connection state under video analyzer account.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URI to poll for completion status.
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
    delete:
      summary: Delete private endpoint connection.
      description: Delete private endpoint connection under video analyzer account.
      operationId: PrivateEndpointConnections_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections/{name}/operationStatuses/{operationId}?api-version=2021-11-01-preview:
    get:
      summary: Get operation status.
      description: Get private endpoint connection operation status.
      operationId: OperationStatuses_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzerPrivateEndpointConnectionOperationStatus'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation Id.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections/{name}/operationResults/{operationId}?api-version=2021-11-01-preview:
    get:
      summary: Get operation result.
      description: Get private endpoint connection operation result.
      operationId: OperationResults_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: accountName
          in: path
          description: The Video Analyzer account name.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Private endpoint connection name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation Id.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/videoAnalyzerOperationStatuses/{operationId}?api-version=2021-11-01-preview:
    get:
      summary: Get operation status.
      description: Get video analyzer operation status.
      operationId: VideoAnalyzerOperationStatuses_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzerOperationStatus'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: locationName
          in: path
          description: Location name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation Id.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/videoAnalyzerOperationResults/{operationId}?api-version=2021-11-01-preview:
    get:
      summary: Get operation result.
      description: Get video analyzer operation result.
      operationId: VideoAnalyzerOperationResults_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzer'
        '202':
          description: Accepted
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: locationName
          in: path
          description: Location name.
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: Operation Id.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability?api-version=2021-11-01-preview:
    post:
      summary: Check Name Availability
      description: Checks whether the Video Analyzer resource name is available.
      operationId: Locations_CheckNameAvailability
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: locationName
          in: path
          description: Location Name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
  /subscriptions/{subscriptionId}/providers/Microsoft.Media/videoAnalyzers?api-version=2021-11-01-preview:
    get:
      summary: List Video Analyzer accounts
      description: List all Video Analyzer accounts in the specified subscription.
      operationId: VideoAnalyzers_ListBySubscription
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAnalyzerCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/edgeModules?api-version=2021-11-01-preview:
    get:
      summary: List all existing edge module resources.
      description: List all existing edge module resources, along with their JSON representations.
      operationId: EdgeModules_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeModuleEntityCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
      x-ms-pageable:
        nextLinkName: '@nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/edgeModules/{edgeModuleName}?api-version=2021-11-01-preview:
    get:
      summary: Retrieves an existing edge module resource.
      description: Retrieves an existing edge module resource with the given name.
      operationId: EdgeModules_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeModuleEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: edgeModuleName
          in: path
          description: The Edge Module name.
          required: true
          schema:
            type: string
    put:
      summary: Creates a new edge module or updates an existing one.
      description: Creates a new edge module or updates an existing one. An edge module resource enables a single instance of an Azure Video Analyzer IoT edge module to interact with the Video Analyzer Account. This is used for authorization and also to make sure that the particular edge module instance only has access to the data it requires from the Azure Video Analyzer service. A new edge module resource should be created for every new instance of an Azure Video Analyzer edge module deployed to you Azure IoT edge environment. Edge module resources can be deleted if the specific module is not in use anymore.
      operationId: EdgeModules_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeModuleEntity'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeModuleEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: edgeModuleName
          in: path
          description: The Edge Module name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeModuleEntity'
    delete:
      summary: Deletes an existing edge module resource.
      description: Deletes an existing edge module resource. Deleting the edge module resource will prevent an Azure Video Analyzer IoT edge module which was previously initiated with the module provisioning token from communicating with the cloud.
      operationId: EdgeModules_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: edgeModuleName
          in: path
          description: The Edge Module name.
          required: true
          schema:
            type: string
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/edgeModules/{edgeModuleName}/listProvisioningToken?api-version=2021-11-01-preview:
    post:
      summary: Creates a new provisioning token.
      description: Creates a new provisioning token. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset.
      operationId: EdgeModulesProvisioningToken_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeModuleProvisioningToken'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: edgeModuleName
          in: path
          description: The Edge Module name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProvisioningTokenInput'
      x-ms-original-operationId: EdgeModules_ListProvisioningToken
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/videos?api-version=2021-11-01-preview:
    get:
      summary: Retrieves all existing video resources.
      description: Retrieves a list of video resources that have been created, along with their JSON representations.
      operationId: Videos_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoEntityCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
      x-ms-pageable:
        nextLinkName: '@nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/videos/{videoName}?api-version=2021-11-01-preview:
    get:
      summary: Retrieves an existing video resource.
      description: Retrieves an existing video resource with the given name.
      operationId: Videos_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: videoName
          in: path
          description: The Video name.
          required: true
          schema:
            type: string
    put:
      summary: Creates a new video resource or updates an existing one.
      description: Creates a new video resource or updates an existing video resource with the given name.
      operationId: Videos_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoEntity'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: videoName
          in: path
          description: The Video name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoEntity'
    delete:
      summary: Deletes an existing video resource and its underlying data.
      description: Deletes an existing video resource and its underlying data. This operation is irreversible.
      operationId: Videos_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: videoName
          in: path
          description: The Video name.
          required: true
          schema:
            type: string
    patch:
      summary: Updates individual properties of an existing video resource.
      description: Updates individual properties of an existing video resource with the given name.
      operationId: Videos_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: videoName
          in: path
          description: The Video name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoEntity'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/videos/{videoName}/listContentToken?api-version=2021-11-01-preview:
    post:
      summary: Generates a streaming token which can be used for accessing content from video content URLs.
      description: Generates a streaming token which can be used for accessing content from video content URLs, for a video resource with the given name.
      operationId: VideosContentToken_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoContentToken'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: videoName
          in: path
          description: The Video name.
          required: true
          schema:
            type: string
      x-ms-original-operationId: Videos_ListContentToken
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies?api-version=2021-11-01-preview:
    get:
      summary: List all existing access policy resources.
      description: Retrieves all existing access policy resources, along with their JSON representations.
      operationId: AccessPolicies_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyEntityCollection'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: $top
          in: query
          description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
          required: false
          schema:
            format: int32
            type: integer
      x-ms-pageable:
        nextLinkName: '@nextLink'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies/{accessPolicyName}?api-version=2021-11-01-preview:
    get:
      summary: Retrieves an existing access policy resource.
      description: Retrieves an existing access policy resource with the given name.
      operationId: AccessPolicies_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: accessPolicyName
          in: path
          description: The Access Policy name.
          required: true
          schema:
            type: string
    put:
      summary: Creates a new access policy resource or updates an existing one.
      description: Creates a new access policy resource or updates an existing one with the given name.
      operationId: AccessPolicies_CreateOrUpdate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyEntity'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: accessPolicyName
          in: path
          description: The Access Policy name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicyEntity'
    delete:
      summary: Deletes an existing access policy resource.
      description: Deletes an existing access policy resource with the given name.
      operationId: AccessPolicies_Delete
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: accessPolicyName
          in: path
          description: The Access Policy name.
          required: true
          schema:
            type: string
    patch:
      summary: Updates individual properties of an existing access policy resource.
      description: Updates individual properties of an existing access policy resource with the given name.
      operationId: AccessPolicies_Update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyEntity'
        default:
          description: Detailed error information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AzureVideoAnalyzerAccountName'
        - name: accessPolicyName
          in: path
          description: The Access Policy name.
          required: true
          schema:
            type: string
      requestBody:
        description: The request parameters
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicyEntity'
