openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Hybrid Network
  description: 'The Azure Hybrid Network REST APIs contain two services: Azure Operator Service Manager; and Azure Network Function Manager.  Azure Operator Service Manager is an Azure service designed to assist telecom operators in managing their network services.  Azure Network Function Manager is for deploying individual network functions to your on-premises environment.'
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    PublisherNameParameter:
      name: publisherName
      in: path
      description: The name of the publisher.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    SiteNameParameter:
      name: siteName
      in: path
      description: The name of the network service site.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    NetworkServiceDesignGroupNameParameter:
      name: networkServiceDesignGroupName
      in: path
      description: The name of the network service design group.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    ConfigurationGroupValueNameParameter:
      name: configurationGroupValueName
      in: path
      description: The name of the configuration group value.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    ConfigurationGroupSchemaNameParameter:
      name: configurationGroupSchemaName
      in: path
      description: The name of the configuration group schema.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    NetworkServiceDesignVersionNameParameter:
      name: networkServiceDesignVersionName
      in: path
      description: 'The name of the network service design version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html.'
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
        maxLength: 64
        type: string
    SiteNetworkServiceNameParameter:
      name: siteNetworkServiceName
      in: path
      description: The name of the site network service.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    NetworkFunctionDefinitionGroupNameParameter:
      name: networkFunctionDefinitionGroupName
      in: path
      description: The name of the network function definition group.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    NetworkFunctionDefinitionVersionNameParameter:
      name: networkFunctionDefinitionVersionName
      in: path
      description: 'The name of the network function definition version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html.'
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
        maxLength: 64
        type: string
    ArtifactStoreParameter:
      name: artifactStoreName
      in: path
      description: The name of the artifact store.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    ArtifactManifestParameter:
      name: artifactManifestName
      in: path
      description: The name of the artifact manifest.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[^\s]*[^\s]+[^\s]*$
        maxLength: 64
        type: string
    PublisherScopeNameParameter:
      name: publisherScopeName
      in: query
      description: The name of the publisher scope.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    PublisherLocationNameParameter:
      name: publisherLocationName
      in: query
      description: The name of the publisher location.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    ProxyPublisherNameParameter:
      name: proxyPublisherName
      in: path
      description: The name of the proxy publisher.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        maxLength: 64
        type: string
    ArtifactNameParameter:
      name: artifactName
      in: query
      description: The name of the artifact.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[^\s]*[^\s]+[^\s]*$
        maxLength: 64
        type: string
    ArtifactVersionNameParameter:
      name: artifactVersionName
      in: path
      description: The name of the artifact version.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[^\s]*[^\s]+[^\s]*$
        maxLength: 64
        type: string
    NetworkFunctionNameParameter:
      name: networkFunctionName
      in: path
      description: The name of the network function.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[^\s]*[^\s]+[^\s]*$
        maxLength: 64
        type: string
    NetworkFunctionComponentNameParameter:
      name: componentName
      in: path
      description: The name of the component.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[^\s]*[^\s]+[^\s]*$
        maxLength: 64
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      type: object
      properties:
        name:
          type: string
          description: Name of this Sku
          enum:
            - Basic
            - Standard
          x-ms-enum:
            name: SkuName
            modelAsString: true
        tier:
          description: The SKU tier based on the SKU name.
          enum:
            - Basic
            - Standard
          type: string
          readOnly: true
          x-ms-enum:
            name: SkuTier
            modelAsString: true
      description: Sku, to be associated with a SiteNetworkService.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    NetworkFunction:
      description: Network function resource response.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/NetworkFunctionPropertiesFormat'
          description: Network function properties.
        etag:
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed identity of the network function.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkFunctionPropertiesFormat:
      type: object
      description: Network function properties.
      required:
        - configurationType
      discriminator:
        propertyName: configurationType
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function resource.
        publisherName:
          type: string
          description: The publisher name for the network function.
        publisherScope:
          $ref: '#/components/schemas/PublisherScope'
          description: The scope of the publisher.
        networkFunctionDefinitionGroupName:
          type: string
          description: The network function definition group name for the network function.
        networkFunctionDefinitionVersion:
          type: string
          description: The network function definition version for the network function.
        networkFunctionDefinitionOfferingLocation:
          type: string
          description: The location of the network function definition offering.
        networkFunctionDefinitionVersionResourceReference:
          $ref: '#/components/schemas/DeploymentResourceIdReference'
          description: The network function definition version resource reference.
        nfviType:
          $ref: '#/components/schemas/NFVIType'
          description: The nfvi type for the network function.
        nfviId:
          type: string
          description: The nfviId for the network function.
        allowSoftwareUpdate:
          type: boolean
          description: Indicates if software updates are allowed during deployment.
        configurationType:
          $ref: '#/components/schemas/NetworkFunctionConfigurationType'
          description: The value which indicates if NF  values are secrets
        roleOverrideValues:
          type: array
          items:
            $ref: '#/components/schemas/RoleOverrideValues'
          description: The role configuration override values from the user.
    NetworkFunctionValueWithSecrets:
      description: NetworkFunction with secrets.
      x-ms-discriminator-value: Secret
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function resource.
        publisherName:
          type: string
          description: The publisher name for the network function.
        publisherScope:
          $ref: '#/components/schemas/PublisherScope'
          description: The scope of the publisher.
        networkFunctionDefinitionGroupName:
          type: string
          description: The network function definition group name for the network function.
        networkFunctionDefinitionVersion:
          type: string
          description: The network function definition version for the network function.
        networkFunctionDefinitionOfferingLocation:
          type: string
          description: The location of the network function definition offering.
        networkFunctionDefinitionVersionResourceReference:
          $ref: '#/components/schemas/DeploymentResourceIdReference'
          description: The network function definition version resource reference.
        nfviType:
          $ref: '#/components/schemas/NFVIType'
          description: The nfvi type for the network function.
        nfviId:
          type: string
          description: The nfviId for the network function.
        allowSoftwareUpdate:
          type: boolean
          description: Indicates if software updates are allowed during deployment.
        configurationType:
          $ref: '#/components/schemas/NetworkFunctionConfigurationType'
          description: The value which indicates if NF  values are secrets
        roleOverrideValues:
          type: array
          items:
            $ref: '#/components/schemas/RoleOverrideValues'
          description: The role configuration override values from the user.
        secretDeploymentValues:
          type: string
          description: The JSON-serialized secret deployment values from the user. This contains secrets like passwords,keys etc
          x-ms-secret: true
          x-ms-mutability:
            - create
            - update
      type: object
    NetworkFunctionValueWithoutSecrets:
      description: NetworkFunction with no secrets.
      x-ms-discriminator-value: Open
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function resource.
        publisherName:
          type: string
          description: The publisher name for the network function.
        publisherScope:
          $ref: '#/components/schemas/PublisherScope'
          description: The scope of the publisher.
        networkFunctionDefinitionGroupName:
          type: string
          description: The network function definition group name for the network function.
        networkFunctionDefinitionVersion:
          type: string
          description: The network function definition version for the network function.
        networkFunctionDefinitionOfferingLocation:
          type: string
          description: The location of the network function definition offering.
        networkFunctionDefinitionVersionResourceReference:
          $ref: '#/components/schemas/DeploymentResourceIdReference'
          description: The network function definition version resource reference.
        nfviType:
          $ref: '#/components/schemas/NFVIType'
          description: The nfvi type for the network function.
        nfviId:
          type: string
          description: The nfviId for the network function.
        allowSoftwareUpdate:
          type: boolean
          description: Indicates if software updates are allowed during deployment.
        configurationType:
          $ref: '#/components/schemas/NetworkFunctionConfigurationType'
          description: The value which indicates if NF  values are secrets
        roleOverrideValues:
          type: array
          items:
            $ref: '#/components/schemas/RoleOverrideValues'
          description: The role configuration override values from the user.
        deploymentValues:
          type: string
          description: The JSON-serialized deployment values from the user.
      type: object
    NetworkFunctionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunction'
          description: A list of network function resources in a subscription or resource group.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for network function API service call.
    NetworkFunctionConfigurationType:
      type: string
      description: The secret type which indicates if secret or not.
      enum:
        - Unknown
        - Secret
        - Open
      x-ms-enum:
        name: NetworkFunctionConfigurationType
        modelAsString: true
    RoleOverrideValues:
      type: string
      description: The JSON-serialized role configuration override values.
    Component:
      x-ms-azure-resource: true
      description: The component sub resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/ComponentProperties'
          description: The component properties.
      type: object
    ComponentProperties:
      type: object
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the component resource.
        deploymentProfile:
          readOnly: true
          type: string
          description: The JSON-serialized deployment profile of the component resource.
        deploymentStatus:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/DeploymentStatusProperties'
          description: The deployment status of the component resource.
      description: The component properties of the network function.
    DeploymentStatusProperties:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the component resource.
        resources:
          $ref: '#/components/schemas/Resources'
          description: The resource related to the component resource.
        nextExpectedUpdateAt:
          type: string
          format: date-time
          description: The next expected update of deployment status.
      description: The deployment status properties of the network function component.
    Status:
      type: string
      description: The component resource deployment status.
      enum:
        - Unknown
        - Deployed
        - Uninstalled
        - Superseded
        - Failed
        - Uninstalling
        - Pending-Install
        - Pending-Upgrade
        - Pending-Rollback
        - Downloading
        - Installing
        - Reinstalling
        - Rollingback
        - Upgrading
      x-ms-enum:
        name: Status
        modelAsString: true
    Resources:
      type: object
      properties:
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/Deployment'
          description: Deployments that are related to component resource.
          x-ms-identifiers: []
        pods:
          type: array
          items:
            $ref: '#/components/schemas/Pod'
          description: Pods related to component resource.
          x-ms-identifiers: []
        replicaSets:
          type: array
          items:
            $ref: '#/components/schemas/ReplicaSet'
          description: Replica sets related to component resource.
          x-ms-identifiers: []
        statefulSets:
          type: array
          items:
            $ref: '#/components/schemas/StatefulSet'
          description: Stateful sets related to component resource.
          x-ms-identifiers: []
        daemonSets:
          type: array
          items:
            $ref: '#/components/schemas/DaemonSet'
          description: Daemonsets related to component resource.
          x-ms-identifiers: []
      description: The resources of the network function component.
    Deployment:
      type: object
      properties:
        name:
          type: string
          description: The name of the deployment.
        namespace:
          type: string
          description: The namespace of the deployment.
        desired:
          type: integer
          format: int32
          description: Desired number of pods
        ready:
          type: integer
          format: int32
          description: Number of ready pods.
        upToDate:
          type: integer
          format: int32
          description: Number of upto date pods.
        available:
          type: integer
          format: int32
          description: Number of available pods.
        creationTime:
          type: string
          format: date-time
          description: Creation Time of deployment.
      description: Helm Deployment status properties.
    Pod:
      type: object
      properties:
        name:
          type: string
          description: The name of the Pod.
        namespace:
          type: string
          description: The namespace of the Pod.
        desired:
          type: integer
          format: int32
          description: Desired number of containers
        ready:
          type: integer
          format: int32
          description: Number of ready containers.
        status:
          $ref: '#/components/schemas/PodStatus'
          description: The status of a pod.
        creationTime:
          type: string
          format: date-time
          description: Creation Time of Pod.
        events:
          type: array
          items:
            $ref: '#/components/schemas/PodEvent'
          description: Last 5 Pod events.
          x-ms-identifiers: []
      description: Helm Pod status properties.
    PodStatus:
      type: string
      description: The status of a Pod.
      enum:
        - Unknown
        - Succeeded
        - Failed
        - Running
        - Pending
        - Terminating
        - NotReady
      x-ms-enum:
        name: PodStatus
        modelAsString: true
    PodEvent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PodEventType'
          description: The type of pod event.
        reason:
          type: string
          description: Event reason.
        message:
          type: string
          description: Event message.
        lastSeenTime:
          type: string
          format: date-time
          description: Event Last seen.
      description: Pod Event  properties.
    PodEventType:
      type: string
      description: The type of pod event.
      enum:
        - Normal
        - Warning
      x-ms-enum:
        name: PodEventType
        modelAsString: true
    ReplicaSet:
      type: object
      properties:
        name:
          type: string
          description: The name of the replicaSet.
        namespace:
          type: string
          description: The namespace of the replicaSet.
        desired:
          type: integer
          format: int32
          description: Desired number of pods
        ready:
          type: integer
          format: int32
          description: Number of ready pods.
        current:
          type: integer
          format: int32
          description: Number of current pods.
        creationTime:
          type: string
          format: date-time
          description: Creation Time of replicaSet.
      description: Helm ReplicaSet status properties.
    StatefulSet:
      type: object
      properties:
        name:
          type: string
          description: The name of the statefulset.
        namespace:
          type: string
          description: The namespace of the statefulset.
        desired:
          type: integer
          format: int32
          description: Desired number of pods
        ready:
          type: integer
          format: int32
          description: Number of ready pods.
        creationTime:
          type: string
          format: date-time
          description: Creation Time of statefulset.
      description: Helm StatefulSet status properties.
    DaemonSet:
      type: object
      properties:
        name:
          type: string
          description: The name of the daemonSet.
        namespace:
          type: string
          description: The namespace of the daemonSet.
        desired:
          type: integer
          format: int32
          description: Desired number of pods
        current:
          type: integer
          format: int32
          description: Current number of pods
        ready:
          type: integer
          format: int32
          description: Number of Ready pods
        upToDate:
          type: integer
          format: int32
          description: Number of  upto date pods
        available:
          type: integer
          format: int32
          description: Number of available pods.
        creationTime:
          type: string
          format: date-time
          description: Creation Time of daemonSet.
      description: Helm DaemonSet status properties.
    ComponentListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Component'
          description: A list of component resources in a networkFunction.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for list component API service call.
    ExecuteRequestParameters:
      type: object
      properties:
        serviceEndpoint:
          type: string
          description: The endpoint of service to call.
        requestMetadata:
          $ref: '#/components/schemas/RequestMetadata'
          description: The request metadata.
      required:
        - serviceEndpoint
        - requestMetadata
      description: Payload for execute request post call.
    RequestMetadata:
      type: object
      properties:
        relativePath:
          type: string
          description: The relative path of the request.
        httpMethod:
          type: string
          description: The http method of the request.
          enum:
            - Unknown
            - Post
            - Put
            - Get
            - Patch
            - Delete
          x-ms-enum:
            name: HttpMethod
            modelAsString: true
        serializedBody:
          type: string
          description: The serialized body of the request.
        apiVersion:
          type: string
          description: The api version of the request.
      required:
        - relativePath
        - httpMethod
        - serializedBody
      description: Request metadata of execute request post call payload.
    Publisher:
      description: publisher resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/PublisherPropertiesFormat'
          description: Publisher properties.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed identity of the publisher, if configured.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    PublisherPropertiesFormat:
      description: publisher properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the publisher resource.
        scope:
          description: The publisher scope.
          $ref: '#/components/schemas/PublisherScope'
          x-ms-mutability:
            - read
            - create
    PublisherListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Publisher'
          description: A list of publishers.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: A list of publishers.
    ArtifactStore:
      description: Artifact store properties.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/ArtifactStorePropertiesFormat'
          description: ArtifactStores properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ArtifactStorePropertiesFormat:
      description: Artifact store properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application groups resource.
        storeType:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The artifact store type.
          enum:
            - Unknown
            - AzureContainerRegistry
            - AzureStorageAccount
          x-ms-enum:
            name: ArtifactStoreType
            modelAsString: true
        backingResourcePublicNetworkAccess:
          $ref: '#/components/schemas/backingResourcePublicNetworkAccess'
          description: The artifact store backing resource network access type
        replicationStrategy:
          type: string
          description: The replication strategy.
          enum:
            - Unknown
            - SingleReplication
          x-ms-enum:
            name: ArtifactReplicationStrategy
            modelAsString: true
        managedResourceGroupConfiguration:
          type: object
          properties:
            name:
              type: string
              x-ms-mutability:
                - read
                - create
              description: The managed resource group name.
            location:
              type: string
              x-ms-mutability:
                - read
                - create
              description: The managed resource group location.
        storageResourceId:
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          description: The created storage resource id
    ArtifactStoreListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactStore'
          description: A list of artifact stores.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: A list of artifact stores.
    ArtifactStoreNetworkFabricControllerEndPoints:
      type: object
      properties:
        networkFabricControllerIds:
          type: array
          items:
            $ref: '#/components/schemas/ReferencedResource'
          description: list of network fabric controllers.
          x-ms-identifiers:
            - id
      description: List of network fabric controller ids.
    ArtifactStoreNetworkFabricControllerEndPointsList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactStoreNetworkFabricControllerEndPoints'
          description: A list of network fabric controllers.
        nextLink:
          readOnly: true
          type: string
          description: The URI to get the next set of results.
          format: uri
      description: List of manual private endpoints.
    ArtifactStorePrivateEndPointsFormat:
      type: object
      properties:
        manualPrivateEndPointConnections:
          type: array
          items:
            $ref: '#/components/schemas/ReferencedResource'
          description: list of private endpoints.
          x-ms-identifiers:
            - id
      description: List of manual private endpoints.
    ArtifactStorePrivateEndPointsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactStorePrivateEndPointsFormat'
          description: A list of private endpoints.
        nextLink:
          readOnly: true
          type: string
          description: The URI to get the next set of results.
      description: List of manual private endpoints.
    ArtifactManifestListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactManifest'
          description: A list of artifact manifests.
        nextLink:
          readOnly: true
          type: string
          description: The URI to get the next set of results.
      description: A list of artifact manifests.
    ArtifactManifest:
      description: Artifact manifest properties.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/ArtifactManifestPropertiesFormat'
          description: Artifact manifest properties.
      type: object
    ArtifactManifestPropertiesFormat:
      description: Artifact manifest properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the ArtifactManifest resource.
        artifactManifestState:
          readOnly: true
          description: The artifact manifest state.
          $ref: '#/components/schemas/ArtifactManifestState'
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/ManifestArtifactFormat'
          x-ms-identifiers:
            - artifactName
            - artifactType
            - artifactVersion
          description: The artifacts list.
    ManifestArtifactFormat:
      description: Manifest artifact properties.
      type: object
      properties:
        artifactName:
          type: string
          description: The artifact name
          x-ms-mutability:
            - read
            - create
        artifactType:
          $ref: '#/components/schemas/ArtifactType'
          description: The artifact type.
          x-ms-mutability:
            - read
            - create
        artifactVersion:
          type: string
          description: The artifact version.
          x-ms-mutability:
            - read
            - create
    ArtifactManifestUpdateState:
      description: The artifact manifest updating request payload. Only the 'Uploaded' state is allowed for updates. Other states are used for internal state transitioning.
      type: object
      properties:
        artifactManifestState:
          description: The artifact manifest state.
          $ref: '#/components/schemas/ArtifactManifestState'
          x-ms-mutability:
            - read
            - create
    ArtifactManifestState:
      type: string
      description: The artifact manifest state.
      enum:
        - Unknown
        - Uploading
        - Uploaded
        - Validating
        - ValidationFailed
        - Succeeded
      x-ms-enum:
        name: ArtifactManifestState
        modelAsString: true
    ArtifactType:
      type: string
      description: The artifact type.
      enum:
        - Unknown
        - OCIArtifact
        - VhdImageFile
        - ArmTemplate
        - ImageFile
      x-ms-enum:
        name: ArtifactType
        modelAsString: true
    SiteNetworkService:
      description: Site network service resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/SiteNetworkServicePropertiesFormat'
          description: Site network service properties.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed identity of the Site network service, if configured.
        sku:
          $ref: '#/components/schemas/Sku'
          description: Sku of the site network service.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SiteNetworkServicePropertiesFormat:
      type: object
      description: Site network service properties.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the site network service resource.
        managedResourceGroupConfiguration:
          $ref: '#/components/schemas/ManagedResourceGroupConfiguration'
        siteReference:
          $ref: '#/components/schemas/ReferencedResource'
          description: The site details
        publisherName:
          readOnly: true
          type: string
          description: The publisher name for the site network service.
        publisherScope:
          readOnly: true
          $ref: '#/components/schemas/PublisherScope'
          description: The scope of the publisher.
        networkServiceDesignGroupName:
          readOnly: true
          type: string
          description: The network service design group name for the site network service.
        networkServiceDesignVersionName:
          readOnly: true
          type: string
          description: The network service design version for the site network service.
        networkServiceDesignVersionOfferingLocation:
          readOnly: true
          type: string
          description: The location of the network service design offering.
        networkServiceDesignVersionResourceReference:
          $ref: '#/components/schemas/DeploymentResourceIdReference'
          description: The network service design version resource reference.
        desiredStateConfigurationGroupValueReferences:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReferencedResource'
          description: The goal state of the site network service resource. This has references to the configuration group value objects that describe the desired state of the site network service.
        lastStateNetworkServiceDesignVersionName:
          readOnly: true
          type: string
          description: The network service design version for the site network service.
        lastStateConfigurationGroupValueReferences:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/ReferencedResource'
          description: The last state of the site network service resource.
    SiteNetworkServiceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SiteNetworkService'
          description: A list of site network services in a resource group.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for site network services API service call.
    ConfigurationGroupSchema:
      description: Configuration group schema resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/ConfigurationGroupSchemaPropertiesFormat'
          description: Configuration group schema properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ConfigurationGroupSchemaPropertiesFormat:
      description: Configuration group schema properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Configuration group schema resource.
        versionState:
          readOnly: true
          description: The configuration group schema version state.
          $ref: '#/components/schemas/ConfigurationGroupSchemaVersionState'
        description:
          type: string
          description: Description of what schema can contain.
        schemaDefinition:
          type: string
          description: Name and value pairs that define the configuration value. It can be a well formed escaped JSON string.
    ConfigurationGroupSchemaListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroupSchema'
          description: A list of configuration group schema.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: A list of configuration group schema resources.
    ConfigurationGroupSchemaVersionState:
      type: string
      description: The configuration group schema state.
      enum:
        - Unknown
        - Preview
        - Active
        - Deprecated
      x-ms-enum:
        name: versionState
        modelAsString: true
    ConfigurationGroupSchemaVersionUpdateState:
      type: object
      description: Publisher configuration group schema update request definition.
      properties:
        versionState:
          description: The configuration group schema state.
          $ref: '#/components/schemas/ConfigurationGroupSchemaVersionState'
          x-ms-mutability:
            - read
            - create
    ReferencedResource:
      type: object
      properties:
        id:
          type: string
          description: Resource ID.
      description: Reference to another resource.
      x-ms-azure-resource: true
    CustomLocationResourceId:
      type: object
      properties:
        id:
          type: string
          pattern: ^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\.[eE][xX][tT][eE][nN][dD][eE][dD][lL][oO][cC][aA][tT][iI][oO][nN]/[cC][uU][sS][tT][oO][mM][lL][oO][cC][aA][tT][iI][oO][nN][sS]/[^/?#]+$
          description: Azure ARC custom location resource ID.
      description: Reference to an Azure ARC custom location resource.
      x-ms-azure-resource: true
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Unknown
        - Succeeded
        - Accepted
        - Deleting
        - Failed
        - Canceled
        - Deleted
        - Converging
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    NetworkFunctionType:
      type: string
      description: The network function type.
      enum:
        - Unknown
        - VirtualNetworkFunction
        - ContainerizedNetworkFunction
      x-ms-mutability:
        - read
        - create
      x-ms-enum:
        name: NetworkFunctionType
        modelAsString: true
    NFVIType:
      type: string
      description: The NFVI type.
      enum:
        - Unknown
        - AzureArcKubernetes
        - AzureCore
        - AzureOperatorNexus
      x-ms-enum:
        name: NFVIType
        modelAsString: true
    backingResourcePublicNetworkAccess:
      type: string
      x-ms-mutability:
        - read
        - create
      description: The backing resource network access type.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: backingResourcePublicNetworkAccess
        modelAsString: true
    TagsObject:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
    NetworkFunctionApplication:
      description: Network function application definition.
      type: object
      properties:
        name:
          type: string
          description: The name of the network function application.
        dependsOnProfile:
          description: Depends on profile definition.
          $ref: '#/components/schemas/DependsOnProfile'
    DependsOnProfile:
      description: Depends on profile definition.
      type: object
      properties:
        installDependsOn:
          type: array
          description: Application installation operation dependency.
          items:
            type: string
          x-ms-identifiers: []
        uninstallDependsOn:
          type: array
          description: Application deletion operation dependency.
          items:
            type: string
          x-ms-identifiers: []
        updateDependsOn:
          type: array
          description: Application update operation dependency.
          items:
            type: string
          x-ms-identifiers: []
    ArtifactProfile:
      description: Artifact profile properties.
      type: object
      properties:
        artifactStore:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to artifact store.
    MappingRuleProfile:
      description: Mapping rule profile properties.
      type: object
      properties:
        applicationEnablement:
          type: string
          description: The application enablement.
          enum:
            - Unknown
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationEnablement
            modelAsString: true
    GenericParameters:
      description: The parameters for the generic object.
      properties: {}
      type: object
    ConfigurationGroup:
      additionalProperties:
        type: object
      description: The configuration group in form of {key, value}.
      properties: {}
      type: object
    ConfigurationGroups:
      additionalProperties:
        $ref: '#/components/schemas/ConfigurationGroup'
      description: The configuration object for the specified cluster.
      properties: {}
      type: object
    ManagedResourceGroupConfiguration:
      description: Managed resource group configuration.
      type: object
      properties:
        name:
          type: string
          description: Managed resource group name.
        location:
          type: string
          description: Managed resource group location.
    PublisherScope:
      type: string
      description: Publisher Scope.
      enum:
        - Unknown
        - Private
      x-ms-enum:
        name: PublisherScope
        modelAsString: true
    ArtifactAccessCredential:
      description: The artifact manifest credential definition.
      type: object
      discriminator:
        propertyName: credentialType
      required:
        - credentialType
      properties:
        credentialType:
          type: string
          description: The credential type.
          enum:
            - Unknown
            - AzureContainerRegistryScopedToken
            - AzureStorageAccountToken
          x-ms-enum:
            name: CredentialType
            modelAsString: true
    AzureContainerRegistryScopedTokenCredential:
      description: The azure container registry scoped token credential definition.
      x-ms-discriminator-value: AzureContainerRegistryScopedToken
      properties:
        credentialType:
          type: string
          description: The credential type.
          enum:
            - Unknown
            - AzureContainerRegistryScopedToken
            - AzureStorageAccountToken
          x-ms-enum:
            name: CredentialType
            modelAsString: true
        username:
          type: string
          description: The username of the credential.
        acrToken:
          type: string
          description: The credential value.
        acrServerUrl:
          type: string
          description: The Acr server url
        repositories:
          type: array
          description: The repositories that could be accessed using the current credential.
          items:
            type: string
            description: The repository that could be accessed using the current credential.
          x-ms-identifiers: []
        expiry:
          type: string
          format: date-time
          description: The UTC time when credential will expire.
      type: object
    AzureStorageAccountCredential:
      description: The azure storage account credential definition.
      x-ms-discriminator-value: AzureStorageAccountToken
      properties:
        credentialType:
          type: string
          description: The credential type.
          enum:
            - Unknown
            - AzureContainerRegistryScopedToken
            - AzureStorageAccountToken
          x-ms-enum:
            name: CredentialType
            modelAsString: true
        storageAccountId:
          type: string
          description: The storage account Id
        containerCredentials:
          type: array
          description: The containers that could be accessed using the current credential.
          items:
            $ref: '#/components/schemas/AzureStorageAccountContainerCredential'
            description: The container that could be accessed using the current credential.
          x-ms-identifiers: []
        expiry:
          type: string
          format: date-time
          description: The UTC time when credential will expire.
      type: object
    AzureStorageAccountContainerCredential:
      description: The azure storage account container credential definition.
      type: object
      properties:
        containerName:
          type: string
          description: The storage account container name
        containerSasUri:
          type: string
          description: The storage account container sas uri
    DeploymentResourceIdReference:
      description: The azure resource reference which is used for deployment.
      type: object
      discriminator:
        propertyName: idType
      required:
        - idType
      properties:
        idType:
          description: The resource reference arm id type.
          $ref: '#/components/schemas/IdType'
    SecretDeploymentResourceReference:
      description: Secret deployment resource id reference.
      x-ms-discriminator-value: Secret
      properties:
        idType:
          description: The resource reference arm id type.
          $ref: '#/components/schemas/IdType'
        id:
          type: string
          x-ms-secret: true
          description: Resource ID.
          x-ms-mutability:
            - create
            - update
      type: object
    OpenDeploymentResourceReference:
      description: Non secret deployment resource id reference.
      x-ms-discriminator-value: Open
      x-ms-azure-resource: true
      properties:
        idType:
          description: The resource reference arm id type.
          $ref: '#/components/schemas/IdType'
        id:
          type: string
          description: Resource ID.
      type: object
    IdType:
      type: string
      description: The resource reference arm id type.
      default: Open
      enum:
        - Unknown
        - Open
        - Secret
      x-ms-enum:
        name: idType
        modelAsString: true
    configurationGroupValue:
      description: Hybrid configuration group value resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/configurationGroupValuePropertiesFormat'
          description: Hybrid configuration group value properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    configurationGroupValuePropertiesFormat:
      type: object
      description: Hybrid configuration group value properties.
      required:
        - configurationType
      discriminator:
        propertyName: configurationType
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the site resource.
        publisherName:
          readOnly: true
          type: string
          description: The publisher name for the configuration group schema.
        publisherScope:
          readOnly: true
          $ref: '#/components/schemas/PublisherScope'
          description: The scope of the publisher.
        configurationGroupSchemaName:
          readOnly: true
          type: string
          description: The configuration group schema name.
        configurationGroupSchemaOfferingLocation:
          readOnly: true
          type: string
          description: The location of the configuration group schema offering.
        configurationGroupSchemaResourceReference:
          $ref: '#/components/schemas/DeploymentResourceIdReference'
          description: The configuration group schema resource reference.
        configurationType:
          $ref: '#/components/schemas/configurationGroupValueConfigurationType'
          description: The value which indicates if configuration values are secrets
    ConfigurationValueWithSecrets:
      description: The ConfigurationValue with secrets.
      x-ms-discriminator-value: Secret
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the site resource.
        publisherName:
          readOnly: true
          type: string
          description: The publisher name for the configuration group schema.
        publisherScope:
          readOnly: true
          $ref: '#/components/schemas/PublisherScope'
          description: The scope of the publisher.
        configurationGroupSchemaName:
          readOnly: true
          type: string
          description: The configuration group schema name.
        configurationGroupSchemaOfferingLocation:
          readOnly: true
          type: string
          description: The location of the configuration group schema offering.
        configurationGroupSchemaResourceReference:
          $ref: '#/components/schemas/DeploymentResourceIdReference'
          description: The configuration group schema resource reference.
        configurationType:
          $ref: '#/components/schemas/configurationGroupValueConfigurationType'
          description: The value which indicates if configuration values are secrets
        secretConfigurationValue:
          type: string
          description: Name and value pairs that define the configuration value secrets. It can be a well formed escaped JSON string.
          x-ms-secret: true
          x-ms-mutability:
            - create
            - update
      type: object
    ConfigurationValueWithoutSecrets:
      description: The ConfigurationValue with no secrets.
      x-ms-discriminator-value: Open
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the site resource.
        publisherName:
          readOnly: true
          type: string
          description: The publisher name for the configuration group schema.
        publisherScope:
          readOnly: true
          $ref: '#/components/schemas/PublisherScope'
          description: The scope of the publisher.
        configurationGroupSchemaName:
          readOnly: true
          type: string
          description: The configuration group schema name.
        configurationGroupSchemaOfferingLocation:
          readOnly: true
          type: string
          description: The location of the configuration group schema offering.
        configurationGroupSchemaResourceReference:
          $ref: '#/components/schemas/DeploymentResourceIdReference'
          description: The configuration group schema resource reference.
        configurationType:
          $ref: '#/components/schemas/configurationGroupValueConfigurationType'
          description: The value which indicates if configuration values are secrets
        configurationValue:
          type: string
          description: Name and value pairs that define the configuration value. It can be a well formed escaped JSON string.
      type: object
    configurationGroupValueListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/configurationGroupValue'
          description: A list of hybrid configurationGroups.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for hybrid configurationGroups API service call.
    configurationGroupValueConfigurationType:
      type: string
      description: The secret type which indicates if secret or not.
      enum:
        - Unknown
        - Secret
        - Open
      x-ms-enum:
        name: ConfigurationGroupValueConfigurationType
        modelAsString: true
    ProxyArtifactOverviewListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProxyArtifactListOverview'
          description: A list of available proxy artifacts.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: The proxy artifact list result.
    ProxyArtifactVersionsOverviewListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProxyArtifactVersionsListOverview'
          description: A list of available proxy artifacts.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: The proxy artifact list result.
    ProxyArtifactVersionsListOverview:
      readOnly: true
      description: The proxy artifact overview.
      properties:
        properties:
          x-ms-client-flatten: false
          readOnly: true
          $ref: '#/components/schemas/ProxyArtifactOverviewPropertiesValue'
          description: Proxy Artifact overview properties.
      type: object
    ProxyArtifactListOverview:
      readOnly: true
      description: The proxy artifact overview.
      properties: {}
      type: object
    ProxyArtifactOverview:
      readOnly: true
      description: The proxy artifact overview.
      properties:
        properties:
          x-ms-client-flatten: false
          readOnly: true
          $ref: '#/components/schemas/ProxyArtifactOverviewPropertiesFormat'
          description: Proxy Artifact properties overview.
      type: object
    ProxyArtifactOverviewPropertiesFormat:
      description: Proxy Artifact overview properties.
      type: object
      properties:
        artifactVersions:
          type: array
          items:
            $ref: '#/components/schemas/ProxyArtifactOverviewPropertiesValue'
          description: The proxy artifact overview properties.
          x-ms-identifiers: []
    ProxyArtifactOverviewPropertiesValue:
      type: object
      properties:
        artifactType:
          $ref: '#/components/schemas/ArtifactType'
          description: The artifact type.
        artifactVersion:
          type: string
          description: The artifact version.
        artifactState:
          $ref: '#/components/schemas/ArtifactState'
          description: The artifact state
    ArtifactChangeState:
      description: The artifact updating request payload.
      properties:
        properties:
          $ref: '#/components/schemas/ArtifactChangeStateProperties'
          description: Artifact update state properties.
      type: object
    ArtifactChangeStateProperties:
      description: The artifact update state properties.
      type: object
      properties:
        artifactState:
          $ref: '#/components/schemas/ArtifactState'
          description: The artifact state
    ArtifactState:
      type: string
      description: The artifact state.
      enum:
        - Unknown
        - Preview
        - Active
        - Deprecated
      x-ms-enum:
        name: ArtifactState
        modelAsString: true
    NetworkFunctionDefinitionGroup:
      description: Network function definition group resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/NetworkFunctionDefinitionGroupPropertiesFormat'
          description: Network function definition group properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkFunctionDefinitionGroupPropertiesFormat:
      description: Network function definition group properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function definition groups resource.
        description:
          type: string
          description: The network function definition group description.
    NetworkFunctionDefinitionGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionDefinitionGroup'
          description: A list of network function definition group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: A list of network function definition group resources.
    NetworkFunctionDefinitionVersionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionDefinitionVersion'
          description: A list of network function definition versions.
        nextLink:
          readOnly: true
          type: string
          description: The URI to get the next set of results.
      description: A list of network function definition versions.
    NetworkFunctionDefinitionVersion:
      description: Network function definition version.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/NetworkFunctionDefinitionVersionPropertiesFormat'
          description: Network function definition version properties.
      type: object
    NetworkFunctionDefinitionVersionPropertiesFormat:
      description: Network function definition version properties.
      discriminator:
        propertyName: networkFunctionType
      required:
        - networkFunctionType
      type: object
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function definition version resource.
        versionState:
          readOnly: true
          description: The network function definition version state.
          $ref: '#/components/schemas/VersionState'
        description:
          type: string
          description: The network function definition version description.
        deployParameters:
          type: string
          description: The deployment parameters of the network function definition version.
        networkFunctionType:
          description: The network function type.
          $ref: '#/components/schemas/NetworkFunctionType'
    ContainerizedNetworkFunctionDefinitionVersion:
      description: Containerized network function network function definition version properties.
      x-ms-discriminator-value: ContainerizedNetworkFunction
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function definition version resource.
        versionState:
          readOnly: true
          description: The network function definition version state.
          $ref: '#/components/schemas/VersionState'
        description:
          type: string
          description: The network function definition version description.
        deployParameters:
          type: string
          description: The deployment parameters of the network function definition version.
        networkFunctionType:
          description: The network function type.
          $ref: '#/components/schemas/NetworkFunctionType'
        networkFunctionTemplate:
          description: Containerized network function template.
          $ref: '#/components/schemas/ContainerizedNetworkFunctionTemplate'
      type: object
    VirtualNetworkFunctionNetworkFunctionDefinitionVersion:
      description: Virtual network function network function definition version properties.
      x-ms-discriminator-value: VirtualNetworkFunction
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function definition version resource.
        versionState:
          readOnly: true
          description: The network function definition version state.
          $ref: '#/components/schemas/VersionState'
        description:
          type: string
          description: The network function definition version description.
        deployParameters:
          type: string
          description: The deployment parameters of the network function definition version.
        networkFunctionType:
          description: The network function type.
          $ref: '#/components/schemas/NetworkFunctionType'
        networkFunctionTemplate:
          description: Virtual network function template.
          $ref: '#/components/schemas/VirtualNetworkFunctionTemplate'
      type: object
    ContainerizedNetworkFunctionTemplate:
      description: Containerized network function template.
      discriminator:
        propertyName: nfviType
      required:
        - nfviType
      type: object
      properties:
        nfviType:
          type: string
          description: The network function type.
          enum:
            - Unknown
            - AzureArcKubernetes
          x-ms-enum:
            name: ContainerizedNetworkFunctionNFVIType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
    VirtualNetworkFunctionTemplate:
      description: Virtual network function template.
      discriminator:
        propertyName: nfviType
      required:
        - nfviType
      type: object
      properties:
        nfviType:
          type: string
          description: The network function type.
          enum:
            - Unknown
            - AzureCore
            - AzureOperatorNexus
          x-ms-enum:
            name: VirtualNetworkFunctionNFVIType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
    AzureArcKubernetesNetworkFunctionTemplate:
      description: Azure Arc kubernetes network function template.
      x-ms-discriminator-value: AzureArcKubernetes
      properties:
        nfviType:
          type: string
          description: The network function type.
          enum:
            - Unknown
            - AzureArcKubernetes
          x-ms-enum:
            name: ContainerizedNetworkFunctionNFVIType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        networkFunctionApplications:
          type: array
          description: Network function applications.
          items:
            $ref: '#/components/schemas/AzureArcKubernetesNetworkFunctionApplication'
          x-ms-identifiers:
            - name
      type: object
    AzureArcKubernetesNetworkFunctionApplication:
      description: Azure arc kubernetes network function application definition.
      discriminator:
        propertyName: artifactType
      required:
        - artifactType
      properties:
        name:
          type: string
          description: The name of the network function application.
        dependsOnProfile:
          description: Depends on profile definition.
          $ref: '#/components/schemas/DependsOnProfile'
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - HelmPackage
          x-ms-enum:
            name: AzureArcKubernetesArtifactType
            modelAsString: true
      type: object
    AzureArcKubernetesHelmApplication:
      description: Azure arc kubernetes helm application configurations.
      x-ms-discriminator-value: HelmPackage
      properties:
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - HelmPackage
          x-ms-enum:
            name: AzureArcKubernetesArtifactType
            modelAsString: true
        artifactProfile:
          description: Azure arc kubernetes artifact profile.
          $ref: '#/components/schemas/AzureArcKubernetesArtifactProfile'
        deployParametersMappingRuleProfile:
          description: Deploy mapping rule profile.
          $ref: '#/components/schemas/AzureArcKubernetesDeployMappingRuleProfile'
      type: object
    AzureArcKubernetesArtifactProfile:
      description: Azure arc kubernetes artifact profile properties.
      properties:
        artifactStore:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to artifact store.
        helmArtifactProfile:
          description: Helm artifact profile.
          $ref: '#/components/schemas/HelmArtifactProfile'
      type: object
    HelmArtifactProfile:
      description: Helm artifact profile.
      type: object
      properties:
        helmPackageName:
          type: string
          description: Helm package name.
        helmPackageVersionRange:
          type: string
          description: Helm package version range.
        registryValuesPaths:
          type: array
          description: The registry values path list.
          items:
            description: The registry values path.
            type: string
          x-ms-identifiers: []
        imagePullSecretsValuesPaths:
          type: array
          description: The image pull secrets values path list.
          items:
            description: The image pull secrets values path.
            type: string
          x-ms-identifiers: []
    AzureArcKubernetesDeployMappingRuleProfile:
      description: Azure arc kubernetes deploy mapping rule profile.
      properties:
        applicationEnablement:
          type: string
          description: The application enablement.
          enum:
            - Unknown
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationEnablement
            modelAsString: true
        helmMappingRuleProfile:
          description: The helm mapping rule profile.
          $ref: '#/components/schemas/HelmMappingRuleProfile'
      type: object
    HelmMappingRuleProfile:
      description: Helm mapping rule profile
      type: object
      properties:
        releaseNamespace:
          description: Helm release namespace.
          type: string
        releaseName:
          description: Helm release name.
          type: string
        helmPackageVersion:
          description: Helm package version.
          type: string
        values:
          description: Helm release values.
          type: string
          x-ms-mutability:
            - read
            - create
        options:
          type: object
          description: The helm deployment options
          properties:
            installOptions:
              $ref: '#/components/schemas/HelmInstallOptions'
              description: The helm deployment install options
            upgradeOptions:
              $ref: '#/components/schemas/HelmUpgradeOptions'
              description: The helm deployment upgrade options
    HelmInstallOptions:
      type: object
      description: The helm deployment install options
      properties:
        atomic:
          type: string
          description: The helm deployment atomic options
        wait:
          type: string
          description: The helm deployment wait options
        timeout:
          type: string
          description: The helm deployment timeout options
    HelmUpgradeOptions:
      type: object
      description: The helm deployment install options
      properties:
        atomic:
          type: string
          description: The helm deployment atomic options
        wait:
          type: string
          description: The helm deployment wait options
        timeout:
          type: string
          description: The helm deployment timeout options
    AzureCoreNetworkFunctionTemplate:
      description: Azure virtual network function template.
      x-ms-discriminator-value: AzureCore
      properties:
        nfviType:
          type: string
          description: The network function type.
          enum:
            - Unknown
            - AzureCore
            - AzureOperatorNexus
          x-ms-enum:
            name: VirtualNetworkFunctionNFVIType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        networkFunctionApplications:
          type: array
          description: Network function applications.
          items:
            $ref: '#/components/schemas/AzureCoreNetworkFunctionApplication'
          x-ms-identifiers:
            - name
      type: object
    AzureOperatorNexusNetworkFunctionTemplate:
      description: Azure Operator Distributed Services network function template.
      x-ms-discriminator-value: AzureOperatorNexus
      properties:
        nfviType:
          type: string
          description: The network function type.
          enum:
            - Unknown
            - AzureCore
            - AzureOperatorNexus
          x-ms-enum:
            name: VirtualNetworkFunctionNFVIType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        networkFunctionApplications:
          type: array
          description: Network function applications.
          items:
            $ref: '#/components/schemas/AzureOperatorNexusNetworkFunctionApplication'
          x-ms-identifiers:
            - name
      type: object
    AzureCoreNetworkFunctionApplication:
      description: Azure virtual network function application definition.
      discriminator:
        propertyName: artifactType
      required:
        - artifactType
      properties:
        name:
          type: string
          description: The name of the network function application.
        dependsOnProfile:
          description: Depends on profile definition.
          $ref: '#/components/schemas/DependsOnProfile'
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - VhdImageFile
            - ArmTemplate
          x-ms-enum:
            name: AzureCoreArtifactType
            modelAsString: true
      type: object
    AzureOperatorNexusNetworkFunctionApplication:
      description: Azure Operator Distributed Services network function application definition.
      discriminator:
        propertyName: artifactType
      required:
        - artifactType
      properties:
        name:
          type: string
          description: The name of the network function application.
        dependsOnProfile:
          description: Depends on profile definition.
          $ref: '#/components/schemas/DependsOnProfile'
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - ImageFile
            - ArmTemplate
          x-ms-enum:
            name: AzureOperatorNexusArtifactType
            modelAsString: true
      type: object
    AzureCoreNetworkFunctionVhdApplication:
      description: Azure core network function vhd application definition.
      x-ms-discriminator-value: VhdImageFile
      properties:
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - VhdImageFile
            - ArmTemplate
          x-ms-enum:
            name: AzureCoreArtifactType
            modelAsString: true
        artifactProfile:
          description: Azure vhd image artifact profile.
          $ref: '#/components/schemas/AzureCoreVhdImageArtifactProfile'
        deployParametersMappingRuleProfile:
          description: Deploy mapping rule profile.
          $ref: '#/components/schemas/AzureCoreVhdImageDeployMappingRuleProfile'
      type: object
    AzureCoreNetworkFunctionArmTemplateApplication:
      description: Azure core network function Template application definition.
      x-ms-discriminator-value: ArmTemplate
      properties:
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - VhdImageFile
            - ArmTemplate
          x-ms-enum:
            name: AzureCoreArtifactType
            modelAsString: true
        artifactProfile:
          description: Azure template artifact profile.
          $ref: '#/components/schemas/AzureCoreArmTemplateArtifactProfile'
        deployParametersMappingRuleProfile:
          description: Deploy mapping rule profile.
          $ref: '#/components/schemas/AzureCoreArmTemplateDeployMappingRuleProfile'
      type: object
    AzureOperatorNexusNetworkFunctionImageApplication:
      description: Azure Operator Distributed Services network function image application definition.
      x-ms-discriminator-value: ImageFile
      properties:
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - ImageFile
            - ArmTemplate
          x-ms-enum:
            name: AzureOperatorNexusArtifactType
            modelAsString: true
        artifactProfile:
          description: Azure Operator Distributed Services image artifact profile.
          $ref: '#/components/schemas/AzureOperatorNexusImageArtifactProfile'
        deployParametersMappingRuleProfile:
          description: Deploy mapping rule profile.
          $ref: '#/components/schemas/AzureOperatorNexusImageDeployMappingRuleProfile'
      type: object
    AzureOperatorNexusNetworkFunctionArmTemplateApplication:
      description: Azure Operator Distributed Services network function Template application definition.
      x-ms-discriminator-value: ArmTemplate
      properties:
        artifactType:
          type: string
          description: The artifact type.
          enum:
            - Unknown
            - ImageFile
            - ArmTemplate
          x-ms-enum:
            name: AzureOperatorNexusArtifactType
            modelAsString: true
        artifactProfile:
          description: Azure Operator Distributed Services Template artifact profile.
          $ref: '#/components/schemas/AzureOperatorNexusArmTemplateArtifactProfile'
        deployParametersMappingRuleProfile:
          description: Deploy mapping rule profile.
          $ref: '#/components/schemas/AzureOperatorNexusArmTemplateDeployMappingRuleProfile'
      type: object
    AzureCoreVhdImageArtifactProfile:
      description: Azure vhd artifact profile properties.
      properties:
        artifactStore:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to artifact store.
        vhdArtifactProfile:
          description: Vhd artifact profile.
          $ref: '#/components/schemas/VhdImageArtifactProfile'
      type: object
    AzureCoreArmTemplateArtifactProfile:
      description: Azure template artifact profile properties.
      properties:
        artifactStore:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to artifact store.
        templateArtifactProfile:
          description: Template artifact profile.
          $ref: '#/components/schemas/ArmTemplateArtifactProfile'
      type: object
    AzureOperatorNexusImageArtifactProfile:
      description: Azure Operator Distributed Services image artifact profile properties.
      properties:
        artifactStore:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to artifact store.
        imageArtifactProfile:
          description: Image artifact profile.
          $ref: '#/components/schemas/ImageArtifactProfile'
      type: object
    AzureOperatorNexusArmTemplateArtifactProfile:
      description: Azure Operator Distributed Services vhd artifact profile properties.
      properties:
        artifactStore:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to artifact store.
        templateArtifactProfile:
          description: Template artifact profile.
          $ref: '#/components/schemas/ArmTemplateArtifactProfile'
      type: object
    AzureCoreVhdImageDeployMappingRuleProfile:
      description: Azure vhd deploy mapping rule profile.
      properties:
        applicationEnablement:
          type: string
          description: The application enablement.
          enum:
            - Unknown
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationEnablement
            modelAsString: true
        vhdImageMappingRuleProfile:
          description: The vhd mapping rule profile.
          $ref: '#/components/schemas/VhdImageMappingRuleProfile'
      type: object
    AzureCoreArmTemplateDeployMappingRuleProfile:
      description: Azure template deploy mapping rule profile.
      properties:
        applicationEnablement:
          type: string
          description: The application enablement.
          enum:
            - Unknown
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationEnablement
            modelAsString: true
        templateMappingRuleProfile:
          description: The template mapping rule profile.
          $ref: '#/components/schemas/ArmTemplateMappingRuleProfile'
      type: object
    AzureOperatorNexusImageDeployMappingRuleProfile:
      description: Azure Operator Distributed Services image deploy mapping rule profile.
      properties:
        applicationEnablement:
          type: string
          description: The application enablement.
          enum:
            - Unknown
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationEnablement
            modelAsString: true
        imageMappingRuleProfile:
          description: The vhd mapping rule profile.
          $ref: '#/components/schemas/ImageMappingRuleProfile'
      type: object
    AzureOperatorNexusArmTemplateDeployMappingRuleProfile:
      description: Azure Operator Distributed Services template deploy mapping rule profile.
      properties:
        applicationEnablement:
          type: string
          description: The application enablement.
          enum:
            - Unknown
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationEnablement
            modelAsString: true
        templateMappingRuleProfile:
          description: The template mapping rule profile.
          $ref: '#/components/schemas/ArmTemplateMappingRuleProfile'
      type: object
    VhdImageArtifactProfile:
      description: Vhd artifact profile.
      type: object
      properties:
        vhdName:
          type: string
          description: Vhd name.
        vhdVersion:
          type: string
          description: Vhd version.
    VhdImageMappingRuleProfile:
      description: Vhd mapping rule profile
      type: object
      properties:
        userConfiguration:
          description: List of values.
          type: string
    ArmTemplateArtifactProfile:
      description: Template artifact profile.
      type: object
      properties:
        templateName:
          type: string
          description: Template name.
        templateVersion:
          type: string
          description: Template version.
    ArmTemplateMappingRuleProfile:
      description: Template mapping rule profile
      type: object
      properties:
        templateParameters:
          description: List of template parameters.
          type: string
    ImageArtifactProfile:
      description: Image artifact profile.
      type: object
      properties:
        imageName:
          type: string
          description: Image name.
        imageVersion:
          type: string
          description: Image version.
    ImageMappingRuleProfile:
      description: Image mapping rule profile
      type: object
      properties:
        userConfiguration:
          description: List of values.
          type: string
    VersionState:
      type: string
      description: The network function definition version state.
      enum:
        - Unknown
        - Preview
        - Validating
        - ValidationFailed
        - Active
        - Deprecated
      x-ms-enum:
        name: versionState
        modelAsString: true
    NetworkFunctionDefinitionVersionUpdateState:
      type: object
      description: Publisher network function definition version update request definition.
      properties:
        versionState:
          description: The network function definition version state. Only the 'Active' and 'Deprecated' states are allowed for updates. Other states are used for internal state transitioning.
          $ref: '#/components/schemas/VersionState'
          x-ms-mutability:
            - read
            - create
    Site:
      description: Site resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/SitePropertiesFormat'
          description: Site properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SitePropertiesFormat:
      type: object
      description: Site properties.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: 'The provisioning state of the site resource. **TODO**: Confirm if this is needed.'
        nfvis:
          type: array
          items:
            $ref: '#/components/schemas/NFVIs'
          description: List of NFVIs
          x-ms-identifiers:
            - name
        siteNetworkServiceReferences:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ReferencedResource'
          description: The list of site network services on the site.
          x-ms-identifiers:
            - id
    SiteListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Site'
          description: A list of sites in a resource group.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for sites API service call.
    NFVIs:
      required:
        - nfviType
      discriminator:
        propertyName: nfviType
      type: object
      properties:
        name:
          type: string
          description: Name of the nfvi.
        nfviType:
          $ref: '#/components/schemas/NFVIType'
          description: The NFVI type.
      description: The NFVI object.
    AzureCoreNFVIDetails:
      description: The Azure Core NFVI detail.
      x-ms-discriminator-value: AzureCore
      properties:
        name:
          type: string
          description: Name of the nfvi.
        nfviType:
          $ref: '#/components/schemas/NFVIType'
          description: The NFVI type.
        location:
          type: string
          description: Location of the Azure core.
      type: object
    AzureArcK8sClusterNFVIDetails:
      description: The AzureArcK8sCluster NFVI detail.
      x-ms-discriminator-value: AzureArcKubernetes
      properties:
        name:
          type: string
          description: Name of the nfvi.
        nfviType:
          $ref: '#/components/schemas/NFVIType'
          description: The NFVI type.
        customLocationReference:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to the custom location.
      type: object
    AzureOperatorNexusClusterNFVIDetails:
      description: The AzureOperatorNexusCluster NFVI detail.
      x-ms-discriminator-value: AzureOperatorNexus
      properties:
        name:
          type: string
          description: Name of the nfvi.
        nfviType:
          $ref: '#/components/schemas/NFVIType'
          description: The NFVI type.
        customLocationReference:
          $ref: '#/components/schemas/ReferencedResource'
          description: The reference to the custom location.
      type: object
    NetworkServiceDesignGroup:
      description: network service design group resource.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/NetworkServiceDesignGroupPropertiesFormat'
          description: network service design group properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkServiceDesignGroupPropertiesFormat:
      description: network service design group properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network service design groups resource.
        description:
          type: string
          description: The network service design group description.
    NetworkServiceDesignGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkServiceDesignGroup'
          description: A list of network service design group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: A list of network service design group resources.
    networkServiceDesignVersionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/networkServiceDesignVersion'
          description: A list of network service design versions.
        nextLink:
          readOnly: true
          type: string
          description: The URI to get the next set of results.
      description: A list of network service design versions.
    networkServiceDesignVersion:
      description: network service design version.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/networkServiceDesignVersionPropertiesFormat'
          description: network service design version properties.
      type: object
    networkServiceDesignVersionPropertiesFormat:
      description: network service design version properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          x-ms-mutability:
            - read
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network service design version resource.
        versionState:
          readOnly: true
          description: The network service design version state.
          $ref: '#/components/schemas/NSDVersionState'
        description:
          type: string
          description: The network service design version description.
        configurationGroupSchemaReferences:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReferencedResource'
          description: The configuration schemas to used to define the values.
        nfvisFromSite:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NfviDetails'
          description: The nfvis from the site.
        resourceElementTemplates:
          type: array
          items:
            $ref: '#/components/schemas/ResourceElementTemplate'
          description: List of resource element template
          x-ms-identifiers:
            - name
    NfviDetails:
      type: object
      properties:
        name:
          description: The nfvi name.
          type: string
        type:
          description: The nfvi type.
          type: string
      description: The nfvi details.
    ResourceElementTemplate:
      required:
        - type
      discriminator:
        propertyName: type
      type: object
      properties:
        name:
          type: string
          description: Name of the resource element template.
        type:
          $ref: '#/components/schemas/Type'
          description: The resource element template type.
          x-ms-client-name: ResourceElementType
        dependsOnProfile:
          $ref: '#/components/schemas/DependsOnProfile'
          description: The depends on profile.
      description: The resource element template object.
    Type:
      type: string
      description: The resource element template type.
      enum:
        - Unknown
        - ArmResourceDefinition
        - NetworkFunctionDefinition
      x-ms-enum:
        name: type
        modelAsString: true
    ArmResourceDefinitionResourceElementTemplateDetails:
      description: The arm resource definition resource element template details.
      x-ms-discriminator-value: ArmResourceDefinition
      properties:
        name:
          type: string
          description: Name of the resource element template.
        type:
          $ref: '#/components/schemas/Type'
          description: The resource element template type.
          x-ms-client-name: ResourceElementType
        dependsOnProfile:
          $ref: '#/components/schemas/DependsOnProfile'
          description: The depends on profile.
        configuration:
          $ref: '#/components/schemas/ArmResourceDefinitionResourceElementTemplate'
          description: The resource element template type.
      type: object
    ArmResourceDefinitionResourceElementTemplate:
      type: object
      properties:
        templateType:
          description: The template type.
          $ref: '#/components/schemas/TemplateType'
        parameterValues:
          type: string
          description: Name and value pairs that define the parameter values. It can be  a well formed escaped JSON string.
        artifactProfile:
          $ref: '#/components/schemas/NSDArtifactProfile'
          description: Artifact profile properties.
      description: The arm template RE.
    NetworkFunctionDefinitionResourceElementTemplateDetails:
      description: The network function definition resource element template details.
      x-ms-discriminator-value: NetworkFunctionDefinition
      properties:
        name:
          type: string
          description: Name of the resource element template.
        type:
          $ref: '#/components/schemas/Type'
          description: The resource element template type.
          x-ms-client-name: ResourceElementType
        dependsOnProfile:
          $ref: '#/components/schemas/DependsOnProfile'
          description: The depends on profile.
        configuration:
          $ref: '#/components/schemas/ArmResourceDefinitionResourceElementTemplate'
          description: The resource element template type.
      type: object
    NSDArtifactProfile:
      description: Artifact profile properties.
      type: object
      properties:
        artifactStoreReference:
          $ref: '#/components/schemas/ReferencedResource'
          description: The artifact store resource id
        artifactName:
          type: string
          description: Artifact name.
        artifactVersion:
          type: string
          description: Artifact version.
    TemplateType:
      type: string
      description: The template type.
      enum:
        - Unknown
        - ArmTemplate
      x-ms-enum:
        name: templateType
        modelAsString: true
    ConfigurationGenerationType:
      type: string
      description: The configuration generation type.
      enum:
        - Unknown
        - HandlebarTemplate
      x-ms-enum:
        name: configurationGenerationType
        modelAsString: true
    NSDVersionState:
      type: string
      description: The network service design version state.
      enum:
        - Unknown
        - Preview
        - Active
        - Deprecated
      x-ms-enum:
        name: versionState
        modelAsString: true
    NetworkServiceDesignVersionUpdateState:
      type: object
      description: Publisher network service design version update request definition.
      properties:
        versionState:
          description: The network service design version state.
          $ref: '#/components/schemas/NSDVersionState'
          x-ms-mutability:
            - read
            - create
  x-stackQL-resources:
    network_functions:
      id: azure.hybrid_network.network_functions
      name: network_functions
      title: network_functions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        execute_request:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1executeRequest~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/delete'
    network_functions_tags:
      id: azure.hybrid_network.network_functions_tags
      name: network_functions_tags
      title: network_functions_tags
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    components:
      id: azure.hybrid_network.components
      name: components
      title: components
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1components~1{componentName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_network_function:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1components~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/components/methods/get'
          - $ref: '#/components/x-stackQL-resources/components/methods/list_by_network_function'
        insert: []
        update: []
        replace: []
        delete: []
    publishers:
      id: azure.hybrid_network.publishers
      name: publishers
      title: publishers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1publishers~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/publishers/methods/get'
          - $ref: '#/components/x-stackQL-resources/publishers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/publishers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/publishers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/publishers/methods/delete'
    artifact_stores:
      id: azure.hybrid_network.artifact_stores
      name: artifact_stores
      title: artifact_stores
      methods:
        list_by_publisher:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_network_fabric_controller_end_points:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1addNetworkFabricControllerEndPoints~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_private_end_points:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1approvePrivateEndPoints~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_private_end_points:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1removePrivateEndPoints~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifact_stores/methods/get'
          - $ref: '#/components/x-stackQL-resources/artifact_stores/methods/list_by_publisher'
        insert:
          - $ref: '#/components/x-stackQL-resources/artifact_stores/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/artifact_stores/methods/delete'
    artifact_stores_network_fabric_controller_end_points:
      id: azure.hybrid_network.artifact_stores_network_fabric_controller_end_points
      name: artifact_stores_network_fabric_controller_end_points
      title: artifact_stores_network_fabric_controller_end_points
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1deleteNetworkFabricControllerEndPoints~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/artifact_stores_network_fabric_controller_end_points/methods/delete'
    artifact_stores_network_fabric_controller_private_end_points:
      id: azure.hybrid_network.artifact_stores_network_fabric_controller_private_end_points
      name: artifact_stores_network_fabric_controller_private_end_points
      title: artifact_stores_network_fabric_controller_private_end_points
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1listNetworkFabricControllerPrivateEndPoints~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifact_stores_network_fabric_controller_private_end_points/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    artifact_stores_private_end_points:
      id: azure.hybrid_network.artifact_stores_private_end_points
      name: artifact_stores_private_end_points
      title: artifact_stores_private_end_points
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1listPrivateEndPoints~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifact_stores_private_end_points/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    artifact_manifests:
      id: azure.hybrid_network.artifact_manifests
      name: artifact_manifests
      title: artifact_manifests
      methods:
        list_by_artifact_store:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactManifests~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactManifests~1{artifactManifestName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactManifests~1{artifactManifestName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactManifests~1{artifactManifestName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactManifests~1{artifactManifestName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifact_manifests/methods/get'
          - $ref: '#/components/x-stackQL-resources/artifact_manifests/methods/list_by_artifact_store'
        insert:
          - $ref: '#/components/x-stackQL-resources/artifact_manifests/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/artifact_manifests/methods/delete'
    artifact_manifests_credential:
      id: azure.hybrid_network.artifact_manifests_credential
      name: artifact_manifests_credential
      title: artifact_manifests_credential
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactManifests~1{artifactManifestName}~1listCredential~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifact_manifests_credential/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    artifact_manifests_state:
      id: azure.hybrid_network.artifact_manifests_state
      name: artifact_manifests_state
      title: artifact_manifests_state
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactManifests~1{artifactManifestName}~1updateState~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    site_network_services:
      id: azure.hybrid_network.site_network_services
      name: site_network_services
      title: site_network_services
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1siteNetworkServices~1{siteNetworkServiceName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1siteNetworkServices~1{siteNetworkServiceName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1siteNetworkServices~1{siteNetworkServiceName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1siteNetworkServices~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1siteNetworkServices~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/site_network_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/site_network_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/site_network_services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/site_network_services/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/site_network_services/methods/delete'
    site_network_services_tags:
      id: azure.hybrid_network.site_network_services_tags
      name: site_network_services_tags
      title: site_network_services_tags
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1siteNetworkServices~1{siteNetworkServiceName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    configuration_group_schemas:
      id: azure.hybrid_network.configuration_group_schemas
      name: configuration_group_schemas
      title: configuration_group_schemas
      methods:
        list_by_publisher:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1configurationGroupSchemas~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1configurationGroupSchemas~1{configurationGroupSchemaName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1configurationGroupSchemas~1{configurationGroupSchemaName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1configurationGroupSchemas~1{configurationGroupSchemaName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1configurationGroupSchemas~1{configurationGroupSchemaName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configuration_group_schemas/methods/get'
          - $ref: '#/components/x-stackQL-resources/configuration_group_schemas/methods/list_by_publisher'
        insert:
          - $ref: '#/components/x-stackQL-resources/configuration_group_schemas/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/configuration_group_schemas/methods/delete'
    configuration_group_schemas_state:
      id: azure.hybrid_network.configuration_group_schemas_state
      name: configuration_group_schemas_state
      title: configuration_group_schemas_state
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1configurationGroupSchemas~1{configurationGroupSchemaName}~1updateState~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    configuration_group_values:
      id: azure.hybrid_network.configuration_group_values
      name: configuration_group_values
      title: configuration_group_values
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1configurationGroupValues~1{configurationGroupValueName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1configurationGroupValues~1{configurationGroupValueName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1configurationGroupValues~1{configurationGroupValueName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1configurationGroupValues~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1configurationGroupValues~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configuration_group_values/methods/get'
          - $ref: '#/components/x-stackQL-resources/configuration_group_values/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/configuration_group_values/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/configuration_group_values/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/configuration_group_values/methods/delete'
    configuration_group_values_tags:
      id: azure.hybrid_network.configuration_group_values_tags
      name: configuration_group_values_tags
      title: configuration_group_values_tags
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1configurationGroupValues~1{configurationGroupValueName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    proxy_artifact:
      id: azure.hybrid_network.proxy_artifact
      name: proxy_artifact
      title: proxy_artifact
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactVersions~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/proxy_artifact/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    proxy_artifact_state:
      id: azure.hybrid_network.proxy_artifact_state
      name: proxy_artifact_state
      title: proxy_artifact_state
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1artifactStores~1{artifactStoreName}~1artifactVersions~1{artifactVersionName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    network_function_definition_groups:
      id: azure.hybrid_network.network_function_definition_groups
      name: network_function_definition_groups
      title: network_function_definition_groups
      methods:
        list_by_publisher:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_function_definition_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_function_definition_groups/methods/list_by_publisher'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_function_definition_groups/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_function_definition_groups/methods/delete'
    network_function_definition_versions:
      id: azure.hybrid_network.network_function_definition_versions
      name: network_function_definition_versions
      title: network_function_definition_versions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1networkFunctionDefinitionVersions~1{networkFunctionDefinitionVersionName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1networkFunctionDefinitionVersions~1{networkFunctionDefinitionVersionName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1networkFunctionDefinitionVersions~1{networkFunctionDefinitionVersionName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1networkFunctionDefinitionVersions~1{networkFunctionDefinitionVersionName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_network_function_definition_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1networkFunctionDefinitionVersions~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_function_definition_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_function_definition_versions/methods/list_by_network_function_definition_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_function_definition_versions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_function_definition_versions/methods/delete'
    network_function_definition_versions_state:
      id: azure.hybrid_network.network_function_definition_versions_state
      name: network_function_definition_versions_state
      title: network_function_definition_versions_state
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkFunctionDefinitionGroups~1{networkFunctionDefinitionGroupName}~1networkFunctionDefinitionVersions~1{networkFunctionDefinitionVersionName}~1updateState~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    sites:
      id: azure.hybrid_network.sites
      name: sites
      title: sites
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1sites~1{siteName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1sites~1{siteName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1sites~1{siteName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1sites~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1sites~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sites/methods/get'
          - $ref: '#/components/x-stackQL-resources/sites/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/sites/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/sites/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sites/methods/delete'
    sites_tags:
      id: azure.hybrid_network.sites_tags
      name: sites_tags
      title: sites_tags
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1sites~1{siteName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.hybrid_network.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.HybridNetwork~1operations~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    network_service_design_groups:
      id: azure.hybrid_network.network_service_design_groups
      name: network_service_design_groups
      title: network_service_design_groups
      methods:
        list_by_publisher:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_service_design_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_service_design_groups/methods/list_by_publisher'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_service_design_groups/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_service_design_groups/methods/delete'
    network_service_design_versions:
      id: azure.hybrid_network.network_service_design_versions
      name: network_service_design_versions
      title: network_service_design_versions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1networkServiceDesignVersions~1{networkServiceDesignVersionName}~1?api-version=2024-04-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1networkServiceDesignVersions~1{networkServiceDesignVersionName}~1?api-version=2024-04-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1networkServiceDesignVersions~1{networkServiceDesignVersionName}~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1networkServiceDesignVersions~1{networkServiceDesignVersionName}~1?api-version=2024-04-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_network_service_design_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1networkServiceDesignVersions~1?api-version=2024-04-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_service_design_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_service_design_versions/methods/list_by_network_service_design_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_service_design_versions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_service_design_versions/methods/delete'
    network_service_design_versions_state:
      id: azure.hybrid_network.network_service_design_versions_state
      name: network_service_design_versions_state
      title: network_service_design_versions_state
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1publishers~1{publisherName}~1networkServiceDesignGroups~1{networkServiceDesignGroupName}~1networkServiceDesignVersions~1{networkServiceDesignVersionName}~1updateState~1?api-version=2024-04-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vw_network_functions:
      id: azure.hybrid_network.vw_network_functions
      name: vw_network_functions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.publisherName') as publisher_name,
              JSON_EXTRACT(properties, '$.publisherScope') as publisher_scope,
              JSON_EXTRACT(properties, '$.networkFunctionDefinitionGroupName') as network_function_definition_group_name,
              JSON_EXTRACT(properties, '$.networkFunctionDefinitionVersion') as network_function_definition_version,
              JSON_EXTRACT(properties, '$.networkFunctionDefinitionOfferingLocation') as network_function_definition_offering_location,
              JSON_EXTRACT(properties, '$.networkFunctionDefinitionVersionResourceReference') as network_function_definition_version_resource_reference,
              JSON_EXTRACT(properties, '$.nfviType') as nfvi_type,
              JSON_EXTRACT(properties, '$.nfviId') as nfvi_id,
              JSON_EXTRACT(properties, '$.allowSoftwareUpdate') as allow_software_update,
              JSON_EXTRACT(properties, '$.configurationType') as configuration_type,
              JSON_EXTRACT(properties, '$.roleOverrideValues') as role_override_values,
              subscriptionId,
              resourceGroupName,
              networkFunctionName
              FROM azure.hybrid_network.network_functions
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.publisherName') as publisher_name,
                JSON_EXTRACT(properties, '$.publisherScope') as publisher_scope,
                JSON_EXTRACT(properties, '$.networkFunctionDefinitionGroupName') as network_function_definition_group_name,
                JSON_EXTRACT(properties, '$.networkFunctionDefinitionVersion') as network_function_definition_version,
                JSON_EXTRACT(properties, '$.networkFunctionDefinitionOfferingLocation') as network_function_definition_offering_location,
                JSON_EXTRACT(properties, '$.networkFunctionDefinitionVersionResourceReference') as network_function_definition_version_resource_reference,
                JSON_EXTRACT(properties, '$.nfviType') as nfvi_type,
                JSON_EXTRACT(properties, '$.nfviId') as nfvi_id,
                JSON_EXTRACT(properties, '$.allowSoftwareUpdate') as allow_software_update,
                JSON_EXTRACT(properties, '$.configurationType') as configuration_type,
                JSON_EXTRACT(properties, '$.roleOverrideValues') as role_override_values,
                subscriptionId,
                resourceGroupName,
                networkFunctionName
                FROM azure.hybrid_network.network_functions
                WHERE subscriptionId = 'replace-me';
    vw_components:
      id: azure.hybrid_network.vw_components
      name: vw_components
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.deploymentProfile') as deployment_profile,
              JSON_EXTRACT(properties, '$.deploymentStatus') as deployment_status,
              subscriptionId,
              resourceGroupName,
              networkFunctionName,
              componentName
              FROM azure.hybrid_network.components
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND networkFunctionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.deploymentProfile') as deployment_profile,
                JSON_EXTRACT(properties, '$.deploymentStatus') as deployment_status,
                subscriptionId,
                resourceGroupName,
                networkFunctionName,
                componentName
                FROM azure.hybrid_network.components
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND networkFunctionName = 'replace-me';
    vw_publishers:
      id: azure.hybrid_network.vw_publishers
      name: vw_publishers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.scope') as scope,
              subscriptionId,
              resourceGroupName,
              publisherName
              FROM azure.hybrid_network.publishers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.scope') as scope,
                subscriptionId,
                resourceGroupName,
                publisherName
                FROM azure.hybrid_network.publishers
                WHERE subscriptionId = 'replace-me';
    vw_artifact_stores:
      id: azure.hybrid_network.vw_artifact_stores
      name: vw_artifact_stores
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.storeType') as store_type,
              JSON_EXTRACT(properties, '$.backingResourcePublicNetworkAccess') as backing_resource_public_network_access,
              JSON_EXTRACT(properties, '$.replicationStrategy') as replication_strategy,
              JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as managed_resource_group_configuration,
              JSON_EXTRACT(properties, '$.storageResourceId') as storage_resource_id,
              subscriptionId,
              resourceGroupName,
              publisherName,
              artifactStoreName
              FROM azure.hybrid_network.artifact_stores
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.storeType') as store_type,
                JSON_EXTRACT(properties, '$.backingResourcePublicNetworkAccess') as backing_resource_public_network_access,
                JSON_EXTRACT(properties, '$.replicationStrategy') as replication_strategy,
                JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as managed_resource_group_configuration,
                JSON_EXTRACT(properties, '$.storageResourceId') as storage_resource_id,
                subscriptionId,
                resourceGroupName,
                publisherName,
                artifactStoreName
                FROM azure.hybrid_network.artifact_stores
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
    vw_artifact_manifests:
      id: azure.hybrid_network.vw_artifact_manifests
      name: vw_artifact_manifests
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.artifactManifestState') as artifact_manifest_state,
              JSON_EXTRACT(properties, '$.artifacts') as artifacts,
              subscriptionId,
              resourceGroupName,
              publisherName,
              artifactStoreName,
              artifactManifestName
              FROM azure.hybrid_network.artifact_manifests
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me' AND artifactStoreName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.artifactManifestState') as artifact_manifest_state,
                JSON_EXTRACT(properties, '$.artifacts') as artifacts,
                subscriptionId,
                resourceGroupName,
                publisherName,
                artifactStoreName,
                artifactManifestName
                FROM azure.hybrid_network.artifact_manifests
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me' AND artifactStoreName = 'replace-me';
    vw_site_network_services:
      id: azure.hybrid_network.vw_site_network_services
      name: vw_site_network_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              sku as sku,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as managed_resource_group_configuration,
              JSON_EXTRACT(properties, '$.siteReference') as site_reference,
              JSON_EXTRACT(properties, '$.publisherName') as publisher_name,
              JSON_EXTRACT(properties, '$.publisherScope') as publisher_scope,
              JSON_EXTRACT(properties, '$.networkServiceDesignGroupName') as network_service_design_group_name,
              JSON_EXTRACT(properties, '$.networkServiceDesignVersionName') as network_service_design_version_name,
              JSON_EXTRACT(properties, '$.networkServiceDesignVersionOfferingLocation') as network_service_design_version_offering_location,
              JSON_EXTRACT(properties, '$.networkServiceDesignVersionResourceReference') as network_service_design_version_resource_reference,
              JSON_EXTRACT(properties, '$.desiredStateConfigurationGroupValueReferences') as desired_state_configuration_group_value_references,
              JSON_EXTRACT(properties, '$.lastStateNetworkServiceDesignVersionName') as last_state_network_service_design_version_name,
              JSON_EXTRACT(properties, '$.lastStateConfigurationGroupValueReferences') as last_state_configuration_group_value_references,
              subscriptionId,
              resourceGroupName,
              siteNetworkServiceName
              FROM azure.hybrid_network.site_network_services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                sku as sku,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as managed_resource_group_configuration,
                JSON_EXTRACT(properties, '$.siteReference') as site_reference,
                JSON_EXTRACT(properties, '$.publisherName') as publisher_name,
                JSON_EXTRACT(properties, '$.publisherScope') as publisher_scope,
                JSON_EXTRACT(properties, '$.networkServiceDesignGroupName') as network_service_design_group_name,
                JSON_EXTRACT(properties, '$.networkServiceDesignVersionName') as network_service_design_version_name,
                JSON_EXTRACT(properties, '$.networkServiceDesignVersionOfferingLocation') as network_service_design_version_offering_location,
                JSON_EXTRACT(properties, '$.networkServiceDesignVersionResourceReference') as network_service_design_version_resource_reference,
                JSON_EXTRACT(properties, '$.desiredStateConfigurationGroupValueReferences') as desired_state_configuration_group_value_references,
                JSON_EXTRACT(properties, '$.lastStateNetworkServiceDesignVersionName') as last_state_network_service_design_version_name,
                JSON_EXTRACT(properties, '$.lastStateConfigurationGroupValueReferences') as last_state_configuration_group_value_references,
                subscriptionId,
                resourceGroupName,
                siteNetworkServiceName
                FROM azure.hybrid_network.site_network_services
                WHERE subscriptionId = 'replace-me';
    vw_configuration_group_schemas:
      id: azure.hybrid_network.vw_configuration_group_schemas
      name: vw_configuration_group_schemas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.versionState') as version_state,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.schemaDefinition') as schema_definition,
              subscriptionId,
              resourceGroupName,
              publisherName,
              configurationGroupSchemaName
              FROM azure.hybrid_network.configuration_group_schemas
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.versionState') as version_state,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.schemaDefinition') as schema_definition,
                subscriptionId,
                resourceGroupName,
                publisherName,
                configurationGroupSchemaName
                FROM azure.hybrid_network.configuration_group_schemas
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
    vw_configuration_group_values:
      id: azure.hybrid_network.vw_configuration_group_values
      name: vw_configuration_group_values
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.publisherName') as publisher_name,
              JSON_EXTRACT(properties, '$.publisherScope') as publisher_scope,
              JSON_EXTRACT(properties, '$.configurationGroupSchemaName') as configuration_group_schema_name,
              JSON_EXTRACT(properties, '$.configurationGroupSchemaOfferingLocation') as configuration_group_schema_offering_location,
              JSON_EXTRACT(properties, '$.configurationGroupSchemaResourceReference') as configuration_group_schema_resource_reference,
              JSON_EXTRACT(properties, '$.configurationType') as configuration_type,
              subscriptionId,
              resourceGroupName,
              configurationGroupValueName
              FROM azure.hybrid_network.configuration_group_values
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.publisherName') as publisher_name,
                JSON_EXTRACT(properties, '$.publisherScope') as publisher_scope,
                JSON_EXTRACT(properties, '$.configurationGroupSchemaName') as configuration_group_schema_name,
                JSON_EXTRACT(properties, '$.configurationGroupSchemaOfferingLocation') as configuration_group_schema_offering_location,
                JSON_EXTRACT(properties, '$.configurationGroupSchemaResourceReference') as configuration_group_schema_resource_reference,
                JSON_EXTRACT(properties, '$.configurationType') as configuration_type,
                subscriptionId,
                resourceGroupName,
                configurationGroupValueName
                FROM azure.hybrid_network.configuration_group_values
                WHERE subscriptionId = 'replace-me';
    vw_network_function_definition_groups:
      id: azure.hybrid_network.vw_network_function_definition_groups
      name: vw_network_function_definition_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.description') as description,
              subscriptionId,
              resourceGroupName,
              publisherName,
              networkFunctionDefinitionGroupName
              FROM azure.hybrid_network.network_function_definition_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.description') as description,
                subscriptionId,
                resourceGroupName,
                publisherName,
                networkFunctionDefinitionGroupName
                FROM azure.hybrid_network.network_function_definition_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
    vw_network_function_definition_versions:
      id: azure.hybrid_network.vw_network_function_definition_versions
      name: vw_network_function_definition_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.versionState') as version_state,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.deployParameters') as deploy_parameters,
              JSON_EXTRACT(properties, '$.networkFunctionType') as network_function_type,
              subscriptionId,
              resourceGroupName,
              publisherName,
              networkFunctionDefinitionGroupName,
              networkFunctionDefinitionVersionName
              FROM azure.hybrid_network.network_function_definition_versions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me' AND networkFunctionDefinitionGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.versionState') as version_state,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.deployParameters') as deploy_parameters,
                JSON_EXTRACT(properties, '$.networkFunctionType') as network_function_type,
                subscriptionId,
                resourceGroupName,
                publisherName,
                networkFunctionDefinitionGroupName,
                networkFunctionDefinitionVersionName
                FROM azure.hybrid_network.network_function_definition_versions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me' AND networkFunctionDefinitionGroupName = 'replace-me';
    vw_sites:
      id: azure.hybrid_network.vw_sites
      name: vw_sites
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.nfvis') as nfvis,
              JSON_EXTRACT(properties, '$.siteNetworkServiceReferences') as site_network_service_references,
              subscriptionId,
              resourceGroupName,
              siteName
              FROM azure.hybrid_network.sites
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.nfvis') as nfvis,
                JSON_EXTRACT(properties, '$.siteNetworkServiceReferences') as site_network_service_references,
                subscriptionId,
                resourceGroupName,
                siteName
                FROM azure.hybrid_network.sites
                WHERE subscriptionId = 'replace-me';
    vw_network_service_design_groups:
      id: azure.hybrid_network.vw_network_service_design_groups
      name: vw_network_service_design_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.description') as description,
              subscriptionId,
              resourceGroupName,
              publisherName,
              networkServiceDesignGroupName
              FROM azure.hybrid_network.network_service_design_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.description') as description,
                subscriptionId,
                resourceGroupName,
                publisherName,
                networkServiceDesignGroupName
                FROM azure.hybrid_network.network_service_design_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me';
    vw_network_service_design_versions:
      id: azure.hybrid_network.vw_network_service_design_versions
      name: vw_network_service_design_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.versionState') as version_state,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.configurationGroupSchemaReferences') as configuration_group_schema_references,
              JSON_EXTRACT(properties, '$.nfvisFromSite') as nfvis_from_site,
              JSON_EXTRACT(properties, '$.resourceElementTemplates') as resource_element_templates,
              subscriptionId,
              resourceGroupName,
              publisherName,
              networkServiceDesignGroupName,
              networkServiceDesignVersionName
              FROM azure.hybrid_network.network_service_design_versions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me' AND networkServiceDesignGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.versionState') as version_state,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.configurationGroupSchemaReferences') as configuration_group_schema_references,
                JSON_EXTRACT(properties, '$.nfvisFromSite') as nfvis_from_site,
                JSON_EXTRACT(properties, '$.resourceElementTemplates') as resource_element_templates,
                subscriptionId,
                resourceGroupName,
                publisherName,
                networkServiceDesignGroupName,
                networkServiceDesignVersionName
                FROM azure.hybrid_network.network_service_design_versions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND publisherName = 'replace-me' AND networkServiceDesignGroupName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/?api-version=2024-04-15:
    delete:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_Delete
      description: Deletes the specified network function resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation is completed successfully.
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_Get
      description: Gets information about the specified network function resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: The name of the network function resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation is successful. The operation returns the resulting network function resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_CreateOrUpdate
      description: Creates or updates a network function resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: Resource name for the network function resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied in the body to the create or update network function operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFunction'
      responses:
        '200':
          description: Create or update operation has been completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        '201':
          description: Create or update operation has been completed successfully. The header contains 'Azure-AsyncOperation' header pointing to an operation resource. The operation URI can be queried to find the current state of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_UpdateTags
      description: Updates the tags for the network function resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: Resource name for the network function resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the update network function tags operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update is completed successfully. The operation returns the resulting network function resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/networkFunctions/?api-version=2024-04-15:
    get:
      description: Lists all the network functions in a subscription.
      operationId: NetworkFunctions_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of network function resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - NetworkFunctions
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/?api-version=2024-04-15:
    get:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_ListByResourceGroup
      description: Lists all the network function resources in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of network function resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/executeRequest/?api-version=2024-04-15:
    post:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_ExecuteRequest
      description: Execute a request to services on a containerized network function.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Payload for execute request post call.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteRequestParameters'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/components/{componentName}/?api-version=2024-04-15:
    get:
      tags:
        - Components
      operationId: Components_Get
      description: Gets information about the specified application instance resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionComponentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation is successful. The operation returns the resulting component resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/components/?api-version=2024-04-15:
    get:
      tags:
        - Components
      operationId: Components_ListByNetworkFunction
      description: Lists all the component resources in a network function.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/NetworkFunctionNameParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of component resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/publishers/?api-version=2024-04-15:
    get:
      tags:
        - Publishers
      operationId: Publishers_ListBySubscription
      description: Lists all the publishers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of publisher resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/?api-version=2024-04-15:
    get:
      tags:
        - Publishers
      operationId: Publishers_ListByResourceGroup
      description: Lists all the publishers in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of publisher resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/?api-version=2024-04-15:
    delete:
      tags:
        - Publishers
      operationId: Publishers_Delete
      description: Deletes the specified publisher.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Publishers
      operationId: Publishers_Get
      description: Gets information about the specified publisher.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting publisher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Publishers
      operationId: Publishers_CreateOrUpdate
      description: Creates or updates a publisher.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create publisher operation.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting publisher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        '201':
          description: Create or update operation has been completed successfully. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Publishers
      operationId: Publishers_Update
      description: Update a publisher resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create publisher operation.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: OK. Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/?api-version=2024-04-15:
    get:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_ListByPublisher
      description: Gets information of the ArtifactStores under publisher.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting ArtifactStoreVersion resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactStoreListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/?api-version=2024-04-15:
    delete:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_Delete
      description: Deletes the specified artifact store.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_CreateOrUpdate
      description: Creates or updates a artifact store.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update application group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactStore'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting ArtifactStore sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactStore'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting ArtifactStore sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactStore'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_Get
      description: Gets information about the specified artifact store.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting ArtifactStore resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactStore'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_Update
      description: Update artifact store resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update application group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting ArtifactStore sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactStore'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/addNetworkFabricControllerEndPoints/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_AddNetworkFabricControllerEndPoints
      description: Add network fabric controllers to artifact stores
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update application group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactStoreNetworkFabricControllerEndPoints'
      responses:
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/deleteNetworkFabricControllerEndPoints/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_DeleteNetworkFabricControllerEndPoints
      description: Delete network fabric controllers on artifact stores
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update application group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactStoreNetworkFabricControllerEndPoints'
      responses:
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/listNetworkFabricControllerPrivateEndPoints/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_ListNetworkFabricControllerPrivateEndPoints
      description: List network fabric controllers to artifact stores
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operations returns the list of network fabric controllers attached to artifact store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactStoreNetworkFabricControllerEndPointsList'
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/approvePrivateEndPoints/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_ApprovePrivateEndPoints
      description: Approve manual private endpoints on artifact stores
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to approve private endpoints.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactStorePrivateEndPointsFormat'
      responses:
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/removePrivateEndPoints/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_RemovePrivateEndPoints
      description: Remove manual private endpoints on artifact stores
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update application group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactStorePrivateEndPointsFormat'
      responses:
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/listPrivateEndPoints/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactStores
      operationId: ArtifactStores_ListPrivateEndPoints
      description: List manual private endpoints on artifact stores
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactStorePrivateEndPointsListResult'
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests/?api-version=2024-04-15:
    get:
      tags:
        - ArtifactManifests
      operationId: ArtifactManifests_ListByArtifactStore
      description: Gets information about the artifact manifest.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting ArtifactManifest resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactManifestListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests/{artifactManifestName}/?api-version=2024-04-15:
    delete:
      tags:
        - ArtifactManifests
      operationId: ArtifactManifests_Delete
      description: Deletes the specified artifact manifest.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactManifestParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - ArtifactManifests
      operationId: ArtifactManifests_CreateOrUpdate
      description: Creates or updates a artifact manifest.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactManifestParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update artifact manifest operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactManifest'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting ArtifactManifest sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactManifest'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting ArtifactManifest sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactManifest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - ArtifactManifests
      operationId: ArtifactManifests_Get
      description: Gets information about a artifact manifest resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactManifestParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting ArtifactManifest resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactManifest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ArtifactManifests
      operationId: ArtifactManifests_Update
      description: Updates a artifact manifest resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactManifestParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update artifact manifest operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting ArtifactManifest sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactManifest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests/{artifactManifestName}/listCredential/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactManifests
      operationId: ArtifactManifests_ListCredential
      description: List credential for publishing artifacts defined in artifact manifest.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactManifestParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operations returns the credential for publishing artifacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactAccessCredential'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests/{artifactManifestName}/updateState/?api-version=2024-04-15:
    post:
      tags:
        - ArtifactManifests
      operationId: ArtifactManifests_UpdateState
      description: Update state for artifact manifest.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactManifestParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update the state of artifact manifest.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactManifestUpdateState'
      responses:
        '200':
          description: Request is successful. The operations returns the credential for publishing artifacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactManifestUpdateState'
        '202':
          description: Request of updating artifact manifest state is accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/siteNetworkServices/{siteNetworkServiceName}/?api-version=2024-04-15:
    delete:
      tags:
        - SiteNetworkServices
      operationId: SiteNetworkServices_Delete
      description: Deletes the specified site network service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNetworkServiceNameParameter'
      responses:
        '202':
          description: Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - SiteNetworkServices
      operationId: SiteNetworkServices_Get
      description: Gets information about the specified site network service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNetworkServiceNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting network site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteNetworkService'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SiteNetworkServices
      operationId: SiteNetworkServices_CreateOrUpdate
      description: Creates or updates a network site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNetworkServiceNameParameter'
      requestBody:
        description: Parameters supplied to the create or update site network service operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteNetworkService'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting site network service resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteNetworkService'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting site network service resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteNetworkService'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - SiteNetworkServices
      operationId: SiteNetworkServices_UpdateTags
      description: Updates a site update tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNetworkServiceNameParameter'
      requestBody:
        description: Parameters supplied to update network site tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting site network service resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteNetworkService'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/siteNetworkServices/?api-version=2024-04-15:
    get:
      tags:
        - SiteNetworkServices
      operationId: SiteNetworkServices_ListBySubscription
      description: Lists all sites in the network service in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of network site resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteNetworkServiceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/siteNetworkServices/?api-version=2024-04-15:
    get:
      tags:
        - SiteNetworkServices
      operationId: SiteNetworkServices_ListByResourceGroup
      description: Lists all site network services.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of network site resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteNetworkServiceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/configurationGroupSchemas/?api-version=2024-04-15:
    get:
      tags:
        - ConfigurationGroupSchemas
      operationId: ConfigurationGroupSchemas_ListByPublisher
      description: Gets information of the configuration group schemas under a publisher.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting configuration group schema resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupSchemaListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/configurationGroupSchemas/{configurationGroupSchemaName}/?api-version=2024-04-15:
    delete:
      tags:
        - ConfigurationGroupSchemas
      operationId: ConfigurationGroupSchemas_Delete
      description: Deletes a specified configuration group schema.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupSchemaNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - ConfigurationGroupSchemas
      operationId: ConfigurationGroupSchemas_CreateOrUpdate
      description: Creates or updates a configuration group schema.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupSchemaNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update configuration group schema resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationGroupSchema'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting configuration group schema resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupSchema'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting configuration group schema sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupSchema'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - ConfigurationGroupSchemas
      operationId: ConfigurationGroupSchemas_Get
      description: Gets information about the specified configuration group schema.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupSchemaNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting publisher network function definition group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupSchema'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ConfigurationGroupSchemas
      operationId: ConfigurationGroupSchemas_Update
      description: Updates a configuration group schema resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupSchemaNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update network service design version operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting configuration group schema resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupSchema'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/configurationGroupSchemas/{configurationGroupSchemaName}/updateState/?api-version=2024-04-15:
    post:
      tags:
        - ConfigurationGroupSchemas
      operationId: ConfigurationGroupSchemas_updateState
      description: Update configuration group schema state.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupSchemaNameParameter'
      requestBody:
        description: Parameters supplied to update the state of configuration group schema.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationGroupSchemaVersionUpdateState'
      responses:
        '200':
          description: The updated configuration group schema state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupSchemaVersionUpdateState'
        '202':
          description: The request of updating configuration group schema state is accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/configurationGroupValues/{configurationGroupValueName}/?api-version=2024-04-15:
    delete:
      tags:
        - ConfigurationGroupValues
      operationId: ConfigurationGroupValues_Delete
      description: Deletes the specified hybrid configuration group value.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupValueNameParameter'
      responses:
        '202':
          description: Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - ConfigurationGroupValues
      operationId: ConfigurationGroupValues_Get
      description: Gets information about the specified hybrid configuration group values.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupValueNameParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting hybrid configuration group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGroupValue'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ConfigurationGroupValues
      operationId: ConfigurationGroupValues_CreateOrUpdate
      description: Creates or updates a hybrid configuration group value.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupValueNameParameter'
      requestBody:
        description: Parameters supplied to the create or update configuration group value resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configurationGroupValue'
      responses:
        '200':
          description: Create or update operation has been completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGroupValue'
        '201':
          description: Create or update operation has been completed successfully. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGroupValue'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - ConfigurationGroupValues
      operationId: ConfigurationGroupValues_UpdateTags
      description: Updates a hybrid configuration group tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigurationGroupValueNameParameter'
      requestBody:
        description: Parameters supplied to update configuration group values tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update is successful. The operation returns the resulting hybrid configuration group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGroupValue'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/configurationGroupValues/?api-version=2024-04-15:
    get:
      tags:
        - ConfigurationGroupValues
      operationId: ConfigurationGroupValues_ListBySubscription
      description: Lists all sites in the configuration group value in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of hybrid network site resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGroupValueListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/configurationGroupValues/?api-version=2024-04-15:
    get:
      tags:
        - ConfigurationGroupValues
      operationId: ConfigurationGroupValues_ListByResourceGroup
      description: Lists all the hybrid network configurationGroupValues in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of hybrid configuration group value resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGroupValueListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifacts/?api-version=2024-04-15:
    get:
      tags:
        - ProxyArtifact
      operationId: ProxyArtifact_List
      description: Lists all the available artifacts in the parent Artifact Store.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of available artifacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyArtifactOverviewListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactVersions/?api-version=2024-04-15:
    get:
      tags:
        - ProxyArtifact
      operationId: ProxyArtifact_Get
      description: Get a Artifact overview information.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a proxy artifact overview.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyArtifactVersionsOverviewListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactVersions/{artifactVersionName}/?api-version=2024-04-15:
    patch:
      tags:
        - ProxyArtifact
      operationId: ProxyArtifact_UpdateState
      description: Change artifact state defined in artifact store.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/ArtifactStoreParameter'
        - $ref: '#/components/parameters/ArtifactNameParameter'
        - $ref: '#/components/parameters/ArtifactVersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update the state of artifact manifest.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactChangeState'
      responses:
        '200':
          description: Request is successful. Artifact State updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyArtifactVersionsListOverview'
        '202':
          description: Request of updating artifact state is accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/?api-version=2024-04-15:
    get:
      tags:
        - NetworkFunctionDefinitionGroups
      operationId: NetworkFunctionDefinitionGroups_ListByPublisher
      description: Gets information of the network function definition groups under a publisher.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting networkFunctionDefinition group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/?api-version=2024-04-15:
    delete:
      tags:
        - NetworkFunctionDefinitionGroups
      operationId: NetworkFunctionDefinitionGroups_Delete
      description: Deletes a specified network function definition group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - NetworkFunctionDefinitionGroups
      operationId: NetworkFunctionDefinitionGroups_CreateOrUpdate
      description: Creates or updates a network function definition group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update publisher network function definition group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFunctionDefinitionGroup'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting NetworkFunctionDefinitionGroup sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionGroup'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting NetworkFunctionDefinitionGroup sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkFunctionDefinitionGroups
      operationId: NetworkFunctionDefinitionGroups_Get
      description: Gets information about the specified networkFunctionDefinition group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting publisher network function definition group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkFunctionDefinitionGroups
      operationId: NetworkFunctionDefinitionGroups_Update
      description: Updates a network function definition group resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update publisher network function definition group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting network function definition group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/{networkFunctionDefinitionVersionName}/?api-version=2024-04-15:
    delete:
      tags:
        - NetworkFunctionDefinitionVersions
      operationId: NetworkFunctionDefinitionVersions_Delete
      description: Deletes the specified network function definition version.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionVersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - NetworkFunctionDefinitionVersions
      operationId: NetworkFunctionDefinitionVersions_CreateOrUpdate
      description: Creates or updates a network function definition version.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionVersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update network function definition version operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFunctionDefinitionVersion'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting network function definition sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionVersion'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting network function definition sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkFunctionDefinitionVersions
      operationId: NetworkFunctionDefinitionVersions_Get
      description: Gets information about a network function definition version.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionVersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting NetworkFunctionDefinitionVersion resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkFunctionDefinitionVersions
      operationId: NetworkFunctionDefinitionVersions_Update
      description: Updates a network function definition version resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionVersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update network function definition version operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting network function definition sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/?api-version=2024-04-15:
    get:
      tags:
        - NetworkFunctionDefinitionVersions
      operationId: NetworkFunctionDefinitionVersions_ListByNetworkFunctionDefinitionGroup
      description: Gets information about a list of network function definition versions under a network function definition group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting NetworkFunctionDefinitionVersion resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionVersionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/{networkFunctionDefinitionVersionName}/updateState/?api-version=2024-04-15:
    post:
      tags:
        - NetworkFunctionDefinitionVersions
      operationId: NetworkFunctionDefinitionVersions_updateState
      description: Update network function definition version state.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFunctionDefinitionVersionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update the state of network function definition version.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFunctionDefinitionVersionUpdateState'
      responses:
        '200':
          description: The updated network function definition version state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionDefinitionVersionUpdateState'
        '202':
          description: The request of updating network function definition version state is accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/sites/{siteName}/?api-version=2024-04-15:
    delete:
      tags:
        - Sites
      operationId: Sites_Delete
      description: Deletes the specified network site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNameParameter'
      responses:
        '202':
          description: Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Sites
      operationId: Sites_Get
      description: Gets information about the specified network site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting network site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Sites
      operationId: Sites_CreateOrUpdate
      description: Creates or updates a network site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNameParameter'
      requestBody:
        description: Parameters supplied to the create or update network site operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting network site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting network site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Sites
      operationId: Sites_UpdateTags
      description: Updates a site update tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SiteNameParameter'
      requestBody:
        description: Parameters supplied to update network site tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting network site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/sites/?api-version=2024-04-15:
    get:
      tags:
        - Sites
      operationId: Sites_ListBySubscription
      description: Lists all sites in the network service in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of hybrid network site resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/sites/?api-version=2024-04-15:
    get:
      tags:
        - Sites
      operationId: Sites_ListByResourceGroup
      description: Lists all sites in the network service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of network site resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.HybridNetwork/operations/?api-version=2024-04-15:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Gets a list of the operations.
      parameters: []
      responses:
        '200':
          description: OK. Returns a list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/?api-version=2024-04-15:
    get:
      tags:
        - NetworkServiceDesignGroups
      operationId: NetworkServiceDesignGroups_ListByPublisher
      description: Gets information of the network service design groups under a publisher.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting network service design group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServiceDesignGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/?api-version=2024-04-15:
    delete:
      tags:
        - NetworkServiceDesignGroups
      operationId: NetworkServiceDesignGroups_Delete
      description: Deletes a specified network service design group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - NetworkServiceDesignGroups
      operationId: NetworkServiceDesignGroups_CreateOrUpdate
      description: Creates or updates a network service design group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
      requestBody:
        description: Parameters supplied to the create or update publisher network service design group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkServiceDesignGroup'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting NetworkServiceDesignGroup sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServiceDesignGroup'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting NetworkServiceDesignGroup sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServiceDesignGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkServiceDesignGroups
      operationId: NetworkServiceDesignGroups_Get
      description: Gets information about the specified networkServiceDesign group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting publisher network service design group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServiceDesignGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkServiceDesignGroups
      operationId: NetworkServiceDesignGroups_Update
      description: Updates a network service design groups resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
      requestBody:
        description: Parameters supplied to the create or update publisher network service design group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting network service design group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServiceDesignGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/{networkServiceDesignVersionName}/?api-version=2024-04-15:
    delete:
      tags:
        - NetworkServiceDesignVersions
      operationId: NetworkServiceDesignVersions_Delete
      description: Deletes the specified network service design version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignVersionNameParameter'
      responses:
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    put:
      tags:
        - NetworkServiceDesignVersions
      operationId: NetworkServiceDesignVersions_CreateOrUpdate
      description: Creates or updates a network service design version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignVersionNameParameter'
      requestBody:
        description: Parameters supplied to the create or update network service design version operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networkServiceDesignVersion'
      responses:
        '200':
          description: Create or update operation has been completed successfully. The operation returns the resulting network service design sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkServiceDesignVersion'
        '201':
          description: Create or update operation has been completed successfully. The operation returns the resulting network service design sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkServiceDesignVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkServiceDesignVersions
      operationId: NetworkServiceDesignVersions_Get
      description: Gets information about a network service design version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignVersionNameParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting networkServiceDesignVersion resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkServiceDesignVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkServiceDesignVersions
      operationId: NetworkServiceDesignVersions_Update
      description: Updates a network service design version resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignVersionNameParameter'
      requestBody:
        description: Parameters supplied to the create or update network service design version operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting network service design sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkServiceDesignVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/?api-version=2024-04-15:
    get:
      tags:
        - NetworkServiceDesignVersions
      operationId: NetworkServiceDesignVersions_ListByNetworkServiceDesignGroup
      description: Gets information about a list of network service design versions under a network service design group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting networkServiceDesignVersion resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkServiceDesignVersionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/{networkServiceDesignVersionName}/updateState/?api-version=2024-04-15:
    post:
      tags:
        - NetworkServiceDesignVersions
      operationId: NetworkServiceDesignVersions_updateState
      description: Update network service design version state.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PublisherNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignGroupNameParameter'
        - $ref: '#/components/parameters/NetworkServiceDesignVersionNameParameter'
      requestBody:
        description: Parameters supplied to update the state of network service design version.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkServiceDesignVersionUpdateState'
      responses:
        '200':
          description: The updated network service design version state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServiceDesignVersionUpdateState'
        '202':
          description: The request of updating network service design version state is accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
