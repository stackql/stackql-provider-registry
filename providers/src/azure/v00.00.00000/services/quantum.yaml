openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Quantum
  description: Use Python and Q#, a language for quantum programming, to create and submit quantum programs in the Azure portal, or set up your own local development environment with the Quantum Development Kit (QDK) to write quantum programs.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: locationName
      in: path
      description: Location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    WorkspaceNameParameter:
      name: workspaceName
      in: path
      description: The name of the quantum workspace resource.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    WorkspaceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/QuantumWorkspace'
          description: Result of a list Workspaces operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of Workspaces.
      description: The response of a list Workspaces operation.
      type: object
    OfferingsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDescription'
          description: Result of a list Providers operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of Providers.
      description: The response of a list Providers operation.
      type: object
    QuantumWorkspace:
      description: The resource proxy definition object for quantum workspace.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Gets or sets the properties. Define quantum workspace's specific properties.
          $ref: '#/components/schemas/WorkspaceResourceProperties'
        identity:
          type: object
          description: Managed Identity information.
          properties:
            principalId:
              readOnly: true
              type: string
              description: The principal ID of resource identity.
            tenantId:
              readOnly: true
              type: string
              description: The tenant ID of resource.
            type:
              type: string
              description: The identity type.
              enum:
                - SystemAssigned
                - None
              x-ms-enum:
                name: ResourceIdentityType
                modelAsString: true
        systemData:
          description: System metadata
          $ref: '#/components/schemas/systemData'
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ApiKey:
      description: Azure quantum workspace Api key details.
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          description: The creation time of the api key.
        key:
          x-ms-secret: true
          readOnly: true
          type: string
          description: The Api key.
    ListKeysResult:
      description: Result of list Api keys and connection strings.
      type: object
      properties:
        apiKeyEnabled:
          type: boolean
          description: Indicator of enablement of the Quantum workspace Api keys.
        primaryKey:
          $ref: '#/components/schemas/ApiKey'
          description: The quantum workspace primary api key.
        secondaryKey:
          $ref: '#/components/schemas/ApiKey'
          description: The quantum workspace secondary api key.
        primaryConnectionString:
          x-ms-secret: true
          readOnly: true
          type: string
          description: The connection string of the primary api key.
        secondaryConnectionString:
          x-ms-secret: true
          readOnly: true
          type: string
          description: The connection string of the secondary api key.
    APIKeys:
      type: object
      properties:
        keys:
          description: A list of api key names.
          type: array
          items:
            type: string
            enum:
              - Primary
              - Secondary
            default: Primary
            x-ms-enum:
              name: KeyType
              modelAsString: true
      description: List of api keys to be generated.
    TagsObject:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
      type: object
    WorkspaceResourceProperties:
      description: Properties of a Workspace
      properties:
        providers:
          type: array
          description: List of Providers selected for this Workspace
          items:
            $ref: '#/components/schemas/Provider'
          x-ms-identifiers: []
        usable:
          type: string
          enum:
            - 'Yes'
            - 'No'
            - Partial
          x-ms-enum:
            name: UsableStatus
            modelAsString: true
          description: Whether the current workspace is ready to accept Jobs.
          readOnly: true
        provisioningState:
          type: string
          enum:
            - Succeeded
            - ProviderLaunching
            - ProviderUpdating
            - ProviderDeleting
            - ProviderProvisioning
            - Failed
          x-ms-enum:
            name: ProvisioningStatus
            modelAsString: true
          description: Provisioning status field
          readOnly: true
        storageAccount:
          type: string
          description: ARM Resource Id of the storage account associated with this workspace.
        endpointUri:
          type: string
          description: The URI of the workspace endpoint.
          readOnly: true
        apiKeyEnabled:
          type: boolean
          description: Indicator of enablement of the Quantum workspace Api keys.
      type: object
    ProviderDescription:
      description: Information about an offering. A provider offering is an entity that offers Targets to run Azure Quantum Jobs.
      properties:
        id:
          type: string
          description: Unique provider's id.
        name:
          type: string
          description: Provider's display name.
          readOnly: true
        properties:
          $ref: '#/components/schemas/ProviderProperties'
      type: object
    ProviderProperties:
      type: object
      description: Provider properties.
      properties:
        description:
          type: string
          description: A description about this provider.
          readOnly: true
        providerType:
          type: string
          description: Provider type.
          readOnly: true
        company:
          type: string
          description: Company name.
          readOnly: true
        defaultEndpoint:
          type: string
          description: Provider's default endpoint.
          readOnly: true
        aad:
          type: object
          description: Azure Active Directory info.
          properties:
            applicationId:
              type: string
              description: Provider's application id.
              readOnly: true
            tenantId:
              type: string
              description: Provider's tenant id.
              readOnly: true
        managedApplication:
          type: object
          description: Provider's Managed-Application info
          properties:
            publisherId:
              type: string
              description: Provider's publisher id.
              readOnly: true
            offerId:
              type: string
              description: Provider's offer id.
              readOnly: true
        targets:
          type: array
          description: The list of targets available from this provider.
          items:
            $ref: '#/components/schemas/TargetDescription'
        skus:
          type: array
          description: The list of skus available from this provider.
          items:
            $ref: '#/components/schemas/SkuDescription'
        quotaDimensions:
          type: array
          description: The list of quota dimensions from the provider.
          items:
            $ref: '#/components/schemas/QuotaDimension'
        pricingDimensions:
          type: array
          description: The list of pricing dimensions from the provider.
          items:
            $ref: '#/components/schemas/PricingDimension'
    TargetDescription:
      type: object
      description: Information about a Target. A target is the component that can process a specific type of Job.
      properties:
        id:
          type: string
          description: Unique target id.
        name:
          type: string
          description: Display name of this target.
        description:
          type: string
          description: A description about this target.
        acceptedDataFormats:
          type: array
          description: List of data formats accepted by this target.
          items:
            type: string
        acceptedContentEncodings:
          type: array
          description: List of content encodings accepted by this target.
          items:
            type: string
    SkuDescription:
      type: object
      description: Information about a specific sku.
      properties:
        id:
          type: string
          description: Unique sku id.
        name:
          type: string
          description: Display name of this sku.
        version:
          type: string
          description: Display name of this sku.
        description:
          type: string
          description: Description about this sku.
        restrictedAccessUri:
          type: string
          description: Uri to subscribe to the restricted access sku.
        autoAdd:
          type: boolean
          description: Flag to indicate whether the sku should be automatically added during workspace creation.
        targets:
          type: array
          description: The list of targets available for this sku.
          items:
            type: string
        quotaDimensions:
          type: array
          description: The list of quota dimensions for this sku.
          items:
            $ref: '#/components/schemas/QuotaDimension'
        pricingDetails:
          type: array
          description: The list of pricing details for the sku.
          items:
            $ref: '#/components/schemas/PricingDetail'
    QuotaDimension:
      type: object
      description: Information about a specific quota dimension.
      properties:
        id:
          type: string
          description: Unique id of this dimension.
        scope:
          type: string
          description: The scope of this quota dimension.
        period:
          type: string
          description: The reset period of this quota dimension.
        quota:
          type: number
          description: The max limit of this dimension.
        name:
          type: string
          description: The display name of this quota dimension.
        description:
          type: string
          description: A description about this quota dimension.
        unit:
          type: string
          description: The standard unit of measurement used for this quota dimension.
        unitPlural:
          type: string
          description: The standard unit of measurement used for this quota dimension in plural form.
    PricingDetail:
      type: object
      description: Detailed pricing information for an sku.
      properties:
        id:
          type: string
          description: Unique id for this pricing information.
        value:
          type: string
          description: The unit cost of this sku.
    PricingDimension:
      type: object
      description: Information about pricing dimension.
      properties:
        id:
          type: string
          description: Unique id of this pricing dimension.
        name:
          type: string
          description: The display name of this pricing dimension.
    Provider:
      type: object
      description: Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.
      properties:
        providerId:
          type: string
          description: Unique id of this provider.
        providerSku:
          type: string
          description: The sku associated with pricing information for this provider.
        instanceUri:
          type: string
          description: A Uri identifying the specific instance of this provider.
        applicationName:
          type: string
          description: The provider's marketplace application display name.
        provisioningState:
          type: string
          enum:
            - Succeeded
            - Launching
            - Updating
            - Deleting
            - Deleted
            - Failed
          x-ms-enum:
            name: Status
            modelAsString: true
          description: Provisioning status field
        resourceUsageId:
          type: string
          description: Id to track resource usage for the provider.
    operation:
      description: Operation provided by provider
      properties:
        name:
          type: string
          description: Name of the operation
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          type: object
          description: Properties of the operation
          properties:
            provider:
              type: string
              description: Provider name
            resource:
              type: string
              description: Resource name
            operation:
              type: string
              description: Operation name
            description:
              type: string
              description: Description of the operation
      type: object
    operationsList:
      description: Lists the operations available.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of operations.
          type: string
        value:
          description: Array of operations
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/operation'
          x-ms-identifiers: []
      required:
        - value
    CheckNameAvailabilityParameters:
      description: Details of check name availability request body.
      type: object
      properties:
        name:
          type: string
          description: Name for checking availability.
        type:
          type: string
          default: Microsoft.Quantum/Workspaces
          description: The resource type of Quantum Workspace.
    CheckNameAvailabilityResult:
      description: Result of check name availability.
      type: object
      properties:
        nameAvailable:
          type: boolean
          description: Indicator of availability of the Quantum Workspace resource name.
        reason:
          type: string
          description: The reason of unavailability.
        message:
          readOnly: true
          type: string
          description: The detailed info regarding the reason associated with the Namespace.
  x-stackQL-resources:
    workspaces:
      id: azure.quantum.workspaces
      name: workspaces
      title: workspaces
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}?api-version=2023-11-13-preview/get'
            operationId: Workspaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuantumWorkspace
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}?api-version=2023-11-13-preview/put'
            operationId: Workspaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuantumWorkspace
        update_tags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}?api-version=2023-11-13-preview/patch'
            operationId: Workspaces_UpdateTags
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuantumWorkspace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}?api-version=2023-11-13-preview/delete'
            operationId: Workspaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quantum~1workspaces?api-version=2023-11-13-preview/get'
            operationId: Workspaces_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces?api-version=2023-11-13-preview/get'
            operationId: Workspaces_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceListResult
            objectKey: $.value
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quantum~1locations~1{locationName}~1checkNameAvailability?api-version=2023-11-13-preview/post'
            operationId: Workspace_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResult
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1regenerateKey?api-version=2023-11-13-preview/post'
            operationId: Workspace_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete'
    offerings:
      id: azure.quantum.offerings
      name: offerings
      title: offerings
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quantum~1locations~1{locationName}~1offerings?api-version=2023-11-13-preview/get'
            operationId: Offerings_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OfferingsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/offerings/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.quantum.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Quantum~1operations?api-version=2023-11-13-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: operationsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workspace_keys:
      id: azure.quantum.workspace_keys
      name: workspace_keys
      title: workspace_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1listKeys?api-version=2023-11-13-preview/post'
            operationId: WorkspaceKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListKeysResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspace_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_workspaces:
      id: azure.quantum.vw_workspaces
      name: vw_workspaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.providers') as "providers",
              JSON_EXTRACT(properties, '$.usable') as "usable",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.storageAccount') as "storage_account",
              JSON_EXTRACT(properties, '$.endpointUri') as "endpoint_uri",
              JSON_EXTRACT(properties, '$.apiKeyEnabled') as "api_key_enabled",
              subscriptionId,
              resourceGroupName,
              workspaceName
              FROM azure.quantum.workspaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.providers') as "providers",
                json_extract_path_text(properties, '$.usable') as "usable",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.storageAccount') as "storage_account",
                json_extract_path_text(properties, '$.endpointUri') as "endpoint_uri",
                json_extract_path_text(properties, '$.apiKeyEnabled') as "api_key_enabled",
                subscriptionId,
                resourceGroupName,
                workspaceName
                FROM azure.quantum.workspaces
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}?api-version=2023-11-13-preview:
    get:
      description: Returns the Workspace resource associated with the given name.
      operationId: Workspaces_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Workspace details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuantumWorkspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Creates or updates a workspace resource.
      operationId: Workspaces_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: Workspace details.
        required: true
        x-ms-requestBody-name: QuantumWorkspace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuantumWorkspace'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuantumWorkspace'
        '201':
          description: Workspace create/update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuantumWorkspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      description: Updates an existing workspace's tags.
      operationId: Workspaces_UpdateTags
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: Parameters supplied to update tags.
        required: true
        x-ms-requestBody-name: workspaceTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuantumWorkspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: Deletes a Workspace resource.
      operationId: Workspaces_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Successful.
        '202':
          description: Workspace delete request accepted.
        '204':
          description: No content - The workspace doesn't exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.Quantum/workspaces?api-version=2023-11-13-preview:
    get:
      operationId: Workspaces_ListBySubscription
      description: Gets the list of Workspaces within a Subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Workspaces successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces?api-version=2023-11-13-preview:
    get:
      operationId: Workspaces_ListByResourceGroup
      description: Gets the list of Workspaces within a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Workspaces successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/offerings?api-version=2023-11-13-preview:
    get:
      description: Returns the list of all provider offerings available for the given location.
      operationId: Offerings_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: Offerings details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferingsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Quantum/operations?api-version=2023-11-13-preview:
    get:
      description: Returns list of operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operationsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/checkNameAvailability?api-version=2023-11-13-preview:
    post:
      description: Check the availability of the resource name.
      operationId: Workspace_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The name and type of the resource.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/listKeys?api-version=2023-11-13-preview:
    post:
      description: Get the keys to use with the Quantum APIs. A key is used to authenticate and authorize access to the Quantum REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration.
      operationId: WorkspaceKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKeysResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Workspace_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/regenerateKey?api-version=2023-11-13-preview:
    post:
      description: Regenerate either the primary or secondary key for use with the Quantum APIs. The old key will stop working immediately.
      operationId: Workspace_RegenerateKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: 'Which key to regenerate:  primary or secondary.'
        required: true
        x-ms-requestBody-name: keySpecification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeys'
      responses:
        '204':
          description: The request was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
