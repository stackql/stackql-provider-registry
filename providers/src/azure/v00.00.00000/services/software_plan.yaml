openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Software Plan
  description: Software Plan Management Client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PlanIdParameter:
      name: planId
      in: path
      description: This is a unique identifier for a plan. Should be a guid.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
  schemas:
    Error:
      type: object
      description: Error object returned by the RP
      properties:
        code:
          description: Error code
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
          description: A user readable error message. Localized based on x-ms-effective-locale header in the request
    ErrorCode:
      type: string
      description: Defined error codes to be returned to the client.
      enum:
        - InvalidRequestParameter
        - MissingRequestParameter
      x-ms-enum:
        name: ErrorCode
        modelAsString: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    ProvisioningState:
      type: string
      description: Represent the current state of the Reservation.
      enum:
        - Succeeded
        - Cancelled
        - Failed
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    HybridUseBenefitListResult:
      description: List of hybrid use benefits
      properties:
        value:
          description: List of hybrid use benefits
          type: array
          items:
            $ref: '#/components/schemas/HybridUseBenefitModel'
        nextLink:
          type: string
          description: Url to get the next page of items.
      type: object
    HybridUseBenefitModel:
      description: Response on GET of a hybrid use benefit
      required:
        - sku
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        sku:
          description: Hybrid use benefit SKU
          $ref: '#/components/schemas/Sku'
        etag:
          type: integer
          format: int32
          description: Indicates the revision of the hybrid use benefit
          readOnly: true
        properties:
          description: Property bag for a hybrid use benefit response
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HybridUseBenefitProperties'
      type: object
    HybridUseBenefitProperties:
      description: Hybrid use benefit properties
      properties:
        provisioningState:
          type: string
          description: Provisioning state
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        createdDate:
          type: string
          description: Created date
          format: date-time
          readOnly: true
        lastUpdatedDate:
          type: string
          description: Last updated date
          format: date-time
          readOnly: true
      type: object
    OperationList:
      type: object
      description: List all the operations.
      properties:
        value:
          type: array
          description: List of all operations
          items:
            $ref: '#/components/schemas/OperationResponse'
          x-ms-identifiers:
            - name
        nextLink:
          type: string
          description: Url to get the next page of items.
    OperationResponse:
      type: object
      description: Operation response.
      properties:
        name:
          type: string
          description: Name of the operation
        display:
          description: Display properties for the operation
          $ref: '#/components/schemas/OperationDisplay'
        origin:
          description: Origin of the response
          type: string
    OperationDisplay:
      type: object
      description: Display fields for an operation.
      properties:
        provider:
          description: Resource Provider name
          type: string
        resource:
          description: Resource that is acted upon
          type: string
        operation:
          description: Operation to be performed
          type: string
        description:
          description: Description of the operation
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
  x-stackQL-resources:
    software_plans:
      id: azure.software_plan.software_plans
      name: software_plans
      title: software_plans
      methods:
        register:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.SoftwarePlan~1register?api-version=2019-12-01/post'
            operationId: SoftwarePlan_Register
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    hybrid_use_benefits:
      id: azure.software_plan.hybrid_use_benefits
      name: hybrid_use_benefits
      title: hybrid_use_benefits
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.SoftwarePlan~1hybridUseBenefits?api-version=2019-12-01/get'
            operationId: HybridUseBenefit_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HybridUseBenefitListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.SoftwarePlan~1hybridUseBenefits~1{planId}?api-version=2019-12-01/put'
            operationId: HybridUseBenefit_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HybridUseBenefitModel
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.SoftwarePlan~1hybridUseBenefits~1{planId}?api-version=2019-12-01/patch'
            operationId: HybridUseBenefit_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HybridUseBenefitModel
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.SoftwarePlan~1hybridUseBenefits~1{planId}?api-version=2019-12-01/get'
            operationId: HybridUseBenefit_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HybridUseBenefitModel
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.SoftwarePlan~1hybridUseBenefits~1{planId}?api-version=2019-12-01/delete'
            operationId: HybridUseBenefit_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_use_benefits/methods/get'
          - $ref: '#/components/x-stackQL-resources/hybrid_use_benefits/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hybrid_use_benefits/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/hybrid_use_benefits/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hybrid_use_benefits/methods/delete'
    hybrid_use_benefit_revisions:
      id: azure.software_plan.hybrid_use_benefit_revisions
      name: hybrid_use_benefit_revisions
      title: hybrid_use_benefit_revisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.SoftwarePlan~1hybridUseBenefits~1{planId}~1revisions?api-version=2019-12-01/get'
            operationId: HybridUseBenefitRevision_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HybridUseBenefitListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_use_benefit_revisions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.software_plan.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.SoftwarePlan~1operations?api-version=2019-12-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_hybrid_use_benefits:
      id: azure.software_plan.vw_hybrid_use_benefits
      name: vw_hybrid_use_benefits
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              sku as sku,
              etag as etag,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.createdDate') as "created_date",
              JSON_EXTRACT(properties, '$.lastUpdatedDate') as "last_updated_date",
              scope,
              planId
              FROM azure.software_plan.hybrid_use_benefits
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                sku as sku,
                etag as etag,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.createdDate') as "created_date",
                json_extract_path_text(properties, '$.lastUpdatedDate') as "last_updated_date",
                scope,
                planId
                FROM azure.software_plan.hybrid_use_benefits
                WHERE scope = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.SoftwarePlan/register?api-version=2019-12-01:
    post:
      description: Register to Microsoft.SoftwarePlan resource provider.
      operationId: SoftwarePlan_Register
      tags:
        - Software plan
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: OK - Microsoft.SoftwarePlan is registered
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits?api-version=2019-12-01:
    get:
      description: Get all hybrid use benefits associated with an ARM resource.
      operationId: HybridUseBenefit_List
      tags:
        - Hybrid use benefits
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: $filter
          in: query
          description: Supports applying filter on the type of SKU
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - returns an array of plans at that scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridUseBenefitListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits/{planId}?api-version=2019-12-01:
    put:
      description: Create a new hybrid use benefit under a given scope
      operationId: HybridUseBenefit_Create
      tags:
        - Hybrid use benefit
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
      requestBody:
        description: Request body for creating a hybrid use benefit
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridUseBenefitModel'
      responses:
        '200':
          description: OK - returns the plan that is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridUseBenefitModel'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates an existing hybrid use benefit
      operationId: HybridUseBenefit_Update
      tags:
        - Hybrid use benefit
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
      requestBody:
        description: Request body for creating a hybrid use benefit
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridUseBenefitModel'
      responses:
        '200':
          description: OK - successfully updated the given hybrid use benefit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridUseBenefitModel'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: Gets a given plan ID
      operationId: HybridUseBenefit_Get
      tags:
        - Hybrid use benefit
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
      responses:
        '200':
          description: OK - returns the plan that is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridUseBenefitModel'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a given plan ID
      operationId: HybridUseBenefit_Delete
      tags:
        - Hybrid use benefit
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
      responses:
        '200':
          description: OK - successfully deleted the given plan
        '204':
          description: OK - there was no plan to delete
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits/{planId}/revisions?api-version=2019-12-01:
    get:
      description: Gets the version history of a hybrid use benefit
      operationId: HybridUseBenefitRevision_List
      tags:
        - Hybrid use benefit revisions
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/PlanIdParameter'
      responses:
        '200':
          description: OK - returns an array of plans ordered by revision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridUseBenefitListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{scope}/providers/Microsoft.SoftwarePlan/operations?api-version=2019-12-01:
    get:
      summary: Get operations.
      description: List all the operations.
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      tags:
        - Software plan operations
      responses:
        '200':
          description: List all the operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
