openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Image Builder
  description: Azure Image Builder is a managed service from Microsoft Azure that simplifies building custom images (a snapshot of a disk or a server that can be used to create new servers that are pre-configured with those settings). It can be used to create images in a more streamlined and automated way, rather than manually configuring them.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription Id forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: false
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: Location of the service.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ImageTemplateNameParameter:
      name: imageTemplateName
      in: path
      description: The name of the image Template
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9-_.]{1,64}$
        type: string
    RunOutputNameParameter:
      name: runOutputName
      in: path
      description: The name of the run output
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9-_.]{1,64}$
        type: string
    TriggerNameParameter:
      name: triggerName
      in: path
      description: The name of the trigger
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9-_.]{1,64}$
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: A REST API operation
      properties:
        name:
          title: The operation name.
          description: This is of the format {provider}/{resource}/{operation}
          type: string
        display:
          type: object
          title: The object that describes the operation.
          properties:
            provider:
              title: Friendly name of the resource provider.
              type: string
            operation:
              title: The operation type.
              description: 'For example: read, write, delete, or listKeys/action'
              type: string
            resource:
              title: The resource type on which the operation is performed.
              type: string
            description:
              title: The friendly name of the operation
              type: string
        origin:
          title: The intended executor of the operation.
          type: string
        properties:
          title: Properties of the operation.
          type: object
        isDataAction:
          title: The flag that indicates whether the operation applies to data plane.
          type: boolean
      type: object
    OperationListResult:
      type: object
      title: Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers: []
          title: The list of operations supported by the resource provider.
        nextLink:
          type: string
          title: The URL to get the next set of operation list results if there are any.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ImageTemplateListResult:
      description: The result of List image templates operation
      type: object
      properties:
        value:
          description: An array of image templates
          type: array
          items:
            $ref: '#/components/schemas/ImageTemplate'
        nextLink:
          type: string
          description: The continuation token.
    ImageTemplateSource:
      type: object
      description: Describes a virtual machine image source for building, customizing and distributing
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Specifies the type of source image you want to start with.
      required:
        - type
    ImageTemplatePlatformImageSource:
      description: Describes an image source from [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
      x-ms-discriminator-value: PlatformImage
      properties:
        type:
          type: string
          description: Specifies the type of source image you want to start with.
        publisher:
          type: string
          description: Image Publisher in [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
        offer:
          type: string
          description: Image offer from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
        sku:
          type: string
          description: Image sku from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
        version:
          type: string
          description: Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). If 'latest' is specified here, the version is evaluated when the image build takes place, not when the template is submitted.
        exactVersion:
          type: string
          description: Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
          readOnly: true
        planInfo:
          $ref: '#/components/schemas/PlatformImagePurchasePlan'
          description: Optional configuration of purchase plan for platform image.
      type: object
    ImageTemplateManagedImageSource:
      description: Describes an image source that is a managed image in customer subscription. This image must reside in the same subscription and region as the Image Builder template.
      x-ms-discriminator-value: ManagedImage
      required:
        - imageId
      properties:
        type:
          type: string
          description: Specifies the type of source image you want to start with.
        imageId:
          type: string
          description: ARM resource id of the managed image in customer subscription
      type: object
    ImageTemplateSharedImageVersionSource:
      description: Describes an image source that is an image version in an Azure Compute Gallery or a Direct Shared Gallery.
      x-ms-discriminator-value: SharedImageVersion
      required:
        - imageVersionId
      properties:
        type:
          type: string
          description: Specifies the type of source image you want to start with.
        imageVersionId:
          type: string
          description: ARM resource id of the image version. When image version name is 'latest', the version is evaluated when the image build takes place.
        exactVersion:
          type: string
          description: Exact ARM resource id of the image version. This readonly field differs from the image version Id in 'imageVersionId' only if the version name specified in 'imageVersionId' field is 'latest'.
          readOnly: true
      type: object
    ImageTemplateInVMValidator:
      type: object
      description: Describes a unit of in-VM validation of image
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: The type of validation you want to use on the Image. For example, "Shell" can be shell validation
        name:
          type: string
          description: Friendly Name to provide context on what this validation step does
      required:
        - type
    ImageTemplateShellValidator:
      description: Runs the specified shell script during the validation phase (Linux). Corresponds to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
      x-ms-discriminator-value: Shell
      properties:
        type:
          type: string
          description: The type of validation you want to use on the Image. For example, "Shell" can be shell validation
        name:
          type: string
          description: Friendly Name to provide context on what this validation step does
        scriptUri:
          type: string
          description: URI of the shell script to be run for validation. It can be a github link, Azure Storage URI, etc
        sha256Checksum:
          type: string
          default: ''
          description: SHA256 checksum of the shell script provided in the scriptUri field
        inline:
          type: array
          description: Array of shell commands to execute
          items:
            type: string
      type: object
    ImageTemplatePowerShellValidator:
      description: Runs the specified PowerShell script during the validation phase (Windows). Corresponds to Packer powershell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
      x-ms-discriminator-value: PowerShell
      properties:
        type:
          type: string
          description: The type of validation you want to use on the Image. For example, "Shell" can be shell validation
        name:
          type: string
          description: Friendly Name to provide context on what this validation step does
        scriptUri:
          type: string
          description: URI of the PowerShell script to be run for validation. It can be a github link, Azure Storage URI, etc
        sha256Checksum:
          type: string
          default: ''
          description: SHA256 checksum of the power shell script provided in the scriptUri field above
        inline:
          type: array
          description: Array of PowerShell commands to execute
          items:
            type: string
        runElevated:
          type: boolean
          default: false
          description: If specified, the PowerShell script will be run with elevated privileges
        runAsSystem:
          type: boolean
          default: false
          description: If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true.
        validExitCodes:
          type: array
          description: 'Valid exit codes for the PowerShell script. [Default: 0]'
          items:
            type: integer
            format: int32
      type: object
    ImageTemplateFileValidator:
      description: Uploads files required for validation to VMs (Linux, Windows). Corresponds to Packer file provisioner
      x-ms-discriminator-value: File
      properties:
        type:
          type: string
          description: The type of validation you want to use on the Image. For example, "Shell" can be shell validation
        name:
          type: string
          description: Friendly Name to provide context on what this validation step does
        sourceUri:
          type: string
          description: The URI of the file to be uploaded to the VM for validation. It can be a github link, Azure Storage URI (authorized or SAS), etc
        sha256Checksum:
          type: string
          default: ''
          description: SHA256 checksum of the file provided in the sourceUri field above
        destination:
          type: string
          description: The absolute path to a file (with nested directory structures already created) where the file (from sourceUri) will be uploaded to in the VM
      type: object
    ImageTemplateCustomizer:
      type: object
      description: Describes a unit of image customization
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        name:
          type: string
          description: Friendly Name to provide context on what this customization step does
      required:
        - type
    ImageTemplateShellCustomizer:
      description: Runs a shell script during the customization phase (Linux). Corresponds to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
      x-ms-discriminator-value: Shell
      properties:
        type:
          type: string
          description: The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        name:
          type: string
          description: Friendly Name to provide context on what this customization step does
        scriptUri:
          type: string
          description: URI of the shell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
        sha256Checksum:
          type: string
          default: ''
          description: SHA256 checksum of the shell script provided in the scriptUri field
        inline:
          type: array
          description: Array of shell commands to execute
          items:
            type: string
      type: object
    ImageTemplateRestartCustomizer:
      description: Reboots a VM and waits for it to come back online (Windows). Corresponds to Packer windows-restart provisioner
      x-ms-discriminator-value: WindowsRestart
      properties:
        type:
          type: string
          description: The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        name:
          type: string
          description: Friendly Name to provide context on what this customization step does
        restartCommand:
          type: string
          description: 'Command to execute the restart [Default: ''shutdown /r /f /t 0 /c "packer restart"'']'
        restartCheckCommand:
          type: string
          description: 'Command to check if restart succeeded [Default: '''']'
        restartTimeout:
          type: string
          description: 'Restart timeout specified as a string of magnitude and unit, e.g. ''5m'' (5 minutes) or ''2h'' (2 hours) [Default: ''5m'']'
      type: object
    ImageTemplateWindowsUpdateCustomizer:
      description: Installs Windows Updates. Corresponds to Packer Windows Update Provisioner (https://github.com/rgl/packer-provisioner-windows-update)
      x-ms-discriminator-value: WindowsUpdate
      properties:
        type:
          type: string
          description: The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        name:
          type: string
          description: Friendly Name to provide context on what this customization step does
        searchCriteria:
          type: string
          description: Criteria to search updates. Omit or specify empty string to use the default (search all). Refer to above link for examples and detailed description of this field.
        filters:
          type: array
          description: Array of filters to select updates to apply. Omit or specify empty array to use the default (no filter). Refer to above link for examples and detailed description of this field.
          items:
            type: string
        updateLimit:
          type: integer
          format: int32
          minimum: 0
          default: 0
          description: Maximum number of updates to apply at a time. Omit or specify 0 to use the default (1000)
      type: object
    ImageTemplatePowerShellCustomizer:
      description: Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
      x-ms-discriminator-value: PowerShell
      properties:
        type:
          type: string
          description: The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        name:
          type: string
          description: Friendly Name to provide context on what this customization step does
        scriptUri:
          type: string
          description: URI of the PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
        sha256Checksum:
          type: string
          default: ''
          description: SHA256 checksum of the power shell script provided in the scriptUri field above
        inline:
          type: array
          description: Array of PowerShell commands to execute
          items:
            type: string
        runElevated:
          type: boolean
          default: false
          description: If specified, the PowerShell script will be run with elevated privileges
        runAsSystem:
          type: boolean
          default: false
          description: If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true.
        validExitCodes:
          type: array
          description: 'Valid exit codes for the PowerShell script. [Default: 0]'
          items:
            type: integer
            format: int32
      type: object
    ImageTemplateFileCustomizer:
      description: Uploads files to VMs (Linux, Windows). Corresponds to Packer file provisioner
      x-ms-discriminator-value: File
      properties:
        type:
          type: string
          description: The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
        name:
          type: string
          description: Friendly Name to provide context on what this customization step does
        sourceUri:
          type: string
          description: The URI of the file to be uploaded for customizing the VM. It can be a github link, SAS URI for Azure Storage, etc
        sha256Checksum:
          type: string
          default: ''
          description: SHA256 checksum of the file provided in the sourceUri field above
        destination:
          type: string
          description: The absolute path to a file (with nested directory structures already created) where the file (from sourceUri) will be uploaded to in the VM
      type: object
    ImageTemplateDistributor:
      type: object
      description: Generic distribution object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Type of distribution.
        runOutputName:
          type: string
          description: The name to be used for the associated RunOutput.
          pattern: ^[A-Za-z0-9-_.]{1,64}$
        artifactTags:
          type: object
          additionalProperties:
            type: string
          description: Tags that will be applied to the artifact once it has been created/updated by the distributor.
      required:
        - type
        - runOutputName
    ImageTemplateManagedImageDistributor:
      x-ms-discriminator-value: ManagedImage
      description: Distribute as a Managed Disk Image.
      required:
        - imageId
        - location
      properties:
        type:
          type: string
          description: Type of distribution.
        runOutputName:
          type: string
          description: The name to be used for the associated RunOutput.
          pattern: ^[A-Za-z0-9-_.]{1,64}$
        artifactTags:
          type: object
          additionalProperties:
            type: string
          description: Tags that will be applied to the artifact once it has been created/updated by the distributor.
        imageId:
          type: string
          description: Resource Id of the Managed Disk Image
        location:
          type: string
          description: Azure location for the image, should match if image already exists
      type: object
    ImageTemplateSharedImageDistributor:
      x-ms-discriminator-value: SharedImage
      description: Distribute via Azure Compute Gallery.
      required:
        - galleryImageId
      properties:
        type:
          type: string
          description: Type of distribution.
        runOutputName:
          type: string
          description: The name to be used for the associated RunOutput.
          pattern: ^[A-Za-z0-9-_.]{1,64}$
        artifactTags:
          type: object
          additionalProperties:
            type: string
          description: Tags that will be applied to the artifact once it has been created/updated by the distributor.
        galleryImageId:
          type: string
          description: Resource Id of the Azure Compute Gallery image
        replicationRegions:
          description: '[Deprecated] A list of regions that the image will be replicated to. This list can be specified only if targetRegions is not specified. This field is deprecated - use targetRegions instead.'
          type: array
          items:
            type: string
        excludeFromLatest:
          type: boolean
          default: false
          description: Flag that indicates whether created image version should be excluded from latest. Omit to use the default (false).
        storageAccountType:
          $ref: '#/components/schemas/SharedImageStorageAccountType'
          description: '[Deprecated] Storage account type to be used to store the shared image. Omit to use the default (Standard_LRS). This field can be specified only if replicationRegions is specified. This field is deprecated - use targetRegions instead.'
        targetRegions:
          type: array
          items:
            $ref: '#/components/schemas/TargetRegion'
          x-ms-identifiers: []
          description: The target regions where the distributed Image Version is going to be replicated to. This object supersedes replicationRegions and can be specified only if replicationRegions is not specified.
        versioning:
          $ref: '#/components/schemas/DistributeVersioner'
      type: object
    TargetRegion:
      type: object
      properties:
        name:
          type: string
          description: The name of the region.
        replicaCount:
          type: integer
          format: int32
          minimum: 1
          default: 1
          description: The number of replicas of the Image Version to be created in this region. Omit to use the default (1).
        storageAccountType:
          $ref: '#/components/schemas/SharedImageStorageAccountType'
          description: Specifies the storage account type to be used to store the image in this region. Omit to use the default (Standard_LRS).
      required:
        - name
      description: Describes the target region information.
    ImageTemplateVhdDistributor:
      x-ms-discriminator-value: VHD
      description: Distribute via VHD in a storage account.
      properties:
        type:
          type: string
          description: Type of distribution.
        runOutputName:
          type: string
          description: The name to be used for the associated RunOutput.
          pattern: ^[A-Za-z0-9-_.]{1,64}$
        artifactTags:
          type: object
          additionalProperties:
            type: string
          description: Tags that will be applied to the artifact once it has been created/updated by the distributor.
        uri:
          type: string
          description: Optional Azure Storage URI for the distributed VHD blob. Omit to use the default (empty string) in which case VHD would be published to the storage account in the staging resource group.
      type: object
    PlatformImagePurchasePlan:
      type: object
      description: Purchase plan configuration for platform image.
      properties:
        planName:
          type: string
          description: Name of the purchase plan.
        planProduct:
          type: string
          description: Product of the purchase plan.
        planPublisher:
          type: string
          description: Publisher of the purchase plan.
      required:
        - planName
        - planProduct
        - planPublisher
    VirtualNetworkConfig:
      type: object
      description: Virtual Network configuration.
      properties:
        subnetId:
          type: string
          description: Resource id of a pre-existing subnet on which the build VM and validation VM will be deployed
        containerInstanceSubnetId:
          type: string
          description: Resource id of a pre-existing subnet on which Azure Container Instance will be deployed for Isolated Builds. This field may be specified only if `subnetId` is also specified and must be on the same Virtual Network as the subnet specified in `subnetId`.
        proxyVmSize:
          type: string
          default: ''
          description: Size of the proxy virtual machine used to pass traffic to the build VM and validation VM. This must not be specified if `containerInstanceSubnetId` is specified because no proxy virtual machine is deployed in that case. Omit or specify empty string to use the default (Standard_A1_v2).
    ImageTemplateVmProfile:
      type: object
      description: Describes the virtual machines used to build and validate images
      properties:
        vmSize:
          type: string
          default: ''
          description: Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
        osDiskSizeGB:
          type: integer
          format: int32
          minimum: 0
          default: 0
          description: Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
        userAssignedIdentities:
          type: array
          description: Optional array of resource IDs of user assigned managed identities to be configured on the build VM and validation VM. This may include the identity of the image template.
          items:
            type: string
        vnetConfig:
          $ref: '#/components/schemas/VirtualNetworkConfig'
          description: Optional configuration of the virtual network to use to deploy the build VM and validation VM in. Omit if no specific virtual network needs to be used.
    SharedImageStorageAccountType:
      type: string
      enum:
        - Standard_LRS
        - Standard_ZRS
        - Premium_LRS
      x-ms-enum:
        name: SharedImageStorageAccountType
        modelAsString: true
      description: Specifies the storage account type to be used to store the Azure Compute Gallery image version in.
    ProvisioningState:
      type: string
      enum:
        - Creating
        - Updating
        - Succeeded
        - Failed
        - Deleting
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: false
      description: Provisioning state of the resource
    onBuildError:
      type: string
      enum:
        - cleanup
        - abort
      x-ms-enum:
        name: onBuildError
        modelAsString: true
      description: Error handling behavior upon build failure
    ProvisioningError:
      type: object
      description: Describes the error happened when create or update an image template
      properties:
        provisioningErrorCode:
          type: string
          enum:
            - BadSourceType
            - BadPIRSource
            - BadManagedImageSource
            - BadSharedImageVersionSource
            - BadCustomizerType
            - UnsupportedCustomizerType
            - NoCustomizerScript
            - BadValidatorType
            - UnsupportedValidatorType
            - NoValidatorScript
            - BadDistributeType
            - BadSharedImageDistribute
            - BadStagingResourceGroup
            - ServerError
            - Other
          x-ms-enum:
            name: ProvisioningErrorCode
            modelAsString: true
          description: Error code of the provisioning failure
        message:
          type: string
          description: Verbose error message about the provisioning failure
    ImageTemplateLastRunStatus:
      type: object
      description: Describes the latest status of running an image template
      properties:
        startTime:
          type: string
          format: date-time
          description: Start time of the last run (UTC)
        endTime:
          type: string
          format: date-time
          description: End time of the last run (UTC)
        runState:
          type: string
          enum:
            - Running
            - Canceling
            - Succeeded
            - PartiallySucceeded
            - Failed
            - Canceled
          x-ms-enum:
            name: RunState
            modelAsString: false
          description: State of the last run
        runSubState:
          type: string
          enum:
            - Queued
            - Building
            - Customizing
            - Optimizing
            - Validating
            - Distributing
          x-ms-enum:
            name: RunSubState
            modelAsString: false
          description: Sub-state of the last run
        message:
          type: string
          description: Verbose information about the last run state
    ImageTemplateAutoRun:
      type: object
      description: Indicates if the image template needs to be built on create/update
      properties:
        state:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: AutoRunState
            modelAsString: false
            values:
              - value: Enabled
                description: Autorun is enabled
                name: AutoRunEnabled
              - value: Disabled
                description: Autorun is disabled
                name: AutoRunDisabled
          description: Enabling this field will trigger an automatic build on image template creation or update.
    ImageTemplateProperties:
      type: object
      description: Describes the properties of an image template
      properties:
        source:
          $ref: '#/components/schemas/ImageTemplateSource'
          description: Specifies the properties used to describe the source image.
        customize:
          type: array
          items:
            $ref: '#/components/schemas/ImageTemplateCustomizer'
          x-ms-identifiers: []
          description: Specifies the properties used to describe the customization steps of the image, like Image source etc
        optimize:
          type: object
          description: Specifies optimization to be performed on image.
          properties:
            vmBoot:
              type: object
              description: Optimization is applied on the image for a faster VM boot.
              properties:
                state:
                  type: string
                  enum:
                    - Enabled
                    - Disabled
                  x-ms-enum:
                    name: VMBootOptimizationState
                    modelAsString: false
                  description: Enabling this field will improve VM boot time by optimizing the final customized image output.
        validate:
          type: object
          description: Configuration options and list of validations to be performed on the resulting image.
          properties:
            continueDistributeOnFailure:
              type: boolean
              default: false
              description: 'If validation fails and this field is set to false, output image(s) will not be distributed. This is the default behavior. If validation fails and this field is set to true, output image(s) will still be distributed. Please use this option with caution as it may result in bad images being distributed for use. In either case (true or false), the end to end image run will be reported as having failed in case of a validation failure. [Note: This field has no effect if validation succeeds.]'
            sourceValidationOnly:
              type: boolean
              default: false
              description: If this field is set to true, the image specified in the 'source' section will directly be validated. No separate build will be run to generate and then validate a customized image.
            inVMValidations:
              type: array
              items:
                $ref: '#/components/schemas/ImageTemplateInVMValidator'
              x-ms-identifiers: []
              description: List of validations to be performed.
        distribute:
          type: array
          items:
            $ref: '#/components/schemas/ImageTemplateDistributor'
          x-ms-identifiers: []
          description: The distribution targets where the image output needs to go to.
        errorHandling:
          type: object
          description: Error handling options upon a build failure
          properties:
            onCustomizerError:
              $ref: '#/components/schemas/onBuildError'
              default: cleanup
              description: If there is a customizer error and this field is set to 'cleanup', the build VM and associated network resources will be cleaned up. This is the default behavior. If there is a customizer error and this field is set to 'abort', the build VM will be preserved.
            onValidationError:
              $ref: '#/components/schemas/onBuildError'
              default: cleanup
              description: If there is a validation error and this field is set to 'cleanup', the build VM and associated network resources will be cleaned up. This is the default behavior. If there is a validation error and this field is set to 'abort', the build VM will be preserved.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource
          readOnly: true
        provisioningError:
          $ref: '#/components/schemas/ProvisioningError'
          description: Provisioning error, if any
          readOnly: true
        lastRunStatus:
          $ref: '#/components/schemas/ImageTemplateLastRunStatus'
          description: State of 'run' that is currently executing or was last executed.
          readOnly: true
        buildTimeoutInMinutes:
          type: integer
          format: int32
          minimum: 0
          maximum: 960
          default: 0
          description: Maximum duration to wait while building the image template (includes all customizations, optimization, validations, and distributions). Omit or specify 0 to use the default (4 hours).
        vmProfile:
          $ref: '#/components/schemas/ImageTemplateVmProfile'
          description: Describes how virtual machine is set up to build images
        stagingResourceGroup:
          type: string
          description: The staging resource group id in the same subscription as the image template that will be used to build the image. If this field is empty, a resource group with a random name will be created. If the resource group specified in this field doesn't exist, it will be created with the same name. If the resource group specified exists, it must be empty and in the same region as the image template. The resource group created will be deleted during template deletion if this field is empty or the resource group specified doesn't exist, but if the resource group specified exists the resources created in the resource group will be deleted during template deletion and the resource group itself will remain.
        exactStagingResourceGroup:
          type: string
          description: The staging resource group id in the same subscription as the image template that will be used to build the image. This read-only field differs from 'stagingResourceGroup' only if the value specified in the 'stagingResourceGroup' field is empty.
          readOnly: true
        autoRun:
          $ref: '#/components/schemas/ImageTemplateAutoRun'
          description: Indicates whether or not to automatically run the image template build on template creation or update.
        managedResourceTags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Tags that will be applied to the resource group and/or resources created by the service.
      required:
        - source
        - distribute
    ImageTemplateIdentity:
      type: object
      properties:
        type:
          type: string
          description: The type of identity used for the image template. The type 'None' will remove any identities from the image template.
          enum:
            - UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      description: Identity for the image template.
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          type: string
          readOnly: true
    RunOutputProperties:
      type: object
      description: Describes the properties of a run output
      properties:
        artifactId:
          type: string
          description: The resource id of the artifact.
        artifactUri:
          type: string
          description: The location URI of the artifact.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource
          readOnly: true
    ImageTemplate:
      description: Image template is an ARM resource managed by Microsoft.VirtualMachineImages provider
      required:
        - identity
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ImageTemplateProperties'
          description: The properties of the image template
        identity:
          $ref: '#/components/schemas/ImageTemplateIdentity'
          description: The identity of the image template, if configured.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ImageTemplateUpdateParameters:
      description: Parameters for updating an image template.
      properties:
        identity:
          $ref: '#/components/schemas/ImageTemplateIdentity'
          description: The identity of the image template, if configured.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The user-specified tags associated with the image template.
        properties:
          type: object
          description: Parameters for updating an image template.
          properties:
            distribute:
              type: array
              items:
                $ref: '#/components/schemas/ImageTemplateDistributor'
              x-ms-identifiers: []
              description: The distribution targets where the image output needs to go to.
            vmProfile:
              $ref: '#/components/schemas/ImageTemplateVmProfile'
              description: Describes how virtual machine is set up to build images
      type: object
    RunOutput:
      description: Represents an output that was created by running an image template.
      properties:
        properties:
          $ref: '#/components/schemas/RunOutputProperties'
          x-ms-client-flatten: true
          description: The properties of the run output
      type: object
    RunOutputCollection:
      type: object
      description: The result of List run outputs operation
      properties:
        value:
          description: An array of run outputs
          type: array
          items:
            $ref: '#/components/schemas/RunOutput'
        nextLink:
          type: string
          description: The continuation token.
    TriggerStatus:
      type: object
      description: Describes the status of a trigger
      properties:
        code:
          type: string
          description: The status code.
          readOnly: true
        message:
          type: string
          description: The detailed status message, including for alerts and error messages.
          readOnly: true
        time:
          type: string
          format: date-time
          description: The time of the status.
          readOnly: true
    TriggerProperties:
      type: object
      description: Describes the properties of a trigger
      discriminator:
        propertyName: kind
      properties:
        kind:
          type: string
          description: The kind of trigger.
          x-ms-mutability:
            - create
            - read
        status:
          $ref: '#/components/schemas/TriggerStatus'
          description: Trigger status
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource
          readOnly: true
      required:
        - kind
    SourceImageTriggerProperties:
      description: Properties of SourceImage kind of trigger
      x-ms-discriminator-value: SourceImage
      properties:
        kind:
          type: string
          description: The kind of trigger.
          x-ms-mutability:
            - create
            - read
        status:
          $ref: '#/components/schemas/TriggerStatus'
          description: Trigger status
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource
          readOnly: true
      type: object
    Trigger:
      description: Represents a trigger that can invoke an image template build.
      properties:
        properties:
          $ref: '#/components/schemas/TriggerProperties'
          x-ms-client-flatten: true
          description: The properties of a trigger
      type: object
    TriggerCollection:
      type: object
      description: The result of List triggers operation
      properties:
        value:
          description: An array of triggers
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
        nextLink:
          type: string
          description: The continuation token.
      required:
        - value
    DistributeVersioner:
      type: object
      discriminator:
        propertyName: scheme
      properties:
        scheme:
          type: string
          description: Version numbering scheme to be used.
      description: Describes how to generate new x.y.z version number for distribution.
      required:
        - scheme
    DistributeVersionerLatest:
      x-ms-discriminator-value: Latest
      description: Generates version number that will be latest based on existing version numbers.
      properties:
        scheme:
          type: string
          description: Version numbering scheme to be used.
        major:
          type: integer
          format: int32
          minimum: -1
          default: -1
          description: Major version for the generated version number. Determine what is "latest" based on versions with this value as the major version. -1 is equivalent to leaving it unset.
      type: object
    DistributeVersionerSource:
      x-ms-discriminator-value: Source
      description: Generates version number based on version number of source image
      properties:
        scheme:
          type: string
          description: Version numbering scheme to be used.
      type: object
  x-stackQL-resources:
    virtual_machine_image_templates:
      id: azure.image_builder.virtual_machine_image_templates
      name: virtual_machine_image_templates
      title: virtual_machine_image_templates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates?api-version=2024-02-01/get'
            operationId: VirtualMachineImageTemplates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageTemplateListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates?api-version=2024-02-01/get'
            operationId: VirtualMachineImageTemplates_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageTemplateListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}?api-version=2024-02-01/put'
            operationId: VirtualMachineImageTemplates_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageTemplate
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}?api-version=2024-02-01/patch'
            operationId: VirtualMachineImageTemplates_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageTemplate
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}?api-version=2024-02-01/get'
            operationId: VirtualMachineImageTemplates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageTemplate
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}?api-version=2024-02-01/delete'
            operationId: VirtualMachineImageTemplates_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        run:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1run?api-version=2024-02-01/post'
            operationId: VirtualMachineImageTemplates_Run
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1cancel?api-version=2024-02-01/post'
            operationId: VirtualMachineImageTemplates_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates/methods/delete'
    virtual_machine_image_templates_run_outputs:
      id: azure.image_builder.virtual_machine_image_templates_run_outputs
      name: virtual_machine_image_templates_run_outputs
      title: virtual_machine_image_templates_run_outputs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1runOutputs?api-version=2024-02-01/get'
            operationId: VirtualMachineImageTemplatesRunOutputs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RunOutputCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1runOutputs~1{runOutputName}?api-version=2024-02-01/get'
            operationId: VirtualMachineImageTemplatesRunOutput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RunOutput
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates_run_outputs/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_image_templates_run_outputs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    triggers:
      id: azure.image_builder.triggers
      name: triggers
      title: triggers
      methods:
        list_by_image_template:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1triggers?api-version=2024-02-01/get'
            operationId: Triggers_ListByImageTemplate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TriggerCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1triggers~1{triggerName}?api-version=2024-02-01/get'
            operationId: Triggers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Trigger
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1triggers~1{triggerName}?api-version=2024-02-01/put'
            operationId: Triggers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Trigger
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VirtualMachineImages~1imageTemplates~1{imageTemplateName}~1triggers~1{triggerName}?api-version=2024-02-01/delete'
            operationId: Triggers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/get'
          - $ref: '#/components/x-stackQL-resources/triggers/methods/list_by_image_template'
        insert:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/delete'
    operations:
      id: azure.image_builder.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.VirtualMachineImages~1operations?api-version=2024-02-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_virtual_machine_image_templates:
      id: azure.image_builder.vw_virtual_machine_image_templates
      name: vw_virtual_machine_image_templates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.customize') as "customize",
              JSON_EXTRACT(properties, '$.optimize') as "optimize",
              JSON_EXTRACT(properties, '$.validate') as "validate",
              JSON_EXTRACT(properties, '$.distribute') as "distribute",
              JSON_EXTRACT(properties, '$.errorHandling') as "error_handling",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.provisioningError') as "provisioning_error",
              JSON_EXTRACT(properties, '$.lastRunStatus') as "last_run_status",
              JSON_EXTRACT(properties, '$.buildTimeoutInMinutes') as "build_timeout_in_minutes",
              JSON_EXTRACT(properties, '$.vmProfile') as "vm_profile",
              JSON_EXTRACT(properties, '$.stagingResourceGroup') as "staging_resource_group",
              JSON_EXTRACT(properties, '$.exactStagingResourceGroup') as "exact_staging_resource_group",
              JSON_EXTRACT(properties, '$.autoRun') as "auto_run",
              JSON_EXTRACT(properties, '$.managedResourceTags') as "managed_resource_tags",
              subscriptionId,
              resourceGroupName,
              imageTemplateName
              FROM azure.image_builder.virtual_machine_image_templates
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.customize') as "customize",
                json_extract_path_text(properties, '$.optimize') as "optimize",
                json_extract_path_text(properties, '$.validate') as "validate",
                json_extract_path_text(properties, '$.distribute') as "distribute",
                json_extract_path_text(properties, '$.errorHandling') as "error_handling",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.provisioningError') as "provisioning_error",
                json_extract_path_text(properties, '$.lastRunStatus') as "last_run_status",
                json_extract_path_text(properties, '$.buildTimeoutInMinutes') as "build_timeout_in_minutes",
                json_extract_path_text(properties, '$.vmProfile') as "vm_profile",
                json_extract_path_text(properties, '$.stagingResourceGroup') as "staging_resource_group",
                json_extract_path_text(properties, '$.exactStagingResourceGroup') as "exact_staging_resource_group",
                json_extract_path_text(properties, '$.autoRun') as "auto_run",
                json_extract_path_text(properties, '$.managedResourceTags') as "managed_resource_tags",
                subscriptionId,
                resourceGroupName,
                imageTemplateName
                FROM azure.image_builder.virtual_machine_image_templates
                WHERE subscriptionId = 'replace-me';
    vw_virtual_machine_image_templates_run_outputs:
      id: azure.image_builder.vw_virtual_machine_image_templates_run_outputs
      name: vw_virtual_machine_image_templates_run_outputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.artifactId') as "artifact_id",
              JSON_EXTRACT(properties, '$.artifactUri') as "artifact_uri",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              imageTemplateName,
              runOutputName
              FROM azure.image_builder.virtual_machine_image_templates_run_outputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND imageTemplateName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.artifactId') as "artifact_id",
                json_extract_path_text(properties, '$.artifactUri') as "artifact_uri",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                imageTemplateName,
                runOutputName
                FROM azure.image_builder.virtual_machine_image_templates_run_outputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND imageTemplateName = 'replace-me';
    vw_triggers:
      id: azure.image_builder.vw_triggers
      name: vw_triggers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.kind') as "kind",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              imageTemplateName,
              triggerName
              FROM azure.image_builder.triggers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND imageTemplateName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.kind') as "kind",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                imageTemplateName,
                triggerName
                FROM azure.image_builder.triggers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND imageTemplateName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.VirtualMachineImages/imageTemplates?api-version=2024-02-01:
    get:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_List
      description: Gets information about the VM image templates associated with the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTemplateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates?api-version=2024-02-01:
    get:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_ListByResourceGroup
      description: Gets information about the VM image templates associated with the specified resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTemplateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}?api-version=2024-02-01:
    put:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_CreateOrUpdate
      description: Create or update a virtual machine image template
      requestBody:
        description: Parameters supplied to the CreateImageTemplate operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageTemplate'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTemplate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_Update
      description: Update the tags for this Virtual Machine Image Template
      requestBody:
        description: Additional parameters for Image Template update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageTemplateUpdateParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTemplate'
        '202':
          description: The operation will be completed asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_Get
      description: Get information about a virtual machine image template
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_Delete
      description: Delete a virtual machine image template
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
        '204':
          description: NoContent -- VM image template does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/run?api-version=2024-02-01:
    post:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_Run
      description: Create artifacts from a existing image template
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The operation will be completed asynchronously.
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/cancel?api-version=2024-02-01:
    post:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplates_Cancel
      description: Cancel the long running image build based on the image template
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The request is accepted.
        '204':
          description: The long running image build has been canceled.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/runOutputs?api-version=2024-02-01:
    get:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplatesRunOutputs_List
      description: List all run outputs for the specified Image Template resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunOutputCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: VirtualMachineImageTemplates_ListRunOutputs
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/runOutputs/{runOutputName}?api-version=2024-02-01:
    get:
      tags:
        - VirtualMachineImageTemplate
      operationId: VirtualMachineImageTemplatesRunOutput_Get
      description: Get the specified run output for the specified image template resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
        - $ref: '#/components/parameters/RunOutputNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunOutput'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: VirtualMachineImageTemplates_GetRunOutput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/triggers?api-version=2024-02-01:
    get:
      tags:
        - Triggers
      operationId: Triggers_ListByImageTemplate
      description: List all triggers for the specified Image Template resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VirtualMachineImages/imageTemplates/{imageTemplateName}/triggers/{triggerName}?api-version=2024-02-01:
    get:
      tags:
        - Triggers
      operationId: Triggers_Get
      description: Get the specified trigger for the specified image template resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
        - $ref: '#/components/parameters/TriggerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Triggers
      operationId: Triggers_CreateOrUpdate
      description: Create or update a trigger for the specified virtual machine image template
      requestBody:
        description: Parameters supplied to the CreateTrigger operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
        - $ref: '#/components/parameters/TriggerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Triggers
      operationId: Triggers_Delete
      description: Delete a trigger for the specified virtual machine image template
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ImageTemplateNameParameter'
        - $ref: '#/components/parameters/TriggerNameParameter'
      responses:
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URI to poll for completion status.
        '204':
          description: NoContent -- trigger by the name doesn't exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.VirtualMachineImages/operations?api-version=2024-02-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists available operations for the Microsoft.VirtualMachineImages provider
      parameters: []
      responses:
        '200':
          description: The operation was successful. The response contains the list of available operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
