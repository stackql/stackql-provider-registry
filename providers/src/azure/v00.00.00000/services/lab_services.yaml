openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Lab Services REST API.
  description: 'Azure Lab Services enables you to easily set up and provide on-demand access to preconfigured virtual machines for your workloads: teaching a class, training professionals, or running hackathons or hands-on labs, and more. Simply input what you need in a lab and let the service automatically roll it out to your audience. Your users go to a single place to access all the VMs they are given across labs, and connect from there to learn, explore, and innovate.'
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    VirtualMachineNameParameter:
      name: virtualMachineName
      in: path
      description: The ID of the virtual machine that uniquely identifies it within the containing lab. Used in resource URIs.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\\._\\(\\)]+$
        minLength: 1
        maxLength: 100
        type: string
    ImageNameParameter:
      name: imageName
      in: path
      description: The image name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\\._\\(\\)]+$
        minLength: 1
        maxLength: 100
        type: string
    OperationResultId:
      name: operationResultId
      in: path
      description: The operation result ID / name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\\._\\(\\)]+$
        minLength: 1
        maxLength: 100
        type: string
    LabPlanNameParameter:
      name: labPlanName
      in: path
      description: The name of the lab plan that uniquely identifies it within containing resource group. Used in resource URIs and in UI.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        type: string
    LocationRouteParameter:
      name: location
      in: path
      description: The location name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        minLength: 1
        maxLength: 100
        type: string
    UserNameParameter:
      name: userName
      in: path
      description: The name of the user that uniquely identifies it within containing lab. Used in resource URIs.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\\._\\(\\)]+$
        minLength: 1
        maxLength: 100
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LabNameParameter:
      name: labName
      in: path
      description: The name of the lab that uniquely identifies it within containing lab plan. Used in resource URIs.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        type: string
    ScheduleNameParameter:
      name: scheduleName
      in: path
      description: The name of the schedule that uniquely identifies it within containing lab. Used in resource URIs.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\\._\\(\\)]+$
        minLength: 1
        maxLength: 100
        type: string
  schemas:
    VirtualMachine:
      description: A lab virtual machine resource.
      required:
        - properties
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System data of the Lab virtual machine.
          readOnly: true
        properties:
          description: Virtual machine resource properties
          $ref: '#/components/schemas/VirtualMachineProperties'
          x-ms-client-flatten: true
      type: object
    PagedVirtualMachines:
      description: Paged list of lab services virtual machines.
      type: object
      properties:
        value:
          description: The array page of virtual machine results.
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachine'
          readOnly: true
        nextLink:
          description: The link to get the next page of virtual machine results.
          type: string
          readOnly: true
    VirtualMachineProperties:
      description: Virtual machine resource properties
      type: object
      properties:
        provisioningState:
          description: Current provisioning state of the virtual machine.
          $ref: '#/components/schemas/provisioningState'
          readOnly: true
        state:
          description: The current state of the virtual machine
          $ref: '#/components/schemas/VirtualMachineState'
          readOnly: true
        resourceOperationError:
          description: Error details of last operation done on lab plan.
          $ref: '#/components/schemas/ResourceOperationError'
          readOnly: true
        connectionProfile:
          description: Profile for information about connecting to the virtual machine.
          $ref: '#/components/schemas/VirtualMachineConnectionProfile'
          readOnly: true
        claimedByUserId:
          description: The lab user ID (not the PUID!) of who claimed the virtual machine.
          type: string
          readOnly: true
        vmType:
          description: The type of this VM resource
          $ref: '#/components/schemas/VirtualMachineType'
          readOnly: true
    ResetPasswordBody:
      description: Body of a reset password request.
      type: object
      properties:
        username:
          description: The user whose password is being reset
          type: string
          x-ms-mutability:
            - read
            - create
        password:
          description: The password
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - create
      required:
        - username
        - password
    VirtualMachineState:
      type: string
      enum:
        - Stopped
        - Starting
        - Running
        - Stopping
        - ResettingPassword
        - Reimaging
        - Redeploying
      description: The state of a virtual machine.
      x-ms-enum:
        name: VirtualMachineState
        modelAsString: false
        values:
          - value: Stopped
            description: The VM is currently stopped.
          - value: Starting
            description: The VM is starting.
          - value: Running
            description: The VM is running.
          - value: Stopping
            description: The VM is stopping.
          - value: ResettingPassword
            description: The VM password is being reset.
          - value: Reimaging
            description: The VM is being reimaged.
          - value: Redeploying
            description: The VM is being redeployed.
    VirtualMachineConnectionProfile:
      description: The connection information for the virtual machine
      type: object
      properties:
        privateIpAddress:
          description: The private IP address of the virtual machine.
          type: string
          readOnly: true
        sshAuthority:
          description: Port and host name separated by semicolon for connecting via SSH protocol to the virtual machine.
          type: string
          readOnly: true
        sshInBrowserUrl:
          description: URL for connecting via SSH protocol to the virtual machine in browser.
          $ref: '#/components/schemas/url'
          readOnly: true
        rdpAuthority:
          description: Port and host name separated by semicolon for connecting via RDP protocol to the virtual machine.
          type: string
          readOnly: true
        rdpInBrowserUrl:
          description: URL for connecting via RDP protocol to the virtual machine in browser.
          $ref: '#/components/schemas/url'
          readOnly: true
        adminUsername:
          description: The username used to log on to the virtual machine as admin.
          type: string
          readOnly: true
        nonAdminUsername:
          description: The username used to log on to the virtual machine as non-admin, if one exists.
          type: string
          readOnly: true
    VirtualMachineType:
      type: string
      enum:
        - User
        - Template
      description: The type of the lab virtual machine.
      x-ms-enum:
        name: VirtualMachineType
        modelAsString: false
        values:
          - value: User
            description: A user VM
          - value: Template
            description: A template VM
    Image:
      description: Lab services virtual machine image
      required:
        - properties
      properties:
        systemData:
          description: Metadata pertaining to creation and last modification of the image.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          description: Image resource properties
          $ref: '#/components/schemas/ImageProperties'
          x-ms-client-flatten: true
      type: object
    PagedImages:
      description: Paged list of Lab services virtual machine images.
      type: object
      properties:
        value:
          description: The array page of virtual machine images.
          type: array
          items:
            $ref: '#/components/schemas/Image'
          readOnly: true
        nextLink:
          description: The link to get the next page of image results.
          type: string
          readOnly: true
    ImageUpdate:
      description: Lab services virtual machine image for updates.
      properties:
        properties:
          description: Image resource properties
          $ref: '#/components/schemas/ImageUpdateProperties'
          x-ms-client-flatten: true
      type: object
    ImageUpdateProperties:
      description: Properties of an image resource update
      type: object
      properties:
        enabledState:
          description: Is the image enabled
          default: Disabled
          $ref: '#/components/schemas/enableState'
    ImageProperties:
      description: Properties of an image resource.
      required:
        - enabledState
      properties:
        enabledState:
          description: Is the image enabled
          default: Disabled
          $ref: '#/components/schemas/enableState'
        provisioningState:
          description: Current provisioning state of the image.
          $ref: '#/components/schemas/provisioningState'
          readOnly: true
        displayName:
          description: The image display name.
          type: string
          readOnly: true
        description:
          description: A description of the image.
          type: string
          readOnly: true
        iconUrl:
          description: URL of the image icon.
          type: string
          readOnly: true
        author:
          description: The image author.
          type: string
          readOnly: true
        osType:
          description: The OS Type of the image.
          $ref: '#/components/schemas/osType'
          readOnly: true
        plan:
          description: The ID of marketplace plan associated with the image (optional).
          type: string
          readOnly: true
        termsStatus:
          description: The status of image terms of use (enabled = accepted, disabled = not accepted).
          $ref: '#/components/schemas/enableState'
          readOnly: true
        offer:
          description: The ID of an offer associated with the image.
          type: string
          readOnly: true
        publisher:
          description: The ID of the publisher of the image.
          type: string
          readOnly: true
        sku:
          description: The image SKU.
          type: string
          readOnly: true
        version:
          description: The image version.
          type: string
          readOnly: true
        sharedGalleryId:
          description: The ID for the image in the shared gallery.
          $ref: '#/components/schemas/url'
          readOnly: true
        availableRegions:
          description: The available regions of the image in the shared gallery.
          type: array
          items:
            type: string
        osState:
          description: The OS State of the image.
          $ref: '#/components/schemas/osState'
          readOnly: true
      type: object
    OperationResult:
      description: A long running operation result
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        status:
          description: The operation status
          type: string
          enum:
            - NotStarted
            - InProgress
            - Succeeded
            - Failed
            - Canceled
          x-ms-enum:
            name: OperationStatus
            modelAsString: false
            values:
              - value: NotStarted
                description: The operation has been accepted but hasn't started.
              - value: InProgress
                description: The operation is running
              - value: Succeeded
                description: The operation Succeeded
              - value: Failed
                description: The operation failed
              - value: Canceled
                description: Not supported yet
        startTime:
          description: Start time
          type: string
          format: date-time
        endTime:
          description: End time
          type: string
          format: date-time
        percentComplete:
          description: Percent completion
          type: number
        error:
          description: The error for a failure if the operation failed.
          $ref: '#/components/schemas/ErrorDetail'
      required:
        - status
    LabServicesSku:
      description: Azure Lab Services resource SKUs
      type: object
      properties:
        resourceType:
          description: The lab services resource type.
          type: string
          readOnly: true
        name:
          description: The name of the SKU.
          type: string
          readOnly: true
        tier:
          description: The tier of the SKU.
          type: string
          enum:
            - Standard
            - Premium
          x-ms-enum:
            name: LabServicesSkuTier
            modelAsString: true
          readOnly: true
        size:
          description: The SKU size.
          type: string
          readOnly: true
        family:
          description: The family of the SKU.
          type: string
          readOnly: true
        capacity:
          $ref: '#/components/schemas/LabServicesSkuCapacity'
        capabilities:
          description: The capabilities of the SKU.
          type: array
          items:
            $ref: '#/components/schemas/LabServicesSkuCapabilities'
          x-ms-identifiers:
            - name
          readOnly: true
        locations:
          description: List of locations that are available for a size.
          type: array
          items:
            type: string
          readOnly: true
        costs:
          description: Metadata for retrieving price info of a lab services SKUs.
          type: array
          items:
            $ref: '#/components/schemas/LabServicesSkuCost'
          x-ms-identifiers: []
          readOnly: true
        restrictions:
          description: Restrictions of a lab services SKUs.
          type: array
          items:
            $ref: '#/components/schemas/LabServicesSkuRestrictions'
          x-ms-identifiers: []
          readOnly: true
    PagedLabServicesSkus:
      description: Paged list of lab services skus.
      type: object
      properties:
        value:
          description: The array page of sku results.
          type: array
          items:
            $ref: '#/components/schemas/LabServicesSku'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: The link to get the next page of sku results.
          type: string
          readOnly: true
    LabServicesSkuCapabilities:
      description: The array of capabilities of a lab services SKU.
      type: object
      properties:
        name:
          description: The name of the capability for a SKU.
          type: string
          readOnly: true
        value:
          description: The value of the capability for a SKU.
          type: string
          readOnly: true
    LabServicesSkuCapacity:
      description: The scale out/in options of the SKU.
      type: object
      properties:
        default:
          description: The default capacity for this resource.
          type: integer
          format: int64
          readOnly: true
        minimum:
          description: The lowest permitted capacity for this resource.
          type: integer
          format: int64
          readOnly: true
        maximum:
          description: The highest permitted capacity for this resource.
          type: integer
          format: int64
          readOnly: true
        scaleType:
          description: The localized name of the resource.
          type: string
          enum:
            - None
            - Manual
            - Automatic
          x-ms-enum:
            name: ScaleType
            modelAsString: true
            values:
              - value: None
                description: The capacity is not adjustable in any way.
              - value: Manual
                description: The user must manually scale this SKU in and out.
              - value: Automatic
                description: The user is permitted to scale this SKU in and out.
          readOnly: true
    LabServicesSkuCost:
      description: The array of costs of a lab services SKU.
      type: object
      properties:
        meterId:
          description: The meter id.
          type: string
          readOnly: true
        quantity:
          description: The quantity of units charged.
          type: number
          readOnly: true
        extendedUnit:
          description: The extended unit.
          type: string
          readOnly: true
    LabServicesSkuRestrictions:
      description: The restriction details.
      type: object
      properties:
        type:
          description: The type of restriction.
          type: string
          enum:
            - Location
          x-ms-enum:
            name: RestrictionType
            modelAsString: true
          readOnly: true
        values:
          description: The values of the restriction.
          type: array
          items:
            type: string
          readOnly: true
        reasonCode:
          description: The reason for the restriction.
          type: string
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: RestrictionReasonCode
            modelAsString: true
          readOnly: true
    LabPlan:
      description: Lab Plans act as a permission container for creating labs via labs.azure.com. Additionally, they can provide a set of default configurations that will apply at the time of creating a lab, but these defaults can still be overwritten.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        systemData:
          description: Metadata pertaining to creation and last modification of the lab plan.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          description: Lab plan resource properties
          $ref: '#/components/schemas/LabPlanProperties'
          x-ms-client-flatten: true
        identity:
          description: Managed Identity Information
          $ref: '#/components/schemas/Identity'
      type: object
    PagedLabPlans:
      description: Paged list of lab plans.
      type: object
      properties:
        value:
          description: The array page of lab plans.
          type: array
          items:
            $ref: '#/components/schemas/LabPlan'
          readOnly: true
        nextLink:
          description: The link to get the next page of lab plan results.
          type: string
          readOnly: true
    LabPlanNetworkProfile:
      description: Profile for how to handle networking for Lab Plans.
      type: object
      properties:
        subnetId:
          description: The external subnet resource id
          $ref: '#/components/schemas/url'
    LabPlanUpdate:
      description: Contains lab configuration and default settings. This variant is used for PATCH.
      properties:
        tags:
          description: Resource tags.
          type: array
          items:
            type: string
        properties:
          description: Lab plan resource update properties
          $ref: '#/components/schemas/LabPlanUpdateProperties'
          x-ms-client-flatten: true
        identity:
          description: Managed Identity Information
          $ref: '#/components/schemas/Identity'
      type: object
    LabPlanUpdateProperties:
      description: Lab plan resource properties for updates
      type: object
      properties:
        defaultConnectionProfile:
          description: The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
          $ref: '#/components/schemas/ConnectionProfile'
        defaultAutoShutdownProfile:
          description: The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
          $ref: '#/components/schemas/AutoShutdownProfile'
        defaultNetworkProfile:
          description: The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there are existing labs associated with this lab plan.
          $ref: '#/components/schemas/LabPlanNetworkProfile'
        allowedRegions:
          description: The allowed regions for the lab creator to use when creating labs using this lab plan.
          type: array
          items:
            type: string
        sharedGalleryId:
          description: Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
          $ref: '#/components/schemas/url'
        supportInfo:
          description: Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and virtual machine users for all labs in the lab plan.
          $ref: '#/components/schemas/SupportInfo'
        linkedLmsInstance:
          description: Base Url of the lms instance this lab plan can link lab rosters against.
          $ref: '#/components/schemas/url'
    LabPlanProperties:
      description: Lab plan resource properties
      properties:
        defaultConnectionProfile:
          description: The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
          $ref: '#/components/schemas/ConnectionProfile'
        defaultAutoShutdownProfile:
          description: The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
          $ref: '#/components/schemas/AutoShutdownProfile'
        defaultNetworkProfile:
          description: The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there are existing labs associated with this lab plan.
          $ref: '#/components/schemas/LabPlanNetworkProfile'
        allowedRegions:
          description: The allowed regions for the lab creator to use when creating labs using this lab plan.
          type: array
          items:
            type: string
        sharedGalleryId:
          description: Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
          $ref: '#/components/schemas/url'
        supportInfo:
          description: Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and virtual machine users for all labs in the lab plan.
          $ref: '#/components/schemas/SupportInfo'
        linkedLmsInstance:
          description: Base Url of the lms instance this lab plan can link lab rosters against.
          $ref: '#/components/schemas/url'
        provisioningState:
          description: Current provisioning state of the lab plan.
          $ref: '#/components/schemas/provisioningState'
          readOnly: true
        resourceOperationError:
          description: Error details of last operation done on lab plan.
          $ref: '#/components/schemas/ResourceOperationError'
          readOnly: true
      type: object
    SupportInfo:
      description: Support contact information and instructions.
      type: object
      properties:
        url:
          description: Support web address.
          $ref: '#/components/schemas/url'
        email:
          description: Support contact email address.
          $ref: '#/components/schemas/emailAddress'
        phone:
          description: Support contact phone number.
          $ref: '#/components/schemas/phoneNumber'
        instructions:
          description: Support instructions.
          type: string
    SaveImageBody:
      description: Body for the save image POST
      type: object
      properties:
        name:
          description: The name for the image we create.
          type: string
        labVirtualMachineId:
          description: The ID of the lab virtual machine you want to save an image from.
          $ref: '#/components/schemas/url'
    ListUsagesResult:
      description: List of Core Usages.
      type: object
      properties:
        value:
          description: The array page of Usages.
          type: array
          items:
            $ref: '#/components/schemas/Usage'
        nextLink:
          description: The link to get the next page of Usage result.
          type: string
          readOnly: true
    Usage:
      description: The core usage details.
      type: object
      properties:
        currentValue:
          description: The current usage.
          type: integer
          format: int64
        limit:
          description: The limit integer.
          type: integer
          format: int64
        unit:
          description: The unit details.
          type: string
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: true
        name:
          description: The name.
          $ref: '#/components/schemas/UsageName'
        id:
          description: The fully qualified arm resource id.
          type: string
    UsageName:
      description: The Usage Names.
      type: object
      properties:
        localizedValue:
          description: The localized name of the resource.
          type: string
        skuInstances:
          description: The instances of the resource.
          type: array
          items:
            type: string
        value:
          description: The name of the resource.
          type: string
    User:
      description: User of a lab that can register for and use virtual machines within the lab.
      required:
        - properties
      properties:
        systemData:
          description: Metadata pertaining to creation and last modification of the user resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          description: User resource properties
          $ref: '#/components/schemas/UserProperties'
          x-ms-client-flatten: true
      type: object
    PagedUsers:
      description: Paged list of users.
      type: object
      properties:
        value:
          description: The array page of user results.
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        nextLink:
          description: The link to get the next page of image results.
          type: string
          readOnly: true
    UserUpdate:
      description: User of a lab that can register for and use virtual machines within the lab. Used for updates.
      properties:
        properties:
          description: User resource properties
          $ref: '#/components/schemas/UserUpdateProperties'
          x-ms-client-flatten: true
      type: object
    UserUpdateProperties:
      description: User resource properties used for updates.
      type: object
      properties:
        additionalUsageQuota:
          description: The amount of usage quota time the user gets in addition to the lab usage quota.
          type: string
          format: duration
    UserProperties:
      description: User resource properties
      required:
        - email
      properties:
        additionalUsageQuota:
          description: The amount of usage quota time the user gets in addition to the lab usage quota.
          type: string
          format: duration
        provisioningState:
          description: Current provisioning state of the user resource.
          $ref: '#/components/schemas/provisioningState'
          readOnly: true
        resourceOperationError:
          description: Error details of last operation done on lab plan.
          $ref: '#/components/schemas/ResourceOperationError'
          readOnly: true
        displayName:
          description: Display name of the user, for example user's full name.
          type: string
          readOnly: true
        email:
          description: Email address of the user.
          $ref: '#/components/schemas/emailAddress'
          x-ms-mutability:
            - read
            - create
        registrationState:
          description: State of the user's registration within the lab.
          $ref: '#/components/schemas/RegistrationState'
          readOnly: true
        invitationState:
          description: State of the invitation message for the user.
          $ref: '#/components/schemas/InvitationState'
          readOnly: true
        invitationSent:
          description: Date and time when the invitation message was sent to the user.
          type: string
          format: date-time
          readOnly: true
        totalUsage:
          description: How long the user has used their virtual machines in this lab.
          type: string
          format: duration
          readOnly: true
      type: object
    RegistrationState:
      type: string
      enum:
        - NotRegistered
        - Registered
      description: The user lab registration state.
      x-ms-enum:
        name: RegistrationState
        modelAsString: false
        values:
          - value: Registered
            description: User has not yet registered with the lab.
          - value: NotRegistered
            description: User has registered with the lab.
    InvitationState:
      type: string
      enum:
        - NotSent
        - Sending
        - Sent
        - Failed
      description: The lab user invitation state.
      x-ms-enum:
        name: InvitationState
        modelAsString: false
        values:
          - value: NotSent
            description: The invitation has not been sent.
          - value: Sending
            description: Currently sending the invitation.
          - value: Sent
            description: The invitation has been successfully sent.
          - value: Failed
            description: There was an error while sending the invitation.
    InviteBody:
      description: Body for a user invite request
      type: object
      properties:
        text:
          description: Custom text for the invite email.
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Lab:
      description: The lab resource.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        systemData:
          description: Metadata pertaining to creation and last modification of the lab.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          description: Lab resource properties
          $ref: '#/components/schemas/LabProperties'
          x-ms-client-flatten: true
      type: object
    PagedLabs:
      description: Paged list of labs.
      type: object
      properties:
        value:
          description: The array page of lab results.
          type: array
          items:
            $ref: '#/components/schemas/Lab'
          readOnly: true
        nextLink:
          description: The link to get the next page of image results.
          type: string
          readOnly: true
    LabNetworkProfile:
      description: Profile for how to handle networking for Labs.
      type: object
      properties:
        subnetId:
          description: The external subnet resource id
          $ref: '#/components/schemas/url'
        loadBalancerId:
          description: The external load balancer resource id
          $ref: '#/components/schemas/url'
        publicIpId:
          description: The external public IP resource id
          $ref: '#/components/schemas/url'
    LabUpdate:
      description: The lab resource for updates.
      properties:
        tags:
          description: Resource tags.
          type: array
          items:
            type: string
        properties:
          description: Lab resource properties
          $ref: '#/components/schemas/LabUpdateProperties'
          x-ms-client-flatten: true
      type: object
    LabUpdateProperties:
      description: Properties of a lab resource used for updates.
      type: object
      properties:
        autoShutdownProfile:
          description: The resource auto shutdown configuration for the lab. This controls whether actions are taken on resources that are sitting idle.
          $ref: '#/components/schemas/AutoShutdownProfile'
        connectionProfile:
          description: The connection profile for the lab. This controls settings such as web access to lab resources or whether RDP or SSH ports are open.
          $ref: '#/components/schemas/ConnectionProfile'
        virtualMachineProfile:
          description: The profile used for creating lab virtual machines.
          $ref: '#/components/schemas/VirtualMachineProfile'
        securityProfile:
          description: The lab security profile.
          $ref: '#/components/schemas/SecurityProfile'
        rosterProfile:
          description: The lab user list management profile.
          $ref: '#/components/schemas/RosterProfile'
        labPlanId:
          description: The ID of the lab plan. Used during resource creation to provide defaults and acts as a permission container when creating a lab via labs.azure.com. Setting a labPlanId on an existing lab provides organization..
          $ref: '#/components/schemas/url'
        title:
          description: The title of the lab.
          type: string
          minLength: 1
          maxLength: 120
        description:
          description: The description of the lab.
          type: string
    LabProperties:
      description: Properties of a lab resource.
      required:
        - autoShutdownProfile
        - connectionProfile
        - securityProfile
        - virtualMachineProfile
      properties:
        autoShutdownProfile:
          description: The resource auto shutdown configuration for the lab. This controls whether actions are taken on resources that are sitting idle.
          $ref: '#/components/schemas/AutoShutdownProfile'
        connectionProfile:
          description: The connection profile for the lab. This controls settings such as web access to lab resources or whether RDP or SSH ports are open.
          $ref: '#/components/schemas/ConnectionProfile'
        virtualMachineProfile:
          description: The profile used for creating lab virtual machines.
          $ref: '#/components/schemas/VirtualMachineProfile'
        securityProfile:
          description: The lab security profile.
          $ref: '#/components/schemas/SecurityProfile'
        rosterProfile:
          description: The lab user list management profile.
          $ref: '#/components/schemas/RosterProfile'
        labPlanId:
          description: The ID of the lab plan. Used during resource creation to provide defaults and acts as a permission container when creating a lab via labs.azure.com. Setting a labPlanId on an existing lab provides organization..
          $ref: '#/components/schemas/url'
        title:
          description: The title of the lab.
          type: string
          minLength: 1
          maxLength: 120
        description:
          description: The description of the lab.
          type: string
        provisioningState:
          description: Current provisioning state of the lab.
          $ref: '#/components/schemas/provisioningState'
          readOnly: true
        networkProfile:
          description: The network profile for the lab, typically applied via a lab plan. This profile cannot be modified once a lab has been created.
          $ref: '#/components/schemas/LabNetworkProfile'
          x-ms-mutability:
            - read
            - create
        state:
          description: The lab state.
          $ref: '#/components/schemas/LabState'
          readOnly: true
        resourceOperationError:
          description: Error details of last operation done on lab.
          $ref: '#/components/schemas/ResourceOperationError'
          readOnly: true
      type: object
    SecurityProfile:
      description: The lab security profile.
      type: object
      properties:
        registrationCode:
          description: The registration code for the lab.
          type: string
          readOnly: true
        openAccess:
          description: Whether any user or only specified users can register to a lab.
          $ref: '#/components/schemas/enableState'
    RosterProfile:
      description: The lab user list management profile.
      type: object
      properties:
        activeDirectoryGroupId:
          description: The AAD group ID which this lab roster is populated from. Having this set enables AAD sync mode.
          type: string
        ltiContextId:
          description: The unique context identifier for the lab in the lms.
          type: string
        lmsInstance:
          description: The base URI identifying the lms instance.
          type: string
        ltiClientId:
          description: The unique id of the azure lab services tool in the lms.
          type: string
        ltiRosterEndpoint:
          description: The uri of the names and roles service endpoint on the lms for the class attached to this lab.
          type: string
    VirtualMachineProfile:
      description: The base virtual machine configuration for a lab.
      type: object
      properties:
        createOption:
          description: Indicates what lab virtual machines are created from.
          type: string
          enum:
            - Image
            - TemplateVM
          x-ms-enum:
            name: CreateOption
            modelAsString: false
            values:
              - value: Image
                description: An image is used to create all lab user virtual machines. When this option is set, no template VM will be created.
              - value: TemplateVM
                description: A template VM will be used to create all lab user virtual machines.
          x-ms-mutability:
            - read
            - create
        imageReference:
          description: The image configuration for lab virtual machines.
          $ref: '#/components/schemas/ImageReference'
          x-ms-mutability:
            - read
            - create
        osType:
          description: The OS type of the image
          $ref: '#/components/schemas/osType'
          readOnly: true
        sku:
          description: The SKU for the lab. Defines the type of virtual machines used in the lab.
          $ref: '#/components/schemas/Sku'
          x-ms-mutability:
            - read
            - create
        additionalCapabilities:
          description: Additional VM capabilities.
          $ref: '#/components/schemas/VirtualMachineAdditionalCapabilities'
          x-ms-mutability:
            - read
            - create
        usageQuota:
          description: The initial quota alloted to each lab user. Must be a time span between 0 and 9999 hours.
          type: string
          format: duration
        useSharedPassword:
          description: Enabling this option will use the same password for all user VMs.
          default: Disabled
          $ref: '#/components/schemas/enableState'
          x-ms-mutability:
            - read
            - create
        adminUser:
          description: Credentials for the admin user on the VM.
          $ref: '#/components/schemas/Credentials'
        nonAdminUser:
          description: Credentials for the non-admin user on the VM, if one exists.
          $ref: '#/components/schemas/Credentials'
      required:
        - createOption
        - imageReference
        - usageQuota
        - sku
        - adminUser
    VirtualMachineAdditionalCapabilities:
      description: The additional capabilities for a lab VM.
      type: object
      properties:
        installGpuDrivers:
          description: Flag to pre-install dedicated GPU drivers.
          default: Disabled
          $ref: '#/components/schemas/enableState'
    Credentials:
      description: Credentials for a user on a lab VM.
      type: object
      properties:
        username:
          description: The username to use when signing in to lab VMs.
          type: string
          x-ms-mutability:
            - read
            - create
        password:
          description: The password for the user. This is required for the TemplateVM createOption.
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - create
      required:
        - username
    ImageReference:
      description: Image reference information. Used in the virtual machine profile.
      type: object
      properties:
        id:
          description: Image resource ID
          $ref: '#/components/schemas/url'
        offer:
          description: The image offer if applicable.
          type: string
        publisher:
          description: The image publisher
          type: string
        sku:
          description: The image SKU
          type: string
        version:
          description: The image version specified on creation.
          type: string
        exactVersion:
          description: The actual version of the image after use.
          type: string
          readOnly: true
    LabState:
      type: string
      enum:
        - Draft
        - Publishing
        - Scaling
        - Syncing
        - Published
      description: The state of a virtual machine.
      x-ms-enum:
        name: LabState
        modelAsString: false
        values:
          - value: Draft
            description: The lab is currently in draft (has not been published).
          - value: Publishing
            description: The lab is publishing.
          - value: Scaling
            description: The lab is scaling.
          - value: Syncing
            description: The lab is syncing users.
          - value: Published
            description: The lab has been published.
    Schedule:
      description: Schedule for automatically turning virtual machines in a lab on and off at specified times.
      required:
        - properties
      properties:
        systemData:
          description: Metadata pertaining to creation and last modification of the schedule.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          description: Schedule resource properties
          $ref: '#/components/schemas/ScheduleProperties'
          x-ms-client-flatten: true
      type: object
    PagedSchedules:
      description: Paged list of schedules.
      type: object
      properties:
        value:
          description: The array page of schedule results.
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
          readOnly: true
        nextLink:
          description: The link to get the next page of schedule results.
          type: string
          readOnly: true
    ScheduleUpdate:
      description: Schedule for automatically turning virtual machines in a lab on and off at specified times. Used for updates.
      properties:
        properties:
          description: Schedule resource properties
          $ref: '#/components/schemas/ScheduleUpdateProperties'
          x-ms-client-flatten: true
      type: object
    ScheduleUpdateProperties:
      description: Schedule resource properties used for updates.
      type: object
      properties:
        startAt:
          description: When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.
          type: string
          format: date-time
        stopAt:
          description: When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.
          type: string
          format: date-time
        recurrencePattern:
          description: The recurrence pattern of the scheduled actions.
          $ref: '#/components/schemas/RecurrencePattern'
        timeZoneId:
          description: The IANA timezone id for the schedule.
          type: string
          maxLength: 50
        notes:
          description: Notes for this schedule.
          type: string
          maxLength: 1000
    ScheduleProperties:
      description: Schedule resource properties
      required:
        - stopAt
        - timeZoneId
      properties:
        startAt:
          description: When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.
          type: string
          format: date-time
        stopAt:
          description: When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.
          type: string
          format: date-time
        recurrencePattern:
          description: The recurrence pattern of the scheduled actions.
          $ref: '#/components/schemas/RecurrencePattern'
        timeZoneId:
          description: The IANA timezone id for the schedule.
          type: string
          maxLength: 50
        notes:
          description: Notes for this schedule.
          type: string
          maxLength: 1000
        provisioningState:
          description: Current provisioning state of the schedule.
          $ref: '#/components/schemas/provisioningState'
          readOnly: true
        resourceOperationError:
          description: Error details of last operation done on schedule.
          $ref: '#/components/schemas/ResourceOperationError'
          readOnly: true
      type: object
    RecurrencePattern:
      description: Recurrence pattern of a lab schedule.
      type: object
      properties:
        frequency:
          description: The frequency of the recurrence.
          $ref: '#/components/schemas/RecurrenceFrequency'
        weekDays:
          description: The week days the schedule runs. Used for when the Frequency is set to Weekly.
          type: array
          items:
            $ref: '#/components/schemas/WeekDay'
            maxItems: 7
        interval:
          description: The interval to invoke the schedule on. For example, interval = 2 and RecurrenceFrequency.Daily will run every 2 days. When no interval is supplied, an interval of 1 is used.
          type: integer
          format: int32
          minimum: 1
          maximum: 365
        expirationDate:
          description: When the recurrence will expire. This date is inclusive.
          type: string
          format: date-time
      required:
        - frequency
        - expirationDate
    WeekDay:
      type: string
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      description: Days of the week.
      x-ms-enum:
        name: WeekDay
        modelAsString: false
        values:
          - value: Sunday
            description: Schedule will run on Sunday
          - value: Monday
            description: Schedule will run on Monday
          - value: Tuesday
            description: Schedule will run on Tuesday
          - value: Wednesday
            description: Schedule will run on Wednesday
          - value: Thursday
            description: Schedule will run on Thursday
          - value: Friday
            description: Schedule will run on Friday
          - value: Saturday
            description: Schedule will run on Saturday
    RecurrenceFrequency:
      type: string
      enum:
        - Daily
        - Weekly
      description: Schedule recurrence frequencies.
      x-ms-enum:
        name: RecurrenceFrequency
        modelAsString: false
        values:
          - value: Daily
            description: Schedule will run every days.
          - value: Weekly
            description: Schedule will run every week on days specified in weekDays.
    provisioningState:
      type: string
      enum:
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Locked
      description: Resource provisioning state.
      x-ms-enum:
        name: ProvisioningState
        modelAsString: false
        values:
          - value: Creating
            description: Resource is in the process of being created.
          - value: Updating
            description: New property values are being applied to the resource.
          - value: Deleting
            description: Resource is in the process of being deleted.
          - value: Succeeded
            description: Resource is in healthy state after creation or update operation.
          - value: Failed
            description: Previous operation on the resource has failed leaving resource in unhealthy state.
          - value: Locked
            description: The resource is locked and changes are currently blocked. This could be due to maintenance or a scheduled operation. The state will go back to succeeded once the locking operation has finished.
    enableState:
      type: string
      enum:
        - Enabled
        - Disabled
      description: Property enabled state.
      x-ms-enum:
        name: EnableState
        modelAsString: false
    connectionType:
      type: string
      enum:
        - Public
        - Private
        - None
      description: A connection type for access labs and VMs (Public, Private or None).
      x-ms-enum:
        name: ConnectionType
        modelAsString: false
    emailAddress:
      type: string
      minLength: 6
      maxLength: 254
      description: An email address.
    phoneNumber:
      type: string
      minLength: 1
      maxLength: 31
      description: A phone number.
    url:
      type: string
      minLength: 3
      maxLength: 2000
      description: A URL.
    osType:
      type: string
      enum:
        - Windows
        - Linux
      description: The operating system type.
      x-ms-enum:
        name: OsType
        modelAsString: false
    osState:
      type: string
      enum:
        - Generalized
        - Specialized
      description: The operating system state.
      x-ms-enum:
        name: OsState
        modelAsString: false
        values:
          - value: Generalized
            description: Image does not contain any machine and user specific information.
          - value: Specialized
            description: Image contains machine and user specific information.
    shutdownOnIdleMode:
      type: string
      enum:
        - None
        - UserAbsence
        - LowUsage
      description: Defines whether to shut down VM on idle and the criteria for idle detection.
      x-ms-enum:
        name: shutdownOnIdleMode
        modelAsString: false
        values:
          - value: None
            description: The VM won't be shut down when it is idle.
          - value: UserAbsence
            description: The VM will be considered as idle when there is no keyboard or mouse input.
          - value: LowUsage
            description: The VM will be considered as idle when user is absent and the resource (CPU and disk) consumption is low.
    TrackedResourceUpdate:
      description: Base tracked resource type for all PATCH updates.
      type: object
      properties:
        tags:
          description: Resource tags.
          type: array
          items:
            type: string
    AutoShutdownProfile:
      description: Profile for how to handle shutting down virtual machines.
      type: object
      properties:
        shutdownOnDisconnect:
          description: Whether shutdown on disconnect is enabled
          default: Disabled
          $ref: '#/components/schemas/enableState'
        shutdownWhenNotConnected:
          description: Whether a VM will get shutdown when it hasn't been connected to after a period of time.
          default: Disabled
          $ref: '#/components/schemas/enableState'
        shutdownOnIdle:
          description: Whether a VM will get shutdown when it has idled for a period of time.
          default: None
          $ref: '#/components/schemas/shutdownOnIdleMode'
        disconnectDelay:
          description: The amount of time a VM will stay running after a user disconnects if this behavior is enabled.
          type: string
          format: duration
        noConnectDelay:
          description: The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled.
          type: string
          format: duration
        idleDelay:
          description: The amount of time a VM will idle before it is shutdown if this behavior is enabled.
          type: string
          format: duration
    ConnectionProfile:
      description: Connection profile for how users connect to lab virtual machines.
      type: object
      properties:
        webSshAccess:
          description: The enabled access level for Web Access over SSH.
          default: None
          $ref: '#/components/schemas/connectionType'
        webRdpAccess:
          description: The enabled access level for Web Access over RDP.
          default: None
          $ref: '#/components/schemas/connectionType'
        clientSshAccess:
          description: The enabled access level for Client Access over SSH.
          default: None
          $ref: '#/components/schemas/connectionType'
        clientRdpAccess:
          description: The enabled access level for Client Access over RDP.
          default: None
          $ref: '#/components/schemas/connectionType'
    ResourceOperationError:
      description: Error details of the latest operation failure on this resource
      type: object
      properties:
        timestamp:
          description: The datetime of when the error occured
          type: string
          format: date-time
        code:
          description: The code that corresponds to the type of operation failure
          type: string
        message:
          description: The operation failure message
          type: string
        action:
          description: The operation action that failed
          type: string
  x-stackQL-resources:
    virtual_machines:
      id: azure.lab_services.virtual_machines
      name: virtual_machines
      title: virtual_machines
      methods:
        list_by_lab:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1virtualMachines?api-version=2023-06-07/get'
            operationId: VirtualMachines_ListByLab
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedVirtualMachines
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1virtualMachines~1{virtualMachineName}?api-version=2023-06-07/get'
            operationId: VirtualMachines_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachine
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1virtualMachines~1{virtualMachineName}~1start?api-version=2023-06-07/post'
            operationId: VirtualMachines_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1virtualMachines~1{virtualMachineName}~1stop?api-version=2023-06-07/post'
            operationId: VirtualMachines_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1virtualMachines~1{virtualMachineName}~1reimage?api-version=2023-06-07/post'
            operationId: VirtualMachines_Reimage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1virtualMachines~1{virtualMachineName}~1redeploy?api-version=2023-06-07/post'
            operationId: VirtualMachines_Redeploy
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1virtualMachines~1{virtualMachineName}~1resetPassword?api-version=2023-06-07/post'
            operationId: VirtualMachines_ResetPassword
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list_by_lab'
        insert: []
        update: []
        replace: []
        delete: []
    images:
      id: azure.lab_services.images
      name: images
      title: images
      methods:
        list_by_lab_plan:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}~1images?api-version=2023-06-07/get'
            operationId: Images_ListByLabPlan
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedImages
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}~1images~1{imageName}?api-version=2023-06-07/get'
            operationId: Images_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Image
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}~1images~1{imageName}?api-version=2023-06-07/put'
            operationId: Images_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Image
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}~1images~1{imageName}?api-version=2023-06-07/patch'
            operationId: Images_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Image
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/images/methods/get'
          - $ref: '#/components/x-stackQL-resources/images/methods/list_by_lab_plan'
        insert:
          - $ref: '#/components/x-stackQL-resources/images/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/images/methods/update'
        replace: []
        delete: []
    operation_results:
      id: azure.lab_services.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.LabServices~1operationResults~1{operationResultId}?api-version=2023-06-07/get'
            operationId: OperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    skus:
      id: azure.lab_services.skus
      name: skus
      title: skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.LabServices~1skus?api-version=2023-06-07/get'
            operationId: Skus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedLabServicesSkus
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    lab_plans:
      id: azure.lab_services.lab_plans
      name: lab_plans
      title: lab_plans
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.LabServices~1labPlans?api-version=2023-06-07/get'
            operationId: LabPlans_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedLabPlans
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans?api-version=2023-06-07/get'
            operationId: LabPlans_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedLabPlans
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}?api-version=2023-06-07/get'
            operationId: LabPlans_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LabPlan
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}?api-version=2023-06-07/put'
            operationId: LabPlans_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LabPlan
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}?api-version=2023-06-07/patch'
            operationId: LabPlans_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LabPlan
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}?api-version=2023-06-07/delete'
            operationId: LabPlans_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        save_image:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labPlans~1{labPlanName}~1saveImage?api-version=2023-06-07/post'
            operationId: LabPlans_SaveImage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lab_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/lab_plans/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/lab_plans/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/lab_plans/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/lab_plans/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/lab_plans/methods/delete'
    usages:
      id: azure.lab_services.usages
      name: usages
      title: usages
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.LabServices~1locations~1{location}~1usages?api-version=2023-06-07/get'
            operationId: Usages_ListByLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListUsagesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list_by_location'
        insert: []
        update: []
        replace: []
        delete: []
    users:
      id: azure.lab_services.users
      name: users
      title: users
      methods:
        list_by_lab:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1users?api-version=2023-06-07/get'
            operationId: Users_ListByLab
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedUsers
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1users~1{userName}?api-version=2023-06-07/get'
            operationId: Users_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: User
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1users~1{userName}?api-version=2023-06-07/put'
            operationId: Users_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: User
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1users~1{userName}?api-version=2023-06-07/patch'
            operationId: Users_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: User
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1users~1{userName}?api-version=2023-06-07/delete'
            operationId: Users_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        invite:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1users~1{userName}~1invite?api-version=2023-06-07/post'
            operationId: Users_Invite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get'
          - $ref: '#/components/x-stackQL-resources/users/methods/list_by_lab'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/users/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete'
    labs:
      id: azure.lab_services.labs
      name: labs
      title: labs
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.LabServices~1labs?api-version=2023-06-07/get'
            operationId: Labs_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedLabs
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs?api-version=2023-06-07/get'
            operationId: Labs_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedLabs
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}?api-version=2023-06-07/get'
            operationId: Labs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Lab
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}?api-version=2023-06-07/put'
            operationId: Labs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Lab
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}?api-version=2023-06-07/patch'
            operationId: Labs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Lab
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}?api-version=2023-06-07/delete'
            operationId: Labs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        publish:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1publish?api-version=2023-06-07/post'
            operationId: Labs_Publish
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sync_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1syncGroup?api-version=2023-06-07/post'
            operationId: Labs_SyncGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/labs/methods/get'
          - $ref: '#/components/x-stackQL-resources/labs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/labs/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/labs/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/labs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/labs/methods/delete'
    schedules:
      id: azure.lab_services.schedules
      name: schedules
      title: schedules
      methods:
        list_by_lab:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1schedules?api-version=2023-06-07/get'
            operationId: Schedules_ListByLab
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedSchedules
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1schedules~1{scheduleName}?api-version=2023-06-07/get'
            operationId: Schedules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Schedule
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1schedules~1{scheduleName}?api-version=2023-06-07/put'
            operationId: Schedules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Schedule
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1schedules~1{scheduleName}?api-version=2023-06-07/patch'
            operationId: Schedules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Schedule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.LabServices~1labs~1{labName}~1schedules~1{scheduleName}?api-version=2023-06-07/delete'
            operationId: Schedules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/schedules/methods/list_by_lab'
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/delete'
    operations:
      id: azure.lab_services.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.LabServices~1operations?api-version=2023-06-07/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_virtual_machines:
      id: azure.lab_services.vw_virtual_machines
      name: vw_virtual_machines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.resourceOperationError') as "resource_operation_error",
              JSON_EXTRACT(properties, '$.connectionProfile') as "connection_profile",
              JSON_EXTRACT(properties, '$.claimedByUserId') as "claimed_by_user_id",
              JSON_EXTRACT(properties, '$.vmType') as "vm_type",
              subscriptionId,
              resourceGroupName,
              labName,
              virtualMachineName
              FROM azure.lab_services.virtual_machines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.resourceOperationError') as "resource_operation_error",
                json_extract_path_text(properties, '$.connectionProfile') as "connection_profile",
                json_extract_path_text(properties, '$.claimedByUserId') as "claimed_by_user_id",
                json_extract_path_text(properties, '$.vmType') as "vm_type",
                subscriptionId,
                resourceGroupName,
                labName,
                virtualMachineName
                FROM azure.lab_services.virtual_machines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_images:
      id: azure.lab_services.vw_images
      name: vw_images
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.enabledState') as "enabled_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.iconUrl') as "icon_url",
              JSON_EXTRACT(properties, '$.author') as "author",
              JSON_EXTRACT(properties, '$.osType') as "os_type",
              JSON_EXTRACT(properties, '$.plan') as "plan",
              JSON_EXTRACT(properties, '$.termsStatus') as "terms_status",
              JSON_EXTRACT(properties, '$.offer') as "offer",
              JSON_EXTRACT(properties, '$.publisher') as "publisher",
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.sharedGalleryId') as "shared_gallery_id",
              JSON_EXTRACT(properties, '$.availableRegions') as "available_regions",
              JSON_EXTRACT(properties, '$.osState') as "os_state",
              subscriptionId,
              resourceGroupName,
              labPlanName,
              imageName
              FROM azure.lab_services.images
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labPlanName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.enabledState') as "enabled_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.iconUrl') as "icon_url",
                json_extract_path_text(properties, '$.author') as "author",
                json_extract_path_text(properties, '$.osType') as "os_type",
                json_extract_path_text(properties, '$.plan') as "plan",
                json_extract_path_text(properties, '$.termsStatus') as "terms_status",
                json_extract_path_text(properties, '$.offer') as "offer",
                json_extract_path_text(properties, '$.publisher') as "publisher",
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.sharedGalleryId') as "shared_gallery_id",
                json_extract_path_text(properties, '$.availableRegions') as "available_regions",
                json_extract_path_text(properties, '$.osState') as "os_state",
                subscriptionId,
                resourceGroupName,
                labPlanName,
                imageName
                FROM azure.lab_services.images
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labPlanName = 'replace-me';
    vw_lab_plans:
      id: azure.lab_services.vw_lab_plans
      name: vw_lab_plans
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              identity as identity,
              JSON_EXTRACT(properties, '$.defaultConnectionProfile') as "default_connection_profile",
              JSON_EXTRACT(properties, '$.defaultAutoShutdownProfile') as "default_auto_shutdown_profile",
              JSON_EXTRACT(properties, '$.defaultNetworkProfile') as "default_network_profile",
              JSON_EXTRACT(properties, '$.allowedRegions') as "allowed_regions",
              JSON_EXTRACT(properties, '$.sharedGalleryId') as "shared_gallery_id",
              JSON_EXTRACT(properties, '$.supportInfo') as "support_info",
              JSON_EXTRACT(properties, '$.linkedLmsInstance') as "linked_lms_instance",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceOperationError') as "resource_operation_error",
              subscriptionId,
              resourceGroupName,
              labPlanName
              FROM azure.lab_services.lab_plans
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                identity as identity,
                json_extract_path_text(properties, '$.defaultConnectionProfile') as "default_connection_profile",
                json_extract_path_text(properties, '$.defaultAutoShutdownProfile') as "default_auto_shutdown_profile",
                json_extract_path_text(properties, '$.defaultNetworkProfile') as "default_network_profile",
                json_extract_path_text(properties, '$.allowedRegions') as "allowed_regions",
                json_extract_path_text(properties, '$.sharedGalleryId') as "shared_gallery_id",
                json_extract_path_text(properties, '$.supportInfo') as "support_info",
                json_extract_path_text(properties, '$.linkedLmsInstance') as "linked_lms_instance",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceOperationError') as "resource_operation_error",
                subscriptionId,
                resourceGroupName,
                labPlanName
                FROM azure.lab_services.lab_plans
                WHERE subscriptionId = 'replace-me';
    vw_users:
      id: azure.lab_services.vw_users
      name: vw_users
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.additionalUsageQuota') as "additional_usage_quota",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceOperationError') as "resource_operation_error",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.email') as "email",
              JSON_EXTRACT(properties, '$.registrationState') as "registration_state",
              JSON_EXTRACT(properties, '$.invitationState') as "invitation_state",
              JSON_EXTRACT(properties, '$.invitationSent') as "invitation_sent",
              JSON_EXTRACT(properties, '$.totalUsage') as "total_usage",
              subscriptionId,
              resourceGroupName,
              labName,
              userName
              FROM azure.lab_services.users
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.additionalUsageQuota') as "additional_usage_quota",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceOperationError') as "resource_operation_error",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.email') as "email",
                json_extract_path_text(properties, '$.registrationState') as "registration_state",
                json_extract_path_text(properties, '$.invitationState') as "invitation_state",
                json_extract_path_text(properties, '$.invitationSent') as "invitation_sent",
                json_extract_path_text(properties, '$.totalUsage') as "total_usage",
                subscriptionId,
                resourceGroupName,
                labName,
                userName
                FROM azure.lab_services.users
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_labs:
      id: azure.lab_services.vw_labs
      name: vw_labs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.autoShutdownProfile') as "auto_shutdown_profile",
              JSON_EXTRACT(properties, '$.connectionProfile') as "connection_profile",
              JSON_EXTRACT(properties, '$.virtualMachineProfile') as "virtual_machine_profile",
              JSON_EXTRACT(properties, '$.securityProfile') as "security_profile",
              JSON_EXTRACT(properties, '$.rosterProfile') as "roster_profile",
              JSON_EXTRACT(properties, '$.labPlanId') as "lab_plan_id",
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.networkProfile') as "network_profile",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.resourceOperationError') as "resource_operation_error",
              subscriptionId,
              resourceGroupName,
              labName
              FROM azure.lab_services.labs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.autoShutdownProfile') as "auto_shutdown_profile",
                json_extract_path_text(properties, '$.connectionProfile') as "connection_profile",
                json_extract_path_text(properties, '$.virtualMachineProfile') as "virtual_machine_profile",
                json_extract_path_text(properties, '$.securityProfile') as "security_profile",
                json_extract_path_text(properties, '$.rosterProfile') as "roster_profile",
                json_extract_path_text(properties, '$.labPlanId') as "lab_plan_id",
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.networkProfile') as "network_profile",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.resourceOperationError') as "resource_operation_error",
                subscriptionId,
                resourceGroupName,
                labName
                FROM azure.lab_services.labs
                WHERE subscriptionId = 'replace-me';
    vw_schedules:
      id: azure.lab_services.vw_schedules
      name: vw_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.startAt') as "start_at",
              JSON_EXTRACT(properties, '$.stopAt') as "stop_at",
              JSON_EXTRACT(properties, '$.recurrencePattern') as "recurrence_pattern",
              JSON_EXTRACT(properties, '$.timeZoneId') as "time_zone_id",
              JSON_EXTRACT(properties, '$.notes') as "notes",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceOperationError') as "resource_operation_error",
              subscriptionId,
              resourceGroupName,
              labName,
              scheduleName
              FROM azure.lab_services.schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.startAt') as "start_at",
                json_extract_path_text(properties, '$.stopAt') as "stop_at",
                json_extract_path_text(properties, '$.recurrencePattern') as "recurrence_pattern",
                json_extract_path_text(properties, '$.timeZoneId') as "time_zone_id",
                json_extract_path_text(properties, '$.notes') as "notes",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceOperationError') as "resource_operation_error",
                subscriptionId,
                resourceGroupName,
                labName,
                scheduleName
                FROM azure.lab_services.schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/virtualMachines?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - VirtualMachine
      summary: Get all virtual machines for a lab.
      description: Returns a list of all virtual machines for a lab.
      operationId: VirtualMachines_ListByLab
      responses:
        '200':
          description: The request was successful; response contains all virtual machines for the given lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedVirtualMachines'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/virtualMachines/{virtualMachineName}?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/VirtualMachineNameParameter'
    get:
      tags:
        - VirtualMachine
      summary: Get a lab virtual machine.
      description: Returns the properties for a lab virtual machine.
      operationId: VirtualMachines_Get
      responses:
        '200':
          description: The request was successful; response contains the lab virtual machine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/virtualMachines/{virtualMachineName}/start?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/VirtualMachineNameParameter'
    post:
      tags:
        - VirtualMachine
      summary: Start a lab virtual machine.
      description: Action to start a lab virtual machine.
      operationId: VirtualMachines_Start
      responses:
        '200':
          description: The request was completed.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/virtualMachines/{virtualMachineName}/stop?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/VirtualMachineNameParameter'
    post:
      tags:
        - VirtualMachine
      summary: Stop a lab virtual machine.
      description: Action to stop a lab virtual machine.
      operationId: VirtualMachines_Stop
      responses:
        '200':
          description: The request was completed.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/virtualMachines/{virtualMachineName}/reimage?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/VirtualMachineNameParameter'
    post:
      tags:
        - VirtualMachine
      summary: Re-image a lab virtual machine.
      description: Re-image a lab virtual machine. The virtual machine will be deleted and recreated using the latest published snapshot of the reference environment of the lab.
      operationId: VirtualMachines_Reimage
      responses:
        '200':
          description: The request was completed.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/virtualMachines/{virtualMachineName}/redeploy?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/VirtualMachineNameParameter'
    post:
      tags:
        - VirtualMachine
      summary: Redeploy a lab virtual machine to a different compute node. For troubleshooting connectivity.
      description: Action to redeploy a lab virtual machine to a different compute node. For troubleshooting connectivity.
      operationId: VirtualMachines_Redeploy
      responses:
        '200':
          description: The request was completed.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/virtualMachines/{virtualMachineName}/resetPassword?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/VirtualMachineNameParameter'
    post:
      tags:
        - VirtualMachine
      summary: Reset a lab virtual machine password.
      description: Resets a lab virtual machine password.
      operationId: VirtualMachines_ResetPassword
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBody'
      responses:
        '200':
          description: The request was completed.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}/images?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabPlanNameParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - Image
      summary: Gets all images.
      description: Gets all images from galleries attached to a lab plan.
      operationId: Images_ListByLabPlan
      responses:
        '200':
          description: The request was successful; a list of images is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedImages'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}/images/{imageName}?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabPlanNameParameter'
      - $ref: '#/components/parameters/ImageNameParameter'
    get:
      tags:
        - Image
      summary: Gets an image.
      description: Gets an image resource.
      operationId: Images_Get
      responses:
        '200':
          description: The request was successful; the image is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Image
      summary: Updates an image via PUT.
      description: Updates an image resource via PUT. Creating new resources via PUT will not function.
      operationId: Images_CreateOrUpdate
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: The request was successful; the image is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Image
      summary: Updates an image.
      description: Updates an image resource.
      operationId: Images_Update
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUpdate'
      responses:
        '200':
          description: The request was successful; the image is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.LabServices/operationResults/{operationResultId}?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/OperationResultId'
    get:
      tags:
        - OperationResults
      summary: Get an azure operation result.
      description: Returns an azure operation result.
      operationId: OperationResults_Get
      responses:
        '200':
          description: The request was successful; response contains the operation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        '204':
          description: The request has been fulfilled.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.LabServices/skus?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - Skus
      summary: Gets the Azure Lab Services resource SKUs.
      description: Returns a list of Azure Lab Services resource SKUs.
      operationId: Skus_List
      responses:
        '200':
          description: The request was successful; response contains Azure Lab Services resource skus.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLabServicesSkus'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.LabServices/labPlans?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - LabPlan
      summary: Get all lab plans for a subscription.
      description: Returns a list of all lab plans within a subscription
      operationId: LabPlans_ListBySubscription
      responses:
        '200':
          description: The request was successful; response contains all Lab Plans for the given subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLabPlans'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
    get:
      tags:
        - LabPlan
      summary: Get all lab plans for a subscription and resource group.
      description: Returns a list of all lab plans for a subscription and resource group.
      operationId: LabPlans_ListByResourceGroup
      responses:
        '200':
          description: The request was successful; response contains all Lab Plans for the given subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLabPlans'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabPlanNameParameter'
    get:
      tags:
        - LabPlan
      summary: Retrieves a Lab Plan resource.
      description: Retrieves the properties of a Lab Plan.
      operationId: LabPlans_Get
      responses:
        '200':
          description: The request was successful; response contains the Lab Plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabPlan'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - LabPlan
      summary: Updates or creates a Lab Plan resource.
      description: Operation to create or update a Lab Plan resource.
      operationId: LabPlans_CreateOrUpdate
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabPlan'
      responses:
        '200':
          description: The update was successful; response contains the Lab Plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabPlan'
        '201':
          description: The create was successful; response contains the Lab Plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabPlan'
        '202':
          description: The update was successful and has a long running operation; response contains the Lab Plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabPlan'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
    patch:
      tags:
        - LabPlan
      summary: Updates a Lab Plan resource.
      description: Operation to update a Lab Plan resource.
      operationId: LabPlans_Update
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabPlanUpdate'
      responses:
        '200':
          description: The update was successful; response contains the Lab Plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabPlan'
        '202':
          description: The update was successful and has a long running operation; response contains the Lab Plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabPlan'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - LabPlan
      summary: Deletes a Lab Plan resource.
      description: Operation to delete a Lab Plan resource. Deleting a lab plan does not delete labs associated with a lab plan, nor does it delete shared images added to a gallery via the lab plan permission container.
      operationId: LabPlans_Delete
      responses:
        '200':
          description: The request was successful.
        '202':
          description: The request was accepted.
        '204':
          description: The request has been fulfilled.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}/saveImage?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabPlanNameParameter'
    post:
      tags:
        - VirtualMachine
      summary: Save an image from a lab VM to the attached shared image gallery.
      description: Saves an image from a lab VM to the attached shared image gallery.
      operationId: LabPlans_SaveImage
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveImageBody'
      responses:
        '200':
          description: The request was successful.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.LabServices/locations/{location}/usages?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/LocationRouteParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - Usages
      summary: Gets the list of usages.
      description: Returns list of usage per SKU family for the specified subscription in the specified region.
      operationId: Usages_ListByLocation
      responses:
        '200':
          description: The request was successful; a list of usages is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/users?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - User
      summary: Get all users for a lab.
      description: Returns a list of all users for a lab.
      operationId: Users_ListByLab
      responses:
        '200':
          description: The request was successful; response contains all users for the given lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedUsers'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/users/{userName}?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/UserNameParameter'
    get:
      tags:
        - User
      summary: Get a lab user.
      description: Returns the properties of a lab user.
      operationId: Users_Get
      responses:
        '200':
          description: The request was successful; response contains the lab user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - User
      summary: Create or update a lab user.
      description: Operation to create or update a lab user.
      operationId: Users_CreateOrUpdate
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The user was updated successfully; response contains the lab user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '201':
          description: The user was created successfully; response contains the lab user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '202':
          description: The user was updated successfully and has a long running operation; response contains the lab user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
    patch:
      tags:
        - User
      summary: Update a lab user.
      description: Operation to update a lab user.
      operationId: Users_Update
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: The user was updated successfully; response contains the lab user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '202':
          description: The user was updated successfully and has a long running operation; response contains the lab user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - User
      summary: Deletes a user resource.
      description: Operation to delete a user resource.
      operationId: Users_Delete
      responses:
        '200':
          description: The request was completed.
        '202':
          description: The request was accepted.
        '204':
          description: The request has been fulfilled.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/users/{userName}/invite?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/UserNameParameter'
    post:
      tags:
        - User
      summary: Invite a user to a lab.
      description: Operation to invite a user to a lab.
      operationId: Users_Invite
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteBody'
      responses:
        '200':
          description: The request was successful.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.LabServices/labs?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - Lab
      summary: Get all labs for a subscription.
      description: Returns a list of all labs for a subscription.
      operationId: Labs_ListBySubscription
      responses:
        '200':
          description: The request was successful; response contains all Labs for the given subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLabs'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
    get:
      tags:
        - Lab
      summary: Get all labs for a subscription and resource group.
      description: Returns a list of all labs in a resource group.
      operationId: Labs_ListByResourceGroup
      responses:
        '200':
          description: The request was successful; response contains all Labs for the given subscription and resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLabs'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
    get:
      tags:
        - Lab
      summary: Get a lab resource.
      description: Returns the properties of a lab resource.
      operationId: Labs_Get
      responses:
        '200':
          description: The request was successful; response contains the Lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Lab
      summary: Create or update a lab resource.
      description: Operation to create or update a lab resource.
      operationId: Labs_CreateOrUpdate
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lab'
      responses:
        '200':
          description: The update was successful; response contains the Lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        '201':
          description: The create was successful; response contains the Lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        '202':
          description: The update was successful and has a long running operation; response contains the Lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
    patch:
      tags:
        - Lab
      summary: Update a lab resource.
      description: Operation to update a lab resource.
      operationId: Labs_Update
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabUpdate'
      responses:
        '200':
          description: The resource was updated; response contains the Lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        '202':
          description: The resource was update and has a long running operation; response contains the Lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Lab
      summary: Deletes a lab resource.
      description: Operation to delete a lab resource.
      operationId: Labs_Delete
      responses:
        '200':
          description: The request was successful.
        '202':
          description: The request was accepted.
        '204':
          description: The request has been fulfilled.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/publish?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
    post:
      tags:
        - Lab
      summary: Publish or re-publish a lab.
      description: Publish or re-publish a lab. This will create or update all lab resources, such as virtual machines.
      operationId: Labs_Publish
      responses:
        '200':
          description: The request was successful.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/syncGroup?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
    post:
      tags:
        - Lab
      summary: Manually sync the lab group.
      description: Action used to manually kick off an AAD group sync job.
      operationId: Labs_SyncGroup
      responses:
        '200':
          description: The request was successful.
        '202':
          description: The request was accepted.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/schedules?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - name: $filter
        in: query
        description: The filter to apply to the operation.
        schema:
          type: string
    get:
      tags:
        - Schedule
      summary: Get all schedules for a lab.
      description: Returns a list of all schedules for a lab.
      operationId: Schedules_ListByLab
      responses:
        '200':
          description: The request was successful; response contains all schedules for the given lab.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSchedules'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/schedules/{scheduleName}?api-version=2023-06-07:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/LabNameParameter'
      - $ref: '#/components/parameters/ScheduleNameParameter'
    get:
      tags:
        - Schedule
      summary: Get a lab Schedule.
      description: Returns the properties of a lab Schedule.
      operationId: Schedules_Get
      responses:
        '200':
          description: The request was successful; response contains the lab schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Schedule
      summary: Create or update a lab schedule.
      description: Operation to create or update a lab schedule.
      operationId: Schedules_CreateOrUpdate
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: The schedule was updated; response contains the lab schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '201':
          description: The schedule was created; response contains the lab schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Schedule
      summary: Update a lab schedule.
      description: Operation to update a lab schedule.
      operationId: Schedules_Update
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdate'
      responses:
        '200':
          description: The schedule was updated; response contains the lab schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Schedule
      summary: Deletes a schedule resource.
      description: Operation to delete a schedule resource.
      operationId: Schedules_Delete
      responses:
        '200':
          description: The request was successful.
        '202':
          description: The request was accepted.
        '204':
          description: The request has been fulfilled.
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.LabServices/operations?api-version=2023-06-07:
    parameters: []
    get:
      tags:
        - Operations
      summary: Get all operations
      description: Returns a list of all operations.
      operationId: Operations_List
      responses:
        '200':
          description: The request was successful; response contains all operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
