openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Database for PostgreSQL
  description: Azure Database for PostgreSQL provides a managed database service for app development and deployment that allows you to stand up a PostgreSQL database in minutes and scale on the fly - on the cloud you trust most.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ThreatProtectionNameParameter:
      name: threatProtectionName
      in: path
      description: The name of the Threat Protection state.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - Default
        x-ms-enum:
          name: ThreatProtectionName
          modelAsString: true
        pattern: ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*
        type: string
    VirtualEndpointNameParameter:
      name: virtualEndpointName
      in: path
      description: The name of the virtual endpoint.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$
        minLength: 3
        maxLength: 63
        type: string
    BackupNameParameter:
      name: backupName
      in: path
      description: The name of the backup.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[-\w\._]+$
        type: string
    FirewallRuleNameParameter:
      name: firewallRuleName
      in: path
      description: The name of the server firewall rule.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[-\w\._]+$
        type: string
    ServerNameParameter:
      name: serverName
      in: path
      description: The name of the server.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*
        minLength: 3
        maxLength: 63
        type: string
    LocationNameParameter:
      name: locationName
      in: path
      description: The name of the location.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[-\w\._]+$
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z][a-zA-Z0-9-]*\.[a-fA-F0-9\-]+$
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DatabaseNameParameter:
      name: databaseName
      in: path
      description: The name of the database.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[-\w\._]+$
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the server configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[-\w\._]+$
        type: string
    ObjectIdParameter:
      name: objectId
      in: path
      description: Guid of the objectId for the administrator.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TargetDbServerSubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The subscription ID of the target database server.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ([a-z0-9]){8,8}[-]([a-z0-9]){4,4}[-]([a-z0-9]){4,4}[-]([a-z0-9]){4,4}[-]([a-z0-9]){12,12}
        type: string
    TargetDbServerResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The resource group name of the target database server.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-a-z0-9A-Z._()]+[^.]$
        type: string
    TargetDbServerNameParameter:
      name: targetDbServerName
      in: path
      description: The name of the target database server.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ([-a-z0-9]){3,63}
        type: string
    MigrationNameParameter:
      name: migrationName
      in: path
      description: The name of the migration.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z][a-z0-9]*$
        type: string
    MigrationListFilter:
      name: migrationListFilter
      in: query
      description: Migration list filter. Retrieves either active migrations or all migrations.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - Active
          - All
        x-ms-enum:
          name: MigrationListFilter
          modelAsString: true
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      type: object
      properties:
        name:
          type: string
          description: The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
        tier:
          type: string
          description: The tier of the particular SKU, e.g. Burstable.
          enum:
            - Burstable
            - GeneralPurpose
            - MemoryOptimized
          x-ms-enum:
            name: SkuTier
            modelAsString: true
      required:
        - name
        - tier
      description: Sku information related properties of a server.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: REST API operation definition.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the operation being performed on this particular object.
        display:
          $ref: '#/components/schemas/OperationDisplay'
          readOnly: true
          description: The localized display information for this particular operation or action.
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        origin:
          type: string
          readOnly: true
          description: The intended executor of the operation.
          enum:
            - NotSpecified
            - user
            - system
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
        properties:
          type: object
          additionalProperties:
            type: object
          readOnly: true
          x-ms-client-flatten: false
          description: Additional descriptions for the operation.
      type: object
    OperationListResult:
      description: A list of resource provider operations.
      type: object
      properties:
        value:
          description: Collection of available operation details
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    LogFileProperties:
      type: object
      properties:
        createdTime:
          type: string
          format: date-time
          description: Creation timestamp of the log file.
        lastModifiedTime:
          type: string
          format: date-time
          description: Last modified timestamp of the log file.
        sizeInKb:
          type: integer
          format: int64
          description: The size in kb of the logFile.
        type:
          type: string
          description: Type of the log file.
        url:
          type: string
          description: The url to download the log file from.
      description: The properties of a logFile.
    LogFile:
      description: Represents a logFile.
      properties:
        properties:
          $ref: '#/components/schemas/LogFileProperties'
          x-ms-client-flatten: true
          description: The properties of a logFile.
      type: object
    LogFileListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LogFile'
          description: The list of logFiles in a server
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A List of logFiles.
    OperationDisplay:
      type: object
      properties:
        provider:
          type: string
          readOnly: true
          description: Operation resource provider name.
        resource:
          type: string
          readOnly: true
          description: Resource on which the operation is performed.
        operation:
          type: string
          readOnly: true
          description: Localized friendly name for the operation.
        description:
          type: string
          readOnly: true
          description: Operation description.
      description: Display metadata associated with the operation.
    ServerThreatProtectionProperties:
      description: Properties of server Threat Protection state.
      required:
        - state
      type: object
      properties:
        state:
          description: Specifies the state of the Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific server.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ThreatProtectionState
            modelAsString: false
        creationTime:
          format: date-time
          description: Specifies the UTC creation time of the policy.
          type: string
          readOnly: true
    ServerThreatProtectionSettingsModel:
      description: Server's Advanced Threat Protection settings.
      properties:
        properties:
          $ref: '#/components/schemas/ServerThreatProtectionProperties'
          description: Advanced Threat Protection properties.
          x-ms-client-flatten: true
      type: object
    ServerThreatProtectionListResult:
      description: A list of the server's Advanced Threat Protection settings.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/ServerThreatProtectionSettingsModel'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    ServerVersion:
      type: string
      description: The version of a server.
      enum:
        - '16'
        - '15'
        - '14'
        - '13'
        - '12'
        - '11'
      x-ms-enum:
        name: ServerVersion
        modelAsString: true
    Replica:
      type: object
      description: Replica properties of a server
      properties:
        role:
          $ref: '#/components/schemas/ReplicationRole'
          description: Used to indicate role of the server in replication set.
        capacity:
          type: integer
          format: int32
          description: Replicas allowed for a server.
          readOnly: true
        replicationState:
          type: string
          enum:
            - Active
            - Catchup
            - Provisioning
            - Updating
            - Broken
            - Reconfiguring
          x-ms-enum:
            name: ReplicationState
            modelAsString: true
          description: Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
          readOnly: true
        promoteMode:
          type: string
          description: Sets the promote mode for a replica server. This is a write only property.
          enum:
            - standalone
            - switchover
          x-ms-enum:
            name: ReadReplicaPromoteMode
            modelAsString: true
          x-ms-mutability:
            - update
        promoteOption:
          type: string
          description: Sets the promote options for a replica server. This is a write only property.
          enum:
            - planned
            - forced
          x-ms-enum:
            name: ReplicationPromoteOption
            modelAsString: true
          x-ms-mutability:
            - update
    ServerProperties:
      type: object
      properties:
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
          x-ms-mutability:
            - create
            - read
        administratorLoginPassword:
          type: string
          description: The administrator login password (required for server creation).
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: PostgreSQL Server version.
        minorVersion:
          type: string
          description: The minor version of the server.
          readOnly: true
        state:
          type: string
          description: A state of a server that is visible to user.
          readOnly: true
          enum:
            - Ready
            - Dropping
            - Disabled
            - Starting
            - Stopping
            - Stopped
            - Updating
          x-ms-enum:
            name: ServerState
            modelAsString: true
        fullyQualifiedDomainName:
          type: string
          description: The fully qualified domain name of a server.
          readOnly: true
        storage:
          $ref: '#/components/schemas/Storage'
          default: null
          description: Storage properties of a server.
        authConfig:
          $ref: '#/components/schemas/AuthConfig'
          default: null
          description: AuthConfig properties of a server.
        dataEncryption:
          $ref: '#/components/schemas/DataEncryption'
          default: null
          description: Data encryption properties of a server.
        backup:
          $ref: '#/components/schemas/Backup'
          default: null
          description: Backup properties of a server.
        network:
          $ref: '#/components/schemas/Network'
          default: null
          description: Network properties of a server. This Network property is required to be passed only in case you want the server to be Private access server.
        highAvailability:
          $ref: '#/components/schemas/HighAvailability'
          default: null
          description: High availability properties of a server.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          default: null
          description: Maintenance window properties of a server.
          x-ms-mutability:
            - update
            - read
        sourceServerResourceId:
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.DBforPostgreSQL/flexibleServers
          description: The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server
          x-ms-mutability:
            - create
            - read
        pointInTimeUTC:
          type: string
          format: date-time
          description: Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.
          x-ms-mutability:
            - create
        availabilityZone:
          type: string
          default: ''
          description: availability zone information of the server.
          x-ms-mutability:
            - create
            - read
        replicationRole:
          $ref: '#/components/schemas/ReplicationRole'
          description: Replication role of the server
        replicaCapacity:
          type: integer
          format: int32
          description: Replicas allowed for a server.
          readOnly: true
        replica:
          $ref: '#/components/schemas/Replica'
          description: Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a server.
          x-ms-mutability:
            - read
            - update
        createMode:
          type: string
          description: The mode to create a new PostgreSQL server.
          enum:
            - Default
            - Create
            - Update
            - PointInTimeRestore
            - GeoRestore
            - Replica
            - ReviveDropped
          x-ms-enum:
            name: CreateMode
            modelAsString: true
          x-ms-mutability:
            - create
            - update
        privateEndpointConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of private endpoint connections associated with the specified resource.
          readOnly: true
      description: The properties of a server.
    Server:
      description: Represents a server.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        identity:
          $ref: '#/components/schemas/UserAssignedIdentity'
          description: Describes the identity of the application.
        properties:
          $ref: '#/components/schemas/ServerProperties'
          x-ms-client-flatten: true
          description: Properties of the server.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ServerPropertiesForUpdate:
      type: object
      properties:
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is trying to switch to password authentication and does not have default administrator login.
          x-ms-mutability:
            - update
            - read
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          description: The password of the administrator login.
          x-ms-mutability:
            - update
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: PostgreSQL Server version. Version 16 is currently not supported for MVU.
        storage:
          $ref: '#/components/schemas/Storage'
          default: null
          description: Storage properties of a server.
        backup:
          $ref: '#/components/schemas/Backup'
          default: null
          description: Backup properties of a server.
        highAvailability:
          $ref: '#/components/schemas/HighAvailability'
          default: null
          description: High availability properties of a server.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          default: null
          description: Maintenance window properties of a server.
          x-ms-mutability:
            - update
            - read
        authConfig:
          $ref: '#/components/schemas/AuthConfig'
          default: null
          description: AuthConfig properties of a server.
        dataEncryption:
          $ref: '#/components/schemas/DataEncryption'
          default: null
          description: Data encryption properties of a server.
        createMode:
          type: string
          description: The mode to update a new PostgreSQL server.
          enum:
            - Default
            - Update
          x-ms-enum:
            name: CreateModeForUpdate
            modelAsString: true
          x-ms-mutability:
            - update
        replicationRole:
          $ref: '#/components/schemas/ReplicationRole'
          description: Replication role of the server
        replica:
          $ref: '#/components/schemas/Replica'
          description: Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a server.
          x-ms-mutability:
            - read
            - update
        network:
          $ref: '#/components/schemas/Network'
          default: null
          description: Network properties of a server. These are required to be passed only in case if server is a private access server.
    ServerForUpdate:
      description: Represents a server to be updated.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        identity:
          $ref: '#/components/schemas/UserAssignedIdentity'
          description: Describes the identity of the application.
        properties:
          $ref: '#/components/schemas/ServerPropertiesForUpdate'
          x-ms-client-flatten: true
          description: Properties of the server.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      type: object
    ServerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: The list of flexible servers
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of servers.
    Storage:
      type: object
      properties:
        storageSizeGB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        autoGrow:
          type: string
          description: Flag to enable / disable Storage Auto grow for flexible server.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: StorageAutoGrow
            modelAsString: true
        tier:
          type: string
          description: Name of storage tier for IOPS.
          enum:
            - P1
            - P2
            - P3
            - P4
            - P6
            - P10
            - P15
            - P20
            - P30
            - P40
            - P50
            - P60
            - P70
            - P80
          x-ms-enum:
            name: AzureManagedDiskPerformanceTiers
            modelAsString: true
        iops:
          type: integer
          format: int32
          description: Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        throughput:
          type: integer
          format: int32
          description: Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        type:
          type: string
          enum:
            - Premium_LRS
            - PremiumV2_LRS
          x-ms-enum:
            name: StorageType
            modelAsString: true
          description: Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
      description: Storage properties of a server
    AuthConfig:
      type: object
      properties:
        activeDirectoryAuth:
          type: string
          description: If Enabled, Azure Active Directory authentication is enabled.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: activeDirectoryAuthEnum
            modelAsString: true
        passwordAuth:
          type: string
          default: Enabled
          description: If Enabled, Password authentication is enabled.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: passwordAuthEnum
            modelAsString: true
        tenantId:
          type: string
          default: ''
          description: Tenant id of the server.
      description: Authentication configuration properties of a server
    DataEncryption:
      type: object
      properties:
        primaryKeyURI:
          type: string
          description: URI for the key in keyvault for data encryption of the primary server.
        primaryUserAssignedIdentityId:
          type: string
          description: Resource Id for the User assigned identity to be used for data encryption of the primary server.
        geoBackupKeyURI:
          type: string
          description: URI for the key in keyvault for data encryption for geo-backup of server.
        geoBackupUserAssignedIdentityId:
          type: string
          description: Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        type:
          type: string
          description: Data encryption type to depict if it is System Managed vs Azure Key vault.
          enum:
            - SystemManaged
            - AzureKeyVault
          x-ms-enum:
            name: ArmServerKeyType
            modelAsString: true
        primaryEncryptionKeyStatus:
          type: string
          description: Primary encryption key status for Data encryption enabled server.
          x-ms-mutability:
            - read
          enum:
            - Valid
            - Invalid
          x-ms-enum:
            name: keyStatusEnum
            modelAsString: true
        geoBackupEncryptionKeyStatus:
          type: string
          description: Geo-backup encryption key status for Data encryption enabled server.
          x-ms-mutability:
            - read
          enum:
            - Valid
            - Invalid
          x-ms-enum:
            name: keyStatusEnum
            modelAsString: true
      description: Data encryption properties of a server
    UserIdentity:
      description: Describes a single user-assigned identity associated with the application.
      type: object
      properties:
        principalId:
          type: string
          description: the object identifier of the Service Principal which this identity represents.
        clientId:
          type: string
          description: the client identifier of the Service Principal which this identity represents.
    UserAssignedIdentityMap:
      description: Defines a map that contains user assigned identities.
      additionalProperties:
        $ref: '#/components/schemas/UserIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      properties:
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentityMap'
          description: represents user assigned identities map.
        type:
          type: string
          description: the types of identities associated with this resource; currently restricted to 'None and UserAssigned'
          enum:
            - None
            - UserAssigned
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        tenantId:
          type: string
          description: Tenant id of the server.
          readOnly: true
      required:
        - type
      description: Information describing the identities associated with this application.
    ReplicationRole:
      type: string
      description: Used to indicate role of the server in replication set.
      enum:
        - None
        - Primary
        - AsyncReplica
        - GeoAsyncReplica
      x-ms-enum:
        name: ReplicationRole
        modelAsString: true
    Backup:
      type: object
      properties:
        backupRetentionDays:
          type: integer
          format: int32
          default: 7
          description: Backup retention days for the server.
        geoRedundantBackup:
          type: string
          default: Disabled
          description: A value indicating whether Geo-Redundant backup is enabled on the server.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: GeoRedundantBackupEnum
            modelAsString: true
          x-ms-mutability:
            - create
            - read
        earliestRestoreDate:
          type: string
          format: date-time
          description: The earliest restore point time (ISO8601 format) for server.
          readOnly: true
      description: Backup properties of a server
    Network:
      type: object
      properties:
        publicNetworkAccess:
          type: string
          description: public network access is enabled or not
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ServerPublicNetworkAccessState
            modelAsString: true
        delegatedSubnetResourceId:
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/virtualNetworks/subnets
          description: Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        privateDnsZoneArmResourceId:
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/privateDnsZones
          description: Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
      description: Network properties of a server.
    HighAvailability:
      type: object
      properties:
        mode:
          type: string
          default: Disabled
          description: The HA mode for the server.
          enum:
            - Disabled
            - ZoneRedundant
            - SameZone
          x-ms-enum:
            name: HighAvailabilityMode
            modelAsString: true
        state:
          type: string
          description: A state of a HA server that is visible to user.
          enum:
            - NotEnabled
            - CreatingStandby
            - ReplicatingData
            - FailingOver
            - Healthy
            - RemovingStandby
          x-ms-enum:
            name: ServerHAState
            modelAsString: true
          readOnly: true
        standbyAvailabilityZone:
          type: string
          default: ''
          description: availability zone information of the standby.
      description: High availability properties of a server
    MaintenanceWindow:
      type: object
      description: Maintenance window properties of a server.
      properties:
        customWindow:
          type: string
          default: Disabled
          description: indicates whether custom window is enabled or disabled
        startHour:
          type: integer
          format: int32
          default: 0
          description: start hour for maintenance window
        startMinute:
          type: integer
          format: int32
          default: 0
          description: start minute for maintenance window
        dayOfWeek:
          type: integer
          format: int32
          default: 0
          description: day of week for maintenance window
    VirtualEndpointResourceProperties:
      type: object
      properties:
        endpointType:
          type: string
          description: The endpoint type for the virtual endpoint.
          enum:
            - ReadWrite
          x-ms-enum:
            name: VirtualEndpointType
            modelAsString: true
        members:
          type: array
          items:
            type: string
            description: Member for the virtual endpoint.
          description: List of members for a virtual endpoint
        virtualEndpoints:
          type: array
          items:
            type: string
            description: Virtual endpoint for a server.
          description: List of virtual endpoints for a server
          readOnly: true
      description: The properties of a virtual endpoint.
    VirtualEndpointResource:
      description: Represents a virtual endpoint for a server.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualEndpointResourceProperties'
          x-ms-client-flatten: true
          description: Properties of the virtual endpoint resource.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    VirtualEndpointResourceForPatch:
      description: Represents a virtual endpoint for a server.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualEndpointResourceProperties'
          x-ms-client-flatten: true
          description: Properties of the virtual endpoint resource.
      type: object
    VirtualEndpointsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualEndpointResource'
          description: The list of virtual endpoints
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of virtual endpoints.
    BackupRequestBase:
      description: BackupRequestBase is the base for all backup request.
      required:
        - backupSettings
      type: object
      properties:
        backupSettings:
          $ref: '#/components/schemas/BackupSettings'
          description: Backup Settings
    LtrBackupRequest:
      description: The request that is made for a long term retention backup.
      required:
        - targetDetails
      properties:
        targetDetails:
          $ref: '#/components/schemas/BackupStoreDetails'
          description: Backup store detail for target server
        backupSettings:
          $ref: '#/components/schemas/BackupSettings'
          description: Backup Settings
      type: object
    LtrPreBackupRequest:
      description: A request that is made for pre-backup.
      properties:
        backupSettings:
          $ref: '#/components/schemas/BackupSettings'
          description: Backup Settings
      type: object
    BackupSettings:
      description: The settings for the long term backup.
      type: object
      required:
        - backupName
      properties:
        backupName:
          type: string
          description: Backup Name for the current backup
    BackupStoreDetails:
      description: Details about the target where the backup content will be stored.
      required:
        - sasUriList
      type: object
      properties:
        sasUriList:
          description: List of SAS uri of storage containers where backup data is to be streamed/copied.
          type: array
          items:
            type: string
            description: SAS URI of Azure Storage Account Container.
            x-ms-secret: true
    LtrPreBackupResponseProperties:
      description: Response for the pre-backup request.
      type: object
      required:
        - numberOfContainers
      properties:
        numberOfContainers:
          format: int32
          description: Number of storage containers the plugin will use during backup. More than one containers may be used for size limitations, parallelism, or redundancy etc.
          type: integer
    LtrBackupOperationResponseProperties:
      description: Response for the backup request.
      type: object
      required:
        - status
        - startTime
      properties:
        datasourceSizeInBytes:
          format: int64
          description: Size of datasource in bytes
          type: integer
        dataTransferredInBytes:
          format: int64
          description: Data transferred in bytes
          type: integer
        backupName:
          description: Name of Backup operation
          type: string
        backupMetadata:
          description: Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc
          type: string
        status:
          description: Service-set extensible enum indicating the status of operation
          enum:
            - Running
            - Cancelled
            - Failed
            - Succeeded
          type: string
          x-ms-enum:
            name: ExecutionStatus
            modelAsString: true
        startTime:
          description: Start time of the operation.
          format: date-time
          type: string
        endTime:
          description: End time of the operation.
          format: date-time
          type: string
        percentComplete:
          description: PercentageCompleted
          format: double
          type: number
          minimum: 0
          maximum: 100
        errorCode:
          readOnly: true
          type: string
          description: The error code.
        errorMessage:
          readOnly: true
          type: string
          description: The error message.
    LtrBackupResponse:
      description: Response for the LTR backup API call
      properties:
        properties:
          description: Long Term Retention Backup Operation Resource Properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LtrBackupOperationResponseProperties'
      type: object
    LtrServerBackupOperation:
      description: Response for the LTR backup Operation API call
      required:
        - id
        - name
      properties:
        properties:
          description: Long Term Retention Backup Operation Resource Properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LtrBackupOperationResponseProperties'
      type: object
    LtrServerBackupOperationList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LtrServerBackupOperation'
          description: The list of long term retention server backup operations
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of long term retention backup operations for server.
    LtrPreBackupResponse:
      description: Response for the LTR pre-backup API call
      required:
        - properties
      properties:
        properties:
          description: Additional Properties for the pre backup response
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LtrPreBackupResponseProperties'
      type: object
    FirewallRuleProperties:
      type: object
      properties:
        startIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The start IP address of the server firewall rule. Must be IPv4 format.
        endIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The end IP address of the server firewall rule. Must be IPv4 format.
      required:
        - startIpAddress
        - endIpAddress
      description: The properties of a server firewall rule.
    FirewallRule:
      required:
        - properties
      description: Represents a server firewall rule.
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          x-ms-client-flatten: true
          description: The properties of a firewall rule.
      type: object
    FirewallRuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The list of firewall rules in a server.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of firewall rules.
    StorageTierCapability:
      description: Represents capability of a storage tier
      properties:
        name:
          type: string
          description: Name to represent Storage tier capability
          readOnly: true
        iops:
          type: integer
          format: int32
          description: Supported IOPS for this storage tier
          readOnly: true
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
      type: object
    StorageMbCapability:
      description: storage size in MB capability
      properties:
        supportedIops:
          type: integer
          format: int32
          description: Supported IOPS
          readOnly: true
        supportedMaximumIops:
          type: integer
          format: int32
          description: 'Maximum IOPS supported by this #Vcores or PremiumV2_LRS Storage Size'
          readOnly: true
        storageSizeMb:
          type: integer
          format: int64
          description: Storage size in MB
          readOnly: true
        maximumStorageSizeMb:
          type: integer
          format: int64
          description: Maximum value of Storage size in MB
          readOnly: true
        supportedThroughput:
          type: integer
          format: int32
          description: Values of throughput in MB/s
          readOnly: true
        supportedMaximumThroughput:
          type: integer
          format: int32
          description: Maximum values of throughput in MB/s
          readOnly: true
        defaultIopsTier:
          type: string
          description: Default tier for IOPS
          readOnly: true
        supportedIopsTiers:
          type: array
          description: List of available options to upgrade the storage performance
          items:
            $ref: '#/components/schemas/StorageTierCapability'
          x-ms-identifiers:
            - name
          readOnly: true
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
      type: object
    ServerSkuCapability:
      description: Sku capability
      properties:
        name:
          type: string
          description: Sku name
          readOnly: true
        vCores:
          type: integer
          format: int32
          description: Supported vCores
          readOnly: true
        supportedIops:
          type: integer
          format: int32
          description: Supported IOPS
          readOnly: true
        supportedMemoryPerVcoreMb:
          type: integer
          format: int64
          description: Supported memory per vCore in MB
          readOnly: true
        supportedZones:
          type: array
          description: List of supported Availability Zones. E.g. "1", "2", "3"
          items:
            type: string
          readOnly: true
        supportedHaMode:
          type: array
          items:
            type: string
            description: HA mode supported for a server.
            enum:
              - SameZone
              - ZoneRedundant
            x-ms-enum:
              name: HaMode
              modelAsString: true
          description: Supported high availability mode
          readOnly: true
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
      type: object
    ServerVersionCapability:
      description: Server version capabilities.
      properties:
        name:
          type: string
          description: Server version
          readOnly: true
        supportedVersionsToUpgrade:
          type: array
          items:
            type: string
          description: Supported servers versions to upgrade
          readOnly: true
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
      type: object
    StorageEditionCapability:
      description: Storage edition capability
      properties:
        name:
          type: string
          description: Storage edition name
          readOnly: true
        defaultStorageSizeMb:
          type: integer
          format: int64
          description: Default storage size in MB for storage edition
          readOnly: true
        supportedStorageMb:
          type: array
          description: Flexible server supported storage range in MB
          items:
            $ref: '#/components/schemas/StorageMbCapability'
          x-ms-identifiers:
            - storageSizeMb
          readOnly: true
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
      type: object
    FastProvisioningEditionCapability:
      description: Represents capability of a fast provisioning edition
      properties:
        supportedTier:
          type: string
          description: Fast provisioning supported tier name
          readOnly: true
        supportedSku:
          type: string
          description: Fast provisioning supported sku name
          readOnly: true
        supportedStorageGb:
          type: integer
          format: int32
          description: Fast provisioning supported storage in Gb
          readOnly: true
        supportedServerVersions:
          type: string
          description: Fast provisioning supported version
          readOnly: true
        serverCount:
          type: integer
          description: Count of servers in cache matching the spec
          format: int32
          readOnly: true
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
      type: object
    FlexibleServerEditionCapability:
      description: Flexible server edition capabilities.
      properties:
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
        name:
          type: string
          description: Server edition name
          readOnly: true
        defaultSkuName:
          type: string
          description: Default sku name for the server edition
          readOnly: true
        supportedStorageEditions:
          type: array
          items:
            $ref: '#/components/schemas/StorageEditionCapability'
          description: The list of editions supported by this server edition.
          readOnly: true
          x-ms-identifiers:
            - name
        supportedServerSkus:
          type: array
          description: List of supported server SKUs.
          items:
            $ref: '#/components/schemas/ServerSkuCapability'
          x-ms-identifiers:
            - name
          readOnly: true
      type: object
    FlexibleServerCapability:
      description: Capability for the PostgreSQL server
      properties:
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
        name:
          type: string
          description: Name of flexible servers capability
        supportedServerEditions:
          type: array
          items:
            $ref: '#/components/schemas/FlexibleServerEditionCapability'
          x-ms-identifiers:
            - name
          readOnly: true
          description: List of supported flexible server editions
        supportedServerVersions:
          type: array
          items:
            $ref: '#/components/schemas/ServerVersionCapability'
          x-ms-identifiers:
            - name
          description: The list of server versions supported for this capability.
          readOnly: true
        fastProvisioningSupported:
          type: string
          description: Gets a value indicating whether fast provisioning is supported. "Enabled" means fast provisioning is supported. "Disabled" stands for fast provisioning is not supported.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: fastProvisioningSupportedEnum
            modelAsString: true
        supportedFastProvisioningEditions:
          type: array
          description: List of supported server editions for fast provisioning
          items:
            $ref: '#/components/schemas/FastProvisioningEditionCapability'
          x-ms-identifiers:
            - supportedSku
          readOnly: true
        geoBackupSupported:
          type: string
          description: Determines if geo-backup is supported in this region. "Enabled" means geo-backup is supported. "Disabled" stands for geo-back is not supported.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: geoBackupSupportedEnum
            modelAsString: true
        zoneRedundantHaSupported:
          type: string
          description: A value indicating whether Zone Redundant HA is supported in this region. "Enabled" means zone redundant HA is supported. "Disabled" stands for zone redundant HA is not supported.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: zoneRedundantHaSupportedEnum
            modelAsString: true
        zoneRedundantHaAndGeoBackupSupported:
          type: string
          description: A value indicating whether Zone Redundant HA and Geo-backup is supported in this region. "Enabled" means zone redundant HA and geo-backup is supported. "Disabled" stands for zone redundant HA and geo-backup is not supported.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: zoneRedundantHaAndGeoBackupSupportedEnum
            modelAsString: true
        storageAutoGrowthSupported:
          type: string
          description: A value indicating whether storage auto-grow is supported in this region. "Enabled" means storage auto-grow is supported. "Disabled" stands for storage auto-grow is not supported.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: storageAutoGrowthSupportedEnum
            modelAsString: true
        onlineResizeSupported:
          type: string
          description: A value indicating whether online resize is supported in this region for the given subscription. "Enabled" means storage online resize is supported. "Disabled" means storage online resize is not supported.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: onlineResizeSupportedEnum
            modelAsString: true
        restricted:
          type: string
          description: A value indicating whether this region is restricted. "Enabled" means region is restricted. "Disabled" stands for region is not restricted.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: restrictedEnum
            modelAsString: true
      type: object
    CapabilitiesListResult:
      type: object
      properties:
        value:
          description: A list of supported capabilities.
          type: array
          items:
            $ref: '#/components/schemas/FlexibleServerCapability'
          x-ms-identifiers:
            - name
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
      description: Capability for the PostgreSQL server
    QuotaUsage:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NameProperty'
          description: Name of quota usage for flexible servers
        limit:
          type: integer
          format: int64
          description: Quota limit
        unit:
          type: string
          description: Quota unit
          default: Count
        currentValue:
          type: integer
          format: int64
          description: Current Quota usage value
        id:
          type: string
          description: Fully qualified ARM resource Id
      description: Quota usage for flexible servers
    NameProperty:
      type: object
      properties:
        value:
          type: string
          description: Name value
        localizedValue:
          type: string
          description: Localized name
      description: Name property for quota usage
    QuotaUsagesListResult:
      type: object
      properties:
        value:
          description: A list of quota usages.
          type: array
          items:
            $ref: '#/components/schemas/QuotaUsage'
          x-ms-identifiers:
            - name
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
      description: Capability for the PostgreSQL server
    CapabilityBase:
      type: object
      description: Base object for representing capability
      properties:
        status:
          description: The status of the capability.
          enum:
            - Visible
            - Available
            - Default
            - Disabled
          type: string
          readOnly: true
          x-ms-mutability:
            - read
          x-ms-enum:
            name: CapabilityStatus
            modelAsString: false
        reason:
          description: The reason for the capability not being available.
          type: string
          readOnly: true
          x-ms-mutability:
            - read
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        groupIds:
          description: The group ids for the private endpoint resource.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The private endpoint resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the private endpoint connection.
    PrivateEndpointProperty:
      type: object
      properties:
        id:
          description: Resource id of the private endpoint.
          type: string
          format: arm-id
      x-ms-azure-resource: true
    PrivateLinkServiceConnectionStateProperty:
      required:
        - status
        - description
      type: object
      properties:
        status:
          description: The private link service connection status. Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
          type: string
        description:
          description: The private link service connection description. The reason for approval/rejection of the connection.
          type: string
        actionsRequired:
          description: The actions required for private link service connection. A message indicating if changes on the service provider require any updates on the consumer.
          type: string
          readOnly: true
      description: A collection of information about the state of the private endpoint connection.
    PrivateEndpointConnection:
      description: The private endpoint connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource private link DNS zone name.
      description: Properties of a private link resource.
    PrivateLinkResource:
      description: A private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateDnsZoneSuffix:
      type: string
      description: Represents a resource name availability.
    ServerBackupProperties:
      type: object
      properties:
        backupType:
          type: string
          description: Backup type.
          enum:
            - Full
            - Customer On-Demand
          x-ms-enum:
            name: Origin
            modelAsString: true
        completedTime:
          type: string
          format: date-time
          description: Backup completed time (ISO8601 format).
        source:
          type: string
          description: Backup source
      description: The properties of a server backup.
    ServerBackup:
      description: Server backup properties
      properties:
        properties:
          $ref: '#/components/schemas/ServerBackupProperties'
          x-ms-client-flatten: true
          description: The properties of a server backup.
      type: object
    ServerBackupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServerBackup'
          description: The list of backups of a server.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of server backups.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for private endpoint.
      description: The private endpoint resource.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateEndpointConnectionListResult:
      description: A list of private endpoint connections.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        nextLink:
          description: The URL to get the next set of results.
          type: string
          format: uri
          readOnly: true
    PrivateLinkResourceListResult:
      description: A list of private link resources
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    DatabaseProperties:
      type: object
      properties:
        charset:
          type: string
          description: The charset of the database.
          pattern: ^[a-zA-Z]+\w*$
        collation:
          type: string
          description: The collation of the database.
          pattern: ^[a-zA-Z\-]+([. ]|\w)*$
      description: The properties of a database.
    Database:
      description: Represents a Database.
      properties:
        properties:
          $ref: '#/components/schemas/DatabaseProperties'
          x-ms-client-flatten: true
          description: The properties of a database.
      type: object
    DatabaseListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Database'
          description: The list of databases housed in a server
        nextLink:
          description: The link used to get the next page of databases.
          type: string
          format: uri
      description: A List of databases.
    ConfigurationProperties:
      type: object
      properties:
        value:
          type: string
          description: Value of the configuration.
        description:
          type: string
          readOnly: true
          description: Description of the configuration.
        defaultValue:
          type: string
          readOnly: true
          description: Default value of the configuration.
        dataType:
          type: string
          readOnly: true
          description: Data type of the configuration.
          enum:
            - Boolean
            - Numeric
            - Integer
            - Enumeration
          x-ms-enum:
            name: ConfigurationDataType
            modelAsString: true
        allowedValues:
          type: string
          readOnly: true
          description: Allowed values of the configuration.
        source:
          type: string
          description: Source of the configuration.
        isDynamicConfig:
          type: boolean
          readOnly: true
          description: Configuration dynamic or static.
        isReadOnly:
          type: boolean
          readOnly: true
          description: Configuration read-only or not.
        isConfigPendingRestart:
          type: boolean
          readOnly: true
          description: Configuration is pending restart or not.
        unit:
          type: string
          readOnly: true
          description: Configuration unit.
        documentationLink:
          type: string
          readOnly: true
          description: Configuration documentation link.
      description: The properties of a configuration.
    Configuration:
      description: Represents a Configuration.
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          x-ms-client-flatten: true
          description: The properties of a configuration.
      type: object
    ConfigurationForUpdate:
      description: Represents a Configuration.
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          x-ms-client-flatten: true
          description: The properties of a configuration.
      type: object
    ConfigurationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
          description: The list of server configurations.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of server configurations.
    NameAvailability:
      description: Represents a resource name availability.
      properties:
        name:
          type: string
          description: name of the PostgreSQL server.
          readOnly: true
        type:
          type: string
          description: type of the server
          readOnly: true
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
      type: object
    ActiveDirectoryAdministratorAdd:
      description: Represents an Active Directory administrator.
      properties:
        properties:
          $ref: '#/components/schemas/AdministratorPropertiesForAdd'
          x-ms-client-flatten: true
          description: Properties of the active directory administrator.
      type: object
    AdministratorPropertiesForAdd:
      type: object
      properties:
        principalType:
          type: string
          description: The principal type used to represent the type of Active Directory Administrator.
          enum:
            - Unknown
            - User
            - Group
            - ServicePrincipal
          x-ms-enum:
            name: PrincipalType
            modelAsString: true
          x-ms-mutability:
            - create
            - update
            - read
        principalName:
          type: string
          description: Active Directory administrator principal name.
          x-ms-mutability:
            - create
            - update
            - read
        tenantId:
          type: string
          description: The tenantId of the Active Directory administrator.
          x-ms-mutability:
            - create
            - update
      description: The properties of an Active Directory administrator.
    AdministratorProperties:
      type: object
      properties:
        principalType:
          type: string
          description: The principal type used to represent the type of Active Directory Administrator.
          enum:
            - Unknown
            - User
            - Group
            - ServicePrincipal
          x-ms-enum:
            name: PrincipalType
            modelAsString: true
          x-ms-mutability:
            - create
            - update
            - read
        principalName:
          type: string
          description: Active Directory administrator principal name.
          x-ms-mutability:
            - create
            - update
            - read
        objectId:
          type: string
          description: The objectId of the Active Directory administrator.
          x-ms-mutability:
            - create
            - update
            - read
        tenantId:
          type: string
          description: The tenantId of the Active Directory administrator.
          x-ms-mutability:
            - create
            - update
            - read
      description: The properties of an Active Directory administrator.
    ActiveDirectoryAdministrator:
      required:
        - properties
      description: Represents an Active Directory administrator.
      properties:
        properties:
          $ref: '#/components/schemas/AdministratorProperties'
          x-ms-client-flatten: true
          description: Properties of the active directory administrator.
      type: object
    AdministratorListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ActiveDirectoryAdministrator'
          description: The list of active directory administrators
        nextLink:
          description: The link used to get the next page of active directory.
          type: string
      description: A list of active directory administrators.
    MigrationResource:
      description: Represents a migration resource.
      properties:
        properties:
          $ref: '#/components/schemas/MigrationResourceProperties'
          description: Migration resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MigrationResourceProperties:
      type: object
      properties:
        migrationId:
          type: string
          readOnly: true
          description: ID for migration, a GUID.
        currentStatus:
          $ref: '#/components/schemas/MigrationStatus'
          readOnly: true
          description: Current status of migration
        migrationInstanceResourceId:
          type: string
          format: arm-id
          description: ResourceId of the private endpoint migration instance
        migrationMode:
          $ref: '#/components/schemas/MigrationMode'
          description: There are two types of migration modes Online and Offline
        migrationOption:
          $ref: '#/components/schemas/MigrationOption'
          description: This indicates the supported Migration option for the migration
        sourceType:
          $ref: '#/components/schemas/SourceType'
          description: 'migration source server type : OnPremises, AWS, GCP, AzureVM, PostgreSQLSingleServer, AWS_RDS, AWS_AURORA, AWS_EC2, GCP_CloudSQL, GCP_AlloyDB, GCP_Compute, or EDB'
        sslMode:
          $ref: '#/components/schemas/SslMode'
          description: SSL modes for migration. Default SSL mode for PostgreSQLSingleServer is VerifyFull and Prefer for other source types
        sourceDbServerMetadata:
          $ref: '#/components/schemas/DbServerMetadata'
          readOnly: true
          description: Metadata of the source database server
        targetDbServerMetadata:
          $ref: '#/components/schemas/DbServerMetadata'
          readOnly: true
          description: Metadata of the target database server
        sourceDbServerResourceId:
          type: string
          description: ResourceId of the source database server in case the sourceType is PostgreSQLSingleServer. For other source types this should be ipaddress:port@username or hostname:port@username
        sourceDbServerFullyQualifiedDomainName:
          type: string
          description: Source server fully qualified domain name (FQDN) or IP address. It is a optional value, if customer provide it, migration service will always use it for connection
        targetDbServerResourceId:
          type: string
          readOnly: true
          description: ResourceId of the source database server
        targetDbServerFullyQualifiedDomainName:
          type: string
          description: Target server fully qualified domain name (FQDN) or IP address. It is a optional value, if customer provide it, migration service will always use it for connection
        secretParameters:
          $ref: '#/components/schemas/MigrationSecretParameters'
          description: Migration secret parameters
        dbsToMigrate:
          maxItems: 50
          type: array
          items:
            type: string
          description: Number of databases to migrate
          x-ms-identifiers: []
        setupLogicalReplicationOnSourceDbIfNeeded:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: LogicalReplicationOnSourceDbEnum
            modelAsString: true
          description: Indicates whether to setup LogicalReplicationOnSourceDb, if needed
        overwriteDbsInTarget:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: OverwriteDbsInTargetEnum
            modelAsString: true
          description: Indicates whether the databases on the target server can be overwritten, if already present. If set to False, the migration workflow will wait for a confirmation, if it detects that the database already exists.
        migrationWindowStartTimeInUtc:
          format: date-time
          type: string
          description: Start time in UTC for migration window
        migrationWindowEndTimeInUtc:
          format: date-time
          type: string
          description: End time in UTC for migration window
        migrateRoles:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: MigrateRolesEnum
            modelAsString: true
          description: To migrate roles and permissions we need to send this flag as True
        startDataMigration:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: StartDataMigrationEnum
            modelAsString: true
          description: Indicates whether the data migration should start right away
        triggerCutover:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: TriggerCutoverEnum
            modelAsString: true
          description: To trigger cutover for entire migration we need to send this flag as True
        dbsToTriggerCutoverOn:
          type: array
          items:
            type: string
          description: When you want to trigger cutover for specific databases send triggerCutover flag as True and database names in this array
          x-ms-identifiers: []
        cancel:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: CancelEnum
            modelAsString: true
          description: To trigger cancel for entire migration we need to send this flag as True
        dbsToCancelMigrationOn:
          type: array
          items:
            type: string
          description: When you want to trigger cancel for specific databases send cancel flag as True and database names in this array
          x-ms-identifiers: []
      description: Migration resource properties.
    MigrationResourceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MigrationResource'
          readOnly: true
          description: A list of migration resources.
          x-ms-identifiers: []
        nextLink:
          description: The link used to get the next page of migrations.
          type: string
          readOnly: true
      description: A list of migration resources.
    MigrationResourceForPatch:
      description: Represents a migration resource for patch.
      properties:
        properties:
          $ref: '#/components/schemas/MigrationResourcePropertiesForPatch'
          description: Migration resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      type: object
    MigrationResourcePropertiesForPatch:
      type: object
      properties:
        sourceDbServerResourceId:
          type: string
          description: ResourceId of the source database server
        sourceDbServerFullyQualifiedDomainName:
          type: string
          description: Source server fully qualified domain name (FQDN) or IP address. It is a optional value, if customer provide it, migration service will always use it for connection
        targetDbServerFullyQualifiedDomainName:
          type: string
          description: Target server fully qualified domain name (FQDN) or IP address. It is a optional value, if customer provide it, migration service will always use it for connection
        secretParameters:
          $ref: '#/components/schemas/MigrationSecretParameters'
          description: Migration secret parameters
        dbsToMigrate:
          maxItems: 50
          type: array
          items:
            type: string
          description: Number of databases to migrate
          x-ms-identifiers: []
        setupLogicalReplicationOnSourceDbIfNeeded:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: LogicalReplicationOnSourceDbEnum
            modelAsString: true
          description: Indicates whether to setup LogicalReplicationOnSourceDb, if needed
        overwriteDbsInTarget:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: OverwriteDbsInTargetEnum
            modelAsString: true
          description: Indicates whether the databases on the target server can be overwritten, if already present. If set to False, the migration workflow will wait for a confirmation, if it detects that the database already exists.
        migrationWindowStartTimeInUtc:
          format: date-time
          type: string
          description: Start time in UTC for migration window
        migrateRoles:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: MigrateRolesEnum
            modelAsString: true
          description: To migrate roles and permissions we need to send this flag as True
        startDataMigration:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: StartDataMigrationEnum
            modelAsString: true
          description: Indicates whether the data migration should start right away
        triggerCutover:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: TriggerCutoverEnum
            modelAsString: true
          description: To trigger cutover for entire migration we need to send this flag as True
        dbsToTriggerCutoverOn:
          type: array
          items:
            type: string
          description: When you want to trigger cutover for specific databases send triggerCutover flag as True and database names in this array
          x-ms-identifiers: []
        cancel:
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            name: CancelEnum
            modelAsString: true
          description: To trigger cancel for entire migration we need to send this flag as True
        dbsToCancelMigrationOn:
          type: array
          items:
            type: string
          description: When you want to trigger cancel for specific databases send cancel flag as True and database names in this array
          x-ms-identifiers: []
        migrationMode:
          $ref: '#/components/schemas/MigrationMode'
          description: There are two types of migration modes Online and Offline
      description: Migration resource properties for patch.
    MigrationSecretParameters:
      required:
        - adminCredentials
      type: object
      properties:
        adminCredentials:
          x-ms-secret: true
          x-ms-external: true
          $ref: '#/components/schemas/AdminCredentials'
          description: Admin credentials for source and target servers
        sourceServerUsername:
          type: string
          x-ms-mutability:
            - create
            - update
          description: Gets or sets the username for the source server. This user need not be an admin.
        targetServerUsername:
          type: string
          x-ms-mutability:
            - create
            - update
          description: Gets or sets the username for the target server. This user need not be an admin.
      description: Migration secret parameters.
    AdminCredentials:
      type: object
      required:
        - sourceServerPassword
        - targetServerPassword
      properties:
        sourceServerPassword:
          type: string
          x-ms-secret: true
          x-ms-external: true
          x-ms-mutability:
            - create
            - update
          description: Password for source server.
        targetServerPassword:
          type: string
          x-ms-secret: true
          x-ms-external: true
          x-ms-mutability:
            - create
            - update
          description: Password for target server.
      description: Server admin credentials.
    DbServerMetadata:
      type: object
      properties:
        location:
          type: string
          description: Location of database server
          x-ms-mutability:
            - read
          readOnly: true
        version:
          type: string
          description: Version for database engine
        storageMb:
          format: int32
          type: integer
          description: Storage size in MB for database server
        sku:
          $ref: '#/components/schemas/ServerSku'
          description: SKU for the database server. This object is empty for PG single server
      description: Database server metadata.
    MigrationDetailsLevel:
      enum:
        - Default
        - Summary
        - Full
      type: string
      description: Migration details level.
      x-ms-enum:
        name: MigrationDetailsLevel
        modelAsString: true
    MigrationMode:
      enum:
        - Offline
        - Online
      type: string
      description: There are two types of migration modes Online and Offline
      x-ms-enum:
        name: MigrationMode
        modelAsString: true
    MigrationOption:
      enum:
        - Validate
        - Migrate
        - ValidateAndMigrate
      type: string
      description: Supported types of migration request include Validate, Migrate and ValidateAndMigrate
      x-ms-enum:
        name: MigrationOption
        modelAsString: true
    MigrationState:
      enum:
        - InProgress
        - WaitingForUserAction
        - Canceled
        - Failed
        - Succeeded
        - ValidationFailed
        - CleaningUp
      type: string
      description: Migration state.
      x-ms-enum:
        name: MigrationState
        modelAsString: true
    MigrationStatus:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/MigrationState'
          readOnly: true
          description: State of migration
        error:
          type: string
          readOnly: true
          description: Error message, if any, for the migration state
        currentSubStateDetails:
          $ref: '#/components/schemas/MigrationSubStateDetails'
          readOnly: true
          description: Current Migration sub state details.
      description: Migration status.
    MigrationSubState:
      enum:
        - PerformingPreRequisiteSteps
        - WaitingForLogicalReplicationSetupRequestOnSourceDB
        - WaitingForDBsToMigrateSpecification
        - WaitingForTargetDBOverwriteConfirmation
        - WaitingForDataMigrationScheduling
        - WaitingForDataMigrationWindow
        - MigratingData
        - WaitingForCutoverTrigger
        - CompletingMigration
        - Completed
        - CancelingRequestedDBMigrations
        - ValidationInProgress
      type: string
      description: Migration sub state.
      x-ms-enum:
        name: MigrationSubState
        modelAsString: true
    MigrationSubStateDetails:
      type: object
      properties:
        currentSubState:
          $ref: '#/components/schemas/MigrationSubState'
          readOnly: true
        dbDetails:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DbMigrationStatus'
        validationDetails:
          $ref: '#/components/schemas/ValidationDetails'
      description: Migration sub state details.
    DbMigrationStatus:
      type: object
      description: Migration status of an individual database
      properties:
        databaseName:
          type: string
          description: Name of the database
        migrationState:
          type: string
          description: Migration db state of an individual database
          enum:
            - InProgress
            - WaitingForCutoverTrigger
            - Failed
            - Canceled
            - Succeeded
            - Canceling
          x-ms-enum:
            name: MigrationDbState
            modelAsString: true
        migrationOperation:
          type: string
          description: Migration operation of an individual database
        startedOn:
          type: string
          format: date-time
          description: Start date-time of a migration state
        endedOn:
          type: string
          format: date-time
          description: End date-time of a migration state
        fullLoadQueuedTables:
          format: int32
          type: integer
          description: Number of tables queued for the migration of a DB
        fullLoadErroredTables:
          format: int32
          type: integer
          description: Number of tables errored out during the migration of a DB
        fullLoadLoadingTables:
          format: int32
          type: integer
          description: Number of tables loading during the migration of a DB
        fullLoadCompletedTables:
          format: int32
          type: integer
          description: Number of tables loaded during the migration of a DB
        cdcUpdateCounter:
          format: int32
          type: integer
          description: CDC update counter
        cdcDeleteCounter:
          format: int32
          type: integer
          description: CDC delete counter
        cdcInsertCounter:
          format: int32
          type: integer
          description: CDC insert counter
        appliedChanges:
          format: int32
          type: integer
          description: CDC applied changes counter
        incomingChanges:
          format: int32
          type: integer
          description: CDC incoming changes counter
        latency:
          format: int32
          type: integer
          description: Lag in seconds between source and target during online phase
        message:
          type: string
          description: Error message, if any, for the migration state
    ValidationDetails:
      type: object
      description: Details for the validation for migration
      properties:
        status:
          $ref: '#/components/schemas/ValidationState'
        validationStartTimeInUtc:
          type: string
          format: date-time
          description: Validation Start date-time in UTC
        validationEndTimeInUtc:
          type: string
          format: date-time
          description: Validation End date-time in UTC
        serverLevelValidationDetails:
          type: array
          items:
            $ref: '#/components/schemas/ValidationSummaryItem'
          description: Details of server level validations
          x-ms-identifiers: []
        dbLevelValidationDetails:
          type: array
          items:
            $ref: '#/components/schemas/DbLevelValidationStatus'
          description: Details of server level validations
          x-ms-identifiers:
            - databaseName
    DbLevelValidationStatus:
      type: object
      description: Validation status summary for an individual database
      properties:
        databaseName:
          type: string
          description: Name of the database
        startedOn:
          type: string
          format: date-time
          description: Start date-time of a database level validation
        endedOn:
          type: string
          format: date-time
          description: End date-time of a database level validation
        summary:
          type: array
          items:
            $ref: '#/components/schemas/ValidationSummaryItem'
          description: Summary of database level validations
          x-ms-identifiers: []
    ValidationSummaryItem:
      type: object
      description: Validation summary object
      properties:
        type:
          type: string
          description: Validation type
        state:
          $ref: '#/components/schemas/ValidationState'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessage'
          description: Validation messages
          x-ms-identifiers: []
    ValidationMessage:
      type: object
      description: Validation message object
      properties:
        state:
          $ref: '#/components/schemas/ValidationState'
          description: Severity of validation message
        message:
          type: string
          description: Validation message string
    ValidationState:
      type: string
      description: Validation status for migration
      enum:
        - Failed
        - Succeeded
        - Warning
      x-ms-enum:
        name: ValidationState
        modelAsString: true
    SourceType:
      enum:
        - OnPremises
        - AWS
        - GCP
        - AzureVM
        - PostgreSQLSingleServer
        - AWS_RDS
        - AWS_AURORA
        - AWS_EC2
        - GCP_CloudSQL
        - GCP_AlloyDB
        - GCP_Compute
        - EDB
      type: string
      description: 'Migration source server type : OnPremises, AWS, GCP, AzureVM, PostgreSQLSingleServer, AWS_RDS, AWS_AURORA, AWS_EC2, GCP_CloudSQL, GCP_AlloyDB, GCP_Compute, or EDB'
      x-ms-enum:
        name: SourceType
        modelAsString: true
    SslMode:
      enum:
        - Prefer
        - Require
        - VerifyCA
        - VerifyFull
      type: string
      description: Supported SSL modes for migration. VerifyFull is the recommended SSL mode for Single server migration. Prefer, Require are recommended SSL modes for other source types
      x-ms-enum:
        name: SslMode
        modelAsString: true
    ServerSku:
      type: object
      properties:
        name:
          type: string
          description: The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
        tier:
          type: string
          description: The tier of the particular SKU, e.g. Burstable.
          enum:
            - Burstable
            - GeneralPurpose
            - MemoryOptimized
          x-ms-enum:
            name: SkuTier
            modelAsString: true
      description: Sku information related properties of a server.
    MigrationNameAvailabilityReason:
      enum:
        - Invalid
        - AlreadyExists
      type: string
      description: Migration name availability reason.
      x-ms-enum:
        name: MigrationNameAvailabilityReason
        modelAsString: true
    MigrationNameAvailabilityResource:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string
          description: The resource name to verify.
        type:
          type: string
          description: The type of the resource.
        nameAvailable:
          type: boolean
          description: Indicates whether the resource name is available.
          readOnly: true
        reason:
          $ref: '#/components/schemas/MigrationNameAvailabilityReason'
          description: Migration name availability reason
          readOnly: true
        message:
          type: string
          description: Migration name availability message.
          readOnly: true
      description: Represents a migration name's availability.
    VirtualNetworkSubnetUsageParameter:
      type: object
      properties:
        virtualNetworkArmResourceId:
          type: string
          description: Virtual network resource id.
      description: Virtual network subnet usage parameter
    VirtualNetworkSubnetUsageResult:
      type: object
      properties:
        delegatedSubnetsUsage:
          type: array
          items:
            $ref: '#/components/schemas/DelegatedSubnetUsage'
          readOnly: true
          x-ms-identifiers:
            - subnetName
        location:
          type: string
          readOnly: true
          description: location of the delegated subnet usage
        subscriptionId:
          type: string
          readOnly: true
          description: subscriptionId of the delegated subnet usage
      description: Virtual network subnet usage data.
    DelegatedSubnetUsage:
      type: object
      properties:
        subnetName:
          type: string
          readOnly: true
          description: Name of the delegated subnet for which IP addresses are in use
        usage:
          type: integer
          format: int64
          readOnly: true
          description: Number of IP addresses used by the delegated subnet
      description: Delegated subnet usage data.
    RestartParameter:
      type: object
      properties:
        restartWithFailover:
          type: boolean
          description: Indicates whether to restart the server with failover.
        failoverMode:
          type: string
          description: Failover mode.
          enum:
            - PlannedFailover
            - ForcedFailover
            - PlannedSwitchover
            - ForcedSwitchover
          x-ms-enum:
            name: FailoverMode
            modelAsString: true
      description: Represents server restart parameters.
  x-stackQL-resources:
    log_files:
      id: azure.postgresql.log_files
      name: log_files
      title: log_files
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1logFiles?api-version=2024-03-01-preview/get'
            operationId: LogFiles_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogFileListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_files/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.postgresql.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations?api-version=2024-03-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
        check_name_availability_execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1checkNameAvailability?api-version=2024-03-01-preview/post'
            operationId: Operations_CheckNameAvailabilityExecute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailability
        check_name_availability_with_location_execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1locations~1{locationName}~1checkNameAvailability?api-version=2024-03-01-preview/post'
            operationId: Operations_CheckNameAvailabilityWithLocationExecute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailability
        check_migration_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{targetDbServerName}~1checkMigrationNameAvailability?api-version=2024-03-01-preview/post'
            operationId: Operations_CheckMigrationNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationNameAvailabilityResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    server_threat_protection_settings:
      id: azure.postgresql.server_threat_protection_settings
      name: server_threat_protection_settings
      title: server_threat_protection_settings
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1advancedThreatProtectionSettings?api-version=2024-03-01-preview/get'
            operationId: ServerThreatProtectionSettings_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerThreatProtectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1advancedThreatProtectionSettings~1{threatProtectionName}?api-version=2024-03-01-preview/get'
            operationId: ServerThreatProtectionSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerThreatProtectionSettingsModel
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1advancedThreatProtectionSettings~1{threatProtectionName}?api-version=2024-03-01-preview/put'
            operationId: ServerThreatProtectionSettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerThreatProtectionSettingsModel
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_threat_protection_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/server_threat_protection_settings/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/server_threat_protection_settings/methods/create_or_update'
        update: []
        replace: []
        delete: []
    servers:
      id: azure.postgresql.servers
      name: servers
      title: servers
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}?api-version=2024-03-01-preview/put'
            operationId: Servers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}?api-version=2024-03-01-preview/patch'
            operationId: Servers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}?api-version=2024-03-01-preview/delete'
            operationId: Servers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}?api-version=2024-03-01-preview/get'
            operationId: Servers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers?api-version=2024-03-01-preview/get'
            operationId: Servers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers?api-version=2024-03-01-preview/get'
            operationId: Servers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1restart?api-version=2024-03-01-preview/post'
            operationId: Servers_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1start?api-version=2024-03-01-preview/post'
            operationId: Servers_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1stop?api-version=2024-03-01-preview/post'
            operationId: Servers_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/servers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/servers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/servers/methods/delete'
    virtual_endpoints:
      id: azure.postgresql.virtual_endpoints
      name: virtual_endpoints
      title: virtual_endpoints
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1virtualendpoints~1{virtualEndpointName}?api-version=2024-03-01-preview/put'
            operationId: VirtualEndpoints_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualEndpointResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1virtualendpoints~1{virtualEndpointName}?api-version=2024-03-01-preview/patch'
            operationId: VirtualEndpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualEndpointResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1virtualendpoints~1{virtualEndpointName}?api-version=2024-03-01-preview/delete'
            operationId: VirtualEndpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1virtualendpoints~1{virtualEndpointName}?api-version=2024-03-01-preview/get'
            operationId: VirtualEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualEndpointResource
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1virtualendpoints?api-version=2024-03-01-preview/get'
            operationId: VirtualEndpoints_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualEndpointsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_endpoints/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_endpoints/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/virtual_endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_endpoints/methods/delete'
    flexible_servers:
      id: azure.postgresql.flexible_servers
      name: flexible_servers
      title: flexible_servers
      methods:
        trigger_ltr_pre_backup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1ltrPreBackup?api-version=2024-03-01-preview/post'
            operationId: FlexibleServer_TriggerLtrPreBackup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LtrPreBackupResponse
        start_ltr_backup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1startLtrBackup?api-version=2024-03-01-preview/post'
            operationId: FlexibleServer_StartLtrBackup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LtrBackupResponse
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    ltr_backup_operations:
      id: azure.postgresql.ltr_backup_operations
      name: ltr_backup_operations
      title: ltr_backup_operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1ltrBackupOperations~1{backupName}?api-version=2024-03-01-preview/get'
            operationId: ltrBackupOperations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LtrServerBackupOperation
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1ltrBackupOperations?api-version=2024-03-01-preview/get'
            operationId: ltrBackupOperations_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LtrServerBackupOperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ltr_backup_operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/ltr_backup_operations/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    replicas:
      id: azure.postgresql.replicas
      name: replicas
      title: replicas
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1replicas?api-version=2024-03-01-preview/get'
            operationId: Replicas_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replicas/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    firewall_rules:
      id: azure.postgresql.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2024-03-01-preview/put'
            operationId: FirewallRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2024-03-01-preview/delete'
            operationId: FirewallRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1firewallRules~1{firewallRuleName}?api-version=2024-03-01-preview/get'
            operationId: FirewallRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1firewallRules?api-version=2024-03-01-preview/get'
            operationId: FirewallRules_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    location_based_capabilities:
      id: azure.postgresql.location_based_capabilities
      name: location_based_capabilities
      title: location_based_capabilities
      methods:
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1locations~1{locationName}~1capabilities?api-version=2024-03-01-preview/get'
            operationId: LocationBasedCapabilities_Execute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CapabilitiesListResult
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    server_capabilities:
      id: azure.postgresql.server_capabilities
      name: server_capabilities
      title: server_capabilities
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1capabilities?api-version=2024-03-01-preview/get'
            operationId: ServerCapabilities_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CapabilitiesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_capabilities/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    quota_usages:
      id: azure.postgresql.quota_usages
      name: quota_usages
      title: quota_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1locations~1{locationName}~1resourceType~1flexibleServers~1usages?api-version=2024-03-01-preview/get'
            operationId: QuotaUsages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaUsagesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quota_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_dns_zone_suffixes:
      id: azure.postgresql.private_dns_zone_suffixes
      name: private_dns_zone_suffixes
      title: private_dns_zone_suffixes
      methods:
        exec_get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1getPrivateDnsZoneSuffix?api-version=2024-03-01-preview/post'
            operationId: PrivateDnsZoneSuffix_ExecGet
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateDnsZoneSuffix
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    backups:
      id: azure.postgresql.backups
      name: backups
      title: backups
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1backups~1{backupName}?api-version=2024-03-01-preview/put'
            operationId: Backups_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1backups~1{backupName}?api-version=2024-03-01-preview/delete'
            operationId: Backups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1backups~1{backupName}?api-version=2024-03-01-preview/get'
            operationId: Backups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackup
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1backups?api-version=2024-03-01-preview/get'
            operationId: Backups_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerBackupListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    databases:
      id: azure.postgresql.databases
      name: databases
      title: databases
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1databases~1{databaseName}?api-version=2024-03-01-preview/put'
            operationId: Databases_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1databases~1{databaseName}?api-version=2024-03-01-preview/delete'
            operationId: Databases_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1databases~1{databaseName}?api-version=2024-03-01-preview/get'
            operationId: Databases_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1databases?api-version=2024-03-01-preview/get'
            operationId: Databases_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/databases/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/delete'
    configurations:
      id: azure.postgresql.configurations
      name: configurations
      title: configurations
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1configurations?api-version=2024-03-01-preview/get'
            operationId: Configurations_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1configurations~1{configurationName}?api-version=2024-03-01-preview/get'
            operationId: Configurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1configurations~1{configurationName}?api-version=2024-03-01-preview/patch'
            operationId: Configurations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1configurations~1{configurationName}?api-version=2024-03-01-preview/put'
            operationId: Configurations_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/configurations/methods/list_by_server'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/update'
        replace:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/put'
        delete: []
    private_link_resources:
      id: azure.postgresql.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1privateLinkResources?api-version=2024-03-01-preview/get'
            operationId: PrivateLinkResources_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1privateLinkResources~1{groupName}?api-version=2024-03-01-preview/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    administrators:
      id: azure.postgresql.administrators
      name: administrators
      title: administrators
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1administrators~1{objectId}?api-version=2024-03-01-preview/put'
            operationId: Administrators_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActiveDirectoryAdministrator
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1administrators~1{objectId}?api-version=2024-03-01-preview/delete'
            operationId: Administrators_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1administrators~1{objectId}?api-version=2024-03-01-preview/get'
            operationId: Administrators_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActiveDirectoryAdministrator
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1administrators?api-version=2024-03-01-preview/get'
            operationId: Administrators_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AdministratorListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/administrators/methods/get'
          - $ref: '#/components/x-stackQL-resources/administrators/methods/list_by_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/administrators/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/administrators/methods/delete'
    private_endpoint_connections:
      id: azure.postgresql.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-03-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-03-01-preview/put'
            operationId: PrivateEndpointConnection_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-03-01-preview/delete'
            operationId: PrivateEndpointConnection_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{serverName}~1privateEndpointConnections?api-version=2024-03-01-preview/get'
            operationId: PrivateEndpointConnections_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_server'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    migrations:
      id: azure.postgresql.migrations
      name: migrations
      title: migrations
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{targetDbServerName}~1migrations~1{migrationName}?api-version=2024-03-01-preview/put'
            operationId: Migrations_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{targetDbServerName}~1migrations~1{migrationName}?api-version=2024-03-01-preview/get'
            operationId: Migrations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{targetDbServerName}~1migrations~1{migrationName}?api-version=2024-03-01-preview/patch'
            operationId: Migrations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{targetDbServerName}~1migrations~1{migrationName}?api-version=2024-03-01-preview/delete'
            operationId: Migrations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_target_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1{targetDbServerName}~1migrations?api-version=2024-03-01-preview/get'
            operationId: Migrations_ListByTargetServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migrations/methods/get'
          - $ref: '#/components/x-stackQL-resources/migrations/methods/list_by_target_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/migrations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/migrations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/migrations/methods/delete'
    virtual_network_subnet_usages:
      id: azure.postgresql.virtual_network_subnet_usages
      name: virtual_network_subnet_usages
      title: virtual_network_subnet_usages
      methods:
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1locations~1{locationName}~1checkVirtualNetworkSubnetUsage?api-version=2024-03-01-preview/post'
            operationId: VirtualNetworkSubnetUsage_Execute
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkSubnetUsageResult
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vw_server_threat_protection_settings:
      id: azure.postgresql.vw_server_threat_protection_settings
      name: vw_server_threat_protection_settings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              subscriptionId,
              resourceGroupName,
              serverName,
              threatProtectionName
              FROM azure.postgresql.server_threat_protection_settings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                subscriptionId,
                resourceGroupName,
                serverName,
                threatProtectionName
                FROM azure.postgresql.server_threat_protection_settings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_servers:
      id: azure.postgresql.vw_servers
      name: vw_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              sku as sku,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.administratorLogin') as "administrator_login",
              JSON_EXTRACT(properties, '$.administratorLoginPassword') as "administrator_login_password",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.minorVersion') as "minor_version",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
              JSON_EXTRACT(properties, '$.storage') as "storage",
              JSON_EXTRACT(properties, '$.authConfig') as "auth_config",
              JSON_EXTRACT(properties, '$.dataEncryption') as "data_encryption",
              JSON_EXTRACT(properties, '$.backup') as "backup",
              JSON_EXTRACT(properties, '$.network') as "network",
              JSON_EXTRACT(properties, '$.highAvailability') as "high_availability",
              JSON_EXTRACT(properties, '$.maintenanceWindow') as "maintenance_window",
              JSON_EXTRACT(properties, '$.sourceServerResourceId') as "source_server_resource_id",
              JSON_EXTRACT(properties, '$.pointInTimeUTC') as "point_in_time_utc",
              JSON_EXTRACT(properties, '$.availabilityZone') as "availability_zone",
              JSON_EXTRACT(properties, '$.replicationRole') as "replication_role",
              JSON_EXTRACT(properties, '$.replicaCapacity') as "replica_capacity",
              JSON_EXTRACT(properties, '$.replica') as "replica",
              JSON_EXTRACT(properties, '$.createMode') as "create_mode",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              subscriptionId,
              resourceGroupName,
              serverName
              FROM azure.postgresql.servers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                sku as sku,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.administratorLogin') as "administrator_login",
                json_extract_path_text(properties, '$.administratorLoginPassword') as "administrator_login_password",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.minorVersion') as "minor_version",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
                json_extract_path_text(properties, '$.storage') as "storage",
                json_extract_path_text(properties, '$.authConfig') as "auth_config",
                json_extract_path_text(properties, '$.dataEncryption') as "data_encryption",
                json_extract_path_text(properties, '$.backup') as "backup",
                json_extract_path_text(properties, '$.network') as "network",
                json_extract_path_text(properties, '$.highAvailability') as "high_availability",
                json_extract_path_text(properties, '$.maintenanceWindow') as "maintenance_window",
                json_extract_path_text(properties, '$.sourceServerResourceId') as "source_server_resource_id",
                json_extract_path_text(properties, '$.pointInTimeUTC') as "point_in_time_utc",
                json_extract_path_text(properties, '$.availabilityZone') as "availability_zone",
                json_extract_path_text(properties, '$.replicationRole') as "replication_role",
                json_extract_path_text(properties, '$.replicaCapacity') as "replica_capacity",
                json_extract_path_text(properties, '$.replica') as "replica",
                json_extract_path_text(properties, '$.createMode') as "create_mode",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                subscriptionId,
                resourceGroupName,
                serverName
                FROM azure.postgresql.servers
                WHERE subscriptionId = 'replace-me';
    vw_virtual_endpoints:
      id: azure.postgresql.vw_virtual_endpoints
      name: vw_virtual_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.endpointType') as "endpoint_type",
              JSON_EXTRACT(properties, '$.members') as "members",
              JSON_EXTRACT(properties, '$.virtualEndpoints') as "virtual_endpoints",
              subscriptionId,
              resourceGroupName,
              serverName,
              virtualEndpointName
              FROM azure.postgresql.virtual_endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.endpointType') as "endpoint_type",
                json_extract_path_text(properties, '$.members') as "members",
                json_extract_path_text(properties, '$.virtualEndpoints') as "virtual_endpoints",
                subscriptionId,
                resourceGroupName,
                serverName,
                virtualEndpointName
                FROM azure.postgresql.virtual_endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_ltr_backup_operations:
      id: azure.postgresql.vw_ltr_backup_operations
      name: vw_ltr_backup_operations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.datasourceSizeInBytes') as "datasource_size_in_bytes",
              JSON_EXTRACT(properties, '$.dataTransferredInBytes') as "data_transferred_in_bytes",
              JSON_EXTRACT(properties, '$.backupName') as "backup_name",
              JSON_EXTRACT(properties, '$.backupMetadata') as "backup_metadata",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.percentComplete') as "percent_complete",
              JSON_EXTRACT(properties, '$.errorCode') as "error_code",
              JSON_EXTRACT(properties, '$.errorMessage') as "error_message",
              subscriptionId,
              resourceGroupName,
              serverName,
              backupName
              FROM azure.postgresql.ltr_backup_operations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.datasourceSizeInBytes') as "datasource_size_in_bytes",
                json_extract_path_text(properties, '$.dataTransferredInBytes') as "data_transferred_in_bytes",
                json_extract_path_text(properties, '$.backupName') as "backup_name",
                json_extract_path_text(properties, '$.backupMetadata') as "backup_metadata",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.percentComplete') as "percent_complete",
                json_extract_path_text(properties, '$.errorCode') as "error_code",
                json_extract_path_text(properties, '$.errorMessage') as "error_message",
                subscriptionId,
                resourceGroupName,
                serverName,
                backupName
                FROM azure.postgresql.ltr_backup_operations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_firewall_rules:
      id: azure.postgresql.vw_firewall_rules
      name: vw_firewall_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startIpAddress') as "start_ip_address",
              JSON_EXTRACT(properties, '$.endIpAddress') as "end_ip_address",
              subscriptionId,
              resourceGroupName,
              serverName,
              firewallRuleName
              FROM azure.postgresql.firewall_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startIpAddress') as "start_ip_address",
                json_extract_path_text(properties, '$.endIpAddress') as "end_ip_address",
                subscriptionId,
                resourceGroupName,
                serverName,
                firewallRuleName
                FROM azure.postgresql.firewall_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_backups:
      id: azure.postgresql.vw_backups
      name: vw_backups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.backupType') as "backup_type",
              JSON_EXTRACT(properties, '$.completedTime') as "completed_time",
              JSON_EXTRACT(properties, '$.source') as "source",
              subscriptionId,
              resourceGroupName,
              serverName,
              backupName
              FROM azure.postgresql.backups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.backupType') as "backup_type",
                json_extract_path_text(properties, '$.completedTime') as "completed_time",
                json_extract_path_text(properties, '$.source') as "source",
                subscriptionId,
                resourceGroupName,
                serverName,
                backupName
                FROM azure.postgresql.backups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_databases:
      id: azure.postgresql.vw_databases
      name: vw_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.charset') as "charset",
              JSON_EXTRACT(properties, '$.collation') as "collation",
              subscriptionId,
              resourceGroupName,
              serverName,
              databaseName
              FROM azure.postgresql.databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.charset') as "charset",
                json_extract_path_text(properties, '$.collation') as "collation",
                subscriptionId,
                resourceGroupName,
                serverName,
                databaseName
                FROM azure.postgresql.databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_configurations:
      id: azure.postgresql.vw_configurations
      name: vw_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.value') as "value",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.defaultValue') as "default_value",
              JSON_EXTRACT(properties, '$.dataType') as "data_type",
              JSON_EXTRACT(properties, '$.allowedValues') as "allowed_values",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.isDynamicConfig') as "is_dynamic_config",
              JSON_EXTRACT(properties, '$.isReadOnly') as "is_read_only",
              JSON_EXTRACT(properties, '$.isConfigPendingRestart') as "is_config_pending_restart",
              JSON_EXTRACT(properties, '$.unit') as "unit",
              JSON_EXTRACT(properties, '$.documentationLink') as "documentation_link",
              subscriptionId,
              resourceGroupName,
              serverName,
              configurationName
              FROM azure.postgresql.configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.value') as "value",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.defaultValue') as "default_value",
                json_extract_path_text(properties, '$.dataType') as "data_type",
                json_extract_path_text(properties, '$.allowedValues') as "allowed_values",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.isDynamicConfig') as "is_dynamic_config",
                json_extract_path_text(properties, '$.isReadOnly') as "is_read_only",
                json_extract_path_text(properties, '$.isConfigPendingRestart') as "is_config_pending_restart",
                json_extract_path_text(properties, '$.unit') as "unit",
                json_extract_path_text(properties, '$.documentationLink') as "documentation_link",
                subscriptionId,
                resourceGroupName,
                serverName,
                configurationName
                FROM azure.postgresql.configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_private_link_resources:
      id: azure.postgresql.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              serverName,
              groupName
              FROM azure.postgresql.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                serverName,
                groupName
                FROM azure.postgresql.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_administrators:
      id: azure.postgresql.vw_administrators
      name: vw_administrators
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.principalType') as "principal_type",
              JSON_EXTRACT(properties, '$.principalName') as "principal_name",
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.tenantId') as "tenant_id",
              subscriptionId,
              resourceGroupName,
              serverName,
              objectId
              FROM azure.postgresql.administrators
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.principalType') as "principal_type",
                json_extract_path_text(properties, '$.principalName') as "principal_name",
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.tenantId') as "tenant_id",
                subscriptionId,
                resourceGroupName,
                serverName,
                objectId
                FROM azure.postgresql.administrators
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.postgresql.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              serverName,
              privateEndpointConnectionName
              FROM azure.postgresql.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                serverName,
                privateEndpointConnectionName
                FROM azure.postgresql.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serverName = 'replace-me';
    vw_migrations:
      id: azure.postgresql.vw_migrations
      name: vw_migrations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.migrationId') as "migration_id",
              JSON_EXTRACT(properties, '$.currentStatus') as "current_status",
              JSON_EXTRACT(properties, '$.migrationInstanceResourceId') as "migration_instance_resource_id",
              JSON_EXTRACT(properties, '$.migrationMode') as "migration_mode",
              JSON_EXTRACT(properties, '$.migrationOption') as "migration_option",
              JSON_EXTRACT(properties, '$.sourceType') as "source_type",
              JSON_EXTRACT(properties, '$.sslMode') as "ssl_mode",
              JSON_EXTRACT(properties, '$.sourceDbServerMetadata') as "source_db_server_metadata",
              JSON_EXTRACT(properties, '$.targetDbServerMetadata') as "target_db_server_metadata",
              JSON_EXTRACT(properties, '$.sourceDbServerResourceId') as "source_db_server_resource_id",
              JSON_EXTRACT(properties, '$.sourceDbServerFullyQualifiedDomainName') as "source_db_server_fully_qualified_domain_name",
              JSON_EXTRACT(properties, '$.targetDbServerResourceId') as "target_db_server_resource_id",
              JSON_EXTRACT(properties, '$.targetDbServerFullyQualifiedDomainName') as "target_db_server_fully_qualified_domain_name",
              JSON_EXTRACT(properties, '$.secretParameters') as "secret_parameters",
              JSON_EXTRACT(properties, '$.dbsToMigrate') as "dbs_to_migrate",
              JSON_EXTRACT(properties, '$.setupLogicalReplicationOnSourceDbIfNeeded') as "setup_logical_replication_on_source_db_if_needed",
              JSON_EXTRACT(properties, '$.overwriteDbsInTarget') as "overwrite_dbs_in_target",
              JSON_EXTRACT(properties, '$.migrationWindowStartTimeInUtc') as "migration_window_start_time_in_utc",
              JSON_EXTRACT(properties, '$.migrationWindowEndTimeInUtc') as "migration_window_end_time_in_utc",
              JSON_EXTRACT(properties, '$.migrateRoles') as "migrate_roles",
              JSON_EXTRACT(properties, '$.startDataMigration') as "start_data_migration",
              JSON_EXTRACT(properties, '$.triggerCutover') as "trigger_cutover",
              JSON_EXTRACT(properties, '$.dbsToTriggerCutoverOn') as "dbs_to_trigger_cutover_on",
              JSON_EXTRACT(properties, '$.cancel') as "cancel",
              JSON_EXTRACT(properties, '$.dbsToCancelMigrationOn') as "dbs_to_cancel_migration_on",
              subscriptionId,
              resourceGroupName,
              targetDbServerName,
              migrationName
              FROM azure.postgresql.migrations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND targetDbServerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.migrationId') as "migration_id",
                json_extract_path_text(properties, '$.currentStatus') as "current_status",
                json_extract_path_text(properties, '$.migrationInstanceResourceId') as "migration_instance_resource_id",
                json_extract_path_text(properties, '$.migrationMode') as "migration_mode",
                json_extract_path_text(properties, '$.migrationOption') as "migration_option",
                json_extract_path_text(properties, '$.sourceType') as "source_type",
                json_extract_path_text(properties, '$.sslMode') as "ssl_mode",
                json_extract_path_text(properties, '$.sourceDbServerMetadata') as "source_db_server_metadata",
                json_extract_path_text(properties, '$.targetDbServerMetadata') as "target_db_server_metadata",
                json_extract_path_text(properties, '$.sourceDbServerResourceId') as "source_db_server_resource_id",
                json_extract_path_text(properties, '$.sourceDbServerFullyQualifiedDomainName') as "source_db_server_fully_qualified_domain_name",
                json_extract_path_text(properties, '$.targetDbServerResourceId') as "target_db_server_resource_id",
                json_extract_path_text(properties, '$.targetDbServerFullyQualifiedDomainName') as "target_db_server_fully_qualified_domain_name",
                json_extract_path_text(properties, '$.secretParameters') as "secret_parameters",
                json_extract_path_text(properties, '$.dbsToMigrate') as "dbs_to_migrate",
                json_extract_path_text(properties, '$.setupLogicalReplicationOnSourceDbIfNeeded') as "setup_logical_replication_on_source_db_if_needed",
                json_extract_path_text(properties, '$.overwriteDbsInTarget') as "overwrite_dbs_in_target",
                json_extract_path_text(properties, '$.migrationWindowStartTimeInUtc') as "migration_window_start_time_in_utc",
                json_extract_path_text(properties, '$.migrationWindowEndTimeInUtc') as "migration_window_end_time_in_utc",
                json_extract_path_text(properties, '$.migrateRoles') as "migrate_roles",
                json_extract_path_text(properties, '$.startDataMigration') as "start_data_migration",
                json_extract_path_text(properties, '$.triggerCutover') as "trigger_cutover",
                json_extract_path_text(properties, '$.dbsToTriggerCutoverOn') as "dbs_to_trigger_cutover_on",
                json_extract_path_text(properties, '$.cancel') as "cancel",
                json_extract_path_text(properties, '$.dbsToCancelMigrationOn') as "dbs_to_cancel_migration_on",
                subscriptionId,
                resourceGroupName,
                targetDbServerName,
                migrationName
                FROM azure.postgresql.migrations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND targetDbServerName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/logFiles?api-version=2024-03-01-preview:
    get:
      tags:
        - LogFiles
      operationId: LogFiles_ListByServer
      description: List all the server log files in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogFileListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.DBforPostgreSQL/operations?api-version=2024-03-01-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available REST API operations.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings?api-version=2024-03-01-preview:
    get:
      tags:
        - AdvancedThreatProtectionSettings
      description: Get a list of server's Threat Protection state.
      operationId: ServerThreatProtectionSettings_ListByServer
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: Successfully retrieved the server threat detection policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerThreatProtectionListResult'
        default:
          description: Error response describing why the operation of advanced threat protection on the flexible server failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings/{threatProtectionName}?api-version=2024-03-01-preview:
    get:
      tags:
        - AdvancedThreatProtectionSettings
      description: Get a server's Advanced Threat Protection settings.
      operationId: ServerThreatProtectionSettings_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ThreatProtectionNameParameter'
      responses:
        '200':
          description: Successfully retrieved the server advanced threat protection settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerThreatProtectionSettingsModel'
        default:
          description: Error response describing why the operation of threat protection on the flexible server failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - AdvancedThreatProtectionSettings
      description: Creates or updates a server's Advanced Threat Protection settings.
      operationId: ServerThreatProtectionSettings_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ThreatProtectionNameParameter'
      requestBody:
        description: The Advanced Threat Protection state for the flexible server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerThreatProtectionSettingsModel'
      responses:
        '200':
          description: Successfully set or update the server Threat Protection settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerThreatProtectionSettingsModel'
        '201':
          description: Successfully created the server Threat Protection settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerThreatProtectionSettingsModel'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation of setting Threat Protection failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}?api-version=2024-03-01-preview:
    put:
      tags:
        - Servers
      operationId: Servers_Create
      description: Creates a new server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Servers
      operationId: Servers_Update
      description: Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerForUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Servers
      operationId: Servers_Delete
      description: Deletes a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Servers
      operationId: Servers_Get
      description: Gets information about a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers?api-version=2024-03-01-preview:
    get:
      tags:
        - Servers
      operationId: Servers_ListByResourceGroup
      description: List all the servers in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers?api-version=2024-03-01-preview:
    get:
      tags:
        - Servers
      operationId: Servers_List
      description: List all the servers in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints/{virtualEndpointName}?api-version=2024-03-01-preview:
    put:
      tags:
        - VirtualEndpoints
      operationId: VirtualEndpoints_Create
      description: Creates a new virtual endpoint for PostgreSQL flexible server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/VirtualEndpointNameParameter'
      requestBody:
        description: The required parameters for creating or updating virtual endpoints.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualEndpointResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualEndpointResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualEndpointResource'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - VirtualEndpoints
      operationId: VirtualEndpoints_Update
      description: Updates an existing virtual endpoint. The request body can contain one to many of the properties present in the normal virtual endpoint definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/VirtualEndpointNameParameter'
      requestBody:
        description: The required parameters for updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualEndpointResourceForPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualEndpointResource'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - VirtualEndpoints
      operationId: VirtualEndpoints_Delete
      description: Deletes a virtual endpoint.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/VirtualEndpointNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - VirtualEndpoints
      operationId: VirtualEndpoints_Get
      description: Gets information about a virtual endpoint.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/VirtualEndpointNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualEndpointResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints?api-version=2024-03-01-preview:
    get:
      tags:
        - VirtualEndpoints
      operationId: VirtualEndpoints_ListByServer
      description: List all the servers in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualEndpointsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrPreBackup?api-version=2024-03-01-preview:
    post:
      description: PreBackup operation performs all the checks that are needed for the subsequent long term retention backup operation to succeed.
      tags:
        - LongTermRetentionBackup
      operationId: FlexibleServer_TriggerLtrPreBackup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: Request body for operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtrPreBackupRequest'
      responses:
        '200':
          description: Ok. API finished synchronously with Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtrPreBackupResponse'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.
        default:
          description: Error Scenario 4xx/5xx
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          headers:
            x-ms-error-code:
              schema:
                type: string
              description: ErrorCode string in the event of a failure.
            x-ms-request-id:
              schema:
                type: string
              description: A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/startLtrBackup?api-version=2024-03-01-preview:
    post:
      description: Start the Long Term Retention Backup operation
      tags:
        - LongTermRetentionBackup
      operationId: FlexibleServer_StartLtrBackup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: Request body for operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtrBackupRequest'
      responses:
        '200':
          description: Ok. API finished synchronously with Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtrBackupResponse'
          headers:
            x-ms-request-id:
              schema:
                type: string
              description: A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.
        '202':
          description: Accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The number of seconds to wait before checking the status of the asynchronous operation.
            x-ms-request-id:
              schema:
                type: string
              description: A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.
            Location:
              schema:
                type: string
              description: URL to retrieve the final result after operation completes.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL for checking the ongoing status of the operation.
        default:
          description: Error Scenario 4xx/5xx
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          headers:
            x-ms-error-code:
              schema:
                type: string
              description: ErrorCode string in the event of a failure.
            x-ms-request-id:
              schema:
                type: string
              description: A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations/{backupName}?api-version=2024-03-01-preview:
    get:
      tags:
        - LongTermRetentionBackup
      operationId: ltrBackupOperations_Get
      description: Gets the result of the give long term retention backup operation for the flexible server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtrServerBackupOperation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations?api-version=2024-03-01-preview:
    get:
      tags:
        - LongTermRetentionBackup
      operationId: ltrBackupOperations_ListByServer
      description: Gets the result of the give long term retention backup operations for the flexible server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LtrServerBackupOperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/replicas?api-version=2024-03-01-preview:
    get:
      tags:
        - Replicas
      operationId: Replicas_ListByServer
      description: List all the replicas for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}?api-version=2024-03-01-preview:
    put:
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Creates a new firewall rule or updates an existing firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes a PostgreSQL server firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      description: List all the firewall rules in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules?api-version=2024-03-01-preview:
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByServer
      description: List all the firewall rules in a given PostgreSQL server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/capabilities?api-version=2024-03-01-preview:
    get:
      tags:
        - LocationBasedCapabilities
      operationId: LocationBasedCapabilities_Execute
      description: Get capabilities at specified location in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/capabilities?api-version=2024-03-01-preview:
    get:
      tags:
        - FlexibleServerCapabilities
      operationId: ServerCapabilities_List
      description: Get capabilities for a flexible server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/resourceType/flexibleServers/usages?api-version=2024-03-01-preview:
    get:
      tags:
        - QuotaUsagesForFlexibleServers
      operationId: QuotaUsages_List
      description: Get quota usages at specified location in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaUsagesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.DBforPostgreSQL/getPrivateDnsZoneSuffix?api-version=2024-03-01-preview:
    post:
      tags:
        - GetPrivateDnsZoneSuffix
      operationId: PrivateDnsZoneSuffix_ExecGet
      description: Get private DNS zone suffix in the cloud
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDnsZoneSuffix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: GetPrivateDnsZoneSuffix_Execute
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups/{backupName}?api-version=2024-03-01-preview:
    put:
      tags:
        - Backups
      operationId: Backups_Create
      description: Create a specific backup for PostgreSQL flexible server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackup'
        '201':
          description: Successfully created backup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackup'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Backups
      operationId: Backups_Delete
      description: Deletes a specific backup.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Backups
      operationId: Backups_Get
      description: Get specific backup for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/BackupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups?api-version=2024-03-01-preview:
    get:
      tags:
        - Backups
      operationId: Backups_ListByServer
      description: List all the backups for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBackupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}?api-version=2024-03-01-preview:
    put:
      tags:
        - Databases
      operationId: Databases_Create
      description: Creates a new database or updates an existing database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      requestBody:
        description: The required parameters for creating or updating a database.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Databases
      operationId: Databases_Delete
      description: Deletes a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Databases
      operationId: Databases_Get
      description: Gets information about a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases?api-version=2024-03-01-preview:
    get:
      tags:
        - Databases
      operationId: Databases_ListByServer
      description: List all the databases in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations?api-version=2024-03-01-preview:
    get:
      tags:
        - Configurations
      operationId: Configurations_ListByServer
      description: List all the configurations in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}?api-version=2024-03-01-preview:
    get:
      tags:
        - Configurations
      operationId: Configurations_Get
      description: Gets information about a configuration of server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Configurations
      operationId: Configurations_Update
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationForUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    put:
      tags:
        - Configurations
      operationId: Configurations_Put
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability?api-version=2024-03-01-preview:
    post:
      tags:
        - CheckNameAvailability
      operationId: Operations_CheckNameAvailabilityExecute
      description: Check the availability of name for resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckNameAvailability_Execute
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkNameAvailability?api-version=2024-03-01-preview:
    post:
      tags:
        - CheckNameAvailability
      operationId: Operations_CheckNameAvailabilityWithLocationExecute
      description: Check the availability of name for resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckNameAvailabilityWithLocation_Execute
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources?api-version=2024-03-01-preview:
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources for PostgreSQL server.
      operationId: PrivateLinkResources_ListByServer
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources/{groupName}?api-version=2024-03-01-preview:
    get:
      tags:
        - PrivateLinkResources
      description: Gets a private link resource for PostgreSQL server.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: groupName
          in: path
          description: The name of the private link resource.
          required: true
          schema:
            pattern: ^.*$
            type: string
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators/{objectId}?api-version=2024-03-01-preview:
    put:
      tags:
        - Administrators
      operationId: Administrators_Create
      description: Creates a new server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ObjectIdParameter'
      requestBody:
        description: The required parameters for adding an active directory administrator for a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryAdministratorAdd'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryAdministrator'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryAdministrator'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Administrators
      operationId: Administrators_Delete
      description: Deletes an Active Directory Administrator associated with the server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ObjectIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - Administrators
      operationId: Administrators_Get
      description: Gets information about a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ObjectIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryAdministrator'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators?api-version=2024-03-01-preview:
    get:
      tags:
        - Administrators
      operationId: Administrators_ListByServer
      description: List all the AAD administrators for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-03-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets a private endpoint connection.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateEndpointConnections
      description: Approve or reject a private endpoint connection with a given name.
      operationId: PrivateEndpointConnection_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: The required parameters for updating private endpoint connection.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully approved or rejected private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Successfully approved or rejected private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes a private endpoint connection with a given name.
      operationId: PrivateEndpointConnection_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections?api-version=2024-03-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets all private endpoint connections on a server.
      operationId: PrivateEndpointConnections_ListByServer
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{targetDbServerName}/migrations/{migrationName}?api-version=2024-03-01-preview:
    put:
      tags:
        - Migrations
      operationId: Migrations_Create
      description: Creates a new migration.
      parameters:
        - $ref: '#/components/parameters/TargetDbServerSubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetDbServerResourceGroupNameParameter'
        - $ref: '#/components/parameters/TargetDbServerNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
      requestBody:
        description: The required parameters for creating a migration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationResource'
      responses:
        '200':
          description: Successfully set or update the Migration for a server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Migrations
      operationId: Migrations_Get
      description: Gets details of a migration.
      parameters:
        - $ref: '#/components/parameters/TargetDbServerSubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetDbServerResourceGroupNameParameter'
        - $ref: '#/components/parameters/TargetDbServerNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Migrations
      operationId: Migrations_Update
      description: Updates an existing migration. The request body can contain one to many of the mutable properties present in the migration definition. Certain property updates initiate migration state transitions.
      parameters:
        - $ref: '#/components/parameters/TargetDbServerSubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetDbServerResourceGroupNameParameter'
        - $ref: '#/components/parameters/TargetDbServerNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
      requestBody:
        description: The required parameters for updating a migration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationResourceForPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Migrations
      operationId: Migrations_Delete
      description: Deletes a migration.
      parameters:
        - $ref: '#/components/parameters/TargetDbServerSubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetDbServerResourceGroupNameParameter'
        - $ref: '#/components/parameters/TargetDbServerNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{targetDbServerName}/migrations?api-version=2024-03-01-preview:
    get:
      tags:
        - Migrations
      operationId: Migrations_ListByTargetServer
      description: List all the migrations on a given target server.
      parameters:
        - $ref: '#/components/parameters/TargetDbServerSubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetDbServerResourceGroupNameParameter'
        - $ref: '#/components/parameters/TargetDbServerNameParameter'
        - $ref: '#/components/parameters/MigrationListFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{targetDbServerName}/checkMigrationNameAvailability?api-version=2024-03-01-preview:
    post:
      summary: Check migration name validity and availability
      description: This method checks whether a proposed migration name is valid and available.
      tags:
        - Custom operation
        - POST
      operationId: Operations_CheckMigrationNameAvailability
      parameters:
        - $ref: '#/components/parameters/TargetDbServerSubscriptionIdParameter'
        - $ref: '#/components/parameters/TargetDbServerResourceGroupNameParameter'
        - $ref: '#/components/parameters/TargetDbServerNameParameter'
      requestBody:
        description: The required parameters for checking if a migration name is available.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationNameAvailabilityResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationNameAvailabilityResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: CheckMigrationNameAvailability
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage?api-version=2024-03-01-preview:
    post:
      tags:
        - VirtualNetworkSubnetUsage
      operationId: VirtualNetworkSubnetUsage_Execute
      description: Get virtual network subnet usage for a given vNet resource id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkSubnetUsageParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkSubnetUsageResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/restart?api-version=2024-03-01-preview:
    post:
      tags:
        - ServerRestart
      operationId: Servers_Restart
      description: Restarts a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The parameters for restarting a server.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/start?api-version=2024-03-01-preview:
    post:
      tags:
        - ServerStart
      operationId: Servers_Start
      description: Starts a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/stop?api-version=2024-03-01-preview:
    post:
      tags:
        - ServerStop
      operationId: Servers_Stop
      description: Stops a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
