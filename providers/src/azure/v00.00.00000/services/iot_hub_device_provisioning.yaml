openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure IoT Hub Device Provisioning Service
  description: The IoT Hub Device Provisioning Service is a helper service for IoT Hub that enables automatic device provisioning to a specified IoT hub without requiring human intervention. You can use the Device Provisioning Service to provision millions of devices in a secure and scalable manner.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription identifier.
      required: true
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: The version of the API.
      required: true
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group that contains the provisioning service.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceName:
      name: resourceName
      in: path
      description: The name of the provisioning service.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    groupId:
      name: groupId
      in: path
      description: The name of the private link resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    privateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    AsyncOperationResult:
      type: object
      description: Result of a long running operation.
      properties:
        status:
          description: current status of a long running operation.
          type: string
        error:
          description: Error message containing code, description and details
          $ref: '#/components/schemas/ErrorMessage'
    ErrorMessage:
      description: Error response containing message and code.
      type: object
      properties:
        code:
          description: standard error code
          type: string
        message:
          description: standard error description
          type: string
        details:
          description: detailed summary of error
          type: string
    CertificateListDescription:
      description: The JSON-serialized array of Certificate objects.
      type: object
      properties:
        value:
          description: The array of Certificate objects.
          type: array
          items:
            $ref: '#/components/schemas/CertificateResponse'
    CertificateBodyDescription:
      description: The JSON-serialized X509 Certificate.
      type: object
      properties:
        certificate:
          description: Base-64 representation of the X509 leaf certificate .cer file or just .pem file content.
          type: string
        isVerified:
          description: True indicates that the certificate will be created in verified state and proof of possession will not be required.
          type: boolean
    CertificateResponse:
      description: The X509 Certificate.
      x-ms-azure-resource: true
      properties:
        properties:
          description: properties of a certificate
          $ref: '#/components/schemas/CertificateProperties'
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          description: The name of the certificate.
          type: string
          readOnly: true
        etag:
          description: The entity tag.
          type: string
          readOnly: true
        type:
          readOnly: true
          type: string
          description: The resource type.
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    CertificateProperties:
      description: The description of an X509 CA Certificate.
      type: object
      properties:
        subject:
          description: The certificate's subject name.
          type: string
          readOnly: true
        expiry:
          description: The certificate's expiration date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        thumbprint:
          description: The certificate's thumbprint.
          type: string
          readOnly: true
        isVerified:
          description: Determines whether certificate has been verified.
          type: boolean
        certificate:
          description: base-64 representation of X509 certificate .cer file or just .pem file content.
          type: string
          format: byte
        created:
          description: The certificate's creation date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        updated:
          description: The certificate's last update date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
    IotDpsSkuInfo:
      type: object
      description: List of possible provisioning service SKUs.
      properties:
        name:
          description: Sku name.
          enum:
            - S1
          type: string
          x-ms-enum:
            name: IotDpsSku
            modelAsString: true
        tier:
          type: string
          readOnly: true
          description: Pricing tier name of the provisioning service.
        capacity:
          format: int64
          type: integer
          description: The number of units to provision
    ProvisioningServiceDescription:
      description: The description of the provisioning service.
      required:
        - sku
        - properties
      properties:
        etag:
          description: The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
          type: string
        properties:
          description: Service specific properties for a provisioning service
          $ref: '#/components/schemas/IotDpsPropertiesDescription'
        sku:
          description: Sku info for a provisioning Service.
          $ref: '#/components/schemas/IotDpsSkuInfo'
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
        identity:
          description: The managed identities for a provisioning service.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    IotDpsPropertiesDescription:
      description: the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
      type: object
      properties:
        state:
          description: Current state of the provisioning service.
          enum:
            - Activating
            - Active
            - Deleting
            - Deleted
            - ActivationFailed
            - DeletionFailed
            - Transitioning
            - Suspending
            - Suspended
            - Resuming
            - FailingOver
            - FailoverFailed
          type: string
          x-ms-enum:
            name: state
            modelAsString: true
        publicNetworkAccess:
          type: string
          description: Whether requests from Public Network are allowed
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            modelAsString: true
            name: PublicNetworkAccess
        ipFilterRules:
          description: The IP filter rules.
          type: array
          items:
            $ref: '#/components/schemas/IpFilterRule'
        privateEndpointConnections:
          description: Private endpoint connections created on this IotHub
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        provisioningState:
          description: The ARM provisioning state of the provisioning service.
          type: string
        iotHubs:
          type: array
          description: List of IoT hubs associated with this provisioning service.
          items:
            $ref: '#/components/schemas/IotHubDefinitionDescription'
        allocationPolicy:
          enum:
            - Hashed
            - GeoLatency
            - Static
          type: string
          description: Allocation policy to be used by this provisioning service.
          x-ms-enum:
            name: AllocationPolicy
            modelAsString: true
        serviceOperationsHostName:
          description: Service endpoint for provisioning service.
          type: string
          readOnly: true
        deviceProvisioningHostName:
          type: string
          description: Device endpoint for this provisioning service.
          readOnly: true
        idScope:
          type: string
          description: Unique identifier of this provisioning service.
          readOnly: true
        authorizationPolicies:
          description: List of authorization keys for a provisioning service.
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule_AccessRightsDescription_'
        enableDataResidency:
          type: boolean
          description: |-
            Optional.
            Indicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery.
        portalOperationsHostName:
          type: string
          description: Portal endpoint to enable CORS for this provisioning service.
    IotHubDefinitionDescription:
      type: object
      description: Description of the IoT hub.
      properties:
        applyAllocationPolicy:
          description: flag for applying allocationPolicy or not for a given iot hub.
          type: boolean
        allocationWeight:
          description: weight to apply for a given iot h.
          format: int32
          type: integer
        name:
          type: string
          readOnly: true
          description: Host name of the IoT hub.
        connectionString:
          type: string
          description: Connection string of the IoT hub.
        location:
          type: string
          description: ARM region of the IoT hub.
      required:
        - connectionString
        - location
    IpFilterRule:
      description: The IP filter rules for a provisioning Service.
      type: object
      properties:
        filterName:
          description: The name of the IP filter rule.
          type: string
        action:
          description: The desired action for requests captured by this rule.
          enum:
            - Accept
            - Reject
          type: string
          x-ms-enum:
            name: IpFilterActionType
            modelAsString: false
        ipMask:
          description: A string that contains the IP address range in CIDR notation for the rule.
          type: string
        target:
          description: Target for requests captured by this rule.
          enum:
            - all
            - serviceApi
            - deviceApi
          type: string
          x-ms-enum:
            name: IpFilterTargetType
            modelAsString: false
      required:
        - filterName
        - action
        - ipMask
    PrivateLinkResources:
      description: The available private link resources for a provisioning service
      type: object
      properties:
        value:
          description: The list of available private link resources for a provisioning service
          type: array
          items:
            $ref: '#/components/schemas/GroupIdInformation'
    GroupIdInformation:
      description: The group information for creating a private endpoint on a provisioning service
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          description: The properties for a group information object
          $ref: '#/components/schemas/GroupIdInformationProperties'
      type: object
    GroupIdInformationProperties:
      description: The properties for a group information object
      type: object
      properties:
        groupId:
          type: string
          description: The group id
        requiredMembers:
          description: The required members for a specific group id
          type: array
          items:
            type: string
        requiredZoneNames:
          description: The required DNS zones for a specific group id
          type: array
          items:
            type: string
    PrivateEndpointConnectionsList:
      description: The list of private endpoint connections for a provisioning service
      type: array
      items:
        $ref: '#/components/schemas/PrivateEndpointConnection'
    PrivateEndpointConnection:
      description: The private endpoint connection of a provisioning service
      x-ms-azure-resource: true
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          description: The properties of a private endpoint connection
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    PrivateEndpointConnectionProperties:
      description: The properties of a private endpoint connection
      type: object
      properties:
        privateEndpoint:
          description: The private endpoint property of a private endpoint connection
          $ref: '#/components/schemas/PrivateEndpoint'
        privateLinkServiceConnectionState:
          description: The current state of a private endpoint connection
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
      required:
        - privateLinkServiceConnectionState
    PrivateEndpoint:
      description: The private endpoint property of a private endpoint connection
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
    PrivateLinkServiceConnectionState:
      description: The current state of a private endpoint connection
      type: object
      properties:
        status:
          description: The status of a private endpoint connection
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateLinkServiceConnectionStatus
            modelAsString: true
        description:
          type: string
          description: The description for the current state of a private endpoint connection
        actionsRequired:
          type: string
          description: Actions required for a private endpoint connection
      required:
        - status
        - description
    SharedAccessSignatureAuthorizationRule_AccessRightsDescription_:
      type: object
      description: Description of the shared access key.
      properties:
        keyName:
          type: string
          description: Name of the key.
        primaryKey:
          type: string
          description: Primary SAS key value.
        secondaryKey:
          type: string
          description: Secondary SAS key value.
        rights:
          description: Rights that this key has.
          enum:
            - ServiceConfig
            - EnrollmentRead
            - EnrollmentWrite
            - DeviceConnect
            - RegistrationStatusRead
            - RegistrationStatusWrite
          type: string
          x-ms-enum:
            name: AccessRightsDescription
            modelAsString: true
      required:
        - keyName
        - rights
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    ErrorDetails:
      description: Error details.
      type: object
      properties:
        code:
          description: The error code.
          format: int32
          type: integer
          readOnly: true
        httpStatusCode:
          description: The HTTP status code.
          type: string
          readOnly: true
        message:
          description: The error message.
          type: string
          readOnly: true
        details:
          description: The error details.
          type: string
          readOnly: true
    SharedAccessSignatureAuthorizationRuleListResult:
      type: object
      description: List of shared access keys.
      properties:
        value:
          description: The list of shared access policies.
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule_AccessRightsDescription_'
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    IotDpsSkuDefinitionListResult:
      type: object
      description: List of available SKUs.
      properties:
        value:
          description: The list of SKUs
          type: array
          items:
            $ref: '#/components/schemas/IotDpsSkuDefinition'
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    IotDpsSkuDefinition:
      type: object
      description: Available SKUs of tier and units.
      properties:
        name:
          description: Sku name.
          enum:
            - S1
          type: string
          x-ms-enum:
            name: IotDpsSku
            modelAsString: true
    OperationInputs:
      description: Input values for operation results call.
      type: object
      properties:
        name:
          description: The name of the Provisioning Service to check.
          type: string
      required:
        - name
    NameAvailabilityInfo:
      type: object
      description: Description of name availability.
      properties:
        nameAvailable:
          description: specifies if a name is available or not
          type: boolean
        reason:
          description: specifies the reason a name is unavailable
          enum:
            - Invalid
            - AlreadyExists
          type: string
          x-ms-enum:
            name: NameUnavailabilityReason
            modelAsString: true
        message:
          description: message containing a detailed reason name is unavailable
          type: string
    TagsResource:
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
      description: A container holding only the Tags for a resource, allowing the user to update the tags on a Provisioning Service instance.
      type: object
    ProvisioningServiceDescriptionListResult:
      type: object
      description: List of provisioning service descriptions.
      properties:
        value:
          description: List of provisioning service descriptions.
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningServiceDescription'
        nextLink:
          description: the next link
          type: string
          readOnly: true
    VerificationCodeResponse:
      description: Description of the response of the verification code.
      x-ms-azure-resource: true
      properties:
        name:
          type: string
          description: Name of certificate.
          readOnly: true
        etag:
          readOnly: true
          type: string
          description: Request etag.
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          type: object
          properties:
            verificationCode:
              type: string
              description: Verification code.
            subject:
              type: string
              description: Certificate subject.
            expiry:
              type: string
              description: Code expiry.
            thumbprint:
              type: string
              description: Certificate thumbprint.
            isVerified:
              type: boolean
              description: Indicate if the certificate is verified by owner of private key.
            certificate:
              description: base-64 representation of X509 certificate .cer file or just .pem file content.
              type: string
              format: byte
            created:
              type: string
              description: Certificate created time.
            updated:
              type: string
              description: Certificate updated time.
      type: object
    VerificationCodeRequest:
      type: object
      description: The JSON-serialized leaf certificate
      properties:
        certificate:
          description: base-64 representation of X509 certificate .cer file or just .pem file content.
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.iot_hub_device_provisioning.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Devices~1operations~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    dps_certificate:
      id: azure.iot_hub_device_provisioning.dps_certificate
      name: dps_certificate
      title: dps_certificate
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1certificates~1{certificateName}~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1certificates~1{certificateName}~1?api-version=2023-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1certificates~1{certificateName}~1?api-version=2023-03-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1certificates~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        generate_verification_code:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1certificates~1{certificateName}~1generateVerificationCode~1?api-version=2023-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_certificate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1certificates~1{certificateName}~1verify~1?api-version=2023-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dps_certificate/methods/get'
          - $ref: '#/components/x-stackQL-resources/dps_certificate/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dps_certificate/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dps_certificate/methods/delete'
    iot_dps_resource:
      id: azure.iot_hub_device_provisioning.iot_dps_resource
      name: iot_dps_resource
      title: iot_dps_resource
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1?api-version=2023-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1?api-version=2023-03-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1?api-version=2023-03-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Devices~1provisioningServices~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        check_provisioning_service_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Devices~1checkProvisioningServiceNameAvailability~1?api-version=2023-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource/methods/get'
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource/methods/delete'
    iot_dps_resource_operation_result:
      id: azure.iot_hub_device_provisioning.iot_dps_resource_operation_result
      name: iot_dps_resource_operation_result
      title: iot_dps_resource_operation_result
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1operationresults~1{operationId}~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_operation_result/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    iot_dps_resource_valid_skus:
      id: azure.iot_hub_device_provisioning.iot_dps_resource_valid_skus
      name: iot_dps_resource_valid_skus
      title: iot_dps_resource_valid_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1skus~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_valid_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iot_dps_resource_keys:
      id: azure.iot_hub_device_provisioning.iot_dps_resource_keys
      name: iot_dps_resource_keys
      title: iot_dps_resource_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1listkeys~1?api-version=2023-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iot_dps_resource_keys_for_key_name:
      id: azure.iot_hub_device_provisioning.iot_dps_resource_keys_for_key_name
      name: iot_dps_resource_keys_for_key_name
      title: iot_dps_resource_keys_for_key_name
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{provisioningServiceName}~1keys~1{keyName}~1listkeys~1?api-version=2023-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_keys_for_key_name/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iot_dps_resource_private_link_resources:
      id: azure.iot_hub_device_provisioning.iot_dps_resource_private_link_resources
      name: iot_dps_resource_private_link_resources
      title: iot_dps_resource_private_link_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{resourceName}~1privateLinkResources~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{resourceName}~1privateLinkResources~1{groupId}~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_private_link_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iot_dps_resource_private_endpoint_connections:
      id: azure.iot_hub_device_provisioning.iot_dps_resource_private_endpoint_connections
      name: iot_dps_resource_private_endpoint_connections
      title: iot_dps_resource_private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{resourceName}~1privateEndpointConnections~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_private_endpoint_connections/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iot_dps_resource_private_endpoint_connection:
      id: azure.iot_hub_device_provisioning.iot_dps_resource_private_endpoint_connection
      name: iot_dps_resource_private_endpoint_connection
      title: iot_dps_resource_private_endpoint_connection
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1provisioningServices~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-03-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_private_endpoint_connection/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_private_endpoint_connection/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/iot_dps_resource_private_endpoint_connection/methods/delete'
    vw_dps_certificate:
      id: azure.iot_hub_device_provisioning.vw_dps_certificate
      name: vw_dps_certificate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.subject') as subject,
              JSON_EXTRACT(properties, '$.expiry') as expiry,
              JSON_EXTRACT(properties, '$.thumbprint') as thumbprint,
              JSON_EXTRACT(properties, '$.isVerified') as is_verified,
              JSON_EXTRACT(properties, '$.certificate') as certificate,
              JSON_EXTRACT(properties, '$.created') as created,
              JSON_EXTRACT(properties, '$.updated') as updated,
              subscriptionId,
              resourceGroupName,
              provisioningServiceName,
              certificateName
              FROM azure.iot_hub_device_provisioning.dps_certificate
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND provisioningServiceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.subject') as subject,
                JSON_EXTRACT(properties, '$.expiry') as expiry,
                JSON_EXTRACT(properties, '$.thumbprint') as thumbprint,
                JSON_EXTRACT(properties, '$.isVerified') as is_verified,
                JSON_EXTRACT(properties, '$.certificate') as certificate,
                JSON_EXTRACT(properties, '$.created') as created,
                JSON_EXTRACT(properties, '$.updated') as updated,
                subscriptionId,
                resourceGroupName,
                provisioningServiceName,
                certificateName
                FROM azure.iot_hub_device_provisioning.dps_certificate
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND provisioningServiceName = 'replace-me';
    vw_iot_dps_resource:
      id: azure.iot_hub_device_provisioning.vw_iot_dps_resource
      name: vw_iot_dps_resource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              sku as sku,
              systemData as system_data,
              identity as identity,
              type as type,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
              JSON_EXTRACT(properties, '$.ipFilterRules') as ip_filter_rules,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.iotHubs') as iot_hubs,
              JSON_EXTRACT(properties, '$.allocationPolicy') as allocation_policy,
              JSON_EXTRACT(properties, '$.serviceOperationsHostName') as service_operations_host_name,
              JSON_EXTRACT(properties, '$.deviceProvisioningHostName') as device_provisioning_host_name,
              JSON_EXTRACT(properties, '$.idScope') as id_scope,
              JSON_EXTRACT(properties, '$.authorizationPolicies') as authorization_policies,
              JSON_EXTRACT(properties, '$.enableDataResidency') as enable_data_residency,
              JSON_EXTRACT(properties, '$.portalOperationsHostName') as portal_operations_host_name,
              subscriptionId,
              resourceGroupName,
              provisioningServiceName
              FROM azure.iot_hub_device_provisioning.iot_dps_resource
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                sku as sku,
                systemData as system_data,
                identity as identity,
                type as type,
                json_extract_path_text(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
                JSON_EXTRACT(properties, '$.ipFilterRules') as ip_filter_rules,
                JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.iotHubs') as iot_hubs,
                JSON_EXTRACT(properties, '$.allocationPolicy') as allocation_policy,
                JSON_EXTRACT(properties, '$.serviceOperationsHostName') as service_operations_host_name,
                JSON_EXTRACT(properties, '$.deviceProvisioningHostName') as device_provisioning_host_name,
                JSON_EXTRACT(properties, '$.idScope') as id_scope,
                JSON_EXTRACT(properties, '$.authorizationPolicies') as authorization_policies,
                JSON_EXTRACT(properties, '$.enableDataResidency') as enable_data_residency,
                JSON_EXTRACT(properties, '$.portalOperationsHostName') as portal_operations_host_name,
                subscriptionId,
                resourceGroupName,
                provisioningServiceName
                FROM azure.iot_hub_device_provisioning.iot_dps_resource
                WHERE subscriptionId = 'replace-me';
    vw_iot_dps_resource_private_link_resources:
      id: azure.iot_hub_device_provisioning.vw_iot_dps_resource_private_link_resources
      name: vw_iot_dps_resource_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.groupId') as group_id,
              JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
              JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
              subscriptionId,
              resourceGroupName,
              resourceName,
              groupId
              FROM azure.iot_hub_device_provisioning.iot_dps_resource_private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.groupId') as group_id,
                JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
                JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
                subscriptionId,
                resourceGroupName,
                resourceName,
                groupId
                FROM azure.iot_hub_device_provisioning.iot_dps_resource_private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_iot_dps_resource_private_endpoint_connection:
      id: azure.iot_hub_device_provisioning.vw_iot_dps_resource_private_endpoint_connection
      name: vw_iot_dps_resource_private_endpoint_connection
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpoint') as private_endpoint,
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
              subscriptionId,
              resourceGroupName,
              resourceName,
              privateEndpointConnectionName
              FROM azure.iot_hub_device_provisioning.iot_dps_resource_private_endpoint_connection
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me' AND privateEndpointConnectionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpoint') as private_endpoint,
                JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
                subscriptionId,
                resourceGroupName,
                resourceName,
                privateEndpointConnectionName
                FROM azure.iot_hub_device_provisioning.iot_dps_resource_private_endpoint_connection
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me' AND privateEndpointConnectionName = 'replace-me';
paths:
  /providers/Microsoft.Devices/operations/?api-version=2023-03-01-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Microsoft.Devices REST API operations.
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/?api-version=2023-03-01-preview:
    get:
      tags:
        - DpsCertificate
      operationId: DpsCertificate_Get
      description: Get the certificate from the provisioning service.
      parameters:
        - name: certificateName
          in: path
          description: Name of the certificate to retrieve.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: Name of the provisioning service the certificate is associated with.
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag of the certificate.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Metadata for the specified certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - DpsCertificate
      summary: Upload the certificate to the provisioning service.
      description: Add new certificate or update an existing certificate.
      operationId: DpsCertificate_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: The name of the provisioning service.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: The name of the certificate create or update.
          required: true
          schema:
            maxLength: 256
            type: string
        - name: If-Match
          in: header
          description: ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.
          required: false
          schema:
            type: string
      requestBody:
        description: The certificate body.
        required: true
        x-ms-requestBody-name: certificateDescription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateResponse'
      responses:
        '200':
          description: If certificate already exist and update was successful, the operation returns HTTP status code of 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    delete:
      tags:
        - DpsCertificate
      operationId: DpsCertificate_Delete
      summary: Delete the Provisioning Service Certificate.
      description: Deletes the specified certificate associated with the Provisioning Service
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag of the certificate
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: The name of the provisioning service.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: This is a mandatory field, and is the logical name of the certificate that the provisioning service will access by.
          required: true
          schema:
            type: string
        - name: certificate.name
          in: query
          description: This is optional, and it is the Common Name of the certificate.
          required: false
          schema:
            type: string
        - name: certificate.rawBytes
          in: query
          description: Raw data within the certificate.
          required: false
          schema:
            format: byte
            type: string
        - name: certificate.isVerified
          in: query
          description: Indicates if certificate has been verified by owner of the private key.
          required: false
          schema:
            type: boolean
        - name: certificate.purpose
          in: query
          description: A description that mentions the purpose of the certificate.
          required: false
          schema:
            enum:
              - clientAuthentication
              - serverAuthentication
            x-ms-enum:
              name: CertificatePurpose
              modelAsString: true
            type: string
        - name: certificate.created
          in: query
          description: Time the certificate is created.
          required: false
          schema:
            format: date-time
            type: string
        - name: certificate.lastUpdated
          in: query
          description: Time the certificate is last updated.
          required: false
          schema:
            format: date-time
            type: string
        - name: certificate.hasPrivateKey
          in: query
          description: Indicates if the certificate contains a private key.
          required: false
          schema:
            type: boolean
        - name: certificate.nonce
          in: query
          description: Random number generated to indicate Proof of Possession.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No content.
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      summary: Get the non-security related metadata of the provisioning service.
      description: Get the metadata of the provisioning service without SAS keys.
      operationId: IotDpsResource_Get
      parameters:
        - name: provisioningServiceName
          in: path
          description: Name of the provisioning service to retrieve.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Provisioning service description with no keys is included in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningServiceDescription'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - IotDpsResource
      summary: Create or update the metadata of the provisioning service.
      description: Create or update the metadata of the provisioning service. The usual pattern to modify a property is to retrieve the provisioning service metadata and security metadata, and then combine them with the modified values in a new body to update the provisioning service.
      x-ms-long-running-operation: true
      operationId: IotDpsResource_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: Name of provisioning service to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Description of the provisioning service to create or update.
        required: true
        x-ms-requestBody-name: iotDpsDescription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningServiceDescription'
      responses:
        '200':
          description: The body contains all the non-security properties of the provisioning service. Security-related properties are set to null.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningServiceDescription'
        '201':
          description: This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningServiceDescription'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - IotDpsResource
      summary: Update an existing provisioning service's tags.
      description: Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method
      x-ms-long-running-operation: true
      operationId: IotDpsResource_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: Name of provisioning service to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Updated tag information to set into the provisioning service instance.
        required: true
        x-ms-requestBody-name: ProvisioningServiceTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsResource'
      responses:
        '200':
          description: Provisioning Service was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningServiceDescription'
    delete:
      tags:
        - IotDpsResource
      summary: Delete the Provisioning Service
      description: Deletes the Provisioning Service.
      x-ms-long-running-operation: true
      operationId: IotDpsResource_Delete
      parameters:
        - name: provisioningServiceName
          in: path
          description: Name of provisioning service to delete.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state.
        '202':
          description: The provisioning service resource provider always returns a 202 Accepted status code with valid Location and Retry-After headers. The resource provider also sets the Azure-AsyncOperation header with a URL that points to the operation resource for this operation. Subsequent GET attempts on the resource after a DELETE operation return a resource representation that indicates a transitional provisioning state (such as Terminating). To retrieve the status of the operation, a client can either poll the URL returned in the Location header after the Retry-After interval, get the provisioning service status directly, or query the operation resource.
        '204':
          description: Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the provisioning service metadata in the service and the status of the delete operation is set to a completed state.
        '404':
          description: After the long running delete operation completes successfully, a 404 Not Found is returned when the status polling request no longer finds the provisioning service metadata in the service.
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/?api-version=2023-03-01-preview:
    get:
      tags:
        - DpsCertificate
      operationId: DpsCertificate_List
      description: Get all the certificates tied to the provisioning service.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Name of resource group.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: Name of provisioning service to retrieve certificates for.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: List of certificate descriptions in a JSON-serialized array.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateListDescription'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      summary: Get all the provisioning services in a subscription.
      description: List all the provisioning services for a given subscription id.
      operationId: IotDpsResource_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the provisioning services in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningServiceDescriptionListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      operationId: IotDpsResource_ListByResourceGroup
      description: Get a list of all provisioning services in the given resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: List of provisioning services in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningServiceDescriptionListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/operationresults/{operationId}/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      operationId: IotDpsResource_GetOperationResult
      description: Gets the status of a long running operation, such as create, update or delete a provisioning service.
      parameters:
        - name: operationId
          in: path
          description: Operation id corresponding to long running operation. Use this to poll for the status.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: Name of provisioning service that the operation is running on.
          required: true
          schema:
            type: string
        - name: asyncinfo
          in: query
          description: Async header used to poll on the status of the operation, obtained while creating the long running operation.
          required: true
          schema:
            default: 'true'
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The status of the long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/skus/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      summary: Get the list of valid SKUs for a provisioning service.
      description: Gets the list of valid SKUs and tiers for a provisioning service.
      operationId: IotDpsResource_listValidSkus
      parameters:
        - name: provisioningServiceName
          in: path
          description: Name of provisioning service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Name of resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the valid SKUs for this provisioning service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotDpsSkuDefinitionListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/generateVerificationCode/?api-version=2023-03-01-preview:
    post:
      tags:
        - DpsCertificate
      operationId: DpsCertificate_GenerateVerificationCode
      description: Generate verification code for Proof of Possession.
      parameters:
        - name: certificateName
          in: path
          description: The mandatory logical name of the certificate, that the provisioning service uses to access.
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: name of resource group.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: Name of provisioning service.
          required: true
          schema:
            type: string
        - name: certificate.name
          in: query
          description: Common Name for the certificate.
          required: false
          schema:
            type: string
        - name: certificate.rawBytes
          in: query
          description: Raw data of certificate.
          required: false
          schema:
            format: byte
            type: string
        - name: certificate.isVerified
          in: query
          description: Indicates if the certificate has been verified by owner of the private key.
          required: false
          schema:
            type: boolean
        - name: certificate.purpose
          in: query
          description: Description mentioning the purpose of the certificate.
          required: false
          schema:
            enum:
              - clientAuthentication
              - serverAuthentication
            x-ms-enum:
              name: CertificatePurpose
              modelAsString: true
            type: string
        - name: certificate.created
          in: query
          description: Certificate creation time.
          required: false
          schema:
            format: date-time
            type: string
        - name: certificate.lastUpdated
          in: query
          description: Certificate last updated time.
          required: false
          schema:
            format: date-time
            type: string
        - name: certificate.hasPrivateKey
          in: query
          description: Indicates if the certificate contains private key.
          required: false
          schema:
            type: boolean
        - name: certificate.nonce
          in: query
          description: Random number generated to indicate Proof of Possession.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Generated verification code for that certificate is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationCodeResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/verify/?api-version=2023-03-01-preview:
    post:
      tags:
        - DpsCertificate
      operationId: DpsCertificate_VerifyCertificate
      summary: Verify certificate's private key possession.
      description: Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.
      parameters:
        - name: certificateName
          in: path
          description: The mandatory logical name of the certificate, that the provisioning service uses to access.
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag of the certificate.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group name.
          required: true
          schema:
            type: string
        - name: provisioningServiceName
          in: path
          description: Provisioning service name.
          required: true
          schema:
            type: string
        - name: certificate.name
          in: query
          description: Common Name for the certificate.
          required: false
          schema:
            type: string
        - name: certificate.rawBytes
          in: query
          description: Raw data of certificate.
          required: false
          schema:
            format: byte
            type: string
        - name: certificate.isVerified
          in: query
          description: Indicates if the certificate has been verified by owner of the private key.
          required: false
          schema:
            type: boolean
        - name: certificate.purpose
          in: query
          description: Describe the purpose of the certificate.
          required: false
          schema:
            enum:
              - clientAuthentication
              - serverAuthentication
            x-ms-enum:
              name: CertificatePurpose
              modelAsString: true
            type: string
        - name: certificate.created
          in: query
          description: Certificate creation time.
          required: false
          schema:
            format: date-time
            type: string
        - name: certificate.lastUpdated
          in: query
          description: Certificate last updated time.
          required: false
          schema:
            format: date-time
            type: string
        - name: certificate.hasPrivateKey
          in: query
          description: Indicates if the certificate contains private key.
          required: false
          schema:
            type: boolean
        - name: certificate.nonce
          in: query
          description: Random number generated to indicate Proof of Possession.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The name of the certificate
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCodeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkProvisioningServiceNameAvailability/?api-version=2023-03-01-preview:
    post:
      tags:
        - IotDpsResource
      operationId: IotDpsResource_CheckProvisioningServiceNameAvailability
      summary: Check if a provisioning service name is available.
      description: Check if a provisioning service name is available. This will validate if the name is syntactically valid and if the name is usable
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Set the name parameter in the OperationInputs structure to the name of the provisioning service to check.
        required: true
        x-ms-requestBody-name: arguments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationInputs'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the provisioning service name is available. If the name is not available, the body contains the reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityInfo'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listkeys/?api-version=2023-03-01-preview:
    post:
      tags:
        - IotDpsResource
      operationId: IotDpsResource_ListKeys
      summary: Get the security metadata for a provisioning service.
      description: List the primary and secondary keys for a provisioning service.
      parameters:
        - name: provisioningServiceName
          in: path
          description: The provisioning service name to get the shared access keys for.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: resource group name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of shared access policies, including keys, that you can use to access the provisioning service endpoints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRuleListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/keys/{keyName}/listkeys/?api-version=2023-03-01-preview:
    post:
      tags:
        - IotDpsResource
      operationId: IotDpsResource_ListKeysForKeyName
      summary: Get a shared access policy by name from a provisioning service.
      description: List primary and secondary keys for a specific key name
      parameters:
        - name: provisioningServiceName
          in: path
          description: Name of the provisioning service.
          required: true
          schema:
            type: string
        - name: keyName
          in: path
          description: Logical key name to get key-values for.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The name of the resource group that contains the provisioning service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized shared access policy, including keys, that you can use to access one or more provisioning service endpoints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule_AccessRightsDescription_'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateLinkResources/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      summary: List private link resources
      description: List private link resources for the given provisioning service
      operationId: IotDpsResource_ListPrivateLinkResources
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains the list of private link resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResources'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateLinkResources/{groupId}/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      summary: Get the specified private link resource
      description: Get the specified private link resource for the given provisioning service
      operationId: IotDpsResource_GetPrivateLinkResources
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/groupId'
      responses:
        '200':
          description: The body contains the specified of private link resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupIdInformation'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateEndpointConnections/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      summary: List private endpoint connections
      description: List private endpoint connection properties
      operationId: IotDpsResource_ListPrivateEndpointConnections
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains the list of private endpoint connection properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionsList'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2023-03-01-preview:
    get:
      tags:
        - IotDpsResource
      summary: Get private endpoint connection
      description: Get private endpoint connection properties
      operationId: IotDpsResource_GetPrivateEndpointConnection
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          description: The body contains the private endpoint connection properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    put:
      tags:
        - IotDpsResource
      summary: Create or update private endpoint connection
      description: Create or update the status of a private endpoint connection with the specified name
      operationId: IotDpsResource_CreateOrUpdatePrivateEndpointConnection
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection with updated properties
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the update operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    delete:
      tags:
        - IotDpsResource
      summary: Delete private endpoint connection
      description: Delete private endpoint connection with the specified name
      operationId: IotDpsResource_DeletePrivateEndpointConnection
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the delete operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Operation Status Location URI
            Location:
              schema:
                type: string
              description: Operation Status Location URI
            Retry-After:
              schema:
                type: string
              description: Retry After
        '204':
          description: PrivateEndpoint does not exist.
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
