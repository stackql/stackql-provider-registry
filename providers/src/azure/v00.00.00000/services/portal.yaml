openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Microsoft Portal
  description: Microsoft Portal Resource Provider
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The configuration name. Value must be 'default'
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: configurationName
          modelAsString: true
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to be used with the HTTP request.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    DashboardNameParameter:
      name: dashboardName
      in: path
      description: The name of the dashboard.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 64
        type: string
  schemas:
    ConfigurationList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
          description: The array of tenant configurations.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of tenant configurations.
    Configuration:
      description: Tenant configuration.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConfigurationProperties'
          description: Tenant configuration properties.
      type: object
    ConfigurationProperties:
      type: object
      description: Tenant configuration properties.
      x-ms-azure-resource: true
      properties:
        enforcePrivateMarkdownStorage:
          type: boolean
          description: When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.
    ViolationsList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Violation'
          description: The array of violations.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of list of items that violate tenant's configuration.
    Violation:
      type: object
      description: Violation information.
      properties:
        id:
          description: Id of the item that violates tenant configuration.
          type: string
          readOnly: true
        userId:
          description: Id of the user who owns violated item.
          type: string
          readOnly: true
        errorMessage:
          description: Error message.
          type: string
          readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      type: object
      description: Error response.
      properties:
        error:
          $ref: '#/components/schemas/ErrorDefinition'
          description: The error details.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    DashboardListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Dashboard'
          description: The array of custom resource provider manifests.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of dashboards.
    DashboardParts:
      type: object
      description: A dashboard part.
      required:
        - position
      properties:
        position:
          type: object
          required:
            - x
            - 'y'
            - rowSpan
            - colSpan
          description: The dashboard's part position.
          properties:
            x:
              type: integer
              format: int32
              description: The dashboard's part x coordinate.
            'y':
              type: integer
              format: int32
              description: The dashboard's part y coordinate.
            rowSpan:
              type: integer
              format: int32
              description: The dashboard's part row span.
            colSpan:
              type: integer
              format: int32
              description: The dashboard's part column span.
            metadata:
              description: The dashboard part's metadata.
              type: object
              additionalProperties:
                type: object
        metadata:
          description: The dashboard part's metadata.
          type: object
          $ref: '#/components/schemas/DashboardPartMetadata'
    DashboardPartMetadata:
      type: object
      required:
        - type
      description: A dashboard part metadata.
      additionalProperties: true
      properties:
        type:
          type: string
          description: The type of dashboard part.
      discriminator:
        propertyName: type
    MarkdownPartMetadata:
      description: Markdown part metadata.
      x-ms-discriminator-value: Extension/HubsExtension/PartType/MarkdownPart
      properties:
        type:
          type: string
          description: The type of dashboard part.
        inputs:
          type: array
          description: Input to dashboard part.
          items:
            type: object
          x-ms-identifiers: []
        settings:
          type: object
          description: Markdown part settings.
          properties:
            content:
              type: object
              description: The content of markdown part.
              properties:
                settings:
                  type: object
                  description: The setting of the content of markdown part.
                  properties:
                    content:
                      type: string
                      description: The content of the markdown part.
                    title:
                      type: string
                      description: The title of the markdown part.
                    subtitle:
                      type: string
                      description: The subtitle of the markdown part.
                    markdownSource:
                      type: integer
                      format: int32
                      description: The source of the content of the markdown part.
                    markdownUri:
                      type: string
                      description: The uri of markdown content.
      type: object
    DashboardLens:
      type: object
      description: A dashboard lens.
      required:
        - order
        - parts
      properties:
        order:
          type: integer
          format: int32
          description: The lens order.
        parts:
          type: array
          description: The dashboard parts.
          items:
            $ref: '#/components/schemas/DashboardParts'
          x-ms-identifiers: []
        metadata:
          description: The dashboard len's metadata.
          type: object
          additionalProperties:
            type: object
    DashboardProperties:
      type: object
      description: The shared dashboard properties.
      properties:
        lenses:
          type: array
          description: The dashboard lenses.
          items:
            $ref: '#/components/schemas/DashboardLens'
          x-ms-identifiers: []
        metadata:
          description: The dashboard metadata.
          type: object
          additionalProperties:
            type: object
    Dashboard:
      description: The shared dashboard resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      required:
        - location
      properties:
        properties:
          description: The shared dashboard properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DashboardProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    PatchableDashboard:
      description: The shared dashboard resource definition.
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        properties:
          description: The shared dashboard properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DashboardProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    ResourceProviderOperationList:
      type: object
      description: Results of the request to list operations.
      readOnly: true
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceProviderOperation'
          x-ms-identifiers:
            - name
          description: List of operations supported by this resource provider.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
    ResourceProviderOperation:
      type: object
      description: Supported operations of this resource provider.
      readOnly: true
      properties:
        name:
          description: Operation name, in format of {provider}/{resource}/{operation}
          type: string
        isDataAction:
          description: Indicates whether the operation applies to data-plane.
          type: string
        display:
          description: Display metadata associated with the operation.
          properties:
            provider:
              description: 'Resource provider: Microsoft Custom Providers.'
              type: string
            resource:
              description: Resource on which the operation is performed.
              type: string
            operation:
              description: 'Type of operation: get, read, delete, etc.'
              type: string
            description:
              description: Description of this operation.
              type: string
    ErrorDefinition:
      type: object
      description: Error definition.
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: integer
          format: int32
          readOnly: true
        message:
          description: Description of the error.
          type: string
          readOnly: true
        details:
          description: Internal error details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDefinition'
          x-ms-identifiers:
            - code
          readOnly: true
  x-stackQL-resources:
    tenant_configurations:
      id: azure.portal.tenant_configurations
      name: tenant_configurations
      title: tenant_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations~1?api-version=2020-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations~1{configurationName}~1?api-version=2020-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations~1{configurationName}~1?api-version=2020-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations~1{configurationName}~1?api-version=2020-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/delete'
    list_tenant_configuration_violations:
      id: azure.portal.list_tenant_configuration_violations
      name: list_tenant_configuration_violations
      title: list_tenant_configuration_violations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1listTenantConfigurationViolations~1?api-version=2020-09-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/list_tenant_configuration_violations/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.portal.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1operations~1?api-version=2020-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    dashboards:
      id: azure.portal.dashboards
      name: dashboards
      title: dashboards
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}~1?api-version=2020-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}~1?api-version=2020-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}~1?api-version=2020-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}~1?api-version=2020-09-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1?api-version=2020-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Portal~1dashboards~1?api-version=2020-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/get'
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/delete'
paths:
  /providers/Microsoft.Portal/tenantConfigurations/?api-version=2020-09-01-preview:
    get:
      tags:
        - tenantConfiguration
      operationId: TenantConfigurations_List
      description: Gets list of the tenant configurations.
      parameters: []
      responses:
        '200':
          description: OK. Returns the list of tenant configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Portal/tenantConfigurations/{configurationName}/?api-version=2020-09-01-preview:
    get:
      tags:
        - tenantConfiguration
      operationId: TenantConfigurations_Get
      description: Gets the tenant configuration.
      parameters:
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK. Returns the tenant configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '404':
          description: Not found. Tenant configuration wasn't created yet.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - tenantConfiguration
      operationId: TenantConfigurations_Create
      description: Create the tenant configuration. If configuration already exists - update it. User has to be a Tenant Admin for this operation.
      parameters:
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The parameters required to create or update tenant configuration.
        required: true
        x-ms-requestBody-name: tenantConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK. Existing configuration updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '201':
          description: Created. New configuration was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - tenantConfiguration
      operationId: TenantConfigurations_Delete
      description: Delete the tenant configuration. User has to be a Tenant Admin for this operation.
      parameters:
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK. Configuration was deleted.
        '204':
          description: No content. Configuration was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Portal/listTenantConfigurationViolations/?api-version=2020-09-01-preview:
    post:
      tags:
        - listTenantConfigurationViolations
      operationId: ListTenantConfigurationViolations_List
      description: Gets list of items that violate tenant's configuration.
      parameters: []
      responses:
        '200':
          description: OK. Returns the list of items that violate tenant's configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Portal/operations/?api-version=2020-09-01-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
      description: The Microsoft Portal operations API.
      parameters: []
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderOperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/dashboards/{dashboardName}/?api-version=2020-09-01-preview:
    put:
      tags:
        - Dashboard
      operationId: Dashboards_CreateOrUpdate
      description: Creates or updates a Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DashboardNameParameter'
      requestBody:
        description: The parameters required to create or update a dashboard.
        required: true
        x-ms-requestBody-name: dashboard
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        '200':
          description: Resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '201':
          description: Created response definition. Resource has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Dashboard
      operationId: Dashboards_Delete
      description: Deletes the Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DashboardNameParameter'
      responses:
        '200':
          description: OK response definition.
        '204':
          description: OK resource was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Dashboard
      operationId: Dashboards_Get
      description: Gets the Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DashboardNameParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '404':
          description: Not found. Dashboard with provided id doesn't exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Dashboard
      operationId: Dashboards_Update
      description: Updates an existing Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DashboardNameParameter'
      requestBody:
        description: The updatable fields of a Dashboard.
        required: true
        x-ms-requestBody-name: dashboard
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchableDashboard'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '404':
          description: Not found. Dashboard with provided id doesn't exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/dashboards/?api-version=2020-09-01-preview:
    get:
      tags:
        - Dashboard
      operationId: Dashboards_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
      description: Gets all the Dashboards within a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK - Returns an array of Dashboards.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Portal/dashboards/?api-version=2020-09-01-preview:
    get:
      tags:
        - Dashboard
      operationId: Dashboards_ListBySubscription
      x-ms-pageable:
        nextLinkName: nextLink
      description: Gets all the dashboards within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of dashboards.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
