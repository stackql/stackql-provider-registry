openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Microsoft Portal
  description: Microsoft Portal Resource Provider
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Azure.ResourceManager.ResourceProvisioningState:
      type: string
      description: The provisioning state of a resource type.
      enum:
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: ResourceProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
      readOnly: true
    Configuration:
      description: The tenant configuration resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          description: The resource-specific properties for this resource.
      type: object
    ConfigurationListResult:
      type: object
      description: The response of a Configuration list operation.
      properties:
        value:
          type: array
          description: The Configuration items on this page
          items:
            $ref: '#/components/schemas/Configuration'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ConfigurationProperties:
      type: object
      description: Tenant Configuration Properties with Provisioning state
      properties:
        enforcePrivateMarkdownStorage:
          type: boolean
          description: When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The status of the last operation.
          readOnly: true
    Violation:
      type: object
      description: Violation information.
      properties:
        id:
          type: string
          description: Id of the item that violates tenant configuration.
          readOnly: true
        userId:
          type: string
          description: Id of the user who owns violated item.
          readOnly: true
        errorMessage:
          type: string
          description: Error message.
          readOnly: true
    ViolationsList:
      type: object
      description: List of list of items that violate tenant's configuration.
      properties:
        value:
          type: array
          description: The Violation items on this page
          items:
            $ref: '#/components/schemas/Violation'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    Dashboard:
      description: The shared dashboard resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/DashboardPropertiesWithProvisioningState'
          description: The resource-specific properties for this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    DashboardLens:
      type: object
      description: A dashboard lens.
      properties:
        order:
          type: integer
          format: int32
          description: The lens order.
        parts:
          type: array
          description: The dashboard parts.
          items:
            $ref: '#/components/schemas/DashboardParts'
          x-ms-identifiers: []
        metadata:
          type: object
          description: The dashboard len's metadata.
      required:
        - order
        - parts
    DashboardListResult:
      type: object
      description: The response of a Dashboard list operation.
      properties:
        value:
          type: array
          description: The Dashboard items on this page
          items:
            $ref: '#/components/schemas/Dashboard'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DashboardPartMetadata:
      type: object
      description: A dashboard part metadata.
      properties:
        type:
          $ref: '#/components/schemas/DashboardPartMetadataType'
      discriminator:
        propertyName: type
      required:
        - type
    DashboardPartMetadataType:
      type: string
      description: The dashboard part metadata type.
      enum:
        - Extension/HubsExtension/PartType/MarkdownPart
      x-ms-enum:
        name: DashboardPartMetadataType
        modelAsString: true
        values:
          - name: markdown
            value: Extension/HubsExtension/PartType/MarkdownPart
            description: The markdown part type.
    DashboardParts:
      type: object
      description: A dashboard part.
      properties:
        position:
          $ref: '#/components/schemas/DashboardPartsPosition'
          description: The dashboard's part position.
        metadata:
          $ref: '#/components/schemas/DashboardPartMetadata'
          description: The dashboard part's metadata.
      required:
        - position
    DashboardPartsPosition:
      type: object
      description: The dashboard's part position.
      properties:
        x:
          type: integer
          format: int32
          description: The dashboard's part x coordinate.
        'y':
          type: integer
          format: int32
          description: The dashboard's part y coordinate.
        rowSpan:
          type: integer
          format: int32
          description: The dashboard's part row span.
        colSpan:
          type: integer
          format: int32
          description: The dashboard's part column span.
        metadata:
          type: object
          description: The dashboard part's metadata.
      required:
        - x
        - 'y'
        - rowSpan
        - colSpan
    DashboardProperties:
      type: object
      description: The shared dashboard properties.
      properties:
        lenses:
          type: array
          description: The dashboard lenses.
          items:
            $ref: '#/components/schemas/DashboardLens'
          x-ms-identifiers: []
        metadata:
          type: object
          description: The dashboard metadata.
    DashboardPropertiesWithProvisioningState:
      type: object
      description: Dashboard Properties with Provisioning state
      properties:
        lenses:
          type: array
          description: The dashboard lenses.
          items:
            $ref: '#/components/schemas/DashboardLens'
          x-ms-identifiers: []
        metadata:
          type: object
          description: The dashboard metadata.
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The status of the last operation.
          readOnly: true
    MarkdownPartMetadata:
      description: Markdown part metadata.
      x-ms-discriminator-value: Extension/HubsExtension/PartType/MarkdownPart
      properties:
        inputs:
          type: array
          description: Input to dashboard part.
          items:
            type: object
          x-ms-identifiers: []
        settings:
          $ref: '#/components/schemas/MarkdownPartMetadataSettings'
          description: Markdown part settings.
        type:
          $ref: '#/components/schemas/DashboardPartMetadataType'
      type: object
    MarkdownPartMetadataSettings:
      type: object
      description: Markdown part settings.
      properties:
        content:
          $ref: '#/components/schemas/MarkdownPartMetadataSettingsContent'
          description: The content of markdown part.
    MarkdownPartMetadataSettingsContent:
      type: object
      description: The content of markdown part.
      properties:
        settings:
          $ref: '#/components/schemas/MarkdownPartMetadataSettingsContentSettings'
          description: The setting of the content of markdown part.
    MarkdownPartMetadataSettingsContentSettings:
      type: object
      description: The setting of the content of markdown part.
      properties:
        content:
          type: string
          description: The content of the markdown part.
        title:
          type: string
          description: The title of the markdown part.
        subtitle:
          type: string
          description: The subtitle of the markdown part.
        markdownSource:
          type: integer
          format: int32
          description: The source of the content of the markdown part.
        markdownUri:
          type: string
          description: The uri of markdown content.
    PatchableDashboard:
      description: The shared dashboard resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/DashboardProperties'
          description: The shared dashboard properties.
        tags:
          type: object
          description: Resource tags
          additionalProperties:
            type: string
      type: object
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    tenant_configuration_violations:
      id: azure.portal.tenant_configuration_violations
      name: tenant_configuration_violations
      title: tenant_configuration_violations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1listTenantConfigurationViolations?api-version=2022-12-01-preview/post'
            operationId: TenantConfigurationViolations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ViolationsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tenant_configuration_violations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    tenant_configurations:
      id: azure.portal.tenant_configurations
      name: tenant_configurations
      title: tenant_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations?api-version=2022-12-01-preview/get'
            operationId: TenantConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations~1{configurationName}?api-version=2022-12-01-preview/get'
            operationId: TenantConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        create:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations~1{configurationName}?api-version=2022-12-01-preview/put'
            operationId: TenantConfigurations_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1tenantConfigurations~1{configurationName}?api-version=2022-12-01-preview/delete'
            operationId: TenantConfigurations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tenant_configurations/methods/delete'
    operations:
      id: azure.portal.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Portal~1operations?api-version=2022-12-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    dashboards:
      id: azure.portal.dashboards
      name: dashboards
      title: dashboards
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Portal~1dashboards?api-version=2022-12-01-preview/get'
            operationId: Dashboards_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DashboardListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards?api-version=2022-12-01-preview/get'
            operationId: Dashboards_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DashboardListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}?api-version=2022-12-01-preview/get'
            operationId: Dashboards_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Dashboard
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}?api-version=2022-12-01-preview/put'
            operationId: Dashboards_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Dashboard
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}?api-version=2022-12-01-preview/patch'
            operationId: Dashboards_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Dashboard
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Portal~1dashboards~1{dashboardName}?api-version=2022-12-01-preview/delete'
            operationId: Dashboards_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/get'
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dashboards/methods/delete'
    vw_tenant_configurations:
      id: azure.portal.vw_tenant_configurations
      name: vw_tenant_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.enforcePrivateMarkdownStorage') as "enforce_private_markdown_storage",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              configurationName
              FROM azure.portal.tenant_configurations
              WHERE configurationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.enforcePrivateMarkdownStorage') as "enforce_private_markdown_storage",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                configurationName
                FROM azure.portal.tenant_configurations
                WHERE configurationName = 'replace-me';
    vw_dashboards:
      id: azure.portal.vw_dashboards
      name: vw_dashboards
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.lenses') as "lenses",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              dashboardName
              FROM azure.portal.dashboards
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.lenses') as "lenses",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                dashboardName
                FROM azure.portal.dashboards
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.Portal/listTenantConfigurationViolations?api-version=2022-12-01-preview:
    post:
      operationId: TenantConfigurationViolations_List
      tags:
        - ListTenantConfigurationViolationsOperations
      description: Gets list of items that violate tenant's configuration.
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationsList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ListTenantConfigurationViolations_List
  /providers/Microsoft.Portal/tenantConfigurations?api-version=2022-12-01-preview:
    get:
      operationId: TenantConfigurations_List
      tags:
        - TenantConfigurations
      description: Gets list of the tenant configurations.
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Portal/tenantConfigurations/{configurationName}?api-version=2022-12-01-preview:
    get:
      operationId: TenantConfigurations_Get
      tags:
        - TenantConfigurations
      description: Gets the tenant configuration.
      parameters:
        - name: configurationName
          in: path
          description: The name of the Configuration
          required: true
          schema:
            pattern: ^(?!con$|prn$|aux$|nul$|com[1-9]$)(?!.*[._-]{2,})[a-zA-Z0-9]([a-zA-Z0-9-._]*[a-zA-Z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: TenantConfigurations_Create
      tags:
        - TenantConfigurations
      description: Create the tenant configuration. If configuration already exists - update it. User has to be a Tenant Admin for this operation.
      parameters:
        - name: configurationName
          in: path
          description: The name of the Configuration
          required: true
          schema:
            pattern: ^(?!con$|prn$|aux$|nul$|com[1-9]$)(?!.*[._-]{2,})[a-zA-Z0-9]([a-zA-Z0-9-._]*[a-zA-Z0-9])?$
            type: string
      requestBody:
        description: The parameters required to create or update tenant configuration.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: Resource 'Configuration' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '201':
          description: Resource 'Configuration' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: TenantConfigurations_Delete
      tags:
        - TenantConfigurations
      description: Delete the tenant configuration. User has to be a Tenant Admin for this operation.
      parameters:
        - name: configurationName
          in: path
          description: The name of the Configuration
          required: true
          schema:
            pattern: ^(?!con$|prn$|aux$|nul$|com[1-9]$)(?!.*[._-]{2,})[a-zA-Z0-9]([a-zA-Z0-9-._]*[a-zA-Z0-9])?$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Portal/operations?api-version=2022-12-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Portal/dashboards?api-version=2022-12-01-preview:
    get:
      operationId: Dashboards_ListBySubscription
      tags:
        - Dashboards
      description: Gets all the dashboards within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/dashboards?api-version=2022-12-01-preview:
    get:
      operationId: Dashboards_ListByResourceGroup
      tags:
        - Dashboards
      description: Gets all the Dashboards within a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/dashboards/{dashboardName}?api-version=2022-12-01-preview:
    get:
      operationId: Dashboards_Get
      tags:
        - Dashboards
      description: Gets the Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: dashboardName
          in: path
          description: The name of the dashboard.
          required: true
          schema:
            minLength: 3
            maxLength: 64
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Dashboards_CreateOrUpdate
      tags:
        - Dashboards
      description: Creates or updates a Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: dashboardName
          in: path
          description: The name of the dashboard.
          required: true
          schema:
            minLength: 3
            maxLength: 64
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The parameters required to create or update a dashboard.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        '200':
          description: Resource 'Dashboard' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        '201':
          description: Resource 'Dashboard' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: Dashboards_Update
      tags:
        - Dashboards
      description: Updates an existing Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: dashboardName
          in: path
          description: The name of the dashboard.
          required: true
          schema:
            minLength: 3
            maxLength: 64
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The updatable fields of a Dashboard.
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchableDashboard'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Dashboards_Delete
      tags:
        - Dashboards
      description: Deletes the Dashboard.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: dashboardName
          in: path
          description: The name of the dashboard.
          required: true
          schema:
            minLength: 3
            maxLength: 64
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
