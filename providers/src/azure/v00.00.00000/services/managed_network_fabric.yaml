openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Network Fabric Management Service API
  description: Self service experience for Azure Network Fabric API.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    NetworkRackNameParameter:
      name: networkRackName
      in: path
      description: Name of the Network Rack.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkTapNameParameter:
      name: networkTapName
      in: path
      description: Name of the Network Tap.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkTapRuleNameParameter:
      name: networkTapRuleName
      in: path
      description: Name of the Network Tap Rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RoutePolicyNameParameter:
      name: routePolicyName
      in: path
      description: Name of the Route Policy.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IpCommunityNameParameter:
      name: ipCommunityName
      in: path
      description: Name of the IP Community.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkDeviceNameParameter:
      name: networkDeviceName
      in: path
      description: Name of the Network Device.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkInterfaceNameParameter:
      name: networkInterfaceName
      in: path
      description: Name of the Network Interface.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NeighborGroupNameParameter:
      name: neighborGroupName
      in: path
      description: Name of the Neighbor Group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    L3IsolationDomainNameParameter:
      name: l3IsolationDomainName
      in: path
      description: Name of the L3 Isolation Domain.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    InternalNetworkNameParameter:
      name: internalNetworkName
      in: path
      description: Name of the Internal Network.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ExternalNetworkNameParameter:
      name: externalNetworkName
      in: path
      description: Name of the External Network.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IpExtendedCommunityNameParameter:
      name: ipExtendedCommunityName
      in: path
      description: Name of the IP Extended Community.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkPacketBrokerNameParameter:
      name: networkPacketBrokerName
      in: path
      description: Name of the Network Packet Broker.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkDeviceSkuNameParameter:
      name: networkDeviceSkuName
      in: path
      description: Name of the Network Device SKU.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    L2IsolationDomainNameParameter:
      name: l2IsolationDomainName
      in: path
      description: Name of the L2 Isolation Domain.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    InternetGatewayRuleNameParameter:
      name: internetGatewayRuleName
      in: path
      description: Name of the Internet Gateway rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkFabricControllerNameParameter:
      name: networkFabricControllerName
      in: path
      description: Name of the Network Fabric Controller.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AccessControlListNameParameter:
      name: accessControlListName
      in: path
      description: Name of the Access Control List.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkFabricSkuNameParameter:
      name: networkFabricSkuName
      in: path
      description: Name of the Network Fabric SKU.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkFabricNameParameter:
      name: networkFabricName
      in: path
      description: Name of the Network Fabric.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkToNetworkInterconnectNameParameter:
      name: networkToNetworkInterconnectName
      in: path
      description: Name of the Network to Network Interconnect.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IpPrefixNameParameter:
      name: ipPrefixName
      in: path
      description: Name of the IP Prefix.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    InternetGatewayNameParameter:
      name: internetGatewayName
      in: path
      description: Name of the Internet Gateway.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    NetworkRackProperties:
      required:
        - networkFabricId
      description: Network Rack Properties defines the properties of the resource.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        networkRackType:
          type: string
          description: Network Rack SKU name.
          minLength: 1
          enum:
            - Aggregate
            - Compute
            - Combined
          x-ms-enum:
            modelAsString: true
            name: NetworkRackType
        networkFabricId:
          description: ARM resource ID of the Network Fabric.
          $ref: '#/components/schemas/NetworkFabricIdProperty'
        networkDevices:
          type: array
          description: List of network device ARM resource IDs.
          items:
            description: ARM resource ID of the Network device.
            $ref: '#/components/schemas/NetworkDeviceIdProperty'
          readOnly: true
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
      type: object
    NetworkRack:
      x-ms-azure-resource: true
      required:
        - location
        - properties
      description: The Network Rack resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkRackProperties'
      type: object
    NetworkRackPatch:
      x-ms-azure-resource: true
      $ref: '#/components/schemas/TagsUpdate'
      description: The Network Rack patch resource definition.
      properties: {}
      type: object
    NetworkRacksListResult:
      type: object
      description: List of Network Racks.
      properties:
        value:
          type: array
          description: List of Network Rack resources.
          items:
            $ref: '#/components/schemas/NetworkRack'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    NetworkTap:
      required:
        - properties
      x-ms-azure-resource: true
      description: The Network Tap resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkTapProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkTapProperties:
      description: Network Tap Properties defines the properties of the resource.
      required:
        - networkPacketBrokerId
        - destinations
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        networkPacketBrokerId:
          description: ARM resource ID of the Network Packet Broker.
          x-ms-mutability:
            - create
            - read
          $ref: '#/components/schemas/NetworkFabricIdProperty'
        sourceTapRuleId:
          type: string
          description: Source Tap Rule Id. ARM Resource ID of the Network Tap Rule.
          format: arm-id
          readOnly: true
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ManagedNetworkFabric/networkTapRules
          example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}
        destinations:
          type: array
          description: List of destinations to send the filter traffic.
          minItems: 1
          items:
            type: object
            description: Destination.
            required:
              - name
              - destinationType
              - destinationId
            allOf:
              - $ref: '#/components/schemas/DestinationProperties'
        pollingType:
          type: string
          description: Polling type.
          minLength: 1
          default: Pull
          enum:
            - Pull
            - Push
          x-ms-enum:
            modelAsString: true
            name: PollingType
          example: Pull
        configurationState:
          description: Gets the configurations state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of Network Tap provisioning.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource. Example -Enabled/Disabled
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    NetworkTapPatch:
      x-ms-azure-resource: true
      description: The NetworkFabric resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkTapPatchableParameters'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    NetworkTapPatchableParameters:
      description: The Network Tap resource patch definition.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        pollingType:
          type: string
          description: Polling type.
          minLength: 1
          default: Pull
          enum:
            - Pull
            - Push
          x-ms-enum:
            modelAsString: true
            name: PollingType
          example: Pull
        destinations:
          type: array
          description: List of destination properties to send the filter traffic.
          items:
            type: object
            description: Destination.
            allOf:
              - $ref: '#/components/schemas/DestinationProperties'
      type: object
    NetworkTapsListResult:
      type: object
      description: List of NetworkTaps.
      properties:
        value:
          type: array
          description: List of NetworkTap resources.
          items:
            $ref: '#/components/schemas/NetworkTap'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    DestinationProperties:
      type: object
      description: The network tap destination properties.
      properties:
        name:
          type: string
          description: Destination name.
          minLength: 1
        destinationType:
          type: string
          description: Type of destination. Input can be IsolationDomain or Direct.
          enum:
            - IsolationDomain
            - Direct
          x-ms-enum:
            modelAsString: true
            name: DestinationType
          example: IsolationDomain
        destinationId:
          type: string
          description: The destination Id. ARM Resource ID of either NNI or Internal Networks.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ManagedNetworkFabric/networkToNetworkInterconnects
              - type: Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks
          example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkToNetworkInterconnects/example-nni
        isolationDomainProperties:
          description: Isolation Domain Properties.
          $ref: '#/components/schemas/IsolationDomainProperties'
        destinationTapRuleId:
          description: ARM Resource ID of destination Tap Rule that contains match configurations.
          $ref: '#/components/schemas/NetworkTapRuleIdProperty'
    IsolationDomainProperties:
      type: object
      description: Isolation Domain Properties.
      properties:
        encapsulation:
          type: string
          description: Type of encapsulation.
          enum:
            - None
            - GRE
          x-ms-enum:
            modelAsString: true
            name: Encapsulation
          minLength: 1
          example: None
        neighborGroupIds:
          type: array
          description: List of Neighbor Group IDs.
          items:
            description: ARM Resource ID of the Neighbor Group .
            $ref: '#/components/schemas/NeighborGroupIdProperty'
    NetworkTapRulePatchableProperties:
      title: Network Tap Rule updatable properties.
      type: object
      properties:
        configurationType:
          type: string
          description: Input method to configure Network Tap Rule.
          enum:
            - File
            - Inline
          x-ms-enum:
            modelAsString: true
            name: ConfigurationType
        tapRulesUrl:
          type: string
          description: Network Tap Rules file URL.
          format: uri
          minLength: 1
        matchConfigurations:
          type: array
          description: List of match configurations.
          minItems: 1
          items:
            description: Match configuration.
            $ref: '#/components/schemas/NetworkTapRuleMatchConfiguration'
        dynamicMatchConfigurations:
          type: array
          description: List of dynamic match configurations.
          minItems: 1
          items:
            description: Dynamic match configuration object.
            $ref: '#/components/schemas/CommonDynamicMatchConfiguration'
    NetworkTapRuleProperties:
      required:
        - configurationType
      description: Network Tap Rule Properties defines the resource properties.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        configurationType:
          type: string
          description: Input method to configure Network Tap Rule.
          enum:
            - File
            - Inline
          x-ms-enum:
            modelAsString: true
            name: ConfigurationType
        tapRulesUrl:
          type: string
          description: Network Tap Rules file URL.
          format: uri
          minLength: 1
        matchConfigurations:
          type: array
          description: List of match configurations.
          minItems: 1
          items:
            description: Match configuration.
            $ref: '#/components/schemas/NetworkTapRuleMatchConfiguration'
        dynamicMatchConfigurations:
          type: array
          description: List of dynamic match configurations.
          minItems: 1
          items:
            description: Dynamic match configuration object.
            $ref: '#/components/schemas/CommonDynamicMatchConfiguration'
        networkTapId:
          type: string
          description: The ARM resource Id of the NetworkTap.
          readOnly: true
        pollingIntervalInSeconds:
          type: integer
          format: int32
          description: Polling interval in seconds.
          default: 30
          enum:
            - 30
            - 60
            - 90
            - 120
          x-ms-enum:
            modelAsString: true
            name: PollingIntervalInSeconds
        lastSyncedTime:
          type: string
          format: date-time
          description: The last sync timestamp.
          readOnly: true
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    NetworkTapRule:
      x-ms-azure-resource: true
      description: The NetworkTapRule resource definition.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkTapRuleProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkTapRulePatch:
      description: The NetworkTapRule resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Network Tap Rule Patch properties.
          type: object
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/NetworkTapRulePatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    NetworkTapRulesListResult:
      type: object
      description: List of NetworkTapRules.
      properties:
        value:
          type: array
          description: List of NetworkTapRule resources.
          items:
            $ref: '#/components/schemas/NetworkTapRule'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    NetworkTapRuleMatchConfiguration:
      type: object
      description: Defines the match configuration that are supported to filter the traffic.
      properties:
        matchConfigurationName:
          type: string
          description: The name of the match configuration.
          minLength: 1
        sequenceNumber:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: Sequence Number of the match configuration..
        ipAddressType:
          description: Type of IP Address. IPv4 or IPv6
          $ref: '#/components/schemas/IPAddressTypeEnumProperty'
        matchConditions:
          type: array
          description: List of the match conditions.
          minItems: 1
          items:
            description: Defines the match condition that is supported to filter the traffic.
            $ref: '#/components/schemas/NetworkTapRuleMatchCondition'
        actions:
          type: array
          description: List of actions that need to be performed for the matched conditions.
          minItems: 1
          items:
            description: Action that needs to performed.
            $ref: '#/components/schemas/NetworkTapRuleAction'
    NetworkTapRuleMatchCondition:
      description: Defines the match condition that is supported to filter the traffic.
      properties:
        encapsulationType:
          type: string
          description: Encapsulation Type that needs to be matched.
          default: None
          minLength: 1
          enum:
            - None
            - GTPv1
          x-ms-enum:
            modelAsString: true
            name: EncapsulationType
        portCondition:
          description: Defines the port condition that needs to be matched.
          $ref: '#/components/schemas/PortCondition'
        protocolTypes:
          type: array
          minItems: 1
          description: List of the protocols that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the protocol that to needs to matched. Inputs can be <protocol-name> or <protocol-number> or <range of protocol numbers>.
        vlanMatchCondition:
          description: Vlan match condition that needs to be matched.
          $ref: '#/components/schemas/VlanMatchCondition'
        ipCondition:
          description: IP condition that needs to be matched.
          $ref: '#/components/schemas/IpMatchCondition'
      type: object
    NetworkTapRuleAction:
      type: object
      description: Action that need to performed.
      properties:
        type:
          type: string
          description: Type of actions that can be performed.
          minLength: 1
          enum:
            - Drop
            - Count
            - Log
            - Replicate
            - Goto
            - Redirect
            - Mirror
          x-ms-enum:
            modelAsString: true
            name: TapRuleActionType
        truncate:
          type: string
          minLength: 1
          description: Truncate. 0 indicates do not truncate.
        isTimestampEnabled:
          description: The parameter to enable or disable the timestamp.
          $ref: '#/components/schemas/BooleanEnumProperty'
        destinationId:
          type: string
          description: Destination Id. The ARM resource Id may be either Network To Network Interconnect or NeighborGroup.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ManagedNetworkFabric/neighborGroups
              - type: Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects
          example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups/{neighborGroupName}
        matchConfigurationName:
          type: string
          minLength: 1
          description: The name of the match configuration. This is used when Goto type is provided. If Goto type is selected and no match configuration name is provided. It goes to next configuration.
    RoutePolicyProperties:
      required:
        - statements
        - networkFabricId
      description: RoutePolicyProperties defines the resource properties.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        defaultAction:
          type: string
          description: 'Default action that needs to be applied when no condition is matched. Example: Permit | Deny.'
          default: Deny
          $ref: '#/components/schemas/CommunityActionTypes'
        statements:
          type: array
          description: Route Policy statements.
          x-ms-identifiers:
            - sequenceNumber
          items:
            description: Route Policy condition model.
            $ref: '#/components/schemas/RoutePolicyStatementProperties'
        networkFabricId:
          description: Arm Resource ID of Network Fabric.
          $ref: '#/components/schemas/NetworkFabricIdProperty'
        addressFamilyType:
          type: string
          description: AddressFamilyType. This parameter decides whether the given ipv4 or ipv6 route policy.
          default: IPv4
          minLength: 1
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            modelAsString: true
            name: AddressFamilyType
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    RoutePolicy:
      x-ms-azure-resource: true
      required:
        - location
        - properties
      description: The RoutePolicy resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/RoutePolicyProperties'
      type: object
    RoutePolicyPatch:
      x-ms-azure-resource: true
      description: The Route Policy patch resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The RoutePolicy patchable properties.
          $ref: '#/components/schemas/RoutePolicyPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    RoutePolicyPatchableProperties:
      type: object
      description: Route Policy patchable properties.
      properties:
        defaultAction:
          type: string
          description: 'Default action that needs to be applied when no condition is matched. Example: Permit | Deny.'
          default: Deny
          $ref: '#/components/schemas/CommunityActionTypes'
        statements:
          type: array
          description: Route Policy statements.
          x-ms-identifiers:
            - sequenceNumber
          items:
            description: Route Policy condition model.
            $ref: '#/components/schemas/RoutePolicyStatementProperties'
    RoutePoliciesListResult:
      type: object
      description: List of RoutePolicies.
      properties:
        value:
          type: array
          description: List of RoutePolicy resources.
          items:
            $ref: '#/components/schemas/RoutePolicy'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    RoutePolicyStatementProperties:
      description: Route Policy Statement properties.
      required:
        - sequenceNumber
        - condition
        - action
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        sequenceNumber:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: Sequence to insert to/delete from existing route.
        condition:
          description: Route policy condition properties.
          $ref: '#/components/schemas/StatementConditionProperties'
        action:
          description: Route policy action properties.
          $ref: '#/components/schemas/StatementActionProperties'
      type: object
    StatementConditionProperties:
      description: Route policy statement condition properties.
      properties:
        type:
          type: string
          description: Type of the condition used.
          default: Or
          minLength: 1
          enum:
            - Or
            - And
          x-ms-enum:
            modelAsString: true
            name: RoutePolicyConditionType
        ipPrefixId:
          type: string
          description: Arm Resource Id of IpPrefix.
        ipCommunityIds:
          type: array
          description: List of IP Community resource IDs.
          items:
            type: string
            description: ARM Resource ID of IPCommunity.
        ipExtendedCommunityIds:
          type: array
          description: List of IP Extended Community resource IDs.
          items:
            type: string
            description: ARM Resource ID of IP Extended Community.
      type: object
    StatementActionProperties:
      type: object
      description: Route policy action properties.
      properties:
        localPreference:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Local Preference of the route policy.
        actionType:
          type: string
          description: 'Action type. Example: Permit | Deny | Continue.'
          minLength: 1
          enum:
            - Permit
            - Deny
            - Continue
          x-ms-enum:
            modelAsString: true
            name: RoutePolicyActionType
        ipCommunityProperties:
          description: IP Community Properties.
          $ref: '#/components/schemas/ActionIpCommunityProperties'
        ipExtendedCommunityProperties:
          description: IP Extended Community Properties.
          $ref: '#/components/schemas/ActionIpExtendedCommunityProperties'
      required:
        - actionType
    ActionIpCommunityProperties:
      description: IP Community Properties.
      properties:
        add:
          description: List of IP Community IDs.
          $ref: '#/components/schemas/IpCommunityIdList'
        delete:
          description: List of IP Community IDs.
          $ref: '#/components/schemas/IpCommunityIdList'
        set:
          description: List of IP Community IDs.
          $ref: '#/components/schemas/IpCommunityIdList'
      type: object
    IpCommunityAddOperationProperties:
      type: object
      description: IP Community add operation properties.
      properties:
        add:
          description: List of IP Community IDs.
          $ref: '#/components/schemas/IpCommunityIdList'
    IpCommunitySetOperationProperties:
      type: object
      description: IP Community set operation properties.
      properties:
        set:
          description: List of IP Community IDs.
          $ref: '#/components/schemas/IpCommunityIdList'
    IpCommunityDeleteOperationProperties:
      type: object
      description: IP Community delete operation properties.
      properties:
        delete:
          description: List of IP Community IDs.
          $ref: '#/components/schemas/IpCommunityIdList'
    ActionIpExtendedCommunityProperties:
      description: IP Extended Community Properties.
      properties:
        add:
          description: List of IP Extended Community IDs.
          $ref: '#/components/schemas/IpExtendedCommunityIdList'
        delete:
          description: List of IP Extended Community IDs.
          $ref: '#/components/schemas/IpExtendedCommunityIdList'
        set:
          description: List of IP Extended Community IDs.
          $ref: '#/components/schemas/IpExtendedCommunityIdList'
      type: object
    IpExtendedCommunityAddOperationProperties:
      type: object
      description: IP Extended Community add operation properties.
      properties:
        add:
          description: List of IP Extended Community IDs.
          $ref: '#/components/schemas/IpExtendedCommunityIdList'
    IpExtendedCommunitySetOperationProperties:
      type: object
      description: IP Extended Community set operation properties.
      properties:
        set:
          description: List of IP Extended Community IDs.
          $ref: '#/components/schemas/IpExtendedCommunityIdList'
    IpExtendedCommunityDeleteOperationProperties:
      type: object
      description: IP Extended Community delete operation properties.
      properties:
        delete:
          description: List of IP Extended Community IDs.
          $ref: '#/components/schemas/IpExtendedCommunityIdList'
    IpCommunityIdList:
      description: IP Community ID list properties.
      type: object
      properties:
        ipCommunityIds:
          type: array
          description: List of IP Community resource IDs.
          items:
            type: string
            description: ARM Resource ID of IPCommunity.
    IpExtendedCommunityIdList:
      description: IP Extended Community Id list properties.
      type: object
      properties:
        ipExtendedCommunityIds:
          type: array
          description: List of IP Extended Community resource IDs.
          items:
            type: string
            description: ARM Resource ID of IP Extended Community.
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Accepted
        - Succeeded
        - Updating
        - Deleting
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    ConfigurationState:
      type: string
      description: Configuration state for the resource.
      readOnly: true
      enum:
        - Succeeded
        - Failed
        - Rejected
        - Accepted
        - Provisioned
        - ErrorProvisioning
        - Deprovisioning
        - Deprovisioned
        - ErrorDeprovisioning
        - DeferredControl
        - Provisioning
        - PendingCommit
      x-ms-enum:
        modelAsString: true
        name: ConfigurationState
    AdministrativeState:
      type: string
      description: State defined to represent administrative actions or post actions on a particular resource.
      enum:
        - Enabled
        - Disabled
        - MAT
        - RMA
      readOnly: true
      x-ms-enum:
        modelAsString: true
        name: AdministrativeState
    AnnotationResource:
      type: object
      description: Switch configuration entries require a description to discern between configuration groups.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
    ExtendedLocation:
      type: object
      description: The extended location.
      properties:
        type:
          type: string
          description: The extended location type.
        name:
          type: string
          description: The extended location name.
    UpdateAdministrativeState:
      description: Update administrative state on list of resources.
      properties:
        state:
          type: string
          description: Administrative state.
          enum:
            - Enable
            - Disable
          x-ms-enum:
            name: EnableDisableState
            modelAsString: true
        resourceIds:
          type: array
          description: Network Fabrics or Network Rack resource Id.
          items:
            description: Network Fabrics or Network Rack resource Id.
            type: string
      type: object
    UpdateVersion:
      type: object
      description: Update version properties.
      properties:
        version:
          type: string
          description: Specify the version.
    EnableDisableOnResources:
      type: object
      description: Update administrative state on list of resources.
      properties:
        resourceIds:
          type: array
          description: Network Fabrics or Network Rack resource Id.
          items:
            description: Network Fabrics or Network Rack resource Id.
            type: string
    CommonPostActionResponseForDeviceUpdate:
      description: Common response for device updates.
      properties:
        configurationState:
          description: Gets the configuration state.
          $ref: '#/components/schemas/ConfigurationState'
        successfulDevices:
          type: array
          description: List of ARM Resource IDs for which the given action applied successfully.
          items:
            description: ARM Resource ID.
            type: string
        failedDevices:
          type: array
          description: List of ARM Resource IDs for which the given action failed to apply.
          items:
            description: ARM Resource ID.
            type: string
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    CommonPostActionResponseForStateUpdate:
      description: Common response for the state updates.
      properties:
        configurationState:
          description: Gets the configuration state.
          $ref: '#/components/schemas/ConfigurationState'
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    ValidateConfigurationResponse:
      description: The response of the action validate configuration.
      properties:
        configurationState:
          description: Gets the configuration state.
          $ref: '#/components/schemas/ConfigurationState'
        url:
          type: string
          description: URL for the details of the response.
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    BooleanEnumProperty:
      type: string
      description: Boolean Enum. Example- True/False
      enum:
        - 'True'
        - 'False'
      x-ms-enum:
        modelAsString: true
        name: BooleanEnumProperty
    PeeringOption:
      type: string
      description: Peering option list.
      enum:
        - OptionA
        - OptionB
      x-ms-enum:
        modelAsString: true
        name: PeeringOption
    CommunityActionTypes:
      type: string
      description: 'community action types. Example: Permit | Deny.'
      enum:
        - Permit
        - Deny
      x-ms-enum:
        modelAsString: true
        name: communityActionTypes
    TagsUpdate:
      description: Base tracked resource type for PATCH updates.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
    BfdConfiguration:
      type: object
      description: BFD configuration properties
      properties:
        administrativeState:
          type: string
          description: 'Administrative state of the BfdConfiguration. Example: Enabled | Disabled.'
          default: Disabled
          enum:
            - Enabled
            - Disabled
            - MAT
            - RMA
          readOnly: true
          x-ms-enum:
            modelAsString: true
            name: BfdAdministrativeState
        intervalInMilliSeconds:
          type: integer
          format: int32
          default: 300
          description: 'Interval in milliseconds. Example: 300.'
        multiplier:
          type: integer
          format: int32
          default: 5
          description: 'Multiplier for the Bfd Configuration. Example: 5.'
    StaticRouteProperties:
      type: object
      description: Route Properties.
      properties:
        prefix:
          type: string
          minLength: 1
          description: Prefix of the route.
        nextHop:
          type: array
          minItems: 1
          description: List of next hop addresses.
          items:
            type: string
            minLength: 1
            description: Next Hop address.
      required:
        - prefix
        - nextHop
    Layer3IpPrefixProperties:
      type: object
      description: Layer 3 primary and secondary IP Address prefixes.
      properties:
        primaryIpv4Prefix:
          type: string
          description: IPv4 Address Prefix.
        primaryIpv6Prefix:
          type: string
          description: IPv6 Address Prefix.
        secondaryIpv4Prefix:
          type: string
          description: Secondary IPv4 Address Prefix.
        secondaryIpv6Prefix:
          type: string
          description: Secondary IPv6 Address Prefix.
    RouteTargetInformation:
      description: Route Target Configuration.
      type: object
      properties:
        importIpv4RouteTargets:
          type: array
          description: Route Targets to be applied for incoming routes into CE.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: 'Import IPv4 route target. Example: 65541:2001, 65542:2001.'
        importIpv6RouteTargets:
          type: array
          description: Route Targets to be applied for incoming routes from CE.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: 'Import IPv6 route target. Example: 65531, 65532.'
        exportIpv4RouteTargets:
          type: array
          description: Route Targets to be applied for outgoing routes into CE.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: 'Export IPV4 route target. Example: 65541:2001, 65542:2001.'
        exportIpv6RouteTargets:
          type: array
          description: Route Targets to be applied for outgoing routes from CE.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: 'Export IPV6 route target. Example: 65531, 65532.'
    ImportRoutePolicyInformation:
      type: object
      description: Import Route Policy Configuration.
      properties:
        importIpv4RoutePolicyId:
          description: Import IPv4 Route Policy Id.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        importIpv6RoutePolicyId:
          description: Import IPv6 Route Policy Id.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
    ExportRoutePolicyInformation:
      type: object
      description: Export Route Policy Configuration.
      properties:
        exportIpv4RoutePolicyId:
          description: Export IPv4 Route Policy Id.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportIpv6RoutePolicyId:
          description: Export IPv6 Route Policy Id.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
    CommonMatchConditions:
      type: object
      description: Defines the common match conditions of the ACL and Network Tap Rule.
      properties:
        protocolTypes:
          type: array
          minItems: 1
          description: List of the protocols that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the protocol that to needs to matched. Inputs can be <protocol-name> or <protocol-number> or <range of protocol numbers>.
        vlanMatchCondition:
          description: Vlan match condition that needs to be matched.
          $ref: '#/components/schemas/VlanMatchCondition'
        ipCondition:
          description: IP condition that needs to be matched.
          $ref: '#/components/schemas/IpMatchCondition'
    PortCondition:
      type: object
      description: Port condition that needs to be matched.
      properties:
        portType:
          type: string
          description: Port type that needs to be matched.
          minLength: 1
          enum:
            - SourcePort
            - DestinationPort
          x-ms-enum:
            modelAsString: true
            name: PortType
        layer4Protocol:
          type: string
          description: Layer4 protocol type that needs to be matched.
          minLength: 1
          enum:
            - TCP
            - UDP
          x-ms-enum:
            modelAsString: true
            name: Layer4Protocol
        ports:
          type: array
          description: List of the Ports that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Port number that needs to be matched. Inputs can be <port-number> or <range-of-ports>
        portGroupNames:
          type: array
          description: List of the port Group Names that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Port Group Name.
      required:
        - layer4Protocol
    VlanMatchCondition:
      type: object
      description: The vlan match conditions that need to be matched.
      properties:
        vlans:
          type: array
          description: List of vlans that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Specify the Vlan. Inputs can be single vlan or the range of vlans.
            example: 10-20
        innerVlans:
          type: array
          description: List of inner vlans that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Specify the inner vlan. Inputs can be single vlan or the range of vlans.
            example: 20-30
        vlanGroupNames:
          type: array
          description: List of vlan group names that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Vlan group name.
    IpMatchCondition:
      type: object
      description: Defines the condition that can be filtered using the selected IPs.
      properties:
        type:
          type: string
          description: IP Address type that needs to be matched.
          minLength: 1
          enum:
            - SourceIP
            - DestinationIP
          x-ms-enum:
            modelAsString: true
            name: SourceDestinationType
        prefixType:
          type: string
          description: IP Prefix Type that needs to be matched.
          minLength: 1
          enum:
            - Prefix
            - LongestPrefix
          x-ms-enum:
            modelAsString: true
            name: PrefixType
        ipPrefixValues:
          type: array
          description: The list of IP Prefixes that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: The valid IP Prefix.
        ipGroupNames:
          type: array
          description: The List of IP Group Names that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: IP Group Name.
    CommonDynamicMatchConfiguration:
      type: object
      description: Dynamic match configuration object.
      properties:
        ipGroups:
          type: array
          description: List of IP Groups.
          minItems: 1
          items:
            description: IP Group
            $ref: '#/components/schemas/IpGroupProperties'
        vlanGroups:
          type: array
          description: List of vlan groups.
          minItems: 1
          items:
            description: Vlan group
            $ref: '#/components/schemas/VlanGroupProperties'
        portGroups:
          type: array
          description: List of the port groups.
          minItems: 1
          items:
            description: Port Group
            $ref: '#/components/schemas/PortGroupProperties'
    IpGroupProperties:
      type: object
      description: IP Group properties.
      properties:
        name:
          type: string
          minLength: 1
          description: IP Group name.
        ipAddressType:
          description: IP Address type.
          $ref: '#/components/schemas/IPAddressTypeEnumProperty'
        ipPrefixes:
          type: array
          description: List of IP Prefixes.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: IP Prefix.
    VlanGroupProperties:
      type: object
      description: Vlan group properties.
      properties:
        name:
          type: string
          minLength: 1
          description: Vlan group name.
        vlans:
          type: array
          description: List of vlans.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Vlan. It may be a single vlan or the range of the vlans.
            example: 10-20
    PortGroupProperties:
      type: object
      description: Port Group properties.
      properties:
        name:
          type: string
          minLength: 1
          description: The name of the port group.
        ports:
          type: array
          description: List of the ports that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Port Number. Inputs can be single port or the range of ports.
            example: 10-20
    NetworkFabricControllerIdProperty:
      type: string
      description: ARM resource ID of the Network Fabric Controller.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkFabricControllers
      example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/example-controller
    NetworkFabricIdProperty:
      type: string
      description: ARM resource ID of the Network Fabric.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkFabrics
      example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkFabrics/example-networkFabric
    NetworkToNetworkInterconnectIdProperty:
      type: string
      description: ARM resource ID of the Network To network Interconnects.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects
      example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkFabrics/example-networkFabric/networkTonetworkInterconnects/example-nni
    L3IsolationDomainIdProperty:
      type: string
      description: ARM resource ID of the L3 Isolation Domain.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/l3IsolationDomains
      example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/example-l3Domain
    InternalNetworkIdProperty:
      type: string
      description: ARM resource ID of the Internal Networks.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks
      example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomain/example-l3Domain/internalNetworks/example-internalNetwork
    ExternalNetworkIdProperty:
      type: string
      description: ARM resource ID of the External Networks.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/l3IsolationDomains/externalNetworks
      example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomain/example-l3Domain/externalNetworks/example-externalNetwork
    NetworkDeviceIdProperty:
      type: string
      description: ARM resource ID of the NetworkDevice.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkDevices
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}
    NetworkInterfaceIdProperty:
      type: string
      description: ARM resource ID of the NetworkDevice/networkInterface.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkDevices/networkInterfaces
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}
    RoutePolicyIdProperty:
      type: string
      description: ARM resource ID of Route Policy.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/routePolicies
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}
    IpCommunityIdProperty:
      type: string
      description: ARM resource ID of IP Community.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/ipCommunities
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities/{ipCommunityName}
    IpExtendedCommunityIdProperty:
      type: string
      description: ARM resource ID of IP Extended Community.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/ipExtendedCommunities
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities/{ipExtendedCommunityName}
    IpPrefixIdProperty:
      type: string
      description: ARM resource ID of IP Prefix.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/ipPrefixes
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes/{ipPrefixName}
    NetworkPacketBrokerIdProperty:
      type: string
      description: ARM resource ID of Network Packet Broker.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkPacketBrokers
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers/{networkPacketBrokerName}
    NetworkTapIdProperty:
      type: string
      description: ARM resource ID of Network Tap.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkTaps
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}
    NetworkTapRuleIdProperty:
      type: string
      description: ARM resource ID of Network Tap Rule.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/networkTapRules
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}
    NeighborGroupIdProperty:
      type: string
      description: ARM resource ID of Neighbor Group.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/neighborGroups
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups/{neighborGroupName}
    AccessControlListIdProperty:
      type: string
      description: ARM resource ID of Access Control Lists.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/accessControlLists
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}
    InternetGatewayIdProperty:
      type: string
      description: ARM resource ID of Internet Gateway.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/internetGateways
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways/{internetGatewayName}
    InternetGatewayRuleIdProperty:
      type: string
      description: ARM resource ID of Internet Gateway Rule.
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ManagedNetworkFabric/internetGatewayRules
      example: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules/{internetGatewayRuleName}
    IPAddressTypeEnumProperty:
      type: string
      description: IP Address type.
      minLength: 1
      enum:
        - IPv4
        - IPv6
      x-ms-enum:
        modelAsString: true
        name: IPAddressType
    IpCommunityProperties:
      required:
        - ipCommunityRules
      description: IP Community Properties defines the resource properties.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        ipCommunityRules:
          type: array
          description: List of IP Community Rules.
          items:
            $ref: '#/components/schemas/IpCommunityRule'
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    IpCommunity:
      x-ms-azure-resource: true
      required:
        - properties
      description: The IP Community resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/IpCommunityProperties'
      type: object
    IpCommunitiesListResult:
      type: object
      description: List of IP Communities.
      properties:
        value:
          type: array
          description: List of IP Community resources.
          items:
            $ref: '#/components/schemas/IpCommunity'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    IpCommunityPatch:
      x-ms-azure-resource: true
      description: The IP Community patch resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: IP Community patchable properties.
          $ref: '#/components/schemas/IpCommunityPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    IpCommunityPatchableProperties:
      type: object
      description: IP Community patchable properties.
      properties:
        ipCommunityRules:
          type: array
          description: List of IP Community Rules.
          items:
            $ref: '#/components/schemas/IpCommunityRule'
    IpCommunityRule:
      type: object
      description: IP Community patchable properties.
      properties:
        action:
          description: 'Action to be taken on the configuration. Example: Permit | Deny.'
          $ref: '#/components/schemas/CommunityActionTypes'
        sequenceNumber:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
        wellKnownCommunities:
          type: array
          description: Supported well known Community List.
          uniqueItems: true
          items:
            description: |

              `Internet` - Advertise routes to internet community.
               `LocalAS` - Advertise routes to only localAS peers.
               `NoAdvertise` - Don't advertise routes to any peer.
              `NoExport` - Don't export to next AS.
              `GShut` - Graceful Shutdown (GSHUT) withdraw routes before terminating BGP connection.
            type: string
            minLength: 1
            enum:
              - Internet
              - LocalAS
              - NoAdvertise
              - NoExport
              - GShut
            x-ms-enum:
              modelAsString: true
              name: wellKnownCommunities
        communityMembers:
          type: array
          minItems: 1
          description: List the community members of IP Community.
          items:
            minLength: 1
            description: Community member of the IP Community. The expected formats are AA:NN >> example 65535:65535, <integer32> >> example 4294967040. The possible values of AA, NN are 0-65535 and <integer32> are 1-4294967040.
            type: string
      required:
        - action
        - sequenceNumber
        - communityMembers
    NetworkInterfaceProperties:
      description: Network Interface Properties defines the properties of the resource.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        physicalIdentifier:
          type: string
          description: Physical Identifier of the network interface.
          readOnly: true
        connectedTo:
          type: string
          description: The ARM resource id of the interface or compute server its connected to.
          readOnly: true
        interfaceType:
          type: string
          description: 'The Interface Type. Example: Management/Data'
          enum:
            - Management
            - Data
          x-ms-enum:
            modelAsString: true
            name: interfaceType
          readOnly: true
        ipv4Address:
          type: string
          description: IPv4Address of the interface.
          readOnly: true
        ipv6Address:
          type: string
          description: IPv6Address of the interface.
          readOnly: true
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    NetworkDevicePatchableProperties:
      title: Network Device updatable properties.
      type: object
      properties:
        hostName:
          type: string
          minLength: 1
          description: The host name of the device.
        serialNumber:
          type: string
          minLength: 1
          description: Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber.
          example: Vendor;DCS-7280XXX-24;12.05;JPE2111XXXX
    NetworkDevicePatchParameters:
      description: The Network Device Patch Parameters defines the patch parameters of the resource.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Network Device Patch properties.
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/NetworkDevicePatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    NetworkDeviceProperties:
      required:
        - serialNumber
      description: Network Device Properties defines the properties of the resource.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        hostName:
          type: string
          minLength: 1
          description: The host name of the device.
        serialNumber:
          type: string
          minLength: 1
          description: Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber.
          example: Vendor;DCS-7280XXX-24;12.05;JPE2111XXXX
        version:
          type: string
          description: Current version of the device as defined in SKU.
          readOnly: true
        networkDeviceSku:
          type: string
          description: Network Device SKU name.
          x-ms-mutability:
            - create
            - read
        networkDeviceRole:
          description: 'NetworkDeviceRole is the device role: Example: CE | ToR.'
          type: string
          enum:
            - CE
            - ToR
            - NPB
            - TS
            - Management
          x-ms-enum:
            modelAsString: true
            name: NetworkDeviceRole
          readOnly: true
        networkRackId:
          description: Reference to network rack resource id.
          type: string
          readOnly: true
        managementIpv4Address:
          description: Management IPv4 Address.
          type: string
          readOnly: true
        managementIpv6Address:
          description: Management IPv6 Address.
          type: string
          readOnly: true
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    NetworkDevice:
      x-ms-azure-resource: true
      description: The Network Device resource definition.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkDeviceProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkInterface:
      description: Defines the NetworkInterface resource.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkInterfaceProperties'
      type: object
    NetworkInterfacePatch:
      description: The NetworkInterfacePatch resource definition.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Network Interface Patch properties.
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
      type: object
    NetworkDevicesListResult:
      type: object
      description: List of NetworkDevices.
      properties:
        value:
          type: array
          description: List of NetworkDevice resources.
          items:
            $ref: '#/components/schemas/NetworkDevice'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    NetworkInterfacesList:
      type: object
      description: List of NetworkInterfaces.
      properties:
        value:
          type: array
          description: List of NetworkInterfaces resources.
          items:
            $ref: '#/components/schemas/NetworkInterface'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    RebootProperties:
      type: object
      description: Reboot properties.
      properties:
        rebootType:
          type: string
          description: 'Type of reboot to be performed. Example: GracefulRebootWithZTP'
          minLength: 1
          enum:
            - GracefulRebootWithZTP
            - GracefulRebootWithoutZTP
            - UngracefulRebootWithZTP
            - UngracefulRebootWithoutZTP
          x-ms-enum:
            modelAsString: true
            name: RebootType
    UpdateDeviceAdministrativeState:
      description: Update the administrative state on list of resources.
      properties:
        state:
          type: string
          description: Administrative state.
          enum:
            - RMA
            - Resync
            - GracefulQuarantine
            - Quarantine
          x-ms-enum:
            name: DeviceAdministrativeState
            modelAsString: true
        resourceIds:
          type: array
          description: Network Fabrics or Network Rack resource Id.
          items:
            description: Network Fabrics or Network Rack resource Id.
            type: string
      type: object
    NeighborGroup:
      description: Defines the Neighbor Group.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NeighborGroupProperties'
      type: object
    NeighborGroupProperties:
      description: Neighbor Group Properties defines the properties of the resource.
      required:
        - destination
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        destination:
          description: An array of destination IPv4 Addresses or IPv6 Addresses.
          $ref: '#/components/schemas/NeighborGroupDestination'
        networkTapIds:
          type: array
          description: List of NetworkTap IDs where neighbor group is associated.
          readOnly: true
          items:
            description: ARM resource ID of the Network Tap Resource.
            $ref: '#/components/schemas/NetworkTapIdProperty'
        networkTapRuleIds:
          type: array
          description: List of Network Tap Rule IDs where neighbor group is associated.
          readOnly: true
          items:
            description: ARM resource ID of the Network Tap Rules.
            $ref: '#/components/schemas/NetworkTapRuleIdProperty'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    NeighborGroupPatch:
      description: The Neighbor Group Patch definition.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Neighbor Group Patch properties.
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/NeighborGroupPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    NeighborGroupPatchableProperties:
      type: object
      description: Neighbor Group Patchable Properties defines the patchable properties of the resource.
      x-ms-client-flatten: true
      properties:
        destination:
          description: An array of destination IPv4 Addresses or IPv6 Addresses.
          $ref: '#/components/schemas/NeighborGroupDestination'
    NeighborGroupsListResult:
      type: object
      description: List of Neighbor Group.
      properties:
        value:
          type: array
          description: List of Neighbor Group resources.
          items:
            $ref: '#/components/schemas/NeighborGroup'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    NeighborGroupDestination:
      type: object
      description: An array of destination IPv4 Addresses or IPv6 Addresses.
      properties:
        ipv4Addresses:
          type: array
          maxItems: 16
          description: Array of IPv4 Addresses.
          items:
            type: string
            description: IPv4 Address.
            minLength: 1
        ipv6Addresses:
          type: array
          maxItems: 16
          description: Array of IPv6 Addresses.
          items:
            type: string
            description: IPv6 Address.
            minLength: 1
    L3IsolationDomainProperties:
      description: L3 Isolation Domain Properties defines the properties of the resource.
      required:
        - networkFabricId
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        redistributeConnectedSubnets:
          type: string
          description: 'Advertise Connected Subnets. Ex: "True" | "False".'
          default: 'True'
          minLength: 1
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: redistributeConnectedSubnets
        redistributeStaticRoutes:
          type: string
          description: 'Advertise Static Routes. Ex: "True" | "False".'
          default: 'False'
          minLength: 1
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: redistributeStaticRoutes
        aggregateRouteConfiguration:
          description: Aggregate route configurations.
          $ref: '#/components/schemas/AggregateRouteConfiguration'
        connectedSubnetRoutePolicy:
          description: Connected Subnet RoutePolicy
          $ref: '#/components/schemas/ConnectedSubnetRoutePolicy'
        networkFabricId:
          description: ARM Resource ID of the Network Fabric.
          x-ms-mutability:
            - create
            - read
          $ref: '#/components/schemas/NetworkFabricIdProperty'
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    L3IsolationDomainPatchableProperties:
      type: object
      properties:
        redistributeConnectedSubnets:
          type: string
          description: 'Advertise Connected Subnets. Ex: "True" | "False".'
          default: 'True'
          minLength: 1
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: redistributeConnectedSubnets
        redistributeStaticRoutes:
          type: string
          description: 'Advertise Static Routes. Ex: "True" | "False".'
          default: 'False'
          minLength: 1
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: redistributeStaticRoutes
        aggregateRouteConfiguration:
          description: Aggregate route configurations.
          $ref: '#/components/schemas/AggregateRouteConfiguration'
        connectedSubnetRoutePolicy:
          description: Connected Subnet RoutePolicy
          $ref: '#/components/schemas/ConnectedSubnetRoutePolicy'
      description: L3 Isolation Domain Patch Properties defines the patchable properties of the resource.
    L3IsolationDomain:
      x-ms-azure-resource: true
      required:
        - properties
      description: The L3 Isolation Domain resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/L3IsolationDomainProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    L3IsolationDomainPatch:
      x-ms-azure-resource: true
      description: The L3 Isolation Domain patch resource definition.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Resource properties.
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/L3IsolationDomainPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    L3IsolationDomainsListResult:
      type: object
      description: List of L3 Isolation Domains.
      properties:
        value:
          type: array
          description: List of L3 Isolation Domain resources.
          items:
            $ref: '#/components/schemas/L3IsolationDomain'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    InternalNetwork:
      description: Defines the Internal Network resource.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/InternalNetworkProperties'
      type: object
    InternalNetworkProperties:
      description: Internal Network Properties defines the properties of the resource.
      required:
        - vlanId
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        mtu:
          type: integer
          format: int32
          minimum: 64
          maximum: 9200
          default: 1500
          description: Maximum transmission unit. Default value is 1500.
        connectedIPv4Subnets:
          type: array
          description: List of Connected IPv4 Subnets.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Connected IPv4 Subnet properties.
            $ref: '#/components/schemas/ConnectedSubnet'
        connectedIPv6Subnets:
          type: array
          description: List of connected IPv6 Subnets.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Connected IPv6 Subnet properties.
            $ref: '#/components/schemas/ConnectedSubnet'
        importRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        importRoutePolicy:
          description: Import Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ImportRoutePolicy'
        exportRoutePolicy:
          description: Export Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ExportRoutePolicy'
        ingressAclId:
          description: Ingress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        egressAclId:
          description: Egress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        isMonitoringEnabled:
          description: To check whether monitoring of internal network is enabled or not.
          type: string
          default: 'False'
          minLength: 1
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: IsMonitoringEnabled
        extension:
          description: 'Extension. Example: NoExtension | NPB.'
          type: string
          default: NoExtension
          minLength: 1
          enum:
            - NoExtension
            - NPB
          x-ms-enum:
            modelAsString: true
            name: Extension
        vlanId:
          type: integer
          format: int32
          minimum: 100
          maximum: 4094
          description: 'Vlan identifier. Example: 1001.'
        bgpConfiguration:
          type: object
          description: BGP configuration properties.
          allOf:
            - $ref: '#/components/schemas/BgpConfiguration'
          required:
            - peerASN
        staticRouteConfiguration:
          description: Static Route Configuration properties.
          allOf:
            - $ref: '#/components/schemas/StaticRouteConfiguration'
            - $ref: '#/components/schemas/ExtensionEnumProperty'
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    InternalNetworkPatch:
      description: The InternalNetwork patch resource definition.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: InternalNetwork Patch properties.
          properties:
            bgpConfiguration:
              description: BGP configuration properties.
              $ref: '#/components/schemas/BgpConfiguration'
            staticRouteConfiguration:
              description: Static Route Configuration properties.
              $ref: '#/components/schemas/StaticRouteConfiguration'
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/InternalNetworkPatchableProperties'
      type: object
    InternalNetworkPatchableProperties:
      type: object
      description: The InternalNetwork patchable properties.
      properties:
        mtu:
          type: integer
          format: int32
          minimum: 64
          maximum: 9200
          default: 1500
          description: Maximum transmission unit. Default value is 1500.
        connectedIPv4Subnets:
          type: array
          description: List of Connected IPv4 Subnets.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Connected IPv4 Subnet properties.
            $ref: '#/components/schemas/ConnectedSubnet'
        connectedIPv6Subnets:
          type: array
          description: List of connected IPv6 Subnets.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Connected IPv6 Subnet properties.
            $ref: '#/components/schemas/ConnectedSubnet'
        importRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        importRoutePolicy:
          description: Import Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ImportRoutePolicy'
        exportRoutePolicy:
          description: Export Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ExportRoutePolicy'
        ingressAclId:
          description: Ingress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        egressAclId:
          description: Egress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        isMonitoringEnabled:
          description: To check whether monitoring of internal network is enabled or not.
          type: string
          default: 'False'
          minLength: 1
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: IsMonitoringEnabled
    InternalNetworksList:
      type: object
      description: List of Internal Networks.
      properties:
        value:
          type: array
          description: List of Internal Network resources.
          items:
            $ref: '#/components/schemas/InternalNetwork'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    ExternalNetwork:
      description: Defines the External Network resource.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/ExternalNetworkProperties'
      type: object
    ExternalNetworksList:
      type: object
      description: List of External Networks.
      properties:
        value:
          type: array
          description: List of External Network resources.
          items:
            $ref: '#/components/schemas/ExternalNetwork'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    ExternalNetworkPatch:
      description: The ExternalNetwork patch resource definition.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: External Network Patch properties.
          properties:
            peeringOption:
              description: Peering option list.
              $ref: '#/components/schemas/PeeringOption'
            optionBProperties:
              description: option B properties object
              $ref: '#/components/schemas/L3OptionBProperties'
            optionAProperties:
              type: object
              description: option A properties object
              allOf:
                - $ref: '#/components/schemas/Layer3IpPrefixProperties'
                - $ref: '#/components/schemas/L3OptionAProperties'
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/ExternalNetworkPatchableProperties'
      type: object
    ExternalNetworkPatchableProperties:
      type: object
      description: The ExternalNetwork patchable properties.
      properties:
        networkToNetworkInterconnectId:
          description: ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource.
          $ref: '#/components/schemas/NetworkToNetworkInterconnectIdProperty'
        importRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        importRoutePolicy:
          description: Import Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ImportRoutePolicy'
        exportRoutePolicy:
          description: Export Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ExportRoutePolicy'
    BgpConfiguration:
      description: BGP configuration properties
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        bfdConfiguration:
          description: BFD configuration properties
          $ref: '#/components/schemas/BfdConfiguration'
        defaultRouteOriginate:
          description: 'Originate a defaultRoute. Ex: "True" | "False".'
          $ref: '#/components/schemas/BooleanEnumProperty'
        allowAS:
          description: Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
          type: integer
          format: int32
          minimum: 0
          maximum: 10
          default: 2
        allowASOverride:
          type: string
          description: Enable Or Disable state.
          enum:
            - Enable
            - Disable
          x-ms-enum:
            modelAsString: true
            name: allowASOverride
        fabricASN:
          type: integer
          format: int64
          description: 'ASN of Network Fabric. Example: 65048.'
          readOnly: true
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: 'Peer ASN. Example: 65047.'
        ipv4ListenRangePrefixes:
          type: array
          description: List of BGP IPv4 Listen Range prefixes.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: 'IPv4 Listen Range Prefix. Example: 10.1.0.0/28.'
        ipv6ListenRangePrefixes:
          type: array
          minItems: 1
          description: List of BGP IPv6 Listen Ranges prefixes.
          items:
            type: string
            minLength: 1
            description: 'IPv6 Listen Range Prefix. Example: 3FFE:FFFF:0:CD30::/126.'
        ipv4NeighborAddress:
          type: array
          description: List with stringified IPv4 Neighbor Addresses.
          minItems: 1
          x-ms-identifiers:
            - address
          items:
            description: IPv4 Neighbor Address object.
            $ref: '#/components/schemas/NeighborAddress'
        ipv6NeighborAddress:
          type: array
          description: List with stringified IPv6 Neighbor Address.
          minItems: 1
          x-ms-identifiers:
            - address
          items:
            description: IPv6 Neighbor Address object.
            $ref: '#/components/schemas/NeighborAddress'
      type: object
    ExternalNetworkProperties:
      description: External Network Properties.
      required:
        - peeringOption
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        networkToNetworkInterconnectId:
          description: ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource.
          $ref: '#/components/schemas/NetworkToNetworkInterconnectIdProperty'
        importRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportRoutePolicyId:
          description: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        importRoutePolicy:
          description: Import Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ImportRoutePolicy'
        exportRoutePolicy:
          description: Export Route Policy either IPv4 or IPv6.
          $ref: '#/components/schemas/ExportRoutePolicy'
        peeringOption:
          description: Peering option list.
          $ref: '#/components/schemas/PeeringOption'
        optionBProperties:
          description: option B properties object
          $ref: '#/components/schemas/L3OptionBProperties'
        optionAProperties:
          type: object
          description: option A properties object
          allOf:
            - $ref: '#/components/schemas/Layer3IpPrefixProperties'
            - $ref: '#/components/schemas/L3OptionAProperties'
          required:
            - vlanId
            - peerASN
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    L3OptionAProperties:
      type: object
      description: Peering optionA properties
      properties:
        mtu:
          type: integer
          format: int32
          minimum: 64
          maximum: 9200
          default: 1500
          description: MTU to use for option A peering.
        vlanId:
          type: integer
          format: int32
          minimum: 501
          maximum: 4094
          description: 'Vlan identifier. Example : 501'
        fabricASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: 'Fabric ASN number. Example 65001 '
          readOnly: true
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: 'Peer ASN number.Example : 28'
        bfdConfiguration:
          description: BFD configuration properties
          $ref: '#/components/schemas/BfdConfiguration'
        ingressAclId:
          description: Ingress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        egressAclId:
          description: Egress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
    L3OptionBProperties:
      type: object
      description: Option B configuration.
      properties:
        importRouteTargets:
          type: array
          description: RouteTargets to be applied. This is used for the backward compatibility.
          items:
            type: string
            description: RouteTargets to be applied.
        exportRouteTargets:
          type: array
          description: RouteTargets to be applied. This is used for the backward compatibility.
          items:
            type: string
            description: RouteTargets to be applied.
        routeTargets:
          description: RouteTargets to be applied.
          $ref: '#/components/schemas/RouteTargetInformation'
    AggregateRouteConfiguration:
      type: object
      description: List of IPv4 and IPv6 aggregate routes.
      properties:
        ipv4Routes:
          type: array
          description: List of IPv4 Route prefixes.
          minItems: 1
          x-ms-identifiers:
            - prefix
          items:
            description: Aggregate IPv4 Route properties.
            $ref: '#/components/schemas/AggregateRoute'
        ipv6Routes:
          type: array
          description: List of Ipv6Routes prefixes.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Aggregate IPv6 Route properties.
            $ref: '#/components/schemas/AggregateRoute'
    AggregateRoute:
      type: object
      description: aggregateIpv4Route model.
      properties:
        prefix:
          type: string
          minLength: 1
          description: IPv4 Prefix of the aggregate Ipv4Route.
      required:
        - prefix
    ConnectedSubnetRoutePolicy:
      type: object
      description: Connected Subnet Route Policy properties.
      properties:
        exportRoutePolicyId:
          description: ARM Resource ID of the Route Policy. This is used for the backward compatibility.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportRoutePolicy:
          description: Array of ARM Resource ID of the RoutePolicies.
          $ref: '#/components/schemas/L3ExportRoutePolicy'
    L3ExportRoutePolicy:
      type: object
      description: Array of ARM Resource ID of the RoutePolicies.
      properties:
        exportIpv4RoutePolicyId:
          description: ARM Resource ID of the RoutePolicy.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportIpv6RoutePolicyId:
          description: ARM Resource ID of the RoutePolicy.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
    ConnectedSubnet:
      description: Connected Subnet properties.
      required:
        - prefix
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        prefix:
          type: string
          minLength: 1
          description: Prefix of the Connected Subnet.
      type: object
    StaticRouteConfiguration:
      type: object
      description: Static Route Configuration properties.
      properties:
        bfdConfiguration:
          description: BFD configuration properties
          $ref: '#/components/schemas/BfdConfiguration'
        ipv4Routes:
          type: array
          description: List of IPv4 Routes.
          minItems: 1
          x-ms-identifiers:
            - prefix
          items:
            description: Static IPv4 Route.
            $ref: '#/components/schemas/StaticRouteProperties'
        ipv6Routes:
          type: array
          description: List of IPv6 Routes.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Static IPv6 Route.
            $ref: '#/components/schemas/StaticRouteProperties'
    NeighborAddress:
      type: object
      description: Neighbor Address properties.
      properties:
        address:
          type: string
          minLength: 1
          description: IP Address.
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
    ImportRoutePolicy:
      type: object
      description: Import Route Policy either IPv4 or IPv6.
      properties:
        importIpv4RoutePolicyId:
          description: ARM resource ID of RoutePolicy.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        importIpv6RoutePolicyId:
          description: ARM resource ID of RoutePolicy.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
    ExportRoutePolicy:
      type: object
      description: Export Route Policy either IPv4 or IPv6.
      properties:
        exportIpv4RoutePolicyId:
          description: ARM resource ID of RoutePolicy.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
        exportIpv6RoutePolicyId:
          description: ARM resource ID of RoutePolicy.
          $ref: '#/components/schemas/RoutePolicyIdProperty'
    ExtensionEnumProperty:
      type: object
      description: Extension property.
      properties:
        extension:
          description: 'Extension. Example: NoExtension | NPB.'
          type: string
          default: NoExtension
          minLength: 1
          enum:
            - NoExtension
            - NPB
          x-ms-enum:
            modelAsString: true
            name: Extension
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    IpExtendedCommunityProperties:
      description: IP Extended Community Properties defines the resource properties.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        ipExtendedCommunityRules:
          type: array
          description: List of IP Extended Community Rules.
          items:
            $ref: '#/components/schemas/IpExtendedCommunityRule'
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    IpExtendedCommunity:
      x-ms-azure-resource: true
      required:
        - properties
      description: The IP Extended Community resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/IpExtendedCommunityProperties'
      type: object
    IpExtendedCommunityListResult:
      type: object
      description: List of IP Extended Communities.
      properties:
        value:
          type: array
          description: List of IP Extended Communities resources.
          items:
            $ref: '#/components/schemas/IpExtendedCommunity'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    IpExtendedCommunityPatch:
      x-ms-azure-resource: true
      description: The IP Extended Communities patch resource definition.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: IP Extended Community patchable properties.
          allOf:
            - $ref: '#/components/schemas/IpExtendedCommunityPatchableProperties'
            - $ref: '#/components/schemas/AnnotationResource'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    IpExtendedCommunityPatchableProperties:
      type: object
      description: IP Extended Community patchable properties.
      properties:
        ipExtendedCommunityRules:
          type: array
          description: List of IP Extended Community Rules.
          items:
            $ref: '#/components/schemas/IpExtendedCommunityRule'
      required:
        - ipExtendedCommunityRules
    IpExtendedCommunityRule:
      type: object
      description: List of IP Extended Community Rules.
      properties:
        action:
          description: 'Action to be taken on the configuration. Example: Permit | Deny.'
          $ref: '#/components/schemas/CommunityActionTypes'
        sequenceNumber:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
        routeTargets:
          type: array
          minItems: 1
          description: Route Target List.The expected formats are ASN(plain):NN >> example 4294967294:50, ASN.ASN:NN >> example 65533.65333:40, IP-address:NN >> example 10.10.10.10:65535. The possible values of ASN,NN are in range of 0-65535, ASN(plain) is in range of 0-4294967295.
          items:
            description: Route Target.
            minLength: 1
            type: string
      required:
        - action
        - sequenceNumber
        - routeTargets
    NetworkPacketBroker:
      required:
        - properties
      x-ms-azure-resource: true
      description: The NetworkPacketBroker resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkPacketBrokerProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkPacketBrokerProperties:
      type: object
      description: Network Packet Broker Properties defines the properties of the resource.
      required:
        - networkFabricId
      properties:
        networkFabricId:
          description: ARM resource ID of the Network Fabric.
          x-ms-mutability:
            - create
            - read
          $ref: '#/components/schemas/NetworkFabricIdProperty'
        networkDeviceIds:
          type: array
          description: List of ARM resource IDs of Network Devices [NPB].
          readOnly: true
          items:
            description: ARM resource ID of the Network Device.
            $ref: '#/components/schemas/NetworkDeviceIdProperty'
        sourceInterfaceIds:
          type: array
          description: List of network interfaces across NPB devices that are used to mirror source traffic.
          readOnly: true
          items:
            description: ARM resource ID of the Network Interface.
            $ref: '#/components/schemas/NetworkInterfaceIdProperty'
        networkTapIds:
          type: array
          readOnly: true
          description: List of network Tap IDs configured on NPB.
          items:
            description: ARM resource ID of the Network Tap.
            $ref: '#/components/schemas/NetworkTapIdProperty'
        neighborGroupIds:
          type: array
          readOnly: true
          description: List of neighbor group IDs configured on NPB.
          items:
            description: ARM resource ID of the Neighbor Group.
            $ref: '#/components/schemas/NetworkTapIdProperty'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    NetworkPacketBrokerPatch:
      x-ms-azure-resource: true
      description: The NetworkPacketBroker patch resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    NetworkPacketBrokersListResult:
      type: object
      description: List of NetworkPacketBrokers.
      properties:
        value:
          type: array
          description: List of NetworkPacketBroker resources.
          items:
            $ref: '#/components/schemas/NetworkPacketBroker'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    NetworkDeviceSkuProperties:
      type: object
      properties:
        model:
          type: string
          description: Model of the network device.
        manufacturer:
          type: string
          description: Manufacturer of the network device.
        supportedVersions:
          type: array
          description: List of supported version details of network device.
          x-ms-identifiers:
            - version
          items:
            description: Supported version details of the network device.
            $ref: '#/components/schemas/SupportedVersionProperties'
        supportedRoleTypes:
          type: array
          description: Available roles for the network device.
          items:
            type: string
            description: Available roles for the network device.
            enum:
              - CE
              - ToR
              - NPB
              - TS
              - Management
            x-ms-enum:
              modelAsString: true
              name: networkDeviceRoleName
        interfaces:
          type: array
          description: List of network device interfaces.
          x-ms-identifiers:
            - identifier
          items:
            description: Network device interface properties.
            $ref: '#/components/schemas/DeviceInterfaceProperties'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      required:
        - model
      description: Network Device SKU Properties defines the properties of the resource.
    NetworkDeviceSku:
      x-ms-azure-resource: true
      required:
        - properties
      description: The NetworkDeviceSku resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkDeviceSkuProperties'
      type: object
    NetworkDeviceSkusListResult:
      type: object
      description: List of Network Device SKUs.
      properties:
        value:
          type: array
          description: List of Network Device SKU resources.
          items:
            $ref: '#/components/schemas/NetworkDeviceSku'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    SupportedVersionProperties:
      description: Supported version details of the network device.
      type: object
      properties:
        version:
          type: string
          description: Operating system and firmware combined versions.
        vendorOsVersion:
          type: string
          description: Operating system version.
        vendorFirmwareVersion:
          type: string
          description: Firmware version.
        isDefault:
          description: If true newly provisioned Fabric will use this device version by default to bootstrap the network devices for the first time.
          $ref: '#/components/schemas/BooleanEnumProperty'
    DeviceInterfaceProperties:
      description: Network device interface properties.
      type: object
      properties:
        identifier:
          type: string
          description: 'Interface identifier. Example: HundredGigE0/0.'
        interfaceType:
          type: string
          description: Interface type.
        supportedConnectorTypes:
          type: array
          description: List of supported connector types.
          x-ms-identifiers:
            - connectorType
          items:
            description: Supported connector properties.
            $ref: '#/components/schemas/SupportedConnectorProperties'
    SupportedConnectorProperties:
      description: Supported connector properties.
      type: object
      properties:
        connectorType:
          type: string
          description: 'Type of connector used. Example: Optical.'
        maxSpeedInMbps:
          type: integer
          format: int32
          description: Maximum speed of the connector in Mbps.
    L2IsolationDomainProperties:
      required:
        - vlanId
        - networkFabricId
      description: L2Isolation Domain Properties defines the properties of the resource.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        networkFabricId:
          description: ARM Resource ID of the Network Fabric.
          $ref: '#/components/schemas/NetworkFabricIdProperty'
        vlanId:
          type: integer
          format: int32
          minimum: 100
          maximum: 4094
          description: 'Vlan Identifier of the Network Fabric. Example: 501.'
        mtu:
          type: integer
          format: int32
          minimum: 64
          maximum: 9200
          default: 1500
          description: Maximum transmission unit. Default value is 1500.
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    L2IsolationDomainPatchProperties:
      description: L2 Isolation Domain Patch Properties defines the patchable properties of the resource.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        mtu:
          type: integer
          format: int32
          minimum: 64
          maximum: 9200
          default: 1500
          description: Maximum transmission unit. Default value is 1500.
      type: object
    L2IsolationDomain:
      x-ms-azure-resource: true
      required:
        - properties
      description: The L2 Isolation Domain resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/L2IsolationDomainProperties'
      type: object
    L2IsolationDomainPatch:
      x-ms-azure-resource: true
      description: The L2 Isolation Domain patch resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/L2IsolationDomainPatchProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    L2IsolationDomainsListResult:
      type: object
      description: List of L2 Isolation Domains.
      properties:
        value:
          type: array
          description: Displays list of L2 Isolation Domain resources.
          items:
            $ref: '#/components/schemas/L2IsolationDomain'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    InternetGatewayRuleProperties:
      x-ms-client-flatten: true
      required:
        - ruleProperties
      description: Internet Gateway Rule Properties defines the resource properties.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        ruleProperties:
          description: Rules for the InternetGateways
          $ref: '#/components/schemas/RuleProperties'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        internetGatewayIds:
          type: array
          description: List of Internet Gateway resource Id.
          items:
            description: ARM Resource ID of the Internet Gateway.
            type: string
          readOnly: true
      type: object
    InternetGatewayRule:
      x-ms-azure-resource: true
      required:
        - properties
      description: The Internet Gateway Rule resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/InternetGatewayRuleProperties'
      type: object
    InternetGatewayRulePatch:
      x-ms-azure-resource: true
      description: The Internet Gateway Rules patch resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    InternetGatewayRulesListResult:
      type: object
      description: List of Internet Gateway Rules.
      properties:
        value:
          type: array
          description: List of Internet Gateway Rule resources.
          items:
            $ref: '#/components/schemas/InternetGatewayRule'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    RuleProperties:
      type: object
      description: Rules for the InternetGateways
      required:
        - action
        - addressList
      properties:
        action:
          type: string
          description: Specify action.
          minLength: 1
          enum:
            - Allow
            - Deny
          x-ms-enum:
            modelAsString: true
            name: action
          example: Deny
        addressList:
          type: array
          description: List of Addresses to be allowed or denied.
          minItems: 1
          items:
            description: Addresses to be allowed or denied.
            type: string
            minLength: 1
            example: 10.10.10.10:22 | www.foo.com
    NetworkFabricControllerPatchableProperties:
      title: Network Fabric Controller updatable properties
      type: object
      properties:
        infrastructureExpressRouteConnections:
          type: array
          description: As part of an update, the Infrastructure ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Infrastructure services. (This is a Mandatory attribute)
          x-ms-identifiers:
            - expressRouteCircuitId
          items:
            $ref: '#/components/schemas/ExpressRouteConnectionInformation'
        workloadExpressRouteConnections:
          type: array
          description: As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Workload services. (This is a Mandatory attribute).
          x-ms-identifiers:
            - expressRouteCircuitId
          items:
            $ref: '#/components/schemas/ExpressRouteConnectionInformation'
    NetworkFabricControllerProperties:
      description: NetworkFabricControllerProperties defines the resource properties.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        infrastructureExpressRouteConnections:
          type: array
          description: As part of an update, the Infrastructure ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Infrastructure services. (This is a Mandatory attribute)
          x-ms-identifiers:
            - expressRouteCircuitId
          items:
            $ref: '#/components/schemas/ExpressRouteConnectionInformation'
        workloadExpressRouteConnections:
          type: array
          description: As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Workload services. (This is a Mandatory attribute).
          x-ms-identifiers:
            - expressRouteCircuitId
          items:
            $ref: '#/components/schemas/ExpressRouteConnectionInformation'
        infrastructureServices:
          description: InfrastructureServices IP ranges.
          $ref: '#/components/schemas/ControllerServices'
        workloadServices:
          description: WorkloadServices IP ranges.
          $ref: '#/components/schemas/ControllerServices'
        managedResourceGroupConfiguration:
          description: Managed Resource Group configuration properties.
          $ref: '#/components/schemas/ManagedResourceGroupConfiguration'
        networkFabricIds:
          type: array
          description: The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.
          items:
            description: NetworkFabric ID (NF-ID) is a mandatory attribute, which will be consumed by Network Fabric.
            $ref: '#/components/schemas/NetworkFabricIdProperty'
          readOnly: true
        workloadManagementNetwork:
          description: A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints. This is used for the backward compatibility.
          type: boolean
          default: true
          readOnly: true
        isWorkloadManagementNetworkEnabled:
          description: A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: IsWorkloadManagementNetworkEnabled
        tenantInternetGatewayIds:
          type: array
          description: List of tenant InternetGateway resource IDs
          items:
            description: ARM resource ID of the Internet Gateway.
            $ref: '#/components/schemas/InternetGatewayIdProperty'
          readOnly: true
        ipv4AddressSpace:
          type: string
          description: IPv4 Network Fabric Controller Address Space.
          minLength: 1
          default: 10.0.0.0/19
          example: 10.10.10.10/17
        ipv6AddressSpace:
          type: string
          description: IPv6 Network Fabric Controller Address Space.
          minLength: 1
          default: FC00::/59
          example: '::/60'
        nfcSku:
          description: Network Fabric Controller SKU.
          type: string
          default: Standard
          enum:
            - Basic
            - Standard
            - HighPerformance
          x-ms-enum:
            modelAsString: true
            name: NfcSku
        provisioningState:
          description: Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.
          $ref: '#/components/schemas/ProvisioningState'
      type: object
    ExpressRouteConnectionInformation:
      type: object
      properties:
        expressRouteCircuitId:
          type: string
          description: The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/expressRouteCircuits
          example: /subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.Network/expressRouteCircuits/example-circuit
        expressRouteAuthorizationKey:
          type: string
          description: Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.
          x-ms-secret: true
      required:
        - expressRouteCircuitId
        - expressRouteAuthorizationKey
      description: The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service.
    NetworkFabricController:
      x-ms-azure-resource: true
      required:
        - properties
      description: The Network Fabric Controller resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkFabricControllerProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkFabricControllerPatch:
      title: Network Fabric Controller patch parameters
      description: The Network Fabric Controller Patch payload definition.
      properties:
        properties:
          description: Network Fabric Controller patch properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetworkFabricControllerPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    NetworkFabricControllersListResult:
      type: object
      description: List of Network Fabric Controllers.
      properties:
        value:
          type: array
          description: List of Network Fabric Controller resources.
          items:
            $ref: '#/components/schemas/NetworkFabricController'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    ControllerServices:
      type: object
      description: Network Fabric Controller services.
      properties:
        ipv4AddressSpaces:
          type: array
          description: The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.
          items:
            type: string
            description: This will provide the IPv4 Network Fabric Controller Address Space.
        ipv6AddressSpaces:
          type: array
          description: The IPv6 is not supported right now.
          items:
            type: string
            description: The IPv6 is not supported right now.
      readOnly: true
    ManagedResourceGroupConfiguration:
      type: object
      description: Managed Resource Group configuration properties.
      properties:
        name:
          type: string
          description: The NFC service will be hosted in a Managed resource group.
        location:
          type: string
          description: Managed resource group location.
    AccessControlList:
      x-ms-azure-resource: true
      required:
        - location
        - properties
      description: The Access Control List resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/AccessControlListProperties'
      type: object
    AccessControlListProperties:
      required:
        - configurationType
      description: Access Control List Properties defines the resource properties.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        configurationType:
          type: string
          description: Input method to configure Access Control List.
          enum:
            - File
            - Inline
          x-ms-enum:
            modelAsString: true
            name: ConfigurationType
        aclsUrl:
          type: string
          description: Access Control List file URL.
          format: uri
          minLength: 1
        defaultAction:
          type: string
          description: 'Default action that needs to be applied when no condition is matched. Example: Permit | Deny.'
          default: Permit
          $ref: '#/components/schemas/CommunityActionTypes'
        matchConfigurations:
          type: array
          description: List of match configurations.
          minItems: 1
          items:
            description: Match configuration.
            $ref: '#/components/schemas/AccessControlListMatchConfiguration'
        dynamicMatchConfigurations:
          type: array
          description: List of dynamic match configurations.
          minItems: 1
          items:
            description: Dynamic match configuration object.
            $ref: '#/components/schemas/CommonDynamicMatchConfiguration'
        lastSyncedTime:
          type: string
          format: date-time
          description: The last synced timestamp.
          readOnly: true
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    AccessControlListPatch:
      description: The Access Control Lists patch resource definition.
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Access Control Lists patch properties.
          type: object
          allOf:
            - $ref: '#/components/schemas/AccessControlListPatchableProperties'
            - $ref: '#/components/schemas/AnnotationResource'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    AccessControlListPatchableProperties:
      type: object
      properties:
        configurationType:
          type: string
          description: Input method to configure Access Control List.
          enum:
            - File
            - Inline
          x-ms-enum:
            modelAsString: true
            name: ConfigurationType
        aclsUrl:
          type: string
          description: Access Control List file URL.
          format: uri
          minLength: 1
        defaultAction:
          type: string
          description: 'Default action that needs to be applied when no condition is matched. Example: Permit | Deny.'
          default: Permit
          $ref: '#/components/schemas/CommunityActionTypes'
        matchConfigurations:
          type: array
          description: List of match configurations.
          minItems: 1
          items:
            description: Match configuration.
            $ref: '#/components/schemas/AccessControlListMatchConfiguration'
        dynamicMatchConfigurations:
          type: array
          description: List of dynamic match configurations.
          minItems: 1
          items:
            description: Dynamic match configuration object.
            $ref: '#/components/schemas/CommonDynamicMatchConfiguration'
      description: Access Control List Patch Properties defines the patchable resource properties.
    AccessControlListsListResult:
      type: object
      description: List of Access Control Lists.
      properties:
        value:
          type: array
          description: List of Access Control List resources.
          items:
            $ref: '#/components/schemas/AccessControlList'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    AccessControlListMatchConfiguration:
      type: object
      description: Defines the match configuration that are supported to filter the traffic.
      properties:
        matchConfigurationName:
          type: string
          description: The name of the match configuration.
          minLength: 1
        sequenceNumber:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: Sequence Number of the match configuration.
        ipAddressType:
          description: Type of IP Address. IPv4 or IPv6
          $ref: '#/components/schemas/IPAddressTypeEnumProperty'
        matchConditions:
          type: array
          description: List of the match conditions.
          minItems: 1
          items:
            description: Defines the match condition that is supported to filter the traffic.
            $ref: '#/components/schemas/AccessControlListMatchCondition'
        actions:
          type: array
          description: List of actions that need to be performed for the matched conditions.
          minItems: 1
          items:
            description: Action that need to be performed.
            $ref: '#/components/schemas/AccessControlListAction'
    AccessControlListMatchCondition:
      description: Defines the match condition that is supported to filter the traffic.
      properties:
        etherTypes:
          type: array
          minItems: 1
          description: List of ether type values that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the ether type.
        fragments:
          type: array
          minItems: 1
          description: List of IP fragment packets that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the IP fragment packets.
        ipLengths:
          type: array
          minItems: 1
          description: List of IP Lengths that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the IP length.
        ttlValues:
          type: array
          minItems: 1
          description: List of TTL [Time To Live] values that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the TTL values.
        dscpMarkings:
          type: array
          minItems: 1
          description: List of DSCP Markings that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the DSCP marking.
        portCondition:
          description: Defines the port condition that needs to be matched.
          $ref: '#/components/schemas/AccessControlListPortCondition'
        protocolTypes:
          type: array
          minItems: 1
          description: List of the protocols that need to be matched.
          items:
            type: string
            minLength: 1
            description: Specify the protocol that to needs to matched. Inputs can be <protocol-name> or <protocol-number> or <range of protocol numbers>.
        vlanMatchCondition:
          description: Vlan match condition that needs to be matched.
          $ref: '#/components/schemas/VlanMatchCondition'
        ipCondition:
          description: IP condition that needs to be matched.
          $ref: '#/components/schemas/IpMatchCondition'
      type: object
    AccessControlListPortCondition:
      description: Defines the port condition that needs to be matched.
      properties:
        flags:
          type: array
          description: 'List of protocol flags that need to be matched. Example: established | initial | <List-of-TCP-flags>. List of eligible TCP Flags are ack, fin, not-ack, not-fin, not-psh, not-rst, not-syn, not-urg, psh, rst, syn, urg'
          items:
            type: string
            description: Flag of the port.
        portType:
          type: string
          description: Port type that needs to be matched.
          minLength: 1
          enum:
            - SourcePort
            - DestinationPort
          x-ms-enum:
            modelAsString: true
            name: PortType
        layer4Protocol:
          type: string
          description: Layer4 protocol type that needs to be matched.
          minLength: 1
          enum:
            - TCP
            - UDP
          x-ms-enum:
            modelAsString: true
            name: Layer4Protocol
        ports:
          type: array
          description: List of the Ports that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Port number that needs to be matched. Inputs can be <port-number> or <range-of-ports>
        portGroupNames:
          type: array
          description: List of the port Group Names that need to be matched.
          minItems: 1
          items:
            type: string
            minLength: 1
            description: Port Group Name.
      type: object
    AccessControlListAction:
      type: object
      description: Action that need to performed.
      properties:
        type:
          type: string
          description: Type of actions that can be performed.
          minLength: 1
          enum:
            - Drop
            - Count
            - Log
          x-ms-enum:
            modelAsString: true
            name: AclActionType
        counterName:
          type: string
          minLength: 1
          description: Name of the counter block to get match count information.
    NetworkFabricSkuProperties:
      type: object
      properties:
        type:
          description: Type of Network Fabric SKU.
          type: string
          enum:
            - SingleRack
            - MultiRack
          x-ms-enum:
            modelAsString: true
            name: FabricSkuType
          readOnly: true
        maxComputeRacks:
          type: integer
          format: int32
          description: Maximum number of compute racks available for this Network Fabric SKU. The value of max count racks is 4 for 4 rack SKU and 8 for 8 rack SKU.
        maximumServerCount:
          type: integer
          format: int32
          description: Maximum number of servers available for this Network Fabric SKU.
        supportedVersions:
          type: array
          description: List of supported Network Fabric SKU versions.
          items:
            type: string
            description: Supported version.
          readOnly: true
        details:
          type: string
          description: URL providing detailed configuration of the fabric SKU.
          readOnly: true
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
      description: Network Fabric SKU Properties define properties of the resource.
    NetworkFabricSku:
      x-ms-azure-resource: true
      required:
        - properties
      description: The Network Fabric SKU resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkFabricSkuProperties'
      type: object
    NetworkFabricSkusListResult:
      type: object
      description: List of Network Fabric SKUs.
      properties:
        value:
          type: array
          description: List of Network Fabric SKU resources.
          items:
            $ref: '#/components/schemas/NetworkFabricSku'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    TerminalServerPatchableProperties:
      type: object
      description: Network and credential configuration currently applied on terminal server.
      properties:
        username:
          type: string
          minLength: 1
          description: Username for the terminal server connection.
        password:
          type: string
          minLength: 1
          description: Password for the terminal server connection.
          x-ms-secret: true
        serialNumber:
          type: string
          minLength: 1
          description: Serial Number of Terminal server.
    VpnConfigurationProperties:
      type: object
      description: Network and credential configuration currently applied on terminal server.
      properties:
        networkToNetworkInterconnectId:
          description: ARM Resource ID of the Network To Network Interconnect.
          $ref: '#/components/schemas/NetworkToNetworkInterconnectIdProperty'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
        peeringOption:
          description: Peering option list.
          $ref: '#/components/schemas/PeeringOption'
        optionBProperties:
          description: option B properties
          $ref: '#/components/schemas/OptionBProperties'
        optionAProperties:
          type: object
          description: option A properties
          allOf:
            - $ref: '#/components/schemas/OptionAProperties'
            - $ref: '#/components/schemas/Layer3IpPrefixProperties'
          required:
            - vlanId
            - peerASN
      required:
        - peeringOption
    VpnConfigurationPatchableProperties:
      type: object
      description: Network and credential configuration currently applied on terminal server.
      properties:
        networkToNetworkInterconnectId:
          description: ARM Resource ID of the Network To Network Interconnect.
          $ref: '#/components/schemas/NetworkToNetworkInterconnectIdProperty'
        peeringOption:
          description: Peering option list.
          $ref: '#/components/schemas/PeeringOption'
        optionBProperties:
          description: option B properties
          $ref: '#/components/schemas/OptionBProperties'
        optionAProperties:
          type: object
          description: option A properties
          allOf:
            - $ref: '#/components/schemas/OptionAProperties'
            - $ref: '#/components/schemas/Layer3IpPrefixProperties'
    NetworkFabricPatchableProperties:
      title: Network Fabric updatable properties.
      type: object
      properties:
        rackCount:
          type: integer
          format: int32
          minimum: 1
          maximum: 8
          description: Number of compute racks associated to Network Fabric.
        serverCountPerRack:
          type: integer
          format: int32
          minimum: 1
          maximum: 16
          description: Number of servers.Possible values are from 1-16.
        ipv4Prefix:
          type: string
          description: 'IPv4Prefix for Management Network. Example: 10.1.0.0/19.'
          minLength: 1
        ipv6Prefix:
          type: string
          description: 'IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.'
          minLength: 1
        fabricASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: ASN of CE devices for CE/PE connectivity.
        terminalServerConfiguration:
          type: object
          description: Network and credentials configuration already applied to terminal server.
          allOf:
            - $ref: '#/components/schemas/TerminalServerPatchableProperties'
            - $ref: '#/components/schemas/Layer3IpPrefixProperties'
        managementNetworkConfiguration:
          description: Configuration to be used to setup the management network.
          $ref: '#/components/schemas/ManagementNetworkConfigurationPatchableProperties'
    NetworkFabricProperties:
      required:
        - networkFabricSku
        - serverCountPerRack
        - ipv4Prefix
        - networkFabricControllerId
        - fabricASN
        - terminalServerConfiguration
        - managementNetworkConfiguration
      description: Network Fabric Properties defines the properties of the resource.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        networkFabricSku:
          type: string
          minLength: 1
          description: 'Supported Network Fabric SKU.Example: Compute / Aggregate racks. Once the user chooses a particular SKU, only supported racks can be added to the Network Fabric. The SKU determines whether it is a single / multi rack Network Fabric.'
          x-ms-mutability:
            - create
            - read
        fabricVersion:
          type: string
          description: The version of Network Fabric.
          minLength: 1
        routerIds:
          type: array
          description: Array of router IDs.
          items:
            type: string
            description: Router Id of CE to be used for MP-BGP between PE and CE
          readOnly: true
        networkFabricControllerId:
          description: Azure resource ID for the NetworkFabricController the NetworkFabric belongs.
          x-ms-mutability:
            - create
            - read
          $ref: '#/components/schemas/NetworkFabricControllerIdProperty'
        rackCount:
          type: integer
          format: int32
          minimum: 1
          maximum: 8
          description: Number of compute racks associated to Network Fabric.
        serverCountPerRack:
          type: integer
          format: int32
          minimum: 1
          maximum: 16
          description: Number of servers.Possible values are from 1-16.
        ipv4Prefix:
          type: string
          description: 'IPv4Prefix for Management Network. Example: 10.1.0.0/19.'
          minLength: 1
        ipv6Prefix:
          type: string
          description: 'IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59'
          minLength: 1
        fabricASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: ASN of CE devices for CE/PE connectivity.
        terminalServerConfiguration:
          description: Network and credentials configuration currently applied to terminal server.
          $ref: '#/components/schemas/TerminalServerConfiguration'
        managementNetworkConfiguration:
          description: Configuration to be used to setup the management network.
          $ref: '#/components/schemas/ManagementNetworkConfigurationProperties'
        racks:
          type: array
          description: List of NetworkRack resource IDs under the Network Fabric. The number of racks allowed depends on the Network Fabric SKU.
          items:
            description: NetworkRack Azure resource ID.
            type: string
          readOnly: true
        l2IsolationDomains:
          type: array
          description: List of L2 Isolation Domain resource IDs under the Network Fabric.
          items:
            description: L2 Isolation Domain Azure resource ID.
            type: string
          readOnly: true
        l3IsolationDomains:
          type: array
          description: List of L3 Isolation Domain resource IDs under the Network Fabric.
          items:
            description: L3 Isolation Domain Azure resource ID.
            type: string
          readOnly: true
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    NetworkFabric:
      x-ms-azure-resource: true
      description: The Network Fabric resource definition.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkFabricProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkFabricPatch:
      description: The Network Fabric resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Network Fabric Patch properties.
          type: object
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/NetworkFabricPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    NetworkFabricsListResult:
      type: object
      description: List of Network Fabrics.
      properties:
        value:
          type: array
          description: List of Network Fabric resources.
          items:
            $ref: '#/components/schemas/NetworkFabric'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    NetworkToNetworkInterconnect:
      x-ms-azure-resource: true
      description: The Network To Network Interconnect resource definition.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkToNetworkInterconnectProperties'
      type: object
    NetworkToNetworkInterconnectPatch:
      x-ms-azure-resource: true
      description: The Network To Network Interconnect resource patch definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/NetworkToNetworkInterconnectPatchableProperties'
      type: object
    NetworkToNetworkInterconnectProperties:
      type: object
      description: Configuration used to setup CE-PE connectivity.
      properties:
        nniType:
          type: string
          description: 'Type of NNI used. Example: CE | NPB'
          minLength: 1
          default: CE
          enum:
            - CE
            - NPB
          x-ms-enum:
            modelAsString: true
            name: nniType
        isManagementType:
          description: 'Configuration to use NNI for Infrastructure Management. Example: True/False.'
          default: 'True'
          minLength: 1
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: IsManagementType
        useOptionB:
          description: 'Based on this option layer3 parameters are mandatory. Example: True/False'
          $ref: '#/components/schemas/BooleanEnumProperty'
        layer2Configuration:
          $ref: '#/components/schemas/Layer2Configuration'
          description: Common properties for Layer2 Configuration.
        optionBLayer3Configuration:
          type: object
          description: Common properties for Layer3Configuration.
          allOf:
            - $ref: '#/components/schemas/OptionBLayer3Configuration'
          required:
            - vlanId
            - peerASN
        npbStaticRouteConfiguration:
          description: NPB Static Route Configuration properties.
          $ref: '#/components/schemas/NpbStaticRouteConfiguration'
        importRoutePolicy:
          description: Import Route Policy configuration.
          $ref: '#/components/schemas/ImportRoutePolicyInformation'
        exportRoutePolicy:
          description: Export Route Policy configuration.
          $ref: '#/components/schemas/ExportRoutePolicyInformation'
        egressAclId:
          description: Egress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        ingressAclId:
          description: Ingress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      required:
        - useOptionB
    NetworkToNetworkInterconnectPatchableProperties:
      type: object
      description: Network to Network Interconnect patchable properties.
      properties:
        layer2Configuration:
          $ref: '#/components/schemas/Layer2Configuration'
          description: Common properties for Layer2Configuration.
        optionBLayer3Configuration:
          description: Common properties for Layer3Configuration.
          $ref: '#/components/schemas/OptionBLayer3Configuration'
        npbStaticRouteConfiguration:
          description: NPB Static Route Configuration properties.
          $ref: '#/components/schemas/NpbStaticRouteConfiguration'
        importRoutePolicy:
          description: Import Route Policy information.
          $ref: '#/components/schemas/ImportRoutePolicyInformation'
        exportRoutePolicy:
          description: Export Route Policy information
          $ref: '#/components/schemas/ExportRoutePolicyInformation'
        egressAclId:
          description: Egress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
        ingressAclId:
          description: Ingress Acl. ARM resource ID of Access Control Lists.
          $ref: '#/components/schemas/AccessControlListIdProperty'
    NetworkToNetworkInterconnectsList:
      type: object
      description: List of Network To Network Interconnects.
      properties:
        value:
          type: array
          description: List of NetworkToNetworkInterconnects resources.
          items:
            $ref: '#/components/schemas/NetworkToNetworkInterconnect'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    OptionAProperties:
      type: object
      description: Peering optionA properties
      properties:
        mtu:
          type: integer
          format: int32
          minimum: 64
          maximum: 9200
          default: 1500
          description: MTU to use for option A peering.
        vlanId:
          type: integer
          format: int32
          minimum: 501
          maximum: 4094
          description: 'Vlan Id.Example : 501'
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: 'Peer ASN number.Example : 28'
        bfdConfiguration:
          description: BFD Configuration properties.
          $ref: '#/components/schemas/BfdConfiguration'
    OptionBProperties:
      type: object
      description: Option B configuration to be used for Management VPN.
      properties:
        importRouteTargets:
          type: array
          description: Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
          items:
            type: string
            description: 'Import route target. Example: 65541:2001, 65542:2001.'
        exportRouteTargets:
          type: array
          description: Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
          items:
            type: string
            description: 'Export route target. Example: 65531, 65532.'
        routeTargets:
          description: Route Targets to be applied.
          $ref: '#/components/schemas/RouteTargetInformation'
    Layer2Configuration:
      type: object
      description: Common properties for Layer2 Configuration.
      properties:
        mtu:
          type: integer
          format: int32
          minimum: 64
          maximum: 9200
          default: 1500
          description: MTU of the packets between PE & CE.
        interfaces:
          type: array
          description: List of network device interfaces resource IDs.
          minItems: 1
          items:
            description: Azure resource ID of the NetworkDevice/networkInterface.
            $ref: '#/components/schemas/NetworkInterfaceIdProperty'
    OptionBLayer3Configuration:
      description: OptionB Layer3 Configuration properties.
      properties:
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: 'ASN of PE devices for CE/PE connectivity.Example : 28'
        vlanId:
          type: integer
          format: int32
          minimum: 100
          maximum: 4094
          description: 'VLAN for CE/PE Layer 3 connectivity.Example : 501'
        fabricASN:
          type: integer
          format: int64
          readOnly: true
          description: ASN of CE devices for CE/PE connectivity.
        primaryIpv4Prefix:
          type: string
          description: IPv4 Address Prefix.
        primaryIpv6Prefix:
          type: string
          description: IPv6 Address Prefix.
        secondaryIpv4Prefix:
          type: string
          description: Secondary IPv4 Address Prefix.
        secondaryIpv6Prefix:
          type: string
          description: Secondary IPv6 Address Prefix.
      type: object
    ValidateConfigurationProperties:
      type: object
      description: Validation configuration properties.
      properties:
        validateAction:
          type: string
          description: Validate action that to be performed
          minLength: 1
          enum:
            - Cabling
            - Configuration
            - Connectivity
          x-ms-enum:
            modelAsString: true
            name: validateAction
    ManagementNetworkConfigurationPatchableProperties:
      description: Configuration to be used to setup the management network.
      type: object
      properties:
        infrastructureVpnConfiguration:
          description: VPN Configuration properties.
          $ref: '#/components/schemas/VpnConfigurationPatchableProperties'
        workloadVpnConfiguration:
          description: VPN Configuration properties.
          $ref: '#/components/schemas/VpnConfigurationPatchableProperties'
    ManagementNetworkConfigurationProperties:
      type: object
      description: Configuration to be used to setup the management network.
      required:
        - infrastructureVpnConfiguration
        - workloadVpnConfiguration
      properties:
        infrastructureVpnConfiguration:
          description: VPN Configuration properties.
          $ref: '#/components/schemas/VpnConfigurationProperties'
        workloadVpnConfiguration:
          description: VPN Configuration properties.
          $ref: '#/components/schemas/VpnConfigurationProperties'
    NpbStaticRouteConfiguration:
      type: object
      description: NPB Static Route Configuration properties.
      properties:
        bfdConfiguration:
          description: BFD Configuration properties.
          $ref: '#/components/schemas/BfdConfiguration'
        ipv4Routes:
          type: array
          description: List of IPv4 Routes.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Static IPv4 Route properties.
            $ref: '#/components/schemas/StaticRouteProperties'
        ipv6Routes:
          type: array
          description: List of IPv6 Routes.
          x-ms-identifiers:
            - prefix
          minItems: 1
          items:
            description: Static IPv6 Route properties.
            $ref: '#/components/schemas/StaticRouteProperties'
    TerminalServerConfiguration:
      description: Network and credentials configuration currently applied to terminal server.
      required:
        - username
        - password
        - primaryIpv4Prefix
        - secondaryIpv4Prefix
      properties:
        networkDeviceId:
          type: string
          description: ARM Resource ID used for the NetworkDevice.
          readOnly: true
        username:
          type: string
          minLength: 1
          description: Username for the terminal server connection.
        password:
          type: string
          minLength: 1
          description: Password for the terminal server connection.
          x-ms-secret: true
        serialNumber:
          type: string
          minLength: 1
          description: Serial Number of Terminal server.
        primaryIpv4Prefix:
          type: string
          description: IPv4 Address Prefix.
        primaryIpv6Prefix:
          type: string
          description: IPv6 Address Prefix.
        secondaryIpv4Prefix:
          type: string
          description: Secondary IPv4 Address Prefix.
        secondaryIpv6Prefix:
          type: string
          description: Secondary IPv6 Address Prefix.
      type: object
    UpgradeNetworkFabricProperties:
      properties:
        action:
          type: string
          description: Action to be performed while upgrading the fabric.
          enum:
            - Start
            - Complete
          x-ms-enum:
            name: NetworkFabricUpgradeAction
            modelAsString: true
        version:
          type: string
          description: Specify the version.
      type: object
    IpPrefixProperties:
      required:
        - ipPrefixRules
      description: IP Prefix Properties defines the properties of the resource.
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        ipPrefixRules:
          type: array
          description: The list of IP Prefix Rules.
          items:
            $ref: '#/components/schemas/IpPrefixRule'
        configurationState:
          description: Configuration state of the resource.
          $ref: '#/components/schemas/ConfigurationState'
        provisioningState:
          description: Provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
        administrativeState:
          description: Administrative state of the resource.
          $ref: '#/components/schemas/AdministrativeState'
      type: object
    IpPrefix:
      x-ms-azure-resource: true
      required:
        - location
        - properties
      description: The IP Prefix resource definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/IpPrefixProperties'
      type: object
    IpPrefixPatch:
      x-ms-azure-resource: true
      description: The IP Prefix patch resource definition.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: IP Prefix patchable properties.
          allOf:
            - $ref: '#/components/schemas/AnnotationResource'
            - $ref: '#/components/schemas/IpPrefixPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    IpPrefixPatchableProperties:
      type: object
      description: IP Prefix patchable properties.
      properties:
        ipPrefixRules:
          type: array
          description: The list of IP Prefix Rules.
          items:
            $ref: '#/components/schemas/IpPrefixRule'
    IpPrefixesListResult:
      type: object
      description: List of IP Prefixes.
      properties:
        value:
          type: array
          description: List of IP Prefix resources.
          items:
            $ref: '#/components/schemas/IpPrefix'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    IpPrefixRule:
      type: object
      description: IP Prefix Rule properties.
      properties:
        action:
          description: 'Action to be taken on the configuration. Example: Permit | Deny.'
          $ref: '#/components/schemas/CommunityActionTypes'
        sequenceNumber:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
        networkPrefix:
          type: string
          description: 'Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126 '
        condition:
          type: string
          description: Specify prefix-list bounds.
          enum:
            - EqualTo
            - GreaterThanOrEqualTo
            - LesserThanOrEqualTo
            - Range
          x-ms-enum:
            modelAsString: true
            name: condition
        subnetMaskLength:
          type: string
          description: SubnetMaskLength gives the minimum NetworkPrefix length to be matched. Possible values for IPv4 are 1 - 32 . Possible values of IPv6 are 1 - 128.
      required:
        - action
        - sequenceNumber
        - networkPrefix
    InternetGatewayProperties:
      description: Internet Gateway Properties defines the properties of the resource.
      required:
        - type
        - networkFabricControllerId
      properties:
        annotation:
          type: string
          description: Switch configuration description.
        internetGatewayRuleId:
          description: ARM Resource ID of the Internet Gateway Rule.
          $ref: '#/components/schemas/InternetGatewayRuleIdProperty'
        ipv4Address:
          type: string
          description: IPv4 Address of Internet Gateway.
          readOnly: true
        port:
          type: integer
          description: Port number of Internet Gateway.
          format: int32
          readOnly: true
        type:
          type: string
          description: Gateway Type of the resource.
          enum:
            - Infrastructure
            - Workload
          minLength: 1
          x-ms-enum:
            modelAsString: true
            name: GatewayType
        networkFabricControllerId:
          description: ARM Resource ID of the Network Fabric Controller.
          $ref: '#/components/schemas/NetworkFabricControllerIdProperty'
        provisioningState:
          description: Provisioning state of resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    InternetGatewayPatchableProperties:
      type: object
      description: Internet Gateway Patchable Properties defines the patchable properties of the resource.
      properties:
        internetGatewayRuleId:
          description: ARM Resource ID of the Internet Gateway Rule.
          $ref: '#/components/schemas/InternetGatewayRuleIdProperty'
    InternetGateway:
      x-ms-azure-resource: true
      description: The Internet Gateway resource definition.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/InternetGatewayProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    InternetGatewayPatch:
      x-ms-azure-resource: true
      description: The Internet Gateway patch resource definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/InternetGatewayPatchableProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    InternetGatewaysListResult:
      type: object
      description: List of InternetGateways.
      properties:
        value:
          type: array
          description: Displays list of Internet Gateway resources.
          items:
            $ref: '#/components/schemas/InternetGateway'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
  x-stackQL-resources:
    network_racks:
      id: azure.managed_network_fabric.network_racks
      name: network_racks
      title: network_racks
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkRacks~1{networkRackName}?api-version=2023-06-15/put'
            operationId: NetworkRacks_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRack
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkRacks~1{networkRackName}?api-version=2023-06-15/get'
            operationId: NetworkRacks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRack
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkRacks~1{networkRackName}?api-version=2023-06-15/patch'
            operationId: NetworkRacks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRack
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkRacks~1{networkRackName}?api-version=2023-06-15/delete'
            operationId: NetworkRacks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkRacks?api-version=2023-06-15/get'
            operationId: NetworkRacks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRacksListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkRacks?api-version=2023-06-15/get'
            operationId: NetworkRacks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkRacksListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_racks/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_racks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_racks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_racks/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_racks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_racks/methods/delete'
    network_taps:
      id: azure.managed_network_fabric.network_taps
      name: network_taps
      title: network_taps
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps~1{networkTapName}?api-version=2023-06-15/put'
            operationId: NetworkTaps_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTap
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps~1{networkTapName}?api-version=2023-06-15/get'
            operationId: NetworkTaps_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTap
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps~1{networkTapName}?api-version=2023-06-15/patch'
            operationId: NetworkTaps_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTap
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps~1{networkTapName}?api-version=2023-06-15/delete'
            operationId: NetworkTaps_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps?api-version=2023-06-15/get'
            operationId: NetworkTaps_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTapsListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps?api-version=2023-06-15/get'
            operationId: NetworkTaps_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTapsListResult
            objectKey: $.value
        resync:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps~1{networkTapName}~1resync?api-version=2023-06-15/post'
            operationId: NetworkTaps_Resync
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_taps/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_taps/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_taps/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_taps/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_taps/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_taps/methods/delete'
    network_taps_administrative_states:
      id: azure.managed_network_fabric.network_taps_administrative_states
      name: network_taps_administrative_states
      title: network_taps_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTaps~1{networkTapName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: NetworkTapsAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForDeviceUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    network_tap_rules:
      id: azure.managed_network_fabric.network_tap_rules
      name: network_tap_rules
      title: network_tap_rules
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules~1{networkTapRuleName}?api-version=2023-06-15/put'
            operationId: NetworkTapRules_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTapRule
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules~1{networkTapRuleName}?api-version=2023-06-15/get'
            operationId: NetworkTapRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTapRule
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules~1{networkTapRuleName}?api-version=2023-06-15/patch'
            operationId: NetworkTapRules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTapRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules~1{networkTapRuleName}?api-version=2023-06-15/delete'
            operationId: NetworkTapRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules?api-version=2023-06-15/get'
            operationId: NetworkTapRules_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTapRulesListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules?api-version=2023-06-15/get'
            operationId: NetworkTapRules_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkTapRulesListResult
            objectKey: $.value
        resync:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules~1{networkTapRuleName}~1resync?api-version=2023-06-15/post'
            operationId: NetworkTapRules_Resync
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        validate_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules~1{networkTapRuleName}~1validateConfiguration?api-version=2023-06-15/post'
            operationId: NetworkTapRules_ValidateConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateConfigurationResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_tap_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_tap_rules/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_tap_rules/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_tap_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_tap_rules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_tap_rules/methods/delete'
    network_tap_rules_administrative_states:
      id: azure.managed_network_fabric.network_tap_rules_administrative_states
      name: network_tap_rules_administrative_states
      title: network_tap_rules_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkTapRules~1{networkTapRuleName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: NetworkTapRulesAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    route_policies:
      id: azure.managed_network_fabric.route_policies
      name: route_policies
      title: route_policies
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies~1{routePolicyName}?api-version=2023-06-15/put'
            operationId: RoutePolicies_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RoutePolicy
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies~1{routePolicyName}?api-version=2023-06-15/get'
            operationId: RoutePolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RoutePolicy
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies~1{routePolicyName}?api-version=2023-06-15/patch'
            operationId: RoutePolicies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RoutePolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies~1{routePolicyName}?api-version=2023-06-15/delete'
            operationId: RoutePolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies?api-version=2023-06-15/get'
            operationId: RoutePolicies_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RoutePoliciesListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies?api-version=2023-06-15/get'
            operationId: RoutePolicies_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RoutePoliciesListResult
            objectKey: $.value
        validate_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies~1{routePolicyName}~1validateConfiguration?api-version=2023-06-15/post'
            operationId: RoutePolicies_ValidateConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateConfigurationResponse
        commit_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies~1{routePolicyName}~1commitConfiguration?api-version=2023-06-15/post'
            operationId: RoutePolicies_CommitConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/route_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/route_policies/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/route_policies/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/route_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/route_policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/route_policies/methods/delete'
    route_policies_administrative_states:
      id: azure.managed_network_fabric.route_policies_administrative_states
      name: route_policies_administrative_states
      title: route_policies_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1routePolicies~1{routePolicyName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: RoutePoliciesAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForDeviceUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    ip_communities:
      id: azure.managed_network_fabric.ip_communities
      name: ip_communities
      title: ip_communities
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipCommunities~1{ipCommunityName}?api-version=2023-06-15/put'
            operationId: IpCommunities_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpCommunity
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipCommunities~1{ipCommunityName}?api-version=2023-06-15/get'
            operationId: IpCommunities_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpCommunity
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipCommunities~1{ipCommunityName}?api-version=2023-06-15/patch'
            operationId: IpCommunities_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpCommunity
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipCommunities~1{ipCommunityName}?api-version=2023-06-15/delete'
            operationId: IpCommunities_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipCommunities?api-version=2023-06-15/get'
            operationId: IpCommunities_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpCommunitiesListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1ipCommunities?api-version=2023-06-15/get'
            operationId: IpCommunities_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpCommunitiesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ip_communities/methods/get'
          - $ref: '#/components/x-stackQL-resources/ip_communities/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/ip_communities/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_communities/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/ip_communities/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_communities/methods/delete'
    network_devices:
      id: azure.managed_network_fabric.network_devices
      name: network_devices
      title: network_devices
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}?api-version=2023-06-15/put'
            operationId: NetworkDevices_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkDevice
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}?api-version=2023-06-15/get'
            operationId: NetworkDevices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkDevice
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}?api-version=2023-06-15/patch'
            operationId: NetworkDevices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkDevice
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}?api-version=2023-06-15/delete'
            operationId: NetworkDevices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices?api-version=2023-06-15/get'
            operationId: NetworkDevices_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkDevicesListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices?api-version=2023-06-15/get'
            operationId: NetworkDevices_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkDevicesListResult
            objectKey: $.value
        reboot:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1reboot?api-version=2023-06-15/post'
            operationId: NetworkDevices_Reboot
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        refresh_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1refreshConfiguration?api-version=2023-06-15/post'
            operationId: NetworkDevices_RefreshConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1upgrade?api-version=2023-06-15/post'
            operationId: NetworkDevices_Upgrade
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_devices/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_devices/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_devices/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_devices/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_devices/methods/delete'
    network_interfaces:
      id: azure.managed_network_fabric.network_interfaces
      name: network_interfaces
      title: network_interfaces
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1networkInterfaces~1{networkInterfaceName}?api-version=2023-06-15/put'
            operationId: NetworkInterfaces_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkInterface
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1networkInterfaces~1{networkInterfaceName}?api-version=2023-06-15/get'
            operationId: NetworkInterfaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkInterface
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1networkInterfaces~1{networkInterfaceName}?api-version=2023-06-15/patch'
            operationId: NetworkInterfaces_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkInterface
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1networkInterfaces~1{networkInterfaceName}?api-version=2023-06-15/delete'
            operationId: NetworkInterfaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_network_device:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1networkInterfaces?api-version=2023-06-15/get'
            operationId: NetworkInterfaces_ListByNetworkDevice
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkInterfacesList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/list_by_network_device'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/delete'
    network_devices_administrative_states:
      id: azure.managed_network_fabric.network_devices_administrative_states
      name: network_devices_administrative_states
      title: network_devices_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: NetworkDevicesAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    network_interfaces_administrative_states:
      id: azure.managed_network_fabric.network_interfaces_administrative_states
      name: network_interfaces_administrative_states
      title: network_interfaces_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkDevices~1{networkDeviceName}~1networkInterfaces~1{networkInterfaceName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: NetworkInterfacesAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    neighbor_groups:
      id: azure.managed_network_fabric.neighbor_groups
      name: neighbor_groups
      title: neighbor_groups
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1neighborGroups~1{neighborGroupName}?api-version=2023-06-15/put'
            operationId: NeighborGroups_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NeighborGroup
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1neighborGroups~1{neighborGroupName}?api-version=2023-06-15/get'
            operationId: NeighborGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NeighborGroup
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1neighborGroups~1{neighborGroupName}?api-version=2023-06-15/patch'
            operationId: NeighborGroups_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NeighborGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1neighborGroups~1{neighborGroupName}?api-version=2023-06-15/delete'
            operationId: NeighborGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1neighborGroups?api-version=2023-06-15/get'
            operationId: NeighborGroups_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NeighborGroupsListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1neighborGroups?api-version=2023-06-15/get'
            operationId: NeighborGroups_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NeighborGroupsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/neighbor_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/neighbor_groups/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/neighbor_groups/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/neighbor_groups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/neighbor_groups/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/neighbor_groups/methods/delete'
    l3_isolation_domains:
      id: azure.managed_network_fabric.l3_isolation_domains
      name: l3_isolation_domains
      title: l3_isolation_domains
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}?api-version=2023-06-15/put'
            operationId: L3IsolationDomains_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3IsolationDomain
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}?api-version=2023-06-15/get'
            operationId: L3IsolationDomains_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3IsolationDomain
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}?api-version=2023-06-15/patch'
            operationId: L3IsolationDomains_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3IsolationDomain
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}?api-version=2023-06-15/delete'
            operationId: L3IsolationDomains_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains?api-version=2023-06-15/get'
            operationId: L3IsolationDomains_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3IsolationDomainsListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains?api-version=2023-06-15/get'
            operationId: L3IsolationDomains_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3IsolationDomainsListResult
            objectKey: $.value
        update_administrative_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: L3IsolationDomains_updateAdministrativeState
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForDeviceUpdate
        validate_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1validateConfiguration?api-version=2023-06-15/post'
            operationId: L3IsolationDomains_ValidateConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateConfigurationResponse
        commit_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1commitConfiguration?api-version=2023-06-15/post'
            operationId: L3IsolationDomains_CommitConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/l3_isolation_domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/l3_isolation_domains/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/l3_isolation_domains/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/l3_isolation_domains/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/l3_isolation_domains/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/l3_isolation_domains/methods/delete'
    internal_networks:
      id: azure.managed_network_fabric.internal_networks
      name: internal_networks
      title: internal_networks
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks~1{internalNetworkName}?api-version=2023-06-15/put'
            operationId: InternalNetworks_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternalNetwork
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks~1{internalNetworkName}?api-version=2023-06-15/get'
            operationId: InternalNetworks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternalNetwork
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks~1{internalNetworkName}?api-version=2023-06-15/patch'
            operationId: InternalNetworks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternalNetwork
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks~1{internalNetworkName}?api-version=2023-06-15/delete'
            operationId: InternalNetworks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_l3_isolation_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks?api-version=2023-06-15/get'
            operationId: InternalNetworks_ListByL3IsolationDomain
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternalNetworksList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/internal_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/internal_networks/methods/list_by_l3_isolation_domain'
        insert:
          - $ref: '#/components/x-stackQL-resources/internal_networks/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/internal_networks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/internal_networks/methods/delete'
    internal_networks_administrative_states:
      id: azure.managed_network_fabric.internal_networks_administrative_states
      name: internal_networks_administrative_states
      title: internal_networks_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks~1{internalNetworkName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: InternalNetworksAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    internal_networks_bgp_administrative_states:
      id: azure.managed_network_fabric.internal_networks_bgp_administrative_states
      name: internal_networks_bgp_administrative_states
      title: internal_networks_bgp_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks~1{internalNetworkName}~1updateBgpAdministrativeState?api-version=2023-06-15/post'
            operationId: InternalNetworksBgpAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    internal_networks_static_route_bfd_administrative_states:
      id: azure.managed_network_fabric.internal_networks_static_route_bfd_administrative_states
      name: internal_networks_static_route_bfd_administrative_states
      title: internal_networks_static_route_bfd_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1internalNetworks~1{internalNetworkName}~1updateStaticRouteBfdAdministrativeState?api-version=2023-06-15/post'
            operationId: InternalNetworksStaticRouteBfdAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    external_networks:
      id: azure.managed_network_fabric.external_networks
      name: external_networks
      title: external_networks
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1externalNetworks~1{externalNetworkName}?api-version=2023-06-15/put'
            operationId: ExternalNetworks_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExternalNetwork
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1externalNetworks~1{externalNetworkName}?api-version=2023-06-15/get'
            operationId: ExternalNetworks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExternalNetwork
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1externalNetworks~1{externalNetworkName}?api-version=2023-06-15/patch'
            operationId: ExternalNetworks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExternalNetwork
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1externalNetworks~1{externalNetworkName}?api-version=2023-06-15/delete'
            operationId: ExternalNetworks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_l3_isolation_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1externalNetworks?api-version=2023-06-15/get'
            operationId: ExternalNetworks_ListByL3IsolationDomain
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExternalNetworksList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/external_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/external_networks/methods/list_by_l3_isolation_domain'
        insert:
          - $ref: '#/components/x-stackQL-resources/external_networks/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/external_networks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/external_networks/methods/delete'
    external_networks_administrative_states:
      id: azure.managed_network_fabric.external_networks_administrative_states
      name: external_networks_administrative_states
      title: external_networks_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1externalNetworks~1{externalNetworkName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: ExternalNetworksAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    external_networks_static_route_bfd_administrative_states:
      id: azure.managed_network_fabric.external_networks_static_route_bfd_administrative_states
      name: external_networks_static_route_bfd_administrative_states
      title: external_networks_static_route_bfd_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l3IsolationDomains~1{l3IsolationDomainName}~1externalNetworks~1{externalNetworkName}~1updateStaticRouteBfdAdministrativeState?api-version=2023-06-15/post'
            operationId: ExternalNetworksStaticRouteBfdAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    ip_extended_communities:
      id: azure.managed_network_fabric.ip_extended_communities
      name: ip_extended_communities
      title: ip_extended_communities
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipExtendedCommunities~1{ipExtendedCommunityName}?api-version=2023-06-15/put'
            operationId: IpExtendedCommunities_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpExtendedCommunity
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipExtendedCommunities~1{ipExtendedCommunityName}?api-version=2023-06-15/get'
            operationId: IpExtendedCommunities_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpExtendedCommunity
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipExtendedCommunities~1{ipExtendedCommunityName}?api-version=2023-06-15/patch'
            operationId: IpExtendedCommunities_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpExtendedCommunity
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipExtendedCommunities~1{ipExtendedCommunityName}?api-version=2023-06-15/delete'
            operationId: IpExtendedCommunities_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipExtendedCommunities?api-version=2023-06-15/get'
            operationId: IpExtendedCommunities_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpExtendedCommunityListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1ipExtendedCommunities?api-version=2023-06-15/get'
            operationId: IpExtendedCommunities_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpExtendedCommunityListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ip_extended_communities/methods/get'
          - $ref: '#/components/x-stackQL-resources/ip_extended_communities/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/ip_extended_communities/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_extended_communities/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/ip_extended_communities/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_extended_communities/methods/delete'
    network_packet_brokers:
      id: azure.managed_network_fabric.network_packet_brokers
      name: network_packet_brokers
      title: network_packet_brokers
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkPacketBrokers~1{networkPacketBrokerName}?api-version=2023-06-15/put'
            operationId: NetworkPacketBrokers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkPacketBroker
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkPacketBrokers~1{networkPacketBrokerName}?api-version=2023-06-15/get'
            operationId: NetworkPacketBrokers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkPacketBroker
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkPacketBrokers~1{networkPacketBrokerName}?api-version=2023-06-15/patch'
            operationId: NetworkPacketBrokers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkPacketBroker
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkPacketBrokers~1{networkPacketBrokerName}?api-version=2023-06-15/delete'
            operationId: NetworkPacketBrokers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkPacketBrokers?api-version=2023-06-15/get'
            operationId: NetworkPacketBrokers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkPacketBrokersListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkPacketBrokers?api-version=2023-06-15/get'
            operationId: NetworkPacketBrokers_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkPacketBrokersListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_packet_brokers/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_packet_brokers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_packet_brokers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_packet_brokers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_packet_brokers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_packet_brokers/methods/delete'
    network_device_skus:
      id: azure.managed_network_fabric.network_device_skus
      name: network_device_skus
      title: network_device_skus
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkDeviceSkus~1{networkDeviceSkuName}?api-version=2023-06-15/get'
            operationId: NetworkDeviceSkus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkDeviceSku
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkDeviceSkus?api-version=2023-06-15/get'
            operationId: NetworkDeviceSkus_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkDeviceSkusListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_device_skus/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_device_skus/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.managed_network_fabric.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagedNetworkFabric~1operations?api-version=2023-06-15/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    l2_isolation_domains:
      id: azure.managed_network_fabric.l2_isolation_domains
      name: l2_isolation_domains
      title: l2_isolation_domains
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains~1{l2IsolationDomainName}?api-version=2023-06-15/put'
            operationId: L2IsolationDomains_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2IsolationDomain
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains~1{l2IsolationDomainName}?api-version=2023-06-15/get'
            operationId: L2IsolationDomains_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2IsolationDomain
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains~1{l2IsolationDomainName}?api-version=2023-06-15/patch'
            operationId: L2IsolationDomains_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2IsolationDomain
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains~1{l2IsolationDomainName}?api-version=2023-06-15/delete'
            operationId: L2IsolationDomains_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update_administrative_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains~1{l2IsolationDomainName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: L2IsolationDomains_updateAdministrativeState
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForDeviceUpdate
        validate_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains~1{l2IsolationDomainName}~1validateConfiguration?api-version=2023-06-15/post'
            operationId: L2IsolationDomains_ValidateConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateConfigurationResponse
        commit_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains~1{l2IsolationDomainName}~1commitConfiguration?api-version=2023-06-15/post'
            operationId: L2IsolationDomains_CommitConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains?api-version=2023-06-15/get'
            operationId: L2IsolationDomains_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2IsolationDomainsListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1l2IsolationDomains?api-version=2023-06-15/get'
            operationId: L2IsolationDomains_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2IsolationDomainsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/l2_isolation_domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/l2_isolation_domains/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/l2_isolation_domains/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/l2_isolation_domains/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/l2_isolation_domains/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/l2_isolation_domains/methods/delete'
    internet_gateway_rules:
      id: azure.managed_network_fabric.internet_gateway_rules
      name: internet_gateway_rules
      title: internet_gateway_rules
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGatewayRules~1{internetGatewayRuleName}?api-version=2023-06-15/put'
            operationId: InternetGatewayRules_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGatewayRule
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGatewayRules~1{internetGatewayRuleName}?api-version=2023-06-15/get'
            operationId: InternetGatewayRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGatewayRule
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGatewayRules~1{internetGatewayRuleName}?api-version=2023-06-15/patch'
            operationId: InternetGatewayRules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGatewayRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGatewayRules~1{internetGatewayRuleName}?api-version=2023-06-15/delete'
            operationId: InternetGatewayRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGatewayRules?api-version=2023-06-15/get'
            operationId: InternetGatewayRules_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGatewayRulesListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1internetGatewayRules?api-version=2023-06-15/get'
            operationId: InternetGatewayRules_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGatewayRulesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/internet_gateway_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/internet_gateway_rules/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/internet_gateway_rules/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/internet_gateway_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/internet_gateway_rules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/internet_gateway_rules/methods/delete'
    network_fabric_controllers:
      id: azure.managed_network_fabric.network_fabric_controllers
      name: network_fabric_controllers
      title: network_fabric_controllers
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricControllers~1{networkFabricControllerName}?api-version=2023-06-15/put'
            operationId: NetworkFabricControllers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricController
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricControllers~1{networkFabricControllerName}?api-version=2023-06-15/get'
            operationId: NetworkFabricControllers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricController
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricControllers~1{networkFabricControllerName}?api-version=2023-06-15/patch'
            operationId: NetworkFabricControllers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricController
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricControllers~1{networkFabricControllerName}?api-version=2023-06-15/delete'
            operationId: NetworkFabricControllers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricControllers?api-version=2023-06-15/get'
            operationId: NetworkFabricControllers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricControllersListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricControllers?api-version=2023-06-15/get'
            operationId: NetworkFabricControllers_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricControllersListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_fabric_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_fabric_controllers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_fabric_controllers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_fabric_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_fabric_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_fabric_controllers/methods/delete'
    access_control_lists:
      id: azure.managed_network_fabric.access_control_lists
      name: access_control_lists
      title: access_control_lists
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists~1{accessControlListName}?api-version=2023-06-15/put'
            operationId: AccessControlLists_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlList
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists~1{accessControlListName}?api-version=2023-06-15/get'
            operationId: AccessControlLists_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlList
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists~1{accessControlListName}?api-version=2023-06-15/patch'
            operationId: AccessControlLists_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlList
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists~1{accessControlListName}?api-version=2023-06-15/delete'
            operationId: AccessControlLists_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists?api-version=2023-06-15/get'
            operationId: AccessControlLists_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlListsListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists?api-version=2023-06-15/get'
            operationId: AccessControlLists_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessControlListsListResult
            objectKey: $.value
        resync:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists~1{accessControlListName}~1resync?api-version=2023-06-15/post'
            operationId: AccessControlLists_Resync
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        validate_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists~1{accessControlListName}~1validateConfiguration?api-version=2023-06-15/post'
            operationId: AccessControlLists_ValidateConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateConfigurationResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_control_lists/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_control_lists/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/access_control_lists/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_control_lists/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/access_control_lists/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_control_lists/methods/delete'
    access_control_lists_administrative_states:
      id: azure.managed_network_fabric.access_control_lists_administrative_states
      name: access_control_lists_administrative_states
      title: access_control_lists_administrative_states
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1accessControlLists~1{accessControlListName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: AccessControlListsAdministrativeState_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    network_fabric_skus:
      id: azure.managed_network_fabric.network_fabric_skus
      name: network_fabric_skus
      title: network_fabric_skus
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricSkus~1{networkFabricSkuName}?api-version=2023-06-15/get'
            operationId: NetworkFabricSkus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricSku
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabricSkus?api-version=2023-06-15/get'
            operationId: NetworkFabricSkus_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricSkusListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_fabric_skus/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_fabric_skus/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    network_fabrics:
      id: azure.managed_network_fabric.network_fabrics
      name: network_fabrics
      title: network_fabrics
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}?api-version=2023-06-15/put'
            operationId: NetworkFabrics_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabric
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}?api-version=2023-06-15/get'
            operationId: NetworkFabrics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabric
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}?api-version=2023-06-15/patch'
            operationId: NetworkFabrics_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabric
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}?api-version=2023-06-15/delete'
            operationId: NetworkFabrics_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics?api-version=2023-06-15/get'
            operationId: NetworkFabrics_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricsListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics?api-version=2023-06-15/get'
            operationId: NetworkFabrics_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkFabricsListResult
            objectKey: $.value
        provision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1provision?api-version=2023-06-15/post'
            operationId: NetworkFabrics_provision
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForDeviceUpdate
        deprovision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1deprovision?api-version=2023-06-15/post'
            operationId: NetworkFabrics_deprovision
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForDeviceUpdate
        upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1upgrade?api-version=2023-06-15/post'
            operationId: NetworkFabrics_upgrade
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        refresh_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1refreshConfiguration?api-version=2023-06-15/post'
            operationId: NetworkFabrics_refreshConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        validate_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1validateConfiguration?api-version=2023-06-15/post'
            operationId: NetworkFabrics_ValidateConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateConfigurationResponse
        commit_configuration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1commitConfiguration?api-version=2023-06-15/post'
            operationId: NetworkFabrics_CommitConfiguration
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_fabrics/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_fabrics/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_fabrics/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_fabrics/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_fabrics/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_fabrics/methods/delete'
    network_fabrics_workload_management_bfd_configurations:
      id: azure.managed_network_fabric.network_fabrics_workload_management_bfd_configurations
      name: network_fabrics_workload_management_bfd_configurations
      title: network_fabrics_workload_management_bfd_configurations
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1updateWorkloadManagementBfdConfiguration?api-version=2023-06-15/post'
            operationId: NetworkFabricsWorkloadManagementBfdConfiguration_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    network_fabrics_infra_management_bfd_configurations:
      id: azure.managed_network_fabric.network_fabrics_infra_management_bfd_configurations
      name: network_fabrics_infra_management_bfd_configurations
      title: network_fabrics_infra_management_bfd_configurations
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1updateInfraManagementBfdConfiguration?api-version=2023-06-15/post'
            operationId: NetworkFabricsInfraManagementBfdConfiguration_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    network_fabrics_topologies:
      id: azure.managed_network_fabric.network_fabrics_topologies
      name: network_fabrics_topologies
      title: network_fabrics_topologies
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1getTopology?api-version=2023-06-15/post'
            operationId: NetworkFabricsTopology_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateConfigurationResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_fabrics_topologies/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    network_to_network_interconnects:
      id: azure.managed_network_fabric.network_to_network_interconnects
      name: network_to_network_interconnects
      title: network_to_network_interconnects
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1networkToNetworkInterconnects~1{networkToNetworkInterconnectName}?api-version=2023-06-15/put'
            operationId: NetworkToNetworkInterconnects_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkToNetworkInterconnect
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1networkToNetworkInterconnects~1{networkToNetworkInterconnectName}?api-version=2023-06-15/get'
            operationId: NetworkToNetworkInterconnects_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkToNetworkInterconnect
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1networkToNetworkInterconnects~1{networkToNetworkInterconnectName}?api-version=2023-06-15/patch'
            operationId: NetworkToNetworkInterconnects_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkToNetworkInterconnect
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1networkToNetworkInterconnects~1{networkToNetworkInterconnectName}?api-version=2023-06-15/delete'
            operationId: NetworkToNetworkInterconnects_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_network_fabric:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1networkToNetworkInterconnects?api-version=2023-06-15/get'
            operationId: NetworkToNetworkInterconnects_ListByNetworkFabric
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkToNetworkInterconnectsList
            objectKey: $.value
        update_npb_static_route_bfd_administrative_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1networkToNetworkInterconnects~1{networkToNetworkInterconnectName}~1updateNpbStaticRouteBfdAdministrativeState?api-version=2023-06-15/post'
            operationId: NetworkToNetworkInterconnects_updateNpbStaticRouteBfdAdministrativeState
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
        update_administrative_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1networkFabrics~1{networkFabricName}~1networkToNetworkInterconnects~1{networkToNetworkInterconnectName}~1updateAdministrativeState?api-version=2023-06-15/post'
            operationId: NetworkToNetworkInterconnects_updateAdministrativeState
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommonPostActionResponseForStateUpdate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_to_network_interconnects/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_to_network_interconnects/methods/list_by_network_fabric'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_to_network_interconnects/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_to_network_interconnects/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_to_network_interconnects/methods/delete'
    ip_prefixes:
      id: azure.managed_network_fabric.ip_prefixes
      name: ip_prefixes
      title: ip_prefixes
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipPrefixes~1{ipPrefixName}?api-version=2023-06-15/put'
            operationId: IpPrefixes_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpPrefix
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipPrefixes~1{ipPrefixName}?api-version=2023-06-15/get'
            operationId: IpPrefixes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpPrefix
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipPrefixes~1{ipPrefixName}?api-version=2023-06-15/patch'
            operationId: IpPrefixes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpPrefix
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipPrefixes~1{ipPrefixName}?api-version=2023-06-15/delete'
            operationId: IpPrefixes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1ipPrefixes?api-version=2023-06-15/get'
            operationId: IpPrefixes_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpPrefixesListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1ipPrefixes?api-version=2023-06-15/get'
            operationId: IpPrefixes_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IpPrefixesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ip_prefixes/methods/get'
          - $ref: '#/components/x-stackQL-resources/ip_prefixes/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/ip_prefixes/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_prefixes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/ip_prefixes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_prefixes/methods/delete'
    internet_gateways:
      id: azure.managed_network_fabric.internet_gateways
      name: internet_gateways
      title: internet_gateways
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGateways~1{internetGatewayName}?api-version=2023-06-15/put'
            operationId: InternetGateways_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGateway
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGateways~1{internetGatewayName}?api-version=2023-06-15/get'
            operationId: InternetGateways_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGateway
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGateways~1{internetGatewayName}?api-version=2023-06-15/patch'
            operationId: InternetGateways_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGateway
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGateways~1{internetGatewayName}?api-version=2023-06-15/delete'
            operationId: InternetGateways_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetworkFabric~1internetGateways?api-version=2023-06-15/get'
            operationId: InternetGateways_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGatewaysListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetworkFabric~1internetGateways?api-version=2023-06-15/get'
            operationId: InternetGateways_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InternetGatewaysListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/get'
          - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/delete'
    vw_network_racks:
      id: azure.managed_network_fabric.vw_network_racks
      name: vw_network_racks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.networkRackType') as "network_rack_type",
              JSON_EXTRACT(properties, '$.networkFabricId') as "network_fabric_id",
              JSON_EXTRACT(properties, '$.networkDevices') as "network_devices",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              networkRackName
              FROM azure.managed_network_fabric.network_racks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.networkRackType') as "network_rack_type",
                json_extract_path_text(properties, '$.networkFabricId') as "network_fabric_id",
                json_extract_path_text(properties, '$.networkDevices') as "network_devices",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                networkRackName
                FROM azure.managed_network_fabric.network_racks
                WHERE subscriptionId = 'replace-me';
    vw_network_taps:
      id: azure.managed_network_fabric.vw_network_taps
      name: vw_network_taps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.networkPacketBrokerId') as "network_packet_broker_id",
              JSON_EXTRACT(properties, '$.sourceTapRuleId') as "source_tap_rule_id",
              JSON_EXTRACT(properties, '$.destinations') as "destinations",
              JSON_EXTRACT(properties, '$.pollingType') as "polling_type",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              networkTapName
              FROM azure.managed_network_fabric.network_taps
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.networkPacketBrokerId') as "network_packet_broker_id",
                json_extract_path_text(properties, '$.sourceTapRuleId') as "source_tap_rule_id",
                json_extract_path_text(properties, '$.destinations') as "destinations",
                json_extract_path_text(properties, '$.pollingType') as "polling_type",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                networkTapName
                FROM azure.managed_network_fabric.network_taps
                WHERE subscriptionId = 'replace-me';
    vw_network_tap_rules:
      id: azure.managed_network_fabric.vw_network_tap_rules
      name: vw_network_tap_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.configurationType') as "configuration_type",
              JSON_EXTRACT(properties, '$.tapRulesUrl') as "tap_rules_url",
              JSON_EXTRACT(properties, '$.matchConfigurations') as "match_configurations",
              JSON_EXTRACT(properties, '$.dynamicMatchConfigurations') as "dynamic_match_configurations",
              JSON_EXTRACT(properties, '$.networkTapId') as "network_tap_id",
              JSON_EXTRACT(properties, '$.pollingIntervalInSeconds') as "polling_interval_in_seconds",
              JSON_EXTRACT(properties, '$.lastSyncedTime') as "last_synced_time",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              networkTapRuleName
              FROM azure.managed_network_fabric.network_tap_rules
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.configurationType') as "configuration_type",
                json_extract_path_text(properties, '$.tapRulesUrl') as "tap_rules_url",
                json_extract_path_text(properties, '$.matchConfigurations') as "match_configurations",
                json_extract_path_text(properties, '$.dynamicMatchConfigurations') as "dynamic_match_configurations",
                json_extract_path_text(properties, '$.networkTapId') as "network_tap_id",
                json_extract_path_text(properties, '$.pollingIntervalInSeconds') as "polling_interval_in_seconds",
                json_extract_path_text(properties, '$.lastSyncedTime') as "last_synced_time",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                networkTapRuleName
                FROM azure.managed_network_fabric.network_tap_rules
                WHERE subscriptionId = 'replace-me';
    vw_route_policies:
      id: azure.managed_network_fabric.vw_route_policies
      name: vw_route_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.defaultAction') as "default_action",
              JSON_EXTRACT(properties, '$.statements') as "statements",
              JSON_EXTRACT(properties, '$.networkFabricId') as "network_fabric_id",
              JSON_EXTRACT(properties, '$.addressFamilyType') as "address_family_type",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              routePolicyName
              FROM azure.managed_network_fabric.route_policies
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.defaultAction') as "default_action",
                json_extract_path_text(properties, '$.statements') as "statements",
                json_extract_path_text(properties, '$.networkFabricId') as "network_fabric_id",
                json_extract_path_text(properties, '$.addressFamilyType') as "address_family_type",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                routePolicyName
                FROM azure.managed_network_fabric.route_policies
                WHERE subscriptionId = 'replace-me';
    vw_ip_communities:
      id: azure.managed_network_fabric.vw_ip_communities
      name: vw_ip_communities
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.ipCommunityRules') as "ip_community_rules",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              ipCommunityName
              FROM azure.managed_network_fabric.ip_communities
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.ipCommunityRules') as "ip_community_rules",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                ipCommunityName
                FROM azure.managed_network_fabric.ip_communities
                WHERE subscriptionId = 'replace-me';
    vw_network_devices:
      id: azure.managed_network_fabric.vw_network_devices
      name: vw_network_devices
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.serialNumber') as "serial_number",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.networkDeviceSku') as "network_device_sku",
              JSON_EXTRACT(properties, '$.networkDeviceRole') as "network_device_role",
              JSON_EXTRACT(properties, '$.networkRackId') as "network_rack_id",
              JSON_EXTRACT(properties, '$.managementIpv4Address') as "management_ipv4_address",
              JSON_EXTRACT(properties, '$.managementIpv6Address') as "management_ipv6_address",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              networkDeviceName
              FROM azure.managed_network_fabric.network_devices
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.serialNumber') as "serial_number",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.networkDeviceSku') as "network_device_sku",
                json_extract_path_text(properties, '$.networkDeviceRole') as "network_device_role",
                json_extract_path_text(properties, '$.networkRackId') as "network_rack_id",
                json_extract_path_text(properties, '$.managementIpv4Address') as "management_ipv4_address",
                json_extract_path_text(properties, '$.managementIpv6Address') as "management_ipv6_address",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                networkDeviceName
                FROM azure.managed_network_fabric.network_devices
                WHERE subscriptionId = 'replace-me';
    vw_network_interfaces:
      id: azure.managed_network_fabric.vw_network_interfaces
      name: vw_network_interfaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.physicalIdentifier') as "physical_identifier",
              JSON_EXTRACT(properties, '$.connectedTo') as "connected_to",
              JSON_EXTRACT(properties, '$.interfaceType') as "interface_type",
              JSON_EXTRACT(properties, '$.ipv4Address') as "ipv4_address",
              JSON_EXTRACT(properties, '$.ipv6Address') as "ipv6_address",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              networkDeviceName,
              networkInterfaceName
              FROM azure.managed_network_fabric.network_interfaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND networkDeviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.physicalIdentifier') as "physical_identifier",
                json_extract_path_text(properties, '$.connectedTo') as "connected_to",
                json_extract_path_text(properties, '$.interfaceType') as "interface_type",
                json_extract_path_text(properties, '$.ipv4Address') as "ipv4_address",
                json_extract_path_text(properties, '$.ipv6Address') as "ipv6_address",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                networkDeviceName,
                networkInterfaceName
                FROM azure.managed_network_fabric.network_interfaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND networkDeviceName = 'replace-me';
    vw_neighbor_groups:
      id: azure.managed_network_fabric.vw_neighbor_groups
      name: vw_neighbor_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.destination') as "destination",
              JSON_EXTRACT(properties, '$.networkTapIds') as "network_tap_ids",
              JSON_EXTRACT(properties, '$.networkTapRuleIds') as "network_tap_rule_ids",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              neighborGroupName
              FROM azure.managed_network_fabric.neighbor_groups
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.destination') as "destination",
                json_extract_path_text(properties, '$.networkTapIds') as "network_tap_ids",
                json_extract_path_text(properties, '$.networkTapRuleIds') as "network_tap_rule_ids",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                neighborGroupName
                FROM azure.managed_network_fabric.neighbor_groups
                WHERE subscriptionId = 'replace-me';
    vw_l3_isolation_domains:
      id: azure.managed_network_fabric.vw_l3_isolation_domains
      name: vw_l3_isolation_domains
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.redistributeConnectedSubnets') as "redistribute_connected_subnets",
              JSON_EXTRACT(properties, '$.redistributeStaticRoutes') as "redistribute_static_routes",
              JSON_EXTRACT(properties, '$.aggregateRouteConfiguration') as "aggregate_route_configuration",
              JSON_EXTRACT(properties, '$.connectedSubnetRoutePolicy') as "connected_subnet_route_policy",
              JSON_EXTRACT(properties, '$.networkFabricId') as "network_fabric_id",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              l3IsolationDomainName
              FROM azure.managed_network_fabric.l3_isolation_domains
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.redistributeConnectedSubnets') as "redistribute_connected_subnets",
                json_extract_path_text(properties, '$.redistributeStaticRoutes') as "redistribute_static_routes",
                json_extract_path_text(properties, '$.aggregateRouteConfiguration') as "aggregate_route_configuration",
                json_extract_path_text(properties, '$.connectedSubnetRoutePolicy') as "connected_subnet_route_policy",
                json_extract_path_text(properties, '$.networkFabricId') as "network_fabric_id",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                l3IsolationDomainName
                FROM azure.managed_network_fabric.l3_isolation_domains
                WHERE subscriptionId = 'replace-me';
    vw_internal_networks:
      id: azure.managed_network_fabric.vw_internal_networks
      name: vw_internal_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.mtu') as "mtu",
              JSON_EXTRACT(properties, '$.connectedIPv4Subnets') as "connected_ipv4_subnets",
              JSON_EXTRACT(properties, '$.connectedIPv6Subnets') as "connected_ipv6_subnets",
              JSON_EXTRACT(properties, '$.importRoutePolicyId') as "import_route_policy_id",
              JSON_EXTRACT(properties, '$.exportRoutePolicyId') as "export_route_policy_id",
              JSON_EXTRACT(properties, '$.importRoutePolicy') as "import_route_policy",
              JSON_EXTRACT(properties, '$.exportRoutePolicy') as "export_route_policy",
              JSON_EXTRACT(properties, '$.ingressAclId') as "ingress_acl_id",
              JSON_EXTRACT(properties, '$.egressAclId') as "egress_acl_id",
              JSON_EXTRACT(properties, '$.isMonitoringEnabled') as "is_monitoring_enabled",
              JSON_EXTRACT(properties, '$.extension') as "extension",
              JSON_EXTRACT(properties, '$.vlanId') as "vlan_id",
              JSON_EXTRACT(properties, '$.bgpConfiguration') as "bgp_configuration",
              JSON_EXTRACT(properties, '$.staticRouteConfiguration') as "static_route_configuration",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              l3IsolationDomainName,
              internalNetworkName
              FROM azure.managed_network_fabric.internal_networks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND l3IsolationDomainName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.mtu') as "mtu",
                json_extract_path_text(properties, '$.connectedIPv4Subnets') as "connected_ipv4_subnets",
                json_extract_path_text(properties, '$.connectedIPv6Subnets') as "connected_ipv6_subnets",
                json_extract_path_text(properties, '$.importRoutePolicyId') as "import_route_policy_id",
                json_extract_path_text(properties, '$.exportRoutePolicyId') as "export_route_policy_id",
                json_extract_path_text(properties, '$.importRoutePolicy') as "import_route_policy",
                json_extract_path_text(properties, '$.exportRoutePolicy') as "export_route_policy",
                json_extract_path_text(properties, '$.ingressAclId') as "ingress_acl_id",
                json_extract_path_text(properties, '$.egressAclId') as "egress_acl_id",
                json_extract_path_text(properties, '$.isMonitoringEnabled') as "is_monitoring_enabled",
                json_extract_path_text(properties, '$.extension') as "extension",
                json_extract_path_text(properties, '$.vlanId') as "vlan_id",
                json_extract_path_text(properties, '$.bgpConfiguration') as "bgp_configuration",
                json_extract_path_text(properties, '$.staticRouteConfiguration') as "static_route_configuration",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                l3IsolationDomainName,
                internalNetworkName
                FROM azure.managed_network_fabric.internal_networks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND l3IsolationDomainName = 'replace-me';
    vw_external_networks:
      id: azure.managed_network_fabric.vw_external_networks
      name: vw_external_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.networkToNetworkInterconnectId') as "network_to_network_interconnect_id",
              JSON_EXTRACT(properties, '$.importRoutePolicyId') as "import_route_policy_id",
              JSON_EXTRACT(properties, '$.exportRoutePolicyId') as "export_route_policy_id",
              JSON_EXTRACT(properties, '$.importRoutePolicy') as "import_route_policy",
              JSON_EXTRACT(properties, '$.exportRoutePolicy') as "export_route_policy",
              JSON_EXTRACT(properties, '$.peeringOption') as "peering_option",
              JSON_EXTRACT(properties, '$.optionBProperties') as "option_b_properties",
              JSON_EXTRACT(properties, '$.optionAProperties') as "option_a_properties",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              l3IsolationDomainName,
              externalNetworkName
              FROM azure.managed_network_fabric.external_networks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND l3IsolationDomainName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.networkToNetworkInterconnectId') as "network_to_network_interconnect_id",
                json_extract_path_text(properties, '$.importRoutePolicyId') as "import_route_policy_id",
                json_extract_path_text(properties, '$.exportRoutePolicyId') as "export_route_policy_id",
                json_extract_path_text(properties, '$.importRoutePolicy') as "import_route_policy",
                json_extract_path_text(properties, '$.exportRoutePolicy') as "export_route_policy",
                json_extract_path_text(properties, '$.peeringOption') as "peering_option",
                json_extract_path_text(properties, '$.optionBProperties') as "option_b_properties",
                json_extract_path_text(properties, '$.optionAProperties') as "option_a_properties",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                l3IsolationDomainName,
                externalNetworkName
                FROM azure.managed_network_fabric.external_networks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND l3IsolationDomainName = 'replace-me';
    vw_ip_extended_communities:
      id: azure.managed_network_fabric.vw_ip_extended_communities
      name: vw_ip_extended_communities
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.ipExtendedCommunityRules') as "ip_extended_community_rules",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              ipExtendedCommunityName
              FROM azure.managed_network_fabric.ip_extended_communities
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.ipExtendedCommunityRules') as "ip_extended_community_rules",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                ipExtendedCommunityName
                FROM azure.managed_network_fabric.ip_extended_communities
                WHERE subscriptionId = 'replace-me';
    vw_network_packet_brokers:
      id: azure.managed_network_fabric.vw_network_packet_brokers
      name: vw_network_packet_brokers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.networkFabricId') as "network_fabric_id",
              JSON_EXTRACT(properties, '$.networkDeviceIds') as "network_device_ids",
              JSON_EXTRACT(properties, '$.sourceInterfaceIds') as "source_interface_ids",
              JSON_EXTRACT(properties, '$.networkTapIds') as "network_tap_ids",
              JSON_EXTRACT(properties, '$.neighborGroupIds') as "neighbor_group_ids",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              networkPacketBrokerName
              FROM azure.managed_network_fabric.network_packet_brokers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.networkFabricId') as "network_fabric_id",
                json_extract_path_text(properties, '$.networkDeviceIds') as "network_device_ids",
                json_extract_path_text(properties, '$.sourceInterfaceIds') as "source_interface_ids",
                json_extract_path_text(properties, '$.networkTapIds') as "network_tap_ids",
                json_extract_path_text(properties, '$.neighborGroupIds') as "neighbor_group_ids",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                networkPacketBrokerName
                FROM azure.managed_network_fabric.network_packet_brokers
                WHERE subscriptionId = 'replace-me';
    vw_network_device_skus:
      id: azure.managed_network_fabric.vw_network_device_skus
      name: vw_network_device_skus
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.model') as "model",
              JSON_EXTRACT(properties, '$.manufacturer') as "manufacturer",
              JSON_EXTRACT(properties, '$.supportedVersions') as "supported_versions",
              JSON_EXTRACT(properties, '$.supportedRoleTypes') as "supported_role_types",
              JSON_EXTRACT(properties, '$.interfaces') as "interfaces",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              networkDeviceSkuName
              FROM azure.managed_network_fabric.network_device_skus
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.model') as "model",
                json_extract_path_text(properties, '$.manufacturer') as "manufacturer",
                json_extract_path_text(properties, '$.supportedVersions') as "supported_versions",
                json_extract_path_text(properties, '$.supportedRoleTypes') as "supported_role_types",
                json_extract_path_text(properties, '$.interfaces') as "interfaces",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                networkDeviceSkuName
                FROM azure.managed_network_fabric.network_device_skus
                WHERE subscriptionId = 'replace-me';
    vw_l2_isolation_domains:
      id: azure.managed_network_fabric.vw_l2_isolation_domains
      name: vw_l2_isolation_domains
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.networkFabricId') as "network_fabric_id",
              JSON_EXTRACT(properties, '$.vlanId') as "vlan_id",
              JSON_EXTRACT(properties, '$.mtu') as "mtu",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              l2IsolationDomainName
              FROM azure.managed_network_fabric.l2_isolation_domains
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.networkFabricId') as "network_fabric_id",
                json_extract_path_text(properties, '$.vlanId') as "vlan_id",
                json_extract_path_text(properties, '$.mtu') as "mtu",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                l2IsolationDomainName
                FROM azure.managed_network_fabric.l2_isolation_domains
                WHERE subscriptionId = 'replace-me';
    vw_internet_gateway_rules:
      id: azure.managed_network_fabric.vw_internet_gateway_rules
      name: vw_internet_gateway_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.ruleProperties') as "rule_properties",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.internetGatewayIds') as "internet_gateway_ids",
              subscriptionId,
              resourceGroupName,
              internetGatewayRuleName
              FROM azure.managed_network_fabric.internet_gateway_rules
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.ruleProperties') as "rule_properties",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.internetGatewayIds') as "internet_gateway_ids",
                subscriptionId,
                resourceGroupName,
                internetGatewayRuleName
                FROM azure.managed_network_fabric.internet_gateway_rules
                WHERE subscriptionId = 'replace-me';
    vw_network_fabric_controllers:
      id: azure.managed_network_fabric.vw_network_fabric_controllers
      name: vw_network_fabric_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.infrastructureExpressRouteConnections') as "infrastructure_express_route_connections",
              JSON_EXTRACT(properties, '$.workloadExpressRouteConnections') as "workload_express_route_connections",
              JSON_EXTRACT(properties, '$.infrastructureServices') as "infrastructure_services",
              JSON_EXTRACT(properties, '$.workloadServices') as "workload_services",
              JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
              JSON_EXTRACT(properties, '$.networkFabricIds') as "network_fabric_ids",
              JSON_EXTRACT(properties, '$.workloadManagementNetwork') as "workload_management_network",
              JSON_EXTRACT(properties, '$.isWorkloadManagementNetworkEnabled') as "is_workload_management_network_enabled",
              JSON_EXTRACT(properties, '$.tenantInternetGatewayIds') as "tenant_internet_gateway_ids",
              JSON_EXTRACT(properties, '$.ipv4AddressSpace') as "ipv4_address_space",
              JSON_EXTRACT(properties, '$.ipv6AddressSpace') as "ipv6_address_space",
              JSON_EXTRACT(properties, '$.nfcSku') as "nfc_sku",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              networkFabricControllerName
              FROM azure.managed_network_fabric.network_fabric_controllers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.infrastructureExpressRouteConnections') as "infrastructure_express_route_connections",
                json_extract_path_text(properties, '$.workloadExpressRouteConnections') as "workload_express_route_connections",
                json_extract_path_text(properties, '$.infrastructureServices') as "infrastructure_services",
                json_extract_path_text(properties, '$.workloadServices') as "workload_services",
                json_extract_path_text(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
                json_extract_path_text(properties, '$.networkFabricIds') as "network_fabric_ids",
                json_extract_path_text(properties, '$.workloadManagementNetwork') as "workload_management_network",
                json_extract_path_text(properties, '$.isWorkloadManagementNetworkEnabled') as "is_workload_management_network_enabled",
                json_extract_path_text(properties, '$.tenantInternetGatewayIds') as "tenant_internet_gateway_ids",
                json_extract_path_text(properties, '$.ipv4AddressSpace') as "ipv4_address_space",
                json_extract_path_text(properties, '$.ipv6AddressSpace') as "ipv6_address_space",
                json_extract_path_text(properties, '$.nfcSku') as "nfc_sku",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                networkFabricControllerName
                FROM azure.managed_network_fabric.network_fabric_controllers
                WHERE subscriptionId = 'replace-me';
    vw_access_control_lists:
      id: azure.managed_network_fabric.vw_access_control_lists
      name: vw_access_control_lists
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.configurationType') as "configuration_type",
              JSON_EXTRACT(properties, '$.aclsUrl') as "acls_url",
              JSON_EXTRACT(properties, '$.defaultAction') as "default_action",
              JSON_EXTRACT(properties, '$.matchConfigurations') as "match_configurations",
              JSON_EXTRACT(properties, '$.dynamicMatchConfigurations') as "dynamic_match_configurations",
              JSON_EXTRACT(properties, '$.lastSyncedTime') as "last_synced_time",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              accessControlListName
              FROM azure.managed_network_fabric.access_control_lists
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.configurationType') as "configuration_type",
                json_extract_path_text(properties, '$.aclsUrl') as "acls_url",
                json_extract_path_text(properties, '$.defaultAction') as "default_action",
                json_extract_path_text(properties, '$.matchConfigurations') as "match_configurations",
                json_extract_path_text(properties, '$.dynamicMatchConfigurations') as "dynamic_match_configurations",
                json_extract_path_text(properties, '$.lastSyncedTime') as "last_synced_time",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                accessControlListName
                FROM azure.managed_network_fabric.access_control_lists
                WHERE subscriptionId = 'replace-me';
    vw_network_fabric_skus:
      id: azure.managed_network_fabric.vw_network_fabric_skus
      name: vw_network_fabric_skus
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.maxComputeRacks') as "max_compute_racks",
              JSON_EXTRACT(properties, '$.maximumServerCount') as "maximum_server_count",
              JSON_EXTRACT(properties, '$.supportedVersions') as "supported_versions",
              JSON_EXTRACT(properties, '$.details') as "details",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              networkFabricSkuName
              FROM azure.managed_network_fabric.network_fabric_skus
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.maxComputeRacks') as "max_compute_racks",
                json_extract_path_text(properties, '$.maximumServerCount') as "maximum_server_count",
                json_extract_path_text(properties, '$.supportedVersions') as "supported_versions",
                json_extract_path_text(properties, '$.details') as "details",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                networkFabricSkuName
                FROM azure.managed_network_fabric.network_fabric_skus
                WHERE subscriptionId = 'replace-me';
    vw_network_fabrics:
      id: azure.managed_network_fabric.vw_network_fabrics
      name: vw_network_fabrics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.networkFabricSku') as "network_fabric_sku",
              JSON_EXTRACT(properties, '$.fabricVersion') as "fabric_version",
              JSON_EXTRACT(properties, '$.routerIds') as "router_ids",
              JSON_EXTRACT(properties, '$.networkFabricControllerId') as "network_fabric_controller_id",
              JSON_EXTRACT(properties, '$.rackCount') as "rack_count",
              JSON_EXTRACT(properties, '$.serverCountPerRack') as "server_count_per_rack",
              JSON_EXTRACT(properties, '$.ipv4Prefix') as "ipv4_prefix",
              JSON_EXTRACT(properties, '$.ipv6Prefix') as "ipv6_prefix",
              JSON_EXTRACT(properties, '$.fabricASN') as "fabric_asn",
              JSON_EXTRACT(properties, '$.terminalServerConfiguration') as "terminal_server_configuration",
              JSON_EXTRACT(properties, '$.managementNetworkConfiguration') as "management_network_configuration",
              JSON_EXTRACT(properties, '$.racks') as "racks",
              JSON_EXTRACT(properties, '$.l2IsolationDomains') as "l2_isolation_domains",
              JSON_EXTRACT(properties, '$.l3IsolationDomains') as "l3_isolation_domains",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              networkFabricName
              FROM azure.managed_network_fabric.network_fabrics
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.networkFabricSku') as "network_fabric_sku",
                json_extract_path_text(properties, '$.fabricVersion') as "fabric_version",
                json_extract_path_text(properties, '$.routerIds') as "router_ids",
                json_extract_path_text(properties, '$.networkFabricControllerId') as "network_fabric_controller_id",
                json_extract_path_text(properties, '$.rackCount') as "rack_count",
                json_extract_path_text(properties, '$.serverCountPerRack') as "server_count_per_rack",
                json_extract_path_text(properties, '$.ipv4Prefix') as "ipv4_prefix",
                json_extract_path_text(properties, '$.ipv6Prefix') as "ipv6_prefix",
                json_extract_path_text(properties, '$.fabricASN') as "fabric_asn",
                json_extract_path_text(properties, '$.terminalServerConfiguration') as "terminal_server_configuration",
                json_extract_path_text(properties, '$.managementNetworkConfiguration') as "management_network_configuration",
                json_extract_path_text(properties, '$.racks') as "racks",
                json_extract_path_text(properties, '$.l2IsolationDomains') as "l2_isolation_domains",
                json_extract_path_text(properties, '$.l3IsolationDomains') as "l3_isolation_domains",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                networkFabricName
                FROM azure.managed_network_fabric.network_fabrics
                WHERE subscriptionId = 'replace-me';
    vw_network_to_network_interconnects:
      id: azure.managed_network_fabric.vw_network_to_network_interconnects
      name: vw_network_to_network_interconnects
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.nniType') as "nni_type",
              JSON_EXTRACT(properties, '$.isManagementType') as "is_management_type",
              JSON_EXTRACT(properties, '$.useOptionB') as "use_optionb",
              JSON_EXTRACT(properties, '$.layer2Configuration') as "layer2_configuration",
              JSON_EXTRACT(properties, '$.optionBLayer3Configuration') as "option_b_layer3_configuration",
              JSON_EXTRACT(properties, '$.npbStaticRouteConfiguration') as "npb_static_route_configuration",
              JSON_EXTRACT(properties, '$.importRoutePolicy') as "import_route_policy",
              JSON_EXTRACT(properties, '$.exportRoutePolicy') as "export_route_policy",
              JSON_EXTRACT(properties, '$.egressAclId') as "egress_acl_id",
              JSON_EXTRACT(properties, '$.ingressAclId') as "ingress_acl_id",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              networkFabricName,
              networkToNetworkInterconnectName
              FROM azure.managed_network_fabric.network_to_network_interconnects
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND networkFabricName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.nniType') as "nni_type",
                json_extract_path_text(properties, '$.isManagementType') as "is_management_type",
                json_extract_path_text(properties, '$.useOptionB') as "use_optionb",
                json_extract_path_text(properties, '$.layer2Configuration') as "layer2_configuration",
                json_extract_path_text(properties, '$.optionBLayer3Configuration') as "option_b_layer3_configuration",
                json_extract_path_text(properties, '$.npbStaticRouteConfiguration') as "npb_static_route_configuration",
                json_extract_path_text(properties, '$.importRoutePolicy') as "import_route_policy",
                json_extract_path_text(properties, '$.exportRoutePolicy') as "export_route_policy",
                json_extract_path_text(properties, '$.egressAclId') as "egress_acl_id",
                json_extract_path_text(properties, '$.ingressAclId') as "ingress_acl_id",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                networkFabricName,
                networkToNetworkInterconnectName
                FROM azure.managed_network_fabric.network_to_network_interconnects
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND networkFabricName = 'replace-me';
    vw_ip_prefixes:
      id: azure.managed_network_fabric.vw_ip_prefixes
      name: vw_ip_prefixes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.ipPrefixRules') as "ip_prefix_rules",
              JSON_EXTRACT(properties, '$.configurationState') as "configuration_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.administrativeState') as "administrative_state",
              subscriptionId,
              resourceGroupName,
              ipPrefixName
              FROM azure.managed_network_fabric.ip_prefixes
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.ipPrefixRules') as "ip_prefix_rules",
                json_extract_path_text(properties, '$.configurationState') as "configuration_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.administrativeState') as "administrative_state",
                subscriptionId,
                resourceGroupName,
                ipPrefixName
                FROM azure.managed_network_fabric.ip_prefixes
                WHERE subscriptionId = 'replace-me';
    vw_internet_gateways:
      id: azure.managed_network_fabric.vw_internet_gateways
      name: vw_internet_gateways
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.annotation') as "annotation",
              JSON_EXTRACT(properties, '$.internetGatewayRuleId') as "internet_gateway_rule_id",
              JSON_EXTRACT(properties, '$.ipv4Address') as "ipv4_address",
              JSON_EXTRACT(properties, '$.port') as "port",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.networkFabricControllerId') as "network_fabric_controller_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              internetGatewayName
              FROM azure.managed_network_fabric.internet_gateways
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.annotation') as "annotation",
                json_extract_path_text(properties, '$.internetGatewayRuleId') as "internet_gateway_rule_id",
                json_extract_path_text(properties, '$.ipv4Address') as "ipv4_address",
                json_extract_path_text(properties, '$.port') as "port",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.networkFabricControllerId') as "network_fabric_controller_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                internetGatewayName
                FROM azure.managed_network_fabric.internet_gateways
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRacks/{networkRackName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkRacks
      operationId: NetworkRacks_Create
      summary: Create Network Rack.
      description: Create Network Rack resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkRackNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkRack'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRack'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRack'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkRacks
      operationId: NetworkRacks_Get
      summary: Gets a Network Rack.
      description: Get Network Rack resource details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkRackNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRack'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkRacks
      operationId: NetworkRacks_Update
      summary: Updates a Network Rack.
      description: Update certain properties of the Network Rack resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkRackNameParameter'
      requestBody:
        description: Network Rack properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkRackPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRack'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkRacks
      operationId: NetworkRacks_Delete
      summary: Deletes a Network Rack.
      description: Delete Network Rack resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkRackNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRacks?api-version=2023-06-15:
    get:
      operationId: NetworkRacks_ListByResourceGroup
      summary: List Network Racks by resource group.
      description: List all Network Rack resources in the given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Network Racks under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRacksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkRacks?api-version=2023-06-15:
    get:
      operationId: NetworkRacks_ListBySubscription
      summary: List Network Racks by subscription.
      description: List all Network Rack resources in the given subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Network Racks under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRacksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkTaps
      operationId: NetworkTaps_Create
      summary: Create Network Tap.
      description: Creates a Network Tap.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkTap'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTap'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTap'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkTaps
      operationId: NetworkTaps_Get
      summary: Gets a Network Tap.
      description: Retrieves details of this Network Tap.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTap'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkTaps
      operationId: NetworkTaps_Update
      summary: Updates the Network Taps.
      description: API to update certain properties of the Network Tap resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapNameParameter'
      requestBody:
        description: Network Tap properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkTapPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTap'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkTaps
      operationId: NetworkTaps_Delete
      summary: Deletes a Network Tap.
      description: Deletes Network Tap.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps?api-version=2023-06-15:
    get:
      operationId: NetworkTaps_ListByResourceGroup
      summary: List Network Taps by resource group.
      description: Displays Network Taps list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all NetworkTaps under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkTaps?api-version=2023-06-15:
    get:
      operationId: NetworkTaps_ListBySubscription
      summary: List Network Taps by subscription.
      description: Displays Network Taps list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all NetworkTaps under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - NetworkTaps
      operationId: NetworkTapsAdministrativeState_Update
      summary: Updates administrative state of  Network Tap.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetworkTaps_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}/resync?api-version=2023-06-15:
    post:
      tags:
        - NetworkTaps
      operationId: NetworkTaps_Resync
      summary: Resync operation on the Network Tap.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkTapRules
      operationId: NetworkTapRules_Create
      summary: Create Network Tap Rule.
      description: Create Network Tap Rule resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapRuleNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkTapRule'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapRule'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkTapRules
      operationId: NetworkTapRules_Get
      summary: Gets a Network Tap Rule.
      description: Get Network Tap Rule resource details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapRuleNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkTapRules
      operationId: NetworkTapRules_Update
      summary: Updates a Network Tap Rule.
      description: Update certain properties of the Network Tap Rule resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapRuleNameParameter'
      requestBody:
        description: Network Tap Rule properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkTapRulePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapRule'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkTapRules
      operationId: NetworkTapRules_Delete
      summary: Deletes a Network Tap Rule.
      description: Delete Network Tap Rule resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapRuleNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules?api-version=2023-06-15:
    get:
      operationId: NetworkTapRules_ListByResourceGroup
      summary: List Network Tap Rules by resource group.
      description: List all the Network Tap Rule resources in the given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Network Tap Rules under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapRulesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkTapRules?api-version=2023-06-15:
    get:
      operationId: NetworkTapRules_ListBySubscription
      summary: List NetworkTapRules by subscription.
      description: List all the Network Tap Rule resources in the given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all NetworkTapRules under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTapRulesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - NetworkTapRules
      operationId: NetworkTapRulesAdministrativeState_Update
      summary: Updates administrative state of  Network Tap Rules.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapRuleNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetworkTapRules_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/resync?api-version=2023-06-15:
    post:
      tags:
        - NetworkTapRules
      operationId: NetworkTapRules_Resync
      summary: Resync the Network Tap Rule.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapRuleNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/validateConfiguration?api-version=2023-06-15:
    post:
      tags:
        - NetworkTapRules
      operationId: NetworkTapRules_ValidateConfiguration
      summary: Validates the configuration of the Network Tap Rule.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkTapRuleNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}?api-version=2023-06-15:
    put:
      tags:
        - RoutePolicies
      operationId: RoutePolicies_Create
      summary: Create Route Policy.
      description: Implements Route Policy PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoutePolicyNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutePolicy'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutePolicy'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutePolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - RoutePolicies
      operationId: RoutePolicies_Get
      summary: Gets a Route Policy.
      description: Implements Route Policy GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoutePolicyNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutePolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - RoutePolicies
      operationId: RoutePolicies_Update
      summary: Updates a Route Policy.
      description: API to update certain properties of the Route Policy resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoutePolicyNameParameter'
      requestBody:
        description: Route Policy properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutePolicyPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutePolicy'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - RoutePolicies
      operationId: RoutePolicies_Delete
      summary: Deletes a Route Policy.
      description: Implements Route Policy DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoutePolicyNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies?api-version=2023-06-15:
    get:
      operationId: RoutePolicies_ListByResourceGroup
      summary: List RoutePolicies by resource group.
      description: Implements RoutePolicies list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all RoutePolicies under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutePoliciesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/routePolicies?api-version=2023-06-15:
    get:
      operationId: RoutePolicies_ListBySubscription
      summary: List RoutePolicies by subscription.
      description: Implements RoutePolicies list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all RoutePolicies under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutePoliciesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - RoutePolicies
      operationId: RoutePoliciesAdministrativeState_Update
      description: Updated the admin state for this Route Policy.
      summary: Executes enable operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoutePolicyNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: RoutePolicies_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/validateConfiguration?api-version=2023-06-15:
    post:
      tags:
        - RoutePolicies
      operationId: RoutePolicies_ValidateConfiguration
      description: Validates the configuration of the resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoutePolicyNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/commitConfiguration?api-version=2023-06-15:
    post:
      tags:
        - RoutePolicies
      operationId: RoutePolicies_CommitConfiguration
      description: Commits the configuration of the given resources.
      summary: Execute the commit on the resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoutePolicyNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities/{ipCommunityName}?api-version=2023-06-15:
    put:
      tags:
        - IpCommunities
      operationId: IpCommunities_Create
      summary: Create an IP Community.
      description: Implements an IP Community PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpCommunityNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpCommunity'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpCommunity'
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpCommunity'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - IpCommunities
      operationId: IpCommunities_Get
      summary: Gets an IP Community.
      description: Implements an IP Community GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpCommunityNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpCommunity'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - IpCommunities
      operationId: IpCommunities_Update
      summary: Updates an IP Community.
      description: API to update certain properties of the IP Community resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpCommunityNameParameter'
      requestBody:
        description: IP Community properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpCommunityPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpCommunity'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - IpCommunities
      operationId: IpCommunities_Delete
      summary: Deletes an IP Community.
      description: Implements IP Community DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpCommunityNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities?api-version=2023-06-15:
    get:
      operationId: IpCommunities_ListByResourceGroup
      summary: List IP Communities by resource group.
      description: Implements IP Communities list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all IP Communities under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpCommunitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipCommunities?api-version=2023-06-15:
    get:
      operationId: IpCommunities_ListBySubscription
      summary: List IP Communities by subscription.
      description: Implements IP Communities list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all IP Communities under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpCommunitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkDevices
      operationId: NetworkDevices_Create
      summary: Create Network Device.
      description: Create a Network Device resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDevice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevice'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevice'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkDevices
      operationId: NetworkDevices_Get
      summary: Gets a Network Device.
      description: Gets the Network Device resource details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevice'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkDevices
      operationId: NetworkDevices_Update
      summary: Updates a Network Device.
      description: Update certain properties of the Network Device resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      requestBody:
        description: Network Device properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDevicePatchParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevice'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkDevices
      operationId: NetworkDevices_Delete
      summary: Deletes a Network Device.
      description: Delete the Network Device resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices?api-version=2023-06-15:
    get:
      operationId: NetworkDevices_ListByResourceGroup
      summary: List NetworkDevices by resource group.
      description: List all the Network Device resources in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: List all NetworkDevices under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevicesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDevices?api-version=2023-06-15:
    get:
      operationId: NetworkDevices_ListBySubscription
      summary: List NetworkDevices by subscription.
      description: List all the Network Device resources in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List all NetworkDevices under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevicesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_Create
      summary: Create NetworkInterface.
      description: Create a Network Interface resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterface'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_Get
      summary: Gets a NetworkInterface.
      description: Get the Network Interface resource details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_Update
      summary: Updates a NetworkInterface.
      description: Update certain properties of the Network Interface resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      requestBody:
        description: NetworkInterface properties to update. Only tags are supported.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterfacePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_Delete
      summary: Deletes a NetworkInterface.
      description: Delete the Network Interface resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces?api-version=2023-06-15:
    get:
      operationId: NetworkInterfaces_ListByNetworkDevice
      summary: List all Network Interfaces that are available using an Network Device.
      description: List all the Network Interface resources in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      responses:
        '200':
          description: List all NetworkInterfaces under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfacesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/reboot?api-version=2023-06-15:
    post:
      tags:
        - NetworkDevices
      operationId: NetworkDevices_Reboot
      description: Reboot the Network Device.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootProperties'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/refreshConfiguration?api-version=2023-06-15:
    post:
      tags:
        - NetworkDevices
      operationId: NetworkDevices_RefreshConfiguration
      description: Refreshes the configuration the Network Device.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - NetworkDevices
      operationId: NetworkDevicesAdministrativeState_Update
      description: Updates the Administrative state of the Network Device.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetworkDevices_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/upgrade?api-version=2023-06-15:
    post:
      tags:
        - NetworkDevices
      operationId: NetworkDevices_Upgrade
      description: Upgrades the version of the Network Device.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVersion'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfacesAdministrativeState_Update
      description: Update the admin state of the Network Interface.
      summary: Updates the admin state of the network interface.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkDeviceNameParameter'
        - $ref: '#/components/parameters/NetworkInterfaceNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetworkInterfaces_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups/{neighborGroupName}?api-version=2023-06-15:
    put:
      tags:
        - NeighborGroups
      operationId: NeighborGroups_Create
      summary: Creates the Neighbor Group.
      description: Implements the Neighbor Group PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NeighborGroupNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NeighborGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeighborGroup'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeighborGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NeighborGroups
      operationId: NeighborGroups_Get
      summary: Retrieves details of neighbor Group using GET method.
      description: Gets the Neighbor Group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NeighborGroupNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeighborGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NeighborGroups
      operationId: NeighborGroups_Update
      summary: API to update certain properties of the Neighbor Group Resources.
      description: Updates the Neighbor Group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NeighborGroupNameParameter'
      requestBody:
        description: Neighbor Group properties to update. Only annotations are supported.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NeighborGroupPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeighborGroup'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NeighborGroups
      operationId: NeighborGroups_Delete
      summary: Deletes a Neighbor Group.
      description: Implements Neighbor Group DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NeighborGroupNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups?api-version=2023-06-15:
    get:
      operationId: NeighborGroups_ListByResourceGroup
      summary: List Neighbor Groups by resource group.
      description: Displays NeighborGroups list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Neighbor Groups under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeighborGroupsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/neighborGroups?api-version=2023-06-15:
    get:
      operationId: NeighborGroups_ListBySubscription
      summary: List Neighbor Groups by subscription.
      description: Displays NeighborGroups list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Neighbor Groups under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeighborGroupsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}?api-version=2023-06-15:
    put:
      tags:
        - L3IsolationDomains
      operationId: L3IsolationDomains_Create
      summary: Create L3 Isolation Domain.
      description: 'Create isolation domain resources for layer 3 connectivity between compute nodes and for communication with external services .This configuration is applied on the devices only after the creation of networks is completed and isolation domain is enabled. '
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L3IsolationDomain'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3IsolationDomain'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3IsolationDomain'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - L3IsolationDomains
      operationId: L3IsolationDomains_Get
      summary: Gets a L3 Isolation Domain.
      description: Retrieves details of this L3 Isolation Domain.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3IsolationDomain'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - L3IsolationDomains
      operationId: L3IsolationDomains_Update
      summary: Updates a L3 Isolation Domain.
      description: API to update certain properties of the L3 Isolation Domain resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      requestBody:
        description: API to update certain properties of the L3 Isolation Domain resource.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L3IsolationDomainPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3IsolationDomain'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - L3IsolationDomains
      operationId: L3IsolationDomains_Delete
      summary: Deletes a L3 Isolation Domain.
      description: Deletes layer 3 connectivity between compute nodes by managed by named L3 Isolation name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains?api-version=2023-06-15:
    get:
      operationId: L3IsolationDomains_ListByResourceGroup
      summary: List L3IsolationDomains by resource group.
      description: Displays L3IsolationDomains list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all L3IsolationDomains under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3IsolationDomainsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains?api-version=2023-06-15:
    get:
      operationId: L3IsolationDomains_ListBySubscription
      summary: List L3IsolationDomains by subscription.
      description: Displays L3IsolationDomains list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all L3IsolationDomains under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3IsolationDomainsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - L3IsolationDomains
      operationId: L3IsolationDomains_updateAdministrativeState
      description: Enables racks for this Isolation Domain.
      summary: executes enable operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/validateConfiguration?api-version=2023-06-15:
    post:
      tags:
        - L3IsolationDomains
      operationId: L3IsolationDomains_ValidateConfiguration
      description: Validates the configuration of the resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/commitConfiguration?api-version=2023-06-15:
    post:
      tags:
        - L3IsolationDomains
      operationId: L3IsolationDomains_CommitConfiguration
      description: Commits the configuration of the given resources.
      summary: Execute the commit on the resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}?api-version=2023-06-15:
    put:
      tags:
        - InternalNetworks
      operationId: InternalNetworks_Create
      summary: Creates InternalNetwork for Layer3 Isolation Domain for communication of compute within and across racks.
      description: Creates InternalNetwork PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/InternalNetworkNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalNetwork'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalNetwork'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - InternalNetworks
      operationId: InternalNetworks_Get
      summary: Retrieves details of InternalNetworks using GET method.
      description: Gets a InternalNetworks.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/InternalNetworkNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - InternalNetworks
      operationId: InternalNetworks_Update
      summary: API to update certain properties of the InternalNetworks resources.
      description: Updates a InternalNetworks.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/InternalNetworkNameParameter'
      requestBody:
        description: InternalNetwork properties to update. Only annotations are supported.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalNetworkPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalNetwork'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - InternalNetworks
      operationId: InternalNetworks_Delete
      summary: Deletes a InternalNetworks.
      description: Implements InternalNetworks DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/InternalNetworkNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks?api-version=2023-06-15:
    get:
      operationId: InternalNetworks_ListByL3IsolationDomain
      summary: Executes list operation to display list of all internal networks
      description: Displays InternalNetworks list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      responses:
        '200':
          description: Lists all NetworkInterfaces under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalNetworksList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - InternalNetworks
      operationId: InternalNetworksAdministrativeState_Update
      description: Update Administrative state of  InternalNetworks on resources referred by their resource ids.
      summary: Executes the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/InternalNetworkNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: InternalNetworks_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateBgpAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - InternalNetworks
      operationId: InternalNetworksBgpAdministrativeState_Update
      description: Update BGP state for internalNetwork. Allowed only on edge devices.
      summary: Executes the operation to the underlying resources for updating BGP state on edge devices.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/InternalNetworkNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: InternalNetworks_UpdateBgpAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateStaticRouteBfdAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - InternalNetworks
      operationId: InternalNetworksStaticRouteBfdAdministrativeState_Update
      description: Update Static Route BFD administrative state for internalNetwork.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/InternalNetworkNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: InternalNetworks_UpdateStaticRouteBfdAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}?api-version=2023-06-15:
    put:
      tags:
        - ExternalNetworks
      operationId: ExternalNetworks_Create
      summary: Creates ExternalNetwork for Layer3 Isolation Domain for communication of computes with external services
      description: Creates ExternalNetwork PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/ExternalNetworkNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalNetwork'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNetwork'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - ExternalNetworks
      operationId: ExternalNetworks_Get
      summary: Retrieves details of ExternalNetwork.
      description: Implements ExternalNetworks GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/ExternalNetworkNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ExternalNetworks
      operationId: ExternalNetworks_Update
      summary: Updates a External Networks.
      description: API to update certain properties of the ExternalNetworks resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/ExternalNetworkNameParameter'
      requestBody:
        description: ExternalNetwork properties to update. Only annotations are supported.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalNetworkPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNetwork'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - ExternalNetworks
      operationId: ExternalNetworks_Delete
      summary: Deletes a ExternalNetworks.
      description: Implements ExternalNetworks DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/ExternalNetworkNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks?api-version=2023-06-15:
    get:
      operationId: ExternalNetworks_ListByL3IsolationDomain
      summary: Executes list operation to display External Networks within an isolation domain.
      description: Implements External Networks list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
      responses:
        '200':
          description: Lists all the  External Networks under the L3 Isolation Domain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNetworksList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - ExternalNetworks
      operationId: ExternalNetworksAdministrativeState_Update
      description: Executes update operation to enable or disable administrative State for externalNetwork.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/ExternalNetworkNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: ExternalNetworks_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}/updateStaticRouteBfdAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - ExternalNetworks
      operationId: ExternalNetworksStaticRouteBfdAdministrativeState_Update
      description: Update Static Route BFD for external Network.
      summary: Executes Static Route BFD state update operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3IsolationDomainNameParameter'
        - $ref: '#/components/parameters/ExternalNetworkNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: ExternalNetworks_UpdateStaticRouteBfdAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities/{ipExtendedCommunityName}?api-version=2023-06-15:
    put:
      tags:
        - IpExtendedCommunities
      operationId: IpExtendedCommunities_Create
      summary: Create an IP Extended Community.
      description: Implements IP Extended Community PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpExtendedCommunityNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpExtendedCommunity'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpExtendedCommunity'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpExtendedCommunity'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - IpExtendedCommunities
      operationId: IpExtendedCommunities_Get
      summary: Gets an IP Extended Community.
      description: Implements IP Extended Community GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpExtendedCommunityNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpExtendedCommunity'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - IpExtendedCommunities
      operationId: IpExtendedCommunities_Update
      summary: Updates the IP Extended Community.
      description: API to update certain properties of the IP Extended Community resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpExtendedCommunityNameParameter'
      requestBody:
        description: IP Extended Community properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpExtendedCommunityPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpExtendedCommunity'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - IpExtendedCommunities
      operationId: IpExtendedCommunities_Delete
      summary: Deletes the IP Extended Community.
      description: Implements IP Extended Community DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpExtendedCommunityNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities?api-version=2023-06-15:
    get:
      operationId: IpExtendedCommunities_ListByResourceGroup
      summary: List IpExtendedCommunities by resource group.
      description: Implements IpExtendedCommunities list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all IpExtendedCommunities under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpExtendedCommunityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities?api-version=2023-06-15:
    get:
      operationId: IpExtendedCommunities_ListBySubscription
      summary: List IpExtendedCommunities by subscription.
      description: Implements IpExtendedCommunities list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all IpExtendedCommunities under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpExtendedCommunityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers/{networkPacketBrokerName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkPacketBrokers
      operationId: NetworkPacketBrokers_Create
      summary: Create Network Packet Broker.
      description: Creates a Network Packet Broker.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkPacketBrokerNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPacketBroker'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPacketBroker'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPacketBroker'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkPacketBrokers
      operationId: NetworkPacketBrokers_Get
      summary: Gets a Network Packet Broker.
      description: Retrieves details of this Network Packet Broker.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkPacketBrokerNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPacketBroker'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkPacketBrokers
      operationId: NetworkPacketBrokers_Update
      summary: Updates the Network Packet Broker.
      description: API to update certain properties of the Network Packet Broker resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkPacketBrokerNameParameter'
      requestBody:
        description: Network Packet Broker properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPacketBrokerPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPacketBroker'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkPacketBrokers
      operationId: NetworkPacketBrokers_Delete
      summary: Deletes a Network Packet Broker.
      description: Deletes Network Packet Broker.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkPacketBrokerNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers?api-version=2023-06-15:
    get:
      operationId: NetworkPacketBrokers_ListByResourceGroup
      summary: List all Network Packet Brokers under resource group.
      description: Displays NetworkPacketBrokers list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Network Packet Brokers under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPacketBrokersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers?api-version=2023-06-15:
    get:
      operationId: NetworkPacketBrokers_ListBySubscription
      summary: List Network Packet Brokers by subscription.
      description: Displays Network Packet Brokers list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all NetworkPacketBrokers under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPacketBrokersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus/{networkDeviceSkuName}?api-version=2023-06-15:
    get:
      tags:
        - NetworkDeviceSkus
      operationId: NetworkDeviceSkus_Get
      summary: Gets a Network Device Sku.
      description: Get a Network Device SKU details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/NetworkDeviceSkuNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceSku'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus?api-version=2023-06-15:
    get:
      operationId: NetworkDeviceSkus_ListBySubscription
      summary: List Network Device SKUs by subscription.
      description: List Network Device SKUs for the given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Network Device SKU under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceSkusListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.ManagedNetworkFabric/operations?api-version=2023-06-15:
    get:
      description: Returns list of all operations.
      operationId: Operations_List
      tags:
        - Operations
      parameters: []
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}?api-version=2023-06-15:
    put:
      tags:
        - L2IsolationDomains
      operationId: L2IsolationDomains_Create
      summary: Create L2 Isolation Domain.
      description: Creates layer 2 network connectivity between compute nodes within a rack and across racks.The configuration is applied on the devices only after the isolation domain is enabled.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2IsolationDomainNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L2IsolationDomain'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2IsolationDomain'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2IsolationDomain'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - L2IsolationDomains
      operationId: L2IsolationDomains_Get
      summary: Retrieves details of this L2 Isolation Domain.
      description: Implements L2 Isolation Domain GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2IsolationDomainNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2IsolationDomain'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - L2IsolationDomains
      operationId: L2IsolationDomains_Update
      summary: Updates the L2 Isolation Domain.
      description: API to update certain properties of the L2 Isolation Domain resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2IsolationDomainNameParameter'
      requestBody:
        description: API to update certain properties of the L2 Isolation Domain resource..
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L2IsolationDomainPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2IsolationDomain'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - L2IsolationDomains
      operationId: L2IsolationDomains_Delete
      summary: Deletes the L2 Isolation Domain.
      description: Deletes layer 2 connectivity between compute nodes by managed by named L2 Isolation name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2IsolationDomainNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - L2IsolationDomains
      operationId: L2IsolationDomains_updateAdministrativeState
      description: Enables isolation domain across the fabric or on specified racks.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2IsolationDomainNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/validateConfiguration?api-version=2023-06-15:
    post:
      tags:
        - L2IsolationDomains
      operationId: L2IsolationDomains_ValidateConfiguration
      description: Validates the configuration of the resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2IsolationDomainNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/commitConfiguration?api-version=2023-06-15:
    post:
      tags:
        - L2IsolationDomains
      operationId: L2IsolationDomains_CommitConfiguration
      description: Commits the configuration of the given resources.
      summary: Execute the commit on the resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2IsolationDomainNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains?api-version=2023-06-15:
    get:
      operationId: L2IsolationDomains_ListByResourceGroup
      summary: List L2IsolationDomains by resource group.
      description: Displays L2IsolationDomains list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all L2IsolationDomains under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2IsolationDomainsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains?api-version=2023-06-15:
    get:
      operationId: L2IsolationDomains_ListBySubscription
      summary: List L2IsolationDomains by subscription.
      description: Displays L2IsolationDomains list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all L2IsolationDomains under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2IsolationDomainsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules/{internetGatewayRuleName}?api-version=2023-06-15:
    put:
      tags:
        - InternetGatewayRules
      operationId: InternetGatewayRules_Create
      summary: Creates an Internet Gateway rule.
      description: Creates an Internet Gateway rule resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayRuleNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternetGatewayRule'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewayRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewayRule'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - InternetGatewayRules
      operationId: InternetGatewayRules_Get
      summary: Gets an Internet Gateway Rule.
      description: Gets an Internet Gateway Rule resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayRuleNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewayRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - InternetGatewayRules
      operationId: InternetGatewayRules_Update
      summary: Updates an Internet Gateway Rule.
      description: API to update certain properties of the Internet Gateway Rule resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayRuleNameParameter'
      requestBody:
        description: Internet Gateway Rule properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternetGatewayRulePatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewayRule'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - InternetGatewayRules
      operationId: InternetGatewayRules_Delete
      summary: Deletes an Internet Gateway Rule.
      description: Implements Internet Gateway Rules DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayRuleNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules?api-version=2023-06-15:
    get:
      operationId: InternetGatewayRules_ListByResourceGroup
      summary: List Internet Gateway Rules by resource group.
      description: Implements Internet Gateway Rules list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Internet Gateway Rules under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewayRulesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules?api-version=2023-06-15:
    get:
      operationId: InternetGatewayRules_ListBySubscription
      summary: List Internet Gateway Rules by subscription.
      description: List all Internet Gateway rules in the given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Internet Gateway Rules under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewayRulesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkFabricControllers
      operationId: NetworkFabricControllers_Create
      summary: Create Network fabric controller.
      description: Creates a Network Fabric Controller.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricControllerNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFabricController'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricController'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricController'
        default:
          description: Error response describing why the operation failed.need to check with the team whether this field needs to be updated or not
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkFabricControllers
      operationId: NetworkFabricControllers_Get
      summary: Gets a Network Fabric Controller.
      description: Shows the provisioning status of Network Fabric Controller.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricControllerNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricController'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkFabricControllers
      operationId: NetworkFabricControllers_Update
      summary: Updates a Network Fabric Controller.
      description: Updates are currently not supported for the Network Fabric Controller resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricControllerNameParameter'
      requestBody:
        description: Network Fabric Controller properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFabricControllerPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricController'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: Tracking URL for long running operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkFabricControllers
      operationId: NetworkFabricControllers_Delete
      summary: Deletes a Network Fabric Controller.
      description: Deletes the Network Fabric Controller resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricControllerNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: Tracking URL for long running operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers?api-version=2023-06-15:
    get:
      operationId: NetworkFabricControllers_ListByResourceGroup
      summary: List NetworkFabricControllers by resource group.
      description: Lists all the NetworkFabricControllers thats available in the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all NetworkFabricControllers under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricControllersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers?api-version=2023-06-15:
    get:
      operationId: NetworkFabricControllers_ListBySubscription
      summary: List NetworkFabricControllers by subscription.
      description: Lists all the NetworkFabricControllers by subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all NetworkFabricControllers under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricControllersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}?api-version=2023-06-15:
    put:
      tags:
        - AccessControlLists
      operationId: AccessControlLists_Create
      summary: Creates Access Control List.
      description: Implements Access Control List PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccessControlListNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessControlList'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlList'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlList'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - AccessControlLists
      operationId: AccessControlLists_Get
      summary: Gets a Access Control List.
      description: Implements Access Control List GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccessControlListNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - AccessControlLists
      operationId: AccessControlLists_Update
      summary: Updates the Access Control List.
      description: API to update certain properties of the Access Control List resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccessControlListNameParameter'
      requestBody:
        description: Access Control List properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessControlListPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlList'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - AccessControlLists
      operationId: AccessControlLists_Delete
      summary: Deletes a Access Control List.
      description: Implements Access Control List DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccessControlListNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists?api-version=2023-06-15:
    get:
      operationId: AccessControlLists_ListByResourceGroup
      summary: List AccessControlLists by resource group.
      description: Implements AccessControlLists list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all AccessControlLists under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlListsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/accessControlLists?api-version=2023-06-15:
    get:
      operationId: AccessControlLists_ListBySubscription
      summary: List AccessControlLists by subscription.
      description: Implements AccessControlLists list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all AccessControlLists under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlListsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - AccessControlLists
      operationId: AccessControlListsAdministrativeState_Update
      summary: Updates administrative state of Access Control Lists.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccessControlListNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: AccessControlLists_UpdateAdministrativeState
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/resync?api-version=2023-06-15:
    post:
      tags:
        - AccessControlLists
      operationId: AccessControlLists_Resync
      summary: Resync operation on the Access Control Lists.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccessControlListNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/validateConfiguration?api-version=2023-06-15:
    post:
      tags:
        - AccessControlLists
      operationId: AccessControlLists_ValidateConfiguration
      summary: Validates the configuration of the Access Control Lists.
      description: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccessControlListNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus/{networkFabricSkuName}?api-version=2023-06-15:
    get:
      tags:
        - NetworkFabricSkus
      operationId: NetworkFabricSkus_Get
      summary: Gets a Network Fabric Sku.
      description: Implements Network Fabric SKU GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/NetworkFabricSkuNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricSku'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus?api-version=2023-06-15:
    get:
      operationId: NetworkFabricSkus_ListBySubscription
      summary: List Network Fabric SKUs by subscription.
      description: Implements Network Fabric SKUs list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Network Fabric SKUs under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricSkusListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_Create
      summary: Create Network Fabric.
      description: Create Network Fabric resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFabric'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_Get
      summary: Gets a Network Fabric.
      description: Get Network Fabric resource details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_Update
      summary: Updates a Network Fabric.
      description: Update certain properties of the Network Fabric resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      requestBody:
        description: Network Fabric properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFabricPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_Delete
      summary: Deletes a Network Fabric.
      description: Delete Network Fabric resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics?api-version=2023-06-15:
    get:
      operationId: NetworkFabrics_ListByResourceGroup
      summary: List Network Fabrics by resource group.
      description: List all the Network Fabric resources in the given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Network Fabrics under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabrics?api-version=2023-06-15:
    get:
      operationId: NetworkFabrics_ListBySubscription
      summary: List Network Fabrics by subscription.
      description: List all the Network Fabric resources in the given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all NetworkFabrics under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/provision?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_provision
      description: Provisions the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/deprovision?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_deprovision
      description: Deprovisions the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForDeviceUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/upgrade?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_upgrade
      description: Upgrades the version of the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      requestBody:
        description: Network Fabric properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeNetworkFabricProperties'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/refreshConfiguration?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_refreshConfiguration
      description: Refreshes the configuration of the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/updateWorkloadManagementBfdConfiguration?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabricsWorkloadManagementBfdConfiguration_Update
      description: Updates the Workload Management BFD Configuration of the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetworkFabrics_UpdateWorkloadManagementBfdConfiguration
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/updateInfraManagementBfdConfiguration?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabricsInfraManagementBfdConfiguration_Update
      description: Updates the Infra Management BFD Configuration of the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetworkFabrics_UpdateInfraManagementBfdConfiguration
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/validateConfiguration?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_ValidateConfiguration
      description: Validates the configuration of the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      requestBody:
        description: Validate configuration properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateConfigurationProperties'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/getTopology?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabricsTopology_Get
      description: Gets Topology of the underlying resources in the given Network Fabric instance.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConfigurationResponse'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetworkFabrics_GetTopology
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/commitConfiguration?api-version=2023-06-15:
    post:
      tags:
        - NetworkFabrics
      operationId: NetworkFabrics_CommitConfiguration
      description: Atomic update of the given Network Fabric instance. Sync update of NFA resources at Fabric level.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}?api-version=2023-06-15:
    put:
      tags:
        - NetworkToNetworkInterconnects
      operationId: NetworkToNetworkInterconnects_Create
      summary: Configuration used to setup CE-PE connectivity.
      description: Configuration used to setup CE-PE connectivity PUT Method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
        - $ref: '#/components/parameters/NetworkToNetworkInterconnectNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkToNetworkInterconnect'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkToNetworkInterconnect'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkToNetworkInterconnect'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - NetworkToNetworkInterconnects
      operationId: NetworkToNetworkInterconnects_Get
      summary: Configuration used to setup CE-PE connectivity.
      description: Implements NetworkToNetworkInterconnects GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
        - $ref: '#/components/parameters/NetworkToNetworkInterconnectNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkToNetworkInterconnect'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - NetworkToNetworkInterconnects
      operationId: NetworkToNetworkInterconnects_Update
      summary: Updates a Network To NetworkInterconnects.
      description: Update certain properties of the Network To NetworkInterconnects resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
        - $ref: '#/components/parameters/NetworkToNetworkInterconnectNameParameter'
      requestBody:
        description: Network to Network Interconnect properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkToNetworkInterconnectPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkToNetworkInterconnect'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NetworkToNetworkInterconnects
      operationId: NetworkToNetworkInterconnects_Delete
      summary: Deletes a NetworkToNetworkInterconnects.
      description: Implements NetworkToNetworkInterconnects DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
        - $ref: '#/components/parameters/NetworkToNetworkInterconnectNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects?api-version=2023-06-15:
    get:
      operationId: NetworkToNetworkInterconnects_ListByNetworkFabric
      summary: Executes list operation to display Network To Network Interconnects within a Network Fabric.
      description: Implements Network To Network Interconnects list by Network Fabric GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
      responses:
        '200':
          description: Lists all Network To Network Interconnects under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkToNetworkInterconnectsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}/updateNpbStaticRouteBfdAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - NetworkToNetworkInterconnects
      operationId: NetworkToNetworkInterconnects_updateNpbStaticRouteBfdAdministrativeState
      description: Updates the NPB Static Route BFD Administrative State.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
        - $ref: '#/components/parameters/NetworkToNetworkInterconnectNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}/updateAdministrativeState?api-version=2023-06-15:
    post:
      tags:
        - NetworkToNetworkInterconnects
      operationId: NetworkToNetworkInterconnects_updateAdministrativeState
      description: Updates the Admin State.
      summary: Implements the operation to the underlying resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkFabricNameParameter'
        - $ref: '#/components/parameters/NetworkToNetworkInterconnectNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdministrativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonPostActionResponseForStateUpdate'
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes/{ipPrefixName}?api-version=2023-06-15:
    put:
      tags:
        - IpPrefixes
      operationId: IpPrefixes_Create
      summary: Create an IP Prefix.
      description: Implements IP Prefix PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpPrefixNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpPrefix'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpPrefix'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpPrefix'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - IpPrefixes
      operationId: IpPrefixes_Get
      summary: Gets an IP Prefix.
      description: Implements IP Prefix GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpPrefixNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpPrefix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - IpPrefixes
      operationId: IpPrefixes_Update
      summary: Updates the IP Prefix.
      description: API to update certain properties of the IP Prefix resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpPrefixNameParameter'
      requestBody:
        description: IP Prefix properties to update.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpPrefixPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpPrefix'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - IpPrefixes
      operationId: IpPrefixes_Delete
      summary: Deletes the IP Prefix.
      description: Implements IP Prefix DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/IpPrefixNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes?api-version=2023-06-15:
    get:
      operationId: IpPrefixes_ListByResourceGroup
      summary: List IpPrefixes by resource group.
      description: Implements IpPrefixes list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all IP Prefixes under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpPrefixesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes?api-version=2023-06-15:
    get:
      operationId: IpPrefixes_ListBySubscription
      summary: List IpPrefixes by subscription.
      description: Implements IpPrefixes list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all IpPrefixes under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpPrefixesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways/{internetGatewayName}?api-version=2023-06-15:
    put:
      tags:
        - InternetGateways
      operationId: InternetGateways_Create
      summary: Create a Network Fabric Service Internet Gateway.
      description: Creates a Network Fabric Service Internet Gateway resource instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayNameParameter'
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternetGateway'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGateway'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGateway'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - InternetGateways
      operationId: InternetGateways_Get
      summary: Retrieves details of Network Fabric Service Internet Gateway.
      description: Implements Gateway GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - InternetGateways
      operationId: InternetGateways_Update
      summary: Updates a Network Fabric Service Internet Gateway.
      description: Execute patch on Network Fabric Service Internet Gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayNameParameter'
      requestBody:
        description: API to update certain properties of the L2 Isolation Domain resource..
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternetGatewayPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGateway'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - InternetGateways
      operationId: InternetGateways_Delete
      summary: Deletes a Network Fabric Service Internet Gateway.
      description: Execute a delete on Network Fabric Service Internet Gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/InternetGatewayNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways?api-version=2023-06-15:
    get:
      operationId: InternetGateways_ListByResourceGroup
      summary: List Internet Gateways by resource group.
      description: Displays Internet Gateways list by resource group GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all InternetGateways under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewaysListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/internetGateways?api-version=2023-06-15:
    get:
      operationId: InternetGateways_ListBySubscription
      summary: List Internet Gateways by subscription.
      description: Displays Internet Gateways list by subscription GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Internet Gateways under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternetGatewaysListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
