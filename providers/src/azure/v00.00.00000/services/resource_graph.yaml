openapi: 3.0.0
servers:
  - url: 'https://management.azure.com/'
info:
  title: Azure Resource Graph
  description: Azure Resource Graph enables you to get full visibility into your environments by providing high performance and powerful querying capability across all your resources.
  contact:
    name: StackQL Studios
    url: 'https://stackql.io/'
    email: info@stackql.io
  version: 2024-01-25-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ApiVersionParameter:
      name: api-version
      in: query
      description: Api Version.
      required: true
      schema:
        type: string
  schemas:
    QueryRequest:
      description: Describes a query to be executed.
      type: object
      properties:
        subscriptions:
          description: Azure subscriptions against which to execute the query.
          type: array
          items:
            type: string
            description: Subscription Id.
        managementGroups:
          description: 'Azure management groups against which to execute the query. Example: [ ''mg1'', ''mg2'' ]'
          type: array
          items:
            type: string
            description: The name of Management group.
        query:
          description: The resources query.
          type: string
        options:
          description: The query evaluation options
          $ref: '#/components/schemas/QueryRequestOptions'
        facets:
          description: An array of facet requests to be computed against the query result.
          type: array
          items:
            $ref: '#/components/schemas/FacetRequest'
      required:
        - query
    QueryRequestOptions:
      description: The options for query evaluation
      properties:
        $skipToken:
          description: 'Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.'
          type: string
        $top:
          description: The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
        $skip:
          description: The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.
          type: integer
          format: int32
          minimum: 0
        resultFormat:
          description: Defines in which format query result returned.
          type: string
          enum:
            - table
            - objectArray
          default: objectArray
          x-ms-enum:
            name: ResultFormat
            modelAsString: false
        allowPartialScopes:
          description: Only applicable for tenant and management group level queries to decide whether to allow partial scopes for result in case the number of subscriptions exceed allowed limits.
          type: boolean
          default: false
        authorizationScopeFilter:
          description: Defines what level of authorization resources should be returned based on the which subscriptions and management groups are passed as scopes.
          type: string
          enum:
            - AtScopeAndBelow
            - AtScopeAndAbove
            - AtScopeExact
            - AtScopeAboveAndBelow
          default: AtScopeAndBelow
          x-ms-enum:
            name: AuthorizationScopeFilter
            modelAsString: false
      type: object
    FacetRequest:
      description: A request to compute additional statistics (facets) over the query results.
      type: object
      properties:
        expression:
          description: The column or list of columns to summarize by
          type: string
        options:
          description: The options for facet evaluation
          $ref: '#/components/schemas/FacetRequestOptions'
      required:
        - expression
    FacetRequestOptions:
      description: The options for facet evaluation
      properties:
        sortBy:
          description: The column name or query expression to sort on. Defaults to count if not present.
          type: string
        sortOrder:
          description: The sorting order by the selected column (count by default).
          type: string
          default: desc
          enum:
            - asc
            - desc
          x-ms-enum:
            name: FacetSortOrder
            modelAsString: false
        filter:
          description: 'Specifies the filter condition for the ''where'' clause which will be run on main query''s result, just before the actual faceting.'
          type: string
        $top:
          description: The maximum number of facet rows that should be returned.
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      type: object
    QueryResponse:
      description: Query result.
      type: object
      properties:
        totalRecords:
          description: Number of total records matching the query.
          type: integer
          format: int64
        count:
          description: 'Number of records returned in the current response. In the case of paging, this is the number of records in the current page.'
          type: integer
          format: int64
        resultTruncated:
          description: Indicates whether the query results are truncated.
          type: string
          enum:
            - 'true'
            - 'false'
          x-ms-enum:
            name: ResultTruncated
            modelAsString: false
        $skipToken:
          description: 'When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.'
          type: string
        data:
          description: Query output in JObject array or Table format.
          type: object
        facets:
          description: Query facets.
          type: array
          items:
            $ref: '#/components/schemas/Facet'
      required:
        - totalRecords
        - count
        - resultTruncated
        - data
    Table:
      description: Query output in tabular format.
      type: object
      properties:
        columns:
          description: Query result column descriptors.
          type: array
          items:
            $ref: '#/components/schemas/Column'
            description: Column descriptor.
        rows:
          description: Query result rows.
          type: array
          items:
            $ref: '#/components/schemas/Row'
            description: Query result row.
      required:
        - columns
        - rows
    Column:
      description: Query result column descriptor.
      type: object
      properties:
        name:
          description: Column name.
          type: string
        type:
          description: Column data type.
          $ref: '#/components/schemas/ColumnDataType'
      required:
        - name
        - type
    ColumnDataType:
      description: Data type of a column in a table.
      type: string
      enum:
        - string
        - integer
        - number
        - boolean
        - object
        - datetime
      x-ms-enum:
        name: ColumnDataType
        modelAsString: false
    Row:
      description: Query result row.
      type: array
      items:
        type: object
        description: Cell value.
    Facet:
      description: A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.
      type: object
      properties:
        expression:
          description: 'Facet expression, same as in the corresponding facet request.'
          type: string
        resultType:
          description: Result type
          type: string
      required:
        - expression
        - resultType
      discriminator:
        propertyName: resultType
    FacetResult:
      x-ms-discriminator-value: FacetResult
      description: Successfully executed facet containing additional statistics on the response of a query.
      required:
        - totalRecords
        - count
        - data
      properties:
        totalRecords:
          description: Number of total records in the facet results.
          type: integer
          format: int64
        count:
          description: Number of records returned in the facet response.
          type: integer
          format: int32
        data:
          description: A JObject array or Table containing the desired facets. Only present if the facet is valid.
          type: object
        expression:
          description: 'Facet expression, same as in the corresponding facet request.'
          type: string
        resultType:
          description: Result type
          type: string
      type: object
    FacetError:
      x-ms-discriminator-value: FacetError
      description: A facet whose execution resulted in an error.
      required:
        - errors
      properties:
        errors:
          description: An array containing detected facet errors with details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
        expression:
          description: 'Facet expression, same as in the corresponding facet request.'
          type: string
        resultType:
          description: Result type
          type: string
      type: object
    ErrorResponse:
      title: Error response.
      type: object
      description: An error response from the API.
      properties:
        error:
          $ref: '#/components/schemas/Error'
          description: Error information.
      required:
        - error
    Error:
      title: Error info.
      type: object
      description: Error details.
      properties:
        code:
          type: string
          description: Error code identifying the specific error.
        message:
          type: string
          description: A human readable error message.
        details:
          type: array
          description: Error details
          items:
            $ref: '#/components/schemas/ErrorDetails'
      required:
        - code
        - message
    ErrorDetails:
      title: Error details.
      type: object
      properties:
        code:
          type: string
          description: Error code identifying the specific error.
        message:
          type: string
          description: A human readable error message.
      additionalProperties:
        type: object
      required:
        - code
        - message
    OperationListResult:
      description: Result of the request to list Resource Graph operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: List of Resource Graph operations supported by the Resource Graph resource provider.
      type: object
    Operation:
      description: Resource Graph REST API operation definition.
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: Display metadata associated with the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft Resource Graph.'
              type: string
            resource:
              description: Resource on which the operation is performed etc.
              type: string
            operation:
              description: 'Type of operation: get, read, delete, etc.'
              type: string
            description:
              description: Description for the operation.
              type: string
        origin:
          type: string
          description: The origin of operations.
      type: object
    HistoryContext:
      type: object
      description: 'History content generated by a user, assistant or system role'
      properties:
        content:
          type: string
          description: Content generated by a given role
        role:
          $ref: '#/components/schemas/Role'
          description: 'Role which generates the content e.g., user, assistant or system'
      required:
        - content
        - role
    QueryGenerationRequest:
      type: object
      description: Query Generation Request
      properties:
        history:
          type: array
          description: A collection of chat history to provide context in query generation
          items:
            $ref: '#/components/schemas/HistoryContext'
          x-ms-identifiers: []
        prompt:
          type: string
          description: Prompt text from user
      required:
        - prompt
    QueryGenerationResponse:
      type: object
      description: Query Generation Response
      properties:
        query:
          type: string
          description: Query generated for a given user prompt text
        status:
          $ref: '#/components/schemas/StatusResponse'
          description: Status for the query generation result
      required:
        - query
        - status
    Role:
      type: string
      description: The role which generates a specific message. Restricted to the user or assistant role.
      enum:
        - user
        - assistant
        - system
      x-ms-enum:
        name: Role
        modelAsString: true
        values:
          - name: user
            value: user
            description: 'If a message was generated by a human, the role should be assigned user'
          - name: assistant
            value: assistant
            description: 'If a message was generated by ARG Query Generation service, then the role should be assistant'
          - name: system
            value: system
            description: 'If a message provides high level instructions for the query generation, then the role should be system'
    StatusCategory:
      type: string
      description: Status Category
      enum:
        - Succeeded
        - Failed
      x-ms-enum:
        name: StatusCategory
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Succeeded when query was generated successfully
          - name: Failed
            value: Failed
            description: Failed when query was not generated
    StatusResponse:
      type: object
      description: Status
      properties:
        category:
          $ref: '#/components/schemas/StatusCategory'
          description: Status category for query generation result
        message:
          type: string
          description: Status message for query generation result
      required:
        - category
        - message
    Versions:
      type: string
      description: Versions Info.
      enum:
        - 2023-09-01-preview
      x-ms-enum:
        name: Versions
        modelAsString: true
        values:
          - name: v2023_09_01_preview
            value: 2023-09-01-preview
            description: The 2023-09-01-preview version.
    ResourcesHistoryResult:
      additionalProperties: {}
      properties: {}
      type: object
    ResourcesHistoryRequest:
      description: Describes a history request to be executed.
      type: object
      properties:
        subscriptions:
          description: Azure subscriptions against which to execute the query.
          type: array
          items:
            type: string
            description: Subscription Id.
        query:
          description: The resources query.
          type: string
        options:
          description: The history request evaluation options
          $ref: '#/components/schemas/ResourcesHistoryRequestOptions'
        managementGroups:
          description: 'Azure management groups against which to execute the query. Example: [ ''mg1'', ''mg2'' ]'
          type: array
          items:
            type: string
            description: The name of Management group.
    ResourcesHistoryRequestOptions:
      description: The options for history request evaluation
      type: object
      properties:
        interval:
          description: The time interval used to fetch history.
          $ref: '#/components/schemas/DateTimeInterval'
        $top:
          description: The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.
          format: int32
          type: integer
          minimum: 1
          maximum: 1000
        $skip:
          description: The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.
          type: integer
          format: int32
          minimum: 0
        $skipToken:
          description: 'Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.'
          type: string
        resultFormat:
          description: Defines in which format query result returned.
          type: string
          enum:
            - table
            - objectArray
          x-ms-enum:
            name: ResultFormat
            modelAsString: false
    DateTimeInterval:
      description: 'An interval in time specifying the date and time for the inclusive start and exclusive end, i.e. `[start, end)`.'
      type: object
      properties:
        start:
          description: 'A datetime indicating the inclusive/closed start of the time interval, i.e. `[`**`start`**`, end)`. Specifying a `start` that occurs chronologically after `end` will result in an error.'
          type: string
          format: date-time
        end:
          description: 'A datetime indicating the exclusive/open end of the time interval, i.e. `[start, `**`end`**`)`. Specifying an `end` that occurs chronologically before `start` will result in an error.'
          type: string
          format: date-time
      required:
        - start
        - end
    ResourceChangesRequestParameters:
      description: The parameters for a specific changes request.
      type: object
      properties:
        resourceIds:
          description: Specifies the list of resources for a changes request.
          type: array
          items:
            type: string
            description: Specifies the resource for a changes request.
        subscriptionId:
          description: 'The subscription id of resources to query the changes from. '
          type: string
        interval:
          description: Specifies the date and time interval for a changes request.
          type: object
          allOf:
            - $ref: '#/components/schemas/DateTimeInterval'
        $skipToken:
          description: Acts as the continuation token for paged responses.
          type: string
        $top:
          description: The maximum number of changes the client can accept in a paged response.
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
        table:
          description: The table name to query resources from.
          type: string
        fetchPropertyChanges:
          description: The flag if set to true will fetch property changes
          type: boolean
        fetchSnapshots:
          description: The flag if set to true will fetch change snapshots
          type: boolean
      required:
        - interval
    ResourceChangeList:
      description: A list of changes associated with a resource over a specific time interval.
      type: object
      properties:
        changes:
          description: |-
            The pageable value returned by the operation, i.e. a list of changes to the resource.

            - The list is ordered from the most recent changes to the least recent changes.
            - This list will be empty if there were no changes during the requested interval.
            - The `Before` snapshot timestamp value of the oldest change can be outside of the specified time interval.
          type: array
          items:
            $ref: '#/components/schemas/ResourceChangeData'
        $skipToken:
          description: Skip token that encodes the skip information while executing the current request
    ResourceChangeDataList:
      description: A list of change details associated with a resource over a specific time interval.
      type: array
      items:
        $ref: '#/components/schemas/ResourceChangeData'
    ResourceChangeData:
      description: 'Data on a specific change, represented by a pair of before and after resource snapshots.'
      type: object
      properties:
        resourceId:
          description: The resource for a change.
          type: string
        changeId:
          description: The change ID. Valid and unique within the specified resource only.
          type: string
        beforeSnapshot:
          description: The snapshot before the change.
          allOf:
            - $ref: '#/components/schemas/ResourceSnapshotData'
        afterSnapshot:
          description: The snapshot after the change.
          allOf:
            - $ref: '#/components/schemas/ResourceSnapshotData'
        changeType:
          description: The change type for snapshot. PropertyChanges will be provided in case of Update change type
          type: string
          enum:
            - Create
            - Update
            - Delete
          x-ms-enum:
            name: ChangeType
            modelAsString: false
        propertyChanges:
          description: An array of resource property change
          type: array
          items:
            $ref: '#/components/schemas/ResourcePropertyChange'
      required:
        - changeId
        - beforeSnapshot
        - afterSnapshot
    ResourcePropertyChange:
      description: The resource property change
      type: object
      properties:
        propertyName:
          description: The property name
          type: string
        beforeValue:
          description: The property value in before snapshot
          type: string
        afterValue:
          description: The property value in after snapshot
          type: string
        changeCategory:
          description: The change category.
          type: string
          enum:
            - User
            - System
          x-ms-enum:
            name: ChangeCategory
            modelAsString: false
        propertyChangeType:
          description: The property change Type
          type: string
          enum:
            - Insert
            - Update
            - Remove
          x-ms-enum:
            name: PropertyChangeType
            modelAsString: false
      required:
        - propertyName
        - changeCategory
        - propertyChangeType
    ResourceSnapshotData:
      description: Data on a specific resource snapshot.
      type: object
      properties:
        snapshotId:
          description: The ID of the snapshot.
          type: string
        timestamp:
          description: |-
            The time when the snapshot was created.
            The snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.
          type: string
          format: date-time
        content:
          description: The resource snapshot content (in resourceChangeDetails response only).
          type: object
      required:
        - timestamp
    ResourceChangeDetailsRequestParameters:
      description: The parameters for a specific change details request.
      type: object
      properties:
        resourceIds:
          description: Specifies the list of resources for a change details request.
          type: array
          items:
            type: string
            description: Specifies the resource for a change details request.
        changeIds:
          description: Specifies the list of change IDs for a change details request.
          type: array
          items:
            type: string
            description: Specifies the change ID.
      required:
        - resourceIds
        - changeIds
  x-stackQL-resources:
    # resources:
    #   id: azure.resource_graph.resources
    #   name: resources
    #   title: Resources
    #   methods:
    #     resources:
    #       operation:
    #         $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1resources~1?api-version=2023-09-01-preview/post'
    #       response:
    #         mediaType: application/json
    #         openAPIDocKey: '200'
    #   sqlVerbs:
    #     select: []
    #     insert: []
    #     update: []
    #     delete: []
    graph_resources:
      id: azure.resource_graph.graph_resources
      name: graph_resources
      title: Resources
      methods:
        get_graph_resources:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1resources~1?api-version=2021-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/graph_resources/methods/get_graph_resources'
        insert: []
        update: []
        delete: []    
    operations:
      id: azure.resource_graph.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1operations~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1operations~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    query:
      id: azure.resource_graph.query
      name: query
      title: Query
      methods:
        generate_query:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1generateQuery~1?api-version=2023-09-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    history:
      id: azure.resource_graph.history
      name: history
      title: History
      methods:
        history:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1resourcesHistory~1?api-version=2021-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    changes:
      id: azure.resource_graph.changes
      name: changes
      title: Changes
      methods:
        changes:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1resourceChangeDetails~1?api-version=2020-09-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.ResourceGraph/resources/?api-version=2021-03-01:
    post:
      tags:
        - Resources
      operationId: Resources
      description: Queries the resources managed by Azure Resource Manager for scopes specified in the request.
      externalDocs:
        description: Learn more about the query syntax here
        url: 'https://aka.ms/resource-graph/learntoquery'
      parameters: []
      requestBody:
        description: Request specifying query and its options.
        required: true
        x-ms-requestBody-name: query
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        '200':
          description: Result of the query operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        default:
          description: An error occurred while processing the request. See the error.code parameter to identify the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: resources
      x-stackQL-method: resources
      x-stackQL-verb: exec
  /providers/Microsoft.ResourceGraph/operations/?api-version=2023-09-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An error occurred while processing the request. See the error.code parameter to identify the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /providers/Microsoft.ResourceGraph/generateQuery/?api-version=2023-09-01-preview:
    post:
      operationId: Query_GenerateQuery
      tags:
        - QueryGeneration
      description: Generates ARG query for a given user prompt.
      parameters: []
      requestBody:
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryGenerationRequest'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryGenerationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: query
      x-stackQL-method: generate_query
      x-stackQL-verb: exec
  /providers/Microsoft.ResourceGraph/resourcesHistory/?api-version=2021-06-01-preview:
    post:
      description: List all snapshots of a resource for a given time interval.
      operationId: ResourcesHistory
      tags:
        - History
      requestBody:
        description: Request specifying the query and its options.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesHistoryRequest'
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesHistoryResult'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: history
      x-stackQL-method: history
      x-stackQL-verb: exec
  /providers/Microsoft.ResourceGraph/resourceChanges/?api-version=2020-09-01-preview:
    post:
      description: List changes to a resource for a given time interval.
      operationId: ResourceChanges
      tags:
        - Changes
      parameters: []
      requestBody:
        description: the parameters for this request for changes.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceChangesRequestParameters'
      responses:
        '200':
          description: A list of changes associated with a resource over a specific time interval.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceChangeList'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: changes
      x-stackQL-method: changes
      x-stackQL-verb: exec
  /providers/Microsoft.ResourceGraph/resourceChangeDetails/?api-version=2020-09-01-preview:
    post:
      description: Get resource change details.
      operationId: ResourceChangeDetails
      tags:
        - Changes
      parameters: []
      requestBody:
        description: The parameters for this request for resource change details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceChangeDetailsRequestParameters'
      responses:
        '200':
          description: Resource change details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceChangeDataList'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: changes
      x-stackQL-method: changes
      x-stackQL-verb: exec
