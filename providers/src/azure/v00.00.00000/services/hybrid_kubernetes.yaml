openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Hybrid Kubernetes API
  description: Hybrid Kubernetes Service allows you to manage your on-premise kubernetes clusters from azure by onboarding them to Azure Arc. The Hybrid Kubernetes API allows you to create, list, update and delete your Arc enabled kubernetes clusters.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ClusterNamePathParam:
      name: clusterName
      in: path
      description: The name of the Kubernetes cluster on which get is called.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      type: object
      description: The Connected cluster API operation
      properties:
        name:
          readOnly: true
          type: string
          description: 'Operation name: {Microsoft.Kubernetes}/{resource}/{operation}'
        display:
          type: object
          readOnly: true
          description: The object that represents the operation.
          properties:
            provider:
              type: string
              description: 'Service provider: Microsoft.Kubernetes'
            resource:
              type: string
              description: Connected Cluster Resource on which the operation is performed
            operation:
              type: string
              description: 'Operation type: Read, write, delete, etc.'
            description:
              type: string
              description: Description of the operation.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    OperationList:
      type: object
      description: The paginated list of connected cluster API operations.
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: The list of connected cluster API operations.
        nextLink:
          type: string
          description: The link to fetch the next page of connected cluster API operations.
    ConnectedClusterList:
      description: The paginated list of connected Clusters
      type: object
      properties:
        value:
          description: The list of connected clusters
          type: array
          items:
            $ref: '#/components/schemas/ConnectedCluster'
        nextLink:
          description: The link to fetch the next page of connected clusters
          type: string
    ConnectedCluster:
      required:
        - properties
        - identity
      description: Represents a connected cluster.
      properties:
        identity:
          $ref: '#/components/schemas/ConnectedClusterIdentity'
          description: The identity of the connected cluster.
        kind:
          $ref: '#/components/schemas/ConnectedClusterKind'
          description: The kind of connected cluster.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectedClusterProperties'
          description: Describes the connected cluster resource properties.
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ConnectedClusterIdentity:
      type: object
      required:
        - type
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
          default: SystemAssigned
          enum:
            - None
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
      description: Identity for the connected cluster.
    ConnectedClusterKind:
      type: string
      description: Indicates the kind of Arc connected cluster based on host infrastructure.
      enum:
        - ProvisionedCluster
      x-ms-enum:
        name: ConnectedClusterKind
        modelAsString: true
    ConnectedClusterProperties:
      type: object
      required:
        - agentPublicKeyCertificate
      properties:
        agentPublicKeyCertificate:
          type: string
          description: Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure.
        kubernetesVersion:
          readOnly: true
          type: string
          description: The Kubernetes version of the connected cluster resource
        totalNodeCount:
          readOnly: true
          type: integer
          description: Number of nodes present in the connected cluster resource
        totalCoreCount:
          readOnly: true
          format: int32
          type: integer
          description: Number of CPU cores present in the connected cluster resource
        agentVersion:
          readOnly: true
          type: string
          description: Version of the agent running on the connected cluster resource
        provisioningState:
          $ref: '#/components/schemas/ConnectedClusterProvisioningState'
          description: Provisioning state of the connected cluster resource.
        distribution:
          type: string
          description: The Kubernetes distribution running on this connected cluster.
        distributionVersion:
          type: string
          description: The Kubernetes distribution version on this connected cluster.
        infrastructure:
          type: string
          description: The infrastructure on which the Kubernetes cluster represented by this connected cluster is running on.
        offering:
          type: string
          readOnly: true
          description: Connected cluster offering
        managedIdentityCertificateExpirationTime:
          type: string
          format: date-time
          readOnly: true
          description: Expiration time of the managed identity certificate
        lastConnectivityTime:
          type: string
          readOnly: true
          format: date-time
          description: Time representing the last instance when heart beat was received from the cluster
        connectivityStatus:
          type: string
          readOnly: true
          description: Represents the connectivity status of the connected cluster.
          enum:
            - Connecting
            - Connected
            - Offline
            - Expired
          x-ms-enum:
            name: ConnectivityStatus
            modelAsString: true
        privateLinkState:
          type: string
          description: Property which describes the state of private link on a connected cluster resource.
          default: Disabled
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PrivateLinkState
            modelAsString: true
        privateLinkScopeResourceId:
          type: string
          description: This is populated only if privateLinkState is enabled. The resource id of the private link scope this connected cluster is assigned to, if any.
        azureHybridBenefit:
          type: string
          description: Indicates whether Azure Hybrid Benefit is opted in
          enum:
            - 'True'
            - 'False'
            - NotApplicable
          default: NotApplicable
          x-ms-enum:
            name: AzureHybridBenefit
            modelAsString: true
        aadProfile:
          description: AAD profile for the connected cluster.
          $ref: '#/components/schemas/AadProfile'
        arcAgentProfile:
          description: Arc agentry configuration for the provisioned cluster.
          $ref: '#/components/schemas/ArcAgentProfile'
        securityProfile:
          description: Security profile for the connected cluster.
          $ref: '#/components/schemas/SecurityProfile'
        oidcIssuerProfile:
          description: Open ID Connect (OIDC) Issuer Profile for the connected cluster.
          $ref: '#/components/schemas/OidcIssuerProfile'
        gateway:
          description: Details of the gateway used by the Arc router for connectivity.
          $ref: '#/components/schemas/Gateway'
          nullable: true
          x-nullable: true
        arcAgentryConfigurations:
          description: Configuration settings for customizing the behavior of the connected cluster.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ArcAgentryConfigurations'
          nullable: true
        miscellaneousProperties:
          description: More properties related to the Connected Cluster
          type: object
          additionalProperties:
            type: string
          readOnly: true
      description: Properties of the connected cluster.
    CredentialResults:
      type: object
      properties:
        hybridConnectionConfig:
          $ref: '#/components/schemas/HybridConnectionConfig'
          description: Contains the REP (rendezvous endpoint) and “Sender” access token.
          readOnly: true
        kubeconfigs:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CredentialResult'
          x-ms-identifiers:
            - name
          description: Base64-encoded Kubernetes configuration file.
      description: The list of credential result response.
    CredentialResult:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the credential.
        value:
          type: string
          format: byte
          readOnly: true
          description: Base64-encoded Kubernetes configuration file.
      description: The credential result response.
    ConnectedClusterProvisioningState:
      type: string
      description: The current deployment state of connectedClusters.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    ConnectedClusterPatch:
      description: Object containing updates for patch operations.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectedClusterPatchProperties'
          description: Describes the connected cluster resource properties that can be updated during PATCH operation.
      type: object
    ConnectedClusterPatchProperties:
      type: object
      properties:
        distribution:
          type: string
          description: Represents the distribution of the connected cluster
        distributionVersion:
          type: string
          description: Represents the Kubernetes distribution version on this connected cluster.
        azureHybridBenefit:
          type: string
          description: Indicates whether Azure Hybrid Benefit is opted in
          enum:
            - 'True'
            - 'False'
            - NotApplicable
          x-ms-enum:
            name: AzureHybridBenefit
            modelAsString: true
      description: Properties which can be patched on the connected cluster resource.
    HybridConnectionConfig:
      type: object
      description: Contains the REP (rendezvous endpoint) and “Sender” access token.
      properties:
        expirationTime:
          description: Timestamp when this token will be expired.
          type: integer
          readOnly: true
          format: int64
        hybridConnectionName:
          description: Name of the connection
          type: string
          readOnly: true
        relay:
          description: Name of the relay.
          type: string
          readOnly: true
        token:
          description: Sender access token
          type: string
          readOnly: true
        relayTid:
          description: TenantID of the relay
          type: string
          readOnly: true
        relayType:
          description: Type of relay
          type: string
          readOnly: true
    AadProfile:
      type: object
      description: AAD Profile specifies attributes for Azure Active Directory integration.
      properties:
        enableAzureRBAC:
          type: boolean
          description: Whether to enable Azure RBAC for Kubernetes authorization.
        adminGroupObjectIDs:
          type: array
          items:
            type: string
          description: The list of AAD group object IDs that will have admin role of the cluster.
        tenantID:
          type: string
          description: The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
    SecurityProfile:
      type: object
      description: Security Profile specifies attributes for cluster security features.
      properties:
        workloadIdentity:
          type: object
          description: The workload identity feature webhook.
          properties:
            enabled:
              type: boolean
              description: Whether to enable or disable the workload identity Webhook
    OidcIssuerProfile:
      type: object
      description: OIDC Issuer Profile specifies attributes for workload identity integration.
      properties:
        enabled:
          type: boolean
          description: Whether to enable oidc issuer for workload identity integration.
        issuerUrl:
          type: string
          description: The issuer url for hybrid clusters connected to Arc used for the workload identity feature.
          readOnly: true
        selfHostedIssuerUrl:
          type: string
          description: The issuer url for public cloud clusters - AKS, EKS, GKE - used for the workload identity feature.
    Gateway:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether the gateway for arc router connectivity is enabled.
        resourceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.HybridCompute/gateways
          description: The resource ID of the gateway used for the Arc router feature.
    ArcAgentryConfigurations:
      type: object
      properties:
        feature:
          type: string
          description: Specifies the name of the feature for the configuration setting.
        settings:
          type: object
          description: The configuration settings for the feature that do not contain any sensitive or secret information.
          nullable: true
          additionalProperties:
            type: string
        protectedSettings:
          type: object
          description: The configuration settings for the feature that contain any sensitive or secret information.
          nullable: true
          x-ms-secret: true
          additionalProperties:
            type: string
    ArcAgentProfile:
      description: Defines the Arc Agent properties for the clusters.
      type: object
      properties:
        desiredAgentVersion:
          type: string
          description: Version of the Arc agents to be installed on the cluster resource
        agentAutoUpgrade:
          type: string
          description: Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
          default: Enabled
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: AutoUpgradeOptions
            modelAsString: true
        systemComponents:
          type: array
          description: List of system extensions that are installed on the cluster resource.
          items:
            $ref: '#/components/schemas/SystemComponent'
        agentErrors:
          type: array
          description: List of arc agentry and system components errors on the cluster resource.
          items:
            $ref: '#/components/schemas/AgentError'
        agentState:
          type: string
          description: Represents the current state of the Arc agentry and its dependent components.
          readOnly: true
    AgentError:
      description: Agent Errors if any during agent or system component upgrade.
      type: object
      properties:
        message:
          type: string
          readOnly: true
          description: Agent error message.
        severity:
          type: string
          readOnly: true
          description: Severity of the error message.
        component:
          type: string
          readOnly: true
          description: Agent component where error message occured.
        time:
          format: date-time
          description: The timestamp of error occured (UTC).
          type: string
          readOnly: true
    SystemComponent:
      description: System extensions and its current versions installed on the cluster resource.
      type: object
      properties:
        type:
          type: string
          description: Type of the system extension
        userSpecifiedVersion:
          type: string
          description: Version of the system extension to be installed on the cluster resource.
        majorVersion:
          type: integer
          format: int32
          description: Major Version of the system extension that is currently installed on the cluster resource.
        currentVersion:
          type: string
          readOnly: true
          description: Version of the system extension that is currently installed on the cluster resource.
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      properties:
        createdBy:
          description: The identity that created the resource.
          type: string
        createdByType:
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          format: date-time
          description: The timestamp of resource creation (UTC).
          type: string
        lastModifiedBy:
          description: The identity that last modified the resource.
          type: string
        lastModifiedByType:
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: lastModifiedByType
            modelAsString: true
        lastModifiedAt:
          format: date-time
          description: The timestamp of resource modification (UTC).
          type: string
      readOnly: true
    ListClusterUserCredentialProperties:
      type: object
      required:
        - authenticationMethod
        - clientProxy
      properties:
        authenticationMethod:
          type: string
          description: The mode of client authentication.
          enum:
            - Token
            - AAD
          x-ms-enum:
            name: AuthenticationMethod
            modelAsString: true
        clientProxy:
          type: boolean
          description: Boolean value to indicate whether the request is for client side proxy or not
      description: ''
  x-stackQL-resources:
    connected_clusters:
      id: azure.hybrid_kubernetes.connected_clusters
      name: connected_clusters
      title: connected_clusters
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Kubernetes~1connectedClusters~1{clusterName}?api-version=2024-07-15-preview/put'
            operationId: ConnectedCluster_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedCluster
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Kubernetes~1connectedClusters~1{clusterName}?api-version=2024-07-15-preview/patch'
            operationId: ConnectedCluster_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedCluster
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Kubernetes~1connectedClusters~1{clusterName}?api-version=2024-07-15-preview/get'
            operationId: ConnectedCluster_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedCluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Kubernetes~1connectedClusters~1{clusterName}?api-version=2024-07-15-preview/delete'
            operationId: ConnectedCluster_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Kubernetes~1connectedClusters?api-version=2024-07-15-preview/get'
            operationId: ConnectedCluster_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedClusterList
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Kubernetes~1connectedClusters?api-version=2024-07-15-preview/get'
            operationId: ConnectedCluster_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedClusterList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/connected_clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_clusters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/connected_clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_clusters/methods/delete'
    connected_cluster_cluster_user_credentials:
      id: azure.hybrid_kubernetes.connected_cluster_cluster_user_credentials
      name: connected_cluster_cluster_user_credentials
      title: connected_cluster_cluster_user_credentials
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Kubernetes~1connectedClusters~1{clusterName}~1listClusterUserCredential?api-version=2024-07-15-preview/post'
            operationId: ConnectedClusterClusterUserCredential_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CredentialResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_cluster_cluster_user_credentials/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.hybrid_kubernetes.operations
      name: operations
      title: operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Kubernetes~1operations?api-version=2024-07-15-preview/get'
            operationId: Operations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_connected_clusters:
      id: azure.hybrid_kubernetes.vw_connected_clusters
      name: vw_connected_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              kind as kind,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.agentPublicKeyCertificate') as "agent_public_key_certificate",
              JSON_EXTRACT(properties, '$.kubernetesVersion') as "kubernetes_version",
              JSON_EXTRACT(properties, '$.totalNodeCount') as "total_node_count",
              JSON_EXTRACT(properties, '$.totalCoreCount') as "total_core_count",
              JSON_EXTRACT(properties, '$.agentVersion') as "agent_version",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.distribution') as "distribution",
              JSON_EXTRACT(properties, '$.distributionVersion') as "distribution_version",
              JSON_EXTRACT(properties, '$.infrastructure') as "infrastructure",
              JSON_EXTRACT(properties, '$.offering') as "offering",
              JSON_EXTRACT(properties, '$.managedIdentityCertificateExpirationTime') as "managed_identity_certificate_expiration_time",
              JSON_EXTRACT(properties, '$.lastConnectivityTime') as "last_connectivity_time",
              JSON_EXTRACT(properties, '$.connectivityStatus') as "connectivity_status",
              JSON_EXTRACT(properties, '$.privateLinkState') as "private_link_state",
              JSON_EXTRACT(properties, '$.privateLinkScopeResourceId') as "private_link_scope_resource_id",
              JSON_EXTRACT(properties, '$.azureHybridBenefit') as "azure_hybrid_benefit",
              JSON_EXTRACT(properties, '$.aadProfile') as "aad_profile",
              JSON_EXTRACT(properties, '$.arcAgentProfile') as "arc_agent_profile",
              JSON_EXTRACT(properties, '$.securityProfile') as "security_profile",
              JSON_EXTRACT(properties, '$.oidcIssuerProfile') as "oidc_issuer_profile",
              JSON_EXTRACT(properties, '$.gateway') as "gateway",
              JSON_EXTRACT(properties, '$.arcAgentryConfigurations') as "arc_agentry_configurations",
              JSON_EXTRACT(properties, '$.miscellaneousProperties') as "miscellaneous_properties",
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure.hybrid_kubernetes.connected_clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                kind as kind,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.agentPublicKeyCertificate') as "agent_public_key_certificate",
                json_extract_path_text(properties, '$.kubernetesVersion') as "kubernetes_version",
                json_extract_path_text(properties, '$.totalNodeCount') as "total_node_count",
                json_extract_path_text(properties, '$.totalCoreCount') as "total_core_count",
                json_extract_path_text(properties, '$.agentVersion') as "agent_version",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.distribution') as "distribution",
                json_extract_path_text(properties, '$.distributionVersion') as "distribution_version",
                json_extract_path_text(properties, '$.infrastructure') as "infrastructure",
                json_extract_path_text(properties, '$.offering') as "offering",
                json_extract_path_text(properties, '$.managedIdentityCertificateExpirationTime') as "managed_identity_certificate_expiration_time",
                json_extract_path_text(properties, '$.lastConnectivityTime') as "last_connectivity_time",
                json_extract_path_text(properties, '$.connectivityStatus') as "connectivity_status",
                json_extract_path_text(properties, '$.privateLinkState') as "private_link_state",
                json_extract_path_text(properties, '$.privateLinkScopeResourceId') as "private_link_scope_resource_id",
                json_extract_path_text(properties, '$.azureHybridBenefit') as "azure_hybrid_benefit",
                json_extract_path_text(properties, '$.aadProfile') as "aad_profile",
                json_extract_path_text(properties, '$.arcAgentProfile') as "arc_agent_profile",
                json_extract_path_text(properties, '$.securityProfile') as "security_profile",
                json_extract_path_text(properties, '$.oidcIssuerProfile') as "oidc_issuer_profile",
                json_extract_path_text(properties, '$.gateway') as "gateway",
                json_extract_path_text(properties, '$.arcAgentryConfigurations') as "arc_agentry_configurations",
                json_extract_path_text(properties, '$.miscellaneousProperties') as "miscellaneous_properties",
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure.hybrid_kubernetes.connected_clusters
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Kubernetes/connectedClusters/{clusterName}?api-version=2024-07-15-preview:
    put:
      summary: Register a new Kubernetes cluster with Azure Resource Manager.
      operationId: ConnectedCluster_CreateOrUpdate
      description: API to register a new Kubernetes cluster and create a tracked resource in Azure Resource Manager (ARM).
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNamePathParam'
      requestBody:
        description: Parameters supplied to Create a Connected Cluster.
        required: true
        x-ms-requestBody-name: ConnectedCluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedCluster'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedCluster'
        '201':
          description: Resource creation request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedCluster'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      summary: Updates a connected cluster.
      operationId: ConnectedCluster_Update
      description: API to update certain properties of the connected cluster resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNamePathParam'
      requestBody:
        description: Parameters supplied to update Connected Cluster.
        required: true
        x-ms-requestBody-name: ConnectedClusterPatch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedClusterPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedCluster'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get the properties of the specified connected cluster.
      operationId: ConnectedCluster_Get
      description: Returns the properties of the specified connected cluster, including name, identity, properties, and additional cluster details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNamePathParam'
      responses:
        '200':
          description: Resource retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedCluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a connected cluster.
      operationId: ConnectedCluster_Delete
      description: Delete a connected cluster, removing the tracked resource in Azure Resource Manager (ARM).
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNamePathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Resource deletion is in progress
        '204':
          description: The resource was not found but the request is well formed
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Kubernetes/connectedClusters/{clusterName}/listClusterUserCredential?api-version=2024-07-15-preview:
    post:
      summary: Gets cluster user credentials of a connected cluster
      operationId: ConnectedClusterClusterUserCredential_List
      description: Gets cluster user credentials of the connected cluster with a specified resource group and name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNamePathParam'
      requestBody:
        description: ListClusterUserCredential properties
        required: true
        x-ms-requestBody-name: Properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListClusterUserCredentialProperties'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResults'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ConnectedCluster_ListClusterUserCredential
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Kubernetes/connectedClusters?api-version=2024-07-15-preview:
    get:
      summary: Lists all connected clusters in the given ResourceGroup
      operationId: ConnectedCluster_ListByResourceGroup
      description: API to enumerate registered connected K8s clusters under a Resource Group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedClusterList'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Kubernetes/connectedClusters?api-version=2024-07-15-preview:
    get:
      summary: Lists all connected clusters in the given Subscription
      operationId: ConnectedCluster_ListBySubscription
      description: API to enumerate registered connected K8s clusters under a Subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedClusterList'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Kubernetes/operations?api-version=2024-07-15-preview:
    get:
      description: Lists all of the available API operations for Connected Cluster resource.
      operationId: Operations_Get
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
