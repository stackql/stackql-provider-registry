openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Workload Monitor
  description: Azure Workload Monitor
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    api-version:
      name: api-version
      in: query
      description: The API version to use for the operation.
      required: false
      schema:
        enum:
          - 2020-01-13-preview
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription Id of the virtual machine.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The resource group of the virtual machine.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    providerName:
      name: providerName
      in: path
      description: 'The provider name (ex: Microsoft.Compute for virtual machines).'
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceCollectionName:
      name: resourceCollectionName
      in: path
      description: 'The resource collection name (ex: virtualMachines for virtual machines).'
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceName:
      name: resourceName
      in: path
      description: The name of the virtual machine.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    monitorId:
      name: monitorId
      in: path
      description: The monitor Id of the virtual machine.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    timestampUnix:
      name: timestampUnix
      in: path
      description: The timestamp of the state change (unix format).
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    monitorNameFilter:
      name: $filter
      in: query
      description: 'Optionally filter by monitor name. Example: $filter=monitorName eq ''logical-disks|C:|disk-free-space-mb.'''
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    heartbeatFilter:
      name: $filter
      in: query
      description: 'Optionally filter by heartbeat condition. Example: $filter=isHeartbeat eq false.'
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    expand:
      name: $expand
      in: query
      description: 'Optionally expand the monitor’s evidence and/or configuration. Example: $expand=evidence,configuration.'
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    HealthMonitorStateChangeList:
      title: Information about the health state changes of the monitor within the provided time window.
      type: object
      readOnly: true
      properties:
        value:
          description: Array of health state changes within the specified time window.
          type: array
          items:
            $ref: '#/components/schemas/HealthMonitorStateChange'
        nextLink:
          description: Link to next page if the list is too long.
          type: string
    HealthMonitorList:
      title: Information about the current health statuses of the monitors.
      type: object
      readOnly: true
      properties:
        value:
          description: Array of health monitors of the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/HealthMonitor'
        nextLink:
          description: Link to next page if the list is too long.
          type: string
    HealthMonitor:
      title: Information about the monitor’s current health status.
      properties:
        properties:
          description: Properties of the monitor's health status.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HealthMonitorProperties'
        id:
          readOnly: true
          description: The resource Id.
          type: string
          example: /subscriptions/bc27da3b-3ba2-4e00-a6ec-1fde64aa1e21/resourceGroups/tugamidiAlerts/providers/Microsoft.Compute/virtualMachines/linuxEUS/providers/Microsoft.WorkloadMonitor/monitors/logical-disks|C@3A
        name:
          readOnly: true
          description: The resource name.
          type: string
          example: logical-disks|C@3A
        type:
          readOnly: true
          description: The resource type.
          type: string
          example: Microsoft.WorkloadMonitor/monitors
      type: object
    Resource:
      description: The resource model definition for the ARM proxy resource, 'microsoft.workloadmonitor/monitors'.
      type: object
      properties:
        id:
          readOnly: true
          description: The resource Id.
          type: string
          example: /subscriptions/bc27da3b-3ba2-4e00-a6ec-1fde64aa1e21/resourceGroups/tugamidiAlerts/providers/Microsoft.Compute/virtualMachines/linuxEUS/providers/Microsoft.WorkloadMonitor/monitors/logical-disks|C@3A
        name:
          readOnly: true
          description: The resource name.
          type: string
          example: logical-disks|C@3A
        type:
          readOnly: true
          description: The resource type.
          type: string
          example: Microsoft.WorkloadMonitor/monitors
      x-ms-azure-resource: true
    HealthMonitorProperties:
      description: Properties of the monitor.
      type: object
      properties:
        monitorName:
          description: Human-readable name of the monitor.
          type: string
          example: 'logical-disks|C:'
        monitorType:
          description: Type of the monitor.
          type: string
          example: logical-disks|*
        monitoredObject:
          description: Dynamic monitored object of the monitor.
          type: string
          example: 'C:'
        parentMonitorName:
          description: Name of the parent monitor.
          type: string
          example: logical-disks
        previousMonitorState:
          description: Previous health state of the monitor.
          $ref: '#/components/schemas/HealthState'
          example: Healthy
        currentMonitorState:
          description: Current health state of the monitor.
          $ref: '#/components/schemas/HealthState'
          example: Healthy
        evaluationTimestamp:
          description: Timestamp of the monitor's last health evaluation.
          type: string
          example: '2020-02-15T20:20:18.5765757Z'
        currentStateFirstObservedTimestamp:
          description: Timestamp of the monitor's last health state change.
          type: string
          example: 2020-02-15T20:20:1.5765757Z
        lastReportedTimestamp:
          description: Timestamp of the monitor's last reported health state.
          type: string
          example: 2020-02-15T20:20:1.5765757Z
        evidence:
          description: Evidence validating the monitor's current health state.
          type: object
        monitorConfiguration:
          description: The configuration settings at the time of the monitor's health evaluation.
          type: object
    HealthMonitorStateChange:
      title: Information about the monitor’s health state change at the provided timestamp.
      properties:
        properties:
          description: Properties of the monitor's state change.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HealthMonitorStateChangeProperties'
        id:
          readOnly: true
          description: The resource Id.
          type: string
          example: /subscriptions/bc27da3b-3ba2-4e00-a6ec-1fde64aa1e21/resourceGroups/tugamidiAlerts/providers/Microsoft.Compute/virtualMachines/linuxEUS/providers/Microsoft.WorkloadMonitor/monitors/logical-disks|C@3A
        name:
          readOnly: true
          description: The resource name.
          type: string
          example: logical-disks|C@3A
        type:
          readOnly: true
          description: The resource type.
          type: string
          example: Microsoft.WorkloadMonitor/monitors
      type: object
    HealthMonitorStateChangeProperties:
      description: Properties of the monitor.
      type: object
      properties:
        monitorName:
          description: Human-readable name of the monitor.
          type: string
          example: 'logical-disks|C:'
        monitorType:
          description: Type of the monitor.
          type: string
          example: logical-disks|*
        monitoredObject:
          description: Dynamic monitored object of the monitor.
          type: string
          example: 'C:'
        evaluationTimestamp:
          description: Timestamp of the monitor's last health evaluation.
          type: string
          example: '2020-01-08T20:20:18.5765757Z'
        currentStateFirstObservedTimestamp:
          description: Timestamp of the monitor's last health state change.
          type: string
          example: '2020-01-08T20:20:18.5765757Z'
        previousMonitorState:
          description: Previous health state of the monitor.
          $ref: '#/components/schemas/HealthState'
          example: Healthy
        currentMonitorState:
          description: Current health state of the monitor.
          $ref: '#/components/schemas/HealthState'
          example: Critical
        evidence:
          description: Evidence validating the monitor's current health state.
          type: object
        monitorConfiguration:
          description: The configuration settings at the time of the monitor's health evaluation.
          type: object
    HealthState:
      title: One of health states - healthy, critical, warning, unknown, none, disabled.
      type: string
      readOnly: true
      enum:
        - Healthy
        - Critical
        - Warning
        - Unknown
        - Disabled
        - None
      x-ms-enum:
        name: HealthState
        modelAsString: true
    OperationList:
      title: List of available REST API operations
      type: object
      readOnly: true
      properties:
        value:
          description: Array of available REST API operations.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: Link to next page if the list is too long.
          type: string
    Operation:
      title: Operation supported by the resource provider.
      type: object
      readOnly: true
      required:
        - name
        - display
        - origin
      properties:
        name:
          description: The name of the operation being performed on this particular object.
          type: string
          example: Microsoft.WorkloadMonitor/monitors/read
        display:
          description: The localized display information for this particular operation or action.
          type: object
          required:
            - provider
            - resource
            - operation
            - description
          properties:
            provider:
              description: Operation resource provider name.
              type: string
              example: Microsoft.WorkloadMonitor
            resource:
              description: Resource on which the operation is performed.
              type: string
              example: Monitors
            operation:
              description: Human-readable, friendly name for the operation.
              type: string
              example: Get monitors
            description:
              description: Operation description.
              type: string
              example: Gets monitors and their current health state
        origin:
          description: The intended executor of the operation.
          type: string
          example: user, system
    ErrorResponse:
      title: Error response
      type: object
      properties:
        error:
          description: Error info.
          type: object
          properties:
            code:
              description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
              type: string
            message:
              description: Human-readable representation of the error.
              type: string
            details:
              description: Error details.
              type: array
              items:
                $ref: '#/components/schemas/ErrorDetails'
              x-ms-identifiers: []
    ErrorDetails:
      title: Error details
      type: object
      properties:
        code:
          description: Error code identifying the specific error.
          type: string
        message:
          description: A human-readable error message.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.workload_monitor.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.WorkloadMonitor~1operations?api-version=2020-01-13-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    health_monitors:
      id: azure.workload_monitor.health_monitors
      name: health_monitors
      title: health_monitors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerName}~1{resourceCollectionName}~1{resourceName}~1providers~1Microsoft.WorkloadMonitor~1monitors?api-version=2020-01-13-preview/get'
            operationId: HealthMonitors_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HealthMonitorList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerName}~1{resourceCollectionName}~1{resourceName}~1providers~1Microsoft.WorkloadMonitor~1monitors~1{monitorId}?api-version=2020-01-13-preview/get'
            operationId: HealthMonitors_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HealthMonitor
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/health_monitors/methods/get'
          - $ref: '#/components/x-stackQL-resources/health_monitors/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    health_monitors_state_changes:
      id: azure.workload_monitor.health_monitors_state_changes
      name: health_monitors_state_changes
      title: health_monitors_state_changes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerName}~1{resourceCollectionName}~1{resourceName}~1providers~1Microsoft.WorkloadMonitor~1monitors~1{monitorId}~1history?api-version=2020-01-13-preview/get'
            operationId: HealthMonitorsStateChanges_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HealthMonitorStateChangeList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerName}~1{resourceCollectionName}~1{resourceName}~1providers~1Microsoft.WorkloadMonitor~1monitors~1{monitorId}~1history~1{timestampUnix}?api-version=2020-01-13-preview/get'
            operationId: HealthMonitorsStateChange_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HealthMonitorStateChange
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/health_monitors_state_changes/methods/get'
          - $ref: '#/components/x-stackQL-resources/health_monitors_state_changes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_health_monitors:
      id: azure.workload_monitor.vw_health_monitors
      name: vw_health_monitors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.monitorName') as "monitor_name",
              JSON_EXTRACT(properties, '$.monitorType') as "monitor_type",
              JSON_EXTRACT(properties, '$.monitoredObject') as "monitored_object",
              JSON_EXTRACT(properties, '$.parentMonitorName') as "parent_monitor_name",
              JSON_EXTRACT(properties, '$.previousMonitorState') as "previous_monitor_state",
              JSON_EXTRACT(properties, '$.currentMonitorState') as "current_monitor_state",
              JSON_EXTRACT(properties, '$.evaluationTimestamp') as "evaluation_timestamp",
              JSON_EXTRACT(properties, '$.currentStateFirstObservedTimestamp') as "current_state_first_observed_timestamp",
              JSON_EXTRACT(properties, '$.lastReportedTimestamp') as "last_reported_timestamp",
              JSON_EXTRACT(properties, '$.evidence') as "evidence",
              JSON_EXTRACT(properties, '$.monitorConfiguration') as "monitor_configuration",
              subscriptionId,
              resourceGroupName,
              providerName,
              resourceCollectionName,
              resourceName,
              monitorId
              FROM azure.workload_monitor.health_monitors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND providerName = 'replace-me' AND resourceCollectionName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.monitorName') as "monitor_name",
                json_extract_path_text(properties, '$.monitorType') as "monitor_type",
                json_extract_path_text(properties, '$.monitoredObject') as "monitored_object",
                json_extract_path_text(properties, '$.parentMonitorName') as "parent_monitor_name",
                json_extract_path_text(properties, '$.previousMonitorState') as "previous_monitor_state",
                json_extract_path_text(properties, '$.currentMonitorState') as "current_monitor_state",
                json_extract_path_text(properties, '$.evaluationTimestamp') as "evaluation_timestamp",
                json_extract_path_text(properties, '$.currentStateFirstObservedTimestamp') as "current_state_first_observed_timestamp",
                json_extract_path_text(properties, '$.lastReportedTimestamp') as "last_reported_timestamp",
                json_extract_path_text(properties, '$.evidence') as "evidence",
                json_extract_path_text(properties, '$.monitorConfiguration') as "monitor_configuration",
                subscriptionId,
                resourceGroupName,
                providerName,
                resourceCollectionName,
                resourceName,
                monitorId
                FROM azure.workload_monitor.health_monitors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND providerName = 'replace-me' AND resourceCollectionName = 'replace-me' AND resourceName = 'replace-me';
    vw_health_monitors_state_changes:
      id: azure.workload_monitor.vw_health_monitors_state_changes
      name: vw_health_monitors_state_changes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.monitorName') as "monitor_name",
              JSON_EXTRACT(properties, '$.monitorType') as "monitor_type",
              JSON_EXTRACT(properties, '$.monitoredObject') as "monitored_object",
              JSON_EXTRACT(properties, '$.evaluationTimestamp') as "evaluation_timestamp",
              JSON_EXTRACT(properties, '$.currentStateFirstObservedTimestamp') as "current_state_first_observed_timestamp",
              JSON_EXTRACT(properties, '$.previousMonitorState') as "previous_monitor_state",
              JSON_EXTRACT(properties, '$.currentMonitorState') as "current_monitor_state",
              JSON_EXTRACT(properties, '$.evidence') as "evidence",
              JSON_EXTRACT(properties, '$.monitorConfiguration') as "monitor_configuration",
              subscriptionId,
              resourceGroupName,
              providerName,
              resourceCollectionName,
              resourceName,
              monitorId,
              timestampUnix
              FROM azure.workload_monitor.health_monitors_state_changes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND providerName = 'replace-me' AND resourceCollectionName = 'replace-me' AND resourceName = 'replace-me' AND monitorId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.monitorName') as "monitor_name",
                json_extract_path_text(properties, '$.monitorType') as "monitor_type",
                json_extract_path_text(properties, '$.monitoredObject') as "monitored_object",
                json_extract_path_text(properties, '$.evaluationTimestamp') as "evaluation_timestamp",
                json_extract_path_text(properties, '$.currentStateFirstObservedTimestamp') as "current_state_first_observed_timestamp",
                json_extract_path_text(properties, '$.previousMonitorState') as "previous_monitor_state",
                json_extract_path_text(properties, '$.currentMonitorState') as "current_monitor_state",
                json_extract_path_text(properties, '$.evidence') as "evidence",
                json_extract_path_text(properties, '$.monitorConfiguration') as "monitor_configuration",
                subscriptionId,
                resourceGroupName,
                providerName,
                resourceCollectionName,
                resourceName,
                monitorId,
                timestampUnix
                FROM azure.workload_monitor.health_monitors_state_changes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND providerName = 'replace-me' AND resourceCollectionName = 'replace-me' AND resourceName = 'replace-me' AND monitorId = 'replace-me';
paths:
  /providers/Microsoft.WorkloadMonitor/operations?api-version=2020-01-13-preview:
    get:
      summary: Get a list of all available REST API operations.
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The list of available REST API operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors?api-version=2020-01-13-preview:
    get:
      summary: 'Get the current health status of all monitors of a virtual machine. Optional parameters: $expand (retrieve the monitor''s evidence and configuration) and $filter (filter by monitor name).'
      operationId: HealthMonitors_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/providerName'
        - $ref: '#/components/parameters/resourceCollectionName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/monitorNameFilter'
        - $ref: '#/components/parameters/expand'
      responses:
        '200':
          description: The health monitors matching the specified criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthMonitorList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}?api-version=2020-01-13-preview:
    get:
      summary: 'Get the current health status of a monitor of a virtual machine. Optional parameter: $expand (retrieve the monitor''s evidence and configuration).'
      operationId: HealthMonitors_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/providerName'
        - $ref: '#/components/parameters/resourceCollectionName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/monitorId'
        - $ref: '#/components/parameters/expand'
      responses:
        '200':
          description: The health monitor matching the specified criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthMonitor'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}/history?api-version=2020-01-13-preview:
    get:
      summary: 'Get the health state changes of a monitor of a virtual machine within the provided time window (default is the last 24 hours). Optional parameters: $expand (retrieve the monitor''s evidence and configuration) and $filter (filter by heartbeat condition).'
      operationId: HealthMonitorsStateChanges_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/providerName'
        - $ref: '#/components/parameters/resourceCollectionName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/monitorId'
        - $ref: '#/components/parameters/heartbeatFilter'
        - $ref: '#/components/parameters/expand'
        - name: startTimestampUtc
          in: query
          description: The start of the time window.
          required: false
          schema:
            format: date-time
            type: string
        - name: endTimestampUtc
          in: query
          description: The end of the time window.
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          description: The health monitor state changes matching the specified criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthMonitorStateChangeList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: HealthMonitors_ListStateChanges
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}/history/{timestampUnix}?api-version=2020-01-13-preview:
    get:
      summary: 'Get the health state change of a monitor of a virtual machine at the provided timestamp. Optional parameter: $expand (retrieve the monitor''s evidence and configuration).'
      operationId: HealthMonitorsStateChange_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/providerName'
        - $ref: '#/components/parameters/resourceCollectionName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/monitorId'
        - $ref: '#/components/parameters/timestampUnix'
        - $ref: '#/components/parameters/expand'
      responses:
        '200':
          description: The health monitor state change matching the specified criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthMonitorStateChange'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: HealthMonitors_GetStateChange
