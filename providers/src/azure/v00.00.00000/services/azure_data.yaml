openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureData Management Client
  description: The AzureData management API provides a RESTful set of web APIs to manage Azure Data Resources.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The ID of the Azure subscription
      required: true
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the Azure resource group
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    location:
      name: location
      in: path
      description: The Azure region to use for the request
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    apiVersion:
      name: api-version
      in: query
      description: The API version to use for the request
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription ID that identifies an Azure subscription.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: API version to use for the request.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    ResourceGroupParameter:
      name: resourceGroupName
      in: path
      description: Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlServerNameParameter:
      name: SqlServerName
      in: path
      description: Name of the Sql Server.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlServerRegistrationNameParameter:
      name: SqlServerRegistrationNameParameter
      in: path
      description: Name of the Sql Server registration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts..
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The  fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
      type: object
    Sku:
      description: The resource model definition representing SKU
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
      type: object
    Identity:
      description: Identity for the resource.
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
      type: object
    Plan:
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
      type: object
    OperationListResult:
      description: Result of the request to list SQL operations.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    Operation:
      description: SQL REST API operation definition.
      properties:
        name:
          description: The name of the operation being performed on this particular object.
          type: string
          readOnly: true
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: The localized display information for this particular operation / action.
          readOnly: true
        origin:
          description: The intended executor of the operation.
          enum:
            - user
            - system
          type: string
          readOnly: true
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
        properties:
          description: Additional descriptions for the operation.
          type: object
          additionalProperties:
            type: object
          readOnly: true
          x-ms-client-flatten: false
      type: object
    OperationDisplay:
      description: Display metadata associated with the operation.
      type: object
      properties:
        provider:
          description: The localized friendly form of the resource provider name.
          type: string
          readOnly: true
        resource:
          description: The localized friendly form of the resource type related to this action/operation.
          type: string
          readOnly: true
        operation:
          description: The localized friendly name for the operation.
          type: string
          readOnly: true
        description:
          description: The localized friendly description for the operation.
          type: string
          readOnly: true
    SqlServerRegistrationProperties:
      description: The SQL server Registration properties.
      type: object
      properties:
        subscriptionId:
          description: Subscription Id
          type: string
        resourceGroup:
          description: Resource Group Name
          type: string
        propertyBag:
          description: Optional Properties as JSON string
          type: string
    Resource:
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      x-ms-azure-resource: true
      type: object
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      type: object
    SqlServerRegistration:
      description: A SQL server registration.
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
        properties:
          $ref: '#/components/schemas/SqlServerRegistrationProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    SqlServerRegistrationUpdate:
      description: An update to a SQL Server Registration.
      type: object
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
    SqlServerRegistrationListResult:
      description: Server
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/SqlServerRegistration'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    SqlServerProperties:
      description: The SQL server properties.
      type: object
      properties:
        cores:
          format: int32
          description: Cores of the Sql Server.
          type: integer
          x-ms-mutability:
            - update
            - read
        version:
          description: Version of the Sql Server.
          type: string
        edition:
          description: Sql Server Edition.
          type: string
        registrationID:
          description: ID for Parent Sql Server Registration.
          type: string
        propertyBag:
          description: Sql Server Json Property Bag.
          type: string
    SqlServer:
      description: A SQL server.
      properties:
        properties:
          $ref: '#/components/schemas/SqlServerProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    SqlServerListResult:
      description: A list of SQL servers.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/SqlServer'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    SystemData:
      description: Read only system data
      type: object
      properties:
        createdBy:
          type: string
          description: An identifier for the identity that created the resource
        createdByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that created the resource
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC)
        lastModifiedBy:
          type: string
          description: An identifier for the identity that last modified the resource
        lastModifiedByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that last modified the resource
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    IdentityType:
      description: The type of identity that creates/modifies resources
      type: string
      enum:
        - user
        - application
        - managedIdentity
        - key
      x-ms-enum:
        name: IdentityType
        modelAsString: true
    ResourceSku:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        family:
          type: string
        name:
          type: string
        size:
          type: string
        tier:
          type: string
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: 'null'
      description: An error response from the Azure Data service.
      type: object
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers:
            - message
            - target
          description: A list of additional details about the error.
      description: An error response from the Batch service.
      type: object
    ODataError:
      properties:
        code:
          type: string
          description: A language-independent error name.
        message:
          type: string
          description: The error message.
        target:
          type: string
          description: The target of the error (for example, the name of the property in error).
        details:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
      type: object
      description: Information about an error.
  x-stackQL-resources:
    operations:
      id: azure.azure_data.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureData~1operations~1?api-version=2019-07-24-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sql_server_registrations:
      id: azure.azure_data.sql_server_registrations
      name: sql_server_registrations
      title: sql_server_registrations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1?api-version=2019-07-24-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1?api-version=2019-07-24-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1?api-version=2019-07-24-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1?api-version=2019-07-24-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1?api-version=2019-07-24-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1?api-version=2019-07-24-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_server_registrations/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_server_registrations/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/sql_server_registrations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_server_registrations/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_server_registrations/methods/delete'
    sql_servers:
      id: azure.azure_data.sql_servers
      name: sql_servers
      title: sql_servers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1sqlServers~1{sqlServerName}~1?api-version=2019-07-24-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1sqlServers~1{sqlServerName}~1?api-version=2019-07-24-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1sqlServers~1{sqlServerName}~1?api-version=2019-07-24-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureData~1sqlServerRegistrations~1{sqlServerRegistrationName}~1sqlServers~1?api-version=2019-07-24-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_servers/methods/list_by_resource_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_servers/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_servers/methods/delete'
    vw_sql_server_registrations:
      id: azure.azure_data.vw_sql_server_registrations
      name: vw_sql_server_registrations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.subscriptionId') as subscription_id,
              JSON_EXTRACT(properties, '$.resourceGroup') as resource_group,
              JSON_EXTRACT(properties, '$.propertyBag') as property_bag,
              subscriptionId,
              resourceGroupName,
              sqlServerRegistrationName
              FROM azure.azure_data.sql_server_registrations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.subscriptionId') as subscription_id,
                JSON_EXTRACT(properties, '$.resourceGroup') as resource_group,
                JSON_EXTRACT(properties, '$.propertyBag') as property_bag,
                subscriptionId,
                resourceGroupName,
                sqlServerRegistrationName
                FROM azure.azure_data.sql_server_registrations
                WHERE subscriptionId = 'replace-me';
    vw_sql_servers:
      id: azure.azure_data.vw_sql_servers
      name: vw_sql_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.cores') as cores,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.edition') as edition,
              JSON_EXTRACT(properties, '$.registrationID') as registration_id,
              JSON_EXTRACT(properties, '$.propertyBag') as property_bag,
              subscriptionId,
              resourceGroupName,
              sqlServerRegistrationName,
              sqlServerName
              FROM azure.azure_data.sql_servers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND sqlServerRegistrationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.cores') as cores,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.edition') as edition,
                JSON_EXTRACT(properties, '$.registrationID') as registration_id,
                JSON_EXTRACT(properties, '$.propertyBag') as property_bag,
                subscriptionId,
                resourceGroupName,
                sqlServerRegistrationName,
                sqlServerName
                FROM azure.azure_data.sql_servers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND sqlServerRegistrationName = 'replace-me';
paths:
  /providers/Microsoft.AzureData/operations/?api-version=2019-07-24-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available SQL Server Registration API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Successfully retrieved operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}/?api-version=2019-07-24-preview:
    get:
      tags:
        - SqlServerRegistrations
      description: Gets a SQL Server registration.
      operationId: SqlServerRegistrations_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the SQL Server registration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - SqlServerRegistrations
      description: Creates or updates a SQL Server registration.
      operationId: SqlServerRegistrations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The SQL Server registration to be created or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerRegistration'
      responses:
        '200':
          description: Successfully updated the SQL Server registration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerRegistration'
        '201':
          description: Successfully created the SQL Server registration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 TinaGroupUpdateFailVmAttached - SQL Server registration cannot be updated as it has attached a SQL Server.

             * 400 InvalidSqlImageOffer - Provided SQL image offer is invalid.

             * 400 InvalidSqlSku - Provided SQL sku is invalid.

             * 400 OuPathAndDomainMismatch - OU path is not within the domain provided.

             * 400 InvalidAccountNameFormat - Account name format is invalid.

             * 400 CloudWitnessUnsupported - For Windows Server 2012R2 setup cloud witness is not allowed.

             * 400 FileShareWitnessDisAllowed - For Windows Server 2016 and beyond setup, file share witness is not allowed.

             * 400 InvalidStorageAccountUrl - Invalid storage account url.

             * 400 TinaGroupNameTooLong - SQL Server registration name cannot exceed 15 characters.

             * 400 InvalidTinaGroupName - Invalid SQL Server registration name.

             * 400 TinaGroupNotEmpty - SQL Server registration is not empty.

             * 400 TinaGroupUpdateNotAllowed - Update to SQL Server registration is not allowed.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - SqlServerRegistrations
      description: Deletes a SQL Server registration.
      operationId: SqlServerRegistrations_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the SQL Server registration.
        '204':
          description: The specified SQL Server registration does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 TinaGroupUpdateFailVmAttached - SQL Server registration cannot be updated as it has attached a SQL Server.

             * 400 InvalidSqlImageOffer - Provided SQL image offer is invalid.

             * 400 InvalidSqlSku - Provided SQL sku is invalid.

             * 400 OuPathAndDomainMismatch - OU path is not within the domain provided.

             * 400 InvalidAccountNameFormat - Account name format is invalid.

             * 400 CloudWitnessUnsupported - For Windows Server 2012R2 setup cloud witness is not allowed.

             * 400 FileShareWitnessDisAllowed - For Windows Server 2016 and beyond setup, file share witness is not allowed.

             * 400 InvalidStorageAccountUrl - Invalid storage account url.

             * 400 TinaGroupNameTooLong - SQL Server registration name cannot exceed 15 characters.

             * 400 InvalidTinaGroupName - Invalid SQL Server registration name.

             * 400 TinaGroupNotEmpty - SQL Server registration is not empty.

             * 400 TinaGroupUpdateNotAllowed - Update to SQL Server registration is not allowed.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - SqlServerRegistrations
      description: Updates SQL Server Registration tags.
      operationId: SqlServerRegistrations_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The SQL Server Registration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerRegistrationUpdate'
      responses:
        '200':
          description: Successfully updated the SQL Server Registration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/?api-version=2019-07-24-preview:
    get:
      tags:
        - SqlServerRegistrations
      description: Gets all SQL Server registrations in a resource group.
      operationId: SqlServerRegistrations_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved all SQL Server registrations in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerRegistrationListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureData/sqlServerRegistrations/?api-version=2019-07-24-preview:
    get:
      tags:
        - SqlServerRegistrations
      description: Gets all SQL Server registrations in a subscription.
      operationId: SqlServerRegistrations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved all SQL Server registrations in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerRegistrationListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 404 ResourceNotFound - The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}/sqlServers/{sqlServerName}/?api-version=2019-07-24-preview:
    get:
      tags:
        - SqlServers
      description: Gets a SQL Server.
      operationId: SqlServers_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - name: sqlServerName
          in: path
          description: Name of the SQL Server.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The child resources to include in the response.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the SQL Server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServer'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - SqlServers
      description: Creates or updates a SQL Server.
      operationId: SqlServers_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - name: sqlServerName
          in: path
          description: Name of the SQL Server.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The SQL Server to be created or updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServer'
      responses:
        '200':
          description: Successfully updated the SQL Server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServer'
        '201':
          description: Successfully created the SQL Server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServer'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidVmResourceIdChange - Server resource id property cannot be updated.

             * 400 TinaAlreadyIncludedInGroup - SQL Server cannot be moved from one group to another in same operation.

             * 400 TinaCannotRemoveFromGroup - SQL Server cannot be removed from group.

             * 400 VmLocationMismatch - VM location does not match that of SQL Server.

             * 400 SqlSkuMismatchWithGroup - SQL sku set on the SQL Server registration does not match that of the SQL Server.

             * 400 VmInsufficientPermission - Insufficient permission to Vm.

             * 400 SingleNicOnVmAllowed - Only Single NIC Servers are allowed.

             * 400 InvalidTinaGroupResourceIdParameterValue - SQL Server registration resource id is not in correct format.

             * 400 MismatchVmGroupSubscription - Subscription id for SQL Server and SQL Server registration are different.

             * 400 IncompleteDomainCredentialsProperty - Incomplete input provided for domain credentials property.

             * 400 BYOLChangeToPAYGNotSupported - The conversion from AHUB to PAYG is not supported for BYOL images

             * 400 InvalidVmResourceIdParameterValue - Provided Server resource id is not valid.

             * 400 MismatchInTinaAndVmResourceIdSubscription - Mismatch in subscription id for SQL Server and Server resource id property.

             * 400 MismatchTinaAndVmName - SQL Server name is not same as the Server name provided on ServerResourceId property.

             * 400 MismatchTinaAndVmRgName - SQL Server resource group name is not same as the Server resource group name provided on ServerResourceId property.

             * 400 NotSupportedTinaOSVersion - Server OS type is not Windows. Only Windows OS versions are supported

             * 400 VmNotRunning - The VM is not in running state.

             * 400 VmAgentNotRunning - The VM agent is not installed or in running state.

             * 400 SqlExtNotInstalled - Sql Iaas Extension is not installed on Server.

             * 400 PAYGNotSupportedForNonGalleryVM - License type PAYG is invalid for this Server as this was not created from Azure marketplace image.

             * 400 SqlVersionMismatchWithGroup - SQL version mismatch with SQL Server registration.

             * 400 VmOSVersionMismatchWithGroup - OS version mismatch with group.

             * 400 AutoBackupEncryptionPasswordNotSpecified - Password not provided when enabling encryption as auto backup setting.

             * 400 BackupScheduleTypeNotSet - Backup schedule type needs to be set.

             * 400 BackupStorageCredentialsNotSpecified - Backup storage credentials are not specified.

             * 400 KeyVaultCredentialsNotSpecified - Key vault credentials not specified.

             * 400 SqlCredentialsNotSpecified - SQL Server credentials are not specified.

             * 400 IncompleteAutoPatchingSettings - Incomplete auto patching settings specified.

             * 400 IncompleteAutoBackupSettings - Incomplete auto backup settings specified.

             * 400 IncompleteSqlStorageSettings - Incomplete SQL storage settings specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 404 SubscriptionDoesNotHaveTINAInResourceGroup - Subscription does not have SQL Server Instance in resource group.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - SqlServers
      description: Deletes a SQL Server.
      operationId: SqlServers_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - name: sqlServerName
          in: path
          description: Name of the SQL Server.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the SQL Server.
        '204':
          description: The specified SQL Server does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidVmResourceIdChange - Server resource id property cannot be updated.

             * 400 TinaAlreadyIncludedInGroup - SQL Server cannot be moved from one group to another in same operation.

             * 400 TinaCannotRemoveFromGroup - SQL Server cannot be removed from group.

             * 400 VmLocationMismatch - VM location does not match that of SQL Server.

             * 400 SqlSkuMismatchWithGroup - SQL sku set on the SQL Server registration does not match that of the SQL Server.

             * 400 VmInsufficientPermission - Insufficient permission to Vm.

             * 400 SingleNicOnVmAllowed - Only Single NIC Servers are allowed.

             * 400 InvalidTinaGroupResourceIdParameterValue - SQL Server registration resource id is not in correct format.

             * 400 MismatchVmGroupSubscription - Subscription id for SQL Server and SQL Server registration are different.

             * 400 IncompleteDomainCredentialsProperty - Incomplete input provided for domain credentials property.

             * 400 BYOLChangeToPAYGNotSupported - The conversion from AHUB to PAYG is not supported for BYOL images

             * 400 InvalidVmResourceIdParameterValue - Provided Server resource id is not valid.

             * 400 MismatchInTinaAndVmResourceIdSubscription - Mismatch in subscription id for SQL Server and Server resource id property.

             * 400 MismatchTinaAndVmName - SQL Server name is not same as the Server name provided on ServerResourceId property.

             * 400 MismatchTinaAndVmRgName - SQL Server resource group name is not same as the Server resource group name provided on ServerResourceId property.

             * 400 NotSupportedTinaOSVersion - Server OS type is not Windows. Only Windows OS versions are supported

             * 400 VmNotRunning - The VM is not in running state.

             * 400 VmAgentNotRunning - The VM agent is not installed or in running state.

             * 400 SqlExtNotInstalled - Sql Iaas Extension is not installed on Server.

             * 400 PAYGNotSupportedForNonGalleryVM - License type PAYG is invalid for this Server as this was not created from Azure marketplace image.

             * 400 SqlVersionMismatchWithGroup - SQL version mismatch with SQL Server registration.

             * 400 VmOSVersionMismatchWithGroup - OS version mismatch with group.

             * 400 AutoBackupEncryptionPasswordNotSpecified - Password not provided when enabling encryption as auto backup setting.

             * 400 BackupScheduleTypeNotSet - Backup schedule type needs to be set.

             * 400 BackupStorageCredentialsNotSpecified - Backup storage credentials are not specified.

             * 400 KeyVaultCredentialsNotSpecified - Key vault credentials not specified.

             * 400 SqlCredentialsNotSpecified - SQL Server credentials are not specified.

             * 400 IncompleteAutoPatchingSettings - Incomplete auto patching settings specified.

             * 400 IncompleteAutoBackupSettings - Incomplete auto backup settings specified.

             * 400 IncompleteSqlStorageSettings - Incomplete SQL storage settings specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 404 SubscriptionDoesNotHaveTINAInResourceGroup - Subscription does not have SQL Server Instance in resource group.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}/sqlServers/?api-version=2019-07-24-preview:
    get:
      tags:
        - SqlServers
      description: Gets all SQL Servers in a SQL Server Registration.
      operationId: SqlServers_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlServerRegistrationName
          in: path
          description: Name of the SQL Server registration.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The child resources to include in the response.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved all SQL Servers in the SQL Server Registration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
