openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Managed Network (Microsoft.ManagedNetwork)
  description: Managed Network
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: false
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagedNetworkNameParameter:
      name: managedNetworkName
      in: path
      description: The name of the Managed Network.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagedNetworkGroupNameParameter:
      name: managedNetworkGroupName
      in: path
      description: The name of the Managed Network Group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagedNetworkPeeringPolicyNameParameter:
      name: managedNetworkPeeringPolicyName
      in: path
      description: The name of the Managed Network Peering Policy.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ListPageSizeParameter:
      name: $top
      in: query
      description: May be used to limit the number of results in a page for list queries.
      required: false
      x-ms-parameter-location: method
      schema:
        minimum: 1
        maximum: 20
        type: integer
    ListSkipTokenParameter:
      name: $skiptoken
      in: query
      description: Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ManagedNetwork:
      description: The Managed Network resource
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedNetworkProperties'
          description: The MNC properties
        tags:
          type: object
          x-ms-mutability:
            - read
            - create
            - update
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    ManagedNetworkProperties:
      description: Properties of Managed Network
      properties:
        scope:
          $ref: '#/components/schemas/Scope'
          description: The collection of management groups, subscriptions, virtual networks, and subnets by the Managed Network. This is a read-only property that is reflective of all ScopeAssignments for this Managed Network
        connectivity:
          $ref: '#/components/schemas/ConnectivityCollection'
          readOnly: true
          description: The collection of groups and policies concerned with connectivity
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the ManagedNetwork resource.
          enum:
            - Updating
            - Deleting
            - Failed
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    ManagedNetworkUpdate:
      type: object
      properties:
        tags:
          type: object
          x-ms-mutability:
            - read
            - create
            - update
          additionalProperties:
            type: string
          description: Resource tags
      description: Update Tags of Managed Network
    ManagedNetworkListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ManagedNetwork'
          description: Gets a page of ManagedNetworks
        nextLink:
          type: string
          description: Gets the URL to get the next page of results.
      description: Result of the request to list Managed Network. It contains a list of Managed Networks and a URL link to get the next set of results.
      type: object
    Scope:
      properties:
        managementGroups:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of management groups covered by the Managed Network
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of subscriptions covered by the Managed Network
        virtualNetworks:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of virtual nets covered by the Managed Network
        subnets:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of  subnets covered by the Managed Network
      description: Scope of a Managed Network
      type: object
    ScopeAssignment:
      description: The Managed Network resource
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScopeAssignmentProperties'
          description: The Scope Assignment properties
      type: object
    ScopeAssignmentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ScopeAssignment'
          description: Gets a page of ScopeAssignment
        nextLink:
          type: string
          description: Gets the URL to get the next set of results.
      description: Result of the request to list ScopeAssignment. It contains a list of groups and a URL link to get the next set of results.
      type: object
    ScopeAssignmentProperties:
      description: Properties of Managed Network
      properties:
        assignedManagedNetwork:
          type: string
          description: The managed network ID with scope will be assigned to.
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the ManagedNetwork resource.
          enum:
            - Updating
            - Deleting
            - Failed
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    ConnectivityCollection:
      properties:
        groups:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedNetworkGroup'
          description: The collection of connectivity related Managed Network Groups within the Managed Network
        peerings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedNetworkPeeringPolicy'
          description: The collection of Managed Network Peering Policies within the Managed Network
      description: The collection of Connectivity related groups and policies within the Managed Network
      type: object
    ManagedNetworkGroup:
      description: The Managed Network Group resource
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedNetworkGroupProperties'
          description: Gets or sets the properties of a network group
        kind:
          description: Responsibility role under which this Managed Network Group will be created
          enum:
            - Connectivity
          type: string
          x-ms-enum:
            name: Kind
            modelAsString: true
      type: object
    ManagedNetworkGroupProperties:
      description: Properties of a Managed Network Group
      properties:
        managementGroups:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of management groups covered by the Managed Network
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of subscriptions covered by the Managed Network
        virtualNetworks:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of virtual nets covered by the Managed Network
        subnets:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: The collection of  subnets covered by the Managed Network
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the ManagedNetwork resource.
          enum:
            - Updating
            - Deleting
            - Failed
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    ManagedNetworkGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ManagedNetworkGroup'
          description: Gets a page of ManagedNetworkGroup
        nextLink:
          type: string
          description: Gets the URL to get the next set of results.
      description: Result of the request to list Managed Network Groups. It contains a list of groups and a URL link to get the next set of results.
      type: object
    ManagedNetworkPeeringPolicy:
      description: The Managed Network Peering Policy resource
      properties:
        properties:
          $ref: '#/components/schemas/ManagedNetworkPeeringPolicyProperties'
          description: Gets or sets the properties of a Managed Network Policy
      type: object
    ManagedNetworkPeeringPolicyProperties:
      required:
        - type
      description: Properties of a Managed Network Peering Policy
      properties:
        type:
          type: string
          enum:
            - HubAndSpokeTopology
            - MeshTopology
          x-ms-enum:
            name: type
            modelAsString: true
          description: Gets or sets the connectivity type of a network structure policy
        hub:
          $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the hub virtual network ID
        spokes:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the spokes group IDs
        mesh:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the mesh group IDs
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the ManagedNetwork resource.
          enum:
            - Updating
            - Deleting
            - Failed
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    HubAndSpokePeeringPolicyProperties:
      x-ms-discriminator-value: HubAndSpokeTopology
      description: Properties of a Hub and Spoke Peering Policy
      properties:
        hub:
          $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the hub virtual network ID
        spokes:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the spokes group IDs
        type:
          type: string
          enum:
            - HubAndSpokeTopology
            - MeshTopology
          x-ms-enum:
            name: type
            modelAsString: true
          description: Gets or sets the connectivity type of a network structure policy
        mesh:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the mesh group IDs
      type: object
    MeshPeeringPolicyProperties:
      x-ms-discriminator-value: MeshTopology
      description: Properties of a Mesh Peering Policy
      properties:
        mesh:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the mesh group IDs
        type:
          type: string
          enum:
            - HubAndSpokeTopology
            - MeshTopology
          x-ms-enum:
            name: type
            modelAsString: true
          description: Gets or sets the connectivity type of a network structure policy
        hub:
          $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the hub virtual network ID
        spokes:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          description: Gets or sets the spokes group IDs
      type: object
    ManagedNetworkPeeringPolicyListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ManagedNetworkPeeringPolicy'
          description: Gets a page of Peering Policies
        nextLink:
          type: string
          description: Gets the URL to get the next page of results.
      description: Result of the request to list Managed Network Peering Policies. It contains a list of policies and a URL link to get the next set of results.
      type: object
    ErrorResponse:
      description: The error response that indicates why an operation has failed.
      type: object
      properties:
        code:
          description: The error code.
          type: string
          readOnly: true
        message:
          description: The error message.
          type: string
          readOnly: true
    Operation:
      description: REST API operation
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that represents the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft.ManagedNetwork'
              type: string
            resource:
              description: 'Resource on which the operation is performed: Profile, endpoint, etc.'
              type: string
            operation:
              description: 'Operation type: Read, write, delete, etc.'
              type: string
    OperationListResult:
      description: Result of the request to list Managed Network operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of Resource Provider operations supported by the Managed Network resource provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    Resource:
      description: The general resource model definition
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      x-ms-azure-resource: true
      type: object
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource
      required:
        - location
      properties:
        tags:
          type: object
          x-ms-mutability:
            - read
            - create
            - update
          additionalProperties:
            type: string
          description: Resource tags
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ResourceId:
      properties:
        id:
          type: string
          description: Resource Id
      description: Generic pointer to a resource
      type: object
    ResourceProperties:
      properties:
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the ManagedNetwork resource.
          enum:
            - Updating
            - Deleting
            - Failed
            - Succeeded
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
      description: Base for resource properties.
      type: object
  x-stackQL-resources:
    managed_networks:
      id: azure.managed_network.managed_networks
      name: managed_networks
      title: managed_networks
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}?api-version=2019-06-01-preview/get'
            operationId: ManagedNetworks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetwork
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}?api-version=2019-06-01-preview/put'
            operationId: ManagedNetworks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetwork
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}?api-version=2019-06-01-preview/delete'
            operationId: ManagedNetworks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}?api-version=2019-06-01-preview/patch'
            operationId: ManagedNetworks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetwork
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks?api-version=2019-06-01-preview/get'
            operationId: ManagedNetworks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedNetwork~1managedNetworks?api-version=2019-06-01-preview/get'
            operationId: ManagedNetworks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/managed_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_networks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/managed_networks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_networks/methods/delete'
    scope_assignments:
      id: azure.managed_network.scope_assignments
      name: scope_assignments
      title: scope_assignments
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedNetwork~1scopeAssignments~1{scopeAssignmentName}?api-version=2019-06-01-preview/get'
            operationId: ScopeAssignments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScopeAssignment
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedNetwork~1scopeAssignments~1{scopeAssignmentName}?api-version=2019-06-01-preview/put'
            operationId: ScopeAssignments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScopeAssignment
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedNetwork~1scopeAssignments~1{scopeAssignmentName}?api-version=2019-06-01-preview/delete'
            operationId: ScopeAssignments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedNetwork~1scopeAssignments?api-version=2019-06-01-preview/get'
            operationId: ScopeAssignments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScopeAssignmentListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/scope_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scope_assignments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scope_assignments/methods/delete'
    groups:
      id: azure.managed_network.groups
      name: groups
      title: groups
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkGroups~1{managedNetworkGroupName}?api-version=2019-06-01-preview/get'
            operationId: ManagedNetworkGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkGroup
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkGroups~1{managedNetworkGroupName}?api-version=2019-06-01-preview/put'
            operationId: ManagedNetworkGroups_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkGroups~1{managedNetworkGroupName}?api-version=2019-06-01-preview/delete'
            operationId: ManagedNetworkGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_managed_network:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkGroups?api-version=2019-06-01-preview/get'
            operationId: ManagedNetworkGroups_ListByManagedNetwork
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkGroupListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list_by_managed_network'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    peering_policies:
      id: azure.managed_network.peering_policies
      name: peering_policies
      title: peering_policies
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkPeeringPolicies~1{managedNetworkPeeringPolicyName}?api-version=2019-06-01-preview/get'
            operationId: ManagedNetworkPeeringPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkPeeringPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkPeeringPolicies~1{managedNetworkPeeringPolicyName}?api-version=2019-06-01-preview/put'
            operationId: ManagedNetworkPeeringPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkPeeringPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkPeeringPolicies~1{managedNetworkPeeringPolicyName}?api-version=2019-06-01-preview/delete'
            operationId: ManagedNetworkPeeringPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_managed_network:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedNetwork~1managedNetworks~1{managedNetworkName}~1managedNetworkPeeringPolicies?api-version=2019-06-01-preview/get'
            operationId: ManagedNetworkPeeringPolicies_ListByManagedNetwork
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedNetworkPeeringPolicyListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/peering_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/peering_policies/methods/list_by_managed_network'
        insert:
          - $ref: '#/components/x-stackQL-resources/peering_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/peering_policies/methods/delete'
    operations:
      id: azure.managed_network.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagedNetwork~1operations?api-version=2019-06-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_managed_networks:
      id: azure.managed_network.vw_managed_networks
      name: vw_managed_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              tags as tags,
              JSON_EXTRACT(properties, '$.scope') as "scope",
              JSON_EXTRACT(properties, '$.connectivity') as "connectivity",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              subscriptionId,
              resourceGroupName,
              managedNetworkName
              FROM azure.managed_network.managed_networks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                tags as tags,
                json_extract_path_text(properties, '$.scope') as "scope",
                json_extract_path_text(properties, '$.connectivity') as "connectivity",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.etag') as "etag",
                subscriptionId,
                resourceGroupName,
                managedNetworkName
                FROM azure.managed_network.managed_networks
                WHERE subscriptionId = 'replace-me';
    vw_scope_assignments:
      id: azure.managed_network.vw_scope_assignments
      name: vw_scope_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.assignedManagedNetwork') as "assigned_managed_network",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              scope,
              scopeAssignmentName
              FROM azure.managed_network.scope_assignments
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.assignedManagedNetwork') as "assigned_managed_network",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.etag') as "etag",
                scope,
                scopeAssignmentName
                FROM azure.managed_network.scope_assignments
                WHERE scope = 'replace-me';
    vw_groups:
      id: azure.managed_network.vw_groups
      name: vw_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              kind as kind,
              JSON_EXTRACT(properties, '$.managementGroups') as "management_groups",
              JSON_EXTRACT(properties, '$.subscriptions') as "subscriptions",
              JSON_EXTRACT(properties, '$.virtualNetworks') as "virtual_networks",
              JSON_EXTRACT(properties, '$.subnets') as "subnets",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              subscriptionId,
              resourceGroupName,
              managedNetworkName,
              managedNetworkGroupName
              FROM azure.managed_network.groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managedNetworkName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                kind as kind,
                json_extract_path_text(properties, '$.managementGroups') as "management_groups",
                json_extract_path_text(properties, '$.subscriptions') as "subscriptions",
                json_extract_path_text(properties, '$.virtualNetworks') as "virtual_networks",
                json_extract_path_text(properties, '$.subnets') as "subnets",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.etag') as "etag",
                subscriptionId,
                resourceGroupName,
                managedNetworkName,
                managedNetworkGroupName
                FROM azure.managed_network.groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managedNetworkName = 'replace-me';
    vw_peering_policies:
      id: azure.managed_network.vw_peering_policies
      name: vw_peering_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.hub') as "hub",
              JSON_EXTRACT(properties, '$.spokes') as "spokes",
              JSON_EXTRACT(properties, '$.mesh') as "mesh",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              subscriptionId,
              resourceGroupName,
              managedNetworkName,
              managedNetworkPeeringPolicyName
              FROM azure.managed_network.peering_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managedNetworkName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.hub') as "hub",
                json_extract_path_text(properties, '$.spokes') as "spokes",
                json_extract_path_text(properties, '$.mesh') as "mesh",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.etag') as "etag",
                subscriptionId,
                resourceGroupName,
                managedNetworkName,
                managedNetworkPeeringPolicyName
                FROM azure.managed_network.peering_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managedNetworkName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetwork/managedNetworks/{managedNetworkName}?api-version=2019-06-01-preview:
    get:
      tags:
        - ManagedNetworks
      operationId: ManagedNetworks_Get
      description: The Get ManagedNetworks operation gets a Managed Network Resource, specified by the resource group and Managed Network name
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
      responses:
        '200':
          description: Get successful. The operation returns the specified Managed Network resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetwork'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ManagedNetworks
      operationId: ManagedNetworks_CreateOrUpdate
      description: The Put ManagedNetworks operation creates/updates a Managed Network Resource, specified by resource group and Managed Network name
      requestBody:
        description: Parameters supplied to the create/update a Managed Network Resource
        required: true
        x-ms-requestBody-name: managedNetwork
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedNetwork'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Managed Network resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetwork'
        '201':
          description: Create successful. The operation returns the resulting Managed Network resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetwork'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ManagedNetworks
      operationId: ManagedNetworks_Delete
      description: The Delete ManagedNetworks operation deletes a Managed Network Resource, specified by the  resource group and Managed Network name
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - ManagedNetworks
      operationId: ManagedNetworks_Update
      description: Updates the specified Managed Network resource tags.
      requestBody:
        description: Parameters supplied to update application gateway tags and/or scope.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedNetworkUpdate'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
      responses:
        '200':
          description: Update successful. The operation returns the updated Managed Network resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetwork'
        '201':
          description: Update successful. The operation returns the updated Managed Network resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetwork'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetwork/managedNetworks?api-version=2019-06-01-preview:
    get:
      tags:
        - ManagedNetworks
      operationId: ManagedNetworks_ListByResourceGroup
      description: The ListByResourceGroup ManagedNetwork operation retrieves all the Managed Network resources in a resource group in a paginated format.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ListPageSizeParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: Get successful. The operation returns all Managed Network resources under the specified resource group in a paginated format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetwork/managedNetworks?api-version=2019-06-01-preview:
    get:
      tags:
        - ManagedNetworks
      operationId: ManagedNetworks_ListBySubscription
      description: The ListBySubscription  ManagedNetwork operation retrieves all the Managed Network Resources in the current subscription in a paginated format.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ListPageSizeParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: Get successful. The operation returns all Managed Network resources under the current subscription in a paginated format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.ManagedNetwork/scopeAssignments/{scopeAssignmentName}?api-version=2019-06-01-preview:
    get:
      tags:
        - ScopeAssignments
      operationId: ScopeAssignments_Get
      description: Get the specified scope assignment.
      parameters:
        - name: scope
          in: path
          description: The base resource of the scope assignment.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: scopeAssignmentName
          in: path
          description: The name of the scope assignment to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the scope assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignment'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ScopeAssignments
      operationId: ScopeAssignments_CreateOrUpdate
      description: Creates a scope assignment.
      requestBody:
        description: Parameters supplied to the specify which Managed Network this scope is being assigned
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeAssignment'
      parameters:
        - name: scope
          in: path
          description: The base resource of the scope assignment to create. The scope can be any REST resource instance. For example, use 'subscriptions/{subscription-id}' for a subscription, 'subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and 'subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: scopeAssignmentName
          in: path
          description: The name of the scope assignment to create.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated - Returns information about the scope assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignment'
        '201':
          description: Created - Returns information about the scope assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignment'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ScopeAssignments
      operationId: ScopeAssignments_Delete
      description: Deletes a scope assignment.
      parameters:
        - name: scope
          in: path
          description: The scope of the scope assignment to delete.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: scopeAssignmentName
          in: path
          description: The name of the scope assignment to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete Succeed.
        default:
          description: Resource Provider error response describing why the operation failed.
  /{scope}/providers/Microsoft.ManagedNetwork/scopeAssignments?api-version=2019-06-01-preview:
    get:
      tags:
        - ScopeAssignments
      operationId: ScopeAssignments_List
      description: Get the specified scope assignment.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - name: scope
          in: path
          description: The base resource of the scope assignment.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the scope assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignmentListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetwork/managedNetworks/{managedNetworkName}/managedNetworkGroups/{managedNetworkGroupName}?api-version=2019-06-01-preview:
    get:
      tags:
        - ManagedNetworkGroups
      operationId: ManagedNetworkGroups_Get
      description: The Get ManagedNetworkGroups operation gets a Managed Network Group specified by the resource group, Managed Network name, and group name
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkGroupNameParameter'
      responses:
        '200':
          description: Get successful. The operation returns the specified Managed Network Group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkGroup'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ManagedNetworkGroups
      operationId: ManagedNetworkGroups_CreateOrUpdate
      description: The Put ManagedNetworkGroups operation creates or updates a Managed Network Group resource
      requestBody:
        description: Parameters supplied to the create/update a Managed Network Group resource
        required: true
        x-ms-requestBody-name: managedNetworkGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedNetworkGroup'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkGroupNameParameter'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Managed Network Group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkGroup'
        '201':
          description: Create successful. The operation returns the resulting Managed Network Group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkGroup'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ManagedNetworkGroups
      operationId: ManagedNetworkGroups_Delete
      description: The Delete ManagedNetworkGroups operation deletes a Managed Network Group specified by the resource group, Managed Network name, and group name
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkGroupNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetwork/managedNetworks/{managedNetworkName}/managedNetworkGroups?api-version=2019-06-01-preview:
    get:
      tags:
        - ManagedNetworkGroups
      operationId: ManagedNetworkGroups_ListByManagedNetwork
      description: The ListByManagedNetwork ManagedNetworkGroup operation retrieves all the Managed Network Groups in a specified Managed Networks in a paginated format.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ListPageSizeParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: Get successful. The operation returns all Managed Network Group resources under the specified Managed Network in a paginated format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkGroupListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetwork/managedNetworks/{managedNetworkName}/managedNetworkPeeringPolicies/{managedNetworkPeeringPolicyName}?api-version=2019-06-01-preview:
    get:
      tags:
        - ManagedNetworkPeeringPolicies
      operationId: ManagedNetworkPeeringPolicies_Get
      description: The Get ManagedNetworkPeeringPolicies operation gets a Managed Network Peering Policy resource, specified by the  resource group, Managed Network name, and peering policy name
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkPeeringPolicyNameParameter'
      responses:
        '200':
          description: Get successful. The operation returns the specified Managed Network Peering Policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkPeeringPolicy'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ManagedNetworkPeeringPolicies
      operationId: ManagedNetworkPeeringPolicies_CreateOrUpdate
      description: The Put ManagedNetworkPeeringPolicies operation creates/updates a new Managed Network Peering Policy
      requestBody:
        description: Parameters supplied to create/update a Managed Network Peering Policy
        required: true
        x-ms-requestBody-name: managedNetworkPolicy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedNetworkPeeringPolicy'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkPeeringPolicyNameParameter'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Managed Network Peering Policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkPeeringPolicy'
        '201':
          description: Create successful. The operation returns the resulting Managed Network Peering Policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkPeeringPolicy'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ManagedNetworkPeeringPolicies
      operationId: ManagedNetworkPeeringPolicies_Delete
      description: The Delete ManagedNetworkPeeringPolicies operation deletes a Managed Network Peering Policy, specified by the  resource group, Managed Network name, and peering policy name
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkPeeringPolicyNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetwork/managedNetworks/{managedNetworkName}/managedNetworkPeeringPolicies?api-version=2019-06-01-preview:
    get:
      tags:
        - ManagedNetworkPeeringPolicies
      operationId: ManagedNetworkPeeringPolicies_ListByManagedNetwork
      description: The ListByManagedNetwork PeeringPolicies operation retrieves all the Managed Network Peering Policies in a specified Managed Network, in a paginated format.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ManagedNetworkNameParameter'
        - $ref: '#/components/parameters/ListPageSizeParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: Get successful. The operation returns all Managed Network Peering Policy resources in the specified Managed Network, in a paginated format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedNetworkPeeringPolicyListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.ManagedNetwork/operations?api-version=2019-06-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available MNC operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
