openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Managed Service Identity (Microsoft.ManagedIdentity)
  description: Managed Service Identity
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-09-22-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ScopeParameter:
      name: scope
      in: path
      description: The resource provider scope of the resource. Parent resource being extended by Managed Identities.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ResourceNameParameter:
      name: resourceName
      in: path
      description: The name of the identity resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: OData filter expression to apply to the query.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    OrderbyParameter:
      name: $orderby
      in: query
      description: OData orderBy expression to apply to the query.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TopQueryParameter:
      name: $top
      in: query
      description: Number of records to return.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        minimum: 1
        type: integer
    SkipQueryParameter:
      name: $skip
      in: query
      description: Number of records to skip.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        minimum: 1
        type: integer
    SkipTokenParameter:
      name: $skiptoken
      in: query
      description: A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
      x-ms-parameter-location: method
      schema:
        type: string
    FederatedIdentityCredentialResourceNameParameter:
      name: federatedIdentityCredentialResourceName
      in: path
      description: The name of the federated identity credential resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    FederatedIdentityCredential:
      description: Describes a federated identity credential.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties associated with the federated identity credential.
          $ref: '#/components/schemas/FederatedIdentityCredentialProperties'
      type: object
    IdentityUpdate:
      description: Describes an identity resource.
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          readOnly: true
          description: The properties associated with the identity.
          $ref: '#/components/schemas/UserAssignedIdentityProperties'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    SystemAssignedIdentity:
      required:
        - location
      description: Describes a system assigned identity resource.
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          readOnly: true
          description: The properties associated with the identity.
          $ref: '#/components/schemas/SystemAssignedIdentityProperties'
      type: object
    SystemAssignedIdentityProperties:
      description: The properties associated with the system assigned identity.
      type: object
      title: System Assigned Identity properties.
      properties:
        tenantId:
          type: string
          readOnly: true
          format: uuid
          description: The id of the tenant which the identity belongs to.
        principalId:
          type: string
          readOnly: true
          format: uuid
          description: The id of the service principal object associated with the created identity.
        clientId:
          type: string
          readOnly: true
          format: uuid
          description: The id of the app associated with the identity. This is a random generated UUID by MSI.
        clientSecretUrl:
          type: string
          readOnly: true
          description: ' The ManagedServiceIdentity DataPlane URL that can be queried to obtain the identity credentials.'
    UserAssignedIdentityProperties:
      description: The properties associated with the user assigned identity.
      type: object
      title: User Assigned Identity properties.
      properties:
        tenantId:
          type: string
          readOnly: true
          format: uuid
          description: The id of the tenant which the identity belongs to.
        principalId:
          type: string
          readOnly: true
          format: uuid
          description: The id of the service principal object associated with the created identity.
        clientId:
          type: string
          readOnly: true
          format: uuid
          description: The id of the app associated with the identity. This is a random generated UUID by MSI.
    AzureResource:
      description: Describes an Azure resource that is attached to an identity.
      type: object
      title: Azure Resource properties.
      properties:
        id:
          type: string
          readOnly: true
          description: The ID of this resource.
        name:
          type: string
          readOnly: true
          description: The name of this resource.
        type:
          type: string
          readOnly: true
          description: The type of this resource.
        resourceGroup:
          type: string
          readOnly: true
          description: The name of the resource group this resource belongs to.
        subscriptionId:
          type: string
          readOnly: true
          description: The ID of the subscription this resource belongs to.
        subscriptionDisplayName:
          type: string
          readOnly: true
          description: The name of the subscription this resource belongs to.
    AssociatedResourcesListResult:
      type: object
      properties:
        totalCount:
          type: number
          readOnly: true
          description: Total number of Azure resources assigned to the identity.
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AzureResource'
          description: The collection of Azure resources returned by the resource action to get a list of assigned resources.
        nextLink:
          type: string
          readOnly: true
          description: The url to get the next page of results, if any.
      description: Azure resources returned by the resource action to get a list of assigned resources.
    FederatedIdentityCredentialProperties:
      description: The properties associated with a federated identity credential.
      type: object
      title: Federated identity credential properties.
      required:
        - issuer
        - subject
        - audiences
      properties:
        issuer:
          type: string
          format: uri
          description: The URL of the issuer to be trusted.
        subject:
          type: string
          description: The identifier of the external identity.
        audiences:
          type: array
          items:
            type: string
          description: The list of audiences that can appear in the issued token.
    FederatedIdentityCredentialsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FederatedIdentityCredential'
          description: The collection of federated identity credentials returned by the listing operation.
        nextLink:
          type: string
          description: The url to get the next page of results, if any.
      description: Values returned by the List operation for federated identity credentials.
    UserAssignedIdentitiesListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Identity'
          description: The collection of userAssignedIdentities returned by the listing operation.
        nextLink:
          type: string
          description: The url to get the next page of results, if any.
      description: Values returned by the List operation.
      type: object
    CloudError:
      x-ms-external: true
      properties:
        error:
          description: A list of additional details about the error.
          $ref: '#/components/schemas/CloudErrorBody'
      description: An error response from the ManagedServiceIdentity service.
      type: object
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          description: A list of additional details about the error.
      description: An error response from the ManagedServiceIdentity service.
      type: object
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationDisplay:
      title: Operation Display.
      description: The object that describes the operation.
      properties:
        provider:
          title: Resource Provider Name.
          description: Friendly name of the resource provider.
          type: string
        operation:
          title: Operation Type.
          description: 'The type of operation. For example: read, write, delete.'
          type: string
        resource:
          title: Resource Type.
          description: The resource type on which the operation is performed.
          type: string
        description:
          title: Operation description
          description: A description of the operation.
          type: string
      type: object
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
  x-stackQL-resources:
    system_assigned_identities:
      id: azure.managed_service_identity.system_assigned_identities
      name: system_assigned_identities
      title: System_assigned_identities
      methods:
        SystemAssignedIdentities_GetByScope:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.ManagedIdentity~1identities~1default~1?api-version=2022-01-31-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: azure.managed_service_identity.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ManagedIdentity~1operations~1?api-version=2022-01-31-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    user_assigned_identities:
      id: azure.managed_service_identity.user_assigned_identities
      name: user_assigned_identities
      title: User_assigned_identities
      methods:
        UserAssignedIdentities_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1?api-version=2022-01-31-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        UserAssignedIdentities_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1?api-version=2022-01-31-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        UserAssignedIdentities_ListAssociatedResources:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1listAssociatedResources~1?api-version=2022-01-31-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        UserAssignedIdentities_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1?api-version=2022-01-31-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        UserAssignedIdentities_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1?api-version=2022-01-31-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        UserAssignedIdentities_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1?api-version=2022-01-31-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        UserAssignedIdentities_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1?api-version=2022-01-31-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_assigned_identities/methods/UserAssignedIdentities_Get'
          - $ref: '#/components/x-stackQL-resources/user_assigned_identities/methods/UserAssignedIdentities_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/user_assigned_identities/methods/UserAssignedIdentities_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/user_assigned_identities/methods/UserAssignedIdentities_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_assigned_identities/methods/UserAssignedIdentities_Delete'
    federated_identity_credentials:
      id: azure.managed_service_identity.federated_identity_credentials
      name: federated_identity_credentials
      title: Federated_identity_credentials
      methods:
        FederatedIdentityCredentials_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1federatedIdentityCredentials~1?api-version=2022-01-31-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        FederatedIdentityCredentials_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1federatedIdentityCredentials~1{federatedIdentityCredentialResourceName}~1?api-version=2022-01-31-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        FederatedIdentityCredentials_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1federatedIdentityCredentials~1{federatedIdentityCredentialResourceName}~1?api-version=2022-01-31-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        FederatedIdentityCredentials_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ManagedIdentity~1userAssignedIdentities~1{resourceName}~1federatedIdentityCredentials~1{federatedIdentityCredentialResourceName}~1?api-version=2022-01-31-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/federated_identity_credentials/methods/FederatedIdentityCredentials_Get'
          - $ref: '#/components/x-stackQL-resources/federated_identity_credentials/methods/FederatedIdentityCredentials_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/federated_identity_credentials/methods/FederatedIdentityCredentials_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/federated_identity_credentials/methods/FederatedIdentityCredentials_Delete'
paths:
  /{scope}/providers/Microsoft.ManagedIdentity/identities/default/?api-version=2022-01-31-preview:
    get:
      operationId: SystemAssignedIdentities_GetByScope
      description: Gets the systemAssignedIdentity available under the specified RP scope.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      responses:
        '200':
          description: OK. The systemAssignedIdentity was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAssignedIdentity'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: system_assigned_identities
      x-stackQL-verb: exec
  /providers/Microsoft.ManagedIdentity/operations/?api-version=2022-01-31-preview:
    get:
      operationId: Operations_List
      description: Lists available operations for the Microsoft.ManagedIdentity provider
      parameters: []
      responses:
        '200':
          description: The operation was successful. The response contains the list of available operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/?api-version=2022-01-31-preview:
    get:
      operationId: UserAssignedIdentities_ListBySubscription
      description: Lists all the userAssignedIdentities available under the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The list of userAssignedIdentities was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssignedIdentitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: user_assigned_identities
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/?api-version=2022-01-31-preview:
    get:
      operationId: UserAssignedIdentities_ListByResourceGroup
      description: Lists all the userAssignedIdentities available under the specified ResourceGroup.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK. The list of userAssignedIdentities was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssignedIdentitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: user_assigned_identities
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}/listAssociatedResources/?api-version=2022-01-31-preview:
    post:
      operationId: UserAssignedIdentities_ListAssociatedResources
      description: Lists the associated resources for this identity.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/OrderbyParameter'
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/SkipTokenParameter'
      responses:
        '200':
          description: OK. List of resources associated with this identity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatedResourcesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: user_assigned_identities
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}/?api-version=2022-01-31-preview:
    put:
      operationId: UserAssignedIdentities_CreateOrUpdate
      description: Create or update an identity in the specified subscription and resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Parameters to create or update the identity
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identity'
      responses:
        '200':
          description: Updated identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        '201':
          description: Created identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: user_assigned_identities
      x-stackQL-verb: insert
    patch:
      operationId: UserAssignedIdentities_Update
      description: Update an identity in the specified subscription and resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Parameters to update the identity
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUpdate'
      responses:
        '200':
          description: Updated identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: user_assigned_identities
      x-stackQL-verb: exec
    get:
      operationId: UserAssignedIdentities_Get
      description: Gets the identity.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: OK. The requested identity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: user_assigned_identities
      x-stackQL-verb: select
    delete:
      operationId: UserAssignedIdentities_Delete
      description: Deletes the identity.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: OK. Deleted Identity.
        '204':
          description: The specified identity does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: user_assigned_identities
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}/federatedIdentityCredentials/?api-version=2022-01-31-preview:
    get:
      operationId: FederatedIdentityCredentials_List
      description: Lists all the federated identity credentials under the specified user assigned identity.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipTokenParameter'
      responses:
        '200':
          description: OK. The list of federated identity credentials for the specified user assigned identity was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederatedIdentityCredentialsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: federated_identity_credentials
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}/federatedIdentityCredentials/{federatedIdentityCredentialResourceName}/?api-version=2022-01-31-preview:
    put:
      operationId: FederatedIdentityCredentials_CreateOrUpdate
      description: Create or update a federated identity credential under the specified user assigned identity.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/FederatedIdentityCredentialResourceNameParameter'
      requestBody:
        description: Parameters to create or update the federated identity credential.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FederatedIdentityCredential'
      responses:
        '200':
          description: Updated federated identity credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederatedIdentityCredential'
        '201':
          description: Created federated identity credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederatedIdentityCredential'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: federated_identity_credentials
      x-stackQL-verb: insert
    get:
      operationId: FederatedIdentityCredentials_Get
      description: Gets the federated identity credential.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/FederatedIdentityCredentialResourceNameParameter'
      responses:
        '200':
          description: OK. The requested federated identity credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederatedIdentityCredential'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: federated_identity_credentials
      x-stackQL-verb: select
    delete:
      operationId: FederatedIdentityCredentials_Delete
      description: Deletes the federated identity credential.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/FederatedIdentityCredentialResourceNameParameter'
      responses:
        '200':
          description: OK. Deleted federated identity credential.
        '204':
          description: The specified federated identity credential does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: federated_identity_credentials
      x-stackQL-verb: delete
