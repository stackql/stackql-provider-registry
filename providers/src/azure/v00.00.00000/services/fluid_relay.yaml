openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Fluid Relay
  description: Easily add real-time collaborative experiences to your apps with Fluid Framework.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    SubscriptionId:
      name: subscriptionId
      in: path
      description: The subscription id (GUID) for this resource.
      required: true
      schema:
        type: string
    ResourceGroup:
      name: resourceGroup
      in: path
      description: The resource group containing the resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FluidRelayServerName:
      name: fluidRelayServerName
      in: path
      description: The Fluid Relay server resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FluidRelayContainerName:
      name: fluidRelayContainerName
      in: path
      description: The Fluid Relay container resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
          type: string
          description: The identity type.
        userAssignedIdentities:
          type: object
          additionalProperties:
            type: object
            x-ms-client-name: userAssignedIdentitiesValue
            properties:
              principalId:
                readOnly: true
                type: string
                description: The principal id of user assigned identity.
              clientId:
                readOnly: true
                type: string
                description: The client id of user assigned identity.
          description: The list of user identities associated with the resource.
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: Result of GET request to list FluidRelay operations.
      type: object
      properties:
        value:
          description: List of FluidRelay operations supported by the Microsoft.FluidRelay provider.
          type: array
          items:
            $ref: '#/components/schemas/OperationResult'
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          type: string
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    OperationDisplay:
      description: The object that represents the operation.
      type: object
      properties:
        provider:
          description: 'Service provider: Microsoft.FluidRelay'
          type: string
        resource:
          description: Type on which the operation is performed, e.g., 'servers'.
          type: string
        operation:
          description: Operation type, e.g., read, write, delete, etc.
          type: string
        description:
          description: Description of the operation, e.g., 'Write confluent'.
          type: string
    OperationResult:
      description: A FluidRelay REST API operation.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that represents the operation.
          $ref: '#/components/schemas/OperationDisplay'
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
    FluidRelayServerUpdate:
      description: The updatable properties of a Fluid Relay server
      properties:
        properties:
          $ref: '#/components/schemas/FluidRelayServerUpdateProperties'
          description: The resource-specific properties that can be updated for this resource.
          readOnly: false
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
            - update
        tags:
          type: object
          additionalProperties:
            type: string
          readOnly: false
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The type of identity used for the resource.
        location:
          type: string
          description: The geo-location where the resource lives
      type: object
    FluidRelayServerList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FluidRelayServer'
          description: A sequence of FluidRelay servers.
          x-adl-name: FluidRelayServer[]
        nextLink:
          type: string
          description: A link to the next page of results, if any.
      description: Paged response
      required:
        - value
      x-adl-name: Page<FluidRelayServer>
    FluidRelayContainerList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FluidRelayContainer'
          description: A sequence of FluidRelay containers.
          x-adl-name: FluidRelayContainer[]
        nextLink:
          readOnly: true
          type: string
          description: A link to the next page of results, if any.
      description: Paged response
    FluidRelayServer:
      description: A FluidRelay Server.
      properties:
        properties:
          $ref: '#/components/schemas/FluidRelayServerProperties'
          description: The resource-specific properties for this resource.
          readOnly: false
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System meta data for this resource, including creation and modification information.
          readOnly: true
        identity:
          $ref: '#/components/schemas/Identity'
          description: The type of identity used for the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    FluidRelayContainer:
      description: A FluidRelay Container.
      properties:
        properties:
          $ref: '#/components/schemas/FluidRelayContainerProperties'
          description: The resource-specific properties for this resource.
          readOnly: true
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System meta data for this resource, including creation and modification information.
          readOnly: true
      type: object
    FluidRelayServerKeys:
      type: object
      properties:
        key1:
          type: string
          format: password
          description: The primary key for this server
          readOnly: true
        key2:
          type: string
          format: password
          description: The secondary key for this server
          readOnly: true
      description: The set of available keys for this server.
    RegenerateKeyRequest:
      type: object
      properties:
        keyName:
          type: string
          enum:
            - key1
            - key2
          x-ms-enum:
            modelAsString: false
            name: KeyName
          x-adl-name: key1 | key2
          description: The key to regenerate.
      description: Specifies which key should be generated.
      required:
        - keyName
    EncryptionProperties:
      type: object
      description: All encryption configuration for a resource.
      properties:
        customerManagedKeyEncryption:
          $ref: '#/components/schemas/CustomerManagedKeyEncryptionProperties'
          description: All Customer-managed key encryption properties for the resource.
    CustomerManagedKeyEncryptionProperties:
      type: object
      description: All Customer-managed key encryption properties for the resource.
      properties:
        keyEncryptionKeyIdentity:
          type: object
          description: All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
          properties:
            identityType:
              type: string
              enum:
                - SystemAssigned
                - UserAssigned
              x-ms-enum:
                name: CmkIdentityType
                modelAsString: false
              description: Values can be SystemAssigned or UserAssigned
            userAssignedIdentityResourceId:
              type: string
              description: 'user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.'
        keyEncryptionKeyUrl:
          type: string
          description: 'key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url.'
    FluidRelayServerUpdateProperties:
      type: object
      properties:
        encryption:
          $ref: '#/components/schemas/EncryptionProperties'
          description: All encryption configuration for a resource.
      description: The properties that can be provided when updating FluidRelayServer resource
    FluidRelayServerProperties:
      type: object
      properties:
        frsTenantId:
          type: string
          description: The Fluid tenantId for this server
          readOnly: true
        fluidRelayEndpoints:
          $ref: '#/components/schemas/FluidRelayEndpoints'
          description: The Fluid Relay Service endpoints for this server.
          readOnly: true
        provisioningState:
          enum:
            - Succeeded
            - Failed
            - Canceled
          type: string
          description: Provision states for FluidRelay RP
          title: ProvisioningState
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        encryption:
          $ref: '#/components/schemas/EncryptionProperties'
          description: All encryption configuration for a resource.
        storagesku:
          type: string
          enum:
            - standard
            - basic
          description: Sku of the storage associated with the resource
          title: StorageSKU
          x-ms-enum:
            name: StorageSKU
            modelAsString: true
      description: The properties of a Fluid Relay Service resource.
    FluidRelayContainerProperties:
      type: object
      properties:
        frsTenantId:
          type: string
          description: The Fluid tenantId for this container
          readOnly: true
        frsContainerId:
          type: string
          description: The frsContainerId for this container
          readOnly: true
        provisioningState:
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - Canceled
          type: string
          description: Provision states for FluidRelay RP
          title: ProvisioningState
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: The creation time of this resource
        lastAccessTime:
          type: string
          format: date-time
          readOnly: true
          description: Last time when user access this resource
      description: The properties of a Fluid Relay Container resource.
    FluidRelayEndpoints:
      type: object
      properties:
        ordererEndpoints:
          type: array
          items:
            type: string
          description: The Fluid Relay Orderer endpoints.
          readOnly: true
        storageEndpoints:
          type: array
          items:
            type: string
          description: The Fluid Relay storage endpoints.
          readOnly: true
        serviceEndpoints:
          type: array
          items:
            type: string
          description: The Fluid Relay service endpoints.
          readOnly: true
      description: The Fluid Relay endpoints for this server
  x-stackQL-resources:
    operations:
      id: azure.fluid_relay.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.FluidRelay~1operations?api-version=2022-06-01/get'
            operationId: FluidRelayOperations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    servers:
      id: azure.fluid_relay.servers
      name: servers
      title: servers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}?api-version=2022-06-01/get'
            operationId: FluidRelayServers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayServer
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}?api-version=2022-06-01/put'
            operationId: FluidRelayServers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayServer
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}?api-version=2022-06-01/patch'
            operationId: FluidRelayServers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayServer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}?api-version=2022-06-01/delete'
            operationId: FluidRelayServers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}~1regenerateKey?api-version=2022-06-01/post'
            operationId: FluidRelayServers_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayServerKeys
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.FluidRelay~1fluidRelayServers?api-version=2022-06-01/get'
            operationId: FluidRelayServers_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayServerList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers?api-version=2022-06-01/get'
            operationId: FluidRelayServers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayServerList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/servers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/servers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/servers/methods/delete'
    servers_keys:
      id: azure.fluid_relay.servers_keys
      name: servers_keys
      title: servers_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}~1listKeys?api-version=2022-06-01/post'
            operationId: FluidRelayServersKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayServerKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    containers:
      id: azure.fluid_relay.containers
      name: containers
      title: containers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}~1fluidRelayContainers~1{fluidRelayContainerName}?api-version=2022-06-01/get'
            operationId: FluidRelayContainers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayContainer
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}~1fluidRelayContainers~1{fluidRelayContainerName}?api-version=2022-06-01/delete'
            operationId: FluidRelayContainers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_fluid_relay_servers:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.FluidRelay~1fluidRelayServers~1{fluidRelayServerName}~1fluidRelayContainers?api-version=2022-06-01/get'
            operationId: FluidRelayContainers_ListByFluidRelayServers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluidRelayContainerList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/containers/methods/get'
          - $ref: '#/components/x-stackQL-resources/containers/methods/list_by_fluid_relay_servers'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/containers/methods/delete'
    vw_servers:
      id: azure.fluid_relay.vw_servers
      name: vw_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              systemData as system_data,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.frsTenantId') as "frs_tenant_id",
              JSON_EXTRACT(properties, '$.fluidRelayEndpoints') as "fluid_relay_endpoints",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.encryption') as "encryption",
              JSON_EXTRACT(properties, '$.storagesku') as "storagesku",
              subscriptionId,
              resourceGroup,
              fluidRelayServerName
              FROM azure.fluid_relay.servers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                systemData as system_data,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.frsTenantId') as "frs_tenant_id",
                json_extract_path_text(properties, '$.fluidRelayEndpoints') as "fluid_relay_endpoints",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.encryption') as "encryption",
                json_extract_path_text(properties, '$.storagesku') as "storagesku",
                subscriptionId,
                resourceGroup,
                fluidRelayServerName
                FROM azure.fluid_relay.servers
                WHERE subscriptionId = 'replace-me';
    vw_containers:
      id: azure.fluid_relay.vw_containers
      name: vw_containers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.frsTenantId') as "frs_tenant_id",
              JSON_EXTRACT(properties, '$.frsContainerId') as "frs_container_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.lastAccessTime') as "last_access_time",
              subscriptionId,
              resourceGroup,
              fluidRelayServerName,
              fluidRelayContainerName
              FROM azure.fluid_relay.containers
              WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND fluidRelayServerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.frsTenantId') as "frs_tenant_id",
                json_extract_path_text(properties, '$.frsContainerId') as "frs_container_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.lastAccessTime') as "last_access_time",
                subscriptionId,
                resourceGroup,
                fluidRelayServerName,
                fluidRelayContainerName
                FROM azure.fluid_relay.containers
                WHERE subscriptionId = 'replace-me' AND resourceGroup = 'replace-me' AND fluidRelayServerName = 'replace-me';
paths:
  /providers/Microsoft.FluidRelay/operations?api-version=2022-06-01:
    get:
      tags:
        - FluidRelayOperations
      summary: List all operations provided by Microsoft.FluidRelay.
      operationId: FluidRelayOperations_List
      parameters: []
      responses:
        '200':
          description: Operation completed synchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}?api-version=2022-06-01:
    get:
      operationId: FluidRelayServers_Get
      tags:
        - FluidRelayServers
      summary: Get a Fluid Relay server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
      responses:
        '200':
          description: Request completed synchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayServer'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: FluidRelayServers_CreateOrUpdate
      tags:
        - FluidRelayServers
      summary: Create or Update a Fluid Relay server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
      requestBody:
        description: The details of the Fluid Relay server resource.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FluidRelayServer'
      responses:
        '200':
          description: Request completed synchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayServer'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: FluidRelayServers_Update
      tags:
        - FluidRelayServers
      summary: Update a Fluid Relay server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
      requestBody:
        description: The details of the Fluid Relay server resource included in update calls.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FluidRelayServerUpdate'
      responses:
        '200':
          description: Request Completed Synchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayServer'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: FluidRelayServers_Delete
      tags:
        - FluidRelayServers
      summary: Delete a Fluid Relay server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
      responses:
        '200':
          description: Request completed Synchronously.
        '204':
          description: Request completed Synchronously.
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}/regenerateKey?api-version=2022-06-01:
    post:
      operationId: FluidRelayServers_RegenerateKey
      summary: Regenerate the primary or secondary key for this server.
      tags:
        - FluidRelayServers
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
      requestBody:
        description: The details of which keys to generate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeyRequest'
      responses:
        '200':
          description: Request Completed Synchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayServerKeys'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}/listKeys?api-version=2022-06-01:
    post:
      operationId: FluidRelayServersKeys_List
      summary: Get primary and secondary key for this server.
      tags:
        - FluidRelayServers
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
      responses:
        '200':
          description: Request Completed Synchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayServerKeys'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: FluidRelayServers_ListKeys
  /subscriptions/{subscriptionId}/providers/Microsoft.FluidRelay/fluidRelayServers?api-version=2022-06-01:
    get:
      operationId: FluidRelayServers_ListBySubscription
      summary: List all Fluid Relay servers in a subscription.
      tags:
        - FluidRelayServers
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
      responses:
        '200':
          description: Paged response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayServerList'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers?api-version=2022-06-01:
    get:
      operationId: FluidRelayServers_ListByResourceGroup
      tags:
        - FluidRelayServers
      summary: List all Fluid Relay servers in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
      responses:
        '200':
          description: Paged response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayServerList'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}/fluidRelayContainers/{fluidRelayContainerName}?api-version=2022-06-01:
    get:
      operationId: FluidRelayContainers_Get
      tags:
        - FluidRelayContainers
      summary: Get a Fluid Relay container.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
        - $ref: '#/components/parameters/FluidRelayContainerName'
      responses:
        '200':
          description: Request completed synchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayContainer'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: FluidRelayContainers_Delete
      tags:
        - FluidRelayContainers
      summary: Delete a Fluid Relay container.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
        - $ref: '#/components/parameters/FluidRelayContainerName'
      responses:
        '200':
          description: Request completed Synchronously.
        '204':
          description: Request completed Synchronously.
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.FluidRelay/fluidRelayServers/{fluidRelayServerName}/fluidRelayContainers?api-version=2022-06-01:
    get:
      operationId: FluidRelayContainers_ListByFluidRelayServers
      tags:
        - FluidRelayContainers
      summary: List all Fluid Relay containers which are children of a given Fluid Relay server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroup'
        - $ref: '#/components/parameters/FluidRelayServerName'
      responses:
        '200':
          description: Paged response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluidRelayContainerList'
        default:
          description: Error in operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
