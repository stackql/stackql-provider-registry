openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Service Connector
  description: The Service Connector service is an extension resource provider that helps you connect Azure Compute service to backing services easily.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LinkerNameParameter:
      name: linkerName
      in: path
      description: The name Linker resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConnectorNameParameter:
      name: connectorName
      in: path
      description: The name of resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceUriParameter:
      name: resourceUri
      in: path
      description: The fully qualified Azure Resource manager identifier of the resource to be connected.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    TargetServiceType:
      description: The target service type.
      type: string
      enum:
        - AzureResource
        - ConfluentBootstrapServer
        - ConfluentSchemaRegistry
        - SelfHostedServer
      x-ms-enum:
        name: targetServiceType
        modelAsString: true
    TargetServiceBase:
      description: The target service properties
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          description: The target service type.
          $ref: '#/components/schemas/TargetServiceType'
      required:
        - type
    AzureResourceType:
      description: The azure resource type.
      type: string
      enum:
        - KeyVault
      x-ms-enum:
        name: azureResourceType
        modelAsString: true
    AzureResourcePropertiesBase:
      description: The azure resource properties
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          description: The azure resource type.
          $ref: '#/components/schemas/AzureResourceType'
      required:
        - type
    AzureResource:
      x-ms-discriminator-value: AzureResource
      description: The azure resource info when target service type is AzureResource
      properties:
        type:
          description: The target service type.
          $ref: '#/components/schemas/TargetServiceType'
        id:
          description: The Id of azure resource.
          type: string
        resourceProperties:
          nullable: true
          x-nullable: true
          description: The azure resource connection related properties.
          $ref: '#/components/schemas/AzureResourcePropertiesBase'
      type: object
    AzureKeyVaultProperties:
      x-ms-discriminator-value: KeyVault
      description: The resource properties when type is Azure Key Vault
      properties:
        type:
          description: The azure resource type.
          $ref: '#/components/schemas/AzureResourceType'
        connectAsKubernetesCsiDriver:
          nullable: true
          description: True if connect via Kubernetes CSI Driver.
          type: boolean
      type: object
    ConfluentBootstrapServer:
      x-ms-discriminator-value: ConfluentBootstrapServer
      description: The service properties when target service type is ConfluentBootstrapServer
      properties:
        type:
          description: The target service type.
          $ref: '#/components/schemas/TargetServiceType'
        endpoint:
          description: The endpoint of service.
          type: string
      type: object
    SelfHostedServer:
      x-ms-discriminator-value: SelfHostedServer
      description: The service properties when target service type is SelfHostedServer
      properties:
        type:
          description: The target service type.
          $ref: '#/components/schemas/TargetServiceType'
        endpoint:
          description: The endpoint of service.
          type: string
      type: object
    ConfluentSchemaRegistry:
      x-ms-discriminator-value: ConfluentSchemaRegistry
      description: The service properties when target service type is ConfluentSchemaRegistry
      properties:
        type:
          description: The target service type.
          $ref: '#/components/schemas/TargetServiceType'
        endpoint:
          description: The endpoint of service.
          type: string
      type: object
    DeleteOrUpdateBehavior:
      description: The cleanup behavior to indicate whether clean up operation when resource is deleted or updated
      type: string
      enum:
        - Default
        - ForcedCleanup
      x-ms-enum:
        name: DeleteOrUpdateBehavior
        modelAsString: true
    ClientType:
      description: The application client type
      type: string
      enum:
        - none
        - dotnet
        - java
        - python
        - go
        - php
        - ruby
        - django
        - nodejs
        - springBoot
        - kafka-springBoot
        - jms-springBoot
        - dapr
      x-ms-enum:
        name: clientType
        modelAsString: true
    AuthType:
      description: The authentication type.
      type: string
      enum:
        - systemAssignedIdentity
        - userAssignedIdentity
        - servicePrincipalSecret
        - servicePrincipalCertificate
        - secret
        - accessKey
        - userAccount
        - easyAuthMicrosoftEntraID
      x-ms-enum:
        name: AuthType
        modelAsString: true
    SecretType:
      description: The secret type.
      type: string
      enum:
        - rawValue
        - keyVaultSecretUri
        - keyVaultSecretReference
      x-ms-enum:
        name: SecretType
        modelAsString: true
    SecretSourceType:
      description: The type of secret source.
      type: string
      enum:
        - rawValue
        - keyVaultSecret
      x-ms-enum:
        name: SecretSourceType
        modelAsString: true
    SecretInfoBase:
      description: The secret info
      discriminator:
        propertyName: secretType
      type: object
      properties:
        secretType:
          description: The secret type.
          $ref: '#/components/schemas/SecretType'
      required:
        - secretType
    ValueSecretInfo:
      x-ms-discriminator-value: rawValue
      description: The secret info when type is rawValue. It's for scenarios that user input the secret.
      properties:
        secretType:
          description: The secret type.
          $ref: '#/components/schemas/SecretType'
        value:
          nullable: true
          description: The actual value of the secret.
          type: string
          x-ms-secret: true
      type: object
    KeyVaultSecretReferenceSecretInfo:
      x-ms-discriminator-value: keyVaultSecretReference
      description: The secret info when type is keyVaultSecretReference. It's for scenario that user provides a secret stored in user's keyvault and source is Azure Kubernetes. The key Vault's resource id is linked to secretStore.keyVaultId.
      properties:
        secretType:
          description: The secret type.
          $ref: '#/components/schemas/SecretType'
        name:
          description: Name of the Key Vault secret.
          type: string
        version:
          nullable: true
          description: Version of the Key Vault secret.
          type: string
      type: object
    KeyVaultSecretUriSecretInfo:
      x-ms-discriminator-value: keyVaultSecretUri
      description: The secret info when type is keyVaultSecretUri. It's for scenario that user provides a secret stored in user's keyvault and source is Web App, Spring Cloud or Container App.
      properties:
        secretType:
          description: The secret type.
          $ref: '#/components/schemas/SecretType'
        value:
          description: URI to the keyvault secret
          type: string
      type: object
    AuthInfoBase:
      description: The authentication info
      discriminator:
        propertyName: authType
      type: object
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
      required:
        - authType
    AccessKeyInfoBase:
      description: The access key directly from target resource properties, which target service is Azure Resource, such as Microsoft.Storage
      x-ms-discriminator-value: accessKey
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        permissions:
          description: Permissions of the accessKey. `Read` and `Write` are for Azure Cosmos DB and Azure App Configuration, `Listen`, `Send` and `Manage` are for Azure Event Hub and Azure Service Bus.
          type: array
          items:
            type: string
            enum:
              - Read
              - Write
              - Listen
              - Send
              - Manage
            x-ms-enum:
              name: accessKeyPermissions
              modelAsString: true
      type: object
    DatabaseAadAuthInfo:
      description: The extra auth info required by Database AAD authentication.
      type: object
      properties:
        userName:
          nullable: true
          description: Username created in the database which is mapped to a user in AAD.
          type: string
    SecretAuthInfo:
      x-ms-discriminator-value: secret
      description: The authentication info when authType is secret
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        name:
          nullable: true
          description: Username or account name for secret auth.
          type: string
        secretInfo:
          nullable: true
          x-nullable: true
          description: Password or key vault secret for secret auth.
          $ref: '#/components/schemas/SecretInfoBase'
      type: object
    UserAssignedIdentityAuthInfo:
      x-ms-discriminator-value: userAssignedIdentity
      description: The authentication info when authType is userAssignedIdentity
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        userName:
          nullable: true
          description: Username created in the database which is mapped to a user in AAD.
          type: string
        clientId:
          description: Client Id for userAssignedIdentity.
          type: string
        subscriptionId:
          description: Subscription id for userAssignedIdentity.
          type: string
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
        roles:
          type: array
          items:
            type: string
          description: Optional, this value specifies the Azure role to be assigned
      type: object
    SystemAssignedIdentityAuthInfo:
      x-ms-discriminator-value: systemAssignedIdentity
      description: The authentication info when authType is systemAssignedIdentity
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        userName:
          nullable: true
          description: Username created in the database which is mapped to a user in AAD.
          type: string
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
        roles:
          type: array
          items:
            type: string
          description: Optional, this value specifies the Azure role to be assigned
      type: object
    ServicePrincipalSecretAuthInfo:
      x-ms-discriminator-value: servicePrincipalSecret
      description: The authentication info when authType is servicePrincipal secret
      required:
        - clientId
        - principalId
        - secret
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        userName:
          nullable: true
          description: Username created in the database which is mapped to a user in AAD.
          type: string
        clientId:
          description: ServicePrincipal application clientId for servicePrincipal auth.
          type: string
        principalId:
          description: Principal Id for servicePrincipal auth.
          type: string
        secret:
          description: Secret for servicePrincipal auth.
          type: string
          x-ms-secret: true
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
        roles:
          type: array
          items:
            type: string
          description: 'Optional, this value specifies the Azure roles to be assigned. Automatically '
      type: object
    ServicePrincipalCertificateAuthInfo:
      x-ms-discriminator-value: servicePrincipalCertificate
      description: The authentication info when authType is servicePrincipal certificate
      required:
        - clientId
        - principalId
        - certificate
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        clientId:
          description: Application clientId for servicePrincipal auth.
          type: string
        principalId:
          description: Principal Id for servicePrincipal auth.
          type: string
        certificate:
          description: ServicePrincipal certificate for servicePrincipal auth.
          type: string
          x-ms-secret: true
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
        roles:
          type: array
          items:
            type: string
          description: 'Optional, this value specifies the Azure roles to be assigned. Automatically '
      type: object
    UserAccountAuthInfo:
      x-ms-discriminator-value: userAccount
      description: The authentication info when authType is user account
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        userName:
          nullable: true
          description: Username created in the database which is mapped to a user in AAD.
          type: string
        principalId:
          description: Principal Id for user account.
          type: string
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
        roles:
          type: array
          items:
            type: string
          description: 'Optional, this value specifies the Azure roles to be assigned. Automatically '
      type: object
    EasyAuthMicrosoftEntraIDAuthInfo:
      x-ms-discriminator-value: easyAuthMicrosoftEntraID
      description: The authentication info when authType is EasyAuth Microsoft Entra ID
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        authMode:
          description: Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.
          $ref: '#/components/schemas/AuthMode'
        clientId:
          description: Application clientId for EasyAuth Microsoft Entra ID.
          type: string
        secret:
          description: Application Secret for EasyAuth Microsoft Entra ID.
          type: string
          x-ms-secret: true
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
      type: object
    LinkerResource:
      description: Linker of source and target resource
      required:
        - properties
      properties:
        properties:
          description: The properties of the Linker.
          $ref: '#/components/schemas/LinkerProperties'
          x-ms-client-flatten: true
        systemData:
          nullable: true
          x-nullable: true
          readOnly: true
          $ref: '#/components/schemas/systemData'
          description: The system data.
      type: object
    LinkerPatch:
      description: A Linker to be updated.
      properties:
        properties:
          description: Linker properties
          type: object
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LinkerProperties'
      type: object
    ResourceList:
      description: The list of Linker.
      type: object
      properties:
        nextLink:
          nullable: true
          description: The Linker used to get the next page of Linker list.
          type: string
        value:
          description: The list of Linkers.
          type: array
          items:
            $ref: '#/components/schemas/LinkerResource'
    LinkerProperties:
      description: The properties of the Linker.
      type: object
      properties:
        targetService:
          $ref: '#/components/schemas/TargetServiceBase'
          description: The target service properties
        authInfo:
          description: The authentication type.
          $ref: '#/components/schemas/AuthInfoBase'
        clientType:
          description: The application client type
          $ref: '#/components/schemas/ClientType'
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state. '
        vNetSolution:
          nullable: true
          x-nullable: true
          description: The VNet solution.
          $ref: '#/components/schemas/VNetSolution'
        secretStore:
          nullable: true
          x-nullable: true
          description: An option to store secret value in secure place
          $ref: '#/components/schemas/SecretStore'
        scope:
          nullable: true
          type: string
          description: connection scope in source service.
        publicNetworkSolution:
          nullable: true
          x-nullable: true
          description: The network solution.
          $ref: '#/components/schemas/PublicNetworkSolution'
        configurationInfo:
          nullable: true
          x-nullable: true
          description: The connection information consumed by applications, including secrets, connection strings.
          $ref: '#/components/schemas/ConfigurationInfo'
    LinkerConfigurationType:
      description: Type of configuration to determine whether the configuration can be modified after creation. KeyvaultSecret means the configuration references a key vault secret, such as App Service/ACA key vault reference. Default means the configuration is real value, such as user name, raw secret, etc.
      type: string
      enum:
        - Default
        - KeyVaultSecret
      x-ms-enum:
        name: LinkerConfigurationType
        modelAsString: true
    SourceConfiguration:
      description: A configuration item for source resource
      type: object
      properties:
        name:
          description: The name of setting.
          type: string
        value:
          nullable: true
          description: The value of setting
          type: string
        configType:
          description: The type of setting
          readOnly: true
          $ref: '#/components/schemas/LinkerConfigurationType'
        keyVaultReferenceIdentity:
          nullable: true
          description: The identity for key vault reference, system or user-assigned managed identity ID
          type: string
        description:
          nullable: true
          description: Descriptive information for the configuration
          type: string
    ConfigurationNameItem:
      properties:
        properties:
          nullable: true
          x-nullable: true
          description: The result detail.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConfigurationNames'
      type: object
    ConfigurationNames:
      type: object
      description: The configuration names which will be set based on specific target resource, client type, auth type.
      properties:
        targetService:
          type: string
          description: The target service provider name and resource name.
        clientType:
          $ref: '#/components/schemas/ClientType'
          description: The client type for configuration names.
        authType:
          $ref: '#/components/schemas/AuthType'
          description: The auth type.
        secretType:
          $ref: '#/components/schemas/SecretSourceType'
          description: Indicates where the secrets in configuration from. Used when secrets are from Keyvault.
        daprProperties:
          description: 'Deprecated, please use #/definitions/DaprConfigurationList instead'
          $ref: '#/components/schemas/DaprProperties'
        names:
          type: array
          description: The configuration names to be set in compute service environment.
          items:
            $ref: '#/components/schemas/ConfigurationName'
    ConfigurationName:
      type: object
      description: The configuration names.
      properties:
        value:
          type: string
        description:
          type: string
          description: Description for the configuration name.
        required:
          type: boolean
          description: Represent the configuration is required or not
    ConfigurationNameResult:
      description: Configuration Name list which will be set based on different target resource, client type, auth type.
      type: object
      properties:
        value:
          description: Expected configuration names for each target service.
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationNameItem'
          x-ms-identifiers: []
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    ConfigurationResult:
      description: Configurations for source resource, include appSettings, connectionString and serviceBindings
      type: object
      properties:
        configurations:
          description: The configuration properties for source resource.
          type: array
          items:
            $ref: '#/components/schemas/SourceConfiguration'
          x-ms-identifiers:
            - name
    ValidateOperationResult:
      description: The validation operation result for a Linker.
      properties:
        properties:
          nullable: true
          x-nullable: true
          description: The validation result detail.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ValidateResult'
        resourceId:
          nullable: true
          description: Validated Linker id.
          type: string
        status:
          nullable: true
          description: Validation operation status.
          type: string
      type: object
    ValidateResult:
      description: The validation result for a Linker.
      type: object
      properties:
        linkerName:
          nullable: true
          description: The linker name.
          type: string
        isConnectionAvailable:
          nullable: true
          description: A boolean value indicating whether the connection is available or not
          type: boolean
        reportStartTimeUtc:
          nullable: true
          type: string
          format: date-time
          description: The start time of the validation report.
        reportEndTimeUtc:
          nullable: true
          type: string
          format: date-time
          description: The end time of the validation report.
        sourceId:
          nullable: true
          description: The resource id of the Linker source application.
          type: string
        targetId:
          nullable: true
          description: The resource Id of target service.
          type: string
        authType:
          nullable: true
          x-nullable: true
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        validationDetail:
          description: The detail of validation result
          type: array
          items:
            $ref: '#/components/schemas/ValidationResultItem'
          x-ms-identifiers:
            - name
    ValidationResultItem:
      description: The validation item for a Linker.
      type: object
      properties:
        name:
          description: The validation item name.
          type: string
        description:
          nullable: true
          description: The display name of validation item
          type: string
        result:
          nullable: true
          description: The result of validation
          type: string
          enum:
            - success
            - failure
            - warning
          x-ms-enum:
            name: ValidationResultStatus
            modelAsString: true
        errorMessage:
          nullable: true
          description: The error message of validation result
          type: string
        errorCode:
          nullable: true
          description: The error code of validation result
          type: string
    VNetSolution:
      type: object
      description: The VNet solution for linker
      properties:
        type:
          nullable: true
          description: Type of VNet solution.
          type: string
          enum:
            - serviceEndpoint
            - privateLink
          x-ms-enum:
            name: vNetSolutionType
            modelAsString: true
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
    PublicNetworkSolution:
      type: object
      description: Indicates public network solution, include firewall rules
      properties:
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
        action:
          description: Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.
          $ref: '#/components/schemas/ActionType'
        firewallRules:
          description: Describe firewall rules of target service to make sure source application could connect to the target.
          $ref: '#/components/schemas/FirewallRules'
    FirewallRules:
      type: object
      description: Target service's firewall rules. to allow connections from source service.
      properties:
        ipRanges:
          type: array
          items:
            type: string
          description: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account.
        azureServices:
          description: Allow Azure services to access the target service if true.
          $ref: '#/components/schemas/AllowType'
        callerClientIP:
          description: Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.
          $ref: '#/components/schemas/AllowType'
    ConfigurationInfo:
      type: object
      description: The configuration information, used to generate configurations or save to applications
      properties:
        deleteOrUpdateBehavior:
          description: Indicates whether to clean up previous operation when Linker is updating or deleting
          $ref: '#/components/schemas/DeleteOrUpdateBehavior'
        action:
          description: Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.
          $ref: '#/components/schemas/ActionType'
        customizedKeys:
          description: Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations
          type: object
          additionalProperties:
            type: string
        daprProperties:
          description: Indicates some additional properties for dapr client type
          $ref: '#/components/schemas/DaprProperties'
        additionalConfigurations:
          description: A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations
          type: object
          additionalProperties:
            type: string
        additionalConnectionStringProperties:
          description: A dictionary of additional properties to be added in the end of connection string.
          type: object
          additionalProperties:
            type: string
        configurationStore:
          nullable: true
          x-nullable: true
          description: An option to store configuration into different place
          $ref: '#/components/schemas/ConfigurationStore'
    ConfigurationStore:
      type: object
      description: An option to store configuration into different place
      properties:
        appConfigurationId:
          nullable: true
          type: string
          description: The app configuration id to store configuration
    DaprProperties:
      type: object
      description: Indicates some additional properties for dapr client type
      properties:
        version:
          nullable: true
          type: string
          description: The dapr component version
        componentType:
          nullable: true
          type: string
          description: The dapr component type
        secretStoreComponent:
          nullable: true
          type: string
          description: The name of a secret store dapr to retrieve secret
        metadata:
          description: Additional dapr metadata
          type: array
          items:
            $ref: '#/components/schemas/DaprMetadata'
          x-ms-identifiers:
            - name
        scopes:
          description: The dapr component scopes
          type: array
          items:
            type: string
        runtimeVersion:
          nullable: true
          type: string
          readOnly: true
          description: The runtime version supported by the properties
        bindingComponentDirection:
          nullable: true
          type: string
          enum:
            - input
            - output
          x-ms-enum:
            name: DaprBindingComponentDirection
            modelAsString: true
          readOnly: true
          description: The direction supported by the dapr binding component
    DaprMetadata:
      description: The dapr component metadata.
      type: object
      properties:
        name:
          description: Metadata property name.
          type: string
        value:
          description: Metadata property value.
          type: string
        secretRef:
          description: The secret name where dapr could get value
          type: string
        description:
          description: The description of the metadata, returned from configuration api
          type: string
        required:
          description: The value indicating whether the metadata is required or not
          type: string
          enum:
            - 'true'
            - 'false'
          x-ms-enum:
            name: DaprMetadataRequired
            modelAsString: true
    SecretStore:
      type: object
      description: An option to store secret value in secure place
      properties:
        keyVaultId:
          nullable: true
          type: string
          description: The key vault id to store secret
        keyVaultSecretName:
          nullable: true
          type: string
          description: The key vault secret name to store secret, only valid when storing one secret
    DryrunList:
      description: The list of dryrun.
      type: object
      properties:
        nextLink:
          nullable: true
          description: The link used to get the next page of dryrun list.
          type: string
        value:
          description: The list of dryrun.
          type: array
          items:
            $ref: '#/components/schemas/DryrunResource'
    DryrunResource:
      description: a dryrun job resource
      properties:
        properties:
          description: The properties of the dryrun job.
          $ref: '#/components/schemas/DryrunProperties'
          x-ms-client-flatten: true
      type: object
    DryrunPatch:
      description: a dryrun job to be updated.
      properties:
        properties:
          description: The properties of the dryrun job.
          $ref: '#/components/schemas/DryrunProperties'
          x-ms-client-flatten: true
      type: object
    DryrunProperties:
      description: The properties of the dryrun job
      type: object
      properties:
        parameters:
          description: The parameters of the dryrun
          $ref: '#/components/schemas/DryrunParameters'
        prerequisiteResults:
          readOnly: true
          description: the result of the dryrun
          type: array
          items:
            $ref: '#/components/schemas/DryrunPrerequisiteResult'
          x-ms-identifiers: []
        operationPreviews:
          readOnly: true
          description: the preview of the operations for creation
          type: array
          items:
            $ref: '#/components/schemas/DryrunOperationPreview'
          x-ms-identifiers: []
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state. '
    DryrunActionName:
      description: The name of action for you dryrun job.
      type: string
      enum:
        - createOrUpdate
      x-ms-enum:
        name: DryrunActionName
        modelAsString: true
    DryrunParameters:
      description: The parameters of the dryrun
      discriminator:
        propertyName: actionName
      type: object
      properties:
        actionName:
          $ref: '#/components/schemas/DryrunActionName'
      required:
        - actionName
    CreateOrUpdateDryrunParameters:
      x-ms-discriminator-value: createOrUpdate
      description: The dryrun parameters for creation or update a linker
      properties:
        actionName:
          $ref: '#/components/schemas/DryrunActionName'
        targetService:
          $ref: '#/components/schemas/TargetServiceBase'
          description: The target service properties
        authInfo:
          description: The authentication type.
          $ref: '#/components/schemas/AuthInfoBase'
        clientType:
          description: The application client type
          $ref: '#/components/schemas/ClientType'
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state. '
        vNetSolution:
          nullable: true
          x-nullable: true
          description: The VNet solution.
          $ref: '#/components/schemas/VNetSolution'
        secretStore:
          nullable: true
          x-nullable: true
          description: An option to store secret value in secure place
          $ref: '#/components/schemas/SecretStore'
        scope:
          nullable: true
          type: string
          description: connection scope in source service.
        publicNetworkSolution:
          nullable: true
          x-nullable: true
          description: The network solution.
          $ref: '#/components/schemas/PublicNetworkSolution'
        configurationInfo:
          nullable: true
          x-nullable: true
          description: The connection information consumed by applications, including secrets, connection strings.
          $ref: '#/components/schemas/ConfigurationInfo'
      type: object
    DryrunPrerequisiteResultType:
      description: The type of dryrun result.
      type: string
      enum:
        - basicError
        - permissionsMissing
      x-ms-enum:
        name: DryrunPrerequisiteResultType
        modelAsString: true
    DryrunPrerequisiteResult:
      description: A result of dryrun
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DryrunPrerequisiteResultType'
      required:
        - type
    BasicErrorDryrunPrerequisiteResult:
      x-ms-discriminator-value: basicError
      description: The represent of basic error
      properties:
        type:
          $ref: '#/components/schemas/DryrunPrerequisiteResultType'
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message.
      type: object
    PermissionsMissingDryrunPrerequisiteResult:
      x-ms-discriminator-value: permissionsMissing
      description: The represent of missing permissions
      properties:
        type:
          $ref: '#/components/schemas/DryrunPrerequisiteResultType'
        scope:
          description: The permission scope
          type: string
        permissions:
          description: The permission list
          type: array
          items:
            type: string
        recommendedRole:
          description: The recommended role to resolve permissions missing
          type: string
      type: object
    DryrunOperationPreview:
      description: The preview of the operations for creation
      type: object
      properties:
        name:
          description: The operation name
          type: string
        operationType:
          description: The operation type
          type: string
          enum:
            - configConnection
            - configNetwork
            - configAuth
          x-ms-enum:
            name: DryrunPreviewOperationType
            modelAsString: true
        description:
          description: The description of the operation
          type: string
        action:
          description: The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format
          type: string
        scope:
          description: The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview
          type: string
    ActionType:
      description: Indicates how to apply the connector operations, such as opt out network configuration, opt in configuration.
      type: string
      enum:
        - enable
        - optOut
      x-ms-enum:
        name: actionType
        modelAsString: true
    AuthMode:
      description: Indicates how to apply the authentication configuration operations.
      type: string
      enum:
        - optInAllAuth
        - optOutAllAuth
      x-ms-enum:
        name: authMode
        modelAsString: true
        values:
          - value: optInAllAuth
            description: Default authentication configuration according to the authentication type.
          - value: optOutAllAuth
            description: Skip all authentication configuration such as enabling managed identity and granting RBAC roles
    AllowType:
      description: Whether to allow firewall rules.
      type: string
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: allowType
        modelAsString: true
    DaprConfigurationList:
      description: Dapr configuration list supported by Service Connector
      type: object
      properties:
        value:
          description: The list of dapr configurations
          type: array
          items:
            $ref: '#/components/schemas/DaprConfigurationResource'
          x-ms-identifiers: []
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    DaprConfigurationResource:
      description: Represent one resource of the dapr configuration list
      properties:
        properties:
          description: The properties of the dapr configuration.
          $ref: '#/components/schemas/DaprConfigurationProperties'
          x-ms-client-flatten: true
      type: object
    DaprConfigurationProperties:
      type: object
      properties:
        targetType:
          type: string
          description: Supported target resource type, extract from resource id, uppercase
        authType:
          $ref: '#/components/schemas/AuthType'
        daprProperties:
          $ref: '#/components/schemas/DaprProperties'
  x-stackQL-resources:
    connector_dryruns:
      id: azure.service_connector.connector_dryruns
      name: connector_dryruns
      title: connector_dryruns
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1dryruns?api-version=2023-04-01-preview/get'
            operationId: ConnectorDryrun_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/get'
            operationId: ConnectorDryrun_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunResource
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/put'
            operationId: ConnectorDryrun_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/patch'
            operationId: ConnectorDryrun_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/delete'
            operationId: ConnectorDryrun_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connector_dryruns/methods/get'
          - $ref: '#/components/x-stackQL-resources/connector_dryruns/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connector_dryruns/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/connector_dryruns/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connector_dryruns/methods/delete'
    connectors:
      id: azure.service_connector.connectors
      name: connectors
      title: connectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1connectors?api-version=2023-04-01-preview/get'
            operationId: Connector_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1connectors~1{connectorName}?api-version=2023-04-01-preview/get'
            operationId: Connector_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LinkerResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1connectors~1{connectorName}?api-version=2023-04-01-preview/put'
            operationId: Connector_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LinkerResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1connectors~1{connectorName}?api-version=2023-04-01-preview/delete'
            operationId: Connector_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1connectors~1{connectorName}?api-version=2023-04-01-preview/patch'
            operationId: Connector_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LinkerResource
        validate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1connectors~1{connectorName}~1validate?api-version=2023-04-01-preview/post'
            operationId: Connector_Validate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateOperationResult
        generate_configurations:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceLinker~1locations~1{location}~1connectors~1{connectorName}~1generateConfigurations?api-version=2023-04-01-preview/post'
            operationId: Connector_GenerateConfigurations
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/connectors/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/delete'
    linkers:
      id: azure.service_connector.linkers
      name: linkers
      title: linkers
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers?api-version=2023-04-01-preview/get'
            operationId: Linker_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}?api-version=2023-04-01-preview/get'
            operationId: Linker_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LinkerResource
        create_or_update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}?api-version=2023-04-01-preview/put'
            operationId: Linker_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LinkerResource
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}?api-version=2023-04-01-preview/delete'
            operationId: Linker_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}?api-version=2023-04-01-preview/patch'
            operationId: Linker_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LinkerResource
        validate:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1validateLinker?api-version=2023-04-01-preview/post'
            operationId: Linker_Validate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateOperationResult
        generate_configurations:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1generateConfigurations?api-version=2023-04-01-preview/post'
            operationId: Linkers_GenerateConfigurations
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linkers/methods/get'
          - $ref: '#/components/x-stackQL-resources/linkers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/linkers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/linkers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linkers/methods/delete'
    linker_configurations:
      id: azure.service_connector.linker_configurations
      name: linker_configurations
      title: linker_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1listConfigurations?api-version=2023-04-01-preview/post'
            operationId: LinkerConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linker_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    linkers_dryruns:
      id: azure.service_connector.linkers_dryruns
      name: linkers_dryruns
      title: linkers_dryruns
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1dryruns?api-version=2023-04-01-preview/get'
            operationId: LinkersDryrun_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/get'
            operationId: LinkersDryrun_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunResource
        create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/put'
            operationId: LinkersDryrun_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunResource
        update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/patch'
            operationId: LinkersDryrun_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DryrunResource
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1dryruns~1{dryrunName}?api-version=2023-04-01-preview/delete'
            operationId: LinkersDryrun_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linkers_dryruns/methods/get'
          - $ref: '#/components/x-stackQL-resources/linkers_dryruns/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/linkers_dryruns/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/linkers_dryruns/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linkers_dryruns/methods/delete'
    operations:
      id: azure.service_connector.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ServiceLinker~1operations?api-version=2023-04-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    configuration_names:
      id: azure.service_connector.configuration_names
      name: configuration_names
      title: configuration_names
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ServiceLinker~1configurationNames?api-version=2023-04-01-preview/get'
            operationId: ConfigurationNames_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConfigurationNameResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configuration_names/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    linkers_dapr_configurations:
      id: azure.service_connector.linkers_dapr_configurations
      name: linkers_dapr_configurations
      title: linkers_dapr_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1daprConfigurations?api-version=2023-04-01-preview/get'
            operationId: LinkersDaprConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprConfigurationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linkers_dapr_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_connector_dryruns:
      id: azure.service_connector.vw_connector_dryruns
      name: vw_connector_dryruns
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.prerequisiteResults') as "prerequisite_results",
              JSON_EXTRACT(properties, '$.operationPreviews') as "operation_previews",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              location,
              dryrunName
              FROM azure.service_connector.connector_dryruns
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.prerequisiteResults') as "prerequisite_results",
                json_extract_path_text(properties, '$.operationPreviews') as "operation_previews",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                location,
                dryrunName
                FROM azure.service_connector.connector_dryruns
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
    vw_connectors:
      id: azure.service_connector.vw_connectors
      name: vw_connectors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.targetService') as "target_service",
              JSON_EXTRACT(properties, '$.authInfo') as "auth_info",
              JSON_EXTRACT(properties, '$.clientType') as "client_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.vNetSolution') as "vnet_solution",
              JSON_EXTRACT(properties, '$.secretStore') as "secret_store",
              JSON_EXTRACT(properties, '$.scope') as "scope",
              JSON_EXTRACT(properties, '$.publicNetworkSolution') as "public_network_solution",
              JSON_EXTRACT(properties, '$.configurationInfo') as "configuration_info",
              subscriptionId,
              resourceGroupName,
              location,
              connectorName
              FROM azure.service_connector.connectors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.targetService') as "target_service",
                json_extract_path_text(properties, '$.authInfo') as "auth_info",
                json_extract_path_text(properties, '$.clientType') as "client_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.vNetSolution') as "vnet_solution",
                json_extract_path_text(properties, '$.secretStore') as "secret_store",
                json_extract_path_text(properties, '$.scope') as "scope",
                json_extract_path_text(properties, '$.publicNetworkSolution') as "public_network_solution",
                json_extract_path_text(properties, '$.configurationInfo') as "configuration_info",
                subscriptionId,
                resourceGroupName,
                location,
                connectorName
                FROM azure.service_connector.connectors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND location = 'replace-me';
    vw_linkers:
      id: azure.service_connector.vw_linkers
      name: vw_linkers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.targetService') as "target_service",
              JSON_EXTRACT(properties, '$.authInfo') as "auth_info",
              JSON_EXTRACT(properties, '$.clientType') as "client_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.vNetSolution') as "vnet_solution",
              JSON_EXTRACT(properties, '$.secretStore') as "secret_store",
              JSON_EXTRACT(properties, '$.scope') as "scope",
              JSON_EXTRACT(properties, '$.publicNetworkSolution') as "public_network_solution",
              JSON_EXTRACT(properties, '$.configurationInfo') as "configuration_info",
              resourceUri,
              linkerName
              FROM azure.service_connector.linkers
              WHERE resourceUri = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.targetService') as "target_service",
                json_extract_path_text(properties, '$.authInfo') as "auth_info",
                json_extract_path_text(properties, '$.clientType') as "client_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.vNetSolution') as "vnet_solution",
                json_extract_path_text(properties, '$.secretStore') as "secret_store",
                json_extract_path_text(properties, '$.scope') as "scope",
                json_extract_path_text(properties, '$.publicNetworkSolution') as "public_network_solution",
                json_extract_path_text(properties, '$.configurationInfo') as "configuration_info",
                resourceUri,
                linkerName
                FROM azure.service_connector.linkers
                WHERE resourceUri = 'replace-me';
    vw_linkers_dryruns:
      id: azure.service_connector.vw_linkers_dryruns
      name: vw_linkers_dryruns
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.prerequisiteResults') as "prerequisite_results",
              JSON_EXTRACT(properties, '$.operationPreviews') as "operation_previews",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              resourceUri,
              dryrunName
              FROM azure.service_connector.linkers_dryruns
              WHERE resourceUri = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.prerequisiteResults') as "prerequisite_results",
                json_extract_path_text(properties, '$.operationPreviews') as "operation_previews",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                resourceUri,
                dryrunName
                FROM azure.service_connector.linkers_dryruns
                WHERE resourceUri = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/dryruns?api-version=2023-04-01-preview:
    get:
      tags:
        - Connector
      operationId: ConnectorDryrun_List
      description: list dryrun jobs
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Connector_ListDryrun
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/dryruns/{dryrunName}?api-version=2023-04-01-preview:
    get:
      tags:
        - Connector
      operationId: ConnectorDryrun_Get
      description: get a dryrun job
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Connector_GetDryrun
    put:
      tags:
        - Connector
      operationId: ConnectorDryrun_Create
      description: create a dryrun job to do necessary check before actual creation
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      requestBody:
        description: dryrun resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DryrunResource'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        '201':
          description: Long running operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Connector_CreateDryrun
    patch:
      tags:
        - Connector
      operationId: ConnectorDryrun_Update
      description: update a dryrun job to do necessary check before actual creation
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      requestBody:
        description: dryrun resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DryrunPatch'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Connector_UpdateDryrun
    delete:
      tags:
        - Connector
      operationId: ConnectorDryrun_Delete
      description: delete a dryrun job
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: OK. The job is deleted.
        '204':
          description: Deleted. The job is not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Connector_DeleteDryrun
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors?api-version=2023-04-01-preview:
    get:
      deprecated: false
      description: Returns list of connector which connects to the resource, which supports to config the target service during the resource provision.
      operationId: Connector_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: Connector details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}?api-version=2023-04-01-preview:
    get:
      description: Returns Connector resource for a given name.
      operationId: Connector_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConnectorNameParameter'
      responses:
        '200':
          description: Connector details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create or update Connector resource.
      operationId: Connector_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConnectorNameParameter'
      requestBody:
        description: Connector details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkerResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        '201':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Connector
      operationId: Connector_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Delete a Connector.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConnectorNameParameter'
      responses:
        '200':
          description: OK. The Connector is deleted.
        '202':
          description: Long running operation.
        '204':
          description: Deleted. The Connector is not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Connector
      operationId: Connector_Update
      description: Operation to update an existing Connector.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConnectorNameParameter'
      requestBody:
        description: Connector details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkerPatch'
      responses:
        '200':
          description: Success. The response describes a Connector.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        '202':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}/validate?api-version=2023-04-01-preview:
    post:
      tags:
        - Connector
      operationId: Connector_Validate
      description: Validate a Connector.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConnectorNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateOperationResult'
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}/generateConfigurations?api-version=2023-04-01-preview:
    post:
      tags:
        - Connector
      operationId: Connector_GenerateConfigurations
      description: Generate configurations for a Connector.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConnectorNameParameter'
      requestBody:
        description: Connection Info, including format, secret store, etc
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationInfo'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers?api-version=2023-04-01-preview:
    get:
      deprecated: false
      description: Returns list of Linkers which connects to the resource. which supports to config both application and target service during the resource provision.
      operationId: Linker_List
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: Linker details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}?api-version=2023-04-01-preview:
    get:
      description: Returns Linker resource for a given name.
      operationId: Linker_Get
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: Linker details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create or update Linker resource.
      operationId: Linker_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      requestBody:
        description: Linker details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkerResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        '201':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Linkers
      operationId: Linker_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Delete a Linker.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: OK. The Linker is deleted.
        '202':
          description: Long running operation.
        '204':
          description: Deleted. The Linker is not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Linkers
      operationId: Linker_Update
      description: Operation to update an existing Linker.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      requestBody:
        description: Linker details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkerPatch'
      responses:
        '200':
          description: Success. The response describes a Linker.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        '201':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/validateLinker?api-version=2023-04-01-preview:
    post:
      tags:
        - Linkers
      operationId: Linker_Validate
      description: Validate a Linker.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateOperationResult'
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/listConfigurations?api-version=2023-04-01-preview:
    post:
      tags:
        - Linkers
      operationId: LinkerConfigurations_List
      description: list source configurations for a Linker.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Linker_ListConfigurations
  /{resourceUri}/providers/Microsoft.ServiceLinker/dryruns?api-version=2023-04-01-preview:
    get:
      tags:
        - Linkers
      operationId: LinkersDryrun_List
      description: list dryrun jobs
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Linkers_ListDryrun
  /{resourceUri}/providers/Microsoft.ServiceLinker/dryruns/{dryrunName}?api-version=2023-04-01-preview:
    get:
      tags:
        - Linkers
      operationId: LinkersDryrun_Get
      description: get a dryrun job
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Linkers_GetDryrun
    put:
      tags:
        - Linkers
      operationId: LinkersDryrun_Create
      description: create a dryrun job to do necessary check before actual creation
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      requestBody:
        description: dryrun resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DryrunResource'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        '201':
          description: Long running operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Linkers_CreateDryrun
    patch:
      tags:
        - Linkers
      operationId: LinkersDryrun_Update
      description: add a dryrun job to do necessary check before actual creation
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      requestBody:
        description: dryrun resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DryrunPatch'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryrunResource'
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Linkers_UpdateDryrun
    delete:
      tags:
        - Linkers
      operationId: LinkersDryrun_Delete
      description: delete a dryrun job
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - name: dryrunName
          in: path
          description: The name of dryrun.
          required: true
          x-ms-parameter-location: method
          schema:
            type: string
      responses:
        '200':
          description: OK. The job is deleted.
        '204':
          description: Deleted. The job is not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Linkers_DeleteDryrun
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/generateConfigurations?api-version=2023-04-01-preview:
    post:
      tags:
        - Linkers
      operationId: Linkers_GenerateConfigurations
      description: Generate configurations for a Linker.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      requestBody:
        description: Connection Info, including format, secret store, etc
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationInfo'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.ServiceLinker/operations?api-version=2023-04-01-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists the available ServiceLinker REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.ServiceLinker/configurationNames?api-version=2023-04-01-preview:
    get:
      tags:
        - ConfigurationNames
      operationId: ConfigurationNames_List
      description: Lists the configuration names generated by Service Connector for all target, client types, auth types.
      parameters:
        - name: $filter
          in: query
          description: OData filter options.
          required: false
          schema:
            type: string
        - name: $skipToken
          in: query
          description: OData skipToken option for pagination.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationNameResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.ServiceLinker/daprConfigurations?api-version=2023-04-01-preview:
    get:
      tags:
        - Linkers
      operationId: LinkersDaprConfigurations_List
      description: List the dapr configuration supported by Service Connector.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprConfigurationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Linkers_ListDaprConfigurations
