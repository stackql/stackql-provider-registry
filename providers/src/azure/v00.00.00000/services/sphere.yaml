openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Sphere Provider Client
  description: Azure Sphere resource management API.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    CustomFilterQueryParameter:
      name: $filter
      in: query
      description: Filter the result list using the given expression
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: filter
      schema:
        type: string
    CustomMaxPageSizeQueryParameter:
      name: $maxpagesize
      in: query
      description: The maximum number of result items per page.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: maxpagesize
      schema:
        format: int32
        type: integer
    CustomSkipQueryParameter:
      name: $skip
      in: query
      description: The number of result items to skip.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: skip
      schema:
        format: int32
        type: integer
    CustomTopQueryParameter:
      name: $top
      in: query
      description: The number of result items to return.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: top
      schema:
        format: int32
        type: integer
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    AllowCrashDumpCollection:
      type: string
      description: Allow crash dumps values.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: AllowCrashDumpCollection
        modelAsString: true
        values:
          - name: Enabled
            value: Enabled
            description: Crash dump collection enabled
          - name: Disabled
            value: Disabled
            description: Crash dump collection disabled
    CapabilityType:
      type: string
      description: Capability image type
      enum:
        - ApplicationDevelopment
        - FieldServicing
      x-ms-enum:
        name: CapabilityType
        modelAsString: true
        values:
          - name: ApplicationDevelopment
            value: ApplicationDevelopment
            description: Application development capability
          - name: FieldServicing
            value: FieldServicing
            description: Field servicing capability
    Catalog:
      description: An Azure Sphere catalog
      properties:
        properties:
          $ref: '#/components/schemas/CatalogProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    CatalogListResult:
      type: object
      description: The response of a Catalog list operation.
      properties:
        value:
          type: array
          description: The Catalog items on this page
          items:
            $ref: '#/components/schemas/Catalog'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    CatalogProperties:
      type: object
      description: Catalog properties
      properties:
        tenantId:
          type: string
          description: The Azure Sphere tenant ID associated with the catalog.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    CatalogUpdate:
      type: object
      description: The type used for update operations of the Catalog.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
    Certificate:
      description: An certificate resource belonging to a catalog resource.
      properties:
        properties:
          $ref: '#/components/schemas/CertificateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    CertificateChainResponse:
      type: object
      description: The certificate chain response.
      properties:
        certificateChain:
          type: string
          description: The certificate chain.
          readOnly: true
    CertificateListResult:
      type: object
      description: The response of a Certificate list operation.
      properties:
        value:
          type: array
          description: The Certificate items on this page
          items:
            $ref: '#/components/schemas/Certificate'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    CertificateProperties:
      type: object
      description: The properties of certificate
      properties:
        certificate:
          type: string
          description: The certificate as a UTF-8 encoded base 64 string.
          readOnly: true
        status:
          $ref: '#/components/schemas/CertificateStatus'
          description: The certificate status.
          readOnly: true
        subject:
          type: string
          description: The certificate subject.
          readOnly: true
        thumbprint:
          type: string
          description: The certificate thumbprint.
          readOnly: true
        expiryUtc:
          type: string
          format: date-time
          description: The certificate expiry date.
          readOnly: true
        notBeforeUtc:
          type: string
          format: date-time
          description: The certificate not before date.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    CertificateStatus:
      type: string
      description: Certificate status values.
      enum:
        - Active
        - Inactive
        - Expired
        - Revoked
      x-ms-enum:
        name: CertificateStatus
        modelAsString: true
        values:
          - name: Active
            value: Active
            description: Certificate is active
          - name: Inactive
            value: Inactive
            description: Certificate is inactive
          - name: Expired
            value: Expired
            description: Certificate has expired
          - name: Revoked
            value: Revoked
            description: Certificate has been revoked
    ClaimDevicesRequest:
      type: object
      description: Request to the action call to bulk claim devices.
      properties:
        deviceIdentifiers:
          type: array
          description: Device identifiers of the devices to be claimed.
          items:
            type: string
      required:
        - deviceIdentifiers
    CountDeviceResponse:
      description: Response to the action call for count devices in a catalog (preview API).
      properties:
        value:
          type: integer
          format: int32
          description: Number of children resources in parent resource.
      type: object
    CountDevicesResponse:
      description: Response to the action call for count devices in a catalog.
      properties:
        value:
          type: integer
          format: int32
          description: Number of children resources in parent resource.
      type: object
    CountElementsResponse:
      type: object
      description: Response of the count for elements.
      properties:
        value:
          type: integer
          format: int32
          description: Number of children resources in parent resource.
      required:
        - value
    Deployment:
      description: An deployment resource belonging to a device group resource.
      properties:
        properties:
          $ref: '#/components/schemas/DeploymentProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DeploymentListResult:
      type: object
      description: The response of a Deployment list operation.
      properties:
        value:
          type: array
          description: The Deployment items on this page
          items:
            $ref: '#/components/schemas/Deployment'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DeploymentProperties:
      type: object
      description: The properties of deployment
      properties:
        deploymentId:
          type: string
          description: Deployment ID
          x-ms-mutability:
            - read
            - create
        deployedImages:
          type: array
          description: Images deployed
          items:
            $ref: '#/components/schemas/Image'
          x-ms-mutability:
            - read
            - create
        deploymentDateUtc:
          type: string
          format: date-time
          description: Deployment date UTC
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    Device:
      description: An device resource belonging to a device group resource.
      properties:
        properties:
          $ref: '#/components/schemas/DeviceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DeviceGroup:
      description: An device group resource belonging to a product resource.
      properties:
        properties:
          $ref: '#/components/schemas/DeviceGroupProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DeviceGroupListResult:
      type: object
      description: The response of a DeviceGroup list operation.
      properties:
        value:
          type: array
          description: The DeviceGroup items on this page
          items:
            $ref: '#/components/schemas/DeviceGroup'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DeviceGroupProperties:
      type: object
      description: The properties of deviceGroup
      properties:
        description:
          type: string
          description: Description of the device group.
        osFeedType:
          $ref: '#/components/schemas/OSFeedType'
          description: Operating system feed type of the device group.
        updatePolicy:
          $ref: '#/components/schemas/UpdatePolicy'
          description: Update policy of the device group.
        allowCrashDumpsCollection:
          $ref: '#/components/schemas/AllowCrashDumpCollection'
          description: Flag to define if the user allows for crash dump collection.
        regionalDataBoundary:
          $ref: '#/components/schemas/RegionalDataBoundary'
          description: Regional data boundary for the device group.
        hasDeployment:
          type: boolean
          description: Deployment status for the device group.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    DeviceGroupUpdate:
      description: The type used for update operations of the DeviceGroup.
      properties:
        properties:
          $ref: '#/components/schemas/DeviceGroupUpdateProperties'
          description: The updatable properties of the DeviceGroup.
          x-ms-client-flatten: true
      type: object
    DeviceGroupUpdateProperties:
      type: object
      description: The updatable properties of the DeviceGroup.
      properties:
        description:
          type: string
          description: Description of the device group.
        osFeedType:
          $ref: '#/components/schemas/OSFeedType'
          description: Operating system feed type of the device group.
        updatePolicy:
          $ref: '#/components/schemas/UpdatePolicy'
          description: Update policy of the device group.
        allowCrashDumpsCollection:
          $ref: '#/components/schemas/AllowCrashDumpCollection'
          description: Flag to define if the user allows for crash dump collection.
        regionalDataBoundary:
          $ref: '#/components/schemas/RegionalDataBoundary'
          description: Regional data boundary for the device group.
    DeviceInsight:
      type: object
      description: Device insight report.
      properties:
        deviceId:
          type: string
          description: Device ID
        description:
          type: string
          description: Event description
        startTimestampUtc:
          type: string
          format: date-time
          description: Event start timestamp
        endTimestampUtc:
          type: string
          format: date-time
          description: Event end timestamp
        eventCategory:
          type: string
          description: Event category
        eventClass:
          type: string
          description: Event class
        eventType:
          type: string
          description: Event type
        eventCount:
          type: integer
          format: int32
          description: Event count
      required:
        - deviceId
        - description
        - startTimestampUtc
        - endTimestampUtc
        - eventCategory
        - eventClass
        - eventType
        - eventCount
    DeviceListResult:
      type: object
      description: The response of a Device list operation.
      properties:
        value:
          type: array
          description: The Device items on this page
          items:
            $ref: '#/components/schemas/Device'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DeviceProperties:
      type: object
      description: The properties of device
      properties:
        deviceId:
          type: string
          description: Device ID
          x-ms-mutability:
            - read
            - create
        chipSku:
          type: string
          description: SKU of the chip
          readOnly: true
        lastAvailableOsVersion:
          type: string
          description: OS version available for installation when update requested
          readOnly: true
        lastInstalledOsVersion:
          type: string
          description: OS version running on device when update requested
          readOnly: true
        lastOsUpdateUtc:
          type: string
          format: date-time
          description: Time when update requested and new OS version available
          readOnly: true
        lastUpdateRequestUtc:
          type: string
          format: date-time
          description: Time when update was last requested
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    DeviceUpdate:
      description: The type used for update operations of the Device.
      properties:
        properties:
          $ref: '#/components/schemas/DeviceUpdateProperties'
          description: The updatable properties of the Device.
          x-ms-client-flatten: true
      type: object
    DeviceUpdateProperties:
      type: object
      description: The updatable properties of the Device.
      properties:
        deviceGroupId:
          type: string
          description: Device group id
    GenerateCapabilityImageRequest:
      type: object
      description: Request of the action to create a signed device capability image
      properties:
        capabilities:
          type: array
          description: List of capabilities to create
          items:
            $ref: '#/components/schemas/CapabilityType'
      required:
        - capabilities
    Image:
      description: An image resource belonging to a catalog resource.
      properties:
        properties:
          $ref: '#/components/schemas/ImageProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ImageListResult:
      type: object
      description: The response of a Image list operation.
      properties:
        value:
          type: array
          description: The Image items on this page
          items:
            $ref: '#/components/schemas/Image'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ImageProperties:
      type: object
      description: The properties of image
      properties:
        image:
          type: string
          description: Image as a UTF-8 encoded base 64 string on image create. This field contains the image URI on image reads.
          x-ms-mutability:
            - read
            - create
        imageId:
          type: string
          description: Image ID
          x-ms-mutability:
            - read
            - create
        imageName:
          type: string
          description: Image name
          readOnly: true
        regionalDataBoundary:
          $ref: '#/components/schemas/RegionalDataBoundary'
          description: Regional data boundary for an image
          x-ms-mutability:
            - read
            - create
        uri:
          type: string
          description: Location the image
          readOnly: true
        description:
          type: string
          description: The image description.
          readOnly: true
        componentId:
          type: string
          description: The image component id.
          readOnly: true
        imageType:
          $ref: '#/components/schemas/ImageType'
          description: The image type.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    ImageType:
      type: string
      description: Image type values.
      enum:
        - InvalidImageType
        - OneBl
        - PlutonRuntime
        - WifiFirmware
        - SecurityMonitor
        - NormalWorldLoader
        - NormalWorldDtb
        - NormalWorldKernel
        - RootFs
        - Services
        - Applications
        - FwConfig
        - BootManifest
        - Nwfs
        - TrustedKeystore
        - Policy
        - CustomerBoardConfig
        - UpdateCertStore
        - BaseSystemUpdateManifest
        - FirmwareUpdateManifest
        - CustomerUpdateManifest
        - RecoveryManifest
        - ManifestSet
        - Other
      x-ms-enum:
        name: ImageType
        modelAsString: true
        values:
          - name: InvalidImageType
            value: InvalidImageType
            description: Invalid image.
          - name: OneBl
            value: OneBl
            description: One Bl image type
          - name: PlutonRuntime
            value: PlutonRuntime
            description: Pluton image type
          - name: WifiFirmware
            value: WifiFirmware
            description: Wifi firmware image type
          - name: SecurityMonitor
            value: SecurityMonitor
            description: Security monitor image type
          - name: NormalWorldLoader
            value: NormalWorldLoader
            description: Normal world loader image type
          - name: NormalWorldDtb
            value: NormalWorldDtb
            description: Normal world dtb image type
          - name: NormalWorldKernel
            value: NormalWorldKernel
            description: Normal world kernel image type
          - name: RootFs
            value: RootFs
            description: Root FS image type
          - name: Services
            value: Services
            description: Services image type
          - name: Applications
            value: Applications
            description: Applications image type
          - name: FwConfig
            value: FwConfig
            description: FW config image type
          - name: BootManifest
            value: BootManifest
            description: Boot manifest image type
          - name: Nwfs
            value: Nwfs
            description: Nwfs image type
          - name: TrustedKeystore
            value: TrustedKeystore
            description: Trusted key store image type
          - name: Policy
            value: Policy
            description: Policy image type
          - name: CustomerBoardConfig
            value: CustomerBoardConfig
            description: Customer board config image type
          - name: UpdateCertStore
            value: UpdateCertStore
            description: Update certificate store image type
          - name: BaseSystemUpdateManifest
            value: BaseSystemUpdateManifest
            description: Base system update manifest image type
          - name: FirmwareUpdateManifest
            value: FirmwareUpdateManifest
            description: Firmware update manifest image type
          - name: CustomerUpdateManifest
            value: CustomerUpdateManifest
            description: Customer update manifest image type
          - name: RecoveryManifest
            value: RecoveryManifest
            description: Recovery manifest image type
          - name: ManifestSet
            value: ManifestSet
            description: manifest set image type
          - name: Other
            value: Other
            description: Other image type
    ListDeviceGroupsRequest:
      type: object
      description: Request of the action to list device groups for a catalog.
      properties:
        deviceGroupName:
          type: string
          description: Device Group name.
    OSFeedType:
      type: string
      description: OS feed type values.
      enum:
        - Retail
        - RetailEval
      x-ms-enum:
        name: OSFeedType
        modelAsString: true
        values:
          - name: Retail
            value: Retail
            description: Retail OS feed type.
          - name: RetailEval
            value: RetailEval
            description: Retail evaluation OS feed type.
    PagedDeviceInsight:
      type: object
      description: Paged collection of DeviceInsight items
      properties:
        value:
          type: array
          description: The DeviceInsight items on this page
          items:
            $ref: '#/components/schemas/DeviceInsight'
          x-ms-identifiers: []
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    Product:
      description: An product resource belonging to a catalog resource.
      properties:
        properties:
          $ref: '#/components/schemas/ProductProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ProductListResult:
      type: object
      description: The response of a Product list operation.
      properties:
        value:
          type: array
          description: The Product items on this page
          items:
            $ref: '#/components/schemas/Product'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ProductProperties:
      type: object
      description: The properties of product
      properties:
        description:
          type: string
          description: Description of the product
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    ProductUpdate:
      description: The type used for update operations of the Product.
      properties:
        properties:
          $ref: '#/components/schemas/ProductUpdateProperties'
          description: The updatable properties of the Product.
          x-ms-client-flatten: true
      type: object
    ProductUpdateProperties:
      type: object
      description: The updatable properties of the Product.
      properties:
        description:
          type: string
          description: Description of the product
    ProofOfPossessionNonceRequest:
      type: object
      description: Request for the proof of possession nonce
      properties:
        proofOfPossessionNonce:
          type: string
          description: The proof of possession nonce
      required:
        - proofOfPossessionNonce
    ProofOfPossessionNonceResponse:
      description: Result of the action to generate a proof of possession nonce
      properties:
        certificate:
          type: string
          description: The certificate as a UTF-8 encoded base 64 string.
          readOnly: true
        status:
          $ref: '#/components/schemas/CertificateStatus'
          description: The certificate status.
          readOnly: true
        subject:
          type: string
          description: The certificate subject.
          readOnly: true
        thumbprint:
          type: string
          description: The certificate thumbprint.
          readOnly: true
        expiryUtc:
          type: string
          format: date-time
          description: The certificate expiry date.
          readOnly: true
        notBeforeUtc:
          type: string
          format: date-time
          description: The certificate not before date.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      type: object
    ProvisioningState:
      type: string
      description: Provisioning state of resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Provisioning
            value: Provisioning
            description: The resource is being provisioned
          - name: Updating
            value: Updating
            description: The resource is being updated
          - name: Deleting
            value: Deleting
            description: The resource is being deleted
          - name: Accepted
            value: Accepted
            description: The resource create request has been accepted
    RegionalDataBoundary:
      type: string
      description: Regional data boundary values.
      enum:
        - None
        - EU
      x-ms-enum:
        name: RegionalDataBoundary
        modelAsString: true
        values:
          - name: None
            value: None
            description: No data boundary
          - name: EU
            value: EU
            description: EU data boundary
    SignedCapabilityImageResponse:
      type: object
      description: Signed device capability image response
      properties:
        image:
          type: string
          description: The signed device capability image as a UTF-8 encoded base 64 string.
          readOnly: true
    UpdatePolicy:
      type: string
      description: Update policy values.
      enum:
        - UpdateAll
        - No3rdPartyAppUpdates
      x-ms-enum:
        name: UpdatePolicy
        modelAsString: true
        values:
          - name: UpdateAll
            value: UpdateAll
            description: Update all policy.
          - name: No3rdPartyAppUpdates
            value: No3rdPartyAppUpdates
            description: No update for 3rd party app policy.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.sphere.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureSphere~1operations?api-version=2024-04-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    catalogs:
      id: azure.sphere.catalogs
      name: catalogs
      title: catalogs
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureSphere~1catalogs?api-version=2024-04-01/get'
            operationId: Catalogs_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CatalogListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs?api-version=2024-04-01/get'
            operationId: Catalogs_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CatalogListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}?api-version=2024-04-01/get'
            operationId: Catalogs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Catalog
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}?api-version=2024-04-01/put'
            operationId: Catalogs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Catalog
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}?api-version=2024-04-01/patch'
            operationId: Catalogs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Catalog
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}?api-version=2024-04-01/delete'
            operationId: Catalogs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        count_devices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1countDevices?api-version=2024-04-01/post'
            operationId: Catalogs_CountDevices
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CountDevicesResponse
        upload_image:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1uploadImage?api-version=2024-04-01/post'
            operationId: Catalogs_UploadImage
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/get'
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/delete'
    certificates:
      id: azure.sphere.certificates
      name: certificates
      title: certificates
      methods:
        list_by_catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1certificates?api-version=2024-04-01/get'
            operationId: Certificates_ListByCatalog
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CertificateListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1certificates~1{serialNumber}?api-version=2024-04-01/get'
            operationId: Certificates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Certificate
        retrieve_cert_chain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1certificates~1{serialNumber}~1retrieveCertChain?api-version=2024-04-01/post'
            operationId: Certificates_RetrieveCertChain
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CertificateChainResponse
        retrieve_proof_of_possession_nonce:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1certificates~1{serialNumber}~1retrieveProofOfPossessionNonce?api-version=2024-04-01/post'
            operationId: Certificates_RetrieveProofOfPossessionNonce
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProofOfPossessionNonceResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/list_by_catalog'
        insert: []
        update: []
        replace: []
        delete: []
    images:
      id: azure.sphere.images
      name: images
      title: images
      methods:
        list_by_catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1images?api-version=2024-04-01/get'
            operationId: Images_ListByCatalog
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1images~1{imageName}?api-version=2024-04-01/get'
            operationId: Images_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Image
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1images~1{imageName}?api-version=2024-04-01/put'
            operationId: Images_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Image
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1images~1{imageName}?api-version=2024-04-01/delete'
            operationId: Images_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/images/methods/get'
          - $ref: '#/components/x-stackQL-resources/images/methods/list_by_catalog'
        insert:
          - $ref: '#/components/x-stackQL-resources/images/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/images/methods/delete'
    catalogs_deployments:
      id: azure.sphere.catalogs_deployments
      name: catalogs_deployments
      title: catalogs_deployments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1listDeployments?api-version=2024-04-01/post'
            operationId: CatalogsDeployments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeploymentListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs_deployments/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    catalogs_device_groups:
      id: azure.sphere.catalogs_device_groups
      name: catalogs_device_groups
      title: catalogs_device_groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1listDeviceGroups?api-version=2024-04-01/post'
            operationId: CatalogsDeviceGroups_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceGroupListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs_device_groups/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    catalogs_device_insights:
      id: azure.sphere.catalogs_device_insights
      name: catalogs_device_insights
      title: catalogs_device_insights
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1listDeviceInsights?api-version=2024-04-01/post'
            operationId: CatalogsDeviceInsights_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedDeviceInsight
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs_device_insights/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    catalogs_devices:
      id: azure.sphere.catalogs_devices
      name: catalogs_devices
      title: catalogs_devices
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1listDevices?api-version=2024-04-01/post'
            operationId: CatalogsDevices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs_devices/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    products:
      id: azure.sphere.products
      name: products
      title: products
      methods:
        list_by_catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products?api-version=2024-04-01/get'
            operationId: Products_ListByCatalog
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProductListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}?api-version=2024-04-01/get'
            operationId: Products_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Product
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}?api-version=2024-04-01/put'
            operationId: Products_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Product
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}?api-version=2024-04-01/patch'
            operationId: Products_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Product
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}?api-version=2024-04-01/delete'
            operationId: Products_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        count_devices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1countDevices?api-version=2024-04-01/post'
            operationId: Products_CountDevices
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CountDevicesResponse
        generate_default_device_groups:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1generateDefaultDeviceGroups?api-version=2024-04-01/post'
            operationId: Products_GenerateDefaultDeviceGroups
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceGroupListResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products/methods/get'
          - $ref: '#/components/x-stackQL-resources/products/methods/list_by_catalog'
        insert:
          - $ref: '#/components/x-stackQL-resources/products/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/products/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/products/methods/delete'
    device_groups:
      id: azure.sphere.device_groups
      name: device_groups
      title: device_groups
      methods:
        list_by_product:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups?api-version=2024-04-01/get'
            operationId: DeviceGroups_ListByProduct
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceGroupListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}?api-version=2024-04-01/get'
            operationId: DeviceGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceGroup
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}?api-version=2024-04-01/put'
            operationId: DeviceGroups_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceGroup
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}?api-version=2024-04-01/patch'
            operationId: DeviceGroups_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}?api-version=2024-04-01/delete'
            operationId: DeviceGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        claim_devices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1claimDevices?api-version=2024-04-01/post'
            operationId: DeviceGroups_ClaimDevices
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        count_devices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1countDevices?api-version=2024-04-01/post'
            operationId: DeviceGroups_CountDevices
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CountDevicesResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/device_groups/methods/list_by_product'
        insert:
          - $ref: '#/components/x-stackQL-resources/device_groups/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/device_groups/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/device_groups/methods/delete'
    deployments:
      id: azure.sphere.deployments
      name: deployments
      title: deployments
      methods:
        list_by_device_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1deployments?api-version=2024-04-01/get'
            operationId: Deployments_ListByDeviceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeploymentListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1deployments~1{deploymentName}?api-version=2024-04-01/get'
            operationId: Deployments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Deployment
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1deployments~1{deploymentName}?api-version=2024-04-01/put'
            operationId: Deployments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Deployment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1deployments~1{deploymentName}?api-version=2024-04-01/delete'
            operationId: Deployments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments/methods/list_by_device_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete'
    devices:
      id: azure.sphere.devices
      name: devices
      title: devices
      methods:
        list_by_device_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1devices?api-version=2024-04-01/get'
            operationId: Devices_ListByDeviceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeviceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1devices~1{deviceName}?api-version=2024-04-01/get'
            operationId: Devices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Device
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1devices~1{deviceName}?api-version=2024-04-01/put'
            operationId: Devices_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Device
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1devices~1{deviceName}?api-version=2024-04-01/patch'
            operationId: Devices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Device
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1devices~1{deviceName}?api-version=2024-04-01/delete'
            operationId: Devices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_capability_image:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureSphere~1catalogs~1{catalogName}~1products~1{productName}~1deviceGroups~1{deviceGroupName}~1devices~1{deviceName}~1generateCapabilityImage?api-version=2024-04-01/post'
            operationId: Devices_GenerateCapabilityImage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SignedCapabilityImageResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list_by_device_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/devices/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete'
    vw_catalogs:
      id: azure.sphere.vw_catalogs
      name: vw_catalogs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.tenantId') as "tenant_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              catalogName
              FROM azure.sphere.catalogs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.tenantId') as "tenant_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                catalogName
                FROM azure.sphere.catalogs
                WHERE subscriptionId = 'replace-me';
    vw_certificates:
      id: azure.sphere.vw_certificates
      name: vw_certificates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.certificate') as "certificate",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.subject') as "subject",
              JSON_EXTRACT(properties, '$.thumbprint') as "thumbprint",
              JSON_EXTRACT(properties, '$.expiryUtc') as "expiry_utc",
              JSON_EXTRACT(properties, '$.notBeforeUtc') as "not_before_utc",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              catalogName,
              serialNumber
              FROM azure.sphere.certificates
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.certificate') as "certificate",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.subject') as "subject",
                json_extract_path_text(properties, '$.thumbprint') as "thumbprint",
                json_extract_path_text(properties, '$.expiryUtc') as "expiry_utc",
                json_extract_path_text(properties, '$.notBeforeUtc') as "not_before_utc",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                catalogName,
                serialNumber
                FROM azure.sphere.certificates
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me';
    vw_images:
      id: azure.sphere.vw_images
      name: vw_images
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.image') as "image",
              JSON_EXTRACT(properties, '$.imageId') as "image_id",
              JSON_EXTRACT(properties, '$.imageName') as "image_name",
              JSON_EXTRACT(properties, '$.regionalDataBoundary') as "regional_data_boundary",
              JSON_EXTRACT(properties, '$.uri') as "uri",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.componentId') as "component_id",
              JSON_EXTRACT(properties, '$.imageType') as "image_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              catalogName,
              imageName
              FROM azure.sphere.images
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.image') as "image",
                json_extract_path_text(properties, '$.imageId') as "image_id",
                json_extract_path_text(properties, '$.imageName') as "image_name",
                json_extract_path_text(properties, '$.regionalDataBoundary') as "regional_data_boundary",
                json_extract_path_text(properties, '$.uri') as "uri",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.componentId') as "component_id",
                json_extract_path_text(properties, '$.imageType') as "image_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                catalogName,
                imageName
                FROM azure.sphere.images
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me';
    vw_products:
      id: azure.sphere.vw_products
      name: vw_products
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              catalogName,
              productName
              FROM azure.sphere.products
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                catalogName,
                productName
                FROM azure.sphere.products
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me';
    vw_device_groups:
      id: azure.sphere.vw_device_groups
      name: vw_device_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.osFeedType') as "os_feed_type",
              JSON_EXTRACT(properties, '$.updatePolicy') as "update_policy",
              JSON_EXTRACT(properties, '$.allowCrashDumpsCollection') as "allow_crash_dumps_collection",
              JSON_EXTRACT(properties, '$.regionalDataBoundary') as "regional_data_boundary",
              JSON_EXTRACT(properties, '$.hasDeployment') as "has_deployment",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              catalogName,
              productName,
              deviceGroupName
              FROM azure.sphere.device_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me' AND productName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.osFeedType') as "os_feed_type",
                json_extract_path_text(properties, '$.updatePolicy') as "update_policy",
                json_extract_path_text(properties, '$.allowCrashDumpsCollection') as "allow_crash_dumps_collection",
                json_extract_path_text(properties, '$.regionalDataBoundary') as "regional_data_boundary",
                json_extract_path_text(properties, '$.hasDeployment') as "has_deployment",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                catalogName,
                productName,
                deviceGroupName
                FROM azure.sphere.device_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me' AND productName = 'replace-me';
    vw_deployments:
      id: azure.sphere.vw_deployments
      name: vw_deployments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.deploymentId') as "deployment_id",
              JSON_EXTRACT(properties, '$.deployedImages') as "deployed_images",
              JSON_EXTRACT(properties, '$.deploymentDateUtc') as "deployment_date_utc",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              catalogName,
              productName,
              deviceGroupName,
              deploymentName
              FROM azure.sphere.deployments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me' AND productName = 'replace-me' AND deviceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.deploymentId') as "deployment_id",
                json_extract_path_text(properties, '$.deployedImages') as "deployed_images",
                json_extract_path_text(properties, '$.deploymentDateUtc') as "deployment_date_utc",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                catalogName,
                productName,
                deviceGroupName,
                deploymentName
                FROM azure.sphere.deployments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me' AND productName = 'replace-me' AND deviceGroupName = 'replace-me';
    vw_devices:
      id: azure.sphere.vw_devices
      name: vw_devices
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.deviceId') as "device_id",
              JSON_EXTRACT(properties, '$.chipSku') as "chip_sku",
              JSON_EXTRACT(properties, '$.lastAvailableOsVersion') as "last_available_os_version",
              JSON_EXTRACT(properties, '$.lastInstalledOsVersion') as "last_installed_os_version",
              JSON_EXTRACT(properties, '$.lastOsUpdateUtc') as "last_os_update_utc",
              JSON_EXTRACT(properties, '$.lastUpdateRequestUtc') as "last_update_request_utc",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              catalogName,
              productName,
              deviceGroupName,
              deviceName
              FROM azure.sphere.devices
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me' AND productName = 'replace-me' AND deviceGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.deviceId') as "device_id",
                json_extract_path_text(properties, '$.chipSku') as "chip_sku",
                json_extract_path_text(properties, '$.lastAvailableOsVersion') as "last_available_os_version",
                json_extract_path_text(properties, '$.lastInstalledOsVersion') as "last_installed_os_version",
                json_extract_path_text(properties, '$.lastOsUpdateUtc') as "last_os_update_utc",
                json_extract_path_text(properties, '$.lastUpdateRequestUtc') as "last_update_request_utc",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                catalogName,
                productName,
                deviceGroupName,
                deviceName
                FROM azure.sphere.devices
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND catalogName = 'replace-me' AND productName = 'replace-me' AND deviceGroupName = 'replace-me';
paths:
  /providers/Microsoft.AzureSphere/operations?api-version=2024-04-01:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureSphere/catalogs?api-version=2024-04-01:
    get:
      operationId: Catalogs_ListBySubscription
      tags:
        - Catalogs
      description: List Catalog resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs?api-version=2024-04-01:
    get:
      operationId: Catalogs_ListByResourceGroup
      tags:
        - Catalogs
      description: List Catalog resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}?api-version=2024-04-01:
    get:
      operationId: Catalogs_Get
      tags:
        - Catalogs
      description: Get a Catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Catalogs_CreateOrUpdate
      tags:
        - Catalogs
      description: Create a Catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalog'
      responses:
        '200':
          description: Resource 'Catalog' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        '201':
          description: Resource 'Catalog' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Catalogs_Update
      tags:
        - Catalogs
      description: Update a Catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Catalogs_Delete
      tags:
        - Catalogs
      description: Delete a Catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/certificates?api-version=2024-04-01:
    get:
      operationId: Certificates_ListByCatalog
      tags:
        - Certificates
      description: List Certificate resources by Catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/certificates/{serialNumber}?api-version=2024-04-01:
    get:
      operationId: Certificates_Get
      tags:
        - Certificates
      description: Get a Certificate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: serialNumber
          in: path
          description: Serial number of the certificate. Use '.default' to get current active certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/certificates/{serialNumber}/retrieveCertChain?api-version=2024-04-01:
    post:
      operationId: Certificates_RetrieveCertChain
      tags:
        - Certificates
      description: Retrieves cert chain.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: serialNumber
          in: path
          description: Serial number of the certificate. Use '.default' to get current active certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateChainResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/certificates/{serialNumber}/retrieveProofOfPossessionNonce?api-version=2024-04-01:
    post:
      operationId: Certificates_RetrieveProofOfPossessionNonce
      tags:
        - Certificates
      description: Gets the proof of possession nonce.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: serialNumber
          in: path
          description: Serial number of the certificate. Use '.default' to get current active certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: 'Proof of possession nonce request body '
        required: true
        x-ms-requestBody-name: proofOfPossessionNonceRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProofOfPossessionNonceRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofOfPossessionNonceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/countDevices?api-version=2024-04-01:
    post:
      operationId: Catalogs_CountDevices
      tags:
        - Catalogs
      description: Counts devices in catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountDevicesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images?api-version=2024-04-01:
    get:
      operationId: Images_ListByCatalog
      tags:
        - Images
      description: List Image resources by Catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images/{imageName}?api-version=2024-04-01:
    get:
      operationId: Images_Get
      tags:
        - Images
      description: Get a Image
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: imageName
          in: path
          description: Image name. Use an image GUID for GA versions of the API.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Images_CreateOrUpdate
      tags:
        - Images
      description: Create a Image
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: imageName
          in: path
          description: Image name. Use an image GUID for GA versions of the API.
          required: true
          schema:
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: Resource 'Image' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '201':
          description: Resource 'Image' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: Images_Delete
      tags:
        - Images
      description: Delete a Image
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: imageName
          in: path
          description: Image name. Use an image GUID for GA versions of the API.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDeployments?api-version=2024-04-01:
    post:
      operationId: CatalogsDeployments_List
      tags:
        - Catalogs
      description: Lists deployments for catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Catalogs_ListDeployments
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDeviceGroups?api-version=2024-04-01:
    post:
      operationId: CatalogsDeviceGroups_List
      tags:
        - Catalogs
      description: List the device groups for the catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      requestBody:
        description: List device groups for catalog.
        required: true
        x-ms-requestBody-name: listDeviceGroupsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeviceGroupsRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroupListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Catalogs_ListDeviceGroups
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDeviceInsights?api-version=2024-04-01:
    post:
      operationId: CatalogsDeviceInsights_List
      tags:
        - Catalogs
      description: Lists device insights for catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDeviceInsight'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Catalogs_ListDeviceInsights
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDevices?api-version=2024-04-01:
    post:
      operationId: CatalogsDevices_List
      tags:
        - Catalogs
      description: Lists devices for catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Catalogs_ListDevices
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products?api-version=2024-04-01:
    get:
      operationId: Products_ListByCatalog
      tags:
        - Products
      description: List Product resources by Catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}?api-version=2024-04-01:
    get:
      operationId: Products_Get
      tags:
        - Products
      description: Get a Product. '.default' and '.unassigned' are system defined values and cannot be used for product name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Products_CreateOrUpdate
      tags:
        - Products
      description: Create a Product. '.default' and '.unassigned' are system defined values and cannot be used for product name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Resource 'Product' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '201':
          description: Resource 'Product' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Products_Update
      tags:
        - Products
      description: Update a Product. '.default' and '.unassigned' are system defined values and cannot be used for product name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Products_Delete
      tags:
        - Products
      description: Delete a Product. '.default' and '.unassigned' are system defined values and cannot be used for product name'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/countDevices?api-version=2024-04-01:
    post:
      operationId: Products_CountDevices
      tags:
        - Products
      description: Counts devices in product. '.default' and '.unassigned' are system defined values and cannot be used for product name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountDevicesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups?api-version=2024-04-01:
    get:
      operationId: DeviceGroups_ListByProduct
      tags:
        - DeviceGroups
      description: List DeviceGroup resources by Product. '.default' and '.unassigned' are system defined values and cannot be used for product name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroupListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}?api-version=2024-04-01:
    get:
      operationId: DeviceGroups_Get
      tags:
        - DeviceGroups
      description: Get a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: DeviceGroups_CreateOrUpdate
      tags:
        - DeviceGroups
      description: Create a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceGroup'
      responses:
        '200':
          description: Resource 'DeviceGroup' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
        '201':
          description: Resource 'DeviceGroup' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: DeviceGroups_Update
      tags:
        - DeviceGroups
      description: Update a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceGroupUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: DeviceGroups_Delete
      tags:
        - DeviceGroups
      description: Delete a DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}/claimDevices?api-version=2024-04-01:
    post:
      operationId: DeviceGroups_ClaimDevices
      tags:
        - DeviceGroups
      description: Bulk claims the devices. Use '.unassigned' or '.default' for the device group and product names when bulk claiming devices to a catalog only.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      requestBody:
        description: Bulk claim devices request body.
        required: true
        x-ms-requestBody-name: claimDevicesRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimDevicesRequest'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}/countDevices?api-version=2024-04-01:
    post:
      operationId: DeviceGroups_CountDevices
      tags:
        - DeviceGroups
      description: Counts devices in device group. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountDevicesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}/deployments?api-version=2024-04-01:
    get:
      operationId: Deployments_ListByDeviceGroup
      tags:
        - Deployments
      description: List Deployment resources by DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CustomFilterQueryParameter'
        - $ref: '#/components/parameters/CustomTopQueryParameter'
        - $ref: '#/components/parameters/CustomSkipQueryParameter'
        - $ref: '#/components/parameters/CustomMaxPageSizeQueryParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}/deployments/{deploymentName}?api-version=2024-04-01:
    get:
      operationId: Deployments_Get
      tags:
        - Deployments
      description: Get a Deployment. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deploymentName
          in: path
          description: Deployment name. Use .default for deployment creation and to get the current deployment for the associated device group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Deployments_CreateOrUpdate
      tags:
        - Deployments
      description: Create a Deployment. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deploymentName
          in: path
          description: Deployment name. Use .default for deployment creation and to get the current deployment for the associated device group.
          required: true
          schema:
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: Resource 'Deployment' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        '201':
          description: Resource 'Deployment' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: Deployments_Delete
      tags:
        - Deployments
      description: Delete a Deployment. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deploymentName
          in: path
          description: Deployment name. Use .default for deployment creation and to get the current deployment for the associated device group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}/devices?api-version=2024-04-01:
    get:
      operationId: Devices_ListByDeviceGroup
      tags:
        - Devices
      description: List Device resources by DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}/devices/{deviceName}?api-version=2024-04-01:
    get:
      operationId: Devices_Get
      tags:
        - Devices
      description: Get a Device. Use '.unassigned' or '.default' for the device group and product names when a device does not belong to a device group and product.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceName
          in: path
          description: Device name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{128}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Devices_CreateOrUpdate
      tags:
        - Devices
      description: Create a Device. Use '.unassigned' or '.default' for the device group and product names to claim a device to the catalog only.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceName
          in: path
          description: Device name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{128}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: Resource 'Device' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '201':
          description: Resource 'Device' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Devices_Update
      tags:
        - Devices
      description: Update a Device. Use '.unassigned' or '.default' for the device group and product names to move a device to the catalog level.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceName
          in: path
          description: Device name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{128}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Devices_Delete
      tags:
        - Devices
      description: Delete a Device
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceName
          in: path
          description: Device name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{128}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/deviceGroups/{deviceGroupName}/devices/{deviceName}/generateCapabilityImage?api-version=2024-04-01:
    post:
      operationId: Devices_GenerateCapabilityImage
      tags:
        - Devices
      description: Generates the capability image for the device. Use '.unassigned' or '.default' for the device group and product names to generate the image for a device that does not belong to a specific device group and product.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceGroupName
          in: path
          description: Name of device group.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]{1,2}$|^[A-Za-z0-9][A-Za-z0-9\s]{1,48}[A-Za-z0-9]$|^\.default$|^\.unassigned$
            type: string
        - name: deviceName
          in: path
          description: Device name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{128}$
            type: string
      requestBody:
        description: Generate capability image request body.
        required: true
        x-ms-requestBody-name: generateDeviceCapabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCapabilityImageRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedCapabilityImageResponse'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/generateDefaultDeviceGroups?api-version=2024-04-01:
    post:
      operationId: Products_GenerateDefaultDeviceGroups
      tags:
        - Products
      description: Generates default device groups for the product. '.default' and '.unassigned' are system defined values and cannot be used for product name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
        - name: productName
          in: path
          description: Name of product.
          required: true
          schema:
            pattern: ^[\w][\w\s]{1,48}[\w]$|^\.default$|^\.unassigned$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroupListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/uploadImage?api-version=2024-04-01:
    post:
      operationId: Catalogs_UploadImage
      tags:
        - Catalogs
      description: Creates an image. Use this action when the image ID is unknown.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: catalogName
          in: path
          description: Name of catalog
          required: true
          schema:
            pattern: ^[A-Za-z0-9_-]{1,50}$
            type: string
      requestBody:
        description: Image upload request body.
        required: true
        x-ms-requestBody-name: uploadImageRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
