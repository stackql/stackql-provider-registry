openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AzureArcData Management Client
  description: The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The ID of the Azure subscription
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the Azure resource group
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    location:
      name: location
      in: path
      description: The Azure region to use for the request
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    apiVersion:
      name: api-version
      in: query
      description: The API version to use for the request
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    sqlServerInstanceName:
      name: sqlServerInstanceName
      in: path
      description: Name of SQL Server Instance
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    databaseName:
      name: databaseName
      in: path
      description: Name of the database
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    availabilityGroupName:
      name: availabilityGroupName
      in: path
      description: Name of SQL Availability Group
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    dataControllerName:
      name: dataControllerName
      in: path
      description: The name of the data controller
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    activeDirectoryConnectorName:
      name: activeDirectoryConnectorName
      in: path
      description: The name of the Active Directory connector instance
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    sqlManagedInstanceName:
      name: sqlManagedInstanceName
      in: path
      description: Name of SQL Managed Instance
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    failoverGroupName:
      name: failoverGroupName
      in: path
      description: The name of the Failover Group
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    postgresInstanceName:
      name: postgresInstanceName
      in: path
      description: Name of Postgres Instance
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    PostgresInstanceSku:
      description: The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
      properties:
        tier:
          type: string
          enum:
            - Hyperscale
          x-ms-enum:
            name: PostgresInstanceSkuTier
            modelAsString: false
          default: Hyperscale
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier.
        name:
          type: string
          description: The name of the SKU.  It is typically a letter+number code
        dev:
          type: boolean
          default: true
          description: 'Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. '
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      type: object
    PostgresInstanceProperties:
      description: Postgres Instance properties.
      type: object
      properties:
        dataControllerId:
          type: string
          description: The data controller id
        admin:
          type: string
          description: The instance admin
        basicLoginInformation:
          $ref: '#/components/schemas/BasicLoginInformation'
          description: Username and password for basic authentication.
        k8sRaw:
          type: object
          description: The raw kubernetes information
        lastUploadedDate:
          type: string
          format: date-time
          description: Last uploaded date from Kubernetes cluster. Defaults to current date time
        provisioningState:
          type: string
          readOnly: true
          description: The provisioning state of the Azure Arc-enabled PostgreSQL instance.
    PostgresInstance:
      description: A Postgres Instance.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        properties:
          $ref: '#/components/schemas/PostgresInstanceProperties'
          x-ms-client-flatten: false
          description: 'null'
        sku:
          $ref: '#/components/schemas/PostgresInstanceSku'
          description: Resource sku.
      type: object
    PostgresInstanceUpdate:
      description: An update to a Postgres Instance.
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PostgresInstanceProperties'
          x-ms-client-flatten: false
      type: object
    PostgresInstanceListResult:
      description: A list of PostgresInstance.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/PostgresInstance'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    SqlManagedInstance:
      description: A SqlManagedInstance.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/SqlManagedInstanceProperties'
          description: 'null'
          x-ms-client-flatten: false
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        sku:
          $ref: '#/components/schemas/SqlManagedInstanceSku'
          description: Resource sku.
      type: object
    SqlManagedInstanceSku:
      description: The resource model definition representing SKU for Azure Managed Instance - Azure Arc
      type: object
      properties:
        name:
          type: string
          enum:
            - vCore
          description: The name of the SKU.
          x-ms-enum:
            name: SqlManagedInstanceSkuName
            modelAsString: false
        tier:
          type: string
          enum:
            - GeneralPurpose
            - BusinessCritical
          x-ms-enum:
            name: SqlManagedInstanceSkuTier
            modelAsString: false
          default: GeneralPurpose
          description: The pricing tier for the instance.
        dev:
          type: boolean
          default: true
          description: 'Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. '
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: The SKU family
        capacity:
          type: integer
          format: int32
          description: The SKU capacity
      required:
        - name
    SqlManagedInstanceProperties:
      description: Properties of sqlManagedInstance.
      type: object
      properties:
        dataControllerId:
          type: string
          description: 'null'
        admin:
          type: string
          description: The instance admin user
        startTime:
          type: string
          description: The instance start time
        endTime:
          type: string
          description: The instance end time
        k8sRaw:
          $ref: '#/components/schemas/SqlManagedInstanceK8sRaw'
          description: The raw kubernetes information
        basicLoginInformation:
          $ref: '#/components/schemas/BasicLoginInformation'
          description: Username and password for basic authentication.
        lastUploadedDate:
          type: string
          format: date-time
          description: Last uploaded date from Kubernetes cluster. Defaults to current date time
        provisioningState:
          type: string
          readOnly: true
          description: The provisioning state of the Arc-enabled SQL Managed Instance resource.
        activeDirectoryInformation:
          description: Active Directory information related to this SQL Managed Instance.
          $ref: '#/components/schemas/ActiveDirectoryInformation'
        licenseType:
          type: string
          enum:
            - BasePrice
            - LicenseIncluded
            - DisasterRecovery
          x-ms-enum:
            name: arcSqlManagedInstanceLicenseType
            modelAsString: true
          default: BasePrice
          description: The license type to apply for this managed instance.
        clusterId:
          type: string
          description: If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
        extensionId:
          type: string
          description: If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
    SqlManagedInstanceUpdate:
      description: An update to a SQL Managed Instance.
      type: object
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
    SqlManagedInstanceK8sRaw:
      type: object
      description: The raw kubernetes information.
      properties:
        spec:
          $ref: '#/components/schemas/SqlManagedInstanceK8sSpec'
      additionalProperties: {}
    SqlManagedInstanceK8sSpec:
      type: object
      description: The kubernetes spec information.
      properties:
        scheduling:
          $ref: '#/components/schemas/K8sScheduling'
        replicas:
          type: integer
          format: int32
          description: This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
        security:
          $ref: '#/components/schemas/K8sSecurity'
        settings:
          $ref: '#/components/schemas/K8sSettings'
      additionalProperties: {}
    K8sScheduling:
      type: object
      description: The kubernetes scheduling information.
      properties:
        default:
          $ref: '#/components/schemas/K8sSchedulingOptions'
      additionalProperties: {}
    K8sSchedulingOptions:
      type: object
      description: The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
      properties:
        resources:
          $ref: '#/components/schemas/K8sResourceRequirements'
      additionalProperties: {}
    K8sResourceRequirements:
      type: object
      description: The kubernetes resource limits and requests used to restrict or reserve resource usage.
      properties:
        requests:
          type: object
          additionalProperties:
            type: string
          description: Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
        limits:
          type: object
          additionalProperties:
            type: string
          description: Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
      additionalProperties: {}
    K8sSecurity:
      type: object
      description: The kubernetes security information.
      properties:
        adminLoginSecret:
          type: string
          description: Admin login secret key
        serviceCertificateSecret:
          type: string
          description: Service certificate secret used
        activeDirectory:
          $ref: '#/components/schemas/K8sActiveDirectory'
        transparentDataEncryption:
          $ref: '#/components/schemas/k8stransparentDataEncryption'
      additionalProperties: {}
    K8sActiveDirectory:
      type: object
      description: The kubernetes active directory information.
      properties:
        connector:
          type: object
          properties:
            name:
              type: string
              description: Name of the connector
            namespace:
              type: string
              description: Name space of the connector
        accountName:
          type: string
          description: Account name for AAD
        keytabSecret:
          type: string
          description: Keytab secret used to authenticate with Active Directory.
        encryptionTypes:
          type: array
          description: An array of encryption types
          items:
            type: string
    k8stransparentDataEncryption:
      type: object
      description: Transparent data encryption information.
      properties:
        mode:
          type: string
          description: Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
        protectorSecret:
          type: string
          description: Protector secret for customer managed Transparent data encryption mode
    K8sSettings:
      type: object
      description: The kubernetes settings information.
      properties:
        network:
          $ref: '#/components/schemas/K8sNetworkSettings'
      additionalProperties: {}
    K8sNetworkSettings:
      type: object
      description: The kubernetes network settings information.
      properties:
        forceencryption:
          type: integer
          format: int32
          description: If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
        tlsciphers:
          type: string
          description: Specifies which ciphers are allowed by SQL Server for TLS
        tlsprotocols:
          type: string
          description: A comma-separated list of which TLS protocols are allowed by SQL Server
    KeytabInformation:
      type: object
      description: Keytab used for authenticate with Active Directory.
      properties:
        keytab:
          type: string
          description: A base64-encoded keytab.
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    ActiveDirectoryInformation:
      type: object
      description: Active Directory information that related to the resource.
      properties:
        keytabInformation:
          description: Keytab information that is used for the Sql Managed Instance when Active Directory authentication is used.
          $ref: '#/components/schemas/KeytabInformation'
    SqlManagedInstanceListResult:
      description: A list of SqlManagedInstance.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/SqlManagedInstance'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    ArcSqlServerDatabaseListResult:
      description: A list of Arc Sql Server database.
      type: object
      properties:
        value:
          description: Array of  Arc Sql Server database.
          type: array
          items:
            $ref: '#/components/schemas/SqlServerDatabaseResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    SqlServerDatabaseResource:
      description: Arc Sql Server database
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/SqlServerDatabaseResourceProperties'
          description: Properties of Arc Sql Server database
          x-ms-client-flatten: false
      type: object
    SqlServerDatabaseResourceProperties:
      type: object
      description: The properties of Arc Sql Server database resource
      properties:
        collationName:
          description: Collation of the database.
          type: string
          x-ms-mutability:
            - read
            - create
        databaseCreationDate:
          format: date-time
          description: Creation date of the database.
          type: string
        compatibilityLevel:
          type: integer
          minimum: 80
          maximum: 200
          format: int32
          description: Compatibility level of the database
        sizeMB:
          type: number
          format: float
          description: Size of the database.
        spaceAvailableMB:
          type: number
          format: float
          description: Space left of the database.
        state:
          description: State of the database.
          enum:
            - Online
            - Restoring
            - Recovering
            - RecoveryPending
            - Suspect
            - Emergency
            - Offline
            - Copying
            - OfflineSecondary
          type: string
          x-ms-enum:
            name: DatabaseState
            modelAsString: true
        isReadOnly:
          type: boolean
          description: Whether the database is read only or not.
        recoveryMode:
          description: Status of the database.
          enum:
            - Full
            - Bulk-logged
            - Simple
          type: string
          x-ms-enum:
            name: RecoveryMode
            modelAsString: true
        databaseOptions:
          type: object
          description: List of features that are enabled for the database
          properties:
            isAutoCloseOn:
              type: boolean
            isAutoShrinkOn:
              type: boolean
            isAutoCreateStatsOn:
              type: boolean
            isAutoUpdateStatsOn:
              type: boolean
            isRemoteDataArchiveEnabled:
              type: boolean
            isMemoryOptimizationEnabled:
              type: boolean
            isEncrypted:
              type: boolean
            isTrustworthyOn:
              type: boolean
        backupInformation:
          type: object
          properties:
            lastFullBackup:
              format: date-time
              description: Date time of last full backup.
              type: string
            lastLogBackup:
              format: date-time
              description: Date time of last log backup.
              type: string
        backupPolicy:
          description: The backup profile for the SQL server.
          $ref: '#/components/schemas/BackupPolicy'
        earliestRestoreDate:
          format: date-time
          description: This records the earliest start date and time that restore is available for this database (ISO8601 format).
          type: string
          readOnly: true
        createMode:
          description: 'Database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. sourceDatabaseId and restorePointInTime must be specified.'
          enum:
            - Default
            - PointInTimeRestore
          type: string
          x-ms-enum:
            name: DatabaseCreateMode
            modelAsString: true
        sourceDatabaseId:
          description: The resource identifier of the source database associated with create operation of this database.
          type: string
          format: arm-id
        restorePointInTime:
          format: date-time
          description: Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
          type: string
        provisioningState:
          type: string
          description: The provisioning state of the Arc-enabled SQL Server database resource.
          readOnly: true
        lastDatabaseUploadTime:
          type: string
          format: date-time
          description: The time when last successful database upload was performed.
          readOnly: true
    SqlServerDatabaseUpdate:
      description: An update to database resource.
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/SqlServerDatabaseResourceProperties'
          description: The data controller's properties
          x-ms-client-flatten: false
      type: object
    BackupPolicy:
      description: The backup profile for the SQL server.
      type: object
      properties:
        retentionPeriodDays:
          type: integer
          description: The retention period for all the databases in this managed instance.
          minimum: 0
          maximum: 35
          format: int32
        fullBackupDays:
          type: integer
          description: The value indicating days between full backups.
          minimum: 0
          maximum: 7
          format: int32
        differentialBackupHours:
          description: The differential backup interval in hours.
          enum:
            - 12
            - 24
          type: integer
          format: int32
          x-ms-enum:
            name: differentialBackupHours
            modelAsString: false
        transactionLogBackupMinutes:
          type: integer
          description: The value indicating minutes between transaction log backups.
          minimum: 0
          maximum: 60
          format: int32
    FailoverGroupListResult:
      description: A list of failover groups.
      type: object
      properties:
        value:
          description: Array of failover group results.
          type: array
          items:
            $ref: '#/components/schemas/FailoverGroupResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    FailoverGroupResource:
      description: A failover group resource.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/FailoverGroupProperties'
          description: 'null'
          x-ms-client-flatten: false
      type: object
    FailoverGroupProperties:
      type: object
      description: The properties of a failover group resource.
      properties:
        provisioningState:
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          description: The provisioning state of the failover group resource.
          readOnly: true
        partnerManagedInstanceId:
          type: string
          description: The resource ID of the partner SQL managed instance.
        spec:
          $ref: '#/components/schemas/FailoverGroupSpec'
          description: The specifications of the failover group resource.
          x-ms-client-flatten: false
        status:
          type: object
          description: The status of the failover group custom resource.
      additionalProperties: {}
      required:
        - partnerManagedInstanceId
        - spec
    FailoverGroupSpec:
      description: The specifications of the failover group resource.
      type: object
      properties:
        sharedName:
          type: string
          description: The shared name of the failover group for this SQL managed instance. Both SQL managed instance and its partner have to use the same shared name.
        sourceMI:
          type: string
          description: The name of the SQL managed instance with this failover group role.
        partnerMI:
          type: string
          description: The name of the partner SQL managed instance.
        partnerMirroringURL:
          type: string
          description: The mirroring endpoint URL of the partner SQL managed instance.
        partnerMirroringCert:
          type: string
          description: The mirroring endpoint public certificate for the partner SQL managed instance. Only PEM format is supported.
        partnerSyncMode:
          type: string
          enum:
            - async
            - sync
          x-ms-enum:
            name: failoverGroupPartnerSyncMode
            modelAsString: true
          default: async
          description: The partner sync mode of the SQL managed instance.
        role:
          type: string
          enum:
            - primary
            - secondary
            - force-primary-allow-data-loss
            - force-secondary
          x-ms-enum:
            name: instanceFailoverGroupRole
            modelAsString: true
          default: primary
          description: The role of the SQL managed instance in this failover group.
      additionalProperties: {}
      required:
        - role
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: Azure Data Services on Azure Arc operation definition.
      required:
        - name
        - display
        - isDataAction
      properties:
        name:
          description: The name of the operation being performed on this particular object.
          type: string
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: The localized display information for this particular operation / action.
        origin:
          description: The intended executor of the operation.
          enum:
            - user
            - system
          type: string
          readOnly: true
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        properties:
          description: Additional descriptions for the operation.
          type: object
          additionalProperties: {}
          readOnly: true
          x-ms-client-flatten: false
      type: object
    OperationListResult:
      description: Result of the request to list Azure Data Services on Azure Arc operations.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AvailabilityGroupConfigure:
      description: The specifications of the availability group replica configuration
      type: object
      properties:
        endpointUrl:
          type: string
          description: Mirroring endpoint URL of availability group replica
        availabilityModeDescription:
          type: string
          description: The Availability Synchronization mode of the availability group replica.
          readOnly: true
        failoverModeDescription:
          type: string
          description: The failover mode of the availability group replica.
          readOnly: true
        sessionTimeout:
          type: integer
          description: The time-out period of availability group session replica, in seconds.
          format: int32
        primaryRoleAllowConnectionsDescription:
          type: string
          description: Whether the availability allows all connections or only read-write connections.
          readOnly: true
        secondaryRoleAllowConnectionsDescription:
          type: string
          description: Whether an availability replica that is performing the secondary role (that is, a secondary replica) can accept connections from clients.
          readOnly: true
        replicaCreateDate:
          type: string
          description: Date that the replica was created.
          format: date-time
          readOnly: true
        replicaModifyDate:
          type: string
          description: Date that the replica was modified.
          format: date-time
          readOnly: true
        backupPriority:
          type: integer
          description: Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
          format: int32
        readOnlyRoutingUrl:
          type: string
          description: Connectivity endpoint (URL) of the read only availability replica.
        readWriteRoutingUrl:
          type: string
          description: Connectivity endpoint (URL) of the read write availability replica.
        seedingModeDescription:
          type: string
          description: Describes seeding mode.
          readOnly: true
    AvailabilityGroupState:
      description: The specifications of the availability group state
      type: object
      properties:
        availabilityGroupReplicaRole:
          type: string
          description: Current Always On availability groups role of the availability group replica.
          readOnly: true
        operationalStateDescription:
          type: string
          description: Current operational state of the availability group replica
          readOnly: true
        recoveryHealthDescription:
          type: string
          description: Recovery health of the availability group replica.
          readOnly: true
        synchronizationHealthDescription:
          type: string
          description: Reflects a rollup of the database synchronization state (synchronization_state) of all joined availability databases (also known as replicas) and the availability mode of the replica (synchronous-commit or asynchronous-commit mode). The rollup will reflect the least healthy accumulated state the databases on the replica.
          readOnly: true
        connectedStateDescription:
          type: string
          description: Whether a secondary replica is currently connected to the primary replica.
          readOnly: true
        lastConnectErrorDescription:
          type: string
          description: Text description of the last connection error of the availability group replica.
          readOnly: true
        lastConnectErrorTimestamp:
          type: string
          description: Date and time timestamp indicating when the last connect error occurred.
          format: date-time
          readOnly: true
    AvailabilityGroupInfo:
      description: The specifications of the availability group state
      type: object
      properties:
        failureConditionLevel:
          type: integer
          description: User-defined failure condition level under which an automatic failover must be triggered.
          format: int32
        healthCheckTimeout:
          type: integer
          description: Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
          format: int32
        automatedBackupPreferenceDescription:
          type: string
          description: Preferred location for performing backups on the availability databases in this availability group.
          readOnly: true
        version:
          type: integer
          description: SQL Server availability group current version.
          format: int32
          readOnly: true
        basicFeatures:
          type: boolean
          description: Specifies whether this is a basic availability group.
        dtcSupport:
          type: boolean
          description: Specifies whether DTC support has been enabled for this availability group.
        dbFailover:
          type: boolean
          description: Specifies whether the availability group supports failover for database health conditions.
        isDistributed:
          type: boolean
          description: Specifies whether this is a distributed availability group.
        clusterTypeDescription:
          type: string
          description: SQL Server availability group cluster type description
          readOnly: true
        requiredSynchronizedSecondariesToCommit:
          type: integer
          description: The number of secondary replicas that must be in a synchronized state for a commit to complete.
          format: int32
        isContained:
          type: boolean
          description: SQL Server availability group contained system databases.
        primaryReplica:
          type: string
          description: Name of the server instance that is hosting the current primary replica.
          readOnly: true
        primaryRecoveryHealthDescription:
          type: string
          description: Indicates the recovery health of the primary replica.
          readOnly: true
        secondaryRecoveryHealthDescription:
          type: string
          description: Indicates the recovery health of a secondary replica.
          readOnly: true
        synchronizationHealthDescription:
          type: string
          description: Reflects a roll-up of the synchronization health of all availability replicas in the availability group.
          readOnly: true
        replicationPartnerType:
          type: string
          enum:
            - SQLServer
            - AzureSQLVM
            - AzureSQLManagedInstance
            - Unknown
          x-ms-enum:
            name: replicationPartnerType
            modelAsString: false
          readOnly: true
    ArcSqlServerAvailabilityGroupListResult:
      description: A list of Arc Sql Server Availability Groups.
      type: object
      properties:
        value:
          description: Array of Arc Sql Server Availability Groups.
          type: array
          items:
            $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    SqlServerAvailabilityGroupResource:
      description: Arc Sql Server Availability Group
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/SqlServerAvailabilityGroupResourceProperties'
          description: Properties of Arc Sql Server availability group
          x-ms-client-flatten: false
      type: object
    SqlServerAvailabilityGroupResourceProperties:
      type: object
      description: The properties of Arc Sql Server availability group resource
      properties:
        availabilityGroupId:
          type: string
          description: ID GUID of the availability group.
          pattern: ^[A-Za-z0-9]{8}-([A-Za-z0-9]{4}-){3}[A-Za-z0-9]{12}$
          readOnly: true
        serverName:
          type: string
          description: the SQL server name.
          readOnly: true
        instanceName:
          type: string
          description: the SQL Server Instance name.
          readOnly: true
        collectionTimestamp:
          description: Timestamp for when the data was collected from the client machine.
          type: string
          format: date-time
          readOnly: true
        info:
          $ref: '#/components/schemas/AvailabilityGroupInfo'
          description: Availability Group Info
          x-ms-client-flatten: false
        replicas:
          description: A list of Availability Group Replicas.
          type: object
          properties:
            value:
              description: Array of Availability Group Replicas.
              type: array
              items:
                $ref: '#/components/schemas/SqlAvailabilityGroupReplicaResourceProperties'
              x-ms-identifiers: []
            nextLink:
              description: Link to retrieve next page of results.
              type: string
              readOnly: true
        databases:
          description: A list of Availability Group Database Replicas.
          type: object
          properties:
            value:
              description: Array of Availability Group Database Replicas.
              type: array
              items:
                $ref: '#/components/schemas/SqlAvailabilityGroupDatabaseReplicaResourceProperties'
              x-ms-identifiers: []
            nextLink:
              description: Link to retrieve next page of results.
              type: string
              readOnly: true
        provisioningState:
          type: string
          description: The provisioning state of the Arc-enabled SQL Server availability group resource.
          readOnly: true
    SqlServerAvailabilityGroupUpdate:
      description: An update to availability group resource.
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/SqlServerAvailabilityGroupResourceProperties'
          description: The Server Availability Group's properties
          x-ms-client-flatten: false
      type: object
    SqlAvailabilityGroupReplicaResourceProperties:
      type: object
      description: The properties of Arc Sql availability group replica resource
      properties:
        replicaId:
          type: string
          description: ID GUID of the availability group.
          pattern: ^[A-Za-z0-9]{8}-([A-Za-z0-9]{4}-){3}[A-Za-z0-9]{12}$
          readOnly: true
        replicaName:
          type: string
          description: the replica name.
        configure:
          $ref: '#/components/schemas/AvailabilityGroupConfigure'
          description: 'null'
          x-ms-client-flatten: false
        state:
          $ref: '#/components/schemas/AvailabilityGroupState'
          description: 'null'
          x-ms-client-flatten: false
    SqlAvailabilityGroupDatabaseReplicaResourceProperties:
      type: object
      description: The properties of Arc Sql availability group database replica resource
      properties:
        databaseName:
          type: string
          description: the database name.
        replicaName:
          type: string
          description: the database replica name.
          readOnly: true
        isLocal:
          type: boolean
          description: Whether the availability database is local.
          readOnly: true
        isPrimaryReplica:
          type: boolean
          description: Returns 1 if the replica is primary, or 0 if it is a secondary replica.
          readOnly: true
        synchronizationStateDescription:
          type: string
          description: Description of the data-movement state.
          readOnly: true
        isCommitParticipant:
          type: boolean
          description: Whether this replica is transaction committer.
          readOnly: true
        synchronizationHealthDescription:
          type: string
          description: Description of the health of database.
          readOnly: true
        databaseStateDescription:
          type: string
          description: Description of the database state of the availability replica.
          readOnly: true
        isSuspended:
          type: boolean
          description: Whether this data movement is suspended.
          readOnly: true
        suspendReasonDescription:
          type: string
          description: Description of the database suspended state reason.
          readOnly: true
    OperationDisplay:
      description: Display metadata associated with the operation.
      type: object
      properties:
        provider:
          description: The localized friendly form of the resource provider name.
          type: string
        resource:
          description: The localized friendly form of the resource type related to this action/operation.
          type: string
        operation:
          description: The localized friendly name for the operation.
          type: string
        description:
          description: The localized friendly description for the operation.
          type: string
      required:
        - provider
        - resource
        - operation
        - description
    CommonSku:
      description: The resource model definition representing SKU for ARM resources
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU.  It is typically a letter+number code
        dev:
          type: boolean
          default: true
          description: 'Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. '
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    ExtendedLocation:
      type: object
      description: The complex type of the extended location.
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
    ExtendedLocationType:
      type: string
      description: The type of extendedLocation.
      enum:
        - CustomLocation
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    BasicLoginInformation:
      type: object
      description: Username and password for basic login authentication.
      properties:
        username:
          type: string
          description: Login username.
        password:
          type: string
          description: Login password.
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    SqlServerInstance:
      description: A SqlServerInstance.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/SqlServerInstanceProperties'
          description: 'null'
          x-ms-client-flatten: false
      type: object
    SqlServerInstanceProperties:
      description: Properties of SqlServerInstance.
      type: object
      properties:
        version:
          type: string
          description: SQL Server version.
          enum:
            - SQL Server 2012
            - SQL Server 2014
            - SQL Server 2016
            - SQL Server 2017
            - SQL Server 2019
            - SQL Server 2022
            - Unknown
          x-ms-enum:
            name: sqlVersion
            modelAsString: true
        edition:
          type: string
          description: SQL Server edition.
          enum:
            - Evaluation
            - Enterprise
            - Standard
            - Web
            - Developer
            - Express
            - Business Intelligence
          x-ms-enum:
            name: editionType
            modelAsString: true
        containerResourceId:
          type: string
          description: ARM Resource id of the container resource (Azure Arc for Servers).
          readOnly: true
        createTime:
          type: string
          description: The time when the resource was created.
          readOnly: true
        vCore:
          type: string
          description: The number of logical processors used by the SQL Server instance.
          readOnly: true
        cores:
          type: string
          description: The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
        status:
          type: string
          description: The cloud connectivity status.
          readOnly: true
          enum:
            - Connected
            - Disconnected
            - Registered
            - Unknown
          x-ms-enum:
            name: ConnectionStatus
            modelAsString: true
        patchLevel:
          type: string
          description: SQL Server update level.
          readOnly: true
        collation:
          type: string
          description: SQL Server collation.
          readOnly: true
        currentVersion:
          type: string
          description: SQL Server current version.
          readOnly: true
        instanceName:
          type: string
          description: SQL Server instance name.
        tcpDynamicPorts:
          type: string
          description: Dynamic TCP ports used by SQL Server.
          readOnly: true
        tcpStaticPorts:
          type: string
          description: Static TCP ports used by SQL Server.
          readOnly: true
        productId:
          type: string
          description: SQL Server product ID.
          readOnly: true
        licenseType:
          type: string
          description: SQL Server license type.
          readOnly: true
          enum:
            - Undefined
            - Free
            - HADR
            - ServerCAL
            - LicenseOnly
            - PAYG
            - Paid
          x-ms-enum:
            name: arcSqlServerLicenseType
            modelAsString: true
        azureDefenderStatusLastUpdated:
          type: string
          format: date-time
          description: Timestamp of last Azure Defender status update.
          readOnly: true
        azureDefenderStatus:
          type: string
          description: Status of Azure Defender.
          readOnly: true
          enum:
            - Protected
            - Unprotected
            - Unknown
          x-ms-enum:
            name: defenderStatus
            modelAsString: true
        provisioningState:
          type: string
          description: The provisioning state of the Arc-enabled SQL Server resource.
          readOnly: true
        lastInventoryUploadTime:
          type: string
          format: date-time
          description: The time when last successful inventory upload was performed.
          readOnly: true
        lastUsageUploadTime:
          type: string
          format: date-time
          description: The time when last successful usage upload was performed.
          readOnly: true
        hostType:
          type: string
          description: Type of host for Azure Arc SQL Server
          enum:
            - Azure Virtual Machine
            - Azure VMWare Virtual Machine
            - Azure Kubernetes Service
            - AWS VMWare Virtual Machine
            - AWS Kubernetes Service
            - GCP VMWare Virtual Machine
            - GCP Kubernetes Service
            - Container
            - Virtual Machine
            - Physical Server
            - AWS Virtual Machine
            - GCP Virtual Machine
            - Other
          x-ms-enum:
            name: hostType
            modelAsString: true
        alwaysOnRole:
          type: string
          description: The role of the SQL Server, based on availability.
          readOnly: true
          enum:
            - None
            - FailoverClusterInstance
            - FailoverClusterNode
            - AvailabilityGroupReplica
          x-ms-enum:
            name: alwaysOnRole
            modelAsString: true
        failoverCluster:
          description: Failover Cluster Instance properties.
          $ref: '#/components/schemas/FailoverCluster'
        backupPolicy:
          description: The backup profile for the SQL server.
          $ref: '#/components/schemas/BackupPolicy'
        upgradeLockedUntil:
          description: Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
          type: string
          format: date-time
        monitoring:
          description: The monitoring configuration.
          $ref: '#/components/schemas/Monitoring'
    SqlServerInstanceUpdateProperties:
      description: Properties of update SqlServerInstance.
      type: object
      properties:
        version:
          type: string
          description: SQL Server version.
          enum:
            - SQL Server 2012
            - SQL Server 2014
            - SQL Server 2016
            - SQL Server 2017
            - SQL Server 2019
            - SQL Server 2022
            - Unknown
          x-ms-enum:
            name: sqlVersion
            modelAsString: true
        edition:
          type: string
          description: SQL Server edition.
          enum:
            - Evaluation
            - Enterprise
            - Standard
            - Web
            - Developer
            - Express
            - Business Intelligence
          x-ms-enum:
            name: editionType
            modelAsString: true
        containerResourceId:
          type: string
          description: ARM Resource id of the container resource (Azure Arc for Servers).
          readOnly: true
        createTime:
          type: string
          description: The time when the resource was created.
          readOnly: true
        vCore:
          type: string
          description: The number of logical processors used by the SQL Server instance.
          readOnly: true
        cores:
          type: string
          description: The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
        status:
          type: string
          description: The cloud connectivity status.
          readOnly: true
          enum:
            - Connected
            - Disconnected
            - Registered
            - Unknown
          x-ms-enum:
            name: ConnectionStatus
            modelAsString: true
        patchLevel:
          type: string
          description: SQL Server update level.
          readOnly: true
        collation:
          type: string
          description: SQL Server collation.
          readOnly: true
        currentVersion:
          type: string
          description: SQL Server current version.
          readOnly: true
        instanceName:
          type: string
          description: SQL Server instance name.
        tcpDynamicPorts:
          type: string
          description: Dynamic TCP ports used by SQL Server.
          readOnly: true
        tcpStaticPorts:
          type: string
          description: Static TCP ports used by SQL Server.
          readOnly: true
        productId:
          type: string
          description: SQL Server product ID.
          readOnly: true
        licenseType:
          type: string
          description: SQL Server license type.
          readOnly: true
          enum:
            - Undefined
            - Free
            - HADR
            - ServerCAL
            - LicenseOnly
            - PAYG
            - Paid
          x-ms-enum:
            name: arcSqlServerLicenseType
            modelAsString: true
        azureDefenderStatusLastUpdated:
          type: string
          format: date-time
          description: Timestamp of last Azure Defender status update.
          readOnly: true
        azureDefenderStatus:
          type: string
          description: Status of Azure Defender.
          readOnly: true
          enum:
            - Protected
            - Unprotected
            - Unknown
          x-ms-enum:
            name: defenderStatus
            modelAsString: true
        provisioningState:
          type: string
          description: The provisioning state of the Arc-enabled SQL Server resource.
          readOnly: true
        lastInventoryUploadTime:
          type: string
          format: date-time
          description: The time when last successful inventory upload was performed.
          readOnly: true
        lastUsageUploadTime:
          type: string
          format: date-time
          description: The time when last successful usage upload was performed.
          readOnly: true
        hostType:
          type: string
          description: Type of host for Azure Arc SQL Server
          enum:
            - Azure Virtual Machine
            - Azure VMWare Virtual Machine
            - Azure Kubernetes Service
            - AWS VMWare Virtual Machine
            - AWS Kubernetes Service
            - GCP VMWare Virtual Machine
            - GCP Kubernetes Service
            - Container
            - Virtual Machine
            - Physical Server
            - AWS Virtual Machine
            - GCP Virtual Machine
            - Other
          x-ms-enum:
            name: hostType
            modelAsString: true
        alwaysOnRole:
          type: string
          description: The role of the SQL Server, based on availability.
          readOnly: true
          enum:
            - None
            - FailoverClusterInstance
            - FailoverClusterNode
            - AvailabilityGroupReplica
          x-ms-enum:
            name: alwaysOnRole
            modelAsString: true
        failoverCluster:
          description: Failover Cluster Instance properties.
          $ref: '#/components/schemas/FailoverCluster'
        backupPolicy:
          description: The backup profile for the SQL server.
          $ref: '#/components/schemas/BackupPolicy'
        upgradeLockedUntil:
          description: Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
          type: string
          format: date-time
        monitoring:
          description: The monitoring configuration.
          $ref: '#/components/schemas/Monitoring'
    FailoverCluster:
      type: object
      description: Failover Cluster Instance properties.
      properties:
        id:
          type: string
          description: The GUID of the SQL Server's underlying Failover Cluster.
          readOnly: true
        networkName:
          type: string
          description: The network name to connect to the SQL FCI.
          readOnly: true
        sqlInstanceIds:
          type: array
          description: The ARM IDs of the Arc SQL Server resources, belonging to the current server's Failover cluster.
          readOnly: true
          items:
            type: string
        hostNames:
          type: array
          description: The host names which are part of the SQL FCI resource group.
          readOnly: true
          items:
            type: string
    SqlServerInstanceUpdate:
      description: An update to a SQL Server Instance.
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/SqlServerInstanceUpdateProperties'
          description: 'null'
          x-ms-client-flatten: false
      type: object
    SqlServerInstanceListResult:
      description: A list of SqlServerInstance.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/SqlServerInstance'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    Monitoring:
      description: The monitoring configuration.
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates if monitoring is enabled for this SQL Server instance.
    SqlServerInstanceTelemetryRequest:
      description: The Arc SQL Server instance telemetry retrieval request.
      type: object
      properties:
        datasetName:
          type: string
          description: The name of the telemetry dataset to retrieve.
        startTime:
          type: string
          format: date-time
          description: The start time for the time range to fetch telemetry for. If not specified, the current time minus 1 hour is used.
        endTime:
          type: string
          format: date-time
          description: The end time for the time range to fetch telemetry for. If not specified, the current time is used.
        interval:
          type: string
          format: duration
          description: 'The time granularity to fetch telemetry for. This is an ISO8601 duration. Examples: PT15M, PT1H, P1D'
          default: PT1H
        aggregationType:
          type: string
          description: The aggregation type to use for the numerical columns in the dataset.
          enum:
            - Average
            - Minimum
            - Maximum
            - Sum
            - Count
          x-ms-enum:
            name: aggregationType
            modelAsString: true
          default: Average
        databaseNames:
          type: array
          description: The list of database names to return telemetry for. If not specified, telemetry for all databases will be aggregated and returned.
          items:
            type: string
      required:
        - datasetName
    SqlServerInstanceTelemetryColumn:
      description: The telemetry column for the SQL Server instance.
      type: object
      properties:
        name:
          type: string
          description: The name of the telemetry column.
        type:
          type: string
          description: The type of the telemetry column.
          enum:
            - bool
            - datetime
            - int
            - long
            - double
            - string
            - guid
            - timespan
          x-ms-enum:
            name: SqlServerInstanceTelemetryColumnType
            modelAsString: true
    SqlServerInstanceTelemetryRow:
      description: An array of values representing a telemetry row for the SQL Server instance.
      type: array
      items:
        type: string
      x-ms-identifiers: []
    SqlServerInstanceTelemetryResponse:
      description: A section of the telemetry response for the SQL Server instance.
      type: object
      properties:
        columns:
          description: The columns of the result telemetry table for the SQL Server instance.
          type: array
          items:
            $ref: '#/components/schemas/SqlServerInstanceTelemetryColumn'
          x-ms-identifiers:
            - name
        rows:
          description: A list of rows from the result telemetry table for the SQL Server instance.
          type: array
          items:
            $ref: '#/components/schemas/SqlServerInstanceTelemetryRow'
          x-ms-identifiers: []
        nextLink:
          type: string
          description: The link to the next section of rows of the telemetry response for the SQL Server instance. Null if no more sections are available.
          readOnly: true
      required:
        - columns
        - rows
    DataControllerResource:
      description: Data controller resource
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extendedLocation of the resource.
        properties:
          $ref: '#/components/schemas/DataControllerProperties'
          description: The data controller's properties
          x-ms-client-flatten: false
      type: object
    PageOfDataControllerResource:
      type: object
      description: A list of data controllers.
      properties:
        value:
          items:
            $ref: '#/components/schemas/DataControllerResource'
          type: array
          description: Array of results.
        nextLink:
          type: string
          description: Link to retrieve next page of results.
    DataControllerUpdate:
      description: Used for updating a data controller resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          $ref: '#/components/schemas/DataControllerProperties'
          description: The data controller's properties
          x-ms-client-flatten: false
      type: object
    DataControllerProperties:
      description: The data controller properties.
      type: object
      properties:
        infrastructure:
          type: string
          enum:
            - azure
            - gcp
            - aws
            - alibaba
            - onpremises
            - other
          x-ms-enum:
            name: infrastructure
            modelAsString: false
          default: other
          description: The infrastructure the data controller is running on.
        onPremiseProperty:
          $ref: '#/components/schemas/OnPremiseProperty'
        k8sRaw:
          type: object
          description: The raw kubernetes information
        uploadWatermark:
          $ref: '#/components/schemas/UploadWatermark'
        lastUploadedDate:
          type: string
          format: date-time
          description: Last uploaded date from Kubernetes cluster. Defaults to current date time
        basicLoginInformation:
          $ref: '#/components/schemas/BasicLoginInformation'
          description: Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API.
        metricsDashboardCredential:
          $ref: '#/components/schemas/BasicLoginInformation'
          description: Login credential for metrics dashboard on the Kubernetes cluster.
        logsDashboardCredential:
          $ref: '#/components/schemas/BasicLoginInformation'
          description: Login credential for logs dashboard on the Kubernetes cluster.
        logAnalyticsWorkspaceConfig:
          $ref: '#/components/schemas/LogAnalyticsWorkspaceConfig'
        uploadServicePrincipal:
          $ref: '#/components/schemas/UploadServicePrincipal'
          description: Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
        provisioningState:
          type: string
          description: The provisioning state of the Arc Data Controller resource.
          readOnly: true
        clusterId:
          type: string
          description: If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
        extensionId:
          type: string
          description: If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
    UploadWatermark:
      description: Properties on upload watermark.  Mostly timestamp for each upload data type
      type: object
      properties:
        metrics:
          type: string
          format: date-time
          description: Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
        logs:
          type: string
          format: date-time
          description: Last uploaded date for logs from kubernetes cluster. Defaults to current date time
        usages:
          type: string
          format: date-time
          description: Last uploaded date for usages from kubernetes cluster. Defaults to current date time
    OnPremiseProperty:
      description: Properties from the Kubernetes data controller
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: A globally unique ID identifying the associated Kubernetes cluster
        publicSigningKey:
          type: string
          description: Certificate that contains the Kubernetes cluster public key used to verify signing
        signingCertificateThumbprint:
          type: string
          description: Unique thumbprint returned to customer to verify the certificate being uploaded
      required:
        - id
        - publicSigningKey
    LogAnalyticsWorkspaceConfig:
      type: object
      description: Log analytics workspace id and primary key
      properties:
        workspaceId:
          type: string
          format: uuid
          description: Azure Log Analytics workspace ID
        primaryKey:
          type: string
          description: Primary key of the workspace
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    UploadServicePrincipal:
      type: object
      description: Service principal for uploading billing, metrics and logs.
      properties:
        clientId:
          type: string
          format: uuid
          description: Client ID of the service principal for uploading data.
        tenantId:
          type: string
          format: uuid
          description: Tenant ID of the service principal.
        authority:
          type: string
          description: 'Authority for the service principal. Example: https://login.microsoftonline.com/'
        clientSecret:
          type: string
          description: Secret of the service principal
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    ActiveDirectoryConnectorListResult:
      description: A list of active directory connectors
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/ActiveDirectoryConnectorResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    ActiveDirectoryConnectorResource:
      description: Active directory connector resource
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/ActiveDirectoryConnectorProperties'
          description: 'null'
          x-ms-client-flatten: false
      type: object
    ActiveDirectoryConnectorProperties:
      type: object
      description: The properties of an Active Directory connector resource
      properties:
        domainServiceAccountLoginInformation:
          $ref: '#/components/schemas/BasicLoginInformation'
          description: Username and password for domain service account authentication.
        provisioningState:
          type: string
          description: The provisioning state of the Active Directory connector resource.
          readOnly: true
        spec:
          $ref: '#/components/schemas/ActiveDirectoryConnectorSpec'
          description: 'null'
          x-ms-client-flatten: false
        status:
          $ref: '#/components/schemas/ActiveDirectoryConnectorStatus'
          description: 'null'
          x-ms-client-flatten: false
      required:
        - spec
    ActiveDirectoryConnectorSpec:
      description: The specifications of the AD Kubernetes resource.
      type: object
      properties:
        activeDirectory:
          $ref: '#/components/schemas/ActiveDirectoryConnectorDomainDetails'
          description: 'null'
          x-ms-client-flatten: false
        dns:
          $ref: '#/components/schemas/ActiveDirectoryConnectorDNSDetails'
          description: 'null'
          x-ms-client-flatten: false
      required:
        - activeDirectory
        - dns
    ActiveDirectoryConnectorDomainDetails:
      type: object
      description: Active Directory domain details
      properties:
        realm:
          type: string
          description: Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
        netbiosDomainName:
          type: string
          description: NETBIOS name of the Active Directory domain.
        serviceAccountProvisioning:
          type: string
          enum:
            - automatic
            - manual
          x-ms-enum:
            name: accountProvisioningMode
            modelAsString: true
          default: manual
          description: The service account provisioning mode for this Active Directory connector.
        ouDistinguishedName:
          type: string
          description: The distinguished name of the Active Directory Organizational Unit.
        domainControllers:
          $ref: '#/components/schemas/ActiveDirectoryDomainControllers'
          description: 'null'
          x-ms-client-flatten: false
      required:
        - realm
    ActiveDirectoryConnectorDNSDetails:
      type: object
      description: DNS server details
      properties:
        domainName:
          type: string
          description: DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
        nameserverIPAddresses:
          type: array
          description: List of Active Directory DNS server IP addresses.
          items:
            type: string
            minimum: 1
        replicas:
          type: integer
          description: Replica count for DNS proxy service. Default value is 1.
          default: 1
          format: int64
        preferK8sDnsForPtrLookups:
          type: boolean
          description: Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
          default: true
      required:
        - nameserverIPAddresses
    ActiveDirectoryDomainControllers:
      type: object
      description: Details about the Active Directory domain controllers associated with this AD connector instance
      properties:
        primaryDomainController:
          $ref: '#/components/schemas/ActiveDirectoryDomainController'
          description: Information about the Primary Domain Controller (PDC) in the AD domain.
          x-ms-client-flatten: false
        secondaryDomainControllers:
          $ref: '#/components/schemas/ActiveDirectorySecondaryDomainControllers'
          description: 'null'
          x-ms-client-flatten: false
    ActiveDirectoryDomainController:
      type: object
      description: Information about a domain controller in the AD domain.
      properties:
        hostname:
          type: string
          description: Fully-qualified domain name of a domain controller in the AD domain.
      required:
        - hostname
    ActiveDirectorySecondaryDomainControllers:
      type: array
      description: Information about the secondary domain controllers in the AD domain.
      items:
        $ref: '#/components/schemas/ActiveDirectoryDomainController'
        description: List of the fully-qualified domain names of the secondary domain controllers in the AD domain.
        x-ms-client-flatten: false
      x-ms-identifiers:
        - hostname
    ActiveDirectoryConnectorStatus:
      type: object
      description: The status of the Kubernetes custom resource.
      properties:
        lastUpdateTime:
          type: string
          description: The time that the custom resource was last updated.
        observedGeneration:
          type: integer
          format: int64
          description: The version of the replicaSet associated with the AD connector custom resource.
        state:
          type: string
          description: The state of the AD connector custom resource.
      additionalProperties: {}
  x-stackQL-resources:
    sql_server_databases:
      id: azure.azure_arc_data.sql_server_databases
      name: sql_server_databases
      title: sql_server_databases
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1databases~1{databaseName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1databases~1{databaseName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1databases~1{databaseName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1databases~1{databaseName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1databases~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_server_databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_server_databases/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_server_databases/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_server_databases/methods/delete'
    sql_server_availability_groups:
      id: azure.azure_arc_data.sql_server_availability_groups
      name: sql_server_availability_groups
      title: sql_server_availability_groups
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1{availabilityGroupName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1{availabilityGroupName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1{availabilityGroupName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1{availabilityGroupName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        detail_view:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1{availabilityGroupName}~1getDetailView~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        failover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1{availabilityGroupName}~1failover~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        force_failover_allow_data_loss:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1{availabilityGroupName}~1forceFailoverAllowDataLoss~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1availabilityGroups~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_server_availability_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_server_availability_groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_server_availability_groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_server_availability_groups/methods/delete'
    operations:
      id: azure.azure_arc_data.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureArcData~1operations~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    sql_managed_instances:
      id: azure.azure_arc_data.sql_managed_instances
      name: sql_managed_instances
      title: sql_managed_instances
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_managed_instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_managed_instances/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/sql_managed_instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_managed_instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_managed_instances/methods/delete'
    failover_groups:
      id: azure.azure_arc_data.failover_groups
      name: failover_groups
      title: failover_groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1failoverGroups~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1failoverGroups~1{failoverGroupName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1failoverGroups~1{failoverGroupName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlManagedInstances~1{sqlManagedInstanceName}~1failoverGroups~1{failoverGroupName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/failover_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/failover_groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/failover_groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/failover_groups/methods/delete'
    sql_server_instances:
      id: azure.azure_arc_data.sql_server_instances
      name: sql_server_instances
      title: sql_server_instances
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_server_instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_server_instances/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/sql_server_instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_server_instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_server_instances/methods/delete'
    sql_server_instances_telemetry:
      id: azure.azure_arc_data.sql_server_instances_telemetry
      name: sql_server_instances_telemetry
      title: sql_server_instances_telemetry
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1sqlServerInstances~1{sqlServerInstanceName}~1getTelemetry~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_server_instances_telemetry/methods/get'
        insert: []
        update: []
        delete: []
    data_controllers:
      id: azure.azure_arc_data.data_controllers
      name: data_controllers
      title: data_controllers
      methods:
        list_in_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureArcData~1dataControllers~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_in_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put_data_controller:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch_data_controller:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    data_controllers_data_controller:
      id: azure.azure_arc_data.data_controllers_data_controller
      name: data_controllers_data_controller
      title: data_controllers_data_controller
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_controllers_data_controller/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_controllers_data_controller/methods/delete'
    active_directory_connectors:
      id: azure.azure_arc_data.active_directory_connectors
      name: active_directory_connectors
      title: active_directory_connectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1activeDirectoryConnectors~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1activeDirectoryConnectors~1{activeDirectoryConnectorName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1activeDirectoryConnectors~1{activeDirectoryConnectorName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1dataControllers~1{dataControllerName}~1activeDirectoryConnectors~1{activeDirectoryConnectorName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/active_directory_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/active_directory_connectors/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/active_directory_connectors/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/active_directory_connectors/methods/delete'
    postgres_instances:
      id: azure.azure_arc_data.postgres_instances
      name: postgres_instances
      title: postgres_instances
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureArcData~1postgresInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1postgresInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1postgresInstances~1{postgresInstanceName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1postgresInstances~1{postgresInstanceName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1postgresInstances~1{postgresInstanceName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AzureArcData~1postgresInstances~1{postgresInstanceName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/postgres_instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/postgres_instances/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/postgres_instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/postgres_instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/postgres_instances/methods/delete'
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/databases/{databaseName}/?api-version=2024-01-01:
    put:
      tags:
        - SqlServerDatabases
      operationId: SqlServerDatabases_Create
      description: Creates or replaces an Arc Sql Server Database.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/databaseName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The request body for database resource.
        required: true
        x-ms-requestBody-name: sqlServerDatabaseResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerDatabaseResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerDatabaseResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerDatabaseResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SqlServerDatabases
      operationId: SqlServerDatabases_Delete
      description: Deletes an Arc Sql Server database resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/databaseName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '202':
          description: Resource deletion is in progress.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: The specified database does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - SqlServerDatabases
      operationId: SqlServerDatabases_Get
      description: Retrieves an Arc Sql Server database.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/databaseName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerDatabaseResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SqlServerDatabases
      description: Updates an existing database.
      operationId: SqlServerDatabases_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/databaseName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The requested database resource state.
        required: true
        x-ms-requestBody-name: sqlServerDatabaseUpdate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerDatabaseUpdate'
      responses:
        '200':
          description: Successfully updated the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerDatabaseResource'
        '202':
          description: Resource update is in progress.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/databases/?api-version=2024-01-01:
    get:
      tags:
        - SqlServerDatabases
      operationId: SqlServerDatabases_List
      summary: List the databases associated with the given Arc Sql Server.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSqlServerDatabaseListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/availabilityGroups/{availabilityGroupName}/?api-version=2024-01-01:
    put:
      tags:
        - SqlServerAvailabilityGroups
      operationId: SqlServerAvailabilityGroups_Create
      description: Creates or replaces an Arc Sql Server Availability Group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/availabilityGroupName'
      requestBody:
        description: The request body for availability group resource.
        required: true
        x-ms-requestBody-name: sqlServerAvailabilityGroupResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SqlServerAvailabilityGroups
      operationId: SqlServerAvailabilityGroups_Delete
      description: Deletes an Arc Sql Server availability group resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/availabilityGroupName'
      responses:
        '202':
          description: Resource deletion is in progress.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: The specified availability group does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - SqlServerAvailabilityGroups
      operationId: SqlServerAvailabilityGroups_Get
      description: Retrieves an Arc Sql Server availability group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/availabilityGroupName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SqlServerAvailabilityGroups
      description: Updates an existing Availability Group.
      operationId: SqlServerAvailabilityGroups_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/availabilityGroupName'
      requestBody:
        description: The requested server availability group resource state.
        required: true
        x-ms-requestBody-name: sqlServerAvailabilityGroupUpdate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerAvailabilityGroupUpdate'
      responses:
        '200':
          description: Successfully updated the Availability Group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
        '202':
          description: Resource update is in progress.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/availabilityGroups/{availabilityGroupName}/getDetailView/?api-version=2024-01-01:
    post:
      tags:
        - SqlServerAvailabilityGroups
      description: Retrieves detailed properties of the Availability Group.
      operationId: SqlServerAvailabilityGroups_DetailView
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/availabilityGroupName'
      responses:
        '200':
          description: Successfully retrieved the Run-time detailed properties of the Availability Group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/availabilityGroups/{availabilityGroupName}/failover/?api-version=2024-01-01:
    post:
      tags:
        - SqlServerAvailabilityGroups
      description: Request manual failover of the availability group to this server.
      operationId: SqlServerAvailabilityGroups_Failover
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/availabilityGroupName'
      responses:
        '200':
          description: Successfully requested failover of the Availability Group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/availabilityGroups/{availabilityGroupName}/forceFailoverAllowDataLoss/?api-version=2024-01-01:
    post:
      tags:
        - SqlServerAvailabilityGroups
      description: Request forced failover of the availability group to this server.
      operationId: SqlServerAvailabilityGroups_ForceFailoverAllowDataLoss
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/availabilityGroupName'
      responses:
        '200':
          description: Successfully requested forced failover of the Availability Group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerAvailabilityGroupResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/availabilityGroups/?api-version=2024-01-01:
    get:
      tags:
        - SqlServerAvailabilityGroups
      operationId: SqlServerAvailabilityGroups_List
      summary: List the availability group associated with the given Arc Sql Server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSqlServerAvailabilityGroupListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AzureArcData/operations/?api-version=2024-01-01:
    get:
      tags:
        - Operations
      description: Lists all of the available Azure Data Services on Azure Arc API operations.
      operationId: Operations_List
      parameters:
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Successfully retrieved operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureArcData/sqlManagedInstances/?api-version=2024-01-01:
    get:
      tags:
        - SqlManagedInstances
      operationId: SqlManagedInstances_List
      summary: List sqlManagedInstance resources in the subscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlManagedInstanceListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 404 ResourceNotFound - The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlManagedInstances/?api-version=2024-01-01:
    get:
      tags:
        - SqlManagedInstances
      operationId: SqlManagedInstances_ListByResourceGroup
      description: Gets all sqlManagedInstances in a resource group.
      summary: List sqlManagedInstance resources in the resource group
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlManagedInstanceListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlManagedInstances/{sqlManagedInstanceName}/?api-version=2024-01-01:
    get:
      tags:
        - SqlManagedInstances
      operationId: SqlManagedInstances_Get
      description: Retrieves a SQL Managed Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlManagedInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SqlManagedInstances
      operationId: SqlManagedInstances_Create
      description: Creates or replaces a SQL Managed Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The SQL Managed Instance to be created or updated.
        required: true
        x-ms-requestBody-name: sqlManagedInstance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlManagedInstance'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlManagedInstance'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlManagedInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - SqlManagedInstances
      operationId: SqlManagedInstances_Delete
      description: Deletes a SQL Managed Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Successfully deleted the SQL Managed Instance.
        '202':
          description: Resource deletion is in progress.
        '204':
          description: The specified SQL Managed Instance does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - SqlManagedInstances
      operationId: SqlManagedInstances_Update
      description: Updates a SQL Managed Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The SQL Managed Instance.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlManagedInstanceUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlManagedInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlManagedInstances/{sqlManagedInstanceName}/failoverGroups/?api-version=2024-01-01:
    get:
      tags:
        - FailoverGroups
      operationId: FailoverGroups_List
      summary: List the failover groups associated with the given sql managed instance.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverGroupListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 404 ResourceNotFound - The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlManagedInstances/{sqlManagedInstanceName}/failoverGroups/{failoverGroupName}/?api-version=2024-01-01:
    put:
      tags:
        - FailoverGroups
      operationId: FailoverGroups_Create
      description: Creates or replaces a failover group resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/failoverGroupName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: desc
        required: true
        x-ms-requestBody-name: failoverGroupResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverGroupResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverGroupResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverGroupResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - FailoverGroups
      operationId: FailoverGroups_Delete
      description: Deletes a failover group resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/failoverGroupName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Successfully deleted the failover group.
        '202':
          description: Resource deletion is in progress.
        '204':
          description: The specified failover group does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - FailoverGroups
      operationId: FailoverGroups_Get
      description: Retrieves a failover group resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlManagedInstanceName'
        - $ref: '#/components/parameters/failoverGroupName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverGroupResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureArcData/sqlServerInstances/?api-version=2024-01-01:
    get:
      tags:
        - SqlServerInstances
      operationId: SqlServerInstances_List
      summary: List sqlServerInstance resources in the subscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerInstanceListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 404 ResourceNotFound - The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/?api-version=2024-01-01:
    get:
      tags:
        - SqlServerInstances
      operationId: SqlServerInstances_ListByResourceGroup
      description: Gets all sqlServerInstances in a resource group.
      summary: List sqlServerInstance resources in the resource group
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerInstanceListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/?api-version=2024-01-01:
    get:
      tags:
        - SqlServerInstances
      operationId: SqlServerInstances_Get
      description: Retrieves a SQL Server Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SqlServerInstances
      operationId: SqlServerInstances_Create
      description: Creates or replaces a SQL Server Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The SQL Server Instance to be created or updated.
        required: true
        x-ms-requestBody-name: sqlServerInstance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerInstance'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerInstance'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - SqlServerInstances
      operationId: SqlServerInstances_Delete
      description: Deletes a SQL Server Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Successfully deleted the SQL Server Instance.
        '202':
          description: Resource deletion is in progress.
        '204':
          description: The specified SQL Server Instance does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - SqlServerInstances
      operationId: SqlServerInstances_Update
      description: Updates a SQL Server Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The SQL Server Instance.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerInstanceUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerInstance'
        '202':
          description: Resource update is in progress.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/getTelemetry/?api-version=2024-01-01:
    post:
      tags:
        - SqlServerInstances
      operationId: SqlServerInstances_getTelemetry
      description: Retrieves SQL Server instance telemetry
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/sqlServerInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: Contains the parameters to get SQL Server instance telemetry.
        required: true
        x-ms-requestBody-name: sqlServerInstanceTelemetryRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerInstanceTelemetryRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerInstanceTelemetryResponse'
        '202':
          description: Arc SQL Server telemetry retrieval is in progress.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the operation status.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
        operationName: SqlServerInstances_PostInstanceTelemetry
        itemName: rows
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureArcData/dataControllers/?api-version=2024-01-01:
    get:
      tags:
        - DataControllers
      operationId: DataControllers_ListInSubscription
      summary: List dataController resources in the subscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfDataControllerResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/dataControllers/?api-version=2024-01-01:
    get:
      tags:
        - DataControllers
      operationId: DataControllers_ListInGroup
      summary: List dataController resources in the resource group
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfDataControllerResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/dataControllers/{dataControllerName}/?api-version=2024-01-01:
    put:
      tags:
        - DataControllers
      operationId: DataControllers_PutDataController
      description: Creates or replaces a dataController resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: desc
        required: true
        x-ms-requestBody-name: dataControllerResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataControllerResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataControllerResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataControllerResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - DataControllers
      operationId: DataControllers_DeleteDataController
      description: Deletes a dataController resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Successfully deleted the DataController.
        '202':
          description: Resource deletion is in progress.
        '204':
          description: The specified DataController does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - DataControllers
      operationId: DataControllers_GetDataController
      description: Retrieves a dataController resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataControllerResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - DataControllers
      operationId: DataControllers_PatchDataController
      description: Updates a dataController resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The update data controller resource
        required: true
        x-ms-requestBody-name: dataControllerResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataControllerUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataControllerResource'
        '202':
          description: Resource update is in progress.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/dataControllers/{dataControllerName}/activeDirectoryConnectors/?api-version=2024-01-01:
    get:
      tags:
        - ActiveDirectoryConnectors
      operationId: ActiveDirectoryConnectors_List
      summary: List the active directory connectors associated with the given data controller.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryConnectorListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 404 ResourceNotFound - The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/dataControllers/{dataControllerName}/activeDirectoryConnectors/{activeDirectoryConnectorName}/?api-version=2024-01-01:
    put:
      tags:
        - ActiveDirectoryConnectors
      operationId: ActiveDirectoryConnectors_Create
      description: Creates or replaces an Active Directory connector resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/activeDirectoryConnectorName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: desc
        required: true
        x-ms-requestBody-name: activeDirectoryConnectorResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryConnectorResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryConnectorResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryConnectorResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ActiveDirectoryConnectors
      operationId: ActiveDirectoryConnectors_Delete
      description: Deletes an Active Directory connector resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/activeDirectoryConnectorName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Successfully deleted the active directory connector.
        '202':
          description: Resource deletion is in progress.
        '204':
          description: The specified active directory connector does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - ActiveDirectoryConnectors
      operationId: ActiveDirectoryConnectors_Get
      description: Retrieves an Active Directory connector resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/dataControllerName'
        - $ref: '#/components/parameters/activeDirectoryConnectorName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryConnectorResource'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureArcData/postgresInstances/?api-version=2024-01-01:
    get:
      tags:
        - PostgresInstances
      operationId: PostgresInstances_List
      summary: List postgres Instance resources in the subscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresInstanceListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/postgresInstances/?api-version=2024-01-01:
    get:
      tags:
        - PostgresInstances
      operationId: PostgresInstances_ListByResourceGroup
      description: Get a postgres Instances list by Resource group name.
      summary: List postgres Instance resources in the resource group
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresInstanceListResult'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/postgresInstances/{postgresInstanceName}/?api-version=2024-01-01:
    get:
      tags:
        - PostgresInstances
      operationId: PostgresInstances_Get
      description: Retrieves a postgres Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/postgresInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PostgresInstances
      operationId: PostgresInstances_Create
      description: Creates or replaces a postgres Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/postgresInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The postgres instance
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostgresInstance'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresInstance'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - PostgresInstances
      operationId: PostgresInstances_Delete
      description: Deletes a postgres Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/postgresInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Successfully deleted the Postgres Instance.
        '202':
          description: Resource deletion is in progress.
        '204':
          description: The specified Postgres Instance does not exist.
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - PostgresInstances
      operationId: PostgresInstances_Update
      description: Updates a postgres Instance resource
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/postgresInstanceName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The Postgres Instance.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostgresInstanceUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresInstance'
        default:
          description: '*** Error Responses: ***'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
