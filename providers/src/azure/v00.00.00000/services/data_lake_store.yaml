openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Data Lake Storage Gen1
  description: Use the Azure Data Lake Store REST APIs to create and manage Data Lake Store resources through Azure Resource Manager.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the Azure resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AccountNameParameter:
      name: accountName
      in: path
      description: The name of the Data Lake Store account.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      x-ms-azure-resource: true
      description: The resource model definition.
      type: object
    SubResource:
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
      x-ms-azure-resource: true
      description: The resource model definition for a nested resource.
      type: object
    DataLakeStoreAccount:
      description: Data Lake Store account information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        identity:
          readOnly: true
          $ref: '#/components/schemas/EncryptionIdentity'
          description: The Key Vault encryption identity, if any.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataLakeStoreAccountProperties'
          description: The Data Lake Store account properties.
      type: object
    DataLakeStoreAccountBasic:
      description: Basic Data Lake Store account information, returned on list calls.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataLakeStoreAccountPropertiesBasic'
          description: The basic Data Lake Store account properties.
      type: object
    DataLakeStoreAccountProperties:
      description: Data Lake Store account properties information.
      properties:
        accountId:
          readOnly: true
          type: string
          format: uuid
          description: The unique identifier associated with this Data Lake Store account.
        provisioningState:
          readOnly: true
          type: string
          enum:
            - Failed
            - Creating
            - Running
            - Succeeded
            - Patching
            - Suspending
            - Resuming
            - Deleting
            - Deleted
            - Undeleting
            - Canceled
          x-ms-enum:
            name: DataLakeStoreAccountStatus
            modelAsString: false
          description: The provisioning status of the Data Lake Store account.
        state:
          readOnly: true
          type: string
          enum:
            - Active
            - Suspended
          x-ms-enum:
            name: DataLakeStoreAccountState
            modelAsString: false
          description: The state of the Data Lake Store account.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The account creation time.
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: The account last modified time.
        endpoint:
          readOnly: true
          type: string
          description: The full CName endpoint for this account.
        defaultGroup:
          readOnly: true
          type: string
          description: The default owner group for all new folders and files created in the Data Lake Store account.
        encryptionConfig:
          readOnly: true
          $ref: '#/components/schemas/EncryptionConfig'
          description: The Key Vault encryption configuration.
        encryptionState:
          readOnly: true
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EncryptionState
            modelAsString: false
          description: The current state of encryption for this Data Lake Store account.
        encryptionProvisioningState:
          readOnly: true
          type: string
          enum:
            - Creating
            - Succeeded
          x-ms-enum:
            name: EncryptionProvisioningState
            modelAsString: false
          description: The current state of encryption provisioning for this Data Lake Store account.
        firewallRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The list of firewall rules associated with this Data Lake Store account.
        virtualNetworkRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: The list of virtual network rules associated with this Data Lake Store account.
        firewallState:
          readOnly: true
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallState
            modelAsString: false
          description: The current state of the IP address firewall for this Data Lake Store account.
        firewallAllowAzureIps:
          readOnly: true
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallAllowAzureIpsState
            modelAsString: false
          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        trustedIdProviders:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TrustedIdProvider'
          description: The list of trusted identity providers associated with this Data Lake Store account.
        trustedIdProviderState:
          readOnly: true
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: TrustedIdProviderState
            modelAsString: false
          description: The current state of the trusted identity provider feature for this Data Lake Store account.
        newTier:
          readOnly: true
          type: string
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier to use for next month.
        currentTier:
          readOnly: true
          type: string
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier in use for the current month.
      type: object
    DataLakeStoreAccountPropertiesBasic:
      properties:
        accountId:
          readOnly: true
          type: string
          format: uuid
          description: The unique identifier associated with this Data Lake Store account.
        provisioningState:
          readOnly: true
          type: string
          enum:
            - Failed
            - Creating
            - Running
            - Succeeded
            - Patching
            - Suspending
            - Resuming
            - Deleting
            - Deleted
            - Undeleting
            - Canceled
          x-ms-enum:
            name: DataLakeStoreAccountStatus
            modelAsString: false
          description: The provisioning status of the Data Lake Store account.
        state:
          readOnly: true
          type: string
          enum:
            - Active
            - Suspended
          x-ms-enum:
            name: DataLakeStoreAccountState
            modelAsString: false
          description: The state of the Data Lake Store account.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The account creation time.
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: The account last modified time.
        endpoint:
          readOnly: true
          type: string
          description: The full CName endpoint for this account.
      description: The basic account specific properties that are associated with an underlying Data Lake Store account.
      type: object
    DataLakeStoreAccountListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DataLakeStoreAccountBasic'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Store account list information response.
      type: object
    EncryptionIdentity:
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - SystemAssigned
          x-ms-enum:
            name: EncryptionIdentityType
            modelAsString: false
          description: The type of encryption being used. Currently the only supported type is 'SystemAssigned'.
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal identifier associated with the encryption.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant identifier associated with the encryption.
      description: The encryption identity properties.
      type: object
    EncryptionConfig:
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - UserManaged
            - ServiceManaged
          x-ms-enum:
            name: EncryptionConfigType
            modelAsString: false
          description: The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.
        keyVaultMetaInfo:
          $ref: '#/components/schemas/KeyVaultMetaInfo'
          description: The Key Vault information for connecting to user managed encryption keys.
      description: The encryption configuration for the account.
      type: object
    KeyVaultMetaInfo:
      required:
        - keyVaultResourceId
        - encryptionKeyName
        - encryptionKeyVersion
      properties:
        keyVaultResourceId:
          type: string
          description: The resource identifier for the user managed Key Vault being used to encrypt.
        encryptionKeyName:
          type: string
          description: The name of the user managed encryption key.
        encryptionKeyVersion:
          type: string
          description: The version of the user managed encryption key.
      description: Metadata information used by account encryption.
      type: object
    FirewallRule:
      description: Data Lake Store firewall rule information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FirewallRuleProperties'
          description: The firewall rule properties.
      type: object
    FirewallRuleProperties:
      properties:
        startIpAddress:
          readOnly: true
          type: string
          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
        endIpAddress:
          readOnly: true
          type: string
          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
      description: The firewall rule properties.
      type: object
    FirewallRuleListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Store firewall rule list information.
      type: object
    VirtualNetworkRule:
      description: Data Lake Store virtual network rule information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualNetworkRuleProperties'
          description: The virtual network rule properties.
      type: object
    VirtualNetworkRuleProperties:
      properties:
        subnetId:
          readOnly: true
          type: string
          description: The resource identifier for the subnet.
      description: The virtual network rule properties.
      type: object
    VirtualNetworkRuleListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Store virtual network rule list information.
      type: object
    TrustedIdProvider:
      description: Data Lake Store trusted identity provider information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TrustedIdProviderProperties'
          description: The trusted identity provider properties.
      type: object
    TrustedIdProviderProperties:
      properties:
        idProvider:
          readOnly: true
          type: string
          description: The URL of this trusted identity provider.
      description: The trusted identity provider properties.
      type: object
    TrustedIdProviderListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TrustedIdProvider'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Store trusted identity provider list information.
      type: object
    Operation:
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the operation.
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: The display information for the operation.
        origin:
          readOnly: true
          type: string
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
          description: The intended executor of the operation.
      description: An available operation for Data Lake Store.
      type: object
    OperationDisplay:
      properties:
        provider:
          readOnly: true
          type: string
          description: The resource provider of the operation.
        resource:
          readOnly: true
          type: string
          description: The resource type of the operation.
        operation:
          readOnly: true
          type: string
          description: A friendly name of the operation.
        description:
          readOnly: true
          type: string
          description: A friendly description of the operation.
      description: The display information for a particular operation.
      type: object
    OperationListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: The results of the list operation.
          x-ms-identifiers:
            - name
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: The list of available operations for Data Lake Store.
      type: object
    CapabilityInformation:
      properties:
        subscriptionId:
          readOnly: true
          type: string
          format: uuid
          description: The subscription credentials that uniquely identifies the subscription.
        state:
          readOnly: true
          type: string
          enum:
            - Registered
            - Suspended
            - Deleted
            - Unregistered
            - Warned
          x-ms-enum:
            name: SubscriptionState
            modelAsString: true
          description: The subscription state.
        maxAccountCount:
          readOnly: true
          type: integer
          format: int32
          description: The maximum supported number of accounts under this subscription.
        accountCount:
          readOnly: true
          type: integer
          format: int32
          description: The current number of accounts under this subscription.
        migrationState:
          readOnly: true
          type: boolean
          description: The Boolean value of true or false to indicate the maintenance state.
      description: Subscription-level properties and limits for Data Lake Store.
      type: object
    UsageName:
      properties:
        value:
          readOnly: true
          type: string
          description: Gets a string describing the resource name.
        localizedValue:
          readOnly: true
          type: string
          description: Gets a localized string describing the resource name.
      description: The usage names that can be used.
      type: object
    Usage:
      properties:
        unit:
          readOnly: true
          type: string
          description: Gets the unit of measurement.
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountsPerSecond
            - BytesPerSecond
          x-ms-enum:
            name: UsageUnit
            modelAsString: false
        id:
          readOnly: true
          type: string
          description: Resource identifier.
        currentValue:
          readOnly: true
          type: integer
          format: int32
          description: Gets the current count of the allocated resources in the subscription.
        limit:
          readOnly: true
          type: integer
          format: int32
          description: Gets the maximum count of the resources that can be allocated in the subscription.
        name:
          $ref: '#/components/schemas/UsageName'
          readOnly: true
          description: Gets the name of the type of usage.
      description: Describes the Resource Usage.
      type: object
    UsageListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          description: Gets or sets the list of Storage Resource Usages.
      description: The response from the List Usages operation.
      type: object
    NameAvailabilityInformation:
      properties:
        nameAvailable:
          readOnly: true
          type: boolean
          description: The Boolean value of true or false to indicate whether the Data Lake Store account name is available or not.
        reason:
          readOnly: true
          type: string
          description: The reason why the Data Lake Store account name is not available, if nameAvailable is false.
        message:
          readOnly: true
          type: string
          description: The message describing why the Data Lake Store account name is not available, if nameAvailable is false.
      description: Data Lake Store account name availability result information.
      type: object
    CreateDataLakeStoreAccountParameters:
      required:
        - location
      properties:
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
          description: The Key Vault encryption identity, if any.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateDataLakeStoreAccountProperties'
          description: The Data Lake Store account properties to use for creating.
      type: object
    CreateDataLakeStoreAccountProperties:
      properties:
        defaultGroup:
          type: string
          description: The default owner group for all new folders and files created in the Data Lake Store account.
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The Key Vault encryption configuration.
        encryptionState:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EncryptionState
            modelAsString: false
          description: The current state of encryption for this Data Lake Store account.
        firewallRules:
          type: array
          items:
            $ref: '#/components/schemas/CreateFirewallRuleWithAccountParameters'
          description: The list of firewall rules associated with this Data Lake Store account.
          x-ms-identifiers:
            - name
        virtualNetworkRules:
          type: array
          items:
            $ref: '#/components/schemas/CreateVirtualNetworkRuleWithAccountParameters'
          description: The list of virtual network rules associated with this Data Lake Store account.
          x-ms-identifiers:
            - name
        firewallState:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallState
            modelAsString: false
          description: The current state of the IP address firewall for this Data Lake Store account.
        firewallAllowAzureIps:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallAllowAzureIpsState
            modelAsString: false
          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        trustedIdProviders:
          type: array
          items:
            $ref: '#/components/schemas/CreateTrustedIdProviderWithAccountParameters'
          description: The list of trusted identity providers associated with this Data Lake Store account.
          x-ms-identifiers:
            - name
        trustedIdProviderState:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: TrustedIdProviderState
            modelAsString: false
          description: The current state of the trusted identity provider feature for this Data Lake Store account.
        newTier:
          type: string
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier to use for next month.
      type: object
    UpdateDataLakeStoreAccountParameters:
      description: Data Lake Store account information to update.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateDataLakeStoreAccountProperties'
          description: The Data Lake Store account properties to update.
      type: object
    UpdateDataLakeStoreAccountProperties:
      properties:
        defaultGroup:
          type: string
          description: The default owner group for all new folders and files created in the Data Lake Store account.
        encryptionConfig:
          $ref: '#/components/schemas/UpdateEncryptionConfig'
          description: Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key.
        firewallRules:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFirewallRuleWithAccountParameters'
          description: The list of firewall rules associated with this Data Lake Store account.
          x-ms-identifiers:
            - name
        virtualNetworkRules:
          type: array
          items:
            $ref: '#/components/schemas/UpdateVirtualNetworkRuleWithAccountParameters'
          description: The list of virtual network rules associated with this Data Lake Store account.
          x-ms-identifiers:
            - name
        firewallState:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallState
            modelAsString: false
          description: The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.
        firewallAllowAzureIps:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallAllowAzureIpsState
            modelAsString: false
          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        trustedIdProviders:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTrustedIdProviderWithAccountParameters'
          description: The list of trusted identity providers associated with this Data Lake Store account.
          x-ms-identifiers:
            - name
        trustedIdProviderState:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: TrustedIdProviderState
            modelAsString: false
          description: The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled.
        newTier:
          type: string
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier to use for next month.
      description: Data Lake Store account properties information to be updated.
      type: object
    UpdateEncryptionConfig:
      properties:
        keyVaultMetaInfo:
          $ref: '#/components/schemas/UpdateKeyVaultMetaInfo'
          description: The updated Key Vault key to use in user managed key rotation.
      description: The encryption configuration used to update a user managed Key Vault key.
      type: object
    UpdateKeyVaultMetaInfo:
      properties:
        encryptionKeyVersion:
          type: string
          description: The version of the user managed encryption key to update through a key rotation.
      description: The Key Vault update information used for user managed key rotation.
      type: object
    CreateOrUpdateFirewallRuleParameters:
      required:
        - properties
      description: The parameters used to create a new firewall rule.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
          description: The firewall rule properties to use when creating a new firewall rule.
      type: object
    CreateFirewallRuleWithAccountParameters:
      required:
        - name
        - properties
      description: The parameters used to create a new firewall rule while creating a new Data Lake Store account.
      properties:
        name:
          type: string
          description: The unique name of the firewall rule to create.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
          description: The firewall rule properties to use when creating a new firewall rule.
      type: object
    CreateOrUpdateFirewallRuleProperties:
      required:
        - startIpAddress
        - endIpAddress
      properties:
        startIpAddress:
          type: string
          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
        endIpAddress:
          type: string
          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
      description: The firewall rule properties to use when creating a new firewall rule.
      type: object
    UpdateFirewallRuleParameters:
      description: The parameters used to update a firewall rule.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
          description: The firewall rule properties to use when updating a firewall rule.
      type: object
    UpdateFirewallRuleWithAccountParameters:
      required:
        - name
      description: The parameters used to update a firewall rule while updating a Data Lake Store account.
      properties:
        name:
          type: string
          description: The unique name of the firewall rule to update.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
          description: The firewall rule properties to use when updating a firewall rule.
      type: object
    UpdateFirewallRuleProperties:
      properties:
        startIpAddress:
          type: string
          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
        endIpAddress:
          type: string
          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
      description: The firewall rule properties to use when updating a firewall rule.
      type: object
    CreateOrUpdateVirtualNetworkRuleParameters:
      required:
        - properties
      description: The parameters used to create a new virtual network rule.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties'
          description: The virtual network rule properties to use when creating a new virtual network rule.
      type: object
    CreateVirtualNetworkRuleWithAccountParameters:
      required:
        - name
        - properties
      description: The parameters used to create a new virtual network rule while creating a new Data Lake Store account.
      properties:
        name:
          type: string
          description: The unique name of the virtual network rule to create.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties'
          description: The virtual network rule properties to use when creating a new virtual network rule.
      type: object
    CreateOrUpdateVirtualNetworkRuleProperties:
      required:
        - subnetId
      properties:
        subnetId:
          type: string
          description: The resource identifier for the subnet.
      description: The virtual network rule properties to use when creating a new virtual network rule.
      type: object
    UpdateVirtualNetworkRuleParameters:
      description: The parameters used to update a virtual network rule.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateVirtualNetworkRuleProperties'
          description: The virtual network rule properties to use when updating a virtual network rule.
      type: object
    UpdateVirtualNetworkRuleWithAccountParameters:
      required:
        - name
      description: The parameters used to update a virtual network rule while updating a Data Lake Store account.
      properties:
        name:
          type: string
          description: The unique name of the virtual network rule to update.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateVirtualNetworkRuleProperties'
          description: The virtual network rule properties to use when updating a virtual network rule.
      type: object
    UpdateVirtualNetworkRuleProperties:
      properties:
        subnetId:
          type: string
          description: The resource identifier for the subnet.
      description: The virtual network rule properties to use when updating a virtual network rule.
      type: object
    CreateOrUpdateTrustedIdProviderParameters:
      required:
        - properties
      description: The parameters used to create a new trusted identity provider.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderProperties'
          description: The trusted identity provider properties to use when creating a new trusted identity provider.
      type: object
    CreateTrustedIdProviderWithAccountParameters:
      required:
        - name
        - properties
      description: The parameters used to create a new trusted identity provider while creating a new Data Lake Store account.
      properties:
        name:
          type: string
          description: The unique name of the trusted identity provider to create.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderProperties'
          description: The trusted identity provider properties to use when creating a new trusted identity provider.
      type: object
    CreateOrUpdateTrustedIdProviderProperties:
      required:
        - idProvider
      properties:
        idProvider:
          type: string
          description: The URL of this trusted identity provider.
      description: The trusted identity provider properties to use when creating a new trusted identity provider.
      type: object
    UpdateTrustedIdProviderParameters:
      description: The parameters used to update a trusted identity provider.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateTrustedIdProviderProperties'
          description: The trusted identity provider properties to use when updating a trusted identity provider.
      type: object
    UpdateTrustedIdProviderWithAccountParameters:
      required:
        - name
      description: The parameters used to update a trusted identity provider while updating a Data Lake Store account.
      properties:
        name:
          type: string
          description: The unique name of the trusted identity provider to update.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateTrustedIdProviderProperties'
          description: The trusted identity provider properties to use when updating a trusted identity provider.
      type: object
    UpdateTrustedIdProviderProperties:
      properties:
        idProvider:
          type: string
          description: The URL of this trusted identity provider.
      description: The trusted identity provider properties to use when updating a trusted identity provider.
      type: object
    CheckNameAvailabilityParameters:
      required:
        - name
        - type
      properties:
        name:
          type: string
          description: The Data Lake Store name to check availability for.
        type:
          type: string
          enum:
            - Microsoft.DataLakeStore/accounts
          description: 'The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeStore/accounts'
      description: Data Lake Store account name availability check parameters.
      type: object
  x-stackQL-resources:
    accounts:
      id: azure.data_lake_store.accounts
      name: accounts
      title: accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1accounts~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enable_key_vault:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1enableKeyVault~1?api-version=2016-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1locations~1{location}~1checkNameAvailability~1?api-version=2016-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    firewall_rules:
      id: azure.data_lake_store.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    virtual_network_rules:
      id: azure.data_lake_store.virtual_network_rules
      name: virtual_network_rules
      title: virtual_network_rules
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/delete'
    trusted_id_providers:
      id: azure.data_lake_store.trusted_id_providers
      name: trusted_id_providers
      title: trusted_id_providers
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/trusted_id_providers/methods/get'
          - $ref: '#/components/x-stackQL-resources/trusted_id_providers/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/trusted_id_providers/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/trusted_id_providers/methods/delete'
    operations:
      id: azure.data_lake_store.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataLakeStore~1operations~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    locations_capability:
      id: azure.data_lake_store.locations_capability
      name: locations_capability
      title: locations_capability
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1locations~1{location}~1capability~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations_capability/methods/get'
        insert: []
        update: []
        delete: []
    locations_usage:
      id: azure.data_lake_store.locations_usage
      name: locations_usage
      title: locations_usage
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1locations~1{location}~1usages~1?api-version=2016-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations_usage/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts/?api-version=2016-11-01:
    get:
      tags:
        - Accounts
      operationId: Accounts_List
      description: Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: OData filter. Optional.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of items to return. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $skip
          in: query
          description: The number of items to skip over before returning elements. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $select
          in: query
          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
          required: false
          schema:
            type: string
        - name: $count
          in: query
          description: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the list of accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DataLakeStoreAccountBasic'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/?api-version=2016-11-01:
    get:
      tags:
        - Accounts
      operationId: Accounts_ListByResourceGroup
      description: Lists the Data Lake Store accounts within a specific resource group. The response includes a link to the next page of results, if any.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $filter
          in: query
          description: OData filter. Optional.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of items to return. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $skip
          in: query
          description: The number of items to skip over before returning elements. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $select
          in: query
          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
          required: false
          schema:
            type: string
        - name: $count
          in: query
          description: A Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the list of accounts in the specified resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DataLakeStoreAccountBasic'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/?api-version=2016-11-01:
    put:
      tags:
        - Accounts
      operationId: Accounts_Create
      description: Creates the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: Parameters supplied to create the Data Lake Store account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataLakeStoreAccountParameters'
      responses:
        '200':
          description: Successfully created the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
        '201':
          description: Successfully initiated creation of the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
      x-ms-long-running-operation: true
    get:
      tags:
        - Accounts
      operationId: Accounts_Get
      description: Gets the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully retrieved details of the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
    patch:
      tags:
        - Accounts
      operationId: Accounts_Update
      description: Updates the specified Data Lake Store account information.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: Parameters supplied to update the Data Lake Store account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataLakeStoreAccountParameters'
      responses:
        '200':
          description: Successfully updated the account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
        '201':
          description: Successfully initiated the update of the account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
        '202':
          description: Successfully initiated the update of the account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Accounts
      operationId: Accounts_Delete
      description: Deletes the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully deleted the specified account.
        '202':
          description: Successfully initiated the deletion of the specified account.
        '204':
          description: The specified account was not found.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault/?api-version=2016-11-01:
    post:
      tags:
        - Accounts
      operationId: Accounts_EnableKeyVault
      description: Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully enabled the user-managed Key Vault settings used for encrypting this Data Lake Store account.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/?api-version=2016-11-01:
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByAccount
      description: Lists the Data Lake Store firewall rules within the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully retrieved the list of firewall rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}/?api-version=2016-11-01:
    put:
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to create or update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update the firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateFirewallRuleParameters'
      responses:
        '200':
          description: Successfully created or updated the specified firewall rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      description: Gets the specified Data Lake Store firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the firewall rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
    patch:
      tags:
        - FirewallRules
      operationId: FirewallRules_Update
      description: Updates the specified firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update the firewall rule.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleParameters'
      responses:
        '200':
          description: Successfully updated the specified firewall rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
    delete:
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes the specified firewall rule from the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the specified firewall rule.
        '204':
          description: The specified firewall rule does not exist or was already deleted.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/?api-version=2016-11-01:
    get:
      tags:
        - VirtualNetworkRules
      operationId: VirtualNetworkRules_ListByAccount
      description: Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully retrieved the list of virtual network rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRuleListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}/?api-version=2016-11-01:
    put:
      tags:
        - VirtualNetworkRules
      operationId: VirtualNetworkRules_CreateOrUpdate
      description: Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: virtualNetworkRuleName
          in: path
          description: The name of the virtual network rule to create or update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update the virtual network rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleParameters'
      responses:
        '200':
          description: Successfully created or updated the specified virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
    get:
      tags:
        - VirtualNetworkRules
      operationId: VirtualNetworkRules_Get
      description: Gets the specified Data Lake Store virtual network rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: virtualNetworkRuleName
          in: path
          description: The name of the virtual network rule to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
    patch:
      tags:
        - VirtualNetworkRules
      operationId: VirtualNetworkRules_Update
      description: Updates the specified virtual network rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: virtualNetworkRuleName
          in: path
          description: The name of the virtual network rule to update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update the virtual network rule.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVirtualNetworkRuleParameters'
      responses:
        '200':
          description: Successfully updated the specified virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
    delete:
      tags:
        - VirtualNetworkRules
      operationId: VirtualNetworkRules_Delete
      description: Deletes the specified virtual network rule from the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: virtualNetworkRuleName
          in: path
          description: The name of the virtual network rule to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the specified virtual network rule.
        '204':
          description: The specified virtual network rule does not exist or was already deleted.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/?api-version=2016-11-01:
    get:
      tags:
        - TrustedIdProviders
      operationId: TrustedIdProviders_ListByAccount
      description: Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully retrieved the list of trusted identity providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProviderListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}/?api-version=2016-11-01:
    put:
      tags:
        - TrustedIdProviders
      operationId: TrustedIdProviders_CreateOrUpdate
      description: Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: trustedIdProviderName
          in: path
          description: The name of the trusted identity provider. This is used for differentiation of providers in the account.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or replace the trusted identity provider.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderParameters'
      responses:
        '200':
          description: Successfully added the trusted identity provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
    get:
      tags:
        - TrustedIdProviders
      operationId: TrustedIdProviders_Get
      description: Gets the specified Data Lake Store trusted identity provider.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: trustedIdProviderName
          in: path
          description: The name of the trusted identity provider to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved details of the specified trusted identity provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
    patch:
      tags:
        - TrustedIdProviders
      operationId: TrustedIdProviders_Update
      description: Updates the specified trusted identity provider.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: trustedIdProviderName
          in: path
          description: The name of the trusted identity provider. This is used for differentiation of providers in the account.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update the trusted identity provider.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrustedIdProviderParameters'
      responses:
        '200':
          description: Successfully added the trusted identity provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
    delete:
      tags:
        - TrustedIdProviders
      operationId: TrustedIdProviders_Delete
      description: Deletes the specified trusted identity provider from the specified Data Lake Store account
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: trustedIdProviderName
          in: path
          description: The name of the trusted identity provider to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the specified trusted identity provider details.
        '204':
          description: The specified trusted identity provider was not found.
  /providers/Microsoft.DataLakeStore/operations/?api-version=2016-11-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Data Lake Store REST API operations.
      parameters: []
      responses:
        '200':
          description: Successfully listed the available operations for Data Lake Store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability/?api-version=2016-11-01:
    get:
      tags:
        - Locations
      operationId: Locations_GetCapability
      description: Gets subscription-level properties and limits for Data Lake Store specified by resource location.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The resource location without whitespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the subscription-level properties and limits for Data Lake Store specified by resource location.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityInformation'
        '404':
          description: Subscription not found.
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages/?api-version=2016-11-01:
    get:
      tags:
        - LocationUsage
      operationId: Locations_GetUsage
      description: Gets the current usage count and the limit for the resources of the location under the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The resource location without whitespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK -- current usage count and limit retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListResult'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability/?api-version=2016-11-01:
    post:
      tags:
        - Accounts
      operationId: Accounts_CheckNameAvailability
      description: Checks whether the specified account name is available or taken.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The resource location without whitespace.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to check the Data Lake Store account name availability.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: Successfully retrieved the Data Lake Store account name availability information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityInformation'
