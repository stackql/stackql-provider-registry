openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Virtual Desktop
  description: Azure Virtual Desktop is a comprehensive desktop and app virtualization service running in the cloud. It is the only virtual desktop infrastructure (VDI) that delivers simplified management, multi-session Windows 10, optimizations for Microsoft 365 Apps for enterprise. Deploy and scale your Windows desktops and apps on Azure in minutes, and get built-in security and compliance features. The Desktop Virtualization APIs allow you to create and manage your Azure Virtual Desktop environment programmatically.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    HostPoolNameParameter:
      name: hostPoolName
      in: path
      description: The name of the host pool within the specified resource group
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 64
        minLength: 3
        type: string
    MSIXPackageFullNameParameter:
      name: msixPackageFullName
      in: path
      description: The version specific package full name of the MSIX package within specified hostpool
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 100
        minLength: 3
        type: string
    AppAttachPackageNameParameter:
      name: appAttachPackageName
      in: path
      description: The name of the App Attach package arm object
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 100
        minLength: 3
        pattern: ^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$
        type: string
    ApplicationGroupNameParameter:
      name: applicationGroupName
      in: path
      description: The name of the application group
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 64
        minLength: 3
        type: string
    ApplicationNameParameter:
      name: applicationName
      in: path
      description: The name of the application within the specified application group
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 24
        minLength: 3
        type: string
    DesktopNameParameter:
      name: desktopName
      in: path
      description: The name of the desktop within the specified desktop group
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 24
        minLength: 3
        type: string
    WorkspaceNameParameter:
      name: workspaceName
      in: path
      description: The name of the workspace
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 64
        minLength: 3
        type: string
    SessionHostNameParameter:
      name: sessionHostName
      in: path
      description: The name of the session host within the specified host pool
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 48
        minLength: 3
        type: string
    UserSessionIdParameter:
      name: userSessionId
      in: path
      description: The name of the user session within the specified session host
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 24
        minLength: 1
        type: string
    StartMenuItemNameParameter:
      name: startMenuItemName
      in: path
      description: The name of the start menu item within the specified host pool
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 24
        minLength: 3
        type: string
    MSIXImageURIParameter:
      name: msixImageURI
      in: path
      description: URI to the MSIX Image (VHD/CIM).
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 100
        minLength: 3
        type: string
    ScalingPlanNameParameter:
      name: scalingPlanName
      in: path
      description: The name of the scaling plan.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 64
        minLength: 3
        type: string
    ScalingPlanScheduleNameParameter:
      name: scalingPlanScheduleName
      in: path
      description: The name of the ScalingPlanSchedule
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9@.\-_ ]*$
        maxLength: 64
        minLength: 1
        type: string
    vmPathParameter:
      name: vmPath
      in: query
      description: The path to the VM.
      required: false
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Z][a-z][0-9][@./-_ ]*$
        maxLength: 1092
        minLength: 3
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
            nullable: true
            x-nullable: true
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    CloudError:
      description: Cloud error object.
      type: object
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorProperties'
    CloudErrorProperties:
      description: Cloud error object properties.
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
    ResourceProviderOperationList:
      type: object
      description: Result of the request to list operations.
      readOnly: true
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceProviderOperation'
          description: List of operations supported by this resource provider.
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ResourceProviderOperation:
      description: Supported operation of this resource provider.
      readOnly: true
      properties:
        name:
          description: Operation name, in format of {provider}/{resource}/{operation}
          type: string
        display:
          type: object
          description: Display metadata associated with the operation.
          properties:
            provider:
              description: 'Resource provider: Microsoft Desktop Virtualization.'
              type: string
            resource:
              description: Resource on which the operation is performed.
              type: string
            operation:
              description: 'Type of operation: get, read, delete, etc.'
              type: string
            description:
              description: Description of this operation.
              type: string
        isDataAction:
          description: Is a data action.
          type: boolean
        properties:
          $ref: '#/components/schemas/OperationProperties'
      type: object
    OperationProperties:
      description: Properties of the operation
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
    ServiceSpecification:
      description: Service specification payload
      type: object
      properties:
        logSpecifications:
          description: Specifications of the Log for Azure Monitoring
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
    LogSpecification:
      description: Specifications of the Log for Azure Monitoring
      type: object
      properties:
        name:
          description: Name of the log
          type: string
        displayName:
          description: Localized friendly display name of the log
          type: string
        blobDuration:
          description: Blob duration of the log
          type: string
    Workspace:
      description: Represents a Workspace definition.
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        properties:
          description: Detailed properties for Workspace
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkspaceProperties'
      type: object
    WorkspaceProperties:
      description: Schema for Workspace properties.
      type: object
      properties:
        objectId:
          type: string
          description: ObjectId of Workspace. (internal use)
          readOnly: true
        description:
          type: string
          description: Description of Workspace.
        friendlyName:
          type: string
          description: Friendly name of Workspace.
        applicationGroupReferences:
          type: array
          description: List of applicationGroup resource Ids.
          items:
            type: string
          nullable: true
        cloudPcResource:
          type: boolean
          description: Is cloud pc resource.
          readOnly: true
          nullable: true
        publicNetworkAccess:
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          type: string
          description: Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints
          nullable: true
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of private endpoint connection associated with the specified resource
          nullable: true
    WorkspaceList:
      type: object
      title: WorkspaceList
      description: List of Workspace definitions.
      properties:
        value:
          type: array
          description: List of Workspace definitions.
          items:
            $ref: '#/components/schemas/Workspace'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    WorkspacePatch:
      description: Workspace properties that can be patched.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags to be updated
          nullable: true
        properties:
          description: Detailed properties for Workspace
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkspacePatchProperties'
      type: object
    WorkspacePatchProperties:
      description: Workspace properties that can be patched.
      type: object
      properties:
        description:
          type: string
          description: Description of Workspace.
        friendlyName:
          type: string
          description: Friendly name of Workspace.
        applicationGroupReferences:
          type: array
          description: List of applicationGroup links.
          items:
            type: string
          nullable: true
        publicNetworkAccess:
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          type: string
          description: Enabled to allow this resource to be access from the public network
          nullable: true
    ApplicationGroup:
      description: Represents a ApplicationGroup definition.
      required:
        - properties
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        properties:
          description: Detailed properties for ApplicationGroup
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationGroupProperties'
          nullable: false
          x-nullable: false
      type: object
    ApplicationGroupProperties:
      description: Schema for ApplicationGroup properties.
      type: object
      required:
        - hostPoolArmPath
        - applicationGroupType
      properties:
        objectId:
          type: string
          description: ObjectId of ApplicationGroup. (internal use)
          readOnly: true
        description:
          type: string
          description: Description of ApplicationGroup.
        friendlyName:
          type: string
          description: Friendly name of ApplicationGroup.
        hostPoolArmPath:
          type: string
          description: HostPool arm path of ApplicationGroup.
          nullable: false
        workspaceArmPath:
          type: string
          description: Workspace arm path of ApplicationGroup.
          readOnly: true
        applicationGroupType:
          enum:
            - RemoteApp
            - Desktop
          x-ms-enum:
            name: ApplicationGroupType
            modelAsString: true
          type: string
          description: Resource Type of ApplicationGroup.
          nullable: false
        cloudPcResource:
          type: boolean
          description: Is cloud pc resource.
          readOnly: true
          nullable: true
        showInFeed:
          type: boolean
          description: Boolean representing whether the applicationGroup is show in the feed.
    ApplicationGroupPatch:
      description: ApplicationGroup properties that can be patched.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags to be updated
          nullable: true
        properties:
          description: ApplicationGroup properties that can be patched.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationGroupPatchProperties'
      type: object
    ApplicationGroupPatchProperties:
      description: ApplicationGroup properties that can be patched.
      type: object
      properties:
        description:
          type: string
          description: Description of ApplicationGroup.
        friendlyName:
          type: string
          description: Friendly name of ApplicationGroup.
        showInFeed:
          type: boolean
          description: Boolean representing whether the applicationGroup is show in the feed.
    ApplicationGroupList:
      type: object
      title: ApplicationGroupList
      description: List of ApplicationGroup definitions.
      properties:
        value:
          type: array
          description: List of ApplicationGroup definitions.
          items:
            $ref: '#/components/schemas/ApplicationGroup'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    HostPool:
      description: Represents a HostPool definition.
      required:
        - properties
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        properties:
          description: Detailed properties for HostPool
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HostPoolProperties'
          nullable: false
          x-nullable: false
      type: object
    HostPoolProperties:
      description: Properties of HostPool.
      type: object
      required:
        - hostPoolType
        - loadBalancerType
        - preferredAppGroupType
      properties:
        objectId:
          type: string
          description: ObjectId of HostPool. (internal use)
          readOnly: true
        friendlyName:
          type: string
          description: Friendly name of HostPool.
        description:
          type: string
          description: Description of HostPool.
        hostPoolType:
          enum:
            - Personal
            - Pooled
            - BYODesktop
          x-ms-enum:
            name: HostPoolType
            modelAsString: true
            values:
              - value: Personal
                description: Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost.
              - value: Pooled
                description: Users get a new (random) SessionHost every time it connects to the HostPool.
              - value: BYODesktop
                description: Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct.
          type: string
          description: HostPool type for desktop.
          nullable: false
        personalDesktopAssignmentType:
          enum:
            - Automatic
            - Direct
          x-ms-enum:
            name: PersonalDesktopAssignmentType
            modelAsString: true
          type: string
          description: PersonalDesktopAssignment type for HostPool.
          nullable: true
        customRdpProperty:
          type: string
          description: Custom rdp property of HostPool.
        maxSessionLimit:
          type: integer
          format: int32
          description: The max session limit of HostPool.
          nullable: true
        loadBalancerType:
          enum:
            - BreadthFirst
            - DepthFirst
            - Persistent
            - MultiplePersistent
          x-ms-enum:
            name: LoadBalancerType
            modelAsString: true
          type: string
          description: The type of the load balancer.
          nullable: false
        ring:
          type: integer
          format: int32
          description: The ring number of HostPool.
          nullable: true
        validationEnvironment:
          type: boolean
          description: Is validation environment.
          nullable: true
        registrationInfo:
          $ref: '#/components/schemas/RegistrationInfo'
          description: The registration info of HostPool.
          nullable: true
          x-nullable: true
        vmTemplate:
          type: string
          description: VM template for sessionhosts configuration within hostpool.
        managementType:
          enum:
            - Automated
            - Standard
          x-ms-enum:
            name: ManagementType
            modelAsString: true
          type: string
          description: The type of management for this hostpool, Automated or Standard. The default value is Automated.
          nullable: false
        applicationGroupReferences:
          readOnly: true
          type: array
          description: List of applicationGroup links.
          items:
            type: string
          nullable: true
        appAttachPackageReferences:
          readOnly: true
          type: array
          description: List of App Attach Package links.
          items:
            type: string
        ssoadfsAuthority:
          type: string
          description: URL to customer ADFS server for signing WVD SSO certificates.
        ssoClientId:
          type: string
          description: ClientId for the registered Relying Party used to issue WVD SSO certificates.
        ssoClientSecretKeyVaultPath:
          type: string
          description: Path to Azure KeyVault storing the secret used for communication to ADFS.
        ssoSecretType:
          enum:
            - SharedKey
            - Certificate
            - SharedKeyInKeyVault
            - CertificateInKeyVault
          x-ms-enum:
            name: SSOSecretType
            modelAsString: true
          type: string
          description: The type of single sign on Secret Type.
          nullable: true
        preferredAppGroupType:
          enum:
            - None
            - Desktop
            - RailApplications
          x-ms-enum:
            name: PreferredAppGroupType
            modelAsString: true
          type: string
          description: The type of preferred application group type, default to Desktop Application Group
          nullable: false
        startVMOnConnect:
          type: boolean
          description: The flag to turn on/off StartVMOnConnect feature.
          nullable: true
        cloudPcResource:
          type: boolean
          description: Is cloud pc resource.
          readOnly: true
          nullable: true
        publicNetworkAccess:
          enum:
            - Enabled
            - Disabled
            - EnabledForSessionHostsOnly
            - EnabledForClientsOnly
          x-ms-enum:
            name: HostpoolPublicNetworkAccess
            modelAsString: true
          type: string
          description: Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints
          nullable: true
        agentUpdate:
          $ref: '#/components/schemas/AgentUpdateProperties'
          description: The session host configuration for updating agent, monitoring agent, and stack component.
          nullable: true
          x-nullable: true
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of private endpoint connection associated with the specified resource
        managedPrivateUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: ManagedPrivateUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
        directUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: DirectUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
        publicUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
        relayUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: RelayUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
    HostPoolPatch:
      description: HostPool properties that can be patched.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags to be updated
          nullable: true
        properties:
          description: HostPool properties that can be patched.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HostPoolPatchProperties'
      type: object
    HostPoolPatchProperties:
      description: Properties of HostPool.
      type: object
      properties:
        friendlyName:
          type: string
          description: Friendly name of HostPool.
        description:
          type: string
          description: Description of HostPool.
        customRdpProperty:
          type: string
          description: Custom rdp property of HostPool.
        maxSessionLimit:
          type: integer
          format: int32
          description: The max session limit of HostPool.
          nullable: true
        personalDesktopAssignmentType:
          enum:
            - Automatic
            - Direct
          x-ms-enum:
            name: PersonalDesktopAssignmentType
            modelAsString: true
          type: string
          description: PersonalDesktopAssignment type for HostPool.
          nullable: true
        loadBalancerType:
          enum:
            - BreadthFirst
            - DepthFirst
            - Persistent
            - MultiplePersistent
          x-ms-enum:
            name: LoadBalancerType
            modelAsString: true
          type: string
          description: The type of the load balancer.
        ring:
          type: integer
          format: int32
          description: The ring number of HostPool.
          nullable: true
        validationEnvironment:
          type: boolean
          description: Is validation environment.
          nullable: true
        registrationInfo:
          $ref: '#/components/schemas/RegistrationInfoPatch'
          description: The registration info of HostPool.
          nullable: true
          x-nullable: true
        vmTemplate:
          type: string
          description: VM template for sessionhosts configuration within hostpool.
        ssoadfsAuthority:
          type: string
          description: URL to customer ADFS server for signing WVD SSO certificates.
        ssoClientId:
          type: string
          description: ClientId for the registered Relying Party used to issue WVD SSO certificates.
        ssoClientSecretKeyVaultPath:
          type: string
          description: Path to Azure KeyVault storing the secret used for communication to ADFS.
        ssoSecretType:
          enum:
            - SharedKey
            - Certificate
            - SharedKeyInKeyVault
            - CertificateInKeyVault
          x-ms-enum:
            name: SSOSecretType
            modelAsString: true
          type: string
          description: The type of single sign on Secret Type.
          nullable: true
        preferredAppGroupType:
          enum:
            - None
            - Desktop
            - RailApplications
          x-ms-enum:
            name: PreferredAppGroupType
            modelAsString: true
          type: string
          description: The type of preferred application group type, default to Desktop Application Group
        startVMOnConnect:
          type: boolean
          description: The flag to turn on/off StartVMOnConnect feature.
          nullable: true
        publicNetworkAccess:
          enum:
            - Enabled
            - Disabled
            - EnabledForSessionHostsOnly
            - EnabledForClientsOnly
          x-ms-enum:
            name: HostpoolPublicNetworkAccess
            modelAsString: true
          type: string
          description: Enabled to allow this resource to be access from the public network
          nullable: true
        agentUpdate:
          $ref: '#/components/schemas/AgentUpdatePatchProperties'
          description: The session host configuration for updating agent, monitoring agent, and stack component.
        managedPrivateUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: ManagedPrivateUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
        directUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: DirectUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
        publicUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
        relayUDP:
          enum:
            - Default
            - Enabled
            - Disabled
          x-ms-enum:
            name: RelayUDP
            modelAsString: true
          type: string
          description: 'Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections'
          nullable: false
    SessionHostManagementList:
      type: object
      title: SessionHostManagementList
      description: List of SessionHostManagement definitions.
      properties:
        value:
          type: array
          description: List of SessionHostManagement definitions.
          items:
            $ref: '#/components/schemas/SessionHostManagement'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    SessionHostManagement:
      description: Represents a SessionHostManagement definition.
      required:
        - properties
      properties:
        properties:
          description: Detailed properties for SessionHostManagement
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SessionHostManagementProperties'
      type: object
    SessionHostManagementProperties:
      description: Session host Managements of HostPool.
      type: object
      required:
        - scheduledDateTimeZone
        - update
      properties:
        scheduledDateTimeZone:
          type: string
          description: Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid. Must be set if useLocalTime is true.
        update:
          $ref: '#/components/schemas/HostPoolUpdateConfigurationProperties'
          description: Parameters for a hostpool update.
    SessionHostManagementPatch:
      description: Represents a SessionHostManagementPatch definition.
      properties:
        properties:
          description: Detailed properties for SessionHostManagementPatch
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SessionHostManagementPatchProperties'
      type: object
    SessionHostManagementPatchProperties:
      description: Session host Managements of HostPool.
      type: object
      properties:
        scheduledDateTimeZone:
          type: string
          description: Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid. Must be set if useLocalTime is true.
        update:
          $ref: '#/components/schemas/HostPoolUpdateConfigurationPatchProperties'
          description: Parameters for a hostpool update.
    HostPoolUpdateConfigurationProperties:
      description: The configurations of a hostpool update.
      type: object
      required:
        - maxVmsRemoved
        - logOffDelayMinutes
      properties:
        deleteOriginalVm:
          type: boolean
          description: Whether not to save original disk. False by default.
        maxVmsRemoved:
          type: integer
          format: int32
          description: The maximum number of virtual machines to be removed during hostpool update.
          minimum: 1
        logOffDelayMinutes:
          type: integer
          format: int32
          description: Grace period before logging off users in minutes.
        logOffMessage:
          type: string
          description: Log off message sent to user for logoff. Default value is an empty string.
          maxLength: 260
          default: ''
    HostPoolUpdateConfigurationPatchProperties:
      description: The configurations of a hostpool update.
      type: object
      properties:
        deleteOriginalVm:
          type: boolean
          description: Whether not to save original disk. False by default.
        maxVmsRemoved:
          type: integer
          format: int32
          description: The maximum number of virtual machines to be removed during hostpool update.
          minimum: 1
        logOffDelayMinutes:
          type: integer
          format: int32
          description: Grace period before logging off users in minutes.
        logOffMessage:
          type: string
          description: Log off message sent to user for logoff.
          maxLength: 260
    HostPoolUpdateControlParameter:
      description: Represents properties for a hostpool update control request.
      type: object
      required:
        - action
      properties:
        action:
          enum:
            - Start
            - Pause
            - Cancel
            - Retry
            - Resume
          x-ms-enum:
            name: HostPoolUpdateAction
            modelAsString: true
            values:
              - value: Start
                description: Start the hostpool update.
              - value: Pause
                description: Pause the hostpool update.
              - value: Cancel
                description: Cancel the hostpool update.
              - value: Retry
                description: Retry the hostpool update.
              - value: Resume
                description: Resume the hostpool update.
          type: string
          description: Action types for controlling hostpool update.
          nullable: false
        cancelMessage:
          type: string
          description: The cancel message sent to the user on the session host. This is can only be specified if the action is 'Cancel'.
          maxLength: 260
    HostPoolUpdateFault:
      description: Hostpool update fault information.
      type: object
      properties:
        faultType:
          type: string
          description: Hostpool update fault type.
          enum:
            - ServiceError
            - UserError
          x-ms-enum:
            name: faultType
            modelAsString: true
            values:
              - value: ServiceError
                description: Fault caused by service error.
              - value: UserError
                description: Fault caused by user error.
        faultCode:
          type: string
          description: Hostpool update fault code.
        faultText:
          type: string
          description: Hostpool update fault text.
        faultContext:
          type: string
          description: Hostpool update fault context.
    SessionHostManagementUpdateStatus:
      description: The current status of the session host update async operation.
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status. Current defined values are < Error | Scheduled | UpdatingSessionHosts | ValidatingSessionHostUpdate | Paused | Pausing | Cancelling > | Succeeded | Failed | Canceled
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
        properties:
          x-ms-client-flatten: true
          type: object
          description: The custom properties of the SessionHost Update Status.
          $ref: '#/components/schemas/SessionHostManagementUpdateStatusProperties'
      type: object
    SessionHostManagementUpdateStatusProperties:
      description: Properties bag to hold custom RP properties for sessionHostManagement Update Statuses.
      type: object
      properties:
        correlationId:
          type: string
          description: The Log Analytics.
        progress:
          description: Progress information on the sessionHostManagement operation.
          $ref: '#/components/schemas/SessionHostManagementOperationProgress'
        scheduledDateTime:
          format: date-time
          type: string
          description: The timestamp that the update is scheduled for.
        sessionHostManagement:
          description: SessionHostManagement properties used for the operation.
          $ref: '#/components/schemas/SessionHostManagement'
    SessionHostManagementOperationType:
      enum:
        - InitiateSessionHostUpdate
        - ValidateSessionHostUpdate
      type: string
      x-ms-enum:
        name: OperationTypeSHM
        modelAsString: true
    SessionHostManagementOperationProgress:
      type: object
      description: SessionHostManagement Operation Progress information.
      properties:
        executionStartTime:
          format: date-time
          type: string
          description: Time that the sessionHostManagement operation was created.
        totalSessionHosts:
          type: integer
          format: int32
          description: The number of sessionHosts to be started in the sessionHostManagement operation.
        sessionHostsInProgress:
          type: integer
          format: int32
          description: The number of sessionHosts in progress in the sessionHostManagement operation.
        sessionHostsCompleted:
          type: integer
          format: int32
          description: The number of sessionHosts completed in the sessionHostManagement operation.
        sessionHostsRollbackFailed:
          type: integer
          format: int32
          description: The number of sessionHosts rollback failed in the sessionHostManagement operation.
    UpdateSessionHostsRequestBody:
      description: Object containing the definition for properties to be used for a sessionHostUpdate operation.
      type: object
      properties:
        scheduledDateTime:
          type: string
          format: date-time
          description: The timestamp that the update validation is scheduled for. If none is provided, the update will be executed immediately
        scheduledDateTimeZone:
          type: string
          description: The timeZone as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid.
        update:
          description: settings for management information for the hostpool update operation. If none is provided the update will use the settings saved in the sessionHostManagement object.
          $ref: '#/components/schemas/HostPoolUpdateConfigurationPatchProperties'
    SessionHostConfigurationOperationStatus:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status. Current defined values are <UpdateFailed | Paused | Pausing | Cancelling | InProgress | Succeeded | Failed | Canceled>
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/SessionHostConfigurationOperationStatus'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    SessionHostConfigurationOperationStatusList:
      type: object
      title: OperationStatusList
      description: List of OperationStatus definitions.
      properties:
        value:
          type: array
          description: List of OperationStatus definitions.
          items:
            $ref: '#/components/schemas/SessionHostConfigurationOperationStatus'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ActiveSessionHostConfigurationList:
      type: object
      title: ActiveSessionHostConfigurationList
      description: List of ActiveSessionHostConfiguration definitions.
      properties:
        value:
          type: array
          description: List of ActiveSessionHostConfiguration definitions.
          items:
            $ref: '#/components/schemas/ActiveSessionHostConfiguration'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ActiveSessionHostConfiguration:
      description: Represents a ActiveSessionHostConfiguration definition. This has all of the sessionHostConfiguration properties except provisioningState
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for SessionHostConfiguration
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ActiveSessionHostConfigurationProperties'
      type: object
    ActiveSessionHostConfigurationProperties:
      description: Session host configurations of HostPool.
      type: object
      required:
        - vmNamePrefix
        - networkInfo
        - vmSizeId
        - diskInfo
        - imageInfo
        - domainInfo
        - vmAdminCredentials
      properties:
        version:
          format: date-time
          type: string
          description: The timestamp of the last update.
          readOnly: true
        friendlyName:
          type: string
          description: Friendly name to describe this version of the SessionHostConfiguration.
          maxLength: 260
        vmTags:
          type: object
          additionalProperties:
            type: string
          description: Hashtable that lists key/value pair tags to apply to the VMs
        vmLocation:
          type: string
          description: The Location for the session host to be created in. It will default to the location of the hostpool if not provided.
        vmResourceGroup:
          type: string
          description: The ResourceGroup for the session hosts to be created in. It will default to the ResourceGroup of the hostpool if not provided.
        vmNamePrefix:
          type: string
          description: The prefix that should be associated with session host names
          maxLength: 11
        availabilityZones:
          type: array
          items:
            type: integer
            format: int32
          description: Value for availability zones to be used by the session host. Should be from [1,2,3].
        networkInfo:
          $ref: '#/components/schemas/NetworkInfoProperties'
          description: Network information.
        vmSizeId:
          type: string
          description: 'The id of the size of a virtual machine connected to a hostpool. Example: Standard_D2as_v6'
        diskInfo:
          $ref: '#/components/schemas/DiskInfoProperties'
          description: Disk information.
        customConfigurationScriptUrl:
          type: string
          format: uri
          description: The uri to the storage blob containing the arm template to be run on the virtual machine after provisioning.
        imageInfo:
          $ref: '#/components/schemas/ImageInfoProperties'
          description: Image configurations of HostPool.
        domainInfo:
          $ref: '#/components/schemas/DomainInfoProperties'
          description: Domain configurations of session hosts.
        securityInfo:
          $ref: '#/components/schemas/SecurityInfoProperties'
          description: Security information.
        vmAdminCredentials:
          $ref: '#/components/schemas/KeyVaultCredentialsProperties'
          description: Local Admin credentials for session hosts.
        bootDiagnosticsInfo:
          $ref: '#/components/schemas/BootDiagnosticsInfoProperties'
          description: Boot Diagnostics information.
    SessionHostConfigurationList:
      type: object
      title: SessionHostConfigurationList
      description: List of SessionHostConfiguration definitions.
      properties:
        value:
          type: array
          description: List of SessionHostConfiguration definitions.
          items:
            $ref: '#/components/schemas/SessionHostConfiguration'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    SessionHostConfiguration:
      description: Represents a SessionHostConfiguration definition.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for SessionHostConfiguration
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SessionHostConfigurationProperties'
      type: object
    SessionHostConfigurationProperties:
      description: Session host configurations of HostPool.
      type: object
      required:
        - vmNamePrefix
        - networkInfo
        - vmSizeId
        - diskInfo
        - imageInfo
        - domainInfo
        - vmAdminCredentials
      properties:
        version:
          format: date-time
          type: string
          description: The timestamp of the last update.
          readOnly: true
        friendlyName:
          type: string
          description: Friendly name to describe this version of the SessionHostConfiguration.
          maxLength: 260
        provisioningState:
          description: Provisioning state of the Session Host Configuration.
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningStateSHC
            modelAsString: true
        vmTags:
          type: object
          additionalProperties:
            type: string
          description: Hashtable that lists key/value pair tags to apply to the VMs
        vmLocation:
          type: string
          description: The Location for the session host to be created in. It will default to the location of the hostpool if not provided.
        vmResourceGroup:
          type: string
          description: The ResourceGroup for the session hosts to be created in. It will default to the ResourceGroup of the hostpool if not provided.
        vmNamePrefix:
          type: string
          description: The prefix that should be associated with session host names
          maxLength: 11
        availabilityZones:
          type: array
          items:
            type: integer
            format: int32
          description: Value for availability zones to be used by the session host. Should be from [1,2,3].
        networkInfo:
          $ref: '#/components/schemas/NetworkInfoProperties'
          description: Network information.
        vmSizeId:
          type: string
          description: 'The id of the size of a virtual machine connected to a hostpool. Example: Standard_D2as_v6'
        diskInfo:
          $ref: '#/components/schemas/DiskInfoProperties'
          description: Disk information.
        customConfigurationScriptUrl:
          type: string
          format: uri
          description: The uri to the storage blob containing the arm template to be run on the virtual machine after provisioning.
        imageInfo:
          $ref: '#/components/schemas/ImageInfoProperties'
          description: Image configurations of HostPool.
        domainInfo:
          $ref: '#/components/schemas/DomainInfoProperties'
          description: Domain configurations of session hosts.
        securityInfo:
          $ref: '#/components/schemas/SecurityInfoProperties'
          description: Security information.
        vmAdminCredentials:
          $ref: '#/components/schemas/KeyVaultCredentialsProperties'
          description: Local Admin credentials for session hosts.
        bootDiagnosticsInfo:
          $ref: '#/components/schemas/BootDiagnosticsInfoProperties'
          description: Boot Diagnostics information.
    SessionHostConfigurationPatch:
      description: Represents a SessionHostConfigurationPatch definition.
      properties:
        properties:
          description: Detailed properties for SessionHostConfigurationPatch
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SessionHostConfigurationPatchProperties'
      type: object
    SessionHostConfigurationPatchProperties:
      description: Session host configurations of HostPool.
      type: object
      properties:
        friendlyName:
          type: string
          description: Friendly name to describe this version of the SessionHostConfiguration.
          maxLength: 260
        vmTags:
          type: object
          additionalProperties:
            type: string
          description: Hashtable that lists key/value pair tags to apply to the VMs
        vmLocation:
          type: string
          description: The Location for the session host to be created in
        vmResourceGroup:
          type: string
          description: The ResourceGroup for the session hosts to be created in. It will default to the ResourceGroup of the hostpool if not provided.
        vmNamePrefix:
          type: string
          description: The prefix that should be associated with session host names
          maxLength: 11
        availabilityZones:
          type: array
          items:
            type: integer
            format: int32
          description: Value for availability zones to be used by the session host. Should be from [1,2,3].
        networkInfo:
          $ref: '#/components/schemas/NetworkInfoPatchProperties'
          description: Network information.
        vmSizeId:
          type: string
          description: 'The id of the size of a virtual machine connected to a hostpool. Example: Standard_D2as_v6'
        diskInfo:
          $ref: '#/components/schemas/DiskInfoPatchProperties'
          description: Disk information.
        customConfigurationScriptUrl:
          type: string
          format: uri
          description: The uri to the storage blob containing the arm template to be run on the virtual machine after provisioning.
          maxLength: 260
        imageInfo:
          $ref: '#/components/schemas/ImageInfoPatchProperties'
          description: Image configurations of HostPool.
        domainInfo:
          $ref: '#/components/schemas/DomainInfoPatchProperties'
          description: Domain configurations of session hosts.
        securityInfo:
          $ref: '#/components/schemas/SecurityInfoPatchProperties'
          description: Security information.
        vmAdminCredentials:
          $ref: '#/components/schemas/KeyVaultCredentialsPatchProperties'
          description: Local Admin credentials for session hosts.
        bootDiagnosticsInfo:
          $ref: '#/components/schemas/BootDiagnosticsInfoPatchProperties'
          description: Boot Diagnostics information.
    DiskInfoProperties:
      description: Disk information.
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - Standard_LRS
            - Premium_LRS
            - StandardSSD_LRS
          x-ms-enum:
            name: VirtualMachineDiskType
            modelAsString: true
            values:
              - value: Standard_LRS
                description: Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.
              - value: Premium_LRS
                description: Premium SSD locally redundant storage. Best for production and performance sensitive workloads.
              - value: StandardSSD_LRS
                description: Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.
          description: The disk type used by virtual machine in hostpool session host.
    DiskInfoPatchProperties:
      description: Disk information.
      type: object
      properties:
        type:
          type: string
          enum:
            - Standard_LRS
            - Premium_LRS
            - StandardSSD_LRS
          x-ms-enum:
            name: VirtualMachineDiskType
            modelAsString: true
            values:
              - value: Standard_LRS
                description: Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.
              - value: Premium_LRS
                description: Premium SSD locally redundant storage. Best for production and performance sensitive workloads.
              - value: StandardSSD_LRS
                description: Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.
          description: The disk type used by virtual machine in hostpool session host.
    ImageInfoProperties:
      description: Image configurations of session host in a HostPool.
      type: object
      required:
        - type
      properties:
        type:
          x-ms-client-name: imageType
          enum:
            - Marketplace
            - Custom
          x-ms-enum:
            name: type
            modelAsString: true
            values:
              - value: Marketplace
                description: Using default marketplace images offered by Azure Marketplace.
              - value: Custom
                description: Using a custom image.
          type: string
          description: The type of image session hosts use in the hostpool.
          nullable: false
        marketplaceInfo:
          $ref: '#/components/schemas/MarketplaceInfoProperties'
          description: The values to uniquely identify a marketplace image. Only one should be populated based on the image type.
        customInfo:
          $ref: '#/components/schemas/CustomInfoProperties'
          description: The values to uniquely identify a custom image. Only one should be populated based on the image type.
    ImageInfoPatchProperties:
      description: Image configurations of session host in a HostPool.
      type: object
      properties:
        type:
          x-ms-client-name: imageType
          enum:
            - Marketplace
            - Custom
          x-ms-enum:
            name: type
            modelAsString: true
            values:
              - value: Marketplace
                description: Using default marketplace images offered by Azure Marketplace.
              - value: Custom
                description: Using a custom image.
          type: string
          description: The type of image session hosts use in the hostpool.
          nullable: false
        marketplaceInfo:
          $ref: '#/components/schemas/MarketplaceInfoPatchProperties'
          description: The values to uniquely identify a marketplace image. Only one should be populated based on the image type.
        customInfo:
          $ref: '#/components/schemas/CustomInfoPatchProperties'
          description: The values to uniquely identify a custom image. Only one should be populated based on the image type.
    MarketplaceInfoProperties:
      description: Marketplace image information.
      type: object
      required:
        - offer
        - publisher
        - sku
        - exactVersion
      properties:
        offer:
          type: string
          description: The offer of the image.
        publisher:
          type: string
          description: The publisher of the image.
        sku:
          type: string
          description: The sku of the image.
        exactVersion:
          type: string
          description: The exact version of the image.
    MarketplaceInfoPatchProperties:
      description: Marketplace image information.
      type: object
      properties:
        offer:
          type: string
          description: The offer of the image.
        publisher:
          type: string
          description: The publisher of the image.
        sku:
          type: string
          description: The sku of the image.
        exactVersion:
          type: string
          description: The exact version of the image.
    CustomInfoProperties:
      description: Custom image information.
      type: object
      required:
        - resourceId
      properties:
        resourceId:
          type: string
          format: arm-id
          description: The resource id of the custom image.
    CustomInfoPatchProperties:
      description: Custom image information.
      type: object
      properties:
        resourceId:
          type: string
          format: arm-id
          description: The resource id of the custom image.
    DomainInfoProperties:
      description: Domain configurations of session hosts.
      type: object
      required:
        - joinType
      properties:
        joinType:
          enum:
            - ActiveDirectory
            - AzureActiveDirectory
          x-ms-enum:
            name: DomainJoinType
            modelAsString: true
            values:
              - value: ActiveDirectory
                description: Using microsoft active directory.
              - value: AzureActiveDirectory
                description: Using microsoft azure active directory.
          type: string
          description: The type of domain join done by the virtual machine.
          nullable: false
        activeDirectoryInfo:
          $ref: '#/components/schemas/ActiveDirectoryInfoProperties'
          description: Active directory info. Only one should be populated based on the join type.
        azureActiveDirectoryInfo:
          $ref: '#/components/schemas/AzureActiveDirectoryInfoProperties'
          description: Azure active directory info. Only one should be populated based on the join type.
    DomainInfoPatchProperties:
      description: Domain configurations of session hosts.
      type: object
      properties:
        activeDirectoryInfo:
          $ref: '#/components/schemas/ActiveDirectoryInfoPatchProperties'
          description: Active directory info. Only one should be populated based on the join type.
    ActiveDirectoryInfoProperties:
      description: Active directory info. Only one should be populated based on the join type.
      type: object
      required:
        - domainCredentials
        - ouPath
      properties:
        domainCredentials:
          $ref: '#/components/schemas/KeyVaultCredentialsProperties'
          description: Credentials needed to create the virtual machine.
        ouPath:
          type: string
          description: The organizational unit(OU) path.
        domainName:
          type: string
          description: The domain a virtual machine connected to a hostpool will join.
    ActiveDirectoryInfoPatchProperties:
      description: Active directory info. Only one should be populated based on the join type.
      type: object
      properties:
        domainCredentials:
          $ref: '#/components/schemas/KeyVaultCredentialsPatchProperties'
          description: Credentials needed to create the virtual machine.
    AzureActiveDirectoryInfoProperties:
      description: Azure Active directory info. Only one should be populated based on the join type.
      type: object
      required:
        - mdmProviderGuid
      properties:
        mdmProviderGuid:
          type: string
          description: The Mobile Device Management(MDM) guid.
    KeyVaultCredentialsProperties:
      description: Credentials kept in the keyvault.
      type: object
      required:
        - usernameKeyVaultSecretUri
        - passwordKeyVaultSecretUri
      properties:
        usernameKeyVaultSecretUri:
          type: string
          format: uri
          description: The uri to access the secret that the username is stored in.
        passwordKeyVaultSecretUri:
          type: string
          format: uri
          description: The uri to access the secret that the password is stored in.
    KeyVaultCredentialsPatchProperties:
      description: Credentials kept in the keyvault.
      type: object
      properties:
        usernameKeyVaultSecretUri:
          type: string
          format: uri
          description: The uri to access the secret that the username is stored in.
        passwordKeyVaultSecretUri:
          type: string
          format: uri
          description: The uri to access the secret that the password is stored in.
    NetworkInfoProperties:
      description: Network information.
      type: object
      required:
        - subnetId
      properties:
        subnetId:
          type: string
          format: arm-id
          description: The resource ID of the subnet.
        securityGroupId:
          type: string
          description: The resource ID of the security group. Any allowable/open ports should be specified in the Network Security Group(NSG).
    NetworkInfoPatchProperties:
      description: Network information.
      type: object
      properties:
        subnetId:
          type: string
          format: arm-id
          description: The resource ID of the subnet.
        securityGroupId:
          type: string
          description: The resource ID of the security group. Any allowable/open ports should be specified in the Network Security Group(NSG).
    SecurityInfoProperties:
      description: Security information.
      type: object
      properties:
        type:
          type: string
          enum:
            - Standard
            - TrustedLaunch
            - ConfidentialVM
          x-ms-enum:
            name: VirtualMachineSecurityType
            modelAsString: true
            values:
              - value: Standard
                description: Standard security protocol. No additional parameters
              - value: TrustedLaunch
                description: TrustedLaunch allows for secure boot adn vTPM
              - value: ConfidentialVM
                description: Confidential Virtual Machine security protocol
          default: Standard
          description: The security type used by virtual machine in hostpool session host. Default is Standard.
        secureBootEnabled:
          type: boolean
          description: Whether to use secureBoot on the virtual machine.
        vTpmEnabled:
          type: boolean
          description: Whether to use vTPM on the virtual machine.
    SecurityInfoPatchProperties:
      description: Security information.
      type: object
      properties:
        type:
          type: string
          enum:
            - Standard
            - TrustedLaunch
            - ConfidentialVM
          x-ms-enum:
            name: VirtualMachineSecurityType
            modelAsString: true
            values:
              - value: Standard
                description: Standard security protocol. No additional parameters
              - value: TrustedLaunch
                description: TrustedLaunch allows for secure boot adn vTPM
              - value: ConfidentialVM
                description: Confidential Virtual Machine security protocol
          description: The security type used by virtual machine in hostpool session host.
        secureBootEnabled:
          type: boolean
          description: Whether to use secureBoot on the virtual machine.
        vTpmEnabled:
          type: boolean
          description: Whether to use vTPM on the virtual machine.
    BootDiagnosticsInfoProperties:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
        storageUri:
          type: string
          format: uri
          description: Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
          nullable: true
      description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
    BootDiagnosticsInfoPatchProperties:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
        storageUri:
          type: string
          description: Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
      description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
    RegistrationInfo:
      description: Represents a RegistrationInfo definition.
      type: object
      properties:
        expirationTime:
          format: date-time
          type: string
          description: Expiration time of registration token.
          nullable: true
        token:
          type: string
          description: The registration token base64 encoded string.
        registrationTokenOperation:
          enum:
            - Delete
            - None
            - Update
          x-ms-enum:
            name: RegistrationTokenOperation
            modelAsString: true
          type: string
          description: The type of resetting the token.
          nullable: false
    RegistrationInfoPatch:
      description: Represents a RegistrationInfo definition.
      type: object
      properties:
        expirationTime:
          format: date-time
          type: string
          description: Expiration time of registration token.
          nullable: true
        registrationTokenOperation:
          enum:
            - Delete
            - None
            - Update
          x-ms-enum:
            name: RegistrationTokenOperation
            modelAsString: true
          type: string
          description: The type of resetting the token.
    RegistrationTokenList:
      type: object
      title: RegistrationTokenList
      description: List of RegistrationToken definitions.
      properties:
        value:
          type: array
          description: List of RegistrationToken definitions.
          items:
            $ref: '#/components/schemas/RegistrationTokenMinimal'
          x-ms-identifiers: []
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    RegistrationTokenMinimal:
      description: Represents a Minimal set of properties for RegistrationToken definition.
      type: object
      properties:
        expirationTime:
          format: date-time
          type: string
          description: Expiration time of registration token.
          nullable: true
        token:
          type: string
          description: The registration token base64 encoded string.
          x-ms-secret: true
    AgentUpdateProperties:
      description: The session host configuration for updating agent, monitoring agent, and stack component.
      type: object
      properties:
        type:
          type: string
          description: The type of maintenance for session host components.
          enum:
            - Default
            - Scheduled
          x-ms-enum:
            name: SessionHostComponentUpdateType
            modelAsString: true
            values:
              - value: Default
                description: Agent and other agent side components are delivery schedule is controlled by WVD Infra.
              - value: Scheduled
                description: TenantAdmin have opted in for Scheduled Component Update feature.
        useSessionHostLocalTime:
          type: boolean
          description: Whether to use localTime of the virtual machine.
        maintenanceWindowTimeZone:
          type: string
          description: Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true.
        maintenanceWindows:
          type: array
          description: List of maintenance windows. Maintenance windows are 2 hours long.
          items:
            $ref: '#/components/schemas/MaintenanceWindowProperties'
          x-ms-identifiers: []
          nullable: true
    MaintenanceWindowProperties:
      description: Maintenance window starting hour and day of week.
      type: object
      properties:
        hour:
          format: int32
          type: integer
          description: The update start hour of the day. (0 - 23)
        dayOfWeek:
          type: string
          description: Day of the week.
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          x-ms-enum:
            name: DayOfWeek
            modelAsString: false
    AgentUpdatePatchProperties:
      description: The session host configuration for updating agent, monitoring agent, and stack component.
      type: object
      properties:
        type:
          type: string
          description: The type of maintenance for session host components.
          enum:
            - Default
            - Scheduled
          x-ms-enum:
            name: SessionHostComponentUpdateType
            modelAsString: true
            values:
              - value: Default
                description: Agent and other agent side components are delivery schedule is controlled by WVD Infra.
              - value: Scheduled
                description: TenantAdmin have opted in for Scheduled Component Update feature.
        useSessionHostLocalTime:
          type: boolean
          description: Whether to use localTime of the virtual machine.
        maintenanceWindowTimeZone:
          type: string
          description: Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true.
        maintenanceWindows:
          type: array
          description: List of maintenance windows. Maintenance windows are 2 hours long.
          items:
            $ref: '#/components/schemas/MaintenanceWindowPatchProperties'
          x-ms-identifiers: []
          nullable: true
    MaintenanceWindowPatchProperties:
      description: Maintenance window starting hour and day of week.
      type: object
      properties:
        hour:
          format: int32
          type: integer
          description: The update start hour of the day. (0 - 23)
        dayOfWeek:
          type: string
          description: Day of the week.
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          x-ms-enum:
            name: DayOfWeek
            modelAsString: false
    SendMessage:
      description: Represents message sent to a UserSession.
      type: object
      properties:
        messageTitle:
          type: string
          description: Title of message.
        messageBody:
          type: string
          description: Body of message.
    HostPoolList:
      type: object
      title: HostPoolList
      description: List of HostPool definitions.
      properties:
        value:
          type: array
          description: List of HostPool definitions.
          items:
            $ref: '#/components/schemas/HostPool'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    MSIXPackage:
      description: Schema for MSIX Package properties.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for MSIX Package
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MSIXPackageProperties'
          nullable: false
          x-nullable: false
      type: object
    MSIXPackageProperties:
      description: Schema for MSIX Package properties.
      type: object
      properties:
        imagePath:
          type: string
          description: VHD/CIM image path on Network Share.
          nullable: false
        packageName:
          type: string
          description: 'Package Name from appxmanifest.xml. '
          nullable: false
        packageFamilyName:
          type: string
          description: 'Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. '
          nullable: false
        displayName:
          type: string
          description: 'User friendly Name to be displayed in the portal. '
          nullable: true
        packageRelativePath:
          type: string
          description: 'Relative Path to the package inside the image. '
          nullable: false
        isRegularRegistration:
          type: boolean
          description: Specifies how to register Package in feed.
          nullable: false
        isActive:
          type: boolean
          description: 'Make this version of the package the active one across the hostpool. '
          nullable: false
        packageDependencies:
          type: array
          description: 'List of package dependencies. '
          items:
            $ref: '#/components/schemas/MsixPackageDependencies'
        version:
          type: string
          description: 'Package Version found in the appxmanifest.xml. '
          nullable: false
        lastUpdated:
          format: date-time
          type: string
          description: 'Date Package was last updated, found in the appxmanifest.xml. '
          nullable: false
        packageApplications:
          type: array
          description: 'List of package applications. '
          items:
            $ref: '#/components/schemas/MsixPackageApplications'
          nullable: false
    MSIXPackagePatch:
      description: MSIX Package properties that can be patched.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for MSIX Package
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MSIXPackagePatchProperties'
      type: object
    MSIXPackagePatchProperties:
      description: MSIX Package properties that can be patched.
      type: object
      properties:
        isActive:
          type: boolean
          description: 'Set a version of the package to be active across hostpool. '
        isRegularRegistration:
          type: boolean
          description: Set Registration mode. Regular or Delayed.
        displayName:
          type: string
          description: Display name for MSIX Package.
    MsixPackageApplications:
      description: Schema for MSIX Package Application properties.
      type: object
      properties:
        appId:
          type: string
          description: Package Application Id, found in appxmanifest.xml.
          nullable: false
        description:
          type: string
          description: Description of Package Application.
          nullable: false
        appUserModelID:
          type: string
          description: Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.
          nullable: false
        friendlyName:
          type: string
          description: User friendly name.
          nullable: false
        iconImageName:
          type: string
          description: User friendly name.
          nullable: false
        rawIcon:
          type: string
          format: byte
          description: the icon a 64 bit string as a byte array.
        rawPng:
          type: string
          format: byte
          description: the icon a 64 bit string as a byte array.
    MsixPackageDependencies:
      description: Schema for MSIX Package Dependencies properties.
      type: object
      properties:
        dependencyName:
          type: string
          description: Name of the package dependency. For Msix packages, this is the other packages this package depends upon, for APP-V packages this is the locations of the user and deployment config files
          nullable: false
        publisher:
          type: string
          description: Name of dependency publisher.
          nullable: false
        minVersion:
          type: string
          description: Dependency version required.
          nullable: false
    MSIXPackageList:
      type: object
      title: MsixPackageList
      description: List of MSIX Package definitions.
      properties:
        value:
          type: array
          description: List of MSIX Package definitions.
          items:
            $ref: '#/components/schemas/MSIXPackage'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    AppAttachPackage:
      description: Schema for App Attach Package properties.
      x-ms-client-flatten: false
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Detailed properties for App Attach Package
          $ref: '#/components/schemas/AppAttachPackageProperties'
          nullable: false
          x-nullable: false
      type: object
    AppAttachPackagePatch:
      description: Schema for patchable App Attach Package properties.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags to be updated
        properties:
          description: Detailed properties for App Attach Package
          $ref: '#/components/schemas/AppAttachPackagePatchProperties'
          x-ms-client-flatten: false
          nullable: false
          x-nullable: false
      type: object
    AppAttachPackageList:
      type: object
      title: AppAttachPackageList
      description: List of App Attach Package definitions.
      properties:
        value:
          type: array
          description: List of App Attach Package definitions.
          items:
            $ref: '#/components/schemas/AppAttachPackage'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    AppAttachPackageProperties:
      description: Schema for App Attach Package properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the App Attach Package.
        image:
          description: Detailed properties for App Attach Package
          $ref: '#/components/schemas/AppAttachPackageInfoProperties'
          nullable: false
          x-nullable: false
        hostPoolReferences:
          type: array
          description: List of Hostpool resource Ids.
          items:
            type: string
        keyVaultURL:
          type: string
          description: URL of keyvault location to store certificate
        failHealthCheckOnStagingFailure:
          $ref: '#/components/schemas/FailHealthCheckOnStagingFailureEnum'
          description: Parameter indicating how the health check should behave if this package fails staging
        packageOwnerName:
          type: string
          description: Specific name of package owner, is "AppAttach" for native app attach packages
        packageLookbackUrl:
          type: string
          format: uri
          description: Lookback url to third party control plane, is null for native app attach packages
          nullable: true
        customData:
          type: string
          description: Field that can be populated with custom data and filtered on in list GET calls
    AppAttachPackagePatchProperties:
      description: Schema for patchable fields on an App Attach Package.
      type: object
      properties:
        image:
          description: Detailed properties for App Attach Package
          $ref: '#/components/schemas/AppAttachPackageInfoProperties'
        hostPoolReferences:
          type: array
          description: List of Hostpool resource Ids.
          items:
            type: string
            format: arm-id
        keyVaultURL:
          type: string
          description: URL of keyvault location to store certificate
        failHealthCheckOnStagingFailure:
          $ref: '#/components/schemas/FailHealthCheckOnStagingFailureEnum'
          description: Parameter indicating how the health check should behave if this package fails staging
        packageLookbackUrl:
          type: string
          format: uri
          description: Lookback url to third party control plane, should be null for first party packages
        customData:
          type: string
          description: Field that can be populated with custom data and filtered on in list GET calls
    AppAttachPackageInfoProperties:
      description: Schema for Import Package Information properties.
      type: object
      properties:
        packageAlias:
          type: string
          description: Alias of App Attach Package. Assigned at import time
        imagePath:
          type: string
          description: VHD/CIM/APP-V image path on Network Share.
          nullable: false
        packageName:
          type: string
          description: 'Package Name from appxmanifest.xml. '
          nullable: false
        packageFamilyName:
          type: string
          description: 'Identifier not including the package version, for Msix packages it is the family name from the appxmanifest.xml. '
          nullable: false
        packageFullName:
          type: string
          description: 'Identifier including the package version, for Msix packages it is the full name from the appxmanifest.xml. '
          nullable: false
        displayName:
          type: string
          description: 'User friendly Name to be displayed in the portal. '
          nullable: true
        packageRelativePath:
          type: string
          description: 'Relative Path to the package inside the image. '
          nullable: false
        isRegularRegistration:
          type: boolean
          description: Specifies how to register Package in feed.
          nullable: false
        isActive:
          type: boolean
          description: 'Make this version of the package the active one across the hostpool. '
          nullable: false
        packageDependencies:
          type: array
          description: 'List of package dependencies. '
          items:
            $ref: '#/components/schemas/MsixPackageDependencies'
          x-ms-identifiers: []
          nullable: true
        version:
          type: string
          description: 'Package Version found in the appxmanifest.xml. '
          nullable: false
        lastUpdated:
          format: date-time
          type: string
          description: 'Date the package source was last updated, for Msix packages this is found in the appxmanifest.xml. '
          nullable: false
        packageApplications:
          type: array
          description: 'List of package applications. '
          items:
            $ref: '#/components/schemas/MsixPackageApplications'
          x-ms-identifiers: []
          nullable: false
        certificateName:
          type: string
          description: 'Certificate name found in the appxmanifest.xml. '
          nullable: true
        certificateExpiry:
          format: date-time
          type: string
          description: 'Date certificate expires, found in the appxmanifest.xml. '
          nullable: true
        isPackageTimestamped:
          enum:
            - Timestamped
            - NotTimestamped
          x-ms-enum:
            name: packageTimestamped
            modelAsString: true
          type: string
          description: Is package timestamped so it can ignore the certificate expiry date
          nullable: true
    ImportPackageInfoRequest:
      description: Information to import app attach package
      type: object
      properties:
        path:
          type: string
          description: URI to Image
        packageArchitecture:
          enum:
            - ARM
            - ARM64
            - x86
            - x64
            - Neutral
            - x86a64
            - ALL
          x-ms-enum:
            name: AppAttachPackageArchitectures
            modelAsString: true
          type: string
          description: Possible device architectures that an app attach package can be configured for
          nullable: true
    FailHealthCheckOnStagingFailureEnum:
      enum:
        - Unhealthy
        - NeedsAssistance
        - DoNotFail
      x-ms-enum:
        name: failHealthCheckOnStagingFailure
        modelAsString: true
      type: string
      description: Parameter indicating how the health check should behave if this package fails staging
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Provisioning
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    Application:
      description: Schema for Application properties.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for Application
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationProperties'
          nullable: false
          x-nullable: false
      type: object
    ApplicationProperties:
      description: Schema for Application properties.
      type: object
      required:
        - commandLineSetting
      properties:
        objectId:
          type: string
          description: ObjectId of Application. (internal use)
          readOnly: true
        description:
          type: string
          description: Description of Application.
        friendlyName:
          type: string
          description: Friendly name of Application.
        filePath:
          type: string
          description: Specifies a path for the executable file for the application.
        msixPackageFamilyName:
          type: string
          description: Specifies the package family name for MSIX applications
          nullable: true
          x-ms-mutability:
            - create
            - read
        msixPackageApplicationId:
          type: string
          description: Specifies the package application Id for MSIX applications
          nullable: true
          x-ms-mutability:
            - create
            - read
        applicationType:
          enum:
            - InBuilt
            - MsixApplication
          x-ms-enum:
            name: RemoteApplicationType
            modelAsString: true
          type: string
          description: Resource Type of Application.
          x-ms-mutability:
            - create
            - read
        commandLineSetting:
          enum:
            - DoNotAllow
            - Allow
            - Require
          x-ms-enum:
            name: CommandLineSetting
            modelAsString: true
          type: string
          description: Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.
          nullable: false
        commandLineArguments:
          type: string
          description: Command Line Arguments for Application.
        showInPortal:
          type: boolean
          description: Specifies whether to show the RemoteApp program in the RD Web Access server.
        iconPath:
          type: string
          description: Path to icon.
        iconIndex:
          type: integer
          format: int32
          description: Index of the icon.
        iconHash:
          readOnly: true
          type: string
          description: Hash of the icon.
        iconContent:
          readOnly: true
          type: string
          format: byte
          description: the icon a 64 bit string as a byte array.
    ApplicationList:
      type: object
      title: ApplicationList
      description: List of Application definitions.
      properties:
        value:
          type: array
          description: List of Application definitions.
          items:
            $ref: '#/components/schemas/Application'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ApplicationPatch:
      description: Application properties that can be patched.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags to be updated
          nullable: true
        properties:
          description: Detailed properties for Application
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationPatchProperties'
      type: object
    ApplicationPatchProperties:
      description: Application properties that can be patched.
      type: object
      properties:
        description:
          type: string
          description: Description of Application.
        friendlyName:
          type: string
          description: Friendly name of Application.
        filePath:
          type: string
          description: Specifies a path for the executable file for the application.
        commandLineSetting:
          enum:
            - DoNotAllow
            - Allow
            - Require
          x-ms-enum:
            name: CommandLineSetting
            modelAsString: true
          type: string
          description: Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.
        commandLineArguments:
          type: string
          description: Command Line Arguments for Application.
        showInPortal:
          type: boolean
          description: Specifies whether to show the RemoteApp program in the RD Web Access server.
        iconPath:
          type: string
          description: Path to icon.
        iconIndex:
          type: integer
          format: int32
          description: Index of the icon.
        msixPackageFamilyName:
          type: string
          description: Specifies the package family name for MSIX applications
          nullable: true
        msixPackageApplicationId:
          type: string
          description: Specifies the package application Id for MSIX applications
          nullable: true
        applicationType:
          enum:
            - InBuilt
            - MsixApplication
          x-ms-enum:
            name: RemoteApplicationType
            modelAsString: true
          type: string
          description: Resource Type of Application.
    Desktop:
      description: Schema for Desktop properties.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for Desktop
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DesktopProperties'
      type: object
    DesktopProperties:
      description: Schema for Desktop properties.
      type: object
      properties:
        objectId:
          type: string
          description: ObjectId of Desktop. (internal use)
          readOnly: true
        description:
          type: string
          description: Description of Desktop.
        friendlyName:
          type: string
          description: Friendly name of Desktop.
        iconHash:
          readOnly: true
          type: string
          description: Hash of the icon.
        iconContent:
          readOnly: true
          type: string
          format: byte
          description: The icon a 64 bit string as a byte array.
    DesktopList:
      type: object
      title: DesktopList
      description: List of Desktop definitions.
      properties:
        value:
          type: array
          description: List of Desktop definitions.
          items:
            $ref: '#/components/schemas/Desktop'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    DesktopPatch:
      description: Desktop properties that can be patched.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags to be updated
          nullable: true
        properties:
          description: Detailed properties for Desktop
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DesktopPatchProperties'
      type: object
    DesktopPatchProperties:
      description: Desktop properties that can be patched.
      type: object
      properties:
        description:
          type: string
          description: Description of Desktop.
        friendlyName:
          type: string
          description: Friendly name of Desktop.
    StartMenuItemProperties:
      description: Schema for StartMenuItem properties.
      type: object
      properties:
        appAlias:
          type: string
          description: Alias of StartMenuItem.
        filePath:
          type: string
          description: Path to the file of StartMenuItem.
        commandLineArguments:
          type: string
          description: Command line arguments for StartMenuItem.
        iconPath:
          type: string
          description: Path to the icon.
        iconIndex:
          type: integer
          format: int32
          description: Index of the icon.
    StartMenuItem:
      description: Represents a StartMenuItem definition.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for StartMenuItem
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StartMenuItemProperties'
      type: object
    StartMenuItemList:
      type: object
      title: StartMenuItemList
      description: List of StartMenuItem definitions.
      properties:
        value:
          type: array
          description: List of StartMenuItem definitions.
          items:
            $ref: '#/components/schemas/StartMenuItem'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ExpandMsixImageProperties:
      description: Schema for Expand MSIX Image properties.
      type: object
      properties:
        packageAlias:
          type: string
          description: Alias of MSIX Package.
        imagePath:
          type: string
          description: VHD/CIM image path on Network Share.
          nullable: false
        packageName:
          type: string
          description: 'Package Name from appxmanifest.xml. '
          nullable: false
        packageFamilyName:
          type: string
          description: 'Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. '
          nullable: false
        packageFullName:
          type: string
          description: 'Package Full Name from appxmanifest.xml. '
          nullable: false
        displayName:
          type: string
          description: 'User friendly Name to be displayed in the portal. '
          nullable: true
        packageRelativePath:
          type: string
          description: 'Relative Path to the package inside the image. '
          nullable: false
        isRegularRegistration:
          type: boolean
          description: Specifies how to register Package in feed.
          nullable: false
        isActive:
          type: boolean
          description: 'Make this version of the package the active one across the hostpool. '
          nullable: false
        packageDependencies:
          type: array
          description: 'List of package dependencies. '
          items:
            $ref: '#/components/schemas/MsixPackageDependencies'
          nullable: true
        version:
          type: string
          description: 'Package Version found in the appxmanifest.xml. '
          nullable: false
        lastUpdated:
          format: date-time
          type: string
          description: 'Date Package was last updated, found in the appxmanifest.xml. '
          nullable: false
        packageApplications:
          type: array
          description: 'List of package applications. '
          items:
            $ref: '#/components/schemas/MsixPackageApplications'
          nullable: false
        certificateName:
          type: string
          description: 'Certificate name found in the appxmanifest.xml. '
          nullable: true
        certificateExpiry:
          format: date-time
          type: string
          description: 'Date certificate expires, found in the appxmanifest.xml. '
          nullable: true
    ExpandMsixImage:
      description: 'Represents the definition of contents retrieved after expanding the MSIX Image. '
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for ExpandMsixImage
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ExpandMsixImageProperties'
      type: object
    ExpandMsixImageList:
      type: object
      title: ExpandMsixImageList
      description: List of MSIX package properties retrieved from MSIX Image expansion.
      properties:
        value:
          type: array
          description: List of MSIX package properties from give MSIX Image.
          items:
            $ref: '#/components/schemas/ExpandMsixImage'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    MSIXImageURI:
      description: Represents URI referring to MSIX Image
      type: object
      properties:
        uri:
          type: string
          description: URI to Image
    SessionHost:
      description: Represents a SessionHost definition.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for SessionHost
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SessionHostProperties'
      type: object
    SessionHostProperties:
      description: Schema for SessionHost properties.
      type: object
      properties:
        objectId:
          type: string
          description: ObjectId of SessionHost. (internal use)
          readOnly: true
        lastHeartBeat:
          format: date-time
          type: string
          description: Last heart beat from SessionHost.
        sessions:
          type: integer
          format: int32
          description: Number of sessions on SessionHost.
        agentVersion:
          type: string
          description: Version of agent on SessionHost.
        allowNewSession:
          type: boolean
          description: Allow a new session.
        virtualMachineId:
          type: string
          description: Virtual Machine Id of SessionHost's underlying virtual machine.
          readOnly: true
        resourceId:
          type: string
          description: Resource Id of SessionHost's underlying virtual machine.
          readOnly: true
        assignedUser:
          type: string
          description: User assigned to SessionHost.
        friendlyName:
          type: string
          description: Friendly name of SessionHost
        status:
          enum:
            - Available
            - Unavailable
            - Shutdown
            - Disconnected
            - Upgrading
            - UpgradeFailed
            - NoHeartbeat
            - NotJoinedToDomain
            - DomainTrustRelationshipLost
            - SxSStackListenerNotReady
            - FSLogixNotHealthy
            - NeedsAssistance
          x-ms-enum:
            name: Status
            modelAsString: true
            values:
              - value: Available
                description: Session Host has passed all the health checks and is available to handle connections.
              - value: Unavailable
                description: Session Host is either turned off or has failed critical health checks which is causing service not to be able to route connections to this session host. Note this replaces previous 'NoHeartBeat' status.
              - value: Shutdown
                description: Session Host is shutdown - RD Agent reported session host to be stopped or deallocated.
              - value: Disconnected
                description: The Session Host is unavailable because it is currently disconnected.
              - value: Upgrading
                description: 'Session Host is unavailable because currently an upgrade of RDAgent/side-by-side stack is in progress. Note: this state will be removed once the upgrade completes and the host is able to accept connections.'
              - value: UpgradeFailed
                description: Session Host is unavailable because the critical component upgrade (agent, side-by-side stack, etc.) failed.
              - value: NoHeartbeat
                description: The Session Host is not heart beating.
              - value: NotJoinedToDomain
                description: SessionHost is not joined to domain.
              - value: DomainTrustRelationshipLost
                description: SessionHost's domain trust relationship lost
              - value: SxSStackListenerNotReady
                description: SxS stack installed on the SessionHost is not ready to receive connections.
              - value: FSLogixNotHealthy
                description: FSLogix is in an unhealthy state on the session host.
              - value: NeedsAssistance
                description: New status to inform admins that the health on their endpoint needs to be fixed. The connections might not fail, as these issues are not fatal.
          type: string
          description: Status for a SessionHost.
        statusTimestamp:
          format: date-time
          type: string
          description: The timestamp of the status.
          readOnly: true
        osVersion:
          type: string
          description: The version of the OS on the session host.
        sxSStackVersion:
          type: string
          description: The version of the side by side stack on the session host.
        updateState:
          enum:
            - Initial
            - Pending
            - Started
            - Succeeded
            - Failed
          x-ms-enum:
            name: UpdateState
            modelAsString: true
          type: string
          description: Update state of a SessionHost.
        lastUpdateTime:
          format: date-time
          type: string
          description: The timestamp of the last update.
          readOnly: true
        updateErrorMessage:
          type: string
          description: The error message.
        lastSessionHostUpdateTime:
          type: string
          format: date-time
          description: The last time update was completed.
          readOnly: true
        sessionHostConfiguration:
          type: string
          description: 'SessionHostConfiguration version reference at the time the update is initiated, in the format of date time. Example: 2024-04-26T04:56:45Z'
          readOnly: true
        sessionHostHealthCheckResults:
          type: array
          readOnly: true
          description: List of SessionHostHealthCheckReports
          items:
            $ref: '#/components/schemas/SessionHostHealthCheckReport'
    SessionHostHealthCheckReport:
      type: object
      description: The report for session host information.
      properties:
        healthCheckName:
          enum:
            - DomainJoinedCheck
            - DomainTrustCheck
            - FSLogixHealthCheck
            - SxSStackListenerCheck
            - UrlsAccessibleCheck
            - MonitoringAgentCheck
            - DomainReachable
            - WebRTCRedirectorCheck
            - SupportedEncryptionCheck
            - MetaDataServiceCheck
            - AppAttachHealthCheck
          x-ms-enum:
            name: HealthCheckName
            modelAsString: true
            values:
              - value: DomainJoinedCheck
                description: Verifies the SessionHost is joined to a domain. If this check fails is classified as fatal as no connection can succeed if the SessionHost is not joined to the domain. (Currently Enabled)
              - value: DomainTrustCheck
                description: Verifies the SessionHost is not experiencing domain trust issues that will prevent authentication on SessionHost at connection time when session is created. If this check fails is classified as fatal as no connection can succeed if we cannot reach the domain for authentication on the SessionHost. (Currently Enabled)
              - value: FSLogixHealthCheck
                description: Verifies the FSLogix service is up and running to make sure users' profiles are loaded in the session. If this check fails is classified as fatal as even if the connection can succeed, user experience is bad as the user profile cannot be loaded and user will get a temporary profile in the session. (Currently Disabled)
              - value: SxSStackListenerCheck
                description: Verifies that the SxS stack is up and running so connections can succeed. If this check fails is classified as fatal as no connection can succeed if the SxS stack is not ready. (Currently Enabled)
              - value: UrlsAccessibleCheck
                description: 'Verifies that the required WVD service and Geneva URLs are reachable from the SessionHost. These URLs are: RdTokenUri, RdBrokerURI, RdDiagnosticsUri and storage blob URLs for agent monitoring (geneva). If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is unable to store warm path data (logs, operations ...). (Currently Disabled)'
              - value: MonitoringAgentCheck
                description: Verifies that the required Geneva agent is running. If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is missing or running (possibly) older version. (Currently Enabled)
              - value: DomainReachable
                description: Verifies the domain the SessionHost is joined to is still reachable. If this check fails is classified as fatal as no connection can succeed if the domain the SessionHost is joined is not reachable at the time of connection. (Currently Disabled)
              - value: WebRTCRedirectorCheck
                description: Verifies whether the WebRTCRedirector component is healthy. The WebRTCRedirector component is used to optimize video and audio performance in Microsoft Teams. This checks whether the component is still running, and whether there is a higher version available. If this check fails, it is non fatal and the machine still can service connections, main issue may be the WebRTCRedirector component has to be restarted or updated. (Currently Disabled)
              - value: SupportedEncryptionCheck
                description: Verifies the value of SecurityLayer registration key. If the value is 0 (SecurityLayer.RDP) this check fails with Error code = NativeMethodErrorCode.E_FAIL and is fatal. If the value is 1 (SecurityLayer.Negotiate) this check fails with Error code = NativeMethodErrorCode.ERROR_SUCCESS and is non fatal. (Currently Disabled)
              - value: MetaDataServiceCheck
                description: Verifies the metadata service is accessible and return compute properties. (Currently Enabled)
              - value: AppAttachHealthCheck
                description: Verifies that the AppAttachService is healthy (there were no issues during package staging). The AppAttachService is used to enable the staging/registration (and eventual deregistration/destaging) of MSIX apps that have been set up by the tenant admin. This checks whether the component had any failures during package staging. Failures in staging will prevent some MSIX apps from working properly for the end user. If this check fails, it is non fatal and the machine still can service connections, main issue may be certain apps will not work for end-users. (Currently Enabled)
          type: string
          description: Represents the name of the health check operation performed.
          readOnly: true
        healthCheckResult:
          enum:
            - Unknown
            - HealthCheckSucceeded
            - HealthCheckFailed
            - SessionHostShutdown
          x-ms-enum:
            name: HealthCheckResult
            modelAsString: true
            values:
              - value: Unknown
                description: Health check result is not currently known.
              - value: HealthCheckSucceeded
                description: Health check passed.
              - value: HealthCheckFailed
                description: Health check failed.
              - value: SessionHostShutdown
                description: We received a Shutdown notification.
          type: string
          description: Represents the Health state of the health check we performed.
          readOnly: true
        additionalFailureDetails:
          $ref: '#/components/schemas/SessionHostHealthCheckFailureDetails'
          description: Additional detailed information on the failure.
          readOnly: true
    SessionHostHealthCheckFailureDetails:
      type: object
      description: Contains details on the failure.
      properties:
        message:
          type: string
          description: 'Failure message: hints on what is wrong and how to recover.'
          readOnly: true
        errorCode:
          type: integer
          format: int32
          description: Error code corresponding for the failure.
          readOnly: true
        lastHealthCheckDateTime:
          format: date-time
          type: string
          description: The timestamp of the last update.
          readOnly: true
    SessionHostPatch:
      description: SessionHost properties that can be patched.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for SessionHost
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SessionHostPatchProperties'
      type: object
    SessionHostPatchProperties:
      description: SessionHost properties that can be patched.
      type: object
      properties:
        allowNewSession:
          type: boolean
          description: Allow a new session.
        assignedUser:
          type: string
          description: User assigned to SessionHost.
        friendlyName:
          type: string
          description: Friendly name of SessionHost
    SessionHostList:
      type: object
      title: SessionHostList
      description: List of SessionHost definitions.
      properties:
        value:
          type: array
          description: List of SessionHost definitions.
          items:
            $ref: '#/components/schemas/SessionHost'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    UserSession:
      description: Represents a UserSession definition.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for UserSession
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UserSessionProperties'
      type: object
    UserSessionProperties:
      description: Schema for UserSession properties.
      type: object
      properties:
        objectId:
          type: string
          description: ObjectId of user session. (internal use)
          readOnly: true
        userPrincipalName:
          type: string
          description: The user principal name.
        applicationType:
          enum:
            - RemoteApp
            - Desktop
          x-ms-enum:
            name: ApplicationType
            modelAsString: true
          type: string
          description: Application type of application.
        sessionState:
          enum:
            - Unknown
            - Active
            - Disconnected
            - Pending
            - LogOff
            - UserProfileDiskMounted
          x-ms-enum:
            name: SessionState
            modelAsString: true
          type: string
          description: State of user session.
        activeDirectoryUserName:
          type: string
          description: The active directory user name.
        createTime:
          format: date-time
          type: string
          description: The timestamp of the user session create.
    UserSessionList:
      type: object
      title: UserSessionList
      description: List of UserSession definitions.
      properties:
        value:
          type: array
          description: List of UserSession definitions.
          items:
            $ref: '#/components/schemas/UserSession'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ScalingPlan:
      title: ScalingPlan
      description: Represents a scaling plan definition.
      required:
        - properties
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        properties:
          description: Detailed properties for scaling plan.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScalingPlanProperties'
          nullable: false
          x-nullable: false
      type: object
    ScalingPlanProperties:
      type: object
      description: Scaling plan properties.
      required:
        - timeZone
      properties:
        objectId:
          type: string
          description: ObjectId of scaling plan. (internal use)
          readOnly: true
        description:
          type: string
          description: Description of scaling plan.
        friendlyName:
          type: string
          description: User friendly name of scaling plan.
        timeZone:
          type: string
          description: Timezone of the scaling plan.
        hostPoolType:
          enum:
            - Pooled
            - Personal
          x-ms-enum:
            name: ScalingHostPoolType
            modelAsString: true
            values:
              - value: Pooled
                description: Users get a new (random) SessionHost every time it connects to the HostPool.
              - value: Personal
                description: Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost.
          default: Pooled
          type: string
          description: HostPool type for desktop.
          nullable: false
        exclusionTag:
          type: string
          description: Exclusion tag for scaling plan.
        schedules:
          type: array
          description: List of ScalingPlanPooledSchedule definitions.
          items:
            $ref: '#/components/schemas/ScalingSchedule'
        hostPoolReferences:
          type: array
          description: List of ScalingHostPoolReference definitions.
          items:
            $ref: '#/components/schemas/ScalingHostPoolReference'
    ScalingSchedule:
      description: A ScalingPlanPooledSchedule.
      type: object
      properties:
        name:
          type: string
          description: Name of the ScalingPlanPooledSchedule.
        daysOfWeek:
          type: array
          description: Set of days of the week on which this schedule is active.
          items:
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            type: string
        rampUpStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for ramp up period.
        rampUpLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for ramp up period.
        rampUpMinimumHostsPct:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: Minimum host percentage for ramp up period.
        rampUpCapacityThresholdPct:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          description: Capacity threshold for ramp up period.
        peakStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for peak period.
        peakLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for peak period.
        rampDownStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for ramp down period.
        rampDownLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for ramp down period.
        rampDownMinimumHostsPct:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: Minimum host percentage for ramp down period.
        rampDownCapacityThresholdPct:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          description: Capacity threshold for ramp down period.
        rampDownForceLogoffUsers:
          type: boolean
          description: Should users be logged off forcefully from hosts.
        rampDownStopHostsWhen:
          enum:
            - ZeroSessions
            - ZeroActiveSessions
          x-ms-enum:
            name: StopHostsWhen
            modelAsString: true
          type: string
          description: Specifies when to stop hosts during ramp down period.
        rampDownWaitTimeMinutes:
          type: integer
          format: int32
          description: Number of minutes to wait to stop hosts during ramp down period.
        rampDownNotificationMessage:
          type: string
          description: Notification message for users during ramp down period.
        offPeakStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for off-peak period.
        offPeakLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for off-peak period.
    ScalingPlanPooledSchedulePatch:
      description: ScalingPlanPooledSchedule properties that can be patched.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for ScalingPlanPooledSchedule
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScalingPlanPooledScheduleProperties'
      type: object
    ScalingPlanPooledScheduleList:
      type: object
      title: ScalingPlanPooledScheduleList
      description: List of ScalingPlanPooledSchedule definitions.
      properties:
        value:
          type: array
          description: List of ScalingPlanPooledSchedule definitions.
          items:
            $ref: '#/components/schemas/ScalingPlanPooledSchedule'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ScalingPlanPooledSchedule:
      description: Represents a ScalingPlanPooledSchedule definition.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Detailed properties for ScalingPlanPooledSchedule
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScalingPlanPooledScheduleProperties'
          nullable: false
          x-nullable: false
      type: object
    ScalingPlanPooledScheduleProperties:
      description: A ScalingPlanPooledSchedule.
      type: object
      properties:
        daysOfWeek:
          type: array
          description: Set of days of the week on which this schedule is active.
          items:
            enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            type: string
            x-ms-enum:
              name: DayOfWeek
              modelAsString: true
        rampUpStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for ramp up period.
        rampUpLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for ramp up period.
        rampUpMinimumHostsPct:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: Minimum host percentage for ramp up period.
        rampUpCapacityThresholdPct:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          description: Capacity threshold for ramp up period.
        peakStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for peak period.
        peakLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for peak period.
        rampDownStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for ramp down period.
        rampDownLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for ramp down period.
        rampDownMinimumHostsPct:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: Minimum host percentage for ramp down period.
        rampDownCapacityThresholdPct:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          description: Capacity threshold for ramp down period.
        rampDownForceLogoffUsers:
          type: boolean
          description: Should users be logged off forcefully from hosts.
        rampDownStopHostsWhen:
          enum:
            - ZeroSessions
            - ZeroActiveSessions
          x-ms-enum:
            name: StopHostsWhen
            modelAsString: true
          type: string
          description: Specifies when to stop hosts during ramp down period.
        rampDownWaitTimeMinutes:
          type: integer
          format: int32
          description: Number of minutes to wait to stop hosts during ramp down period.
        rampDownNotificationMessage:
          type: string
          description: Notification message for users during ramp down period.
        offPeakStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for off-peak period.
        offPeakLoadBalancingAlgorithm:
          enum:
            - BreadthFirst
            - DepthFirst
          x-ms-enum:
            name: SessionHostLoadBalancingAlgorithm
            modelAsString: true
          type: string
          description: Load balancing algorithm for off-peak period.
    Time:
      description: The time for a scaling action to occur.
      required:
        - hour
        - minute
      type: object
      properties:
        hour:
          format: int32
          description: The hour.
          maximum: 23
          minimum: 0
          type: integer
        minute:
          format: int32
          description: The minute.
          maximum: 59
          minimum: 0
          type: integer
    ScalingHostPoolReference:
      description: Scaling plan reference to hostpool.
      type: object
      properties:
        hostPoolArmPath:
          type: string
          description: Arm path of referenced hostpool.
        scalingPlanEnabled:
          type: boolean
          description: Is the scaling plan enabled for this hostpool.
    ScalingPlanList:
      type: object
      title: ScalingPlanList
      description: List of scaling plan definitions.
      properties:
        value:
          type: array
          description: List of scaling plan definitions.
          items:
            $ref: '#/components/schemas/ScalingPlan'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ScalingPlanPatch:
      description: Scaling plan properties that can be patched.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags to be updated
          nullable: true
        properties:
          description: Detailed properties for scaling plan
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScalingPlanPatchProperties'
      type: object
    ScalingPlanPatchProperties:
      type: object
      description: Scaling plan properties.
      properties:
        description:
          type: string
          description: Description of scaling plan.
        friendlyName:
          type: string
          description: User friendly name of scaling plan.
        timeZone:
          type: string
          description: Timezone of the scaling plan.
        exclusionTag:
          type: string
          description: Exclusion tag for scaling plan.
        schedules:
          type: array
          description: List of ScalingSchedule definitions.
          items:
            $ref: '#/components/schemas/ScalingSchedule'
        hostPoolReferences:
          type: array
          description: List of ScalingHostPoolReference definitions.
          items:
            $ref: '#/components/schemas/ScalingHostPoolReference'
    PrivateEndpointConnectionWithSystemData:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
      type: object
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
      description: A list of private link resources.
    PrivateLinkResource:
      description: A private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResultWithSystemData:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnectionWithSystemData'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
      description: List of private endpoint connection associated with the specified storage account
    ScalingPlanPersonalSchedulePatch:
      description: ScalingPlanPersonalSchedule properties that can be patched.
      properties:
        properties:
          description: Detailed properties for ScalingPlanPersonalSchedule
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScalingPlanPersonalScheduleProperties'
      type: object
    ScalingPlanPersonalScheduleList:
      type: object
      title: ScalingPlanPersonalScheduleList
      description: List of ScalingPlanPersonalSchedule definitions.
      properties:
        value:
          type: array
          description: List of ScalingPlanPersonalSchedule definitions.
          items:
            $ref: '#/components/schemas/ScalingPlanPersonalSchedule'
        nextLink:
          type: string
          readOnly: true
          description: Link to the next page of results.
    ScalingPlanPersonalSchedule:
      description: Represents a ScalingPlanPersonalSchedule definition.
      required:
        - properties
      properties:
        properties:
          description: Detailed properties for ScalingPlanPersonalSchedule
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScalingPlanPersonalScheduleProperties'
          nullable: false
          x-nullable: false
      type: object
    ScalingPlanPersonalScheduleProperties:
      description: A ScalingPlanPersonalSchedule.
      type: object
      properties:
        daysOfWeek:
          type: array
          description: Set of days of the week on which this schedule is active.
          items:
            enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            type: string
            x-ms-enum:
              name: DayOfWeek
              modelAsString: true
        rampUpStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for ramp up period.
        rampUpAutoStartHosts:
          enum:
            - None
            - WithAssignedUser
            - All
          x-ms-enum:
            name: StartupBehavior
            modelAsString: true
            values:
              - value: None
                description: Session hosts will not be started by the service. This setting depends on Start VM on Connect to be enabled to start the session hosts.
              - value: WithAssignedUser
                description: Session hosts with an assigned user will be started during Ramp Up
              - value: All
                description: All personal session hosts in the hostpool will be started during ramp up.
          type: string
          description: The desired startup behavior during the ramp up period for personal vms in the hostpool.
        rampUpStartVMOnConnect:
          enum:
            - Enable
            - Disable
          x-ms-enum:
            name: SetStartVMOnConnect
            modelAsString: true
          default: Enable
          type: string
          description: The desired configuration of Start VM On Connect for the hostpool during the ramp up phase. If this is disabled, session hosts must be turned on using rampUpAutoStartHosts or by turning them on manually.
        rampUpActionOnDisconnect:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a user disconnect during the ramp up period.
        rampUpMinutesToWaitOnDisconnect:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp up period.
        rampUpActionOnLogoff:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a logoff during the ramp up period.
        rampUpMinutesToWaitOnLogoff:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp up period.
        peakStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for peak period.
        peakStartVMOnConnect:
          enum:
            - Enable
            - Disable
          x-ms-enum:
            name: SetStartVMOnConnect
            modelAsString: true
          default: Enable
          type: string
          description: The desired configuration of Start VM On Connect for the hostpool during the peak phase.
        peakActionOnDisconnect:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a user disconnect during the peak period.
        peakMinutesToWaitOnDisconnect:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak period.
        peakActionOnLogoff:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a logoff during the peak period.
        peakMinutesToWaitOnLogoff:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user logs off during the peak period.
        rampDownStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for ramp down period.
        rampDownStartVMOnConnect:
          enum:
            - Enable
            - Disable
          x-ms-enum:
            name: SetStartVMOnConnect
            modelAsString: true
          default: Enable
          type: string
          description: The desired configuration of Start VM On Connect for the hostpool during the ramp down phase.
        rampDownActionOnDisconnect:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a user disconnect during the ramp down period.
        rampDownMinutesToWaitOnDisconnect:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp down period.
        rampDownActionOnLogoff:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a logoff during the ramp down period.
        rampDownMinutesToWaitOnLogoff:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp down period.
        offPeakStartTime:
          $ref: '#/components/schemas/Time'
          description: Starting time for off-peak period.
        offPeakStartVMOnConnect:
          enum:
            - Enable
            - Disable
          x-ms-enum:
            name: SetStartVMOnConnect
            modelAsString: true
          default: Enable
          type: string
          description: The desired configuration of Start VM On Connect for the hostpool during the off-peak phase.
        offPeakActionOnDisconnect:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a user disconnect during the off-peak period.
        offPeakMinutesToWaitOnDisconnect:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak period.
        offPeakActionOnLogoff:
          enum:
            - None
            - Deallocate
            - Hibernate
          x-ms-enum:
            name: SessionHandlingOperation
            modelAsString: true
          type: string
          description: Action to be taken after a logoff during the off-peak period.
        offPeakMinutesToWaitOnLogoff:
          type: integer
          format: int32
          minimum: 0
          description: The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak period.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for private endpoint.
      description: The private endpoint resource.
    PrivateEndpointConnection:
      description: The private endpoint connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        groupIds:
          description: The group ids for the private endpoint resource.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The private endpoint resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the private endpoint connection.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
      description: List of private endpoint connections associated with the specified resource.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
  x-stackQL-resources:
    operations:
      id: azure.desktop_virtualization.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DesktopVirtualization~1operations?api-version=2024-04-08-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceProviderOperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workspaces:
      id: azure.desktop_virtualization.workspaces
      name: workspaces
      title: workspaces
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}?api-version=2024-04-08-preview/get'
            operationId: Workspaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workspace
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}?api-version=2024-04-08-preview/put'
            operationId: Workspaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workspace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}?api-version=2024-04-08-preview/delete'
            operationId: Workspaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}?api-version=2024-04-08-preview/patch'
            operationId: Workspaces_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workspace
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces?api-version=2024-04-08-preview/get'
            operationId: Workspaces_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceList
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DesktopVirtualization~1workspaces?api-version=2024-04-08-preview/get'
            operationId: Workspaces_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete'
    private_endpoint_connections:
      id: azure.desktop_virtualization.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}~1privateEndpointConnections?api-version=2024-04-08-preview/get'
            operationId: PrivateEndpointConnections_ListByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResultWithSystemData
            objectKey: $.value
        get_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-08-preview/get'
            operationId: PrivateEndpointConnections_GetByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionWithSystemData
        delete_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-08-preview/delete'
            operationId: PrivateEndpointConnections_DeleteByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-08-preview/put'
            operationId: PrivateEndpointConnections_UpdateByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionWithSystemData
        list_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1privateEndpointConnections?api-version=2024-04-08-preview/get'
            operationId: PrivateEndpointConnections_ListByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResultWithSystemData
            objectKey: $.value
        get_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-08-preview/get'
            operationId: PrivateEndpointConnections_GetByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionWithSystemData
        delete_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-08-preview/delete'
            operationId: PrivateEndpointConnections_DeleteByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-08-preview/put'
            operationId: PrivateEndpointConnections_UpdateByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionWithSystemData
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get_by_workspace'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get_by_host_pool'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_workspace'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_host_pool'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete_by_workspace'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete_by_host_pool'
    private_link_resources:
      id: azure.desktop_virtualization.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1workspaces~1{workspaceName}~1privateLinkResources?api-version=2024-04-08-preview/get'
            operationId: PrivateLinkResources_ListByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        list_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1privateLinkResources?api-version=2024-04-08-preview/get'
            operationId: PrivateLinkResources_ListByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_workspace'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_host_pool'
        insert: []
        update: []
        replace: []
        delete: []
    scaling_plans:
      id: azure.desktop_virtualization.scaling_plans
      name: scaling_plans
      title: scaling_plans
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}?api-version=2024-04-08-preview/get'
            operationId: ScalingPlans_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlan
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}?api-version=2024-04-08-preview/put'
            operationId: ScalingPlans_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlan
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}?api-version=2024-04-08-preview/delete'
            operationId: ScalingPlans_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}?api-version=2024-04-08-preview/patch'
            operationId: ScalingPlans_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlan
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans?api-version=2024-04-08-preview/get'
            operationId: ScalingPlans_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanList
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans?api-version=2024-04-08-preview/get'
            operationId: ScalingPlans_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanList
            objectKey: $.value
        list_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1scalingPlans?api-version=2024-04-08-preview/get'
            operationId: ScalingPlans_ListByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scaling_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/scaling_plans/methods/list_by_host_pool'
          - $ref: '#/components/x-stackQL-resources/scaling_plans/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/scaling_plans/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/scaling_plans/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/scaling_plans/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scaling_plans/methods/delete'
    scaling_plan_pooled_schedules:
      id: azure.desktop_virtualization.scaling_plan_pooled_schedules
      name: scaling_plan_pooled_schedules
      title: scaling_plan_pooled_schedules
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1pooledSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/get'
            operationId: ScalingPlanPooledSchedules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPooledSchedule
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1pooledSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/put'
            operationId: ScalingPlanPooledSchedules_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPooledSchedule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1pooledSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/delete'
            operationId: ScalingPlanPooledSchedules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1pooledSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/patch'
            operationId: ScalingPlanPooledSchedules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPooledSchedule
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1pooledSchedules?api-version=2024-04-08-preview/get'
            operationId: ScalingPlanPooledSchedules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPooledScheduleList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_pooled_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/scaling_plan_pooled_schedules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_pooled_schedules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_pooled_schedules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_pooled_schedules/methods/delete'
    scaling_plan_personal_schedules:
      id: azure.desktop_virtualization.scaling_plan_personal_schedules
      name: scaling_plan_personal_schedules
      title: scaling_plan_personal_schedules
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1personalSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/get'
            operationId: ScalingPlanPersonalSchedules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPersonalSchedule
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1personalSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/put'
            operationId: ScalingPlanPersonalSchedules_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPersonalSchedule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1personalSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/delete'
            operationId: ScalingPlanPersonalSchedules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1personalSchedules~1{scalingPlanScheduleName}?api-version=2024-04-08-preview/patch'
            operationId: ScalingPlanPersonalSchedules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPersonalSchedule
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1scalingPlans~1{scalingPlanName}~1personalSchedules?api-version=2024-04-08-preview/get'
            operationId: ScalingPlanPersonalSchedules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScalingPlanPersonalScheduleList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_personal_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/scaling_plan_personal_schedules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_personal_schedules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_personal_schedules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scaling_plan_personal_schedules/methods/delete'
    application_groups:
      id: azure.desktop_virtualization.application_groups
      name: application_groups
      title: application_groups
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}?api-version=2024-04-08-preview/get'
            operationId: ApplicationGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroup
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}?api-version=2024-04-08-preview/put'
            operationId: ApplicationGroups_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}?api-version=2024-04-08-preview/delete'
            operationId: ApplicationGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}?api-version=2024-04-08-preview/patch'
            operationId: ApplicationGroups_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroup
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups?api-version=2024-04-08-preview/get'
            operationId: ApplicationGroups_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroupList
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups?api-version=2024-04-08-preview/get'
            operationId: ApplicationGroups_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationGroupList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_groups/methods/delete'
    start_menu_items:
      id: azure.desktop_virtualization.start_menu_items
      name: start_menu_items
      title: start_menu_items
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1startMenuItems?api-version=2024-04-08-preview/get'
            operationId: StartMenuItems_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StartMenuItemList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/start_menu_items/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    applications:
      id: azure.desktop_virtualization.applications
      name: applications
      title: applications
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1applications~1{applicationName}?api-version=2024-04-08-preview/get'
            operationId: Applications_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Application
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1applications~1{applicationName}?api-version=2024-04-08-preview/put'
            operationId: Applications_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Application
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1applications~1{applicationName}?api-version=2024-04-08-preview/delete'
            operationId: Applications_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1applications~1{applicationName}?api-version=2024-04-08-preview/patch'
            operationId: Applications_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Application
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1applications?api-version=2024-04-08-preview/get'
            operationId: Applications_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/applications/methods/get'
          - $ref: '#/components/x-stackQL-resources/applications/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete'
    desktops:
      id: azure.desktop_virtualization.desktops
      name: desktops
      title: desktops
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1desktops~1{desktopName}?api-version=2024-04-08-preview/get'
            operationId: Desktops_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Desktop
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1desktops~1{desktopName}?api-version=2024-04-08-preview/patch'
            operationId: Desktops_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Desktop
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1applicationGroups~1{applicationGroupName}~1desktops?api-version=2024-04-08-preview/get'
            operationId: Desktops_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DesktopList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/desktops/methods/get'
          - $ref: '#/components/x-stackQL-resources/desktops/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/desktops/methods/update'
        replace: []
        delete: []
    host_pools:
      id: azure.desktop_virtualization.host_pools
      name: host_pools
      title: host_pools
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}?api-version=2024-04-08-preview/get'
            operationId: HostPools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HostPool
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}?api-version=2024-04-08-preview/put'
            operationId: HostPools_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HostPool
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}?api-version=2024-04-08-preview/delete'
            operationId: HostPools_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}?api-version=2024-04-08-preview/patch'
            operationId: HostPools_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HostPool
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools?api-version=2024-04-08-preview/get'
            operationId: HostPools_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HostPoolList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DesktopVirtualization~1hostPools?api-version=2024-04-08-preview/get'
            operationId: HostPools_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HostPoolList
            objectKey: $.value
        retrieve_registration_token:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1retrieveRegistrationToken?api-version=2024-04-08-preview/post'
            operationId: HostPools_RetrieveRegistrationToken
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationInfo
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/host_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/host_pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/host_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/host_pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/host_pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/host_pools/methods/delete'
    session_host_managements:
      id: azure.desktop_virtualization.session_host_managements
      name: session_host_managements
      title: session_host_managements
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostManagements~1default?api-version=2024-04-08-preview/get'
            operationId: SessionHostManagements_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostManagement
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostManagements~1default?api-version=2024-04-08-preview/put'
            operationId: SessionHostManagements_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostManagement
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostManagements~1default?api-version=2024-04-08-preview/patch'
            operationId: SessionHostManagements_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostManagement
        list_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostManagements?api-version=2024-04-08-preview/get'
            operationId: SessionHostManagements_ListByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostManagementList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/session_host_managements/methods/get'
          - $ref: '#/components/x-stackQL-resources/session_host_managements/methods/list_by_host_pool'
        insert:
          - $ref: '#/components/x-stackQL-resources/session_host_managements/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/session_host_managements/methods/update'
        replace: []
        delete: []
    initiate_session_host_updates:
      id: azure.desktop_virtualization.initiate_session_host_updates
      name: initiate_session_host_updates
      title: initiate_session_host_updates
      methods:
        post:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostManagements~1default~1initiateSessionHostUpdate?api-version=2024-04-08-preview/post'
            operationId: InitiateSessionHostUpdate_Post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    control_session_host_updates:
      id: azure.desktop_virtualization.control_session_host_updates
      name: control_session_host_updates
      title: control_session_host_updates
      methods:
        post:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostManagements~1default~1controlSessionHostUpdate?api-version=2024-04-08-preview/post'
            operationId: ControlSessionHostUpdate_Post
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    session_host_managements_update_status:
      id: azure.desktop_virtualization.session_host_managements_update_status
      name: session_host_managements_update_status
      title: session_host_managements_update_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostManagements~1default~1sessionHostUpdateStatuses~1default?api-version=2024-04-08-preview/get'
            operationId: SessionHostManagementsUpdateStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostManagementUpdateStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/session_host_managements_update_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    session_host_configurations:
      id: azure.desktop_virtualization.session_host_configurations
      name: session_host_configurations
      title: session_host_configurations
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostConfigurations~1default?api-version=2024-04-08-preview/put'
            operationId: SessionHostConfigurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostConfiguration
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostConfigurations~1default?api-version=2024-04-08-preview/patch'
            operationId: SessionHostConfigurations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostConfiguration
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostConfigurations~1default?api-version=2024-04-08-preview/get'
            operationId: SessionHostConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostConfiguration
        list_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHostConfigurations?api-version=2024-04-08-preview/get'
            operationId: SessionHostConfigurations_ListByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostConfigurationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/session_host_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/session_host_configurations/methods/list_by_host_pool'
        insert:
          - $ref: '#/components/x-stackQL-resources/session_host_configurations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/session_host_configurations/methods/update'
        replace: []
        delete: []
    active_session_host_configurations:
      id: azure.desktop_virtualization.active_session_host_configurations
      name: active_session_host_configurations
      title: active_session_host_configurations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1activeSessionHostConfigurations~1default?api-version=2024-04-08-preview/get'
            operationId: ActiveSessionHostConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActiveSessionHostConfiguration
        list_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1activeSessionHostConfigurations?api-version=2024-04-08-preview/get'
            operationId: ActiveSessionHostConfigurations_ListByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ActiveSessionHostConfigurationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/active_session_host_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/active_session_host_configurations/methods/list_by_host_pool'
        insert: []
        update: []
        replace: []
        delete: []
    host_pools_registration_tokens:
      id: azure.desktop_virtualization.host_pools_registration_tokens
      name: host_pools_registration_tokens
      title: host_pools_registration_tokens
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1listRegistrationTokens?api-version=2024-04-08-preview/post'
            operationId: HostPoolsRegistrationTokens_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationTokenList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/host_pools_registration_tokens/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    user_sessions:
      id: azure.desktop_virtualization.user_sessions
      name: user_sessions
      title: user_sessions
      methods:
        list_by_host_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1userSessions?api-version=2024-04-08-preview/get'
            operationId: UserSessions_ListByHostPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSessionList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}~1userSessions~1{userSessionId}?api-version=2024-04-08-preview/get'
            operationId: UserSessions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSession
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}~1userSessions~1{userSessionId}?api-version=2024-04-08-preview/delete'
            operationId: UserSessions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}~1userSessions?api-version=2024-04-08-preview/get'
            operationId: UserSessions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserSessionList
            objectKey: $.value
        disconnect:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}~1userSessions~1{userSessionId}~1disconnect?api-version=2024-04-08-preview/post'
            operationId: UserSessions_Disconnect
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_message:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}~1userSessions~1{userSessionId}~1sendMessage?api-version=2024-04-08-preview/post'
            operationId: UserSessions_SendMessage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_sessions/methods/get'
          - $ref: '#/components/x-stackQL-resources/user_sessions/methods/list'
          - $ref: '#/components/x-stackQL-resources/user_sessions/methods/list_by_host_pool'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_sessions/methods/delete'
    session_hosts:
      id: azure.desktop_virtualization.session_hosts
      name: session_hosts
      title: session_hosts
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}?api-version=2024-04-08-preview/get'
            operationId: SessionHosts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHost
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}?api-version=2024-04-08-preview/delete'
            operationId: SessionHosts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}?api-version=2024-04-08-preview/patch'
            operationId: SessionHosts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHost
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts?api-version=2024-04-08-preview/get'
            operationId: SessionHosts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionHostList
            objectKey: $.value
        retry_provisioning:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1sessionHosts~1{sessionHostName}~1retryProvisioning?api-version=2024-04-08-preview/post'
            operationId: SessionHost_RetryProvisioning
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/session_hosts/methods/get'
          - $ref: '#/components/x-stackQL-resources/session_hosts/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/session_hosts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/session_hosts/methods/delete'
    msix_packages:
      id: azure.desktop_virtualization.msix_packages
      name: msix_packages
      title: msix_packages
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1msixPackages~1{msixPackageFullName}?api-version=2024-04-08-preview/get'
            operationId: MSIXPackages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MSIXPackage
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1msixPackages~1{msixPackageFullName}?api-version=2024-04-08-preview/put'
            operationId: MSIXPackages_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MSIXPackage
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1msixPackages~1{msixPackageFullName}?api-version=2024-04-08-preview/delete'
            operationId: MSIXPackages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1msixPackages~1{msixPackageFullName}?api-version=2024-04-08-preview/patch'
            operationId: MSIXPackages_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MSIXPackage
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1msixPackages?api-version=2024-04-08-preview/get'
            operationId: MSIXPackages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MSIXPackageList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/msix_packages/methods/get'
          - $ref: '#/components/x-stackQL-resources/msix_packages/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/msix_packages/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/msix_packages/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/msix_packages/methods/delete'
    app_attach_packages:
      id: azure.desktop_virtualization.app_attach_packages
      name: app_attach_packages
      title: app_attach_packages
      methods:
        import_info:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1importAppAttachPackageInfo?api-version=2024-04-08-preview/post'
            operationId: AppAttachPackage_ImportInfo
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppAttachPackageList
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1appAttachPackages~1{appAttachPackageName}?api-version=2024-04-08-preview/get'
            operationId: AppAttachPackage_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppAttachPackage
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1appAttachPackages~1{appAttachPackageName}?api-version=2024-04-08-preview/put'
            operationId: AppAttachPackage_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppAttachPackage
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1appAttachPackages~1{appAttachPackageName}?api-version=2024-04-08-preview/delete'
            operationId: AppAttachPackage_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1appAttachPackages~1{appAttachPackageName}?api-version=2024-04-08-preview/patch'
            operationId: AppAttachPackage_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppAttachPackage
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1appAttachPackages?api-version=2024-04-08-preview/get'
            operationId: AppAttachPackage_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppAttachPackageList
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DesktopVirtualization~1appAttachPackages?api-version=2024-04-08-preview/get'
            operationId: AppAttachPackage_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppAttachPackageList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_attach_packages/methods/get'
          - $ref: '#/components/x-stackQL-resources/app_attach_packages/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/app_attach_packages/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_attach_packages/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/app_attach_packages/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_attach_packages/methods/delete'
    msix_images:
      id: azure.desktop_virtualization.msix_images
      name: msix_images
      title: msix_images
      methods:
        expand:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DesktopVirtualization~1hostPools~1{hostPoolName}~1expandMsixImage?api-version=2024-04-08-preview/post'
            operationId: MsixImages_Expand
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExpandMsixImageList
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vw_workspaces:
      id: azure.desktop_virtualization.vw_workspaces
      name: vw_workspaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              managedBy as managed_by,
              kind as kind,
              etag as etag,
              identity as identity,
              sku as sku,
              plan as plan,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.applicationGroupReferences') as "application_group_references",
              JSON_EXTRACT(properties, '$.cloudPcResource') as "cloud_pc_resource",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              subscriptionId,
              resourceGroupName,
              workspaceName
              FROM azure.desktop_virtualization.workspaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                managedBy as managed_by,
                kind as kind,
                etag as etag,
                identity as identity,
                sku as sku,
                plan as plan,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.applicationGroupReferences') as "application_group_references",
                json_extract_path_text(properties, '$.cloudPcResource') as "cloud_pc_resource",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                subscriptionId,
                resourceGroupName,
                workspaceName
                FROM azure.desktop_virtualization.workspaces
                WHERE subscriptionId = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.desktop_virtualization.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              workspaceName,
              privateEndpointConnectionName,
              hostPoolName
              FROM azure.desktop_virtualization.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                workspaceName,
                privateEndpointConnectionName,
                hostPoolName
                FROM azure.desktop_virtualization.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_scaling_plans:
      id: azure.desktop_virtualization.vw_scaling_plans
      name: vw_scaling_plans
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              managedBy as managed_by,
              kind as kind,
              etag as etag,
              identity as identity,
              sku as sku,
              plan as plan,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.timeZone') as "time_zone",
              JSON_EXTRACT(properties, '$.hostPoolType') as "host_pool_type",
              JSON_EXTRACT(properties, '$.exclusionTag') as "exclusion_tag",
              JSON_EXTRACT(properties, '$.schedules') as "schedules",
              JSON_EXTRACT(properties, '$.hostPoolReferences') as "host_pool_references",
              subscriptionId,
              resourceGroupName,
              scalingPlanName
              FROM azure.desktop_virtualization.scaling_plans
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                managedBy as managed_by,
                kind as kind,
                etag as etag,
                identity as identity,
                sku as sku,
                plan as plan,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.timeZone') as "time_zone",
                json_extract_path_text(properties, '$.hostPoolType') as "host_pool_type",
                json_extract_path_text(properties, '$.exclusionTag') as "exclusion_tag",
                json_extract_path_text(properties, '$.schedules') as "schedules",
                json_extract_path_text(properties, '$.hostPoolReferences') as "host_pool_references",
                subscriptionId,
                resourceGroupName,
                scalingPlanName
                FROM azure.desktop_virtualization.scaling_plans
                WHERE subscriptionId = 'replace-me';
    vw_scaling_plan_pooled_schedules:
      id: azure.desktop_virtualization.vw_scaling_plan_pooled_schedules
      name: vw_scaling_plan_pooled_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.daysOfWeek') as "days_of_week",
              JSON_EXTRACT(properties, '$.rampUpStartTime') as "ramp_up_start_time",
              JSON_EXTRACT(properties, '$.rampUpLoadBalancingAlgorithm') as "ramp_up_load_balancing_algorithm",
              JSON_EXTRACT(properties, '$.rampUpMinimumHostsPct') as "ramp_up_minimum_hosts_pct",
              JSON_EXTRACT(properties, '$.rampUpCapacityThresholdPct') as "ramp_up_capacity_threshold_pct",
              JSON_EXTRACT(properties, '$.peakStartTime') as "peak_start_time",
              JSON_EXTRACT(properties, '$.peakLoadBalancingAlgorithm') as "peak_load_balancing_algorithm",
              JSON_EXTRACT(properties, '$.rampDownStartTime') as "ramp_down_start_time",
              JSON_EXTRACT(properties, '$.rampDownLoadBalancingAlgorithm') as "ramp_down_load_balancing_algorithm",
              JSON_EXTRACT(properties, '$.rampDownMinimumHostsPct') as "ramp_down_minimum_hosts_pct",
              JSON_EXTRACT(properties, '$.rampDownCapacityThresholdPct') as "ramp_down_capacity_threshold_pct",
              JSON_EXTRACT(properties, '$.rampDownForceLogoffUsers') as "ramp_down_force_logoff_users",
              JSON_EXTRACT(properties, '$.rampDownStopHostsWhen') as "ramp_down_stop_hosts_when",
              JSON_EXTRACT(properties, '$.rampDownWaitTimeMinutes') as "ramp_down_wait_time_minutes",
              JSON_EXTRACT(properties, '$.rampDownNotificationMessage') as "ramp_down_notification_message",
              JSON_EXTRACT(properties, '$.offPeakStartTime') as "off_peak_start_time",
              JSON_EXTRACT(properties, '$.offPeakLoadBalancingAlgorithm') as "off_peak_load_balancing_algorithm",
              subscriptionId,
              resourceGroupName,
              scalingPlanName,
              scalingPlanScheduleName
              FROM azure.desktop_virtualization.scaling_plan_pooled_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND scalingPlanName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.daysOfWeek') as "days_of_week",
                json_extract_path_text(properties, '$.rampUpStartTime') as "ramp_up_start_time",
                json_extract_path_text(properties, '$.rampUpLoadBalancingAlgorithm') as "ramp_up_load_balancing_algorithm",
                json_extract_path_text(properties, '$.rampUpMinimumHostsPct') as "ramp_up_minimum_hosts_pct",
                json_extract_path_text(properties, '$.rampUpCapacityThresholdPct') as "ramp_up_capacity_threshold_pct",
                json_extract_path_text(properties, '$.peakStartTime') as "peak_start_time",
                json_extract_path_text(properties, '$.peakLoadBalancingAlgorithm') as "peak_load_balancing_algorithm",
                json_extract_path_text(properties, '$.rampDownStartTime') as "ramp_down_start_time",
                json_extract_path_text(properties, '$.rampDownLoadBalancingAlgorithm') as "ramp_down_load_balancing_algorithm",
                json_extract_path_text(properties, '$.rampDownMinimumHostsPct') as "ramp_down_minimum_hosts_pct",
                json_extract_path_text(properties, '$.rampDownCapacityThresholdPct') as "ramp_down_capacity_threshold_pct",
                json_extract_path_text(properties, '$.rampDownForceLogoffUsers') as "ramp_down_force_logoff_users",
                json_extract_path_text(properties, '$.rampDownStopHostsWhen') as "ramp_down_stop_hosts_when",
                json_extract_path_text(properties, '$.rampDownWaitTimeMinutes') as "ramp_down_wait_time_minutes",
                json_extract_path_text(properties, '$.rampDownNotificationMessage') as "ramp_down_notification_message",
                json_extract_path_text(properties, '$.offPeakStartTime') as "off_peak_start_time",
                json_extract_path_text(properties, '$.offPeakLoadBalancingAlgorithm') as "off_peak_load_balancing_algorithm",
                subscriptionId,
                resourceGroupName,
                scalingPlanName,
                scalingPlanScheduleName
                FROM azure.desktop_virtualization.scaling_plan_pooled_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND scalingPlanName = 'replace-me';
    vw_scaling_plan_personal_schedules:
      id: azure.desktop_virtualization.vw_scaling_plan_personal_schedules
      name: vw_scaling_plan_personal_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.daysOfWeek') as "days_of_week",
              JSON_EXTRACT(properties, '$.rampUpStartTime') as "ramp_up_start_time",
              JSON_EXTRACT(properties, '$.rampUpAutoStartHosts') as "ramp_up_auto_start_hosts",
              JSON_EXTRACT(properties, '$.rampUpStartVMOnConnect') as "ramp_up_start_vm_on_connect",
              JSON_EXTRACT(properties, '$.rampUpActionOnDisconnect') as "ramp_up_action_on_disconnect",
              JSON_EXTRACT(properties, '$.rampUpMinutesToWaitOnDisconnect') as "ramp_up_minutes_to_wait_on_disconnect",
              JSON_EXTRACT(properties, '$.rampUpActionOnLogoff') as "ramp_up_action_on_logoff",
              JSON_EXTRACT(properties, '$.rampUpMinutesToWaitOnLogoff') as "ramp_up_minutes_to_wait_on_logoff",
              JSON_EXTRACT(properties, '$.peakStartTime') as "peak_start_time",
              JSON_EXTRACT(properties, '$.peakStartVMOnConnect') as "peak_start_vm_on_connect",
              JSON_EXTRACT(properties, '$.peakActionOnDisconnect') as "peak_action_on_disconnect",
              JSON_EXTRACT(properties, '$.peakMinutesToWaitOnDisconnect') as "peak_minutes_to_wait_on_disconnect",
              JSON_EXTRACT(properties, '$.peakActionOnLogoff') as "peak_action_on_logoff",
              JSON_EXTRACT(properties, '$.peakMinutesToWaitOnLogoff') as "peak_minutes_to_wait_on_logoff",
              JSON_EXTRACT(properties, '$.rampDownStartTime') as "ramp_down_start_time",
              JSON_EXTRACT(properties, '$.rampDownStartVMOnConnect') as "ramp_down_start_vm_on_connect",
              JSON_EXTRACT(properties, '$.rampDownActionOnDisconnect') as "ramp_down_action_on_disconnect",
              JSON_EXTRACT(properties, '$.rampDownMinutesToWaitOnDisconnect') as "ramp_down_minutes_to_wait_on_disconnect",
              JSON_EXTRACT(properties, '$.rampDownActionOnLogoff') as "ramp_down_action_on_logoff",
              JSON_EXTRACT(properties, '$.rampDownMinutesToWaitOnLogoff') as "ramp_down_minutes_to_wait_on_logoff",
              JSON_EXTRACT(properties, '$.offPeakStartTime') as "off_peak_start_time",
              JSON_EXTRACT(properties, '$.offPeakStartVMOnConnect') as "off_peak_start_vm_on_connect",
              JSON_EXTRACT(properties, '$.offPeakActionOnDisconnect') as "off_peak_action_on_disconnect",
              JSON_EXTRACT(properties, '$.offPeakMinutesToWaitOnDisconnect') as "off_peak_minutes_to_wait_on_disconnect",
              JSON_EXTRACT(properties, '$.offPeakActionOnLogoff') as "off_peak_action_on_logoff",
              JSON_EXTRACT(properties, '$.offPeakMinutesToWaitOnLogoff') as "off_peak_minutes_to_wait_on_logoff",
              subscriptionId,
              resourceGroupName,
              scalingPlanName,
              scalingPlanScheduleName
              FROM azure.desktop_virtualization.scaling_plan_personal_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND scalingPlanName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.daysOfWeek') as "days_of_week",
                json_extract_path_text(properties, '$.rampUpStartTime') as "ramp_up_start_time",
                json_extract_path_text(properties, '$.rampUpAutoStartHosts') as "ramp_up_auto_start_hosts",
                json_extract_path_text(properties, '$.rampUpStartVMOnConnect') as "ramp_up_start_vm_on_connect",
                json_extract_path_text(properties, '$.rampUpActionOnDisconnect') as "ramp_up_action_on_disconnect",
                json_extract_path_text(properties, '$.rampUpMinutesToWaitOnDisconnect') as "ramp_up_minutes_to_wait_on_disconnect",
                json_extract_path_text(properties, '$.rampUpActionOnLogoff') as "ramp_up_action_on_logoff",
                json_extract_path_text(properties, '$.rampUpMinutesToWaitOnLogoff') as "ramp_up_minutes_to_wait_on_logoff",
                json_extract_path_text(properties, '$.peakStartTime') as "peak_start_time",
                json_extract_path_text(properties, '$.peakStartVMOnConnect') as "peak_start_vm_on_connect",
                json_extract_path_text(properties, '$.peakActionOnDisconnect') as "peak_action_on_disconnect",
                json_extract_path_text(properties, '$.peakMinutesToWaitOnDisconnect') as "peak_minutes_to_wait_on_disconnect",
                json_extract_path_text(properties, '$.peakActionOnLogoff') as "peak_action_on_logoff",
                json_extract_path_text(properties, '$.peakMinutesToWaitOnLogoff') as "peak_minutes_to_wait_on_logoff",
                json_extract_path_text(properties, '$.rampDownStartTime') as "ramp_down_start_time",
                json_extract_path_text(properties, '$.rampDownStartVMOnConnect') as "ramp_down_start_vm_on_connect",
                json_extract_path_text(properties, '$.rampDownActionOnDisconnect') as "ramp_down_action_on_disconnect",
                json_extract_path_text(properties, '$.rampDownMinutesToWaitOnDisconnect') as "ramp_down_minutes_to_wait_on_disconnect",
                json_extract_path_text(properties, '$.rampDownActionOnLogoff') as "ramp_down_action_on_logoff",
                json_extract_path_text(properties, '$.rampDownMinutesToWaitOnLogoff') as "ramp_down_minutes_to_wait_on_logoff",
                json_extract_path_text(properties, '$.offPeakStartTime') as "off_peak_start_time",
                json_extract_path_text(properties, '$.offPeakStartVMOnConnect') as "off_peak_start_vm_on_connect",
                json_extract_path_text(properties, '$.offPeakActionOnDisconnect') as "off_peak_action_on_disconnect",
                json_extract_path_text(properties, '$.offPeakMinutesToWaitOnDisconnect') as "off_peak_minutes_to_wait_on_disconnect",
                json_extract_path_text(properties, '$.offPeakActionOnLogoff') as "off_peak_action_on_logoff",
                json_extract_path_text(properties, '$.offPeakMinutesToWaitOnLogoff') as "off_peak_minutes_to_wait_on_logoff",
                subscriptionId,
                resourceGroupName,
                scalingPlanName,
                scalingPlanScheduleName
                FROM azure.desktop_virtualization.scaling_plan_personal_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND scalingPlanName = 'replace-me';
    vw_application_groups:
      id: azure.desktop_virtualization.vw_application_groups
      name: vw_application_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              managedBy as managed_by,
              kind as kind,
              etag as etag,
              identity as identity,
              sku as sku,
              plan as plan,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.hostPoolArmPath') as "host_pool_arm_path",
              JSON_EXTRACT(properties, '$.workspaceArmPath') as "workspace_arm_path",
              JSON_EXTRACT(properties, '$.applicationGroupType') as "application_group_type",
              JSON_EXTRACT(properties, '$.cloudPcResource') as "cloud_pc_resource",
              JSON_EXTRACT(properties, '$.showInFeed') as "show_in_feed",
              subscriptionId,
              resourceGroupName,
              applicationGroupName
              FROM azure.desktop_virtualization.application_groups
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                managedBy as managed_by,
                kind as kind,
                etag as etag,
                identity as identity,
                sku as sku,
                plan as plan,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.hostPoolArmPath') as "host_pool_arm_path",
                json_extract_path_text(properties, '$.workspaceArmPath') as "workspace_arm_path",
                json_extract_path_text(properties, '$.applicationGroupType') as "application_group_type",
                json_extract_path_text(properties, '$.cloudPcResource') as "cloud_pc_resource",
                json_extract_path_text(properties, '$.showInFeed') as "show_in_feed",
                subscriptionId,
                resourceGroupName,
                applicationGroupName
                FROM azure.desktop_virtualization.application_groups
                WHERE subscriptionId = 'replace-me';
    vw_applications:
      id: azure.desktop_virtualization.vw_applications
      name: vw_applications
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.filePath') as "file_path",
              JSON_EXTRACT(properties, '$.msixPackageFamilyName') as "msix_package_family_name",
              JSON_EXTRACT(properties, '$.msixPackageApplicationId') as "msix_package_application_id",
              JSON_EXTRACT(properties, '$.applicationType') as "application_type",
              JSON_EXTRACT(properties, '$.commandLineSetting') as "command_line_setting",
              JSON_EXTRACT(properties, '$.commandLineArguments') as "command_line_arguments",
              JSON_EXTRACT(properties, '$.showInPortal') as "show_in_portal",
              JSON_EXTRACT(properties, '$.iconPath') as "icon_path",
              JSON_EXTRACT(properties, '$.iconIndex') as "icon_index",
              JSON_EXTRACT(properties, '$.iconHash') as "icon_hash",
              JSON_EXTRACT(properties, '$.iconContent') as "icon_content",
              subscriptionId,
              resourceGroupName,
              applicationGroupName,
              applicationName
              FROM azure.desktop_virtualization.applications
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND applicationGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.filePath') as "file_path",
                json_extract_path_text(properties, '$.msixPackageFamilyName') as "msix_package_family_name",
                json_extract_path_text(properties, '$.msixPackageApplicationId') as "msix_package_application_id",
                json_extract_path_text(properties, '$.applicationType') as "application_type",
                json_extract_path_text(properties, '$.commandLineSetting') as "command_line_setting",
                json_extract_path_text(properties, '$.commandLineArguments') as "command_line_arguments",
                json_extract_path_text(properties, '$.showInPortal') as "show_in_portal",
                json_extract_path_text(properties, '$.iconPath') as "icon_path",
                json_extract_path_text(properties, '$.iconIndex') as "icon_index",
                json_extract_path_text(properties, '$.iconHash') as "icon_hash",
                json_extract_path_text(properties, '$.iconContent') as "icon_content",
                subscriptionId,
                resourceGroupName,
                applicationGroupName,
                applicationName
                FROM azure.desktop_virtualization.applications
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND applicationGroupName = 'replace-me';
    vw_desktops:
      id: azure.desktop_virtualization.vw_desktops
      name: vw_desktops
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.iconHash') as "icon_hash",
              JSON_EXTRACT(properties, '$.iconContent') as "icon_content",
              subscriptionId,
              resourceGroupName,
              applicationGroupName,
              desktopName
              FROM azure.desktop_virtualization.desktops
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND applicationGroupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.iconHash') as "icon_hash",
                json_extract_path_text(properties, '$.iconContent') as "icon_content",
                subscriptionId,
                resourceGroupName,
                applicationGroupName,
                desktopName
                FROM azure.desktop_virtualization.desktops
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND applicationGroupName = 'replace-me';
    vw_host_pools:
      id: azure.desktop_virtualization.vw_host_pools
      name: vw_host_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              managedBy as managed_by,
              kind as kind,
              etag as etag,
              identity as identity,
              sku as sku,
              plan as plan,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.hostPoolType') as "host_pool_type",
              JSON_EXTRACT(properties, '$.personalDesktopAssignmentType') as "personal_desktop_assignment_type",
              JSON_EXTRACT(properties, '$.customRdpProperty') as "custom_rdp_property",
              JSON_EXTRACT(properties, '$.maxSessionLimit') as "max_session_limit",
              JSON_EXTRACT(properties, '$.loadBalancerType') as "load_balancer_type",
              JSON_EXTRACT(properties, '$.ring') as "ring",
              JSON_EXTRACT(properties, '$.validationEnvironment') as "validation_environment",
              JSON_EXTRACT(properties, '$.registrationInfo') as "registration_info",
              JSON_EXTRACT(properties, '$.vmTemplate') as "vm_template",
              JSON_EXTRACT(properties, '$.managementType') as "management_type",
              JSON_EXTRACT(properties, '$.applicationGroupReferences') as "application_group_references",
              JSON_EXTRACT(properties, '$.appAttachPackageReferences') as "app_attach_package_references",
              JSON_EXTRACT(properties, '$.ssoadfsAuthority') as "ssoadfs_authority",
              JSON_EXTRACT(properties, '$.ssoClientId') as "sso_client_id",
              JSON_EXTRACT(properties, '$.ssoClientSecretKeyVaultPath') as "sso_client_secret_key_vault_path",
              JSON_EXTRACT(properties, '$.ssoSecretType') as "sso_secret_type",
              JSON_EXTRACT(properties, '$.preferredAppGroupType') as "preferred_app_group_type",
              JSON_EXTRACT(properties, '$.startVMOnConnect') as "start_vm_on_connect",
              JSON_EXTRACT(properties, '$.cloudPcResource') as "cloud_pc_resource",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.agentUpdate') as "agent_update",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.managedPrivateUDP') as "managed_private_udp",
              JSON_EXTRACT(properties, '$.directUDP') as "direct_udp",
              JSON_EXTRACT(properties, '$.publicUDP') as "public_udp",
              JSON_EXTRACT(properties, '$.relayUDP') as "relay_udp",
              subscriptionId,
              resourceGroupName,
              hostPoolName
              FROM azure.desktop_virtualization.host_pools
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                managedBy as managed_by,
                kind as kind,
                etag as etag,
                identity as identity,
                sku as sku,
                plan as plan,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.hostPoolType') as "host_pool_type",
                json_extract_path_text(properties, '$.personalDesktopAssignmentType') as "personal_desktop_assignment_type",
                json_extract_path_text(properties, '$.customRdpProperty') as "custom_rdp_property",
                json_extract_path_text(properties, '$.maxSessionLimit') as "max_session_limit",
                json_extract_path_text(properties, '$.loadBalancerType') as "load_balancer_type",
                json_extract_path_text(properties, '$.ring') as "ring",
                json_extract_path_text(properties, '$.validationEnvironment') as "validation_environment",
                json_extract_path_text(properties, '$.registrationInfo') as "registration_info",
                json_extract_path_text(properties, '$.vmTemplate') as "vm_template",
                json_extract_path_text(properties, '$.managementType') as "management_type",
                json_extract_path_text(properties, '$.applicationGroupReferences') as "application_group_references",
                json_extract_path_text(properties, '$.appAttachPackageReferences') as "app_attach_package_references",
                json_extract_path_text(properties, '$.ssoadfsAuthority') as "ssoadfs_authority",
                json_extract_path_text(properties, '$.ssoClientId') as "sso_client_id",
                json_extract_path_text(properties, '$.ssoClientSecretKeyVaultPath') as "sso_client_secret_key_vault_path",
                json_extract_path_text(properties, '$.ssoSecretType') as "sso_secret_type",
                json_extract_path_text(properties, '$.preferredAppGroupType') as "preferred_app_group_type",
                json_extract_path_text(properties, '$.startVMOnConnect') as "start_vm_on_connect",
                json_extract_path_text(properties, '$.cloudPcResource') as "cloud_pc_resource",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.agentUpdate') as "agent_update",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.managedPrivateUDP') as "managed_private_udp",
                json_extract_path_text(properties, '$.directUDP') as "direct_udp",
                json_extract_path_text(properties, '$.publicUDP') as "public_udp",
                json_extract_path_text(properties, '$.relayUDP') as "relay_udp",
                subscriptionId,
                resourceGroupName,
                hostPoolName
                FROM azure.desktop_virtualization.host_pools
                WHERE subscriptionId = 'replace-me';
    vw_session_host_managements:
      id: azure.desktop_virtualization.vw_session_host_managements
      name: vw_session_host_managements
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.scheduledDateTimeZone') as "scheduled_date_time_zone",
              JSON_EXTRACT(properties, '$.update') as "update",
              subscriptionId,
              resourceGroupName,
              hostPoolName
              FROM azure.desktop_virtualization.session_host_managements
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.scheduledDateTimeZone') as "scheduled_date_time_zone",
                json_extract_path_text(properties, '$.update') as "update",
                subscriptionId,
                resourceGroupName,
                hostPoolName
                FROM azure.desktop_virtualization.session_host_managements
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_session_host_managements_update_status:
      id: azure.desktop_virtualization.vw_session_host_managements_update_status
      name: vw_session_host_managements_update_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              status as status,
              percentComplete as percent_complete,
              startTime as start_time,
              endTime as end_time,
              error as error,
              JSON_EXTRACT(properties, '$.correlationId') as "correlation_id",
              JSON_EXTRACT(properties, '$.progress') as "progress",
              JSON_EXTRACT(properties, '$.scheduledDateTime') as "scheduled_date_time",
              JSON_EXTRACT(properties, '$.sessionHostManagement') as "session_host_management",
              subscriptionId,
              resourceGroupName,
              hostPoolName
              FROM azure.desktop_virtualization.session_host_managements_update_status
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                status as status,
                percentComplete as percent_complete,
                startTime as start_time,
                endTime as end_time,
                error as error,
                json_extract_path_text(properties, '$.correlationId') as "correlation_id",
                json_extract_path_text(properties, '$.progress') as "progress",
                json_extract_path_text(properties, '$.scheduledDateTime') as "scheduled_date_time",
                json_extract_path_text(properties, '$.sessionHostManagement') as "session_host_management",
                subscriptionId,
                resourceGroupName,
                hostPoolName
                FROM azure.desktop_virtualization.session_host_managements_update_status
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_session_host_configurations:
      id: azure.desktop_virtualization.vw_session_host_configurations
      name: vw_session_host_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.vmTags') as "vm_tags",
              JSON_EXTRACT(properties, '$.vmLocation') as "vm_location",
              JSON_EXTRACT(properties, '$.vmResourceGroup') as "vm_resource_group",
              JSON_EXTRACT(properties, '$.vmNamePrefix') as "vm_name_prefix",
              JSON_EXTRACT(properties, '$.availabilityZones') as "availability_zones",
              JSON_EXTRACT(properties, '$.networkInfo') as "network_info",
              JSON_EXTRACT(properties, '$.vmSizeId') as "vm_size_id",
              JSON_EXTRACT(properties, '$.diskInfo') as "disk_info",
              JSON_EXTRACT(properties, '$.customConfigurationScriptUrl') as "custom_configuration_script_url",
              JSON_EXTRACT(properties, '$.imageInfo') as "image_info",
              JSON_EXTRACT(properties, '$.domainInfo') as "domain_info",
              JSON_EXTRACT(properties, '$.securityInfo') as "security_info",
              JSON_EXTRACT(properties, '$.vmAdminCredentials') as "vm_admin_credentials",
              JSON_EXTRACT(properties, '$.bootDiagnosticsInfo') as "boot_diagnostics_info",
              subscriptionId,
              resourceGroupName,
              hostPoolName
              FROM azure.desktop_virtualization.session_host_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.vmTags') as "vm_tags",
                json_extract_path_text(properties, '$.vmLocation') as "vm_location",
                json_extract_path_text(properties, '$.vmResourceGroup') as "vm_resource_group",
                json_extract_path_text(properties, '$.vmNamePrefix') as "vm_name_prefix",
                json_extract_path_text(properties, '$.availabilityZones') as "availability_zones",
                json_extract_path_text(properties, '$.networkInfo') as "network_info",
                json_extract_path_text(properties, '$.vmSizeId') as "vm_size_id",
                json_extract_path_text(properties, '$.diskInfo') as "disk_info",
                json_extract_path_text(properties, '$.customConfigurationScriptUrl') as "custom_configuration_script_url",
                json_extract_path_text(properties, '$.imageInfo') as "image_info",
                json_extract_path_text(properties, '$.domainInfo') as "domain_info",
                json_extract_path_text(properties, '$.securityInfo') as "security_info",
                json_extract_path_text(properties, '$.vmAdminCredentials') as "vm_admin_credentials",
                json_extract_path_text(properties, '$.bootDiagnosticsInfo') as "boot_diagnostics_info",
                subscriptionId,
                resourceGroupName,
                hostPoolName
                FROM azure.desktop_virtualization.session_host_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_active_session_host_configurations:
      id: azure.desktop_virtualization.vw_active_session_host_configurations
      name: vw_active_session_host_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.vmTags') as "vm_tags",
              JSON_EXTRACT(properties, '$.vmLocation') as "vm_location",
              JSON_EXTRACT(properties, '$.vmResourceGroup') as "vm_resource_group",
              JSON_EXTRACT(properties, '$.vmNamePrefix') as "vm_name_prefix",
              JSON_EXTRACT(properties, '$.availabilityZones') as "availability_zones",
              JSON_EXTRACT(properties, '$.networkInfo') as "network_info",
              JSON_EXTRACT(properties, '$.vmSizeId') as "vm_size_id",
              JSON_EXTRACT(properties, '$.diskInfo') as "disk_info",
              JSON_EXTRACT(properties, '$.customConfigurationScriptUrl') as "custom_configuration_script_url",
              JSON_EXTRACT(properties, '$.imageInfo') as "image_info",
              JSON_EXTRACT(properties, '$.domainInfo') as "domain_info",
              JSON_EXTRACT(properties, '$.securityInfo') as "security_info",
              JSON_EXTRACT(properties, '$.vmAdminCredentials') as "vm_admin_credentials",
              JSON_EXTRACT(properties, '$.bootDiagnosticsInfo') as "boot_diagnostics_info",
              subscriptionId,
              resourceGroupName,
              hostPoolName
              FROM azure.desktop_virtualization.active_session_host_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.vmTags') as "vm_tags",
                json_extract_path_text(properties, '$.vmLocation') as "vm_location",
                json_extract_path_text(properties, '$.vmResourceGroup') as "vm_resource_group",
                json_extract_path_text(properties, '$.vmNamePrefix') as "vm_name_prefix",
                json_extract_path_text(properties, '$.availabilityZones') as "availability_zones",
                json_extract_path_text(properties, '$.networkInfo') as "network_info",
                json_extract_path_text(properties, '$.vmSizeId') as "vm_size_id",
                json_extract_path_text(properties, '$.diskInfo') as "disk_info",
                json_extract_path_text(properties, '$.customConfigurationScriptUrl') as "custom_configuration_script_url",
                json_extract_path_text(properties, '$.imageInfo') as "image_info",
                json_extract_path_text(properties, '$.domainInfo') as "domain_info",
                json_extract_path_text(properties, '$.securityInfo') as "security_info",
                json_extract_path_text(properties, '$.vmAdminCredentials') as "vm_admin_credentials",
                json_extract_path_text(properties, '$.bootDiagnosticsInfo') as "boot_diagnostics_info",
                subscriptionId,
                resourceGroupName,
                hostPoolName
                FROM azure.desktop_virtualization.active_session_host_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_user_sessions:
      id: azure.desktop_virtualization.vw_user_sessions
      name: vw_user_sessions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.userPrincipalName') as "user_principal_name",
              JSON_EXTRACT(properties, '$.applicationType') as "application_type",
              JSON_EXTRACT(properties, '$.sessionState') as "session_state",
              JSON_EXTRACT(properties, '$.activeDirectoryUserName') as "active_directory_user_name",
              JSON_EXTRACT(properties, '$.createTime') as "create_time",
              subscriptionId,
              resourceGroupName,
              hostPoolName,
              sessionHostName,
              userSessionId
              FROM azure.desktop_virtualization.user_sessions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.userPrincipalName') as "user_principal_name",
                json_extract_path_text(properties, '$.applicationType') as "application_type",
                json_extract_path_text(properties, '$.sessionState') as "session_state",
                json_extract_path_text(properties, '$.activeDirectoryUserName') as "active_directory_user_name",
                json_extract_path_text(properties, '$.createTime') as "create_time",
                subscriptionId,
                resourceGroupName,
                hostPoolName,
                sessionHostName,
                userSessionId
                FROM azure.desktop_virtualization.user_sessions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_session_hosts:
      id: azure.desktop_virtualization.vw_session_hosts
      name: vw_session_hosts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.lastHeartBeat') as "last_heart_beat",
              JSON_EXTRACT(properties, '$.sessions') as "sessions",
              JSON_EXTRACT(properties, '$.agentVersion') as "agent_version",
              JSON_EXTRACT(properties, '$.allowNewSession') as "allow_new_session",
              JSON_EXTRACT(properties, '$.virtualMachineId') as "virtual_machine_id",
              JSON_EXTRACT(properties, '$.resourceId') as "resource_id",
              JSON_EXTRACT(properties, '$.assignedUser') as "assigned_user",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.statusTimestamp') as "status_timestamp",
              JSON_EXTRACT(properties, '$.osVersion') as "os_version",
              JSON_EXTRACT(properties, '$.sxSStackVersion') as "sx_s_stack_version",
              JSON_EXTRACT(properties, '$.updateState') as "update_state",
              JSON_EXTRACT(properties, '$.lastUpdateTime') as "last_update_time",
              JSON_EXTRACT(properties, '$.updateErrorMessage') as "update_error_message",
              JSON_EXTRACT(properties, '$.lastSessionHostUpdateTime') as "last_session_host_update_time",
              JSON_EXTRACT(properties, '$.sessionHostConfiguration') as "session_host_configuration",
              JSON_EXTRACT(properties, '$.sessionHostHealthCheckResults') as "session_host_health_check_results",
              subscriptionId,
              resourceGroupName,
              hostPoolName,
              sessionHostName
              FROM azure.desktop_virtualization.session_hosts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.lastHeartBeat') as "last_heart_beat",
                json_extract_path_text(properties, '$.sessions') as "sessions",
                json_extract_path_text(properties, '$.agentVersion') as "agent_version",
                json_extract_path_text(properties, '$.allowNewSession') as "allow_new_session",
                json_extract_path_text(properties, '$.virtualMachineId') as "virtual_machine_id",
                json_extract_path_text(properties, '$.resourceId') as "resource_id",
                json_extract_path_text(properties, '$.assignedUser') as "assigned_user",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.statusTimestamp') as "status_timestamp",
                json_extract_path_text(properties, '$.osVersion') as "os_version",
                json_extract_path_text(properties, '$.sxSStackVersion') as "sx_s_stack_version",
                json_extract_path_text(properties, '$.updateState') as "update_state",
                json_extract_path_text(properties, '$.lastUpdateTime') as "last_update_time",
                json_extract_path_text(properties, '$.updateErrorMessage') as "update_error_message",
                json_extract_path_text(properties, '$.lastSessionHostUpdateTime') as "last_session_host_update_time",
                json_extract_path_text(properties, '$.sessionHostConfiguration') as "session_host_configuration",
                json_extract_path_text(properties, '$.sessionHostHealthCheckResults') as "session_host_health_check_results",
                subscriptionId,
                resourceGroupName,
                hostPoolName,
                sessionHostName
                FROM azure.desktop_virtualization.session_hosts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_msix_packages:
      id: azure.desktop_virtualization.vw_msix_packages
      name: vw_msix_packages
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.imagePath') as "image_path",
              JSON_EXTRACT(properties, '$.packageName') as "package_name",
              JSON_EXTRACT(properties, '$.packageFamilyName') as "package_family_name",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.packageRelativePath') as "package_relative_path",
              JSON_EXTRACT(properties, '$.isRegularRegistration') as "is_regular_registration",
              JSON_EXTRACT(properties, '$.isActive') as "is_active",
              JSON_EXTRACT(properties, '$.packageDependencies') as "package_dependencies",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.lastUpdated') as "last_updated",
              JSON_EXTRACT(properties, '$.packageApplications') as "package_applications",
              subscriptionId,
              resourceGroupName,
              hostPoolName,
              msixPackageFullName
              FROM azure.desktop_virtualization.msix_packages
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.imagePath') as "image_path",
                json_extract_path_text(properties, '$.packageName') as "package_name",
                json_extract_path_text(properties, '$.packageFamilyName') as "package_family_name",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.packageRelativePath') as "package_relative_path",
                json_extract_path_text(properties, '$.isRegularRegistration') as "is_regular_registration",
                json_extract_path_text(properties, '$.isActive') as "is_active",
                json_extract_path_text(properties, '$.packageDependencies') as "package_dependencies",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.lastUpdated') as "last_updated",
                json_extract_path_text(properties, '$.packageApplications') as "package_applications",
                subscriptionId,
                resourceGroupName,
                hostPoolName,
                msixPackageFullName
                FROM azure.desktop_virtualization.msix_packages
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hostPoolName = 'replace-me';
    vw_app_attach_packages:
      id: azure.desktop_virtualization.vw_app_attach_packages
      name: vw_app_attach_packages
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.image') as "image",
              JSON_EXTRACT(properties, '$.hostPoolReferences') as "host_pool_references",
              JSON_EXTRACT(properties, '$.keyVaultURL') as "key_vault_url",
              JSON_EXTRACT(properties, '$.failHealthCheckOnStagingFailure') as "fail_health_check_on_staging_failure",
              JSON_EXTRACT(properties, '$.packageOwnerName') as "package_owner_name",
              JSON_EXTRACT(properties, '$.packageLookbackUrl') as "package_lookback_url",
              JSON_EXTRACT(properties, '$.customData') as "custom_data",
              subscriptionId,
              resourceGroupName,
              appAttachPackageName
              FROM azure.desktop_virtualization.app_attach_packages
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.image') as "image",
                json_extract_path_text(properties, '$.hostPoolReferences') as "host_pool_references",
                json_extract_path_text(properties, '$.keyVaultURL') as "key_vault_url",
                json_extract_path_text(properties, '$.failHealthCheckOnStagingFailure') as "fail_health_check_on_staging_failure",
                json_extract_path_text(properties, '$.packageOwnerName') as "package_owner_name",
                json_extract_path_text(properties, '$.packageLookbackUrl') as "package_lookback_url",
                json_extract_path_text(properties, '$.customData') as "custom_data",
                subscriptionId,
                resourceGroupName,
                appAttachPackageName
                FROM azure.desktop_virtualization.app_attach_packages
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.DesktopVirtualization/operations?api-version=2024-04-08-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: List all of the available operations the Desktop Virtualization resource provider supports.
      parameters: []
      responses:
        '200':
          description: Successfully retrieved operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderOperationList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}?api-version=2024-04-08-preview:
    get:
      tags:
        - Workspace
      operationId: Workspaces_Get
      description: Get a workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Successfully retrieved workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Workspace
      operationId: Workspaces_CreateOrUpdate
      description: Create or update a workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: Object containing Workspace definitions.
        required: true
        x-ms-requestBody-name: workspace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: Successfully updated workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '201':
          description: Successfully created workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Workspace
      operationId: Workspaces_Delete
      description: Remove a workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Successfully deleted workspace.
        '204':
          description: Workspace does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Workspace
      operationId: Workspaces_Update
      description: Update a workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: Object containing Workspace definitions.
        required: false
        x-ms-requestBody-name: workspace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacePatch'
      responses:
        '200':
          description: Successfully updated workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections?api-version=2024-04-08-preview:
    get:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_ListByWorkspace
      description: List private endpoint connections.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Successfully retrieved connection list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResultWithSystemData'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-04-08-preview:
    get:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_GetByWorkspace
      description: Get a private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: Successfully retrieved the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionWithSystemData'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
    delete:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_DeleteByWorkspace
      description: Remove a connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: Successfully removed.
        '204':
          description: Connection does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
    put:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_UpdateByWorkspace
      description: Approve or reject a private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: Object containing the updated connection.
        required: true
        x-ms-requestBody-name: connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionWithSystemData'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateLinkResources?api-version=2024-04-08-preview:
    get:
      tags:
        - PrivateLink
      operationId: PrivateLinkResources_ListByWorkspace
      description: List the private link resources available for this workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved the list of resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces?api-version=2024-04-08-preview:
    get:
      tags:
        - Workspace
      operationId: Workspaces_ListByResourceGroup
      description: List workspaces.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved workspaces in resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces?api-version=2024-04-08-preview:
    get:
      tags:
        - Workspace
      operationId: Workspaces_ListBySubscription
      description: List workspaces in subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved workspaces in subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlan
      operationId: ScalingPlans_Get
      description: Get a scaling plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
      responses:
        '200':
          description: Successfully retrieved scaling plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlan'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ScalingPlan
      operationId: ScalingPlans_Create
      description: Create or update a scaling plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
      requestBody:
        description: Object containing scaling plan definitions.
        required: true
        x-ms-requestBody-name: scalingPlan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalingPlan'
      responses:
        '200':
          description: Successfully updated scaling plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlan'
        '201':
          description: Successfully created scaling plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlan'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ScalingPlan
      operationId: ScalingPlans_Delete
      description: Remove a scaling plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
      responses:
        '200':
          description: Successfully deleted scaling plan.
        '204':
          description: Scaling plan does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ScalingPlan
      operationId: ScalingPlans_Update
      description: Update a scaling plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
      requestBody:
        description: Object containing scaling plan definitions.
        required: false
        x-ms-requestBody-name: scalingPlan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalingPlanPatch'
      responses:
        '200':
          description: Successfully updated scaling plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlan'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlan
      operationId: ScalingPlans_ListByResourceGroup
      description: List scaling plans.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved scaling plans in resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/pooledSchedules/{scalingPlanScheduleName}?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlanPooledSchedule
      operationId: ScalingPlanPooledSchedules_Get
      description: Get a ScalingPlanPooledSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      responses:
        '200':
          description: Successfully retrieved ScalingPlanPooledSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPooledSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ScalingPlanPooledSchedule
      operationId: ScalingPlanPooledSchedules_Create
      description: Create or update a ScalingPlanPooledSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      requestBody:
        description: Object containing ScalingPlanPooledSchedule definitions.
        required: true
        x-ms-requestBody-name: scalingPlanSchedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalingPlanPooledSchedule'
      responses:
        '200':
          description: Successfully updated ScalingPlanPooledSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPooledSchedule'
        '201':
          description: Successfully created ScalingPlanPooledSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPooledSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ScalingPlanPooledSchedule
      operationId: ScalingPlanPooledSchedules_Delete
      description: Remove a ScalingPlanPooledSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      responses:
        '200':
          description: Successfully removed ScalingPlanPooledSchedule.
        '204':
          description: ScalingPlanPooledSchedule does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ScalingPlanPooledSchedule
      operationId: ScalingPlanPooledSchedules_Update
      description: Update a ScalingPlanPooledSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      requestBody:
        description: Object containing ScalingPlanPooledSchedule definitions.
        required: false
        x-ms-requestBody-name: scalingPlanSchedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalingPlanPooledSchedulePatch'
      responses:
        '200':
          description: Successfully updated ScalingPlanPooledSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPooledSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/pooledSchedules?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlanPooledSchedule
      operationId: ScalingPlanPooledSchedules_List
      description: List ScalingPlanPooledSchedules.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved ScalingPlanPooledSchedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPooledScheduleList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/personalSchedules/{scalingPlanScheduleName}?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlanPersonalSchedule
      operationId: ScalingPlanPersonalSchedules_Get
      description: Get a ScalingPlanPersonalSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      responses:
        '200':
          description: Successfully retrieved ScalingPlanPersonalSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPersonalSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ScalingPlanPersonalSchedule
      operationId: ScalingPlanPersonalSchedules_Create
      description: Create or update a ScalingPlanPersonalSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      requestBody:
        description: Object containing ScalingPlanPersonalSchedule definitions.
        required: true
        x-ms-requestBody-name: scalingPlanSchedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalingPlanPersonalSchedule'
      responses:
        '200':
          description: Successfully updated ScalingPlanPersonalSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPersonalSchedule'
        '201':
          description: Successfully created ScalingPlanPersonalSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPersonalSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ScalingPlanPersonalSchedule
      operationId: ScalingPlanPersonalSchedules_Delete
      description: Remove a ScalingPlanPersonalSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      responses:
        '200':
          description: Successfully removed ScalingPlanPersonalSchedule.
        '204':
          description: ScalingPlanPersonalSchedule does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ScalingPlanPersonalSchedule
      operationId: ScalingPlanPersonalSchedules_Update
      description: Update a ScalingPlanPersonalSchedule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - $ref: '#/components/parameters/ScalingPlanScheduleNameParameter'
      requestBody:
        description: Object containing ScalingPlanPersonalSchedule definitions.
        required: false
        x-ms-requestBody-name: scalingPlanSchedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalingPlanPersonalSchedulePatch'
      responses:
        '200':
          description: Successfully updated ScalingPlanPersonalSchedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPersonalSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/personalSchedules?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlanPersonalSchedule
      operationId: ScalingPlanPersonalSchedules_List
      description: List ScalingPlanPersonalSchedules.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScalingPlanNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved ScalingPlanPersonalSchedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanPersonalScheduleList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlan
      operationId: ScalingPlans_ListBySubscription
      description: List scaling plans in subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved scaling plans in subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}?api-version=2024-04-08-preview:
    get:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroups_Get
      description: Get an application group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
      responses:
        '200':
          description: Successfully retrieved application group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroup'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroups_CreateOrUpdate
      description: Create or update an applicationGroup.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
      requestBody:
        description: Object containing ApplicationGroup definitions.
        required: true
        x-ms-requestBody-name: applicationGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroup'
      responses:
        '200':
          description: Successfully updated application group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroup'
        '201':
          description: Successfully created application group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroup'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroups_Delete
      description: Remove an applicationGroup.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
      responses:
        '200':
          description: Successfully removed application group.
        '204':
          description: Application group does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroups_Update
      description: Update an applicationGroup.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
      requestBody:
        description: Object containing ApplicationGroup definitions.
        required: false
        x-ms-requestBody-name: applicationGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupPatch'
      responses:
        '200':
          description: Successfully updated application group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroup'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups?api-version=2024-04-08-preview:
    get:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroups_ListByResourceGroup
      description: List applicationGroups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $filter
          in: query
          description: OData filter expression. Valid properties for filtering are applicationGroupType.
          required: false
          schema:
            type: string
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved application groups in resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups?api-version=2024-04-08-preview:
    get:
      tags:
        - ApplicationGroup
      operationId: ApplicationGroups_ListBySubscription
      description: List applicationGroups in subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: OData filter expression. Valid properties for filtering are applicationGroupType.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved application groups in subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/startMenuItems?api-version=2024-04-08-preview:
    get:
      tags:
        - StartMenuItem
      operationId: StartMenuItems_List
      description: List start menu items in the given application group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved start menu items in application group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMenuItemList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications/{applicationName}?api-version=2024-04-08-preview:
    get:
      tags:
        - Application
      operationId: Applications_Get
      description: Get an application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      responses:
        '200':
          description: Successfully retrieved application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Application
      operationId: Applications_CreateOrUpdate
      description: Create or update an application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      requestBody:
        description: Object containing Application definitions.
        required: true
        x-ms-requestBody-name: application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '200':
          description: Successfully updated application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '201':
          description: Successfully created application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Application
      operationId: Applications_Delete
      description: Remove an application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      responses:
        '200':
          description: Successfully removed application.
        '204':
          description: Application does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Application
      operationId: Applications_Update
      description: Update an application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
      requestBody:
        description: Object containing Application definitions.
        required: false
        x-ms-requestBody-name: application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationPatch'
      responses:
        '200':
          description: Successfully updated application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications?api-version=2024-04-08-preview:
    get:
      tags:
        - Application
      operationId: Applications_List
      description: List applications.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved applications in application group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops/{desktopName}?api-version=2024-04-08-preview:
    get:
      tags:
        - Desktop
      operationId: Desktops_Get
      description: Get a desktop.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/DesktopNameParameter'
      responses:
        '200':
          description: Successfully retrieved desktop.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desktop'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Desktop
      operationId: Desktops_Update
      description: Update a desktop.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - $ref: '#/components/parameters/DesktopNameParameter'
      requestBody:
        description: Object containing Desktop definitions.
        required: false
        x-ms-requestBody-name: desktop
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesktopPatch'
      responses:
        '200':
          description: Successfully updated desktop.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desktop'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops?api-version=2024-04-08-preview:
    get:
      tags:
        - Desktop
      operationId: Desktops_List
      description: List desktops.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApplicationGroupNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved desktops in application group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesktopList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}?api-version=2024-04-08-preview:
    get:
      tags:
        - HostPool
      operationId: HostPools_Get
      description: Get a host pool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved host pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostPool'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - HostPool
      operationId: HostPools_CreateOrUpdate
      description: Create or update a host pool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing HostPool definitions.
        required: true
        x-ms-requestBody-name: hostPool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostPool'
      responses:
        '200':
          description: Successfully updated host pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostPool'
        '201':
          description: Successfully created host pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostPool'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - HostPool
      operationId: HostPools_Delete
      description: Remove a host pool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - name: force
          in: query
          description: Force flag to delete sessionHost.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully removed host pool.
        '204':
          description: Host pool does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - HostPool
      operationId: HostPools_Update
      description: Update a host pool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing HostPool definitions.
        required: false
        x-ms-requestBody-name: hostPool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostPoolPatch'
      responses:
        '200':
          description: Successfully updated host pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostPool'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools?api-version=2024-04-08-preview:
    get:
      tags:
        - HostPool
      operationId: HostPools_ListByResourceGroup
      description: List hostPools.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved host pool in resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostPoolList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools?api-version=2024-04-08-preview:
    get:
      tags:
        - HostPool
      operationId: HostPools_List
      description: List hostPools in subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved host pool in subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostPoolList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostManagements/default?api-version=2024-04-08-preview:
    get:
      tags:
        - SessionHostManagements
      operationId: SessionHostManagements_Get
      description: Get a SessionHostManagement.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved sessionHostManagement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostManagement'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - SessionHostManagement
      operationId: SessionHostManagements_CreateOrUpdate
      description: Create or update a SessionHostManagement.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing SessionHostManagement definitions.
        required: true
        x-ms-requestBody-name: sessionHostManagement
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionHostManagement'
      responses:
        '200':
          description: Successfully updated SessionHostManagement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostManagement'
        '201':
          description: Successfully created SessionHostManagement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostManagement'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - SessionHostManagement
      operationId: SessionHostManagements_Update
      description: Update a SessionHostManagement.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing SessionHostManagement definitions.
        required: false
        x-ms-requestBody-name: sessionHostManagement
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionHostManagementPatch'
      responses:
        '200':
          description: Update SessionHostManagement success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostManagement'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostManagements?api-version=2024-04-08-preview:
    get:
      tags:
        - SessionHostManagements
      operationId: SessionHostManagements_ListByHostPool
      description: List SessionHostManagements by hostPool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved SessionHostManagements in HostPool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostManagementList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostManagements/default/initiateSessionHostUpdate?api-version=2024-04-08-preview:
    post:
      tags:
        - SessionHostManagement
      operationId: InitiateSessionHostUpdate_Post
      description: Initiates a hostpool update or schedule an update for the future.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing the definition for properties to be used in the sessionHostUpdate validation.
        x-ms-requestBody-name: updateSessionHostsRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionHostsRequestBody'
      responses:
        '200':
          description: Successfully initiated hostpool update.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostManagements/default/controlSessionHostUpdate?api-version=2024-04-08-preview:
    post:
      tags:
        - SessionHostManagement
      operationId: ControlSessionHostUpdate_Post
      description: Control update of a hostpool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing control action for hostpool update.
        required: true
        x-ms-requestBody-name: hostPoolUpdateControlParameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostPoolUpdateControlParameter'
      responses:
        '202':
          description: Successfully controlled hostpool update.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostManagements/default/sessionHostUpdateStatuses/default?api-version=2024-04-08-preview:
    get:
      tags:
        - SessionHostManagement
      operationId: SessionHostManagementsUpdateStatus_Get
      description: Get the session host update status for a given hostpool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved the session host update status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostManagementUpdateStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostConfigurations/default?api-version=2024-04-08-preview:
    put:
      tags:
        - SessionHostConfiguration
      operationId: SessionHostConfigurations_CreateOrUpdate
      description: Create or update a SessionHostConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing SessionHostConfiguration definitions.
        required: true
        x-ms-requestBody-name: sessionHostConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionHostConfiguration'
      responses:
        '200':
          description: Successfully initiated SessionHostConfiguration Update validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostConfiguration'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '201':
          description: Successfully created Session Host Configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostConfiguration'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - SessionHostConfiguration
      operationId: SessionHostConfigurations_Update
      description: Update a SessionHostConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing SessionHostConfiguration definitions.
        required: false
        x-ms-requestBody-name: sessionHostConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionHostConfigurationPatch'
      responses:
        '200':
          description: Successfully created SessionHostConfiguration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostConfiguration'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '202':
          description: Successfully created SessionHostConfiguration.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - SessionHostConfiguration
      operationId: SessionHostConfigurations_Get
      description: Get a SessionHostConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved sessionHostConfiguration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostConfigurations?api-version=2024-04-08-preview:
    get:
      tags:
        - SessionHostConfiguration
      operationId: SessionHostConfigurations_ListByHostPool
      description: List sessionHostConfigurations.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved sessionHostConfigurations in HostPool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostConfigurationList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/activeSessionHostConfigurations/default?api-version=2024-04-08-preview:
    get:
      tags:
        - ActiveSessionHostConfiguration
      operationId: ActiveSessionHostConfigurations_Get
      description: Get the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved activeSessionHostConfiguration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveSessionHostConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/activeSessionHostConfigurations?api-version=2024-04-08-preview:
    get:
      tags:
        - ActiveSessionHostConfiguration
      operationId: ActiveSessionHostConfigurations_ListByHostPool
      description: List activeSessionHostConfigurations.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved activeSessionHostConfigurations in HostPool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveSessionHostConfigurationList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateLinkResources?api-version=2024-04-08-preview:
    get:
      tags:
        - PrivateLink
      operationId: PrivateLinkResources_ListByHostPool
      description: List the private link resources available for this hostpool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved the list of resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/retrieveRegistrationToken?api-version=2024-04-08-preview:
    post:
      tags:
        - HostPool
      operationId: HostPools_RetrieveRegistrationToken
      description: Registration token of the host pool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved host pool in resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationInfo'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/listRegistrationTokens?api-version=2024-04-08-preview:
    post:
      tags:
        - HostPool
      operationId: HostPoolsRegistrationTokens_List
      description: Operation to list the RegistrationTokens associated with the HostPool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      responses:
        '200':
          description: Successfully retrieved host pool in resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationTokenList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: HostPools_ListRegistrationTokens
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/userSessions?api-version=2024-04-08-preview:
    get:
      tags:
        - UserSession
      operationId: UserSessions_ListByHostPool
      description: List userSessions.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - name: $filter
          in: query
          description: OData filter expression. Valid properties for filtering are userprincipalname and sessionstate.
          required: false
          schema:
            type: string
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved user sessions in host pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSessionList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}?api-version=2024-04-08-preview:
    get:
      tags:
        - SessionHost
      operationId: SessionHosts_Get
      description: Get a session host.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
      responses:
        '200':
          description: Successfully retrieved session host.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHost'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - SessionHost
      operationId: SessionHosts_Delete
      description: Remove a SessionHost.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
        - name: force
          in: query
          description: Force flag to force sessionHost deletion even when userSession exists.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully removed session host.
        '204':
          description: Session host does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - SessionHost
      operationId: SessionHosts_Update
      description: Update a session host.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
        - name: force
          in: query
          description: Force flag to update assign, unassign or reassign personal desktop.
          required: false
          schema:
            type: boolean
      requestBody:
        description: Object containing SessionHost definitions.
        required: false
        x-ms-requestBody-name: sessionHost
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionHostPatch'
      responses:
        '200':
          description: Successfully updated session host.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHost'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts?api-version=2024-04-08-preview:
    get:
      tags:
        - SessionHost
      operationId: SessionHosts_List
      description: List sessionHosts.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/vmPathParameter'
      responses:
        '200':
          description: Successfully retrieved session hosts in host pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHostList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/retryProvisioning?api-version=2024-04-08-preview:
    post:
      tags:
        - SessionHost
      operationId: SessionHost_RetryProvisioning
      description: Retry provisioning on a SessionHost.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
      responses:
        '200':
          description: Successfully started provisioning retry on the sessionHost.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages/{msixPackageFullName}?api-version=2024-04-08-preview:
    get:
      tags:
        - MSIXPackage
      operationId: MSIXPackages_Get
      description: Get a msixpackage.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/MSIXPackageFullNameParameter'
      responses:
        '200':
          description: Successfully retrieved MSIX Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSIXPackage'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - MSIXPackage
      operationId: MSIXPackages_CreateOrUpdate
      description: Create or update a MSIX package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/MSIXPackageFullNameParameter'
      requestBody:
        description: Object containing  MSIX Package definitions.
        required: true
        x-ms-requestBody-name: msixPackage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSIXPackage'
      responses:
        '200':
          description: Successfully updated  MSIX Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSIXPackage'
        '201':
          description: Successfully created  MSIX Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSIXPackage'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - MSIXPackage
      operationId: MSIXPackages_Delete
      description: Remove an MSIX Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/MSIXPackageFullNameParameter'
      responses:
        '200':
          description: Successfully removed MSIX Package.
        '204':
          description: MSIX Package does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - MSIXPackage
      operationId: MSIXPackages_Update
      description: Update an  MSIX Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/MSIXPackageFullNameParameter'
      requestBody:
        description: Object containing MSIX Package definitions.
        required: false
        x-ms-requestBody-name: msixPackage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSIXPackagePatch'
      responses:
        '200':
          description: Successfully updated MSIX Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSIXPackage'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages?api-version=2024-04-08-preview:
    get:
      tags:
        - MSIXPackage
      operationId: MSIXPackages_List
      description: List MSIX packages in hostpool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved MSIX Packages in hostpool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSIXPackageList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/importAppAttachPackageInfo?api-version=2024-04-08-preview:
    post:
      tags:
        - AppAttachPackageInfo
      operationId: AppAttachPackage_ImportInfo
      description: Gets information from a package given the path to the package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing URI to package image and other optional properties
        required: true
        x-ms-requestBody-name: importPackageInfoRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportPackageInfoRequest'
      responses:
        '200':
          description: Successfully retrieved packages in specified Image Path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppAttachPackageList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: AppAttachPackageInfo_Import
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/expandMsixImage?api-version=2024-04-08-preview:
    post:
      tags:
        - MsixImage
      operationId: MsixImages_Expand
      description: Expands and Lists MSIX packages in an Image, given the Image Path.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
      requestBody:
        description: Object containing URI to MSIX Image
        required: true
        x-ms-requestBody-name: msixImageURI
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSIXImageURI'
      responses:
        '200':
          description: Successfully retrieved MSIX packages in specified Image Path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpandMsixImageList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/appAttachPackages/{appAttachPackageName}?api-version=2024-04-08-preview:
    get:
      tags:
        - AppAttachPackage
      operationId: AppAttachPackage_Get
      description: Get an app attach package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AppAttachPackageNameParameter'
      responses:
        '200':
          description: Successfully retrieved App Attach Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppAttachPackage'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - AppAttachPackage
      operationId: AppAttachPackage_CreateOrUpdate
      description: Create or update an App Attach package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AppAttachPackageNameParameter'
      requestBody:
        description: Object containing App Attach Package definitions.
        required: true
        x-ms-requestBody-name: appAttachPackage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppAttachPackage'
      responses:
        '200':
          description: Successfully updated App Attach Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppAttachPackage'
        '201':
          description: Successfully created App Attach Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppAttachPackage'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - AppAttachPackage
      operationId: AppAttachPackage_Delete
      description: Remove an App Attach Package.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AppAttachPackageNameParameter'
        - name: force
          in: query
          description: Force flag to delete App Attach package.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully deleted App Attach Package.
        '204':
          description: App Attach Package does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - AppAttachPackage
      operationId: AppAttachPackage_Update
      description: Update an App Attach Package
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AppAttachPackageNameParameter'
      requestBody:
        description: Object containing App Attach Package definition.
        required: false
        x-ms-requestBody-name: appAttachPackagePatch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppAttachPackagePatch'
      responses:
        '200':
          description: Successfully updated App Attach Package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppAttachPackage'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/appAttachPackages?api-version=2024-04-08-preview:
    get:
      tags:
        - AppAttachPackage
      operationId: AppAttachPackage_ListByResourceGroup
      description: List App Attach packages in resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $filter
          in: query
          description: OData filter expression. Valid properties for filtering are package name, host pool, package owner name, and custom data.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved App Attach Packages in resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppAttachPackageList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/appAttachPackages?api-version=2024-04-08-preview:
    get:
      tags:
        - AppAttachPackage
      operationId: AppAttachPackage_ListBySubscription
      description: List App Attach packages in subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: OData filter expression. Valid properties for filtering are package name, resource group, host pool, package owner name, and custom data.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved App Attach Packages in subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppAttachPackageList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}?api-version=2024-04-08-preview:
    get:
      tags:
        - UserSession
      operationId: UserSessions_Get
      description: Get a userSession.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
        - $ref: '#/components/parameters/UserSessionIdParameter'
      responses:
        '200':
          description: Successfully retrieved user session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - UserSession
      operationId: UserSessions_Delete
      description: Remove a userSession.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
        - $ref: '#/components/parameters/UserSessionIdParameter'
        - name: force
          in: query
          description: Force flag to login off userSession.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully removed user session.
        '204':
          description: User session does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions?api-version=2024-04-08-preview:
    get:
      tags:
        - UserSession
      operationId: UserSessions_List
      description: List userSessions.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved user sessions in session host.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSessionList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/disconnect?api-version=2024-04-08-preview:
    post:
      tags:
        - UserSession
      operationId: UserSessions_Disconnect
      description: Disconnect a userSession.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
        - $ref: '#/components/parameters/UserSessionIdParameter'
      responses:
        '200':
          description: Successfully disconnected user session.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/sendMessage?api-version=2024-04-08-preview:
    post:
      tags:
        - UserSession
      operationId: UserSessions_SendMessage
      description: Send a message to a user.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/SessionHostNameParameter'
        - $ref: '#/components/parameters/UserSessionIdParameter'
      requestBody:
        description: Object containing message includes title and message body
        required: false
        x-ms-requestBody-name: sendMessage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessage'
      responses:
        '200':
          description: Successfully sent message to user session.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/scalingPlans?api-version=2024-04-08-preview:
    get:
      tags:
        - ScalingPlan
      operationId: ScalingPlans_ListByHostPool
      description: List scaling plan associated with hostpool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved scaling plan associated with hostpool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalingPlanList'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections?api-version=2024-04-08-preview:
    get:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_ListByHostPool
      description: List private endpoint connections associated with hostpool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            format: int32
            type: integer
        - name: isDescending
          in: query
          description: Indicates whether the collection is descending.
          required: false
          schema:
            type: boolean
        - name: initialSkip
          in: query
          description: Initial number of items to skip.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: Successfully retrieved connection list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResultWithSystemData'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-04-08-preview:
    get:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_GetByHostPool
      description: Get a private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: Successfully retrieved the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionWithSystemData'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
    delete:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_DeleteByHostPool
      description: Remove a connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: Successfully removed.
        '204':
          description: Connection does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
    put:
      tags:
        - PrivateLink
      operationId: PrivateEndpointConnections_UpdateByHostPool
      description: Approve or reject a private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/HostPoolNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: Object containing the updated connection.
        required: true
        x-ms-requestBody-name: connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionWithSystemData'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          x-ms-error-response: true
