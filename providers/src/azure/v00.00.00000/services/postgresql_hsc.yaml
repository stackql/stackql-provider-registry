openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: DB for PostgreSql HSC
  description: DB for PostgreSql HSC
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ClusterNameParameter:
      name: clusterName
      in: path
      description: The name of the cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^(?![0-9]+$)(?!-)[a-z0-9-]{3,40}(?<!-)$
        minLength: 3
        maxLength: 40
        type: string
    ServerNameParameter:
      name: serverName
      in: path
      description: The name of the server.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        minLength: 1
        maxLength: 90
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the cluster configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        minLength: 1
        maxLength: 90
        type: string
    FirewallRuleNameParameter:
      name: firewallRuleName
      in: path
      description: The name of the cluster firewall rule.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        type: string
    RoleNameParameter:
      name: roleName
      in: path
      description: The name of the cluster role.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        type: string
    PrivateLinkResourceName:
      name: privateLinkResourceName
      in: path
      description: The name of the private link resource.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]+$
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ServerRole:
      type: string
      description: The role of a server.
      enum:
        - Coordinator
        - Worker
      x-ms-enum:
        name: ServerRole
        modelAsString: true
    ServerProperties:
      type: object
      description: The properties of a server.
      properties:
        serverEdition:
          type: string
          description: The edition of a server.
        storageQuotaInMb:
          type: integer
          format: int32
          description: The storage of a server in MB.
        vCores:
          type: integer
          format: int32
          description: The vCores count of a server.
        enableHa:
          type: boolean
          description: If high availability (HA) is enabled or not for the server.
        enablePublicIpAccess:
          type: boolean
          description: If public access is enabled on server.
          readOnly: true
        isReadOnly:
          type: boolean
          description: If server database is set to read-only by system maintenance depending on high disk space usage.
          readOnly: true
        administratorLogin:
          type: string
          description: The administrator's login name of the servers in the cluster.
          readOnly: true
    ServerNameItem:
      description: The name object for a server.
      type: object
      properties:
        name:
          type: string
          description: The name of a server.
        fullyQualifiedDomainName:
          type: string
          description: The fully qualified domain name of a server.
          readOnly: true
    ClusterServerProperties:
      description: The properties of a server in cluster.
      properties:
        serverEdition:
          type: string
          description: The edition of a server.
        storageQuotaInMb:
          type: integer
          format: int32
          description: The storage of a server in MB.
        vCores:
          type: integer
          format: int32
          description: The vCores count of a server.
        enableHa:
          type: boolean
          description: If high availability (HA) is enabled or not for the server.
        enablePublicIpAccess:
          type: boolean
          description: If public access is enabled on server.
          readOnly: true
        isReadOnly:
          type: boolean
          description: If server database is set to read-only by system maintenance depending on high disk space usage.
          readOnly: true
        administratorLogin:
          type: string
          description: The administrator's login name of the servers in the cluster.
          readOnly: true
        fullyQualifiedDomainName:
          type: string
          description: The fully qualified domain name of a server.
          readOnly: true
        role:
          $ref: '#/components/schemas/ServerRole'
          description: The role of server in the cluster.
        state:
          type: string
          description: A state of a cluster/server that is visible to user.
          readOnly: true
        haState:
          type: string
          description: A state of HA feature for the cluster.
          readOnly: true
        availabilityZone:
          type: string
          description: Availability Zone information of the server.
        postgresqlVersion:
          type: string
          description: The major PostgreSQL version of server.
        citusVersion:
          type: string
          description: The Citus extension version of server.
      type: object
    ClusterServer:
      description: Represents a server in a cluster.
      properties:
        properties:
          $ref: '#/components/schemas/ClusterServerProperties'
          description: The properties of a server in a cluster.
          x-ms-client-flatten: true
      type: object
    ClusterServerListResult:
      description: A list of servers in a cluster.
      type: object
      properties:
        value:
          type: array
          description: The list of servers in a cluster.
          items:
            $ref: '#/components/schemas/ClusterServer'
    ClusterForUpdate:
      description: Represents a cluster for update.
      properties:
        properties:
          $ref: '#/components/schemas/ClusterPropertiesForUpdate'
          x-ms-client-flatten: true
          description: Properties of the cluster.
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Describes the identity of the cluster.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      type: object
    ClusterPropertiesForUpdate:
      description: The properties used to update a cluster.
      type: object
      properties:
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
          description: The password of the administrator login. Each cluster is created with pre-defined administrative role called ‘citus’. 
        postgresqlVersion:
          type: string
          description: The major PostgreSQL version on all cluster servers.
        citusVersion:
          type: string
          description: The Citus extension version on all cluster servers.
        enableShardsOnCoordinator:
          type: boolean
          description: If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard rebalancing after value is changed.
        enableHa:
          type: boolean
          description: If high availability (HA) is enabled or not for the cluster.
        preferredPrimaryZone:
          type: string
          description: Preferred primary availability zone (AZ) for all cluster servers.
        coordinatorServerEdition:
          type: string
          description: 'The edition of the coordinator (default: GeneralPurpose).'
        coordinatorStorageQuotaInMb:
          type: integer
          format: int32
          description: The storage of the coordinator in MB.
        coordinatorVCores:
          type: integer
          format: int32
          description: 'The vCores count of the coordinator (max: 96).'
        coordinatorEnablePublicIpAccess:
          type: boolean
          description: If public access is enabled on coordinator.
        nodeServerEdition:
          type: string
          description: 'The edition of a node (default: MemoryOptimized).'
        nodeCount:
          type: integer
          format: int32
          description: Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1.
        nodeStorageQuotaInMb:
          type: integer
          format: int32
          description: The storage in MB on each worker node.
        nodeVCores:
          type: integer
          format: int32
          description: 'The compute in vCores on each worker node (max: 104).'
        nodeEnablePublicIpAccess:
          type: boolean
          description: If public access is enabled on worker nodes.
          readOnly: true
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: Maintenance window of a cluster.
    ClusterListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          description: The list of clusters
        nextLink:
          description: The link used to get the next page of cluster list.
          type: string
          readOnly: true
      description: A list of clusters.
    Cluster:
      description: Represents a cluster.
      properties:
        properties:
          $ref: '#/components/schemas/ClusterProperties'
          x-ms-client-flatten: true
          description: Properties of the cluster.
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Describes the identity of the cluster.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ClusterProperties:
      description: Properties of the cluster.
      type: object
      properties:
        aadAuthEnabled:
          type: string
          readOnly: true
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: AadEnabledEnum
            modelAsString: true
          description: Indicates whether the cluster was created using AAD authentication.
        administratorLogin:
          type: string
          description: The administrator's login name of the servers in the cluster.
          readOnly: true
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
          description: The password of the administrator login. Required for creation.
        dataEncryption:
          $ref: '#/components/schemas/DataEncryption'
          description: The data encryption properties of a cluster.
        provisioningState:
          type: string
          description: Provisioning state of the cluster
          readOnly: true
        state:
          type: string
          description: A state of a cluster/server that is visible to user.
          readOnly: true
        postgresqlVersion:
          type: string
          description: The major PostgreSQL version on all cluster servers.
        citusVersion:
          type: string
          description: The Citus extension version on all cluster servers.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: Maintenance window of a cluster.
        preferredPrimaryZone:
          type: string
          description: Preferred primary availability zone (AZ) for all cluster servers.
        enableShardsOnCoordinator:
          type: boolean
          description: If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard rebalancing after value is changed.
        enableHa:
          type: boolean
          description: If high availability (HA) is enabled or not for the cluster.
        coordinatorServerEdition:
          type: string
          description: 'The edition of a coordinator server (default: GeneralPurpose). Required for creation.'
        coordinatorStorageQuotaInMb:
          type: integer
          format: int32
          description: The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
        coordinatorVCores:
          type: integer
          format: int32
          description: 'The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.'
        coordinatorEnablePublicIpAccess:
          type: boolean
          description: If public access is enabled on coordinator.
        nodeServerEdition:
          type: string
          description: 'The edition of a node server (default: MemoryOptimized).'
        nodeCount:
          type: integer
          format: int32
          description: Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1. Required for creation.
        nodeStorageQuotaInMb:
          type: integer
          format: int32
          description: The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
        nodeVCores:
          type: integer
          format: int32
          description: 'The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.'
        nodeEnablePublicIpAccess:
          type: boolean
          description: If public access is enabled on worker nodes.
        serverNames:
          type: array
          description: The list of server names in the cluster
          items:
            $ref: '#/components/schemas/ServerNameItem'
          x-ms-identifiers:
            - name
          readOnly: true
          uniqueItems: true
        sourceResourceId:
          type: string
          description: The resource id of source cluster for read replica clusters.
        sourceLocation:
          type: string
          description: The Azure region of source cluster for read replica clusters.
        passwordEnabled:
          type: string
          readOnly: true
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: PasswordEnabledEnum
            modelAsString: true
          description: Indicates whether the cluster was created with a password or using AAD authentication.
        pointInTimeUTC:
          type: string
          format: date-time
          description: Date and time in UTC (ISO8601 format) for cluster restore.
        readReplicas:
          type: array
          description: The array of read replica clusters.
          items:
            type: string
          readOnly: true
          uniqueItems: true
        earliestRestoreTime:
          type: string
          format: date-time
          description: The earliest restore point time (ISO8601 format) for the cluster.
          readOnly: true
        privateEndpointConnections:
          description: The private endpoint connections for a cluster.
          type: array
          items:
            $ref: '#/components/schemas/SimplePrivateEndpointConnection'
          readOnly: true
        databaseName:
          type: string
          description: The database name of the cluster. Only one database per cluster is supported.
        enableGeoBackup:
          type: boolean
          description: If cluster backup is stored in another Azure region in addition to the copy of the backup stored in the cluster's region. Enabled only at the time of cluster creation.
        authConfig:
          $ref: '#/components/schemas/AuthConfig'
          description: Authentication configuration of a cluster.
    AuthConfig:
      type: object
      description: Authentication configuration of a cluster.
      properties:
        activeDirectoryAuth:
          type: string
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: ActiveDirectoryAuth
            modelAsString: true
        passwordAuth:
          type: string
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: PasswordAuth
            modelAsString: true
    DataEncryption:
      type: object
      description: The data encryption properties of a cluster.
      properties:
        primaryKeyUri:
          type: string
          description: URI for the key in keyvault for data encryption of the primary server.
        primaryUserAssignedIdentityId:
          type: string
          description: Resource Id for the User assigned identity to be used for data encryption of the primary server.
        type:
          type: string
          enum:
            - AzureKeyVault
            - SystemAssigned
          x-ms-enum:
            name: DataEncryptionType
            modelAsString: true
    MaintenanceWindow:
      type: object
      description: Schedule settings for regular cluster updates.
      properties:
        customWindow:
          type: string
          description: Indicates whether custom maintenance window is enabled or not.
        startHour:
          type: integer
          format: int32
          description: Start hour within preferred day of the week for maintenance window.
        startMinute:
          type: integer
          format: int32
          description: Start minute within the start hour for maintenance window.
        dayOfWeek:
          type: integer
          format: int32
          description: Preferred day of the week for maintenance window.
    ConfigurationProperties:
      description: The properties of configuration.
      type: object
      properties:
        description:
          type: string
          description: Description of the configuration.
          readOnly: true
        dataType:
          type: string
          description: Data type of the configuration.
          enum:
            - Boolean
            - Numeric
            - Integer
            - Enumeration
          x-ms-enum:
            name: ConfigurationDataType
            modelAsString: true
          readOnly: true
        allowedValues:
          type: string
          description: Allowed values of the configuration.
          readOnly: true
        requiresRestart:
          type: boolean
          description: If configuration change requires restart.
        serverRoleGroupConfigurations:
          type: array
          description: The list of server role group configuration values.
          items:
            $ref: '#/components/schemas/ServerRoleGroupConfiguration'
          x-ms-identifiers: []
          uniqueItems: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the configuration
          readOnly: true
      required:
        - serverRoleGroupConfigurations
    Configuration:
      description: Represents configuration details for coordinator and node.
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          description: The properties of configuration.
          x-ms-client-flatten: true
      type: object
    ServerRoleGroupConfiguration:
      description: Represents server role group configuration value.
      type: object
      properties:
        role:
          $ref: '#/components/schemas/ServerRole'
          description: The role of servers in the server role group.
        value:
          type: string
          description: Value of the configuration.
        defaultValue:
          type: string
          description: Default value of the configuration.
          readOnly: true
        source:
          type: string
          description: Source of the configuration.
          readOnly: true
      required:
        - role
        - value
    ClusterConfigurationListResult:
      description: A list of cluster configurations.
      type: object
      properties:
        value:
          type: array
          description: The list of cluster configurations.
          items:
            $ref: '#/components/schemas/Configuration'
        nextLink:
          type: string
          description: Link to retrieve next page of results.
          readOnly: true
    ServerConfigurationProperties:
      description: The properties of a configuration.
      type: object
      properties:
        value:
          type: string
          description: Value of the configuration.
        source:
          type: string
          description: Source of the configuration.
          readOnly: true
        description:
          type: string
          description: Description of the configuration.
          readOnly: true
        defaultValue:
          type: string
          description: Default value of the configuration.
          readOnly: true
        dataType:
          type: string
          description: Data type of the configuration.
          enum:
            - Boolean
            - Numeric
            - Integer
            - Enumeration
          x-ms-enum:
            name: ConfigurationDataType
            modelAsString: true
          readOnly: true
        allowedValues:
          type: string
          description: Allowed values of the configuration.
          readOnly: true
        requiresRestart:
          type: boolean
          description: If configuration change requires restart.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the configuration.
          readOnly: true
      required:
        - value
    ServerConfiguration:
      description: Represents a configuration.
      properties:
        properties:
          $ref: '#/components/schemas/ServerConfigurationProperties'
          description: The properties of a configuration.
          x-ms-client-flatten: true
      type: object
    ServerConfigurationListResult:
      description: A list of server configurations.
      type: object
      properties:
        value:
          type: array
          description: The list of server configurations.
          items:
            $ref: '#/components/schemas/ServerConfiguration'
        nextLink:
          type: string
          description: Link to retrieve next page of results.
          readOnly: true
    FirewallRuleProperties:
      description: The properties of a cluster firewall rule.
      type: object
      properties:
        startIpAddress:
          type: string
          description: The start IP address of the cluster firewall rule. Must be IPv4 format.
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
        endIpAddress:
          type: string
          description: The end IP address of the cluster firewall rule. Must be IPv4 format.
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the firewall rule.
          readOnly: true
      required:
        - startIpAddress
        - endIpAddress
    FirewallRule:
      description: Represents a cluster firewall rule.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          x-ms-client-flatten: true
          description: The properties of a firewall rule.
      type: object
    FirewallRuleListResult:
      description: A list of firewall rules.
      type: object
      properties:
        value:
          type: array
          description: The list of firewall rules in a cluster.
          items:
            $ref: '#/components/schemas/FirewallRule'
    IdentityProperties:
      type: object
      description: Describes the identity of the cluster.
      properties:
        type:
          type: string
          enum:
            - UserAssigned
            - SystemAssigned
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
    RoleProperties:
      properties:
        roleType:
          type: string
          enum:
            - user
            - admin
          default: user
          x-ms-enum:
            name: RoleType
            modelAsString: true
        password:
          type: string
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
          description: The password of the cluster role. If an identity is used, password will not be required.
        externalIdentity:
          type: object
          required:
            - objectId
            - principalType
          properties:
            objectId:
              type: string
              format: arm-id
            principalType:
              type: string
              enum:
                - user
                - servicePrincipal
                - group
              x-ms-enum:
                name: PrincipalType
                modelAsString: true
            tenantId:
              type: string
              format: arm-id
          x-ms-client-flatten: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the role
          readOnly: true
      description: The properties of a cluster role.
      type: object
    Role:
      description: Represents a cluster role.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/RoleProperties'
          x-ms-client-flatten: true
          description: The properties of a role.
      type: object
    RoleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: The list of roles in a cluster.
      description: A list of roles.
      type: object
    OperationDisplay:
      description: Display metadata associated with the operation.
      type: object
      properties:
        provider:
          type: string
          description: Operation resource provider name.
          readOnly: true
        resource:
          type: string
          description: Resource on which the operation is performed.
          readOnly: true
        operation:
          type: string
          description: Localized friendly name for the operation.
          readOnly: true
        description:
          type: string
          description: Operation description.
          readOnly: true
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    NameAvailabilityRequest:
      description: Request from client to check cluster name availability.
      type: object
      properties:
        name:
          type: string
          description: Cluster name to verify.
        type:
          type: string
          enum:
            - Microsoft.DBforPostgreSQL/serverGroupsv2
          description: Resource type used for verification.
          x-ms-enum:
            name: CheckNameAvailabilityResourceType
            modelAsString: false
      required:
        - name
        - type
    NameAvailability:
      description: Represents cluster name availability.
      type: object
      properties:
        message:
          type: string
          description: Error message.
        nameAvailable:
          type: boolean
          description: Indicates whether the cluster name is available.
        name:
          type: string
          description: Name of the cluster.
        type:
          type: string
          description: Type of the cluster.
    PrivateEndpointProperty:
      type: object
      description: Property to represent resource id of the private endpoint.
      properties:
        id:
          type: string
          description: Resource id of the private endpoint.
    SimplePrivateEndpointConnection:
      description: A private endpoint connection.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionSimpleProperties'
          x-ms-client-flatten: true
          description: Properties of the private endpoint connection.
      type: object
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connections associated with the specified resource.
    PrivateEndpointConnectionSimpleProperties:
      description: The properties in private endpoint connection
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpointProperty'
          description: Private endpoint which the connection belongs to.
        groupIds:
          type: array
          description: Group ids of the private endpoint connection.
          items:
            type: string
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources.
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Canceled
        - InProgress
        - Failed
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    PromoteRequest:
      description: Request from client to promote geo-redundant replica
      type: object
      properties:
        enableGeoBackup:
          type: boolean
          description: Boolean property to enable geo-redundant replica promotion.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for private endpoint.
      description: The private endpoint resource.
    PrivateEndpointConnection:
      description: The private endpoint connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        groupIds:
          description: The group ids for the private endpoint resource.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The private endpoint resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the private endpoint connection.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource private link DNS zone name.
      description: Properties of a private link resource.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    clusters:
      id: azure.postgresql_hsc.clusters
      name: clusters
      title: clusters
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2?api-version=2023-03-02-preview/get'
            operationId: Clusters_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2?api-version=2023-03-02-preview/get'
            operationId: Clusters_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}?api-version=2023-03-02-preview/put'
            operationId: Clusters_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}?api-version=2023-03-02-preview/get'
            operationId: Clusters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}?api-version=2023-03-02-preview/delete'
            operationId: Clusters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}?api-version=2023-03-02-preview/patch'
            operationId: Clusters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1restart?api-version=2023-03-02-preview/post'
            operationId: Clusters_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1start?api-version=2023-03-02-preview/post'
            operationId: Clusters_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1stop?api-version=2023-03-02-preview/post'
            operationId: Clusters_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        promote_read_replica:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1promote?api-version=2023-03-02-preview/post'
            operationId: Clusters_PromoteReadReplica
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforPostgreSQL~1checkNameAvailability?api-version=2023-03-02-preview/post'
            operationId: Clusters_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailability
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    servers:
      id: azure.postgresql_hsc.servers
      name: servers
      title: servers
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1servers?api-version=2023-03-02-preview/get'
            operationId: Servers_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterServerListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1servers~1{serverName}?api-version=2023-03-02-preview/get'
            operationId: Servers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterServer
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list_by_cluster'
        insert: []
        update: []
        replace: []
        delete: []
    configurations:
      id: azure.postgresql_hsc.configurations
      name: configurations
      title: configurations
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1servers~1{serverName}~1configurations?api-version=2023-03-02-preview/get'
            operationId: Configurations_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerConfigurationListResult
            objectKey: $.value
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1configurations?api-version=2023-03-02-preview/get'
            operationId: Configurations_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterConfigurationListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1configurations~1{configurationName}?api-version=2023-03-02-preview/get'
            operationId: Configurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Configuration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/list_by_server'
          - $ref: '#/components/x-stackQL-resources/configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/configurations/methods/list_by_cluster'
        insert: []
        update: []
        replace: []
        delete: []
    configurations_coordinators:
      id: azure.postgresql_hsc.configurations_coordinators
      name: configurations_coordinators
      title: configurations_coordinators
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1coordinatorConfigurations~1{configurationName}?api-version=2023-03-02-preview/get'
            operationId: ConfigurationsCoordinator_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerConfiguration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations_coordinators/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    configurations_on_coordinators:
      id: azure.postgresql_hsc.configurations_on_coordinators
      name: configurations_on_coordinators
      title: configurations_on_coordinators
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1coordinatorConfigurations~1{configurationName}?api-version=2023-03-02-preview/put'
            operationId: ConfigurationsOnCoordinator_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerConfiguration
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/configurations_on_coordinators/methods/update'
        delete: []
    configurations_nodes:
      id: azure.postgresql_hsc.configurations_nodes
      name: configurations_nodes
      title: configurations_nodes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1nodeConfigurations~1{configurationName}?api-version=2023-03-02-preview/get'
            operationId: ConfigurationsNode_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerConfiguration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations_nodes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    configurations_on_nodes:
      id: azure.postgresql_hsc.configurations_on_nodes
      name: configurations_on_nodes
      title: configurations_on_nodes
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1nodeConfigurations~1{configurationName}?api-version=2023-03-02-preview/put'
            operationId: ConfigurationsOnNode_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerConfiguration
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/configurations_on_nodes/methods/update'
        delete: []
    firewall_rules:
      id: azure.postgresql_hsc.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1firewallRules~1{firewallRuleName}?api-version=2023-03-02-preview/put'
            operationId: FirewallRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1firewallRules~1{firewallRuleName}?api-version=2023-03-02-preview/delete'
            operationId: FirewallRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1firewallRules~1{firewallRuleName}?api-version=2023-03-02-preview/get'
            operationId: FirewallRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRule
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1firewallRules?api-version=2023-03-02-preview/get'
            operationId: FirewallRules_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FirewallRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    roles:
      id: azure.postgresql_hsc.roles
      name: roles
      title: roles
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1roles~1{roleName}?api-version=2023-03-02-preview/get'
            operationId: Roles_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Role
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1roles~1{roleName}?api-version=2023-03-02-preview/put'
            operationId: Roles_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Role
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1roles~1{roleName}?api-version=2023-03-02-preview/delete'
            operationId: Roles_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1roles?api-version=2023-03-02-preview/get'
            operationId: Roles_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RoleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/get'
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/roles/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/roles/methods/delete'
    operations:
      id: azure.postgresql_hsc.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations?api-version=2023-03-02-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connections:
      id: azure.postgresql_hsc.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1privateEndpointConnections?api-version=2023-03-02-preview/get'
            operationId: PrivateEndpointConnections_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-03-02-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-03-02-preview/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-03-02-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.postgresql_hsc.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1privateLinkResources?api-version=2023-03-02-preview/get'
            operationId: PrivateLinkResources_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforPostgreSQL~1serverGroupsv2~1{clusterName}~1privateLinkResources~1{privateLinkResourceName}?api-version=2023-03-02-preview/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_cluster'
        insert: []
        update: []
        replace: []
        delete: []
    vw_clusters:
      id: azure.postgresql_hsc.vw_clusters
      name: vw_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.aadAuthEnabled') as "aad_auth_enabled",
              JSON_EXTRACT(properties, '$.administratorLogin') as "administrator_login",
              JSON_EXTRACT(properties, '$.administratorLoginPassword') as "administrator_login_password",
              JSON_EXTRACT(properties, '$.dataEncryption') as "data_encryption",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.postgresqlVersion') as "postgresql_version",
              JSON_EXTRACT(properties, '$.citusVersion') as "citus_version",
              JSON_EXTRACT(properties, '$.maintenanceWindow') as "maintenance_window",
              JSON_EXTRACT(properties, '$.preferredPrimaryZone') as "preferred_primary_zone",
              JSON_EXTRACT(properties, '$.enableShardsOnCoordinator') as "enable_shards_on_coordinator",
              JSON_EXTRACT(properties, '$.enableHa') as "enable_ha",
              JSON_EXTRACT(properties, '$.coordinatorServerEdition') as "coordinator_server_edition",
              JSON_EXTRACT(properties, '$.coordinatorStorageQuotaInMb') as "coordinator_storage_quota_in_mb",
              JSON_EXTRACT(properties, '$.coordinatorVCores') as "coordinator_vcores",
              JSON_EXTRACT(properties, '$.coordinatorEnablePublicIpAccess') as "coordinator_enable_public_ip_access",
              JSON_EXTRACT(properties, '$.nodeServerEdition') as "node_server_edition",
              JSON_EXTRACT(properties, '$.nodeCount') as "node_count",
              JSON_EXTRACT(properties, '$.nodeStorageQuotaInMb') as "node_storage_quota_in_mb",
              JSON_EXTRACT(properties, '$.nodeVCores') as "node_vcores",
              JSON_EXTRACT(properties, '$.nodeEnablePublicIpAccess') as "node_enable_public_ip_access",
              JSON_EXTRACT(properties, '$.serverNames') as "server_names",
              JSON_EXTRACT(properties, '$.sourceResourceId') as "source_resource_id",
              JSON_EXTRACT(properties, '$.sourceLocation') as "source_location",
              JSON_EXTRACT(properties, '$.passwordEnabled') as "password_enabled",
              JSON_EXTRACT(properties, '$.pointInTimeUTC') as "point_in_time_utc",
              JSON_EXTRACT(properties, '$.readReplicas') as "read_replicas",
              JSON_EXTRACT(properties, '$.earliestRestoreTime') as "earliest_restore_time",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.databaseName') as "database_name",
              JSON_EXTRACT(properties, '$.enableGeoBackup') as "enable_geo_backup",
              JSON_EXTRACT(properties, '$.authConfig') as "auth_config",
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure.postgresql_hsc.clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.aadAuthEnabled') as "aad_auth_enabled",
                json_extract_path_text(properties, '$.administratorLogin') as "administrator_login",
                json_extract_path_text(properties, '$.administratorLoginPassword') as "administrator_login_password",
                json_extract_path_text(properties, '$.dataEncryption') as "data_encryption",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.postgresqlVersion') as "postgresql_version",
                json_extract_path_text(properties, '$.citusVersion') as "citus_version",
                json_extract_path_text(properties, '$.maintenanceWindow') as "maintenance_window",
                json_extract_path_text(properties, '$.preferredPrimaryZone') as "preferred_primary_zone",
                json_extract_path_text(properties, '$.enableShardsOnCoordinator') as "enable_shards_on_coordinator",
                json_extract_path_text(properties, '$.enableHa') as "enable_ha",
                json_extract_path_text(properties, '$.coordinatorServerEdition') as "coordinator_server_edition",
                json_extract_path_text(properties, '$.coordinatorStorageQuotaInMb') as "coordinator_storage_quota_in_mb",
                json_extract_path_text(properties, '$.coordinatorVCores') as "coordinator_vcores",
                json_extract_path_text(properties, '$.coordinatorEnablePublicIpAccess') as "coordinator_enable_public_ip_access",
                json_extract_path_text(properties, '$.nodeServerEdition') as "node_server_edition",
                json_extract_path_text(properties, '$.nodeCount') as "node_count",
                json_extract_path_text(properties, '$.nodeStorageQuotaInMb') as "node_storage_quota_in_mb",
                json_extract_path_text(properties, '$.nodeVCores') as "node_vcores",
                json_extract_path_text(properties, '$.nodeEnablePublicIpAccess') as "node_enable_public_ip_access",
                json_extract_path_text(properties, '$.serverNames') as "server_names",
                json_extract_path_text(properties, '$.sourceResourceId') as "source_resource_id",
                json_extract_path_text(properties, '$.sourceLocation') as "source_location",
                json_extract_path_text(properties, '$.passwordEnabled') as "password_enabled",
                json_extract_path_text(properties, '$.pointInTimeUTC') as "point_in_time_utc",
                json_extract_path_text(properties, '$.readReplicas') as "read_replicas",
                json_extract_path_text(properties, '$.earliestRestoreTime') as "earliest_restore_time",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.databaseName') as "database_name",
                json_extract_path_text(properties, '$.enableGeoBackup') as "enable_geo_backup",
                json_extract_path_text(properties, '$.authConfig') as "auth_config",
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure.postgresql_hsc.clusters
                WHERE subscriptionId = 'replace-me';
    vw_servers:
      id: azure.postgresql_hsc.vw_servers
      name: vw_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.serverEdition') as "server_edition",
              JSON_EXTRACT(properties, '$.storageQuotaInMb') as "storage_quota_in_mb",
              JSON_EXTRACT(properties, '$.vCores') as "v_cores",
              JSON_EXTRACT(properties, '$.enableHa') as "enable_ha",
              JSON_EXTRACT(properties, '$.enablePublicIpAccess') as "enable_public_ip_access",
              JSON_EXTRACT(properties, '$.isReadOnly') as "is_read_only",
              JSON_EXTRACT(properties, '$.administratorLogin') as "administrator_login",
              JSON_EXTRACT(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
              JSON_EXTRACT(properties, '$.role') as "role",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.haState') as "ha_state",
              JSON_EXTRACT(properties, '$.availabilityZone') as "availability_zone",
              JSON_EXTRACT(properties, '$.postgresqlVersion') as "postgresql_version",
              JSON_EXTRACT(properties, '$.citusVersion') as "citus_version",
              subscriptionId,
              resourceGroupName,
              clusterName,
              serverName
              FROM azure.postgresql_hsc.servers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.serverEdition') as "server_edition",
                json_extract_path_text(properties, '$.storageQuotaInMb') as "storage_quota_in_mb",
                json_extract_path_text(properties, '$.vCores') as "v_cores",
                json_extract_path_text(properties, '$.enableHa') as "enable_ha",
                json_extract_path_text(properties, '$.enablePublicIpAccess') as "enable_public_ip_access",
                json_extract_path_text(properties, '$.isReadOnly') as "is_read_only",
                json_extract_path_text(properties, '$.administratorLogin') as "administrator_login",
                json_extract_path_text(properties, '$.fullyQualifiedDomainName') as "fully_qualified_domain_name",
                json_extract_path_text(properties, '$.role') as "role",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.haState') as "ha_state",
                json_extract_path_text(properties, '$.availabilityZone') as "availability_zone",
                json_extract_path_text(properties, '$.postgresqlVersion') as "postgresql_version",
                json_extract_path_text(properties, '$.citusVersion') as "citus_version",
                subscriptionId,
                resourceGroupName,
                clusterName,
                serverName
                FROM azure.postgresql_hsc.servers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_configurations_coordinators:
      id: azure.postgresql_hsc.vw_configurations_coordinators
      name: vw_configurations_coordinators
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.value') as "value",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.defaultValue') as "default_value",
              JSON_EXTRACT(properties, '$.dataType') as "data_type",
              JSON_EXTRACT(properties, '$.allowedValues') as "allowed_values",
              JSON_EXTRACT(properties, '$.requiresRestart') as "requires_restart",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              configurationName
              FROM azure.postgresql_hsc.configurations_coordinators
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND configurationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.value') as "value",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.defaultValue') as "default_value",
                json_extract_path_text(properties, '$.dataType') as "data_type",
                json_extract_path_text(properties, '$.allowedValues') as "allowed_values",
                json_extract_path_text(properties, '$.requiresRestart') as "requires_restart",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                configurationName
                FROM azure.postgresql_hsc.configurations_coordinators
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND configurationName = 'replace-me';
    vw_configurations_nodes:
      id: azure.postgresql_hsc.vw_configurations_nodes
      name: vw_configurations_nodes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.value') as "value",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.defaultValue') as "default_value",
              JSON_EXTRACT(properties, '$.dataType') as "data_type",
              JSON_EXTRACT(properties, '$.allowedValues') as "allowed_values",
              JSON_EXTRACT(properties, '$.requiresRestart') as "requires_restart",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              configurationName
              FROM azure.postgresql_hsc.configurations_nodes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND configurationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.value') as "value",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.defaultValue') as "default_value",
                json_extract_path_text(properties, '$.dataType') as "data_type",
                json_extract_path_text(properties, '$.allowedValues') as "allowed_values",
                json_extract_path_text(properties, '$.requiresRestart') as "requires_restart",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                configurationName
                FROM azure.postgresql_hsc.configurations_nodes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND configurationName = 'replace-me';
    vw_firewall_rules:
      id: azure.postgresql_hsc.vw_firewall_rules
      name: vw_firewall_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startIpAddress') as "start_ip_address",
              JSON_EXTRACT(properties, '$.endIpAddress') as "end_ip_address",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              firewallRuleName
              FROM azure.postgresql_hsc.firewall_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startIpAddress') as "start_ip_address",
                json_extract_path_text(properties, '$.endIpAddress') as "end_ip_address",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                firewallRuleName
                FROM azure.postgresql_hsc.firewall_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_roles:
      id: azure.postgresql_hsc.vw_roles
      name: vw_roles
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.roleType') as "role_type",
              JSON_EXTRACT(properties, '$.password') as "password",
              JSON_EXTRACT(properties, '$.externalIdentity') as "external_identity",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              roleName
              FROM azure.postgresql_hsc.roles
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.roleType') as "role_type",
                json_extract_path_text(properties, '$.password') as "password",
                json_extract_path_text(properties, '$.externalIdentity') as "external_identity",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                roleName
                FROM azure.postgresql_hsc.roles
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.postgresql_hsc.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              privateEndpointConnectionName
              FROM azure.postgresql_hsc.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                privateEndpointConnectionName
                FROM azure.postgresql_hsc.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_private_link_resources:
      id: azure.postgresql_hsc.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              clusterName,
              privateLinkResourceName
              FROM azure.postgresql_hsc.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                clusterName,
                privateLinkResourceName
                FROM azure.postgresql_hsc.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2?api-version=2023-03-02-preview:
    get:
      tags:
        - Clusters
      operationId: Clusters_List
      description: Lists all clusters in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2?api-version=2023-03-02-preview:
    get:
      tags:
        - Clusters
      operationId: Clusters_ListByResourceGroup
      description: Lists all clusters in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}?api-version=2023-03-02-preview:
    put:
      description: Creates a new cluster with servers.
      tags:
        - Clusters
      operationId: Clusters_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The required parameters for creating or updating a cluster.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      description: Gets information about a cluster such as compute and storage configuration and cluster lifecycle metadata such as cluster creation date and time.
      tags:
        - Clusters
      operationId: Clusters_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: Deletes a cluster together with servers in it.
      tags:
        - Clusters
      operationId: Clusters_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      description: Updates an existing cluster. The request body can contain one or several properties from the cluster definition.
      tags:
        - Clusters
      operationId: Clusters_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The parameters for updating a cluster.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterForUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/servers?api-version=2023-03-02-preview:
    get:
      description: Lists servers of a cluster.
      tags:
        - Servers
      operationId: Servers_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/servers/{serverName}?api-version=2023-03-02-preview:
    get:
      description: Gets information about a server in cluster.
      tags:
        - Servers
      operationId: Servers_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterServer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/servers/{serverName}/configurations?api-version=2023-03-02-preview:
    get:
      description: List all the configurations of a server in cluster.
      tags:
        - Configurations
      operationId: Configurations_ListByServer
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/configurations?api-version=2023-03-02-preview:
    get:
      description: List all the configurations of a cluster.
      tags:
        - Configurations
      operationId: Configurations_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/configurations/{configurationName}?api-version=2023-03-02-preview:
    get:
      description: Gets information of a configuration for coordinator and nodes.
      tags:
        - Configurations
      operationId: Configurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/coordinatorConfigurations/{configurationName}?api-version=2023-03-02-preview:
    get:
      description: Gets information of a configuration for coordinator.
      tags:
        - Configurations
      operationId: ConfigurationsCoordinator_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Configurations_GetCoordinator
    put:
      description: Updates configuration of coordinator in a cluster
      tags:
        - Configurations
      operationId: ConfigurationsOnCoordinator_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a cluster configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Configurations_UpdateOnCoordinator
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/nodeConfigurations/{configurationName}?api-version=2023-03-02-preview:
    get:
      description: Gets information of a configuration for worker nodes.
      tags:
        - Configurations
      operationId: ConfigurationsNode_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Configurations_GetNode
    put:
      description: Updates configuration of worker nodes in a cluster
      tags:
        - Configurations
      operationId: ConfigurationsOnNode_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a cluster configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Configurations_UpdateOnNode
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/firewallRules/{firewallRuleName}?api-version=2023-03-02-preview:
    put:
      description: Creates a new cluster firewall rule or updates an existing cluster firewall rule.
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: Deletes a cluster firewall rule.
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      description: Gets information about a cluster firewall rule.
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/firewallRules?api-version=2023-03-02-preview:
    get:
      description: Lists all the firewall rules on cluster.
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/roles/{roleName}?api-version=2023-03-02-preview:
    get:
      description: Gets information about a cluster role.
      tags:
        - Roles
      operationId: Roles_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/RoleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Roles
      operationId: Roles_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Creates a new role or updates an existing role.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/RoleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a role.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Roles
      operationId: Roles_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      description: Deletes a cluster role.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/RoleNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/roles?api-version=2023-03-02-preview:
    get:
      tags:
        - Roles
      operationId: Roles_ListByCluster
      description: List all the roles in a given cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/restart?api-version=2023-03-02-preview:
    post:
      description: Restarts all nodes in the cluster.
      tags:
        - ClusterOperations
      operationId: Clusters_Restart
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/start?api-version=2023-03-02-preview:
    post:
      description: Starts stopped compute on all cluster nodes.
      tags:
        - ClusterOperations
      operationId: Clusters_Start
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/stop?api-version=2023-03-02-preview:
    post:
      description: Stops compute on all cluster nodes.
      tags:
        - ClusterOperations
      operationId: Clusters_Stop
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/promote?api-version=2023-03-02-preview:
    post:
      description: Promotes read replica cluster to an independent read-write cluster.
      tags:
        - ClusterOperations
      operationId: Clusters_PromoteReadReplica
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The parameter for enabling geo-redundant backup while promoting read replica.
        x-ms-requestBody-name: promoteRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteRequest'
      responses:
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability?api-version=2023-03-02-preview:
    post:
      description: Checks availability of a cluster name. Cluster names should be globally unique; at least 3 characters and at most 40 characters long; they must only contain lowercase letters, numbers, and hyphens; and must not start or end with a hyphen.
      tags:
        - Clusters
      operationId: Clusters_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if cluster name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.DBforPostgreSQL/operations?api-version=2023-03-02-preview:
    get:
      description: Lists all of the available REST API operations.
      tags:
        - Operations
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/privateEndpointConnections?api-version=2023-03-02-preview:
    get:
      description: Gets list of private endpoint connections on a cluster.
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2023-03-02-preview:
    get:
      description: Gets private endpoint connection.
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Approves or Rejects a private endpoint connection with a given name.
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: The required parameters for approving a private endpoint connection.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: Deletes a private endpoint connection with a given name.
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            location:
              schema:
                type: string
            azure-async-operation:
              schema:
                type: string
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/privateLinkResources?api-version=2023-03-02-preview:
    get:
      description: Gets the private link resources for cluster.
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{clusterName}/privateLinkResources/{privateLinkResourceName}?api-version=2023-03-02-preview:
    get:
      description: Gets a private link resource for cluster.
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateLinkResourceName'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
