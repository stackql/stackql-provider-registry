openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Storage Pool
  description: Microsoft Azure Storage Pool allows your applications and workloads to access a group of managed disks from a single endpoint.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._]*[0-9A-Za-z]$
        minLength: 1
        maxLength: 90
        type: string
    DiskPoolName:
      name: diskPoolName
      in: path
      description: The name of the Disk Pool.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IscsiTargetName:
      name: iscsiTargetName
      in: path
      description: The name of the iSCSI Target.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationId:
      name: operationId
      in: path
      description: The unique uuid of an operation.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    Location:
      name: location
      in: path
      description: The location of the resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    StoragePoolOperationDisplay:
      type: object
      required:
        - provider
        - resource
        - operation
        - description
      description: Metadata about an operation.
      properties:
        provider:
          type: string
          description: Localized friendly form of the resource provider name.
        resource:
          type: string
          description: Localized friendly form of the resource type related to this action/operation.
        operation:
          type: string
          description: Localized friendly name for the operation, as it should be shown to the user.
        description:
          type: string
          description: Localized friendly description for the operation, as it should be shown to the user.
    StoragePoolRPOperation:
      type: object
      required:
        - name
        - isDataAction
        - display
      description: Description of a StoragePool RP Operation
      properties:
        name:
          type: string
          description: The name of the operation being performed on this particular object
        isDataAction:
          type: boolean
          description: Indicates whether the operation applies to data-plane.
        actionType:
          type: string
          description: Indicates the action type.
        display:
          description: Additional metadata about RP operation.
          $ref: '#/components/schemas/StoragePoolOperationDisplay'
        origin:
          type: string
          description: The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.
    StoragePoolOperationListResult:
      type: object
      required:
        - value
      description: List of operations supported by the RP.
      properties:
        value:
          type: array
          description: An array of operations supported by the StoragePool RP.
          items:
            $ref: '#/components/schemas/StoragePoolRPOperation'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
    OutboundEnvironmentEndpointList:
      description: Collection of Outbound Environment Endpoints
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/OutboundEnvironmentEndpoint'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    OutboundEnvironmentEndpoint:
      description: Endpoints accessed for a common purpose that the App Service Environment requires outbound network access to.
      type: object
      properties:
        category:
          description: The type of service accessed by the App Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.
          type: string
        endpoints:
          description: The endpoints that the App Service Environment reaches the service at.
          type: array
          items:
            $ref: '#/components/schemas/EndpointDependency'
    EndpointDependency:
      description: A domain name that a service is reached at, including details of the current connection status.
      type: object
      properties:
        domainName:
          description: The domain name of the dependency.
          type: string
        endpointDetails:
          description: The IP Addresses and Ports used when connecting to DomainName.
          type: array
          items:
            $ref: '#/components/schemas/EndpointDetail'
    EndpointDetail:
      description: Current TCP connectivity information from the App Service Environment to a single endpoint.
      type: object
      properties:
        ipAddress:
          description: An IP Address that Domain Name currently resolves to.
          type: string
        port:
          format: int32
          description: The port an endpoint is connected to.
          type: integer
        latency:
          format: double
          description: The time in milliseconds it takes for a TCP connection to be created from the App Service Environment to this IpAddress at this Port.
          type: number
        isAccessible:
          description: Whether it is possible to create a TCP connection from the App Service Environment to this IpAddress at this Port.
          type: boolean
    DiskPoolListResult:
      type: object
      required:
        - value
      description: List of Disk Pools
      properties:
        value:
          description: An array of Disk pool objects.
          type: array
          items:
            $ref: '#/components/schemas/DiskPool'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    ResourceSkuListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSkuInfo'
          description: The list of StoragePool resource skus.
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
      description: List Disk Pool skus operation response.
    ResourceSkuInfo:
      type: object
      description: Resource SKU Details
      properties:
        apiVersion:
          readOnly: true
          type: string
          description: StoragePool RP API version
        resourceType:
          readOnly: true
          type: string
          description: StoragePool resource type
        capabilities:
          readOnly: true
          type: array
          description: List of additional capabilities for StoragePool resource.
          items:
            $ref: '#/components/schemas/ResourceSkuCapability'
        locationInfo:
          type: object
          readOnly: true
          $ref: '#/components/schemas/ResourceSkuLocationInfo'
          description: Zones and zone capabilities in those locations where the SKU is available.
        name:
          readOnly: true
          type: string
          description: Sku name
        tier:
          readOnly: true
          type: string
          description: Sku tier
        restrictions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuRestrictions'
          description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
    ResourceSkuLocationInfo:
      type: object
      description: Zone and capability info for resource sku
      properties:
        location:
          readOnly: true
          type: string
          description: Location of the SKU
        zones:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityZone'
          description: List of availability zones where the SKU is supported.
        zoneDetails:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceSkuZoneDetails'
          description: Details of capabilities available to a SKU in specific zones.
    ResourceSkuZoneDetails:
      type: object
      properties:
        name:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AvailabilityZone'
          description: The set of zones that the SKU is available in with the specified capabilities.
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuCapability'
          description: A list of capabilities that are available for the SKU in the specified list of zones.
      description: Describes The zonal capabilities of a SKU.
    ResourceSkuCapability:
      type: object
      description: Capability a resource SKU has.
      properties:
        name:
          readOnly: true
          type: string
          description: Capability name
        value:
          readOnly: true
          type: string
          description: Capability value
    ResourceSkuRestrictions:
      type: object
      properties:
        type:
          type: string
          readOnly: true
          description: The type of restrictions.
          enum:
            - Location
            - Zone
          x-ms-enum:
            name: ResourceSkuRestrictionsType
            modelAsString: false
        values:
          type: array
          readOnly: true
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
        restrictionInfo:
          $ref: '#/components/schemas/ResourceSkuRestrictionInfo'
          readOnly: true
          description: The information about the restriction where the SKU cannot be used.
        reasonCode:
          type: string
          readOnly: true
          description: The reason for restriction.
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: ResourceSkuRestrictionsReasonCode
            modelAsString: false
      description: Describes scaling information of a SKU.
    ResourceSkuRestrictionInfo:
      type: object
      properties:
        locations:
          readOnly: true
          type: array
          items:
            type: string
          description: Locations where the SKU is restricted
        zones:
          readOnly: true
          type: array
          items:
            type: string
          description: List of availability zones where the SKU is restricted.
      description: Describes an available Compute SKU Restriction Information.
    DiskPoolZoneListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DiskPoolZoneInfo'
          description: The list of Disk Pool Skus.
        nextLink:
          readOnly: true
          description: URI to fetch the next section of the paginated response.
          type: string
      description: List Disk Pool skus operation response.
      type: object
    DiskPoolZoneInfo:
      type: object
      description: Disk Pool SKU Details
      properties:
        availabilityZones:
          readOnly: true
          type: array
          description: 'Logical zone for Disk Pool resource; example: ["1"].'
          items:
            $ref: '#/components/schemas/AvailabilityZone'
        additionalCapabilities:
          readOnly: true
          type: array
          description: List of additional capabilities for Disk Pool.
          items:
            $ref: '#/components/schemas/AdditionalCapability'
        sku:
          readOnly: true
          description: Determines the SKU of VM deployed for Disk Pool
          type: string
          $ref: '#/components/schemas/Sku'
    DiskPool:
      description: Response for Disk Pool request.
      required:
        - properties
      properties:
        sku:
          description: Determines the SKU of the Disk pool
          $ref: '#/components/schemas/Sku'
          x-ms-client-flatten: true
        properties:
          x-ms-client-flatten: true
          description: Properties of Disk Pool.
          $ref: '#/components/schemas/DiskPoolProperties'
        managedBy:
          readOnly: true
          description: Azure resource id. Indicates if this resource is managed by another Azure resource.
          $ref: '#/components/schemas/ManagedBy'
        managedByExtended:
          readOnly: true
          description: List of Azure resource ids that manage this resource.
          $ref: '#/components/schemas/ManagedByExtended'
        systemData:
          description: Resource metadata required by ARM RPC
          readOnly: true
          $ref: '#/components/schemas/SystemMetadata'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives.
      type: object
    DiskPoolCreate:
      description: Request payload for create or update Disk Pool request.
      required:
        - properties
        - location
        - sku
      x-ms-azure-resource: true
      properties:
        sku:
          description: Determines the SKU of the Disk Pool
          type: object
          $ref: '#/components/schemas/Sku'
        properties:
          x-ms-client-flatten: true
          description: Properties for Disk Pool create request.
          $ref: '#/components/schemas/DiskPoolCreateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        managedBy:
          description: Azure resource id. Indicates if this resource is managed by another Azure resource.
          $ref: '#/components/schemas/ManagedBy'
        managedByExtended:
          description: List of Azure resource ids that manage this resource.
          $ref: '#/components/schemas/ManagedByExtended'
      type: object
    DiskPoolUpdate:
      description: Request payload for Update Disk Pool request.
      required:
        - properties
      properties:
        managedBy:
          description: Azure resource id. Indicates if this resource is managed by another Azure resource.
          $ref: '#/components/schemas/ManagedBy'
        managedByExtended:
          description: List of Azure resource ids that manage this resource.
          $ref: '#/components/schemas/ManagedByExtended'
        properties:
          x-ms-client-flatten: true
          description: Properties for Disk Pool update request.
          $ref: '#/components/schemas/DiskPoolUpdateProperties'
        sku:
          description: Determines the SKU of the Disk Pool
          type: object
          $ref: '#/components/schemas/Sku'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      type: object
    AvailabilityZone:
      type: string
      description: Availability zone.
    DiskPoolProperties:
      type: object
      description: Disk Pool response properties.
      required:
        - availabilityZones
        - subnetId
        - provisioningState
        - status
      properties:
        provisioningState:
          description: State of the operation on the resource.
          type: string
          $ref: '#/components/schemas/ProvisioningState'
        availabilityZones:
          type: array
          description: 'Logical zone for Disk Pool resource; example: ["1"].'
          items:
            $ref: '#/components/schemas/AvailabilityZone'
        status:
          type: string
          $ref: '#/components/schemas/OperationalStatus'
          description: Operational status of the Disk Pool.
        disks:
          type: array
          description: List of Azure Managed Disks to attach to a Disk Pool.
          items:
            $ref: '#/components/schemas/Disk'
        subnetId:
          type: string
          description: Azure Resource ID of a Subnet for the Disk Pool.
          x-ms-mutability:
            - create
            - read
        additionalCapabilities:
          type: array
          description: List of additional capabilities for Disk Pool.
          items:
            $ref: '#/components/schemas/AdditionalCapability'
    DiskPoolCreateProperties:
      type: object
      description: Properties for Disk Pool create or update request.
      required:
        - subnetId
      properties:
        availabilityZones:
          type: array
          description: 'Logical zone for Disk Pool resource; example: ["1"].'
          items:
            $ref: '#/components/schemas/AvailabilityZone'
        disks:
          type: array
          description: List of Azure Managed Disks to attach to a Disk Pool.
          items:
            $ref: '#/components/schemas/Disk'
        subnetId:
          type: string
          description: Azure Resource ID of a Subnet for the Disk Pool.
          x-ms-mutability:
            - create
            - read
        additionalCapabilities:
          type: array
          description: List of additional capabilities for a Disk Pool.
          items:
            $ref: '#/components/schemas/AdditionalCapability'
    DiskPoolUpdateProperties:
      type: object
      description: Properties for Disk Pool update request.
      properties:
        disks:
          type: array
          description: List of Azure Managed Disks to attach to a Disk Pool.
          items:
            $ref: '#/components/schemas/Disk'
    Disk:
      type: object
      description: Azure Managed Disk to attach to the Disk Pool.
      required:
        - id
      properties:
        id:
          type: string
          description: Unique Azure Resource ID of the Managed Disk.
    AdditionalCapability:
      type: string
      description: Special capability that can be set on the Disk Pool.
    IscsiTargetList:
      type: object
      required:
        - value
      description: List of iSCSI Targets.
      properties:
        value:
          type: array
          description: An array of iSCSI Targets in a Disk Pool.
          items:
            $ref: '#/components/schemas/IscsiTarget'
        nextLink:
          description: URI to fetch the next section of the paginated response.
          type: string
          readOnly: true
    IscsiTarget:
      description: Response for iSCSI Target requests.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties for iSCSI Target operations.
          $ref: '#/components/schemas/IscsiTargetProperties'
        systemData:
          description: Resource metadata required by ARM RPC
          $ref: '#/components/schemas/SystemMetadata'
        managedBy:
          readOnly: true
          description: Azure resource id. Indicates if this resource is managed by another Azure resource.
          $ref: '#/components/schemas/ManagedBy'
        managedByExtended:
          readOnly: true
          description: List of Azure resource ids that manage this resource.
          $ref: '#/components/schemas/ManagedByExtended'
      type: object
    IscsiTargetCreate:
      description: Payload for iSCSI Target create or update requests.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties for iSCSI Target create request.
          $ref: '#/components/schemas/IscsiTargetCreateProperties'
        managedBy:
          description: Azure resource id. Indicates if this resource is managed by another Azure resource.
          $ref: '#/components/schemas/ManagedBy'
        managedByExtended:
          description: List of Azure resource ids that manage this resource.
          $ref: '#/components/schemas/ManagedByExtended'
      type: object
    IscsiTargetUpdate:
      description: Payload for iSCSI Target update requests.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties for iSCSI Target update request.
          $ref: '#/components/schemas/IscsiTargetUpdateProperties'
        managedBy:
          description: Azure resource id. Indicates if this resource is managed by another Azure resource.
          $ref: '#/components/schemas/ManagedBy'
        managedByExtended:
          description: List of Azure resource ids that manage this resource.
          $ref: '#/components/schemas/ManagedByExtended'
      type: object
    IscsiTargetProperties:
      type: object
      description: Response properties for iSCSI Target operations.
      required:
        - targetIqn
        - provisioningState
        - status
        - aclMode
      properties:
        aclMode:
          description: Mode for Target connectivity.
          type: string
          $ref: '#/components/schemas/AclMode'
        staticAcls:
          type: array
          description: Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
          items:
            $ref: '#/components/schemas/Acl'
        luns:
          type: array
          description: List of LUNs to be exposed through iSCSI Target.
          items:
            $ref: '#/components/schemas/IscsiLun'
        targetIqn:
          type: string
          description: 'iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".'
        provisioningState:
          description: State of the operation on the resource.
          type: string
          $ref: '#/components/schemas/ProvisioningState'
        status:
          type: string
          $ref: '#/components/schemas/OperationalStatus'
          description: Operational status of the iSCSI Target.
        endpoints:
          description: List of private IPv4 addresses to connect to the iSCSI Target.
          type: array
          items:
            type: string
        port:
          type: integer
          format: int32
          description: The port used by iSCSI Target portal group.
        sessions:
          readOnly: true
          description: List of identifiers for active sessions on the iSCSI target
          type: array
          items:
            type: string
    IscsiTargetCreateProperties:
      type: object
      description: Properties for iSCSI Target create or update request.
      required:
        - aclMode
      properties:
        aclMode:
          description: Mode for Target connectivity.
          type: string
          $ref: '#/components/schemas/AclMode'
        targetIqn:
          type: string
          description: 'iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".'
        staticAcls:
          type: array
          description: Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
          items:
            $ref: '#/components/schemas/Acl'
        luns:
          type: array
          description: List of LUNs to be exposed through iSCSI Target.
          items:
            $ref: '#/components/schemas/IscsiLun'
    IscsiTargetUpdateProperties:
      type: object
      description: Properties for iSCSI Target update request.
      properties:
        staticAcls:
          type: array
          description: Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
          items:
            $ref: '#/components/schemas/Acl'
        luns:
          type: array
          description: List of LUNs to be exposed through iSCSI Target.
          items:
            $ref: '#/components/schemas/IscsiLun'
    Acl:
      type: object
      description: Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
      required:
        - initiatorIqn
        - mappedLuns
      properties:
        initiatorIqn:
          type: string
          description: 'iSCSI initiator IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:client".'
        mappedLuns:
          type: array
          description: List of LUN names mapped to the ACL.
          items:
            type: string
    IscsiLun:
      type: object
      required:
        - name
        - managedDiskAzureResourceId
      description: LUN to expose the Azure Managed Disk.
      properties:
        name:
          type: string
          minimum: 1
          maximum: 90
          description: 'User defined name for iSCSI LUN; example: "lun0"'
        managedDiskAzureResourceId:
          type: string
          description: Azure Resource ID of the Managed Disk.
        lun:
          type: integer
          format: int32
          readOnly: true
          description: Specifies the Logical Unit Number of the iSCSI LUN.
    Error:
      type: object
      description: The resource management error response.
      properties:
        error:
          type: object
          description: RP error response.
          $ref: '#/components/schemas/ErrorResponse'
    ProvisioningState:
      type: string
      enum:
        - Invalid
        - Succeeded
        - Failed
        - Canceled
        - Pending
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: ProvisioningStates
        modelAsString: true
      description: Provisioning state of the iSCSI Target.
      readOnly: true
    OperationalStatus:
      type: string
      enum:
        - Invalid
        - Unknown
        - Healthy
        - Unhealthy
        - Updating
        - Running
        - Stopped
        - Stopped (deallocated)
      x-ms-enum:
        name: OperationalStatus
        modelAsString: true
      description: Operational status of the resource.
    DiskPoolTier:
      type: string
      enum:
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: DiskPoolTier
        modelAsString: true
      description: SKU of the VM host part of the Disk Pool deployment
    AclMode:
      type: string
      enum:
        - Dynamic
        - Static
      x-ms-enum:
        name: IscsiTargetAclMode
        modelAsString: true
      description: ACL mode for iSCSI Target.
    Sku:
      type: object
      description: Sku for ARM resource
      required:
        - name
      properties:
        name:
          type: string
          description: Sku name
        tier:
          type: string
          description: Sku tier
    SystemMetadata:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The type of identity that last modified the resource.
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource.
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      type: object
    Resource:
      description: ARM resource model definition.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      x-ms-azure-resource: true
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      type: object
    ErrorAdditionalInfo:
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
      type: object
    ErrorResponse:
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          description: The error additional info.
      description: The resource management error response.
      type: object
    ManagedBy:
      type: string
      description: Azure resource id. Indicates if this resource is managed by another Azure resource.
    ManagedByExtended:
      type: array
      description: List of Azure resource ids that manage this resource.
      items:
        $ref: '#/components/schemas/ManagedBy'
  x-stackQL-resources:
    operations:
      id: azure.storage_pool.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StoragePool~1operations?api-version=2021-08-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StoragePoolOperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    disk_pools:
      id: azure.storage_pool.disk_pools
      name: disk_pools
      title: disk_pools
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StoragePool~1diskPools?api-version=2021-08-01/get'
            operationId: DiskPools_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskPoolListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools?api-version=2021-08-01/get'
            operationId: DiskPools_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskPoolListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}?api-version=2021-08-01/put'
            operationId: DiskPools_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskPool
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}?api-version=2021-08-01/patch'
            operationId: DiskPools_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskPool
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}?api-version=2021-08-01/delete'
            operationId: DiskPools_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}?api-version=2021-08-01/get'
            operationId: DiskPools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskPool
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1start?api-version=2021-08-01/post'
            operationId: DiskPools_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1deallocate?api-version=2021-08-01/post'
            operationId: DiskPools_Deallocate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1upgrade?api-version=2021-08-01/post'
            operationId: DiskPools_Upgrade
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/disk_pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/disk_pools/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/disk_pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/disk_pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/disk_pools/methods/delete'
    disk_pool_zones:
      id: azure.storage_pool.disk_pool_zones
      name: disk_pool_zones
      title: disk_pool_zones
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StoragePool~1locations~1{location}~1diskPoolZones?api-version=2021-08-01/get'
            operationId: DiskPoolZones_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiskPoolZoneListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_pool_zones/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    resource_skus:
      id: azure.storage_pool.resource_skus
      name: resource_skus
      title: resource_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StoragePool~1locations~1{location}~1skus?api-version=2021-08-01/get'
            operationId: ResourceSkus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceSkuListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    disk_pools_outbound_network_dependencies_endpoints:
      id: azure.storage_pool.disk_pools_outbound_network_dependencies_endpoints
      name: disk_pools_outbound_network_dependencies_endpoints
      title: disk_pools_outbound_network_dependencies_endpoints
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1outboundNetworkDependenciesEndpoints?api-version=2021-08-01/get'
            operationId: DiskPoolsOutboundNetworkDependenciesEndpoints_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OutboundEnvironmentEndpointList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_pools_outbound_network_dependencies_endpoints/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    iscsi_targets:
      id: azure.storage_pool.iscsi_targets
      name: iscsi_targets
      title: iscsi_targets
      methods:
        list_by_disk_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1iscsiTargets?api-version=2021-08-01/get'
            operationId: IscsiTargets_ListByDiskPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IscsiTargetList
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1iscsiTargets~1{iscsiTargetName}?api-version=2021-08-01/put'
            operationId: IscsiTargets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IscsiTarget
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1iscsiTargets~1{iscsiTargetName}?api-version=2021-08-01/patch'
            operationId: IscsiTargets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IscsiTarget
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1iscsiTargets~1{iscsiTargetName}?api-version=2021-08-01/delete'
            operationId: IscsiTargets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StoragePool~1diskPools~1{diskPoolName}~1iscsiTargets~1{iscsiTargetName}?api-version=2021-08-01/get'
            operationId: IscsiTargets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IscsiTarget
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iscsi_targets/methods/get'
          - $ref: '#/components/x-stackQL-resources/iscsi_targets/methods/list_by_disk_pool'
        insert:
          - $ref: '#/components/x-stackQL-resources/iscsi_targets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/iscsi_targets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/iscsi_targets/methods/delete'
    vw_disk_pools:
      id: azure.storage_pool.vw_disk_pools
      name: vw_disk_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              sku as sku,
              managedBy as managed_by,
              managedByExtended as managed_by_extended,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.availabilityZones') as "availability_zones",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.disks') as "disks",
              JSON_EXTRACT(properties, '$.subnetId') as "subnet_id",
              JSON_EXTRACT(properties, '$.additionalCapabilities') as "additional_capabilities",
              subscriptionId,
              resourceGroupName,
              diskPoolName
              FROM azure.storage_pool.disk_pools
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                sku as sku,
                managedBy as managed_by,
                managedByExtended as managed_by_extended,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.availabilityZones') as "availability_zones",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.disks') as "disks",
                json_extract_path_text(properties, '$.subnetId') as "subnet_id",
                json_extract_path_text(properties, '$.additionalCapabilities') as "additional_capabilities",
                subscriptionId,
                resourceGroupName,
                diskPoolName
                FROM azure.storage_pool.disk_pools
                WHERE subscriptionId = 'replace-me';
    vw_iscsi_targets:
      id: azure.storage_pool.vw_iscsi_targets
      name: vw_iscsi_targets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              managedBy as managed_by,
              managedByExtended as managed_by_extended,
              JSON_EXTRACT(properties, '$.aclMode') as "acl_mode",
              JSON_EXTRACT(properties, '$.staticAcls') as "static_acls",
              JSON_EXTRACT(properties, '$.luns') as "luns",
              JSON_EXTRACT(properties, '$.targetIqn') as "target_iqn",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.endpoints') as "endpoints",
              JSON_EXTRACT(properties, '$.port') as "port",
              JSON_EXTRACT(properties, '$.sessions') as "sessions",
              subscriptionId,
              resourceGroupName,
              diskPoolName,
              iscsiTargetName
              FROM azure.storage_pool.iscsi_targets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND diskPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                managedBy as managed_by,
                managedByExtended as managed_by_extended,
                json_extract_path_text(properties, '$.aclMode') as "acl_mode",
                json_extract_path_text(properties, '$.staticAcls') as "static_acls",
                json_extract_path_text(properties, '$.luns') as "luns",
                json_extract_path_text(properties, '$.targetIqn') as "target_iqn",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.endpoints') as "endpoints",
                json_extract_path_text(properties, '$.port') as "port",
                json_extract_path_text(properties, '$.sessions') as "sessions",
                subscriptionId,
                resourceGroupName,
                diskPoolName,
                iscsiTargetName
                FROM azure.storage_pool.iscsi_targets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND diskPoolName = 'replace-me';
paths:
  /providers/Microsoft.StoragePool/operations?api-version=2021-08-01:
    get:
      tags:
        - StoragePoolOperations
      operationId: Operations_List
      description: Gets a list of StoragePool operations.
      parameters: []
      responses:
        '200':
          description: Retrieved RP operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePoolOperationListResult'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.StoragePool/diskPools?api-version=2021-08-01:
    get:
      tags:
        - DiskPools
      operationId: DiskPools_ListBySubscription
      description: Gets a list of Disk Pools in a subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved diskPools by subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPoolListResult'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools?api-version=2021-08-01:
    get:
      tags:
        - DiskPools
      operationId: DiskPools_ListByResourceGroup
      description: Gets a list of DiskPools in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Operation completed successfully; retrieved diskPools by resource group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPoolListResult'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools/{diskPoolName}?api-version=2021-08-01:
    put:
      tags:
        - DiskPools
      operationId: DiskPools_CreateOrUpdate
      description: Create or Update Disk pool. This create or update operation can take 15 minutes to complete. This is expected service behavior.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      requestBody:
        description: Request payload for Disk Pool create operation
        required: true
        x-ms-requestBody-name: diskPoolCreatePayload
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskPoolCreate'
      responses:
        '200':
          description: OK -- Returned when the create or update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPool'
        '201':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPool'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - DiskPools
      operationId: DiskPools_Update
      description: Update a Disk pool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      requestBody:
        description: Request payload for Disk Pool update operation.
        required: true
        x-ms-requestBody-name: diskPoolUpdatePayload
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskPoolUpdate'
      responses:
        '200':
          description: OK -- Returned when the update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPool'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
        default:
          description: Error from the RP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - DiskPools
      operationId: DiskPools_Delete
      description: Delete a Disk pool; attached disks are not affected. This delete operation can take 10 minutes to complete. This is expected service behavior.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      responses:
        '200':
          description: Delete operation completed successfully.
        '202':
          description: Delete request accepted; operation will complete asynchronously.
        '204':
          description: Resource does not exist in the subscription.
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - DiskPools
      operationId: DiskPools_Get
      description: Get a Disk pool.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      responses:
        '200':
          description: Operation completed successfully; retrieved Disk pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPool'
        default:
          description: Error from the RP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.StoragePool/locations/{location}/diskPoolZones?api-version=2021-08-01:
    get:
      tags:
        - DiskPoolZones
      operationId: DiskPoolZones_List
      description: Lists available Disk Pool Skus in an Azure location.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/Location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPoolZoneListResult'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StoragePool/locations/{location}/skus?api-version=2021-08-01:
    get:
      tags:
        - ResourceSkus
      operationId: ResourceSkus_List
      description: Lists available StoragePool resources and skus in an Azure location.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/Location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkuListResult'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools/{diskPoolName}/outboundNetworkDependenciesEndpoints?api-version=2021-08-01:
    get:
      tags:
        - DiskPools
      operationId: DiskPoolsOutboundNetworkDependenciesEndpoints_List
      description: Gets the network endpoints of all outbound dependencies of a Disk Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEnvironmentEndpointList'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: DiskPools_ListOutboundNetworkDependenciesEndpoints
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools/{diskPoolName}/start?api-version=2021-08-01:
    post:
      tags:
        - DiskPools
      operationId: DiskPools_Start
      description: The operation to start a Disk Pool. This start operation can take 10 minutes to complete. This is expected service behavior.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools/{diskPoolName}/deallocate?api-version=2021-08-01:
    post:
      tags:
        - DiskPools
      operationId: DiskPools_Deallocate
      description: Shuts down the Disk Pool and releases the compute resources. You are not billed for the compute resources that this Disk Pool uses. This operation can take 10 minutes to complete. This is expected service behavior.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools/{diskPoolName}/upgrade?api-version=2021-08-01:
    post:
      tags:
        - DiskPools
      operationId: DiskPools_Upgrade
      description: Upgrade replaces the underlying virtual machine hosts one at a time. This operation can take 10-15 minutes to complete. This is expected service behavior.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools/{diskPoolName}/iscsiTargets?api-version=2021-08-01:
    get:
      tags:
        - IscsiTargets
      description: Get iSCSI Targets in a Disk pool.
      operationId: IscsiTargets_ListByDiskPool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
      responses:
        '200':
          description: Operation completed successfully; retrieved iSCSI Targets in a Disk pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IscsiTargetList'
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StoragePool/diskPools/{diskPoolName}/iscsiTargets/{iscsiTargetName}?api-version=2021-08-01:
    put:
      tags:
        - IscsiTargets
      description: Create or Update an iSCSI Target.
      operationId: IscsiTargets_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
        - $ref: '#/components/parameters/IscsiTargetName'
      requestBody:
        description: Request payload for iSCSI Target create operation.
        required: true
        x-ms-requestBody-name: iscsiTargetCreatePayload
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IscsiTargetCreate'
      responses:
        '200':
          description: OK -- Returned when the create or update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IscsiTarget'
        '201':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IscsiTarget'
        default:
          description: Error from the RP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - IscsiTargets
      description: Update an iSCSI Target.
      operationId: IscsiTargets_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
        - $ref: '#/components/parameters/IscsiTargetName'
      requestBody:
        description: Request payload for iSCSI Target update operation.
        required: true
        x-ms-requestBody-name: iscsiTargetUpdatePayload
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IscsiTargetUpdate'
      responses:
        '200':
          description: OK -- Returned when the update operation is successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IscsiTarget'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously.
        default:
          description: Error from the RP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - IscsiTargets
      description: Delete an iSCSI Target.
      operationId: IscsiTargets_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
        - $ref: '#/components/parameters/IscsiTargetName'
      responses:
        '200':
          description: Delete operation completed successfully.
        '202':
          description: Delete request accepted; operation will complete asynchronously.
        '204':
          description: Resource does not exist in the subscription.
        default:
          description: Error from the RP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - IscsiTargets
      description: Get an iSCSI Target.
      operationId: IscsiTargets_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskPoolName'
        - $ref: '#/components/parameters/IscsiTargetName'
      responses:
        '200':
          description: Operation completed successfully; retrieved iSCSI Target.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IscsiTarget'
        default:
          description: Error from the RP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
