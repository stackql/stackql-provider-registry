openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Event Grid
  description: Azure Event Grid enables you to easily build applications with event-based architectures. You can publish topics to Event Grid, and subscribe to topics through Event Grid. When subscribing, you provide an endpoint to respond to the event.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Version of the API to be used with the client request.
      required: false
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: 'The query used to filter the search results using OData syntax. Filtering is permitted on the ''name'' property only and with limited number of OData operations. These operations are: the ''contains'' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, ''PATTERN'') and name ne ''PATTERN-1''. The following is not a valid filter example: $filter=location eq ''westus''.'
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TopParameter:
      name: $top
      in: query
      description: The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
  schemas:
    Resource:
      description: Definition of a Resource.
      type: object
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
      type: object
    TrackedResource:
      description: Definition of a Tracked Resource.
      required:
        - location
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: Represents an operation returned by the GetOperations request.
      properties:
        name:
          description: Name of the operation.
          type: string
        display:
          $ref: '#/components/schemas/OperationInfo'
          description: Display name of the operation.
        origin:
          description: Origin of the operation.
          type: string
        isDataAction:
          description: This Boolean is used to determine if the operation is a data plane action or not.
          type: boolean
        properties:
          description: Properties of the operation.
          type: object
          x-ms-client-flatten: true
      type: object
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    CaCertificateProperties:
      description: The properties of CA certificate.
      type: object
      properties:
        description:
          description: Description for the CA Certificate resource.
          type: string
        encodedCertificate:
          description: Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.
          type: string
        issueTimeInUtc:
          format: date-time
          description: Certificate issue time in UTC. This is a read-only field.
          type: string
          readOnly: true
        expiryTimeInUtc:
          format: date-time
          description: Certificate expiry time in UTC. This is a read-only field.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the CA Certificate resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
          type: string
          readOnly: true
          x-ms-enum:
            name: CaCertificateProvisioningState
            modelAsString: true
    CaCertificate:
      description: The CA Certificate resource.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/CaCertificateProperties'
          description: The properties of CA certificate.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to the CaCertificate resource.
          type: object
          readOnly: true
      type: object
    CaCertificatesListResult:
      description: Result of the List CA Certificate operation.
      type: object
      properties:
        value:
          description: A collection of CA Certificate.
          type: array
          items:
            $ref: '#/components/schemas/CaCertificate'
        nextLink:
          description: A link for the next page of CA Certificate.
          type: string
    ChannelProperties:
      description: Properties of the Channel.
      type: object
      properties:
        channelType:
          description: The type of the event channel which represents the direction flow of events.
          enum:
            - PartnerTopic
            - PartnerDestination
          type: string
          x-ms-enum:
            name: ChannelType
            modelAsString: true
        partnerTopicInfo:
          $ref: '#/components/schemas/PartnerTopicInfo'
          description: This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.
        partnerDestinationInfo:
          $ref: '#/components/schemas/PartnerDestinationInfo'
          description: This property should be populated when channelType is PartnerDestination and represents information about the partner destination resource corresponding to the channel.
        messageForActivation:
          description: Context or helpful message that can be used during the approval process by the subscriber.
          type: string
        provisioningState:
          description: Provisioning state of the channel.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - IdleDueToMirroredPartnerTopicDeletion
            - IdleDueToMirroredPartnerDestinationDeletion
          type: string
          x-ms-enum:
            name: ChannelProvisioningState
            modelAsString: true
        readinessState:
          description: The readiness state of the corresponding partner topic.
          enum:
            - NeverActivated
            - Activated
          type: string
          x-ms-enum:
            name: ReadinessState
            modelAsString: true
        expirationTimeIfNotActivatedUtc:
          format: date-time
          description: "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted."
          type: string
    PartnerTopicInfo:
      description: Properties of the corresponding partner topic of a Channel.
      type: object
      properties:
        azureSubscriptionId:
          description: "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription."
          type: string
        resourceGroupName:
          description: "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group."
          type: string
        name:
          description: Name of the partner topic associated with the channel.
          type: string
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published."
        source:
          description: "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic."
          type: string
    EventTypeInfo:
      description: The event type information for Channels.
      type: object
      properties:
        kind:
          description: The kind of event type used.
          enum:
            - Inline
          type: string
          x-ms-enum:
            name: EventDefinitionKind
            modelAsString: true
        inlineEventTypes:
          description: "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type."
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InlineEventProperties'
    ResourceMoveChangeHistory:
      description: The change history of the resource move.
      type: object
      properties:
        azureSubscriptionId:
          description: Azure subscription ID of the resource.
          type: string
        resourceGroupName:
          description: Azure Resource Group of the resource.
          type: string
        changedTimeUtc:
          format: date-time
          description: UTC timestamp of when the resource was changed.
          type: string
    InlineEventProperties:
      description: Additional information about every inline event.
      type: object
      properties:
        description:
          description: The description for the inline event.
          type: string
        displayName:
          description: The displayName for the inline event.
          type: string
        documentationUrl:
          description: The documentationUrl for the inline event.
          type: string
        dataSchemaUrl:
          description: The dataSchemaUrl for the inline event.
          type: string
    WebhookPartnerDestinationProperties:
      description: Properties of a partner destination webhook.
      type: object
      properties:
        endpointUrl:
          description: The URL that represents the endpoint of the partner destination.
          type: string
        endpointBaseUrl:
          description: The base URL that represents the endpoint of the partner destination.
          type: string
        clientAuthentication:
          $ref: '#/components/schemas/PartnerClientAuthentication'
    AzureADPartnerClientAuthenticationProperties:
      description: Properties of an Azure Active Directory Partner Client Authentication.
      type: object
      properties:
        azureActiveDirectoryTenantId:
          description: The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
          type: string
        azureActiveDirectoryApplicationIdOrUri:
          description: The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
          type: string
    AzureADPartnerClientAuthentication:
      description: Azure Active Directory Partner Client Authentication
      x-ms-discriminator-value: AzureAD
      properties:
        clientAuthenticationType:
          description: Type of client authentication
          default: AzureAD
          enum:
            - AzureAD
          type: string
          x-ms-enum:
            name: PartnerClientAuthenticationType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/AzureADPartnerClientAuthenticationProperties'
          description: AzureAD ClientAuthentication Properties
          x-ms-client-flatten: true
      type: object
    PartnerClientAuthentication:
      description: Partner client authentication
      required:
        - clientAuthenticationType
      type: object
      properties:
        clientAuthenticationType:
          description: Type of client authentication
          default: AzureAD
          enum:
            - AzureAD
          type: string
          x-ms-enum:
            name: PartnerClientAuthenticationType
            modelAsString: true
      discriminator:
        propertyName: clientAuthenticationType
    WebhookPartnerDestinationInfo:
      description: Information about the WebHook of the partner destination.
      x-ms-discriminator-value: WebHook
      properties:
        azureSubscriptionId:
          description: "Azure subscription ID of the subscriber. The partner destination associated with the channel will be\r\ncreated under this Azure subscription."
          type: string
        resourceGroupName:
          description: "Azure Resource Group of the subscriber. The partner destination associated with the channel will be\r\ncreated under this resource group."
          type: string
        name:
          description: Name of the partner destination associated with the channel.
          type: string
        endpointType:
          description: Type of the endpoint for the partner destination
          default: WebHook
          enum:
            - WebHook
          type: string
          x-ms-enum:
            name: PartnerEndpointType
            modelAsString: true
        endpointServiceContext:
          description: Additional context of the partner destination endpoint.
          type: string
        resourceMoveChangeHistory:
          description: Change history of the resource move.
          type: array
          items:
            $ref: '#/components/schemas/ResourceMoveChangeHistory'
          x-ms-identifiers: []
        properties:
          $ref: '#/components/schemas/WebhookPartnerDestinationProperties'
          description: WebHook Properties of the partner destination.
          x-ms-client-flatten: true
      type: object
    PartnerDestinationInfo:
      description: Properties of the corresponding partner destination of a Channel.
      required:
        - endpointType
      type: object
      properties:
        azureSubscriptionId:
          description: "Azure subscription ID of the subscriber. The partner destination associated with the channel will be\r\ncreated under this Azure subscription."
          type: string
        resourceGroupName:
          description: "Azure Resource Group of the subscriber. The partner destination associated with the channel will be\r\ncreated under this resource group."
          type: string
        name:
          description: Name of the partner destination associated with the channel.
          type: string
        endpointType:
          description: Type of the endpoint for the partner destination
          default: WebHook
          enum:
            - WebHook
          type: string
          x-ms-enum:
            name: PartnerEndpointType
            modelAsString: true
        endpointServiceContext:
          description: Additional context of the partner destination endpoint.
          type: string
        resourceMoveChangeHistory:
          description: Change history of the resource move.
          type: array
          items:
            $ref: '#/components/schemas/ResourceMoveChangeHistory'
          x-ms-identifiers: []
      discriminator:
        propertyName: endpointType
    Channel:
      description: Channel info.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ChannelProperties'
          description: Properties of the Channel.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Channel resource.
          type: object
          readOnly: true
      type: object
    ChannelUpdateParameters:
      description: Properties of the Channel update.
      properties:
        properties:
          $ref: '#/components/schemas/ChannelUpdateParametersProperties'
          x-ms-client-flatten: true
      type: object
    ChannelUpdateParametersProperties:
      description: Properties of the channel update parameters.
      type: object
      properties:
        expirationTimeIfNotActivatedUtc:
          format: date-time
          description: "Expiration time of the channel. If this timer expires while the corresponding partner topic or partner destination is never activated,\r\nthe channel and corresponding partner topic or partner destination are deleted."
          type: string
        partnerDestinationInfo:
          $ref: '#/components/schemas/PartnerUpdateDestinationInfo'
          description: Partner destination properties which can be updated if the channel is of type PartnerDestination.
        partnerTopicInfo:
          $ref: '#/components/schemas/PartnerUpdateTopicInfo'
          description: Partner topic properties which can be updated if the channel is of type PartnerTopic.
    PartnerUpdateTopicInfo:
      description: Update properties for the corresponding partner topic of a channel.
      type: object
      properties:
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: Event type info for the partner topic
    WebhookUpdatePartnerDestinationInfo:
      description: Information about the update of the WebHook of the partner destination.
      x-ms-discriminator-value: WebHook
      properties:
        endpointType:
          description: Type of the endpoint for the partner destination
          default: WebHook
          enum:
            - WebHook
          type: string
          x-ms-enum:
            name: PartnerEndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/WebhookPartnerDestinationProperties'
          description: WebHook Properties of the partner destination.
          x-ms-client-flatten: true
      type: object
    PartnerUpdateDestinationInfo:
      description: Properties of the corresponding partner destination of a Channel.
      required:
        - endpointType
      type: object
      properties:
        endpointType:
          description: Type of the endpoint for the partner destination
          default: WebHook
          enum:
            - WebHook
          type: string
          x-ms-enum:
            name: PartnerEndpointType
            modelAsString: true
      discriminator:
        propertyName: endpointType
    ChannelsListResult:
      description: Result of the List Channels operation
      type: object
      properties:
        value:
          description: A collection of Channels.
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        nextLink:
          description: A link for the next page of channels.
          type: string
    ClientGroupProperties:
      description: The properties of client group.
      type: object
      properties:
        description:
          description: Description for the Client Group resource.
          type: string
        query:
          description: "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c']."
          type: string
        provisioningState:
          description: Provisioning state of the ClientGroup resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
          type: string
          readOnly: true
          x-ms-enum:
            name: ClientGroupProvisioningState
            modelAsString: true
    ClientGroup:
      description: The Client group resource.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ClientGroupProperties'
          description: The properties of client group.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to the ClientGroup resource.
          type: object
          readOnly: true
      type: object
    ClientGroupsListResult:
      description: Result of the List Client Group operation.
      type: object
      properties:
        value:
          description: A collection of Client Group.
          type: array
          items:
            $ref: '#/components/schemas/ClientGroup'
        nextLink:
          description: A link for the next page of Client Group.
          type: string
    ClientProperties:
      description: The properties of client.
      type: object
      properties:
        description:
          description: Description for the Client resource.
          type: string
        authenticationName:
          description: The name presented by the client for authentication. The default value is the name of the resource.
          type: string
        clientCertificateAuthentication:
          $ref: '#/components/schemas/ClientCertificateAuthentication'
          description: The client certificate authentication information.
        state:
          description: Indicates if the client is enabled or not. Default value is Enabled.
          default: Enabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ClientState
            modelAsString: true
        attributes:
          description: "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }"
          type: object
          additionalProperties: {}
        provisioningState:
          description: Provisioning state of the Client resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
          type: string
          readOnly: true
          x-ms-enum:
            name: ClientProvisioningState
            modelAsString: true
    ClientCertificateAuthentication:
      description: The certificate authentication properties for the client.
      type: object
      properties:
        validationScheme:
          description: The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.
          enum:
            - SubjectMatchesAuthenticationName
            - DnsMatchesAuthenticationName
            - UriMatchesAuthenticationName
            - IpMatchesAuthenticationName
            - EmailMatchesAuthenticationName
            - ThumbprintMatch
          type: string
          x-ms-enum:
            name: ClientCertificateValidationScheme
            modelAsString: true
        allowedThumbprints:
          description: The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.
          type: array
          items:
            type: string
    Client:
      description: The Client resource.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ClientProperties'
          description: The properties of client.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to the Client resource.
          type: object
          readOnly: true
      type: object
    ClientsListResult:
      description: Result of the List Client operation.
      type: object
      properties:
        value:
          description: A collection of Client.
          type: array
          items:
            $ref: '#/components/schemas/Client'
        nextLink:
          description: A link for the next page of Client.
          type: string
    DomainProperties:
      description: Properties of the Event Grid Domain Resource.
      type: object
      properties:
        privateEndpointConnections:
          description: List of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        provisioningState:
          description: Provisioning state of the Event Grid Domain Resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DomainProvisioningState
            modelAsString: true
        minimumTlsVersionAllowed:
          description: Minimum TLS version of the publisher allowed to publish to this domain
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        endpoint:
          description: Endpoint for the Event Grid Domain Resource which is used for publishing the events.
          type: string
          readOnly: true
        inputSchema:
          description: This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.
          enum:
            - EventGridSchema
            - CustomEventSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: InputSchema
            modelAsString: true
          default: EventGridSchema
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published."
        inputSchemaMapping:
          $ref: '#/components/schemas/InputSchemaMapping'
          description: Information about the InputSchemaMapping which specified the info about mapping event payload.
        metricResourceId:
          description: Metric resource id for the Event Grid Domain Resource.
          type: string
          readOnly: true
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.
          default: false
          type: boolean
        autoCreateTopicWithFirstSubscription:
          description: "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed."
          default: true
          type: boolean
        autoDeleteTopicWithLastSubscription:
          description: "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user."
          default: true
          type: boolean
        dataResidencyBoundary:
          description: Data Residency Boundary of the resource.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
    ResourceSku:
      description: Describes an EventGrid Resource Sku.
      type: object
      properties:
        name:
          description: 'The Sku name of the resource. The possible values are: Basic or Premium.'
          default: Basic
          enum:
            - Basic
            - Premium
          type: string
          x-ms-enum:
            name: Sku
            modelAsString: true
    IdentityInfo:
      description: The identity information for the resource.
      type: object
      properties:
        type:
          description: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
          type: string
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        principalId:
          description: The principal ID of resource identity.
          type: string
        tenantId:
          description: The tenant ID of resource.
          type: string
        userAssignedIdentities:
          description: "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage."
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserIdentityProperties'
    InboundIpRule:
      type: object
      properties:
        ipMask:
          description: IP Address in CIDR notation e.g., 10.0.0.0/8.
          type: string
        action:
          description: Action to perform based on the match or no match of the IpMask.
          enum:
            - Allow
          type: string
          x-ms-enum:
            name: IpActionType
            modelAsString: true
    UserIdentityProperties:
      description: The information about the user identity.
      type: object
      properties:
        principalId:
          description: The principal id of user assigned identity.
          type: string
        clientId:
          description: The client id of user assigned identity.
          type: string
    PrivateEndpointConnectionProperties:
      description: Properties of the private endpoint connection resource.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The Private Endpoint resource for this Connection.
        groupIds:
          description: GroupIds from the private link service resource.
          type: array
          items:
            type: string
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/ConnectionState'
          description: Details about the state of the connection.
        provisioningState:
          description: Provisioning state of the Private Endpoint Connection.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: ResourceProvisioningState
            modelAsString: true
    PrivateEndpoint:
      description: PrivateEndpoint information.
      type: object
      properties:
        id:
          description: The ARM identifier for Private Endpoint.
          type: string
    ConnectionState:
      description: ConnectionState information.
      type: object
      properties:
        status:
          description: Status of the connection.
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PersistedConnectionStatus
            modelAsString: true
        description:
          description: Description of the connection state.
          type: string
        actionsRequired:
          description: Actions required (if any).
          type: string
    JsonInputSchemaMappingProperties:
      description: This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JsonField'
          description: The mapping information for the Id property of the Event Grid Event.
        topic:
          $ref: '#/components/schemas/JsonField'
          description: The mapping information for the Topic property of the Event Grid Event.
        eventTime:
          $ref: '#/components/schemas/JsonField'
          description: The mapping information for the EventTime property of the Event Grid Event.
        eventType:
          $ref: '#/components/schemas/JsonFieldWithDefault'
          description: The mapping information for the EventType property of the Event Grid Event.
        subject:
          $ref: '#/components/schemas/JsonFieldWithDefault'
          description: The mapping information for the Subject property of the Event Grid Event.
        dataVersion:
          $ref: '#/components/schemas/JsonFieldWithDefault'
          description: The mapping information for the DataVersion property of the Event Grid Event.
    JsonField:
      description: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema.
      type: object
      properties:
        sourceField:
          description: Name of a field in the input event schema that's to be used as the source of a mapping.
          type: string
    JsonFieldWithDefault:
      description: "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
      type: object
      properties:
        sourceField:
          description: Name of a field in the input event schema that's to be used as the source of a mapping.
          type: string
        defaultValue:
          description: The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.
          type: string
    JsonInputSchemaMapping:
      description: This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.
      x-ms-discriminator-value: Json
      properties:
        inputSchemaMappingType:
          description: Type of the custom mapping
          enum:
            - Json
          type: string
          x-ms-enum:
            name: InputSchemaMappingType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/JsonInputSchemaMappingProperties'
          description: JSON Properties of the input schema mapping
          x-ms-client-flatten: true
      type: object
    InputSchemaMapping:
      description: By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
      required:
        - inputSchemaMappingType
      type: object
      properties:
        inputSchemaMappingType:
          description: Type of the custom mapping
          enum:
            - Json
          type: string
          x-ms-enum:
            name: InputSchemaMappingType
            modelAsString: true
      discriminator:
        propertyName: inputSchemaMappingType
    PrivateEndpointConnection:
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Properties of the PrivateEndpointConnection.
          x-ms-client-flatten: true
      type: object
    Domain:
      description: EventGrid Domain.
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/DomainProperties'
          description: Properties of the Event Grid Domain resource.
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/ResourceSku'
          description: The Sku pricing tier for the Event Grid Domain resource.
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the Event Grid Domain resource.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to the Event Grid Domain resource.
          type: object
          readOnly: true
      type: object
    DomainUpdateParameters:
      description: Properties of the Domain update.
      properties:
        tags:
          description: Tags of the domains resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/DomainUpdateParameterProperties'
          description: Properties of the resource.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the resource.
        sku:
          $ref: '#/components/schemas/ResourceSku'
          description: The Sku pricing tier for the domain.
      type: object
    DomainUpdateParameterProperties:
      description: Information of domain update parameter properties.
      type: object
      properties:
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        minimumTlsVersionAllowed:
          description: Minimum TLS version of the publisher allowed to publish to this domain
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.
          type: boolean
        autoCreateTopicWithFirstSubscription:
          description: "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed."
          type: boolean
        autoDeleteTopicWithLastSubscription:
          description: "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user."
          type: boolean
        dataResidencyBoundary:
          description: The data residency boundary for the domain.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: The eventTypeInfo for the domain.
    DomainsListResult:
      description: Result of the List Domains operation.
      type: object
      properties:
        value:
          description: A collection of Domains.
          type: array
          items:
            $ref: '#/components/schemas/Domain'
        nextLink:
          description: A link for the next page of domains.
          type: string
    DomainSharedAccessKeys:
      description: Shared access keys of the Domain.
      type: object
      properties:
        key1:
          description: Shared access key1 for the domain.
          type: string
        key2:
          description: Shared access key2 for the domain.
          type: string
    DomainRegenerateKeyRequest:
      description: Domain regenerate share access key request.
      required:
        - keyName
      type: object
      properties:
        keyName:
          description: Key name to regenerate key1 or key2.
          type: string
    DomainTopicProperties:
      description: Properties of the Domain Topic.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the domain topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DomainTopicProvisioningState
            modelAsString: true
      readOnly: true
    DomainTopic:
      description: Domain Topic.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DomainTopicProperties'
          description: Properties of the Domain Topic.
          readOnly: true
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Domain Topic resource.
          type: object
          readOnly: true
      type: object
    DomainTopicsListResult:
      description: Result of the List Domain Topics operation.
      type: object
      properties:
        value:
          description: A collection of Domain Topics.
          type: array
          items:
            $ref: '#/components/schemas/DomainTopic'
        nextLink:
          description: A link for the next page of domain topics.
          type: string
    DeliveryAttributeListResult:
      description: Result of the Get delivery attributes operation.
      type: object
      properties:
        value:
          description: A collection of DeliveryAttributeMapping
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    StaticDeliveryAttributeMappingProperties:
      description: Properties of static delivery attribute mapping.
      type: object
      properties:
        value:
          description: Value of the delivery attribute.
          type: string
        isSecret:
          description: Boolean flag to tell if the attribute contains sensitive information .
          default: false
          type: boolean
          x-ms-secret: true
    StaticDeliveryAttributeMapping:
      description: Static delivery attribute mapping details.
      x-ms-discriminator-value: Static
      properties:
        name:
          description: Name of the delivery attribute or header.
          type: string
        type:
          description: Type of the delivery attribute or header name.
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            name: DeliveryAttributeMappingType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/StaticDeliveryAttributeMappingProperties'
          description: Properties of static delivery attribute mapping.
          x-ms-client-flatten: true
      type: object
    DynamicDeliveryAttributeMappingProperties:
      description: Properties of dynamic delivery attribute mapping.
      type: object
      properties:
        sourceField:
          description: JSON path in the event which contains attribute value.
          type: string
    DynamicDeliveryAttributeMapping:
      description: Dynamic delivery attribute mapping details.
      x-ms-discriminator-value: Dynamic
      properties:
        name:
          description: Name of the delivery attribute or header.
          type: string
        type:
          description: Type of the delivery attribute or header name.
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            name: DeliveryAttributeMappingType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/DynamicDeliveryAttributeMappingProperties'
          description: Properties of dynamic delivery attribute mapping.
          x-ms-client-flatten: true
      type: object
    DeliveryAttributeMapping:
      description: Delivery attribute mapping details.
      required:
        - type
      type: object
      properties:
        name:
          description: Name of the delivery attribute or header.
          type: string
        type:
          description: Type of the delivery attribute or header name.
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            name: DeliveryAttributeMappingType
            modelAsString: true
      discriminator:
        propertyName: type
    SubscriptionProperties:
      description: Properties of the event subscription.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the event subscription.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - AwaitingManualAction
            - Deleted
            - DeleteFailed
            - CreateFailed
            - UpdatedFailed
          type: string
          readOnly: true
          x-ms-enum:
            name: SubscriptionProvisioningState
            modelAsString: true
        deliveryConfiguration:
          $ref: '#/components/schemas/DeliveryConfiguration'
          description: Information about the delivery configuration of the event subscription.
        eventDeliverySchema:
          description: The event delivery schema for the event subscription.
          enum:
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: DeliverySchema
            modelAsString: true
        filtersConfiguration:
          $ref: '#/components/schemas/FiltersConfiguration'
          description: Information about the filter for the event subscription.
        expirationTimeUtc:
          format: date-time
          description: Expiration time of the event subscription.
          type: string
    DeliveryConfiguration:
      description: Properties of the delivery configuration information of the event subscription.
      type: object
      properties:
        deliveryMode:
          description: Delivery mode of the event subscription.
          enum:
            - Queue
            - Push
          type: string
          x-ms-enum:
            name: DeliveryMode
            modelAsString: true
        queue:
          $ref: '#/components/schemas/QueueInfo'
          description: This property should be populated when deliveryMode is queue and represents information about the queue subscription.
        push:
          $ref: '#/components/schemas/PushInfo'
          description: This property should be populated when deliveryMode is push and represents information about the push subscription.
    FiltersConfiguration:
      description: Filters configuration for the Event Subscription.
      type: object
      properties:
        includedEventTypes:
          description: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.
          type: array
          items:
            type: string
        filters:
          description: An array of filters that are used for filtering event subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          x-ms-identifiers: []
    QueueInfo:
      description: Properties of the Queue info for event subscription.
      type: object
      properties:
        receiveLockDurationInSeconds:
          format: int32
          description: "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds."
          type: integer
        maxDeliveryCount:
          format: int32
          description: The maximum delivery count of the events.
          type: integer
        deadLetterDestinationWithResourceIdentity:
          $ref: '#/components/schemas/DeadLetterWithResourceIdentity'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering."
        eventTimeToLive:
          format: duration
          description: "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day."
          type: string
    DeadLetterWithResourceIdentity:
      description: Information about the deadletter destination with resource identity.
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/EventSubscriptionIdentity'
          description: The identity to use when dead-lettering events.
        deadLetterDestination:
          $ref: '#/components/schemas/DeadLetterDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering."
    EventSubscriptionIdentity:
      description: The identity information with the event subscription.
      type: object
      properties:
        type:
          description: The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
          enum:
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            name: EventSubscriptionIdentityType
            modelAsString: true
        userAssignedIdentity:
          description: The user identity associated with the resource.
          type: string
    StorageBlobDeadLetterDestinationProperties:
      description: Properties of the storage blob based dead letter destination.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: The Azure Resource ID of the storage account that is the destination of the deadletter events
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
        blobContainerName:
          description: The name of the Storage blob container that is the destination of the deadletter events
          type: string
    StorageBlobDeadLetterDestination:
      description: Information about the storage blob based dead letter destination.
      x-ms-discriminator-value: StorageBlob
      properties:
        endpointType:
          description: Type of the endpoint for the dead letter destination
          enum:
            - StorageBlob
          type: string
          x-ms-enum:
            name: DeadLetterEndPointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/StorageBlobDeadLetterDestinationProperties'
          description: The properties of the Storage Blob based deadletter destination
          x-ms-client-flatten: true
      type: object
    DeadLetterDestination:
      description: Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.
      required:
        - endpointType
      type: object
      properties:
        endpointType:
          description: Type of the endpoint for the dead letter destination
          enum:
            - StorageBlob
          type: string
          x-ms-enum:
            name: DeadLetterEndPointType
            modelAsString: true
      discriminator:
        propertyName: endpointType
    NumberInFilter:
      description: NumberIn Filter.
      x-ms-discriminator-value: NumberIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            format: double
            type: number
      type: object
    NumberNotInFilter:
      description: NumberNotIn Filter.
      x-ms-discriminator-value: NumberNotIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            format: double
            type: number
      type: object
    NumberLessThanFilter:
      description: NumberLessThan Filter.
      x-ms-discriminator-value: NumberLessThan
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    NumberGreaterThanFilter:
      description: NumberGreaterThan Filter.
      x-ms-discriminator-value: NumberGreaterThan
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    NumberLessThanOrEqualsFilter:
      description: NumberLessThanOrEquals Filter.
      x-ms-discriminator-value: NumberLessThanOrEquals
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    NumberGreaterThanOrEqualsFilter:
      description: NumberGreaterThanOrEquals Filter.
      x-ms-discriminator-value: NumberGreaterThanOrEquals
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    BoolEqualsFilter:
      description: BoolEquals Filter.
      x-ms-discriminator-value: BoolEquals
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          description: The boolean filter value.
          type: boolean
      type: object
    StringInFilter:
      description: StringIn Filter.
      x-ms-discriminator-value: StringIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringNotInFilter:
      description: StringNotIn Filter.
      x-ms-discriminator-value: StringNotIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringBeginsWithFilter:
      description: StringBeginsWith Filter.
      x-ms-discriminator-value: StringBeginsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringEndsWithFilter:
      description: StringEndsWith Filter.
      x-ms-discriminator-value: StringEndsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringContainsFilter:
      description: StringContains Filter.
      x-ms-discriminator-value: StringContains
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    NumberInRangeFilter:
      description: NumberInRange Filter.
      x-ms-discriminator-value: NumberInRange
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: array
            items:
              format: double
              type: number
      type: object
    NumberNotInRangeFilter:
      description: NumberNotInRange Filter.
      x-ms-discriminator-value: NumberNotInRange
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: array
            items:
              format: double
              type: number
      type: object
    StringNotBeginsWithFilter:
      description: StringNotBeginsWith Filter.
      x-ms-discriminator-value: StringNotBeginsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringNotEndsWithFilter:
      description: StringNotEndsWith Filter.
      x-ms-discriminator-value: StringNotEndsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringNotContainsFilter:
      description: StringNotContains Filter.
      x-ms-discriminator-value: StringNotContains
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    IsNullOrUndefinedFilter:
      description: IsNullOrUndefined Filter.
      x-ms-discriminator-value: IsNullOrUndefined
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
      type: object
    IsNotNullFilter:
      description: IsNotNull Filter.
      x-ms-discriminator-value: IsNotNull
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
      type: object
    Filter:
      description: "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter, StringEqualsFilter etc depending on the type of the key based on\r\nwhich you want to filter."
      type: object
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: FilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
      required:
        - operatorType
      discriminator:
        propertyName: operatorType
    Subscription:
      description: Event Subscription.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/SubscriptionProperties'
          description: Properties of the event subscription.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Event Subscription resource.
          type: object
          readOnly: true
      type: object
    SubscriptionUpdateParameters:
      description: Properties of the Event Subscription update.
      properties:
        properties:
          $ref: '#/components/schemas/SubscriptionUpdateParametersProperties'
          x-ms-client-flatten: true
      type: object
    SubscriptionUpdateParametersProperties:
      description: Properties of the Event Subscription update parameters.
      type: object
      properties:
        deliveryConfiguration:
          $ref: '#/components/schemas/DeliveryConfiguration'
          description: Information about the delivery configuration of the event subscription.
        eventDeliverySchema:
          description: The event delivery schema for the event subscription.
          enum:
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: DeliverySchema
            modelAsString: true
        filtersConfiguration:
          $ref: '#/components/schemas/FiltersConfiguration'
          description: Information about the filter for the event subscription.
        expirationTimeUtc:
          format: date-time
          description: Expiration time of the event subscription.
          type: string
    SubscriptionsListResult:
      description: Result of the List event subscriptions operation.
      type: object
      properties:
        value:
          description: A collection of Subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        nextLink:
          description: A link for the next page of event subscriptions
          type: string
    EventSubscriptionProperties:
      description: Properties of the Event Subscription.
      type: object
      properties:
        topic:
          description: Name of the topic of the event subscription.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the event subscription.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - AwaitingManualAction
          type: string
          readOnly: true
          x-ms-enum:
            name: EventSubscriptionProvisioningState
            modelAsString: true
        destination:
          $ref: '#/components/schemas/EventSubscriptionDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deliveryWithResourceIdentity:
          $ref: '#/components/schemas/DeliveryWithResourceIdentity'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        filter:
          $ref: '#/components/schemas/EventSubscriptionFilter'
          description: Information about the filter for the event subscription.
        labels:
          description: List of user defined labels.
          type: array
          items:
            type: string
        expirationTimeUtc:
          format: date-time
          description: Expiration time of the event subscription.
          type: string
        eventDeliverySchema:
          description: The event delivery schema for the event subscription.
          default: EventGridSchema
          enum:
            - EventGridSchema
            - CustomInputSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: EventDeliverySchema
            modelAsString: true
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
        deadLetterDestination:
          $ref: '#/components/schemas/DeadLetterDestination'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deadLetterWithResourceIdentity:
          $ref: '#/components/schemas/DeadLetterWithResourceIdentity'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
    DeliveryWithResourceIdentity:
      description: Information about the delivery for an event subscription with resource identity.
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/EventSubscriptionIdentity'
          description: The identity to use when delivering events.
        destination:
          $ref: '#/components/schemas/EventSubscriptionDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery."
    EventSubscriptionFilter:
      description: Filter for the Event Subscription.
      type: object
      properties:
        subjectBeginsWith:
          description: "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path."
          type: string
        subjectEndsWith:
          description: "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path."
          type: string
        includedEventTypes:
          description: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.
          type: array
          items:
            type: string
        isSubjectCaseSensitive:
          description: "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner."
          default: false
          type: boolean
        enableAdvancedFilteringOnArrays:
          description: Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.
          type: boolean
        advancedFilters:
          description: An array of advanced filters that are used for filtering event subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/AdvancedFilter'
          x-ms-identifiers: []
    RetryPolicy:
      description: Information about the retry policy for an event subscription.
      type: object
      properties:
        maxDeliveryAttempts:
          format: int32
          description: Maximum number of delivery retry attempts for events.
          default: 30
          type: integer
        eventTimeToLiveInMinutes:
          format: int32
          description: Time To Live (in minutes) for events.
          default: 1440
          type: integer
    WebHookEventSubscriptionDestinationProperties:
      description: Information about the webhook destination properties for an event subscription.
      type: object
      properties:
        endpointUrl:
          description: The URL that represents the endpoint of the destination of an event subscription.
          type: string
          x-ms-secret: true
        endpointBaseUrl:
          description: The base URL that represents the endpoint of the destination of an event subscription.
          type: string
          readOnly: true
        maxEventsPerBatch:
          format: int32
          description: Maximum number of events per batch.
          default: 1
          type: integer
        preferredBatchSizeInKilobytes:
          format: int32
          description: Preferred batch size in Kilobytes.
          default: 64
          type: integer
        azureActiveDirectoryTenantId:
          description: The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
          type: string
        azureActiveDirectoryApplicationIdOrUri:
          description: The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
          type: string
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
        minimumTlsVersionAllowed:
          description: Minimum TLS version that should be supported by webhook endpoint
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
    PushInfo:
      description: Properties of the destination info for event subscription supporting push.
      type: object
      properties:
        maxDeliveryCount:
          format: int32
          description: The maximum delivery count of the events.
          type: integer
        eventTimeToLive:
          description: "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day."
          type: string
        deadLetterDestinationWithResourceIdentity:
          $ref: '#/components/schemas/DeadLetterWithResourceIdentity'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering."
        deliveryWithResourceIdentity:
          $ref: '#/components/schemas/DeliveryWithResourceIdentity'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery."
        destination:
          $ref: '#/components/schemas/EventSubscriptionDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery."
    NumberInAdvancedFilter:
      description: NumberIn Advanced Filter.
      x-ms-discriminator-value: NumberIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            format: double
            type: number
      type: object
    NumberNotInAdvancedFilter:
      description: NumberNotIn Advanced Filter.
      x-ms-discriminator-value: NumberNotIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            format: double
            type: number
      type: object
    NumberLessThanAdvancedFilter:
      description: NumberLessThan Advanced Filter.
      x-ms-discriminator-value: NumberLessThan
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    NumberGreaterThanAdvancedFilter:
      description: NumberGreaterThan Advanced Filter.
      x-ms-discriminator-value: NumberGreaterThan
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    NumberLessThanOrEqualsAdvancedFilter:
      description: NumberLessThanOrEquals Advanced Filter.
      x-ms-discriminator-value: NumberLessThanOrEquals
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    NumberGreaterThanOrEqualsAdvancedFilter:
      description: NumberGreaterThanOrEquals Advanced Filter.
      x-ms-discriminator-value: NumberGreaterThanOrEquals
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          format: double
          description: The filter value.
          type: number
      type: object
    BoolEqualsAdvancedFilter:
      description: BoolEquals Advanced Filter.
      x-ms-discriminator-value: BoolEquals
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        value:
          description: The boolean filter value.
          type: boolean
      type: object
    StringInAdvancedFilter:
      description: StringIn Advanced Filter.
      x-ms-discriminator-value: StringIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringNotInAdvancedFilter:
      description: StringNotIn Advanced Filter.
      x-ms-discriminator-value: StringNotIn
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringBeginsWithAdvancedFilter:
      description: StringBeginsWith Advanced Filter.
      x-ms-discriminator-value: StringBeginsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringEndsWithAdvancedFilter:
      description: StringEndsWith Advanced Filter.
      x-ms-discriminator-value: StringEndsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringContainsAdvancedFilter:
      description: StringContains Advanced Filter.
      x-ms-discriminator-value: StringContains
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    NumberInRangeAdvancedFilter:
      description: NumberInRange Advanced Filter.
      x-ms-discriminator-value: NumberInRange
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: array
            items:
              format: double
              type: number
      type: object
    NumberNotInRangeAdvancedFilter:
      description: NumberNotInRange Advanced Filter.
      x-ms-discriminator-value: NumberNotInRange
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: array
            items:
              format: double
              type: number
      type: object
    StringNotBeginsWithAdvancedFilter:
      description: StringNotBeginsWith Advanced Filter.
      x-ms-discriminator-value: StringNotBeginsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringNotEndsWithAdvancedFilter:
      description: StringNotEndsWith Advanced Filter.
      x-ms-discriminator-value: StringNotEndsWith
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    StringNotContainsAdvancedFilter:
      description: StringNotContains Advanced Filter.
      x-ms-discriminator-value: StringNotContains
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      type: object
    IsNullOrUndefinedAdvancedFilter:
      description: IsNullOrUndefined Advanced Filter.
      x-ms-discriminator-value: IsNullOrUndefined
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
      type: object
    IsNotNullAdvancedFilter:
      description: IsNotNull Advanced Filter.
      x-ms-discriminator-value: IsNotNull
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
      type: object
    AdvancedFilter:
      description: This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.
      required:
        - operatorType
      type: object
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
      discriminator:
        propertyName: operatorType
    WebHookEventSubscriptionDestination:
      description: Information about the webhook destination for an event subscription.
      x-ms-discriminator-value: WebHook
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/WebHookEventSubscriptionDestinationProperties'
          description: WebHook Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    EventHubEventSubscriptionDestinationProperties:
      description: The properties for a event hub destination.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.
          type: string
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    EventHubEventSubscriptionDestination:
      description: Information about the event hub destination for an event subscription.
      x-ms-discriminator-value: EventHub
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/EventHubEventSubscriptionDestinationProperties'
          description: Event Hub Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    StorageQueueEventSubscriptionDestinationProperties:
      description: The properties for a storage queue destination.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts/queues
        queueName:
          description: The name of the Storage queue under a storage account that is the destination of an event subscription.
          type: string
        queueMessageTimeToLiveInSeconds:
          format: int64
          description: Storage queue message time to live in seconds. This value cannot be zero or negative with the exception of using -1 to indicate that the Time To Live of the message is Infinite.
          type: integer
    StorageQueueEventSubscriptionDestination:
      description: Information about the storage queue destination for an event subscription.
      x-ms-discriminator-value: StorageQueue
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/StorageQueueEventSubscriptionDestinationProperties'
          description: Storage Queue Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    HybridConnectionEventSubscriptionDestinationProperties:
      description: The properties for a hybrid connection destination.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: The Azure Resource ID of an hybrid connection that is the destination of an event subscription.
          type: string
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    HybridConnectionEventSubscriptionDestination:
      description: Information about the HybridConnection destination for an event subscription.
      x-ms-discriminator-value: HybridConnection
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/HybridConnectionEventSubscriptionDestinationProperties'
          description: Hybrid connection Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    ServiceBusQueueEventSubscriptionDestinationProperties:
      description: The properties that represent the Service Bus destination of an event subscription.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ServiceBus/namespaces/queues
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    ServiceBusQueueEventSubscriptionDestination:
      description: Information about the service bus destination for an event subscription.
      x-ms-discriminator-value: ServiceBusQueue
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ServiceBusQueueEventSubscriptionDestinationProperties'
          description: Service Bus Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    ServiceBusTopicEventSubscriptionDestinationProperties:
      description: The properties that represent the Service Bus Topic destination of an event subscription.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ServiceBus/namespaces/topics
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    ServiceBusTopicEventSubscriptionDestination:
      description: Information about the service bus topic destination for an event subscription.
      x-ms-discriminator-value: ServiceBusTopic
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ServiceBusTopicEventSubscriptionDestinationProperties'
          description: Service Bus Topic Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    AzureFunctionEventSubscriptionDestinationProperties:
      description: The properties that represent the Azure Function destination of an event subscription.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Web/sites/functions
        maxEventsPerBatch:
          format: int32
          description: Maximum number of events per batch.
          default: 1
          type: integer
        preferredBatchSizeInKilobytes:
          format: int32
          description: Preferred batch size in Kilobytes.
          default: 64
          type: integer
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    AzureFunctionEventSubscriptionDestination:
      description: Information about the azure function destination for an event subscription.
      x-ms-discriminator-value: AzureFunction
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/AzureFunctionEventSubscriptionDestinationProperties'
          description: Azure Function Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    PartnerEventSubscriptionDestinationProperties:
      type: object
      properties:
        resourceId:
          description: The Azure Resource Id that represents the endpoint of a Partner Destination of an event subscription.
          type: string
    PartnerEventSubscriptionDestination:
      x-ms-discriminator-value: PartnerDestination
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/PartnerEventSubscriptionDestinationProperties'
          description: Partner Destination Properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    MonitorAlertEventSubscriptionDestinationProperties:
      description: The properties that represent the Monitor Alert destination of an event subscription.
      type: object
      properties:
        severity:
          description: "The severity that will be attached to every Alert fired through this event subscription.\r\nThis field must be provided."
          enum:
            - Sev0
            - Sev1
            - Sev2
            - Sev3
            - Sev4
          type: string
          x-ms-enum:
            name: MonitorAlertSeverity
            modelAsString: true
        description:
          description: The description that will be attached to every Alert fired through this event subscription.
          type: string
        actionGroups:
          description: "The list of ARM Ids of Action Groups that will be triggered on every Alert fired through this event subscription.\r\nEach resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Insights/actionGroups/{ActionGroupName}."
          type: array
          items:
            format: arm-id
            type: string
            x-ms-arm-id-details:
              allowedResources:
                - type: Microsoft.Insights/actiongroups
    MonitorAlertEventSubscriptionDestination:
      description: Information about the Monitor Alert destination for an event subscription.
      x-ms-discriminator-value: MonitorAlert
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/MonitorAlertEventSubscriptionDestinationProperties'
          description: Monitor Alert properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    NamespaceTopicEventSubscriptionDestinationProperties:
      description: The properties that represent the Event Grid Namespace Topic destination of an event subscription.
      type: object
      properties:
        resourceId:
          format: arm-id
          description: "The Azure resource Id that represents the endpoint of the Event Grid Namespace Topic destination of an event subscription.\r\nThis field is required and the Namespace Topic resource listed must already exist.\r\nThe resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.EventGrid/namespaces/{NamespaceName}/topics/{TopicName}."
          type: string
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.EventGrid/namespaces/topics
    NamespaceTopicEventSubscriptionDestination:
      description: Information about the Namespace Topic destination for an event subscription.
      x-ms-discriminator-value: NamespaceTopic
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        properties:
          $ref: '#/components/schemas/NamespaceTopicEventSubscriptionDestinationProperties'
          description: Namespace Topic properties of the event subscription destination.
          x-ms-client-flatten: true
      type: object
    EventSubscriptionDestination:
      description: Information about the destination for an event subscription.
      required:
        - endpointType
      type: object
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
            - PartnerDestination
            - MonitorAlert
            - NamespaceTopic
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
      discriminator:
        propertyName: endpointType
    EventSubscription:
      description: Event Subscription.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/EventSubscriptionProperties'
          description: Properties of the event subscription.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Event Subscription resource.
          type: object
          readOnly: true
      type: object
    EventSubscriptionUpdateParameters:
      description: Properties of the Event Subscription update.
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/EventSubscriptionDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deliveryWithResourceIdentity:
          $ref: '#/components/schemas/DeliveryWithResourceIdentity'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        filter:
          $ref: '#/components/schemas/EventSubscriptionFilter'
          description: Information about the filter for the event subscription.
        labels:
          description: List of user defined labels.
          type: array
          items:
            type: string
        expirationTimeUtc:
          format: date-time
          description: Information about the expiration time for the event subscription.
          type: string
        eventDeliverySchema:
          description: The event delivery schema for the event subscription.
          enum:
            - EventGridSchema
            - CustomInputSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: EventDeliverySchema
            modelAsString: true
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
        deadLetterDestination:
          $ref: '#/components/schemas/DeadLetterDestination'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deadLetterWithResourceIdentity:
          $ref: '#/components/schemas/DeadLetterWithResourceIdentity'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering."
    EventSubscriptionFullUrl:
      description: Full endpoint URL of an event subscription
      type: object
      properties:
        endpointUrl:
          description: The URL that represents the endpoint of the destination of an event subscription.
          type: string
    EventSubscriptionsListResult:
      description: Result of the List EventSubscriptions operation
      type: object
      properties:
        value:
          description: A collection of EventSubscriptions
          type: array
          items:
            $ref: '#/components/schemas/EventSubscription'
        nextLink:
          description: A link for the next page of event subscriptions
          type: string
    NamespaceProperties:
      description: Properties of the namespace resource.
      type: object
      properties:
        privateEndpointConnections:
          description: List of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        provisioningState:
          description: Provisioning state of the namespace resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
            - DeleteFailed
            - CreateFailed
            - UpdatedFailed
          type: string
          readOnly: true
          x-ms-enum:
            name: NamespaceProvisioningState
            modelAsString: true
        topicsConfiguration:
          $ref: '#/components/schemas/TopicsConfiguration'
          description: Topics configuration information for the namespace resource
        topicSpacesConfiguration:
          $ref: '#/components/schemas/TopicSpacesConfiguration'
          description: Topic spaces configuration information for the namespace resource
        isZoneRedundant:
          description: "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated."
          type: boolean
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        minimumTlsVersionAllowed:
          description: Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
    NamespaceSku:
      description: Represents available Sku pricing tiers.
      type: object
      properties:
        name:
          description: The name of the SKU.
          enum:
            - Standard
          type: string
          x-ms-enum:
            name: SkuName
            modelAsString: true
        capacity:
          format: int32
          description: "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20."
          type: integer
    TopicsConfiguration:
      description: Properties of the Topics Configuration.
      type: object
      properties:
        hostname:
          description: The hostname for the topics configuration. This is a read-only property.
          type: string
          readOnly: true
        customDomains:
          description: List of custom domain configurations for the namespace.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomainConfiguration'
          x-ms-identifiers: []
    TopicSpacesConfiguration:
      description: Properties of the Topic Spaces Configuration.
      type: object
      properties:
        state:
          description: Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
          default: Disabled
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TopicSpacesConfigurationState
            modelAsString: true
        routeTopicResourceId:
          description: "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located."
          type: string
        hostname:
          description: The endpoint for the topic spaces configuration. This is a read-only property.
          type: string
          readOnly: true
        routingEnrichments:
          $ref: '#/components/schemas/RoutingEnrichments'
          description: Routing enrichments for topic spaces configuration
        clientAuthentication:
          $ref: '#/components/schemas/ClientAuthenticationSettings'
          description: Client authentication settings for topic spaces configuration.
        maximumSessionExpiryInHours:
          format: int32
          description: "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours."
          type: integer
        maximumClientSessionsPerAuthenticationName:
          format: int32
          description: "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100."
          type: integer
        routingIdentityInfo:
          $ref: '#/components/schemas/RoutingIdentityInfo'
          description: Routing identity info for topic spaces configuration.
        customDomains:
          description: List of custom domain configurations for the namespace.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomainConfiguration'
          x-ms-identifiers: []
    CustomDomainConfiguration:
      description: A custom domain configuration that allows users to publish to their own domain name.
      required:
        - fullyQualifiedDomainName
      type: object
      properties:
        fullyQualifiedDomainName:
          description: Fully Qualified Domain Name (FQDN) for the custom domain.
          type: string
        validationState:
          description: Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.
          enum:
            - Pending
            - Approved
            - ErrorRetrievingDnsRecord
          type: string
          x-ms-enum:
            name: CustomDomainValidationState
            modelAsString: true
        identity:
          $ref: '#/components/schemas/CustomDomainIdentity'
          description: Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.
        certificateUrl:
          description: "The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either\r\nversioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,\r\nhttps://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)"
          type: string
        expectedTxtRecordName:
          description: "Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.\r\nThe values under this TXT record must contain the expected TXT record value."
          type: string
        expectedTxtRecordValue:
          description: Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.
          type: string
    RoutingEnrichments:
      type: object
      properties:
        static:
          type: array
          items:
            $ref: '#/components/schemas/StaticRoutingEnrichment'
          x-ms-identifiers: []
        dynamic:
          type: array
          items:
            $ref: '#/components/schemas/DynamicRoutingEnrichment'
          x-ms-identifiers: []
    ClientAuthenticationSettings:
      description: Client authentication settings for namespace resource.
      type: object
      properties:
        alternativeAuthenticationNameSources:
          description: Alternative authentication name sources related to client authentication settings for namespace resource.
          type: array
          items:
            description: Alternative authentication name sources related to client authentication settings for namespace resource.
            enum:
              - ClientCertificateSubject
              - ClientCertificateDns
              - ClientCertificateUri
              - ClientCertificateIp
              - ClientCertificateEmail
            type: string
            x-ms-enum:
              name: AlternativeAuthenticationNameSource
              modelAsString: true
        customJwtAuthentication:
          $ref: '#/components/schemas/CustomJwtAuthenticationSettings'
          description: Custom JWT authentication settings for namespace resource.
    RoutingIdentityInfo:
      description: Routing identity info for topic spaces configuration.
      type: object
      properties:
        type:
          description: Routing identity type for topic spaces configuration.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            name: RoutingIdentityType
            modelAsString: true
        userAssignedIdentity:
          type: string
    CustomDomainIdentity:
      description: The identity information for retrieving the certificate for the custom domain.
      type: object
      properties:
        type:
          description: The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
          enum:
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            name: CustomDomainIdentityType
            modelAsString: true
        userAssignedIdentity:
          description: The user identity associated with the resource.
          type: string
    DynamicRoutingEnrichment:
      type: object
      properties:
        key:
          description: Dynamic routing enrichment key.
          type: string
        value:
          description: Dynamic routing enrichment value.
          type: string
    StaticStringRoutingEnrichment:
      x-ms-discriminator-value: String
      properties:
        key:
          description: Static routing enrichment key.
          type: string
        valueType:
          description: Static routing enrichment value type. For e.g. this property value can be 'String'.
          enum:
            - String
          type: string
          x-ms-enum:
            name: StaticRoutingEnrichmentType
            modelAsString: true
        value:
          description: String type routing enrichment value.
          type: string
      type: object
    StaticRoutingEnrichment:
      description: Static routing enrichment details.
      required:
        - valueType
      type: object
      properties:
        key:
          description: Static routing enrichment key.
          type: string
        valueType:
          description: Static routing enrichment value type. For e.g. this property value can be 'String'.
          enum:
            - String
          type: string
          x-ms-enum:
            name: StaticRoutingEnrichmentType
            modelAsString: true
      discriminator:
        propertyName: valueType
    Namespace:
      description: Namespace resource.
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/NamespaceProperties'
          description: Properties of the Namespace resource.
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/NamespaceSku'
          description: Represents available Sku pricing tiers.
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the Namespace resource.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to the namespace resource.
          type: object
          readOnly: true
      type: object
    NamespaceUpdateParameters:
      description: Properties to update namespace.
      properties:
        tags:
          description: Tags of the namespace resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Namespace resource identity information.
        sku:
          $ref: '#/components/schemas/NamespaceSku'
          description: Represents available Sku pricing tiers.
        properties:
          $ref: '#/components/schemas/NamespaceUpdateParameterProperties'
          description: Properties of the namespace resource.
          x-ms-client-flatten: true
      type: object
    NamespaceUpdateParameterProperties:
      description: Information of namespace update parameter properties.
      type: object
      properties:
        topicSpacesConfiguration:
          $ref: '#/components/schemas/UpdateTopicSpacesConfigurationInfo'
          description: Topic spaces configuration properties that can be updated.
        topicsConfiguration:
          $ref: '#/components/schemas/UpdateTopicsConfigurationInfo'
          description: Topics configuration properties that can be updated.
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
    UpdateTopicSpacesConfigurationInfo:
      description: Properties of the topic spaces configuration info of a namespace.
      type: object
      properties:
        state:
          description: Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TopicSpacesConfigurationState
            modelAsString: true
        routeTopicResourceId:
          description: This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.
          type: string
        routingEnrichments:
          $ref: '#/components/schemas/RoutingEnrichments'
          description: Routing enrichments for topic spaces configuration.
        clientAuthentication:
          $ref: '#/components/schemas/ClientAuthenticationSettings'
          description: Client authentication settings for topic spaces configuration.
        maximumSessionExpiryInHours:
          format: int32
          description: "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours."
          type: integer
        maximumClientSessionsPerAuthenticationName:
          format: int32
          description: "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100."
          type: integer
        routingIdentityInfo:
          $ref: '#/components/schemas/RoutingIdentityInfo'
          description: Routing identity info for topic spaces configuration.
        customDomains:
          description: Custom domain info for topic spaces configuration.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomainConfiguration'
          x-ms-identifiers: []
    NamespacesListResult:
      description: Result of the List Namespaces operation.
      type: object
      properties:
        value:
          description: A collection of namespaces.
          type: array
          items:
            $ref: '#/components/schemas/Namespace'
        nextLink:
          description: A link for the next page of namespaces.
          type: string
    NamespaceSharedAccessKeys:
      description: Shared access keys of the Namespace.
      type: object
      properties:
        key1:
          description: Shared access key1 for the namespace.
          type: string
          x-ms-secret: true
        key2:
          description: Shared access key2 for the namespace.
          type: string
          x-ms-secret: true
    NamespaceRegenerateKeyRequest:
      description: Namespace regenerate share access key request.
      required:
        - keyName
      type: object
      properties:
        keyName:
          description: Key name to regenerate key1 or key2.
          type: string
    NamespaceTopicProperties:
      description: Properties of the namespace topic.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the namespace topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
            - DeleteFailed
            - CreateFailed
            - UpdatedFailed
          type: string
          readOnly: true
          x-ms-enum:
            name: NamespaceTopicProvisioningState
            modelAsString: true
        publisherType:
          description: Publisher type of the namespace topic.
          enum:
            - Custom
          type: string
          x-ms-enum:
            name: PublisherType
            modelAsString: true
        inputSchema:
          description: This determines the format that is expected for incoming events published to the topic.
          enum:
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: EventInputSchema
            modelAsString: true
          default: CloudEventSchemaV1_0
        eventRetentionInDays:
          format: int32
          description: "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day."
          type: integer
    NamespaceTopic:
      description: Namespace topic details.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/NamespaceTopicProperties'
          description: Properties of the namespace topic.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to namespace topic resource.
          type: object
          readOnly: true
      type: object
    NamespaceTopicUpdateParameters:
      description: Properties of the namespace topic update.
      properties:
        properties:
          $ref: '#/components/schemas/NamespaceTopicUpdateParameterProperties'
          description: Properties of the namespace topic resource.
          x-ms-client-flatten: true
      type: object
    NamespaceTopicUpdateParameterProperties:
      description: Information of namespace topic update parameter properties.
      type: object
      properties:
        eventRetentionInDays:
          format: int32
          description: "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day."
          type: integer
    NamespaceTopicsListResult:
      description: Result of the List namespace topics operation.
      type: object
      properties:
        value:
          description: A collection of namespace topics.
          type: array
          items:
            $ref: '#/components/schemas/NamespaceTopic'
        nextLink:
          description: A link for the next page of namespace topics.
          type: string
    OperationsListResult:
      description: Result of the List Operations operation
      type: object
      properties:
        value:
          description: A collection of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
    OperationInfo:
      description: Information about an operation
      type: object
      properties:
        provider:
          description: Name of the provider
          type: string
        resource:
          description: Name of the resource type
          type: string
        operation:
          description: Name of the operation
          type: string
        description:
          description: Description of the operation
          type: string
    PartnerConfigurationProperties:
      description: Properties of the partner configuration.
      type: object
      properties:
        partnerAuthorization:
          $ref: '#/components/schemas/PartnerAuthorization'
          description: The details of authorized partners.
        provisioningState:
          description: Provisioning state of the partner configuration.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: PartnerConfigurationProvisioningState
            modelAsString: true
    PartnerAuthorization:
      description: The partner authorization details.
      type: object
      properties:
        defaultMaximumExpirationTimeInDays:
          format: int32
          description: "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days."
          type: integer
        authorizedPartnersList:
          description: The list of authorized partners.
          type: array
          items:
            $ref: '#/components/schemas/Partner'
          x-ms-identifiers: []
    Partner:
      description: Information about the partner.
      type: object
      properties:
        partnerRegistrationImmutableId:
          format: uuid
          description: The immutableId of the corresponding partner registration.
          type: string
        partnerName:
          description: The partner name.
          type: string
        authorizationExpirationTimeInUtc:
          format: date-time
          description: "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified."
          type: string
    PartnerConfiguration:
      description: Partner configuration information
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/PartnerConfigurationProperties'
          description: Properties of the partner configuration.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to partner configuration resource.
          type: object
          readOnly: true
        location:
          description: Location of the resource.
          type: string
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    PartnerConfigurationUpdateParameters:
      description: Properties of the partner configuration update.
      properties:
        tags:
          description: Tags of the partner configuration resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerConfigurationUpdateParameterProperties'
          description: Properties of the Topic resource.
          x-ms-client-flatten: true
      type: object
    PartnerConfigurationUpdateParameterProperties:
      description: Information of partner configuration update parameter properties.
      type: object
      properties:
        defaultMaximumExpirationTimeInDays:
          format: int32
          description: The default time used to validate the maximum expiration time for each authorized partners in days. Allowed values ar between 1 and 365 days.
          type: integer
    PartnerConfigurationsListResult:
      description: Result of the List partner configurations operation
      type: object
      properties:
        value:
          description: A collection of partner configurations.
          type: array
          items:
            $ref: '#/components/schemas/PartnerConfiguration'
        nextLink:
          description: A link for the next page of partner configurations.
          type: string
    PartnerDestinationProperties:
      description: Properties of the Partner Destination.
      type: object
      properties:
        partnerRegistrationImmutableId:
          format: uuid
          description: The immutable Id of the corresponding partner registration.
          type: string
        endpointServiceContext:
          description: Endpoint context associated with this partner destination.
          type: string
        expirationTimeIfNotActivatedUtc:
          format: date-time
          description: "Expiration time of the partner destination. If this timer expires and the partner destination was never activated,\r\nthe partner destination and corresponding channel are deleted."
          type: string
        provisioningState:
          description: Provisioning state of the partner destination.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - IdleDueToMirroredChannelResourceDeletion
          type: string
          readOnly: true
          x-ms-enum:
            name: PartnerDestinationProvisioningState
            modelAsString: true
        activationState:
          description: Activation state of the partner destination.
          enum:
            - NeverActivated
            - Activated
          type: string
          x-ms-enum:
            name: PartnerDestinationActivationState
            modelAsString: true
        endpointBaseUrl:
          description: Endpoint Base URL of the partner destination
          type: string
        messageForActivation:
          description: Context or helpful message that can be used during the approval process.
          type: string
    PartnerDestination:
      description: Event Grid Partner Destination.
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerDestinationProperties'
          description: Properties of the Partner Destination.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Partner Destination resource.
          type: object
          readOnly: true
      type: object
    PartnerDestinationUpdateParameters:
      description: Properties of the Partner Destination that can be updated.
      type: object
      properties:
        tags:
          description: Tags of the Partner Destination resource.
          type: object
          additionalProperties:
            type: string
    PartnerDestinationsListResult:
      description: Result of the List Partner Destinations operation.
      type: object
      properties:
        value:
          description: A collection of partner destinations.
          type: array
          items:
            $ref: '#/components/schemas/PartnerDestination'
        nextLink:
          description: A link for the next page of partner destinations.
          type: string
    PartnerNamespaceProperties:
      description: Properties of the partner namespace.
      type: object
      properties:
        privateEndpointConnections:
          description: List of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        provisioningState:
          description: Provisioning state of the partner namespace.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: PartnerNamespaceProvisioningState
            modelAsString: true
        partnerRegistrationFullyQualifiedId:
          description: "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}."
          type: string
        minimumTlsVersionAllowed:
          description: Minimum TLS version of the publisher allowed to publish to this partner namespace
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        endpoint:
          description: Endpoint for the partner namespace.
          type: string
          readOnly: true
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
          default: false
          type: boolean
        partnerTopicRoutingMode:
          description: "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic."
          default: SourceEventAttribute
          enum:
            - SourceEventAttribute
            - ChannelNameHeader
          type: string
          x-ms-enum:
            name: PartnerTopicRoutingMode
            modelAsString: true
    PartnerNamespace:
      description: EventGrid Partner Namespace.
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerNamespaceProperties'
          description: Properties of the Partner Namespace.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Partner Namespace resource.
          type: object
          readOnly: true
      type: object
    PartnerNamespaceUpdateParameters:
      description: Properties of the Partner Namespace update.
      properties:
        tags:
          description: Tags of the Partner Namespace.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerNamespaceUpdateParameterProperties'
          description: Properties of the Partner Namespace.
          x-ms-client-flatten: true
      type: object
    PartnerNamespaceUpdateParameterProperties:
      description: Information of Partner Namespace update parameter properties.
      type: object
      properties:
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceUpdateParameterProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        minimumTlsVersionAllowed:
          description: Minimum TLS version of the publisher allowed to publish to this domain
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
          type: boolean
    PartnerNamespacesListResult:
      description: Result of the List Partner Namespaces operation
      type: object
      properties:
        value:
          description: A collection of partner namespaces.
          type: array
          items:
            $ref: '#/components/schemas/PartnerNamespace'
        nextLink:
          description: A link for the next page of partner namespaces.
          type: string
    PartnerNamespaceSharedAccessKeys:
      description: Shared access keys of the partner namespace.
      type: object
      properties:
        key1:
          description: Shared access key1 for the partner namespace.
          type: string
        key2:
          description: Shared access key2 for the partner namespace.
          type: string
    PartnerNamespaceRegenerateKeyRequest:
      description: PartnerNamespace regenerate shared access key request.
      required:
        - keyName
      type: object
      properties:
        keyName:
          description: Key name to regenerate (key1 or key2).
          type: string
    PartnerRegistrationProperties:
      description: Properties of the partner registration.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the partner registration.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: PartnerRegistrationProvisioningState
            modelAsString: true
        partnerRegistrationImmutableId:
          format: uuid
          description: "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version"
          type: string
    PartnerRegistration:
      description: Information about a partner registration.
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerRegistrationProperties'
          description: Properties of the partner registration.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Partner Registration resource.
          type: object
          readOnly: true
      type: object
    PartnerRegistrationUpdateParameters:
      description: Properties of the Partner Registration update.
      type: object
      properties:
        tags:
          description: Tags of the partner registration resource.
          type: object
          additionalProperties:
            type: string
    PartnerRegistrationsListResult:
      description: Result of the List Partner Registrations operation.
      type: object
      properties:
        value:
          description: A collection of partner registrations.
          type: array
          items:
            $ref: '#/components/schemas/PartnerRegistration'
        nextLink:
          description: A link for the next page of partner registrations.
          type: string
    PartnerTopicProperties:
      description: Properties of the Partner Topic.
      type: object
      properties:
        partnerRegistrationImmutableId:
          format: uuid
          description: The immutableId of the corresponding partner registration.
          type: string
        source:
          description: Source associated with this partner topic. This represents a unique partner resource.
          type: string
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: Event Type information from the corresponding event channel.
        expirationTimeIfNotActivatedUtc:
          format: date-time
          description: "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted."
          type: string
        provisioningState:
          description: Provisioning state of the partner topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - IdleDueToMirroredChannelResourceDeletion
          type: string
          readOnly: true
          x-ms-enum:
            name: PartnerTopicProvisioningState
            modelAsString: true
        activationState:
          description: Activation state of the partner topic.
          enum:
            - NeverActivated
            - Activated
            - Deactivated
          type: string
          x-ms-enum:
            name: PartnerTopicActivationState
            modelAsString: true
        partnerTopicFriendlyDescription:
          description: "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer."
          type: string
        messageForActivation:
          description: Context or helpful message that can be used during the approval process by the subscriber.
          type: string
    PartnerTopic:
      description: Event Grid Partner Topic.
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerTopicProperties'
          description: Properties of the Partner Topic.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Partner Topic resource.
          type: object
          readOnly: true
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the Partner Topic resource.
      type: object
    PartnerTopicUpdateParameters:
      description: Properties of the Partner Topic update.
      type: object
      properties:
        tags:
          description: Tags of the Partner Topic resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the Partner Topic resource.
    PartnerTopicsListResult:
      description: Result of the List Partner Topics operation.
      type: object
      properties:
        value:
          description: A collection of partner topics.
          type: array
          items:
            $ref: '#/components/schemas/PartnerTopic'
        nextLink:
          description: A link for the next page of partner topics.
          type: string
    NetworkSecurityPerimeterConfigurationProperties:
      description: Network security perimeter configuration information to reflect latest association and nsp profile configuration.
      type: object
      properties:
        provisioningState:
          description: Provisioning state to reflect configuration state and indicate status of nsp profile configuration retrieval.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
            - Accepted
          type: string
          x-ms-enum:
            name: NetworkSecurityPerimeterConfigProvisioningState
            modelAsString: true
        provisioningIssues:
          description: Provisioning issues to reflect status when attempting to retrieve nsp profile configuration.
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationIssues'
          x-ms-identifiers: []
        networkSecurityPerimeter:
          $ref: '#/components/schemas/NetworkSecurityPerimeterInfo'
          description: Perimeter info for nsp association.
        resourceAssociation:
          $ref: '#/components/schemas/ResourceAssociation'
          description: Nsp association name and access mode of association.
        profile:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProfile'
          description: Nsp profile configuration, access rules and diagnostic settings.
    NetworkSecurityPerimeterConfigurationIssues:
      description: Network security perimeter configuration issues.
      properties:
        name:
          description: Provisioning issue name.
          type: string
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationIssuesProperties'
          description: Provisioning issue properties.
          x-ms-client-flatten: true
      type: object
    NetworkSecurityPerimeterInfo:
      description: Network security perimeter info.
      type: object
      properties:
        id:
          description: Arm id for network security perimeter.
          type: string
        perimeterGuid:
          description: Network security perimeter guid.
          type: string
        location:
          description: Network security perimeter location.
          type: string
    ResourceAssociation:
      description: Nsp resource association
      type: object
      properties:
        name:
          description: Association name
          type: string
        accessMode:
          description: Network security perimeter access mode.
          enum:
            - Learning
            - Enforced
            - Audit
          type: string
          x-ms-enum:
            name: NetworkSecurityPerimeterAssociationAccessMode
            modelAsString: true
    NetworkSecurityPerimeterConfigurationProfile:
      description: Nsp configuration with profile information.
      type: object
      properties:
        name:
          description: Nsp configuration profile name.
          type: string
        accessRulesVersion:
          description: Access rules version number for nsp profile.
          type: string
        accessRules:
          description: List of inbound or outbound access rule setup on the nsp profile.
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterProfileAccessRule'
          x-ms-identifiers: []
        diagnosticSettingsVersion:
          description: Diagnostic settings version number for nsp profile.
          type: string
        enabledLogCategories:
          description: Enabled log categories for nsp profile.
          type: array
          items:
            type: string
    NetworkSecurityPerimeterConfigurationIssuesProperties:
      description: Network security perimeter configuration issues properties.
      type: object
      properties:
        issueType:
          description: Provisioning issue type.
          enum:
            - MissingPerimeterConfiguration
            - MissingIdentityConfiguration
            - ConfigurationPropagationFailure
            - Other
          type: string
          x-ms-enum:
            name: NetworkSecurityPerimeterConfigurationIssueType
            modelAsString: true
        severity:
          description: Provisioning issue severity.
          enum:
            - Warning
            - Error
          type: string
          x-ms-enum:
            name: NetworkSecurityPerimeterConfigurationIssueSeverity
            modelAsString: true
        description:
          description: Provisioning issue description.
          type: string
        suggestedResourceIds:
          description: ARM IDs of resources that can be associated to the same perimeter to remediate the issue.
          type: array
          items:
            type: string
        suggestedAccessRules:
          description: Access rules that can be added to the same profile to remediate the issue.
          type: array
          items:
            type: string
    NetworkSecurityPerimeterProfileAccessRule:
      description: Network security perimeter profile access rule.
      properties:
        fullyQualifiedArmId:
          description: Fully Qualified Arm id for network security perimeter profile access rule.
          type: string
        name:
          description: Name for nsp access rule.
          type: string
        type:
          description: nsp access rule type.
          type: string
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterProfileAccessRuleProperties'
          description: NSP access rule properties.
          x-ms-client-flatten: true
      type: object
    NetworkSecurityPerimeterProfileAccessRuleProperties:
      description: Network security perimeter profile access rule properties.
      type: object
      properties:
        direction:
          description: NSP access rule direction.
          enum:
            - Inbound
            - Outbound
          type: string
          x-ms-enum:
            name: NetworkSecurityPerimeterProfileAccessRuleDirection
            modelAsString: true
        addressPrefixes:
          description: Address prefixes.
          type: array
          items:
            type: string
        subscriptions:
          description: List of subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterSubscription'
        networkSecurityPerimeters:
          description: Network security perimeters.
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterInfo'
        fullyQualifiedDomainNames:
          description: Fully qualified domain names.
          type: array
          items:
            type: string
        emailAddresses:
          description: List of email addresses.
          type: array
          items:
            type: string
        phoneNumbers:
          description: List of phone numbers.
          type: array
          items:
            type: string
    NetworkSecurityPerimeterSubscription:
      description: Network security perimeter subscription inbound access rule.
      type: object
      properties:
        id:
          description: Subscription id.
          type: string
    NetworkSecurityPerimeterConfiguration:
      description: Network security perimeter configuration.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProperties'
          description: Properties of the network security perimeter configuration.
          x-ms-client-flatten: true
      type: object
    NetworkSecurityPerimeterConfigurationList:
      description: Network security perimeter configuration List.
      type: object
      properties:
        value:
          description: List of all network security parameter configurations.
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        nextLink:
          description: A link for the next page of Network Security Perimeter Configuration.
          type: string
    PermissionBindingProperties:
      description: The properties of permission binding.
      type: object
      properties:
        description:
          description: Description for the Permission Binding resource.
          type: string
        topicSpaceName:
          description: "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of."
          type: string
        permission:
          description: The allowed permission.
          enum:
            - Publisher
            - Subscriber
          type: string
          x-ms-enum:
            name: PermissionType
            modelAsString: true
        clientGroupName:
          description: "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of."
          type: string
        provisioningState:
          description: Provisioning state of the PermissionBinding resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
          type: string
          readOnly: true
          x-ms-enum:
            name: PermissionBindingProvisioningState
            modelAsString: true
    PermissionBinding:
      description: The Permission binding resource.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/PermissionBindingProperties'
          description: The properties of permission binding.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to the PermissionBinding resource.
          type: object
          readOnly: true
      type: object
    PermissionBindingsListResult:
      description: Result of the List Permission Binding operation.
      type: object
      properties:
        value:
          description: A collection of Permission Binding.
          type: array
          items:
            $ref: '#/components/schemas/PermissionBinding'
        nextLink:
          description: A link for the next page of Permission Binding.
          type: string
    PrivateEndpointConnectionListResult:
      description: Result of the list of all private endpoint connections operation.
      type: object
      properties:
        value:
          description: A collection of private endpoint connection resources.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          description: A link for the next page of private endpoint connection resources.
          type: string
    PrivateLinkResource:
      description: Information of the private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Properties of the private link resource.
          x-ms-client-flatten: true
        id:
          description: Fully qualified identifier of the resource.
          type: string
        name:
          description: Name of the resource.
          type: string
        type:
          description: Type of the resource.
          type: string
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          type: string
        displayName:
          type: string
        requiredMembers:
          type: array
          items:
            type: string
        requiredZoneNames:
          type: array
          items:
            type: string
    PrivateLinkResourcesListResult:
      description: Result of the List private link resources operation.
      type: object
      properties:
        value:
          description: A collection of private link resources
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: A link for the next page of private link resources.
          type: string
    SystemTopicProperties:
      description: Properties of the System Topic.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the system topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: ResourceProvisioningState
            modelAsString: true
        source:
          description: Source for the system topic.
          type: string
        topicType:
          description: TopicType for the system topic.
          type: string
        metricResourceId:
          description: Metric resource id for the system topic.
          type: string
          readOnly: true
    SystemTopic:
      description: EventGrid System Topic.
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/SystemTopicProperties'
          description: Properties of the system topic.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to System Topic resource.
          type: object
          readOnly: true
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the resource.
      type: object
    SystemTopicUpdateParameters:
      description: Properties of the System Topic update.
      type: object
      properties:
        tags:
          description: Tags of the system topic.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Resource identity information.
    SystemTopicsListResult:
      description: Result of the List System topics operation.
      type: object
      properties:
        value:
          description: A collection of system Topics.
          type: array
          items:
            $ref: '#/components/schemas/SystemTopic'
        nextLink:
          description: A link for the next page of topics.
          type: string
    TopicProperties:
      description: Properties of the Topic.
      type: object
      properties:
        privateEndpointConnections:
          description: List of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        provisioningState:
          description: Provisioning state of the topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: TopicProvisioningState
            modelAsString: true
        endpoint:
          description: Endpoint for the topic.
          type: string
          readOnly: true
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published."
        minimumTlsVersionAllowed:
          description: Minimum TLS version of the publisher allowed to publish to this topic
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        inputSchema:
          description: This determines the format that Event Grid should expect for incoming events published to the topic.
          enum:
            - EventGridSchema
            - CustomEventSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: InputSchema
            modelAsString: true
          default: EventGridSchema
        inputSchemaMapping:
          $ref: '#/components/schemas/InputSchemaMapping'
          description: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
        metricResourceId:
          description: Metric resource id for the topic.
          type: string
          readOnly: true
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
          default: false
          type: boolean
        dataResidencyBoundary:
          description: Data Residency Boundary of the resource.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
    ExtendedLocation:
      description: Definition of an Extended Location
      type: object
      properties:
        name:
          description: Fully qualified name of the extended location.
          type: string
        type:
          description: Type of the extended location.
          type: string
    Topic:
      description: EventGrid Topic
      properties:
        location:
          description: Location of the resource.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/TopicProperties'
          description: Properties of the topic.
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/ResourceSku'
          description: The Sku pricing tier for the topic.
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the resource.
        kind:
          description: Kind of the resource.
          default: Azure
          enum:
            - Azure
            - AzureArc
          type: string
          x-ms-enum:
            name: ResourceKind
            modelAsString: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Extended location of the resource.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Topic resource.
          type: object
          readOnly: true
      type: object
    TopicUpdateParameters:
      description: Properties of the Topic update
      properties:
        tags:
          description: Tags of the Topic resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Topic resource identity information.
        properties:
          $ref: '#/components/schemas/TopicUpdateParameterProperties'
          description: Properties of the Topic resource.
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/ResourceSku'
          description: The Sku pricing tier for the topic.
      type: object
    TopicUpdateParameterProperties:
      description: Information of topic update parameter properties.
      type: object
      properties:
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        minimumTlsVersionAllowed:
          description: Minimum TLS version of the publisher allowed to publish to this domain
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          type: string
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
          type: boolean
        dataResidencyBoundary:
          description: The data residency boundary for the topic.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: The eventTypeInfo for the topic.
    TopicsListResult:
      description: Result of the List Topics operation
      type: object
      properties:
        value:
          description: A collection of Topics
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        nextLink:
          description: A link for the next page of topics
          type: string
    TopicSharedAccessKeys:
      description: Shared access keys of the Topic
      type: object
      properties:
        key1:
          description: Shared access key1 for the topic.
          type: string
        key2:
          description: Shared access key2 for the topic.
          type: string
    TopicRegenerateKeyRequest:
      description: Topic regenerate share access key request
      required:
        - keyName
      type: object
      properties:
        keyName:
          description: Key name to regenerate key1 or key2
          type: string
    EventTypesListResult:
      description: Result of the List Event Types operation
      type: object
      properties:
        value:
          description: A collection of event types
          type: array
          items:
            $ref: '#/components/schemas/EventType'
    EventTypeProperties:
      description: Properties of the event type
      type: object
      properties:
        displayName:
          description: Display name of the event type.
          type: string
        description:
          description: Description of the event type.
          type: string
        schemaUrl:
          description: Url of the schema for this event type.
          type: string
        isInDefaultSet:
          description: IsInDefaultSet flag of the event type.
          type: boolean
    EventType:
      description: Event Type for a subject under a topic
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/EventTypeProperties'
          description: Properties of the event type.
          x-ms-client-flatten: true
      type: object
    ExtensionTopicProperties:
      description: Properties of the Extension Topic
      type: object
      properties:
        description:
          description: Description of the extension topic.
          type: string
        systemTopic:
          description: System topic resource id which is mapped to the source.
          type: string
    ExtensionTopic:
      description: Event grid Extension Topic. This is used for getting Event Grid related metrics for Azure resources.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ExtensionTopicProperties'
          description: Properties of the extension topic.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Extension Topic resource.
          type: object
          readOnly: true
      type: object
    TopicSpaceProperties:
      description: The properties of topic space.
      type: object
      properties:
        description:
          description: Description for the Topic Space resource.
          type: string
        topicTemplates:
          description: "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ]."
          type: array
          items:
            type: string
        provisioningState:
          description: Provisioning state of the TopicSpace resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - Deleted
          type: string
          readOnly: true
          x-ms-enum:
            name: TopicSpaceProvisioningState
            modelAsString: true
    TopicSpace:
      description: The Topic space resource.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/TopicSpaceProperties'
          description: The properties of topic space.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to the TopicSpace resource.
          type: object
          readOnly: true
      type: object
    TopicSpacesListResult:
      description: Result of the List Topic Space operation.
      type: object
      properties:
        value:
          description: A collection of Topic Space.
          type: array
          items:
            $ref: '#/components/schemas/TopicSpace'
        nextLink:
          description: A link for the next page of Topic Space.
          type: string
    TopicTypesListResult:
      description: Result of the List Topic Types operation
      type: object
      properties:
        value:
          description: A collection of topic types
          type: array
          items:
            $ref: '#/components/schemas/TopicTypeInfo'
    TopicTypeProperties:
      description: Properties of a topic type.
      type: object
      properties:
        provider:
          description: Namespace of the provider of the topic type.
          type: string
        displayName:
          description: Display Name for the topic type.
          type: string
        description:
          description: Description of the topic type.
          type: string
        resourceRegionType:
          description: Region type of the resource.
          enum:
            - RegionalResource
            - GlobalResource
          type: string
          x-ms-enum:
            name: ResourceRegionType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the topic type.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: TopicTypeProvisioningState
            modelAsString: true
        supportedLocations:
          description: List of locations supported by this topic type.
          type: array
          items:
            type: string
        sourceResourceFormat:
          description: Source resource format.
          type: string
        supportedScopesForSource:
          description: Supported source scopes.
          type: array
          items:
            enum:
              - Resource
              - ResourceGroup
              - AzureSubscription
              - ManagementGroup
            type: string
            x-ms-enum:
              name: TopicTypeSourceScope
              modelAsString: true
        areRegionalAndGlobalSourcesSupported:
          description: Flag to indicate that a topic type can support both regional or global system topics.
          type: boolean
        additionalEnforcedPermissions:
          description: Permissions which are enforced for creating and updating system topics of this this topic type.
          type: array
          items:
            $ref: '#/components/schemas/TopicTypeAdditionalEnforcedPermission'
          x-ms-identifiers: []
    TopicTypeAdditionalEnforcedPermission:
      type: object
      properties:
        permissionName:
          type: string
        isDataAction:
          type: boolean
    TopicTypeInfo:
      description: Properties of a topic type info.
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/TopicTypeProperties'
          description: Properties of the topic type info
          x-ms-client-flatten: true
      type: object
    VerifiedPartnerProperties:
      description: Properties of the verified partner.
      type: object
      properties:
        partnerRegistrationImmutableId:
          format: uuid
          description: ImmutableId of the corresponding partner registration.
          type: string
        organizationName:
          description: Official name of the Partner.
          type: string
        partnerDisplayName:
          description: Display name of the verified partner.
          type: string
        partnerTopicDetails:
          $ref: '#/components/schemas/PartnerDetails'
          description: Details of the partner topic scenario.
        partnerDestinationDetails:
          $ref: '#/components/schemas/PartnerDetails'
          description: Details of the partner destination scenario.
        provisioningState:
          description: Provisioning state of the verified partner.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: VerifiedPartnerProvisioningState
            modelAsString: true
    PartnerDetails:
      description: Information about the partner.
      type: object
      properties:
        description:
          description: This is short description about the partner. The length of this description should not exceed 256 characters.
          type: string
        longDescription:
          description: Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.
          type: string
        setupUri:
          description: "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source."
          type: string
    VerifiedPartner:
      description: Verified partner information
      properties:
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: Type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/VerifiedPartnerProperties'
          description: Properties of the verified partner.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata relating to Verified Partner resource.
          type: object
          readOnly: true
      type: object
    VerifiedPartnersListResult:
      description: Result of the List verified partners operation
      type: object
      properties:
        value:
          description: A collection of verified partners.
          type: array
          items:
            $ref: '#/components/schemas/VerifiedPartner'
        nextLink:
          description: A link for the next page of verified partners if any.
          type: string
    CustomDomainOwnershipValidationResult:
      description: Namespace custom domain ownership validation result.
      type: object
      properties:
        customDomainsForTopicsConfiguration:
          description: List of custom domain configurations for the namespace under topics configuration.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomainConfiguration'
          x-ms-identifiers: []
        customDomainsForTopicSpacesConfiguration:
          description: List of custom domain configurations for the namespace under topic spaces configuration.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomainConfiguration'
          x-ms-identifiers: []
    CustomJwtAuthenticationManagedIdentity:
      description: The identity information for retrieving the certificate for custom JWT authentication.
      required:
        - type
      type: object
      properties:
        type:
          description: The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
          enum:
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            name: CustomJwtAuthenticationManagedIdentityType
            modelAsString: true
        userAssignedIdentity:
          description: The user identity associated with the resource.
          type: string
    CustomJwtAuthenticationSettings:
      description: Custom JWT authentication settings for namespace resource.
      type: object
      properties:
        tokenIssuer:
          description: Expected JWT token issuer.
          type: string
        issuerCertificates:
          description: Information about the certificate that is used for token validation. We currently support maximum 2 certificates.
          type: array
          items:
            $ref: '#/components/schemas/IssuerCertificateInfo'
          x-ms-identifiers: []
    IssuerCertificateInfo:
      description: Information about the certificate that is used for token validation.
      required:
        - certificateUrl
      type: object
      properties:
        certificateUrl:
          description: Keyvault certificate URL in https://keyvaultname.vault.azure.net/certificates/certificateName/certificateVersion format.
          type: string
        identity:
          $ref: '#/components/schemas/CustomJwtAuthenticationManagedIdentity'
          description: The identity that will be used to access the certificate.
    SubscriptionFullUrl:
      description: Full endpoint URL of an event subscription
      type: object
      properties:
        endpointUrl:
          description: The URL that represents the endpoint of the destination of an event subscription.
          type: string
    UpdateTopicsConfigurationInfo:
      description: Properties of the topics configuration info of a namespace.
      type: object
      properties:
        customDomains:
          description: Custom domain info for topics configuration.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomainConfiguration'
          x-ms-identifiers: []
  x-stackQL-resources:
    ca_certificates:
      id: azure.event_grid.ca_certificates
      name: ca_certificates
      title: ca_certificates
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1caCertificates~1{caCertificateName}?api-version=2024-06-01-preview/get'
            operationId: CaCertificates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CaCertificate
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1caCertificates~1{caCertificateName}?api-version=2024-06-01-preview/put'
            operationId: CaCertificates_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CaCertificate
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1caCertificates~1{caCertificateName}?api-version=2024-06-01-preview/delete'
            operationId: CaCertificates_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1caCertificates?api-version=2024-06-01-preview/get'
            operationId: CaCertificates_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CaCertificatesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ca_certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/ca_certificates/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/ca_certificates/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ca_certificates/methods/delete'
    channels:
      id: azure.event_grid.channels
      name: channels
      title: channels
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}?api-version=2024-06-01-preview/get'
            operationId: Channels_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Channel
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}?api-version=2024-06-01-preview/put'
            operationId: Channels_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Channel
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}?api-version=2024-06-01-preview/delete'
            operationId: Channels_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}?api-version=2024-06-01-preview/patch'
            operationId: Channels_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_partner_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels?api-version=2024-06-01-preview/get'
            operationId: Channels_ListByPartnerNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChannelsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/channels/methods/get'
          - $ref: '#/components/x-stackQL-resources/channels/methods/list_by_partner_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/channels/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/channels/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/channels/methods/delete'
    channels_full_urls:
      id: azure.event_grid.channels_full_urls
      name: channels_full_urls
      title: channels_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: ChannelsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/channels_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    client_groups:
      id: azure.event_grid.client_groups
      name: client_groups
      title: client_groups
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clientGroups~1{clientGroupName}?api-version=2024-06-01-preview/get'
            operationId: ClientGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClientGroup
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clientGroups~1{clientGroupName}?api-version=2024-06-01-preview/put'
            operationId: ClientGroups_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClientGroup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clientGroups~1{clientGroupName}?api-version=2024-06-01-preview/delete'
            operationId: ClientGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clientGroups?api-version=2024-06-01-preview/get'
            operationId: ClientGroups_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClientGroupsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/client_groups/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/client_groups/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/client_groups/methods/delete'
    clients:
      id: azure.event_grid.clients
      name: clients
      title: clients
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clients~1{clientName}?api-version=2024-06-01-preview/get'
            operationId: Clients_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Client
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clients~1{clientName}?api-version=2024-06-01-preview/put'
            operationId: Clients_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Client
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clients~1{clientName}?api-version=2024-06-01-preview/delete'
            operationId: Clients_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1clients?api-version=2024-06-01-preview/get'
            operationId: Clients_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClientsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clients/methods/get'
          - $ref: '#/components/x-stackQL-resources/clients/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/clients/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clients/methods/delete'
    domains:
      id: azure.event_grid.domains
      name: domains
      title: domains
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}?api-version=2024-06-01-preview/get'
            operationId: Domains_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Domain
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}?api-version=2024-06-01-preview/put'
            operationId: Domains_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: Domain
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}?api-version=2024-06-01-preview/delete'
            operationId: Domains_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}?api-version=2024-06-01-preview/patch'
            operationId: Domains_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1domains?api-version=2024-06-01-preview/get'
            operationId: Domains_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DomainsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains?api-version=2024-06-01-preview/get'
            operationId: Domains_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DomainsListResult
            objectKey: $.value
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1regenerateKey?api-version=2024-06-01-preview/post'
            operationId: Domains_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DomainSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/domains/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/domains/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/domains/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete'
    domains_shared_access_keys:
      id: azure.event_grid.domains_shared_access_keys
      name: domains_shared_access_keys
      title: domains_shared_access_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1listKeys?api-version=2024-06-01-preview/post'
            operationId: DomainsSharedAccessKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DomainSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains_shared_access_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    domain_topics:
      id: azure.event_grid.domain_topics
      name: domain_topics
      title: domain_topics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{domainTopicName}?api-version=2024-06-01-preview/get'
            operationId: DomainTopics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DomainTopic
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{domainTopicName}?api-version=2024-06-01-preview/put'
            operationId: DomainTopics_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: DomainTopic
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{domainTopicName}?api-version=2024-06-01-preview/delete'
            operationId: DomainTopics_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics?api-version=2024-06-01-preview/get'
            operationId: DomainTopics_ListByDomain
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DomainTopicsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_topics/methods/get'
          - $ref: '#/components/x-stackQL-resources/domain_topics/methods/list_by_domain'
        insert:
          - $ref: '#/components/x-stackQL-resources/domain_topics/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domain_topics/methods/delete'
    domain_topic_event_subscriptions_delivery_attributes:
      id: azure.event_grid.domain_topic_event_subscriptions_delivery_attributes
      name: domain_topic_event_subscriptions_delivery_attributes
      title: domain_topic_event_subscriptions_delivery_attributes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes?api-version=2024-06-01-preview/post'
            operationId: DomainTopicEventSubscriptionsDeliveryAttributes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeliveryAttributeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions_delivery_attributes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    topic_event_subscriptions_delivery_attributes:
      id: azure.event_grid.topic_event_subscriptions_delivery_attributes
      name: topic_event_subscriptions_delivery_attributes
      title: topic_event_subscriptions_delivery_attributes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes?api-version=2024-06-01-preview/post'
            operationId: TopicEventSubscriptionsDeliveryAttributes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeliveryAttributeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions_delivery_attributes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    domain_event_subscriptions_delivery_attributes:
      id: azure.event_grid.domain_event_subscriptions_delivery_attributes
      name: domain_event_subscriptions_delivery_attributes
      title: domain_event_subscriptions_delivery_attributes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes?api-version=2024-06-01-preview/post'
            operationId: DomainEventSubscriptionsDeliveryAttributes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeliveryAttributeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions_delivery_attributes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_delivery_attributes:
      id: azure.event_grid.event_subscriptions_delivery_attributes
      name: event_subscriptions_delivery_attributes
      title: event_subscriptions_delivery_attributes
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes?api-version=2024-06-01-preview/post'
            operationId: EventSubscriptionsDeliveryAttributes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeliveryAttributeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_delivery_attributes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    system_topic_event_subscriptions_delivery_attributes:
      id: azure.event_grid.system_topic_event_subscriptions_delivery_attributes
      name: system_topic_event_subscriptions_delivery_attributes
      title: system_topic_event_subscriptions_delivery_attributes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes?api-version=2024-06-01-preview/post'
            operationId: SystemTopicEventSubscriptionsDeliveryAttributes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeliveryAttributeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions_delivery_attributes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    namespace_topic_event_subscriptions:
      id: azure.event_grid.namespace_topic_event_subscriptions
      name: namespace_topic_event_subscriptions
      title: namespace_topic_event_subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/get'
            operationId: NamespaceTopicEventSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Subscription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/put'
            operationId: NamespaceTopicEventSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Subscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/delete'
            operationId: NamespaceTopicEventSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/patch'
            operationId: NamespaceTopicEventSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Subscription
        list_by_namespace_topic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: NamespaceTopicEventSubscriptions_ListByNamespaceTopic
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespace_topic_event_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespace_topic_event_subscriptions/methods/list_by_namespace_topic'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespace_topic_event_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/namespace_topic_event_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespace_topic_event_subscriptions/methods/delete'
    namespace_topic_event_subscriptions_delivery_attributes:
      id: azure.event_grid.namespace_topic_event_subscriptions_delivery_attributes
      name: namespace_topic_event_subscriptions_delivery_attributes
      title: namespace_topic_event_subscriptions_delivery_attributes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes?api-version=2024-06-01-preview/post'
            operationId: NamespaceTopicEventSubscriptionsDeliveryAttributes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeliveryAttributeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespace_topic_event_subscriptions_delivery_attributes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions:
      id: azure.event_grid.event_subscriptions
      name: event_subscriptions
      title: event_subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/put'
            operationId: EventSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/delete'
            operationId: EventSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/patch'
            operationId: EventSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        list_by_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerNamespace}~1{resourceTypeName}~1{resourceName}~1providers~1Microsoft.EventGrid~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptions_ListByResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
        list_by_domain_topic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1providers~1Microsoft.EventGrid~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptions_ListByDomainTopic
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/list_by_resource'
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/list_by_domain_topic'
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/delete'
    domain_topic_event_subscriptions:
      id: azure.event_grid.domain_topic_event_subscriptions
      name: domain_topic_event_subscriptions
      title: domain_topic_event_subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/get'
            operationId: DomainTopicEventSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/put'
            operationId: DomainTopicEventSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/delete'
            operationId: DomainTopicEventSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/patch'
            operationId: DomainTopicEventSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: DomainTopicEventSubscriptions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/delete'
    topic_event_subscriptions:
      id: azure.event_grid.topic_event_subscriptions
      name: topic_event_subscriptions
      title: topic_event_subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/get'
            operationId: TopicEventSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/put'
            operationId: TopicEventSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/delete'
            operationId: TopicEventSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/patch'
            operationId: TopicEventSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: TopicEventSubscriptions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/delete'
    domain_event_subscriptions:
      id: azure.event_grid.domain_event_subscriptions
      name: domain_event_subscriptions
      title: domain_event_subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/get'
            operationId: DomainEventSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/put'
            operationId: DomainEventSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/delete'
            operationId: DomainEventSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/patch'
            operationId: DomainEventSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: DomainEventSubscriptions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/delete'
    system_topic_event_subscriptions:
      id: azure.event_grid.system_topic_event_subscriptions
      name: system_topic_event_subscriptions
      title: system_topic_event_subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/get'
            operationId: SystemTopicEventSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/put'
            operationId: SystemTopicEventSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/delete'
            operationId: SystemTopicEventSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/patch'
            operationId: SystemTopicEventSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        list_by_system_topic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: SystemTopicEventSubscriptions_ListBySystemTopic
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/list_by_system_topic'
        insert:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/delete'
    system_topic_event_subscriptions_full_urls:
      id: azure.event_grid.system_topic_event_subscriptions_full_urls
      name: system_topic_event_subscriptions_full_urls
      title: system_topic_event_subscriptions_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: SystemTopicEventSubscriptionsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_full_urls:
      id: azure.event_grid.event_subscriptions_full_urls
      name: event_subscriptions_full_urls
      title: event_subscriptions_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: EventSubscriptionsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    partner_topic_event_subscriptions:
      id: azure.event_grid.partner_topic_event_subscriptions
      name: partner_topic_event_subscriptions
      title: partner_topic_event_subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/get'
            operationId: PartnerTopicEventSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/put'
            operationId: PartnerTopicEventSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/delete'
            operationId: PartnerTopicEventSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}?api-version=2024-06-01-preview/patch'
            operationId: PartnerTopicEventSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: EventSubscription
        list_by_partner_topic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: PartnerTopicEventSubscriptions_ListByPartnerTopic
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/list_by_partner_topic'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/delete'
    partner_topic_event_subscriptions_full_urls:
      id: azure.event_grid.partner_topic_event_subscriptions_full_urls
      name: partner_topic_event_subscriptions_full_urls
      title: partner_topic_event_subscriptions_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: PartnerTopicEventSubscriptionsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    domain_topic_event_subscriptions_full_urls:
      id: azure.event_grid.domain_topic_event_subscriptions_full_urls
      name: domain_topic_event_subscriptions_full_urls
      title: domain_topic_event_subscriptions_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: DomainTopicEventSubscriptionsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    topic_event_subscriptions_full_urls:
      id: azure.event_grid.topic_event_subscriptions_full_urls
      name: topic_event_subscriptions_full_urls
      title: topic_event_subscriptions_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: TopicEventSubscriptionsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    domain_event_subscriptions_full_urls:
      id: azure.event_grid.domain_event_subscriptions_full_urls
      name: domain_event_subscriptions_full_urls
      title: domain_event_subscriptions_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: DomainEventSubscriptionsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_global_by_subscriptions:
      id: azure.event_grid.event_subscriptions_global_by_subscriptions
      name: event_subscriptions_global_by_subscriptions
      title: event_subscriptions_global_by_subscriptions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsGlobalBySubscription_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_global_by_subscriptions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_global_by_subscription_for_topic_types:
      id: azure.event_grid.event_subscriptions_global_by_subscription_for_topic_types
      name: event_subscriptions_global_by_subscription_for_topic_types
      title: event_subscriptions_global_by_subscription_for_topic_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsGlobalBySubscriptionForTopicType_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_global_by_subscription_for_topic_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_global_by_resource_groups:
      id: azure.event_grid.event_subscriptions_global_by_resource_groups
      name: event_subscriptions_global_by_resource_groups
      title: event_subscriptions_global_by_resource_groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsGlobalByResourceGroup_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_global_by_resource_groups/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_global_by_resource_group_for_topic_types:
      id: azure.event_grid.event_subscriptions_global_by_resource_group_for_topic_types
      name: event_subscriptions_global_by_resource_group_for_topic_types
      title: event_subscriptions_global_by_resource_group_for_topic_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsGlobalByResourceGroupForTopicType_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_global_by_resource_group_for_topic_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_regional_by_subscriptions:
      id: azure.event_grid.event_subscriptions_regional_by_subscriptions
      name: event_subscriptions_regional_by_subscriptions
      title: event_subscriptions_regional_by_subscriptions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1locations~1{location}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsRegionalBySubscription_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_regional_by_subscriptions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_regional_by_resource_groups:
      id: azure.event_grid.event_subscriptions_regional_by_resource_groups
      name: event_subscriptions_regional_by_resource_groups
      title: event_subscriptions_regional_by_resource_groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1locations~1{location}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsRegionalByResourceGroup_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_regional_by_resource_groups/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_regional_by_subscription_for_topic_types:
      id: azure.event_grid.event_subscriptions_regional_by_subscription_for_topic_types
      name: event_subscriptions_regional_by_subscription_for_topic_types
      title: event_subscriptions_regional_by_subscription_for_topic_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1locations~1{location}~1topicTypes~1{topicTypeName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsRegionalBySubscriptionForTopicType_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_regional_by_subscription_for_topic_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    event_subscriptions_regional_by_resource_group_for_topic_types:
      id: azure.event_grid.event_subscriptions_regional_by_resource_group_for_topic_types
      name: event_subscriptions_regional_by_resource_group_for_topic_types
      title: event_subscriptions_regional_by_resource_group_for_topic_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1locations~1{location}~1topicTypes~1{topicTypeName}~1eventSubscriptions?api-version=2024-06-01-preview/get'
            operationId: EventSubscriptionsRegionalByResourceGroupForTopicType_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSubscriptionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions_regional_by_resource_group_for_topic_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    partner_topic_event_subscriptions_delivery_attributes:
      id: azure.event_grid.partner_topic_event_subscriptions_delivery_attributes
      name: partner_topic_event_subscriptions_delivery_attributes
      title: partner_topic_event_subscriptions_delivery_attributes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes?api-version=2024-06-01-preview/post'
            operationId: PartnerTopicEventSubscriptionsDeliveryAttributes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeliveryAttributeListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions_delivery_attributes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    namespaces:
      id: azure.event_grid.namespaces
      name: namespaces
      title: namespaces
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}?api-version=2024-06-01-preview/get'
            operationId: Namespaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Namespace
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}?api-version=2024-06-01-preview/put'
            operationId: Namespaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Namespace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}?api-version=2024-06-01-preview/delete'
            operationId: Namespaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}?api-version=2024-06-01-preview/patch'
            operationId: Namespaces_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Namespace
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1namespaces?api-version=2024-06-01-preview/get'
            operationId: Namespaces_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespacesListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces?api-version=2024-06-01-preview/get'
            operationId: Namespaces_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespacesListResult
            objectKey: $.value
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1regenerateKey?api-version=2024-06-01-preview/post'
            operationId: Namespaces_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceSharedAccessKeys
        validate_custom_domain_ownership:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1validateCustomDomainOwnership?api-version=2024-06-01-preview/post'
            operationId: Namespaces_ValidateCustomDomainOwnership
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomDomainOwnershipValidationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/delete'
    namespaces_shared_access_keys:
      id: azure.event_grid.namespaces_shared_access_keys
      name: namespaces_shared_access_keys
      title: namespaces_shared_access_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1listKeys?api-version=2024-06-01-preview/post'
            operationId: NamespacesSharedAccessKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_shared_access_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    namespace_topics:
      id: azure.event_grid.namespace_topics
      name: namespace_topics
      title: namespace_topics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}?api-version=2024-06-01-preview/get'
            operationId: NamespaceTopics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceTopic
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}?api-version=2024-06-01-preview/put'
            operationId: NamespaceTopics_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceTopic
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}?api-version=2024-06-01-preview/delete'
            operationId: NamespaceTopics_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}?api-version=2024-06-01-preview/patch'
            operationId: NamespaceTopics_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceTopic
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics?api-version=2024-06-01-preview/get'
            operationId: NamespaceTopics_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceTopicsListResult
            objectKey: $.value
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1regenerateKey?api-version=2024-06-01-preview/post'
            operationId: NamespaceTopics_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespace_topics/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespace_topics/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespace_topics/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/namespace_topics/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespace_topics/methods/delete'
    namespace_topics_shared_access_keys:
      id: azure.event_grid.namespace_topics_shared_access_keys
      name: namespace_topics_shared_access_keys
      title: namespace_topics_shared_access_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1listKeys?api-version=2024-06-01-preview/post'
            operationId: NamespaceTopicsSharedAccessKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespace_topics_shared_access_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.event_grid.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1operations?api-version=2024-06-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    partner_configurations:
      id: azure.event_grid.partner_configurations
      name: partner_configurations
      title: partner_configurations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default?api-version=2024-06-01-preview/get'
            operationId: PartnerConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerConfiguration
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default?api-version=2024-06-01-preview/put'
            operationId: PartnerConfigurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerConfiguration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default?api-version=2024-06-01-preview/delete'
            operationId: PartnerConfigurations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default?api-version=2024-06-01-preview/patch'
            operationId: PartnerConfigurations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerConfiguration
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations?api-version=2024-06-01-preview/get'
            operationId: PartnerConfigurations_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerConfigurationsListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerConfigurations?api-version=2024-06-01-preview/get'
            operationId: PartnerConfigurations_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerConfigurationsListResult
            objectKey: $.value
        authorize_partner:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1authorizePartner?api-version=2024-06-01-preview/post'
            operationId: PartnerConfigurations_AuthorizePartner
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerConfiguration
        unauthorize_partner:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1unauthorizePartner?api-version=2024-06-01-preview/post'
            operationId: PartnerConfigurations_UnauthorizePartner
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerConfiguration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/delete'
    partner_destinations:
      id: azure.event_grid.partner_destinations
      name: partner_destinations
      title: partner_destinations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerDestinations~1{partnerDestinationName}?api-version=2024-06-01-preview/get'
            operationId: PartnerDestinations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerDestination
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerDestinations~1{partnerDestinationName}?api-version=2024-06-01-preview/put'
            operationId: PartnerDestinations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerDestination
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerDestinations~1{partnerDestinationName}?api-version=2024-06-01-preview/delete'
            operationId: PartnerDestinations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerDestinations~1{partnerDestinationName}?api-version=2024-06-01-preview/patch'
            operationId: PartnerDestinations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerDestination
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerDestinations?api-version=2024-06-01-preview/get'
            operationId: PartnerDestinations_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerDestinationsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerDestinations?api-version=2024-06-01-preview/get'
            operationId: PartnerDestinations_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerDestinationsListResult
            objectKey: $.value
        activate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerDestinations~1{partnerDestinationName}~1activate?api-version=2024-06-01-preview/post'
            operationId: PartnerDestinations_Activate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerDestination
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_destinations/methods/get'
          - $ref: '#/components/x-stackQL-resources/partner_destinations/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/partner_destinations/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_destinations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/partner_destinations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_destinations/methods/delete'
    partner_namespaces:
      id: azure.event_grid.partner_namespaces
      name: partner_namespaces
      title: partner_namespaces
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}?api-version=2024-06-01-preview/get'
            operationId: PartnerNamespaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerNamespace
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}?api-version=2024-06-01-preview/put'
            operationId: PartnerNamespaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: PartnerNamespace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}?api-version=2024-06-01-preview/delete'
            operationId: PartnerNamespaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}?api-version=2024-06-01-preview/patch'
            operationId: PartnerNamespaces_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerNamespaces?api-version=2024-06-01-preview/get'
            operationId: PartnerNamespaces_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerNamespacesListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces?api-version=2024-06-01-preview/get'
            operationId: PartnerNamespaces_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerNamespacesListResult
            objectKey: $.value
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1regenerateKey?api-version=2024-06-01-preview/post'
            operationId: PartnerNamespaces_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerNamespaceSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/delete'
    partner_namespaces_shared_access_keys:
      id: azure.event_grid.partner_namespaces_shared_access_keys
      name: partner_namespaces_shared_access_keys
      title: partner_namespaces_shared_access_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1listKeys?api-version=2024-06-01-preview/post'
            operationId: PartnerNamespacesSharedAccessKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerNamespaceSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces_shared_access_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    partner_registrations:
      id: azure.event_grid.partner_registrations
      name: partner_registrations
      title: partner_registrations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}?api-version=2024-06-01-preview/get'
            operationId: PartnerRegistrations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerRegistration
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}?api-version=2024-06-01-preview/put'
            operationId: PartnerRegistrations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerRegistration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}?api-version=2024-06-01-preview/delete'
            operationId: PartnerRegistrations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}?api-version=2024-06-01-preview/patch'
            operationId: PartnerRegistrations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerRegistrations?api-version=2024-06-01-preview/get'
            operationId: PartnerRegistrations_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerRegistrationsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations?api-version=2024-06-01-preview/get'
            operationId: PartnerRegistrations_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerRegistrationsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/get'
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/delete'
    partner_topics:
      id: azure.event_grid.partner_topics
      name: partner_topics
      title: partner_topics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}?api-version=2024-06-01-preview/get'
            operationId: PartnerTopics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerTopic
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}?api-version=2024-06-01-preview/put'
            operationId: PartnerTopics_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerTopic
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}?api-version=2024-06-01-preview/delete'
            operationId: PartnerTopics_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}?api-version=2024-06-01-preview/patch'
            operationId: PartnerTopics_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerTopics?api-version=2024-06-01-preview/get'
            operationId: PartnerTopics_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerTopicsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics?api-version=2024-06-01-preview/get'
            operationId: PartnerTopics_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerTopicsListResult
            objectKey: $.value
        activate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1activate?api-version=2024-06-01-preview/post'
            operationId: PartnerTopics_Activate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerTopic
        deactivate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1deactivate?api-version=2024-06-01-preview/post'
            operationId: PartnerTopics_Deactivate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartnerTopic
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/get'
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/delete'
    network_security_perimeter_configurations:
      id: azure.event_grid.network_security_perimeter_configurations
      name: network_security_perimeter_configurations
      title: network_security_perimeter_configurations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{resourceType}~1{resourceName}~1networkSecurityPerimeterConfigurations~1{perimeterGuid}.{associationName}?api-version=2024-06-01-preview/get'
            operationId: NetworkSecurityPerimeterConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfiguration
        reconcile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{resourceType}~1{resourceName}~1networkSecurityPerimeterConfigurations~1{perimeterGuid}.{associationName}~1reconcile?api-version=2024-06-01-preview/post'
            operationId: NetworkSecurityPerimeterConfigurations_Reconcile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfiguration
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{resourceType}~1{resourceName}~1networkSecurityPerimeterConfigurations?api-version=2024-06-01-preview/get'
            operationId: NetworkSecurityPerimeterConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfigurationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    permission_bindings:
      id: azure.event_grid.permission_bindings
      name: permission_bindings
      title: permission_bindings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1permissionBindings~1{permissionBindingName}?api-version=2024-06-01-preview/get'
            operationId: PermissionBindings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PermissionBinding
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1permissionBindings~1{permissionBindingName}?api-version=2024-06-01-preview/put'
            operationId: PermissionBindings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PermissionBinding
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1permissionBindings~1{permissionBindingName}?api-version=2024-06-01-preview/delete'
            operationId: PermissionBindings_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1permissionBindings?api-version=2024-06-01-preview/get'
            operationId: PermissionBindings_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PermissionBindingsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/permission_bindings/methods/get'
          - $ref: '#/components/x-stackQL-resources/permission_bindings/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/permission_bindings/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/permission_bindings/methods/delete'
    private_endpoint_connections:
      id: azure.event_grid.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-06-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-06-01-preview/put'
            operationId: PrivateEndpointConnections_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-06-01-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list_by_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections?api-version=2024-06-01-preview/get'
            operationId: PrivateEndpointConnections_ListByResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_resource'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.event_grid.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateLinkResources~1{privateLinkResourceName}?api-version=2024-06-01-preview/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
        list_by_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateLinkResources?api-version=2024-06-01-preview/get'
            operationId: PrivateLinkResources_ListByResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourcesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_resource'
        insert: []
        update: []
        replace: []
        delete: []
    system_topics:
      id: azure.event_grid.system_topics
      name: system_topics
      title: system_topics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}?api-version=2024-06-01-preview/get'
            operationId: SystemTopics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SystemTopic
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}?api-version=2024-06-01-preview/put'
            operationId: SystemTopics_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SystemTopic
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}?api-version=2024-06-01-preview/delete'
            operationId: SystemTopics_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}?api-version=2024-06-01-preview/patch'
            operationId: SystemTopics_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SystemTopic
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1systemTopics?api-version=2024-06-01-preview/get'
            operationId: SystemTopics_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SystemTopicsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics?api-version=2024-06-01-preview/get'
            operationId: SystemTopics_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SystemTopicsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/get'
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/delete'
    topics:
      id: azure.event_grid.topics
      name: topics
      title: topics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}?api-version=2024-06-01-preview/get'
            operationId: Topics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Topic
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}?api-version=2024-06-01-preview/put'
            operationId: Topics_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: Topic
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}?api-version=2024-06-01-preview/delete'
            operationId: Topics_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}?api-version=2024-06-01-preview/patch'
            operationId: Topics_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1topics?api-version=2024-06-01-preview/get'
            operationId: Topics_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics?api-version=2024-06-01-preview/get'
            operationId: Topics_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicsListResult
            objectKey: $.value
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1regenerateKey?api-version=2024-06-01-preview/post'
            operationId: Topics_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topics/methods/get'
          - $ref: '#/components/x-stackQL-resources/topics/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/topics/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/topics/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/topics/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/topics/methods/delete'
    topics_shared_access_keys:
      id: azure.event_grid.topics_shared_access_keys
      name: topics_shared_access_keys
      title: topics_shared_access_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1listKeys?api-version=2024-06-01-preview/post'
            operationId: TopicsSharedAccessKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicSharedAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topics_shared_access_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    topics_event_types:
      id: azure.event_grid.topics_event_types
      name: topics_event_types
      title: topics_event_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerNamespace}~1{resourceTypeName}~1{resourceName}~1providers~1Microsoft.EventGrid~1eventTypes?api-version=2024-06-01-preview/get'
            operationId: TopicsEventTypes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventTypesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topics_event_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    extension_topics:
      id: azure.event_grid.extension_topics
      name: extension_topics
      title: extension_topics
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1extensionTopics~1default?api-version=2024-06-01-preview/get'
            operationId: ExtensionTopics_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExtensionTopic
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/extension_topics/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    topic_spaces:
      id: azure.event_grid.topic_spaces
      name: topic_spaces
      title: topic_spaces
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topicSpaces~1{topicSpaceName}?api-version=2024-06-01-preview/get'
            operationId: TopicSpaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicSpace
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topicSpaces~1{topicSpaceName}?api-version=2024-06-01-preview/put'
            operationId: TopicSpaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicSpace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topicSpaces~1{topicSpaceName}?api-version=2024-06-01-preview/delete'
            operationId: TopicSpaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topicSpaces?api-version=2024-06-01-preview/get'
            operationId: TopicSpaces_ListByNamespace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicSpacesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_spaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/topic_spaces/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/topic_spaces/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/topic_spaces/methods/delete'
    topic_types:
      id: azure.event_grid.topic_types
      name: topic_types
      title: topic_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1topicTypes?api-version=2024-06-01-preview/get'
            operationId: TopicTypes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicTypesListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}?api-version=2024-06-01-preview/get'
            operationId: TopicTypes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TopicTypeInfo
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/topic_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    topic_types_event_types:
      id: azure.event_grid.topic_types_event_types
      name: topic_types_event_types
      title: topic_types_event_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}~1eventTypes?api-version=2024-06-01-preview/get'
            operationId: TopicTypesEventTypes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventTypesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_types_event_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    verified_partners:
      id: azure.event_grid.verified_partners
      name: verified_partners
      title: verified_partners
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1verifiedPartners~1{verifiedPartnerName}?api-version=2024-06-01-preview/get'
            operationId: VerifiedPartners_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VerifiedPartner
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1verifiedPartners?api-version=2024-06-01-preview/get'
            operationId: VerifiedPartners_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VerifiedPartnersListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/verified_partners/methods/get'
          - $ref: '#/components/x-stackQL-resources/verified_partners/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    namespace_topic_event_subscriptions_full_urls:
      id: azure.event_grid.namespace_topic_event_subscriptions_full_urls
      name: namespace_topic_event_subscriptions_full_urls
      title: namespace_topic_event_subscriptions_full_urls
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1namespaces~1{namespaceName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl?api-version=2024-06-01-preview/post'
            operationId: NamespaceTopicEventSubscriptionsFullUrl_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionFullUrl
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespace_topic_event_subscriptions_full_urls/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_ca_certificates:
      id: azure.event_grid.vw_ca_certificates
      name: vw_ca_certificates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.encodedCertificate') as "encoded_certificate",
              JSON_EXTRACT(properties, '$.issueTimeInUtc') as "issue_time_in_utc",
              JSON_EXTRACT(properties, '$.expiryTimeInUtc') as "expiry_time_in_utc",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              caCertificateName
              FROM azure.event_grid.ca_certificates
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.encodedCertificate') as "encoded_certificate",
                json_extract_path_text(properties, '$.issueTimeInUtc') as "issue_time_in_utc",
                json_extract_path_text(properties, '$.expiryTimeInUtc') as "expiry_time_in_utc",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                caCertificateName
                FROM azure.event_grid.ca_certificates
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_channels:
      id: azure.event_grid.vw_channels
      name: vw_channels
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.channelType') as "channel_type",
              JSON_EXTRACT(properties, '$.partnerTopicInfo') as "partner_topic_info",
              JSON_EXTRACT(properties, '$.partnerDestinationInfo') as "partner_destination_info",
              JSON_EXTRACT(properties, '$.messageForActivation') as "message_for_activation",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.readinessState') as "readiness_state",
              JSON_EXTRACT(properties, '$.expirationTimeIfNotActivatedUtc') as "expiration_time_if_not_activated_utc",
              subscriptionId,
              resourceGroupName,
              partnerNamespaceName,
              channelName
              FROM azure.event_grid.channels
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND partnerNamespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.channelType') as "channel_type",
                json_extract_path_text(properties, '$.partnerTopicInfo') as "partner_topic_info",
                json_extract_path_text(properties, '$.partnerDestinationInfo') as "partner_destination_info",
                json_extract_path_text(properties, '$.messageForActivation') as "message_for_activation",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.readinessState') as "readiness_state",
                json_extract_path_text(properties, '$.expirationTimeIfNotActivatedUtc') as "expiration_time_if_not_activated_utc",
                subscriptionId,
                resourceGroupName,
                partnerNamespaceName,
                channelName
                FROM azure.event_grid.channels
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND partnerNamespaceName = 'replace-me';
    vw_client_groups:
      id: azure.event_grid.vw_client_groups
      name: vw_client_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.query') as "query",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              clientGroupName
              FROM azure.event_grid.client_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.query') as "query",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                clientGroupName
                FROM azure.event_grid.client_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_clients:
      id: azure.event_grid.vw_clients
      name: vw_clients
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.authenticationName') as "authentication_name",
              JSON_EXTRACT(properties, '$.clientCertificateAuthentication') as "client_certificate_authentication",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.attributes') as "attributes",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              clientName
              FROM azure.event_grid.clients
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.authenticationName') as "authentication_name",
                json_extract_path_text(properties, '$.clientCertificateAuthentication') as "client_certificate_authentication",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.attributes') as "attributes",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                clientName
                FROM azure.event_grid.clients
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_domains:
      id: azure.event_grid.vw_domains
      name: vw_domains
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              identity as identity,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
              JSON_EXTRACT(properties, '$.endpoint') as "endpoint",
              JSON_EXTRACT(properties, '$.inputSchema') as "input_schema",
              JSON_EXTRACT(properties, '$.eventTypeInfo') as "event_type_info",
              JSON_EXTRACT(properties, '$.inputSchemaMapping') as "input_schema_mapping",
              JSON_EXTRACT(properties, '$.metricResourceId') as "metric_resource_id",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.inboundIpRules') as "inbound_ip_rules",
              JSON_EXTRACT(properties, '$.disableLocalAuth') as "disable_local_auth",
              JSON_EXTRACT(properties, '$.autoCreateTopicWithFirstSubscription') as "auto_create_topic_with_first_subscription",
              JSON_EXTRACT(properties, '$.autoDeleteTopicWithLastSubscription') as "auto_delete_topic_with_last_subscription",
              JSON_EXTRACT(properties, '$.dataResidencyBoundary') as "data_residency_boundary",
              subscriptionId,
              resourceGroupName,
              domainName
              FROM azure.event_grid.domains
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                identity as identity,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
                json_extract_path_text(properties, '$.endpoint') as "endpoint",
                json_extract_path_text(properties, '$.inputSchema') as "input_schema",
                json_extract_path_text(properties, '$.eventTypeInfo') as "event_type_info",
                json_extract_path_text(properties, '$.inputSchemaMapping') as "input_schema_mapping",
                json_extract_path_text(properties, '$.metricResourceId') as "metric_resource_id",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.inboundIpRules') as "inbound_ip_rules",
                json_extract_path_text(properties, '$.disableLocalAuth') as "disable_local_auth",
                json_extract_path_text(properties, '$.autoCreateTopicWithFirstSubscription') as "auto_create_topic_with_first_subscription",
                json_extract_path_text(properties, '$.autoDeleteTopicWithLastSubscription') as "auto_delete_topic_with_last_subscription",
                json_extract_path_text(properties, '$.dataResidencyBoundary') as "data_residency_boundary",
                subscriptionId,
                resourceGroupName,
                domainName
                FROM azure.event_grid.domains
                WHERE subscriptionId = 'replace-me';
    vw_domain_topics:
      id: azure.event_grid.vw_domain_topics
      name: vw_domain_topics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              domainName,
              domainTopicName
              FROM azure.event_grid.domain_topics
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                domainName,
                domainTopicName
                FROM azure.event_grid.domain_topics
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainName = 'replace-me';
    vw_namespace_topic_event_subscriptions:
      id: azure.event_grid.vw_namespace_topic_event_subscriptions
      name: vw_namespace_topic_event_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.deliveryConfiguration') as "delivery_configuration",
              JSON_EXTRACT(properties, '$.eventDeliverySchema') as "event_delivery_schema",
              JSON_EXTRACT(properties, '$.filtersConfiguration') as "filters_configuration",
              JSON_EXTRACT(properties, '$.expirationTimeUtc') as "expiration_time_utc",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              topicName,
              eventSubscriptionName
              FROM azure.event_grid.namespace_topic_event_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me' AND topicName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.deliveryConfiguration') as "delivery_configuration",
                json_extract_path_text(properties, '$.eventDeliverySchema') as "event_delivery_schema",
                json_extract_path_text(properties, '$.filtersConfiguration') as "filters_configuration",
                json_extract_path_text(properties, '$.expirationTimeUtc') as "expiration_time_utc",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                topicName,
                eventSubscriptionName
                FROM azure.event_grid.namespace_topic_event_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me' AND topicName = 'replace-me';
    vw_domain_topic_event_subscriptions:
      id: azure.event_grid.vw_domain_topic_event_subscriptions
      name: vw_domain_topic_event_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.topic') as "topic",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.destination') as "destination",
              JSON_EXTRACT(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
              JSON_EXTRACT(properties, '$.filter') as "filter",
              JSON_EXTRACT(properties, '$.labels') as "labels",
              JSON_EXTRACT(properties, '$.expirationTimeUtc') as "expiration_time_utc",
              JSON_EXTRACT(properties, '$.eventDeliverySchema') as "event_delivery_schema",
              JSON_EXTRACT(properties, '$.retryPolicy') as "retry_policy",
              JSON_EXTRACT(properties, '$.deadLetterDestination') as "dead_letter_destination",
              JSON_EXTRACT(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
              subscriptionId,
              resourceGroupName,
              domainName,
              topicName,
              eventSubscriptionName
              FROM azure.event_grid.domain_topic_event_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainName = 'replace-me' AND topicName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.topic') as "topic",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.destination') as "destination",
                json_extract_path_text(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
                json_extract_path_text(properties, '$.filter') as "filter",
                json_extract_path_text(properties, '$.labels') as "labels",
                json_extract_path_text(properties, '$.expirationTimeUtc') as "expiration_time_utc",
                json_extract_path_text(properties, '$.eventDeliverySchema') as "event_delivery_schema",
                json_extract_path_text(properties, '$.retryPolicy') as "retry_policy",
                json_extract_path_text(properties, '$.deadLetterDestination') as "dead_letter_destination",
                json_extract_path_text(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
                subscriptionId,
                resourceGroupName,
                domainName,
                topicName,
                eventSubscriptionName
                FROM azure.event_grid.domain_topic_event_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainName = 'replace-me' AND topicName = 'replace-me';
    vw_topic_event_subscriptions:
      id: azure.event_grid.vw_topic_event_subscriptions
      name: vw_topic_event_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.topic') as "topic",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.destination') as "destination",
              JSON_EXTRACT(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
              JSON_EXTRACT(properties, '$.filter') as "filter",
              JSON_EXTRACT(properties, '$.labels') as "labels",
              JSON_EXTRACT(properties, '$.expirationTimeUtc') as "expiration_time_utc",
              JSON_EXTRACT(properties, '$.eventDeliverySchema') as "event_delivery_schema",
              JSON_EXTRACT(properties, '$.retryPolicy') as "retry_policy",
              JSON_EXTRACT(properties, '$.deadLetterDestination') as "dead_letter_destination",
              JSON_EXTRACT(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
              subscriptionId,
              resourceGroupName,
              topicName,
              eventSubscriptionName
              FROM azure.event_grid.topic_event_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND topicName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.topic') as "topic",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.destination') as "destination",
                json_extract_path_text(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
                json_extract_path_text(properties, '$.filter') as "filter",
                json_extract_path_text(properties, '$.labels') as "labels",
                json_extract_path_text(properties, '$.expirationTimeUtc') as "expiration_time_utc",
                json_extract_path_text(properties, '$.eventDeliverySchema') as "event_delivery_schema",
                json_extract_path_text(properties, '$.retryPolicy') as "retry_policy",
                json_extract_path_text(properties, '$.deadLetterDestination') as "dead_letter_destination",
                json_extract_path_text(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
                subscriptionId,
                resourceGroupName,
                topicName,
                eventSubscriptionName
                FROM azure.event_grid.topic_event_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND topicName = 'replace-me';
    vw_domain_event_subscriptions:
      id: azure.event_grid.vw_domain_event_subscriptions
      name: vw_domain_event_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.topic') as "topic",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.destination') as "destination",
              JSON_EXTRACT(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
              JSON_EXTRACT(properties, '$.filter') as "filter",
              JSON_EXTRACT(properties, '$.labels') as "labels",
              JSON_EXTRACT(properties, '$.expirationTimeUtc') as "expiration_time_utc",
              JSON_EXTRACT(properties, '$.eventDeliverySchema') as "event_delivery_schema",
              JSON_EXTRACT(properties, '$.retryPolicy') as "retry_policy",
              JSON_EXTRACT(properties, '$.deadLetterDestination') as "dead_letter_destination",
              JSON_EXTRACT(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
              subscriptionId,
              resourceGroupName,
              domainName,
              eventSubscriptionName
              FROM azure.event_grid.domain_event_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.topic') as "topic",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.destination') as "destination",
                json_extract_path_text(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
                json_extract_path_text(properties, '$.filter') as "filter",
                json_extract_path_text(properties, '$.labels') as "labels",
                json_extract_path_text(properties, '$.expirationTimeUtc') as "expiration_time_utc",
                json_extract_path_text(properties, '$.eventDeliverySchema') as "event_delivery_schema",
                json_extract_path_text(properties, '$.retryPolicy') as "retry_policy",
                json_extract_path_text(properties, '$.deadLetterDestination') as "dead_letter_destination",
                json_extract_path_text(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
                subscriptionId,
                resourceGroupName,
                domainName,
                eventSubscriptionName
                FROM azure.event_grid.domain_event_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND domainName = 'replace-me';
    vw_system_topic_event_subscriptions:
      id: azure.event_grid.vw_system_topic_event_subscriptions
      name: vw_system_topic_event_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.topic') as "topic",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.destination') as "destination",
              JSON_EXTRACT(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
              JSON_EXTRACT(properties, '$.filter') as "filter",
              JSON_EXTRACT(properties, '$.labels') as "labels",
              JSON_EXTRACT(properties, '$.expirationTimeUtc') as "expiration_time_utc",
              JSON_EXTRACT(properties, '$.eventDeliverySchema') as "event_delivery_schema",
              JSON_EXTRACT(properties, '$.retryPolicy') as "retry_policy",
              JSON_EXTRACT(properties, '$.deadLetterDestination') as "dead_letter_destination",
              JSON_EXTRACT(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
              subscriptionId,
              resourceGroupName,
              systemTopicName,
              eventSubscriptionName
              FROM azure.event_grid.system_topic_event_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND systemTopicName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.topic') as "topic",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.destination') as "destination",
                json_extract_path_text(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
                json_extract_path_text(properties, '$.filter') as "filter",
                json_extract_path_text(properties, '$.labels') as "labels",
                json_extract_path_text(properties, '$.expirationTimeUtc') as "expiration_time_utc",
                json_extract_path_text(properties, '$.eventDeliverySchema') as "event_delivery_schema",
                json_extract_path_text(properties, '$.retryPolicy') as "retry_policy",
                json_extract_path_text(properties, '$.deadLetterDestination') as "dead_letter_destination",
                json_extract_path_text(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
                subscriptionId,
                resourceGroupName,
                systemTopicName,
                eventSubscriptionName
                FROM azure.event_grid.system_topic_event_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND systemTopicName = 'replace-me';
    vw_partner_topic_event_subscriptions:
      id: azure.event_grid.vw_partner_topic_event_subscriptions
      name: vw_partner_topic_event_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.topic') as "topic",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.destination') as "destination",
              JSON_EXTRACT(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
              JSON_EXTRACT(properties, '$.filter') as "filter",
              JSON_EXTRACT(properties, '$.labels') as "labels",
              JSON_EXTRACT(properties, '$.expirationTimeUtc') as "expiration_time_utc",
              JSON_EXTRACT(properties, '$.eventDeliverySchema') as "event_delivery_schema",
              JSON_EXTRACT(properties, '$.retryPolicy') as "retry_policy",
              JSON_EXTRACT(properties, '$.deadLetterDestination') as "dead_letter_destination",
              JSON_EXTRACT(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
              subscriptionId,
              resourceGroupName,
              partnerTopicName,
              eventSubscriptionName
              FROM azure.event_grid.partner_topic_event_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND partnerTopicName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.topic') as "topic",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.destination') as "destination",
                json_extract_path_text(properties, '$.deliveryWithResourceIdentity') as "delivery_with_resource_identity",
                json_extract_path_text(properties, '$.filter') as "filter",
                json_extract_path_text(properties, '$.labels') as "labels",
                json_extract_path_text(properties, '$.expirationTimeUtc') as "expiration_time_utc",
                json_extract_path_text(properties, '$.eventDeliverySchema') as "event_delivery_schema",
                json_extract_path_text(properties, '$.retryPolicy') as "retry_policy",
                json_extract_path_text(properties, '$.deadLetterDestination') as "dead_letter_destination",
                json_extract_path_text(properties, '$.deadLetterWithResourceIdentity') as "dead_letter_with_resource_identity",
                subscriptionId,
                resourceGroupName,
                partnerTopicName,
                eventSubscriptionName
                FROM azure.event_grid.partner_topic_event_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND partnerTopicName = 'replace-me';
    vw_namespaces:
      id: azure.event_grid.vw_namespaces
      name: vw_namespaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              identity as identity,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.topicsConfiguration') as "topics_configuration",
              JSON_EXTRACT(properties, '$.topicSpacesConfiguration') as "topic_spaces_configuration",
              JSON_EXTRACT(properties, '$.isZoneRedundant') as "is_zone_redundant",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.inboundIpRules') as "inbound_ip_rules",
              JSON_EXTRACT(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
              subscriptionId,
              resourceGroupName,
              namespaceName
              FROM azure.event_grid.namespaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                identity as identity,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.topicsConfiguration') as "topics_configuration",
                json_extract_path_text(properties, '$.topicSpacesConfiguration') as "topic_spaces_configuration",
                json_extract_path_text(properties, '$.isZoneRedundant') as "is_zone_redundant",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.inboundIpRules') as "inbound_ip_rules",
                json_extract_path_text(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
                subscriptionId,
                resourceGroupName,
                namespaceName
                FROM azure.event_grid.namespaces
                WHERE subscriptionId = 'replace-me';
    vw_namespace_topics:
      id: azure.event_grid.vw_namespace_topics
      name: vw_namespace_topics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.publisherType') as "publisher_type",
              JSON_EXTRACT(properties, '$.inputSchema') as "input_schema",
              JSON_EXTRACT(properties, '$.eventRetentionInDays') as "event_retention_in_days",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              topicName
              FROM azure.event_grid.namespace_topics
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.publisherType') as "publisher_type",
                json_extract_path_text(properties, '$.inputSchema') as "input_schema",
                json_extract_path_text(properties, '$.eventRetentionInDays') as "event_retention_in_days",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                topicName
                FROM azure.event_grid.namespace_topics
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_partner_configurations:
      id: azure.event_grid.vw_partner_configurations
      name: vw_partner_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.partnerAuthorization') as "partner_authorization",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName
              FROM azure.event_grid.partner_configurations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.partnerAuthorization') as "partner_authorization",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName
                FROM azure.event_grid.partner_configurations
                WHERE subscriptionId = 'replace-me';
    vw_partner_destinations:
      id: azure.event_grid.vw_partner_destinations
      name: vw_partner_destinations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
              JSON_EXTRACT(properties, '$.endpointServiceContext') as "endpoint_service_context",
              JSON_EXTRACT(properties, '$.expirationTimeIfNotActivatedUtc') as "expiration_time_if_not_activated_utc",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.activationState') as "activation_state",
              JSON_EXTRACT(properties, '$.endpointBaseUrl') as "endpoint_base_url",
              JSON_EXTRACT(properties, '$.messageForActivation') as "message_for_activation",
              subscriptionId,
              resourceGroupName,
              partnerDestinationName
              FROM azure.event_grid.partner_destinations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
                json_extract_path_text(properties, '$.endpointServiceContext') as "endpoint_service_context",
                json_extract_path_text(properties, '$.expirationTimeIfNotActivatedUtc') as "expiration_time_if_not_activated_utc",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.activationState') as "activation_state",
                json_extract_path_text(properties, '$.endpointBaseUrl') as "endpoint_base_url",
                json_extract_path_text(properties, '$.messageForActivation') as "message_for_activation",
                subscriptionId,
                resourceGroupName,
                partnerDestinationName
                FROM azure.event_grid.partner_destinations
                WHERE subscriptionId = 'replace-me';
    vw_partner_namespaces:
      id: azure.event_grid.vw_partner_namespaces
      name: vw_partner_namespaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.partnerRegistrationFullyQualifiedId') as "partner_registration_fully_qualified_id",
              JSON_EXTRACT(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
              JSON_EXTRACT(properties, '$.endpoint') as "endpoint",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.inboundIpRules') as "inbound_ip_rules",
              JSON_EXTRACT(properties, '$.disableLocalAuth') as "disable_local_auth",
              JSON_EXTRACT(properties, '$.partnerTopicRoutingMode') as "partner_topic_routing_mode",
              subscriptionId,
              resourceGroupName,
              partnerNamespaceName
              FROM azure.event_grid.partner_namespaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.partnerRegistrationFullyQualifiedId') as "partner_registration_fully_qualified_id",
                json_extract_path_text(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
                json_extract_path_text(properties, '$.endpoint') as "endpoint",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.inboundIpRules') as "inbound_ip_rules",
                json_extract_path_text(properties, '$.disableLocalAuth') as "disable_local_auth",
                json_extract_path_text(properties, '$.partnerTopicRoutingMode') as "partner_topic_routing_mode",
                subscriptionId,
                resourceGroupName,
                partnerNamespaceName
                FROM azure.event_grid.partner_namespaces
                WHERE subscriptionId = 'replace-me';
    vw_partner_registrations:
      id: azure.event_grid.vw_partner_registrations
      name: vw_partner_registrations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
              subscriptionId,
              resourceGroupName,
              partnerRegistrationName
              FROM azure.event_grid.partner_registrations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
                subscriptionId,
                resourceGroupName,
                partnerRegistrationName
                FROM azure.event_grid.partner_registrations
                WHERE subscriptionId = 'replace-me';
    vw_partner_topics:
      id: azure.event_grid.vw_partner_topics
      name: vw_partner_topics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              identity as identity,
              JSON_EXTRACT(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.eventTypeInfo') as "event_type_info",
              JSON_EXTRACT(properties, '$.expirationTimeIfNotActivatedUtc') as "expiration_time_if_not_activated_utc",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.activationState') as "activation_state",
              JSON_EXTRACT(properties, '$.partnerTopicFriendlyDescription') as "partner_topic_friendly_description",
              JSON_EXTRACT(properties, '$.messageForActivation') as "message_for_activation",
              subscriptionId,
              resourceGroupName,
              partnerTopicName
              FROM azure.event_grid.partner_topics
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                identity as identity,
                json_extract_path_text(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.eventTypeInfo') as "event_type_info",
                json_extract_path_text(properties, '$.expirationTimeIfNotActivatedUtc') as "expiration_time_if_not_activated_utc",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.activationState') as "activation_state",
                json_extract_path_text(properties, '$.partnerTopicFriendlyDescription') as "partner_topic_friendly_description",
                json_extract_path_text(properties, '$.messageForActivation') as "message_for_activation",
                subscriptionId,
                resourceGroupName,
                partnerTopicName
                FROM azure.event_grid.partner_topics
                WHERE subscriptionId = 'replace-me';
    vw_network_security_perimeter_configurations:
      id: azure.event_grid.vw_network_security_perimeter_configurations
      name: vw_network_security_perimeter_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.provisioningIssues') as "provisioning_issues",
              JSON_EXTRACT(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
              JSON_EXTRACT(properties, '$.resourceAssociation') as "resource_association",
              JSON_EXTRACT(properties, '$.profile') as "profile",
              subscriptionId,
              resourceGroupName,
              resourceType,
              resourceName,
              perimeterGuid,
              associationName
              FROM azure.event_grid.network_security_perimeter_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceType = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.provisioningIssues') as "provisioning_issues",
                json_extract_path_text(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
                json_extract_path_text(properties, '$.resourceAssociation') as "resource_association",
                json_extract_path_text(properties, '$.profile') as "profile",
                subscriptionId,
                resourceGroupName,
                resourceType,
                resourceName,
                perimeterGuid,
                associationName
                FROM azure.event_grid.network_security_perimeter_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceType = 'replace-me' AND resourceName = 'replace-me';
    vw_permission_bindings:
      id: azure.event_grid.vw_permission_bindings
      name: vw_permission_bindings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.topicSpaceName') as "topic_space_name",
              JSON_EXTRACT(properties, '$.permission') as "permission",
              JSON_EXTRACT(properties, '$.clientGroupName') as "client_group_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              permissionBindingName
              FROM azure.event_grid.permission_bindings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.topicSpaceName') as "topic_space_name",
                json_extract_path_text(properties, '$.permission') as "permission",
                json_extract_path_text(properties, '$.clientGroupName') as "client_group_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                permissionBindingName
                FROM azure.event_grid.permission_bindings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.event_grid.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              parentType,
              parentName,
              privateEndpointConnectionName
              FROM azure.event_grid.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND parentType = 'replace-me' AND parentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                parentType,
                parentName,
                privateEndpointConnectionName
                FROM azure.event_grid.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND parentType = 'replace-me' AND parentName = 'replace-me';
    vw_private_link_resources:
      id: azure.event_grid.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              parentType,
              parentName,
              privateLinkResourceName
              FROM azure.event_grid.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND parentType = 'replace-me' AND parentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                parentType,
                parentName,
                privateLinkResourceName
                FROM azure.event_grid.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND parentType = 'replace-me' AND parentName = 'replace-me';
    vw_system_topics:
      id: azure.event_grid.vw_system_topics
      name: vw_system_topics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.topicType') as "topic_type",
              JSON_EXTRACT(properties, '$.metricResourceId') as "metric_resource_id",
              subscriptionId,
              resourceGroupName,
              systemTopicName
              FROM azure.event_grid.system_topics
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.topicType') as "topic_type",
                json_extract_path_text(properties, '$.metricResourceId') as "metric_resource_id",
                subscriptionId,
                resourceGroupName,
                systemTopicName
                FROM azure.event_grid.system_topics
                WHERE subscriptionId = 'replace-me';
    vw_topics:
      id: azure.event_grid.vw_topics
      name: vw_topics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              identity as identity,
              kind as kind,
              extendedLocation as extended_location,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.endpoint') as "endpoint",
              JSON_EXTRACT(properties, '$.eventTypeInfo') as "event_type_info",
              JSON_EXTRACT(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
              JSON_EXTRACT(properties, '$.inputSchema') as "input_schema",
              JSON_EXTRACT(properties, '$.inputSchemaMapping') as "input_schema_mapping",
              JSON_EXTRACT(properties, '$.metricResourceId') as "metric_resource_id",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.inboundIpRules') as "inbound_ip_rules",
              JSON_EXTRACT(properties, '$.disableLocalAuth') as "disable_local_auth",
              JSON_EXTRACT(properties, '$.dataResidencyBoundary') as "data_residency_boundary",
              subscriptionId,
              resourceGroupName,
              topicName
              FROM azure.event_grid.topics
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                identity as identity,
                kind as kind,
                extendedLocation as extended_location,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.endpoint') as "endpoint",
                json_extract_path_text(properties, '$.eventTypeInfo') as "event_type_info",
                json_extract_path_text(properties, '$.minimumTlsVersionAllowed') as "minimum_tls_version_allowed",
                json_extract_path_text(properties, '$.inputSchema') as "input_schema",
                json_extract_path_text(properties, '$.inputSchemaMapping') as "input_schema_mapping",
                json_extract_path_text(properties, '$.metricResourceId') as "metric_resource_id",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.inboundIpRules') as "inbound_ip_rules",
                json_extract_path_text(properties, '$.disableLocalAuth') as "disable_local_auth",
                json_extract_path_text(properties, '$.dataResidencyBoundary') as "data_residency_boundary",
                subscriptionId,
                resourceGroupName,
                topicName
                FROM azure.event_grid.topics
                WHERE subscriptionId = 'replace-me';
    vw_extension_topics:
      id: azure.event_grid.vw_extension_topics
      name: vw_extension_topics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.systemTopic') as "system_topic",
              scope
              FROM azure.event_grid.extension_topics
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.systemTopic') as "system_topic",
                scope
                FROM azure.event_grid.extension_topics
                WHERE scope = 'replace-me';
    vw_topic_spaces:
      id: azure.event_grid.vw_topic_spaces
      name: vw_topic_spaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.topicTemplates') as "topic_templates",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              topicSpaceName
              FROM azure.event_grid.topic_spaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.topicTemplates') as "topic_templates",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                topicSpaceName
                FROM azure.event_grid.topic_spaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_topic_types:
      id: azure.event_grid.vw_topic_types
      name: vw_topic_types
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.provider') as "provider",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.resourceRegionType') as "resource_region_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.supportedLocations') as "supported_locations",
              JSON_EXTRACT(properties, '$.sourceResourceFormat') as "source_resource_format",
              JSON_EXTRACT(properties, '$.supportedScopesForSource') as "supported_scopes_for_source",
              JSON_EXTRACT(properties, '$.areRegionalAndGlobalSourcesSupported') as "are_regional_and_global_sources_supported",
              JSON_EXTRACT(properties, '$.additionalEnforcedPermissions') as "additional_enforced_permissions",
              topicTypeName
              FROM azure.event_grid.topic_types
              WHERE topicTypeName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.provider') as "provider",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.resourceRegionType') as "resource_region_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.supportedLocations') as "supported_locations",
                json_extract_path_text(properties, '$.sourceResourceFormat') as "source_resource_format",
                json_extract_path_text(properties, '$.supportedScopesForSource') as "supported_scopes_for_source",
                json_extract_path_text(properties, '$.areRegionalAndGlobalSourcesSupported') as "are_regional_and_global_sources_supported",
                json_extract_path_text(properties, '$.additionalEnforcedPermissions') as "additional_enforced_permissions",
                topicTypeName
                FROM azure.event_grid.topic_types
                WHERE topicTypeName = 'replace-me';
    vw_verified_partners:
      id: azure.event_grid.vw_verified_partners
      name: vw_verified_partners
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
              JSON_EXTRACT(properties, '$.organizationName') as "organization_name",
              JSON_EXTRACT(properties, '$.partnerDisplayName') as "partner_display_name",
              JSON_EXTRACT(properties, '$.partnerTopicDetails') as "partner_topic_details",
              JSON_EXTRACT(properties, '$.partnerDestinationDetails') as "partner_destination_details",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              verifiedPartnerName
              FROM azure.event_grid.verified_partners
              WHERE verifiedPartnerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.partnerRegistrationImmutableId') as "partner_registration_immutable_id",
                json_extract_path_text(properties, '$.organizationName') as "organization_name",
                json_extract_path_text(properties, '$.partnerDisplayName') as "partner_display_name",
                json_extract_path_text(properties, '$.partnerTopicDetails') as "partner_topic_details",
                json_extract_path_text(properties, '$.partnerDestinationDetails') as "partner_destination_details",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                verifiedPartnerName
                FROM azure.event_grid.verified_partners
                WHERE verifiedPartnerName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/caCertificates/{caCertificateName}?api-version=2024-06-01-preview:
    get:
      tags:
        - CaCertificates
      summary: Get a CA certificate.
      description: Get properties of a CA certificate.
      operationId: CaCertificates_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: caCertificateName
          in: path
          description: Name of the CA certificate.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaCertificate'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CaCertificates
      summary: Create or update a CA certificate.
      description: Create or update a CA certificate with the specified parameters.
      operationId: CaCertificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: caCertificateName
          in: path
          description: The CA certificate name.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: CA certificate information.
        required: true
        x-ms-requestBody-name: caCertificateInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaCertificate'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaCertificate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaCertificate'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - CaCertificates
      summary: Delete a CA certificate.
      description: Delete an existing CA certificate.
      operationId: CaCertificates_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: caCertificateName
          in: path
          description: Name of the CA certificate.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/caCertificates?api-version=2024-06-01-preview:
    get:
      tags:
        - CaCertificates
      summary: List all CA certificates under a namespace.
      description: Get all the CA certificates under a namespace.
      operationId: CaCertificates_ListByNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaCertificatesListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/{channelName}?api-version=2024-06-01-preview:
    get:
      tags:
        - Channels
      summary: Get a channel.
      description: Get properties of a channel.
      operationId: Channels_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - Channels
      summary: Create or update a channel.
      description: Synchronously creates or updates a new channel with the specified parameters.
      operationId: Channels_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      requestBody:
        description: Channel information.
        required: true
        x-ms-requestBody-name: channelInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    delete:
      tags:
        - Channels
      summary: Delete a channel.
      description: Delete an existing channel.
      operationId: Channels_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - Channels
      summary: Update a Channel.
      description: Synchronously updates a channel with the specified parameters.
      operationId: Channels_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      requestBody:
        description: Channel update information.
        required: true
        x-ms-requestBody-name: channelUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelUpdateParameters'
      responses:
        '200':
          description: OK
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels?api-version=2024-06-01-preview:
    get:
      tags:
        - Channels
      summary: List channels.
      description: List all the channels in a partner namespace.
      operationId: Channels_ListByPartnerNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/{channelName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - Channels
      summary: Get full URL of partner destination channel.
      description: Get the full endpoint URL of a partner destination channel.
      operationId: ChannelsFullUrl_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the Channel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: Channels_GetFullUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clientGroups/{clientGroupName}?api-version=2024-06-01-preview:
    get:
      tags:
        - ClientGroups
      summary: Get a client group.
      description: Get properties of a client group.
      operationId: ClientGroups_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: clientGroupName
          in: path
          description: Name of the client group.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientGroup'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ClientGroups
      summary: Create or update a client group.
      description: Create or update a client group with the specified parameters.
      operationId: ClientGroups_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: clientGroupName
          in: path
          description: The client group name.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Client group information.
        required: true
        x-ms-requestBody-name: clientGroupInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientGroup'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientGroup'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientGroup'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ClientGroups
      summary: Delete a client group.
      description: Delete an existing client group.
      operationId: ClientGroups_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: clientGroupName
          in: path
          description: Name of the client group.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clientGroups?api-version=2024-06-01-preview:
    get:
      tags:
        - ClientGroups
      summary: List all client groups under a namespace.
      description: Get all the client groups under a namespace.
      operationId: ClientGroups_ListByNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientGroupsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clients/{clientName}?api-version=2024-06-01-preview:
    get:
      tags:
        - Clients
      summary: Get a client.
      description: Get properties of a client.
      operationId: Clients_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: clientName
          in: path
          description: Name of the client.
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: ^[-a-zA-Z0-9:\._]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Clients
      summary: Create or update a client.
      description: Create or update a client with the specified parameters.
      operationId: Clients_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: clientName
          in: path
          description: The client name.
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: ^[-a-zA-Z0-9:\._]*$
            type: string
      requestBody:
        description: Client information.
        required: true
        x-ms-requestBody-name: clientInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Clients
      summary: Delete a client.
      description: Delete an existing client.
      operationId: Clients_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: clientName
          in: path
          description: Name of the client.
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: ^[-a-zA-Z0-9:\._]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/clients?api-version=2024-06-01-preview:
    get:
      tags:
        - Clients
      summary: List all permission bindings under a namespace.
      description: Get all the permission bindings under a namespace.
      operationId: Clients_ListByNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}?api-version=2024-06-01-preview:
    get:
      tags:
        - Domains
      summary: Get a domain.
      description: Get properties of a domain.
      operationId: Domains_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - Domains
      summary: Create or update a domain.
      description: Asynchronously creates or updates a new domain with the specified parameters.
      operationId: Domains_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      requestBody:
        description: Domain information.
        required: true
        x-ms-requestBody-name: domainInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - Domains
      summary: Delete a domain.
      description: Delete existing domain.
      operationId: Domains_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - Domains
      summary: Update a domain.
      description: Asynchronously updates a domain with the specified parameters.
      operationId: Domains_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      requestBody:
        description: Domain update information.
        required: true
        x-ms-requestBody-name: domainUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Domain update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/domains?api-version=2024-06-01-preview:
    get:
      tags:
        - Domains
      summary: List domains under an Azure subscription.
      description: List all the domains under an Azure subscription.
      operationId: Domains_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains?api-version=2024-06-01-preview:
    get:
      tags:
        - Domains
      summary: List domains under a resource group.
      description: List all the domains under a resource group.
      operationId: Domains_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/listKeys?api-version=2024-06-01-preview:
    post:
      tags:
        - Domains
      summary: List keys for a domain.
      description: List the two keys used to publish to a domain.
      operationId: DomainsSharedAccessKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: Domains_ListSharedAccessKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/regenerateKey?api-version=2024-06-01-preview:
    post:
      tags:
        - Domains
      summary: Regenerate key for a domain.
      description: Regenerate a shared access key for a domain.
      operationId: Domains_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{domainTopicName}?api-version=2024-06-01-preview:
    get:
      tags:
        - DomainTopics
      summary: Get a domain topic.
      description: Get properties of a domain topic.
      operationId: DomainTopics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: domainTopicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - DomainTopics
      summary: Create or update a domain topic.
      description: Asynchronously creates or updates a new domain topic with the specified parameters.
      operationId: DomainTopics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: domainTopicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - DomainTopics
      summary: Delete a domain topic.
      description: Delete existing domain topic.
      operationId: DomainTopics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: domainTopicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics?api-version=2024-06-01-preview:
    get:
      tags:
        - DomainTopics
      summary: List domain topics.
      description: List all the topics in a domain.
      operationId: DomainTopics_ListByDomain
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription for domain topic.
      description: Get all delivery attributes for an event subscription for domain topic.
      operationId: DomainTopicEventSubscriptionsDeliveryAttributes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: DomainTopicEventSubscriptions_GetDeliveryAttributes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription for topic.
      description: Get all delivery attributes for an event subscription for topic.
      operationId: TopicEventSubscriptionsDeliveryAttributes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: TopicEventSubscriptions_GetDeliveryAttributes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription for domain.
      description: Get all delivery attributes for an event subscription for domain.
      operationId: DomainEventSubscriptionsDeliveryAttributes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: DomainEventSubscriptions_GetDeliveryAttributes
  /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription.
      description: Get all delivery attributes for an event subscription.
      operationId: EventSubscriptionsDeliveryAttributes_Get
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: EventSubscriptions_GetDeliveryAttributes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription.
      description: Get all delivery attributes for an event subscription.
      operationId: SystemTopicEventSubscriptionsDeliveryAttributes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: SystemTopicEventSubscriptions_GetDeliveryAttributes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a namespace topic.
      description: Get properties of an event subscription of a namespace topic.
      operationId: NamespaceTopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription of a namespace topic.
      description: Asynchronously creates or updates an event subscription of a namespace topic with the specified parameters. Existing event subscriptions will be updated with this API.
      operationId: NamespaceTopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 50 characters in length and use alphanumeric letters only.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Event subscription properties containing the delivery mode, filter information, and others.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription of a namespace topic.
      description: Delete an existing event subscription of a namespace topic.
      operationId: NamespaceTopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - EventSubscriptions
      summary: Update event subscription of a namespace topic.
      description: Update an existing event subscription of a namespace topic.
      operationId: NamespaceTopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '202':
          description: NamespaceTopicEventSubscription update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List event subscriptions of a namespace topic.
      description: List event subscriptions that belong to a specific namespace topic.
      operationId: NamespaceTopicEventSubscriptions_ListByNamespaceTopic
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription of a namespace topic.
      description: Get all delivery attributes for an event subscription of a namespace topic.
      operationId: NamespaceTopicEventSubscriptionsDeliveryAttributes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NamespaceTopicEventSubscriptions_GetDeliveryAttributes
  /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription.
      description: Get properties of an event subscription.
      operationId: EventSubscriptions_Get
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription.
      description: Asynchronously creates a new event subscription or updates an existing event subscription based on the specified scope.
      operationId: EventSubscriptions_CreateOrUpdate
      parameters:
        - name: scope
          in: path
          description: The identifier of the resource to which the event subscription needs to be created or updated. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '201':
          description: EventSubscription CreateOrUpdate request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription.
      description: Delete an existing event subscription.
      operationId: EventSubscriptions_Delete
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - EventSubscriptions
      summary: Update an event subscription.
      description: Asynchronously updates an existing event subscription.
      operationId: EventSubscriptions_Update
      parameters:
        - name: scope
          in: path
          description: The scope of existing event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: EventSubscription update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get a nested event subscription for domain topic.
      description: Get properties of a nested event subscription for a domain topic.
      operationId: DomainTopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - EventSubscriptions
      summary: Create or update a nested event subscription to a domain topic.
      description: Asynchronously creates a new event subscription or updates an existing event subscription.
      operationId: DomainTopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - EventSubscriptions
      summary: Delete a nested event subscription for a domain topic.
      description: Delete a nested existing event subscription for a domain topic.
      operationId: DomainTopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - EventSubscriptions
      summary: Update a nested event subscription for a domain topic.
      description: Update an existing event subscription for a domain topic.
      operationId: DomainTopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a topic.
      description: Get properties of an event subscription of a topic.
      operationId: TopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription to a topic.
      description: Asynchronously creates a new event subscription or updates an existing event subscription.
      operationId: TopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription for a topic.
      description: Delete an existing event subscription for a topic.
      operationId: TopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - EventSubscriptions
      summary: Update an event subscription for a topic.
      description: Update an existing event subscription for a topic.
      operationId: TopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a domain.
      description: Get properties of an event subscription of a domain.
      operationId: DomainEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription to a domain.
      description: Asynchronously creates a new event subscription or updates an existing event subscription.
      operationId: DomainEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription for a domain.
      description: Delete an existing event subscription for a domain.
      operationId: DomainEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - EventSubscriptions
      summary: Update an event subscription for a domain.
      description: Update an existing event subscription for a topic.
      operationId: DomainEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a system topic.
      description: Get an event subscription.
      operationId: SystemTopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription for a system topic.
      description: Asynchronously creates or updates an event subscription with the specified parameters. Existing event subscriptions will be updated with this API.
      operationId: SystemTopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription of a system topic.
      description: Delete an existing event subscription of a system topic.
      operationId: SystemTopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - EventSubscriptions
      summary: Update event subscription of a system topic.
      description: Update an existing event subscription of a system topic.
      operationId: SystemTopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription of a system topic.
      description: Get the full endpoint URL for an event subscription of a system topic.
      operationId: SystemTopicEventSubscriptionsFullUrl_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: SystemTopicEventSubscriptions_GetFullUrl
  /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription.
      description: Get the full endpoint URL for an event subscription.
      operationId: EventSubscriptionsFullUrl_Get
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: EventSubscriptions_GetFullUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List event subscriptions of a system topic.
      description: List event subscriptions that belong to a specific system topic.
      operationId: SystemTopicEventSubscriptions_ListBySystemTopic
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a partner topic.
      description: Get properties of an event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription of a partner topic.
      description: Asynchronously creates or updates an event subscription of a partner topic with the specified parameters. Existing event subscriptions will be updated with this API.
      operationId: PartnerTopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription of a partner topic.
      description: Delete an existing event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - EventSubscriptions
      summary: Update event subscription of a partner topic.
      description: Update an existing event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription of a partner topic.
      description: Get the full endpoint URL for an event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptionsFullUrl_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: PartnerTopicEventSubscriptions_GetFullUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List event subscriptions of a partner topic.
      description: List event subscriptions that belong to a specific partner topic.
      operationId: PartnerTopicEventSubscriptions_ListByPartnerTopic
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of a nested event subscription for domain topic.
      description: Get the full endpoint URL for a nested event subscription for domain topic.
      operationId: DomainTopicEventSubscriptionsFullUrl_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: DomainTopicEventSubscriptions_GetFullUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription for topic.
      description: Get the full endpoint URL for an event subscription for topic.
      operationId: TopicEventSubscriptionsFullUrl_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: TopicEventSubscriptions_GetFullUrl
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription for domain.
      description: Get the full endpoint URL for an event subscription for domain.
      operationId: DomainEventSubscriptionsFullUrl_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: DomainEventSubscriptions_GetFullUrl
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: Get an aggregated list of all global event subscriptions under an Azure subscription.
      description: List all aggregated global event subscriptions under a specific Azure subscription.
      operationId: EventSubscriptionsGlobalBySubscription_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListGlobalBySubscription
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all global event subscriptions for a topic type.
      description: List all global event subscriptions under an Azure subscription for a topic type.
      operationId: EventSubscriptionsGlobalBySubscriptionForTopicType_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListGlobalBySubscriptionForTopicType
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all global event subscriptions under an Azure subscription and resource group.
      description: List all global event subscriptions under a specific Azure subscription and resource group.
      operationId: EventSubscriptionsGlobalByResourceGroup_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListGlobalByResourceGroup
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all global event subscriptions under a resource group for a topic type.
      description: List all global event subscriptions under a resource group for a specific topic type.
      operationId: EventSubscriptionsGlobalByResourceGroupForTopicType_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListGlobalByResourceGroupForTopicType
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription.
      description: List all event subscriptions from the given location under a specific Azure subscription.
      operationId: EventSubscriptionsRegionalBySubscription_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListRegionalBySubscription
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription and resource group.
      description: List all event subscriptions from the given location under a specific Azure subscription and resource group.
      operationId: EventSubscriptionsRegionalByResourceGroup_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListRegionalByResourceGroup
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription for a topic type.
      description: List all event subscriptions from the given location under a specific Azure subscription and topic type.
      operationId: EventSubscriptionsRegionalBySubscriptionForTopicType_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListRegionalBySubscriptionForTopicType
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription and resource group for a topic type.
      description: List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type.
      operationId: EventSubscriptionsRegionalByResourceGroupForTopicType_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: EventSubscriptions_ListRegionalByResourceGroupForTopicType
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions.
      description: List all event subscriptions that have been created for a specific resource.
      operationId: EventSubscriptions_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: providerNamespace
          in: path
          description: Namespace of the provider of the topic.
          required: true
          schema:
            type: string
        - name: resourceTypeName
          in: path
          description: Name of the resource type.
          required: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: Name of the resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions for a specific topic.
      description: List all event subscriptions that have been created for a specific topic.
      operationId: TopicEventSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions for a specific domain.
      description: List all event subscriptions that have been created for a specific topic.
      operationId: DomainEventSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/providers/Microsoft.EventGrid/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions for a specific domain topic.
      description: List all event subscriptions that have been created for a specific domain topic.
      operationId: EventSubscriptions_ListByDomainTopic
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions?api-version=2024-06-01-preview:
    get:
      tags:
        - EventSubscriptions
      summary: List all nested event subscriptions for a specific domain topic.
      description: List all event subscriptions that have been created for a specific domain topic.
      operationId: DomainTopicEventSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription of a partner topic.
      description: Get all delivery attributes for an event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptionsDeliveryAttributes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: PartnerTopicEventSubscriptions_GetDeliveryAttributes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}?api-version=2024-06-01-preview:
    get:
      tags:
        - Namespaces
      summary: Get a namespace.
      description: Get properties of a namespace.
      operationId: Namespaces_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Namespaces
      summary: Create or update a namespace.
      description: Asynchronously creates or updates a new namespace with the specified parameters.
      operationId: Namespaces_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Namespace information.
        required: true
        x-ms-requestBody-name: namespaceInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Namespaces
      summary: Delete a namespace.
      description: Delete existing namespace.
      operationId: Namespaces_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Namespaces
      summary: Update a namespace.
      description: Asynchronously updates a namespace with the specified parameters.
      operationId: Namespaces_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Namespace update information.
        required: true
        x-ms-requestBody-name: namespaceUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
        '202':
          description: Namespace update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/namespaces?api-version=2024-06-01-preview:
    get:
      tags:
        - Namespaces
      summary: List namespaces under an Azure subscription.
      description: List all the namespaces under an Azure subscription.
      operationId: Namespaces_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespacesListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces?api-version=2024-06-01-preview:
    get:
      tags:
        - Namespaces
      summary: List namespaces under a resource group.
      description: List all the namespaces under a resource group.
      operationId: Namespaces_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespacesListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/listKeys?api-version=2024-06-01-preview:
    post:
      tags:
        - Namespaces
      summary: List keys for a namespace.
      description: List the two keys used to publish to a namespace.
      operationId: NamespacesSharedAccessKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceSharedAccessKeys'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_ListSharedAccessKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/regenerateKey?api-version=2024-06-01-preview:
    post:
      tags:
        - Namespaces
      summary: Regenerate key for a namespace.
      description: Regenerate a shared access key for a namespace.
      operationId: Namespaces_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the Namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceSharedAccessKeys'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}?api-version=2024-06-01-preview:
    get:
      tags:
        - NamespaceTopics
      summary: Get a namespace topic.
      description: Get properties of a namespace topic.
      operationId: NamespaceTopics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceTopic'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NamespaceTopics
      summary: Create a namespace topic.
      description: Asynchronously creates a new namespace topic with the specified parameters.
      operationId: NamespaceTopics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Namespace topic information.
        required: true
        x-ms-requestBody-name: namespaceTopicInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceTopic'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceTopic'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceTopic'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - NamespaceTopics
      summary: Delete a namespace topic.
      description: Delete existing namespace topic.
      operationId: NamespaceTopics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - NamespaceTopics
      summary: Update a namespace topic.
      description: Asynchronously updates a namespace topic with the specified parameters.
      operationId: NamespaceTopics_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Namespace topic update information.
        required: true
        x-ms-requestBody-name: namespaceTopicUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceTopicUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceTopic'
        '202':
          description: Namespace topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceTopic'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics?api-version=2024-06-01-preview:
    get:
      tags:
        - NamespaceTopics
      summary: List namespace topics under a namespace.
      description: List all the namespace topics under a namespace.
      operationId: NamespaceTopics_ListByNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceTopicsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/listKeys?api-version=2024-06-01-preview:
    post:
      tags:
        - NamespaceTopics
      summary: List keys for a namespace topic.
      description: List the two keys used to publish to a namespace topic.
      operationId: NamespaceTopicsSharedAccessKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSharedAccessKeys'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NamespaceTopics_ListSharedAccessKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/regenerateKey?api-version=2024-06-01-preview:
    post:
      tags:
        - NamespaceTopics
      summary: Regenerate key for a namespace topic.
      description: Regenerate a shared access key for a namespace topic.
      operationId: NamespaceTopics_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSharedAccessKeys'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.EventGrid/operations?api-version=2024-06-01-preview:
    get:
      tags:
        - Operations
      summary: List available operations.
      description: List the available operations supported by the Microsoft.EventGrid resource provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerConfigurations
      summary: Get a partner configuration.
      description: Get properties of a partner configuration.
      operationId: PartnerConfigurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - PartnerConfigurations
      summary: Create or update a partner configuration.
      description: Synchronously creates or updates a partner configuration with the specified parameters.
      operationId: PartnerConfigurations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner configuration information.
        required: true
        x-ms-requestBody-name: partnerConfigurationInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - PartnerConfigurations
      summary: Delete a partner configuration.
      description: Delete existing partner configuration.
      operationId: PartnerConfigurations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - PartnerConfigurations
      summary: Update a partner configuration.
      description: Synchronously updates a partner configuration with the specified parameters.
      operationId: PartnerConfigurations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner configuration update information.
        required: true
        x-ms-requestBody-name: partnerConfigurationUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerConfigurationUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerConfigurations
      summary: List partner configurations under a resource group.
      description: List all the partner configurations under a resource group.
      operationId: PartnerConfigurations_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfigurationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerConfigurations?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerConfigurations
      summary: List partner configurations under an Azure subscription.
      description: List all the partner configurations under an Azure subscription.
      operationId: PartnerConfigurations_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfigurationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default/authorizePartner?api-version=2024-06-01-preview:
    post:
      tags:
        - PartnerConfigurations
      summary: Authorize a partner.
      description: Authorize a single partner either by partner registration immutable Id or by partner name.
      operationId: PartnerConfigurations_AuthorizePartner
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: The information of the partner to be authorized.
        required: true
        x-ms-requestBody-name: partnerInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default/unauthorizePartner?api-version=2024-06-01-preview:
    post:
      tags:
        - PartnerConfigurations
      summary: Unauthorize a partner.
      description: Unauthorize a single partner either by partner registration immutable Id or by partner name.
      operationId: PartnerConfigurations_UnauthorizePartner
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: The information of the partner to be unauthorized.
        required: true
        x-ms-requestBody-name: partnerInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerDestinations/{partnerDestinationName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerDestinations
      summary: Get a partner destination.
      description: Get properties of a partner destination.
      operationId: PartnerDestinations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerDestinationName
          in: path
          description: Name of the partner destination.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestination'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PartnerDestinations
      summary: Create a partner destination.
      description: Asynchronously creates a new partner destination with the specified parameters.
      operationId: PartnerDestinations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerDestinationName
          in: path
          description: Name of the partner destination.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Partner destination create information.
        required: true
        x-ms-requestBody-name: partnerDestination
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerDestination'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestination'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestination'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - PartnerDestinations
      summary: Delete a partner destination.
      description: Delete existing partner destination.
      operationId: PartnerDestinations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerDestinationName
          in: path
          description: Name of the partner destination.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - PartnerDestinations
      summary: Update a partner destination.
      description: Asynchronously updates a partner destination with the specified parameters.
      operationId: PartnerDestinations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerDestinationName
          in: path
          description: Name of the partner destination.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Partner destination update information.
        required: true
        x-ms-requestBody-name: partnerDestinationUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerDestinationUpdateParameters'
      responses:
        '200':
          description: Partner Destination update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestination'
        '201':
          description: Partner Destination update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestination'
        '202':
          description: Partner Destination update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestination'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerDestinations?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerDestinations
      summary: List partner destinations under an Azure subscription.
      description: List all the partner destinations under an Azure subscription.
      operationId: PartnerDestinations_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestinationsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerDestinations?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerDestinations
      summary: List partner destinations under a resource group.
      description: List all the partner destinations under a resource group.
      operationId: PartnerDestinations_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestinationsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerDestinations/{partnerDestinationName}/activate?api-version=2024-06-01-preview:
    post:
      tags:
        - PartnerDestinations
      summary: Activate a partner destination.
      description: Activate a newly created partner destination.
      operationId: PartnerDestinations_Activate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerDestinationName
          in: path
          description: Name of the partner destination.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDestination'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerNamespaces
      summary: Get a partner namespace.
      description: Get properties of a partner namespace.
      operationId: PartnerNamespaces_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespace'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PartnerNamespaces
      summary: Create a partner namespace.
      description: Asynchronously creates a new partner namespace with the specified parameters.
      operationId: PartnerNamespaces_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      requestBody:
        description: PartnerNamespace information.
        required: true
        x-ms-requestBody-name: partnerNamespaceInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerNamespace'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespace'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - PartnerNamespaces
      summary: Delete a partner namespace.
      description: Delete existing partner namespace.
      operationId: PartnerNamespaces_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - PartnerNamespaces
      summary: Update a partner namespace.
      description: Asynchronously updates a partner namespace with the specified parameters.
      operationId: PartnerNamespaces_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner namespace update information.
        required: true
        x-ms-requestBody-name: partnerNamespaceUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerNamespaceUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Partner namespace update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespace'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerNamespaces?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerNamespaces
      summary: List partner namespaces under an Azure subscription.
      description: List all the partner namespaces under an Azure subscription.
      operationId: PartnerNamespaces_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespacesListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerNamespaces
      summary: List partner namespaces under a resource group.
      description: List all the partner namespaces under a resource group.
      operationId: PartnerNamespaces_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespacesListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/listKeys?api-version=2024-06-01-preview:
    post:
      tags:
        - PartnerNamespaces
      summary: List keys for a partner namespace.
      description: List the two keys used to publish to a partner namespace.
      operationId: PartnerNamespacesSharedAccessKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespaceSharedAccessKeys'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: PartnerNamespaces_ListSharedAccessKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/regenerateKey?api-version=2024-06-01-preview:
    post:
      tags:
        - PartnerNamespaces
      summary: Regenerate key for a partner namespace.
      description: Regenerate a shared access key for a partner namespace.
      operationId: PartnerNamespaces_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerNamespaceRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespaceSharedAccessKeys'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerRegistrations
      summary: Get a partner registration.
      description: Gets a partner registration with the specified parameters.
      operationId: PartnerRegistrations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
    put:
      tags:
        - PartnerRegistrations
      summary: Create a partner registration.
      description: Creates a new partner registration with the specified parameters.
      operationId: PartnerRegistrations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      requestBody:
        description: PartnerRegistration information.
        required: true
        x-ms-requestBody-name: partnerRegistrationInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRegistration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
          headers:
            Location:
              schema:
                type: string
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - PartnerRegistrations
      summary: Delete a partner registration.
      description: Deletes a partner registration with the specified parameters.
      operationId: PartnerRegistrations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - PartnerRegistrations
      summary: Update a partner registration.
      description: Updates a partner registration with the specified parameters.
      operationId: PartnerRegistrations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner registration update information.
        required: true
        x-ms-requestBody-name: partnerRegistrationUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRegistrationUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Partner registration update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerRegistrations?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerRegistrations
      summary: List partner registrations under an Azure subscription.
      description: List all the partner registrations under an Azure subscription.
      operationId: PartnerRegistrations_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistrationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerRegistrations
      summary: List partner registrations under a resource group.
      description: List all the partner registrations under a resource group.
      operationId: PartnerRegistrations_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistrationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerTopics
      summary: Get a partner topic.
      description: Get properties of a partner topic.
      operationId: PartnerTopics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - PartnerTopics
      summary: Create a partner topic.
      description: Asynchronously creates a new partner topic with the specified parameters.
      operationId: PartnerTopics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner Topic information.
        required: true
        x-ms-requestBody-name: partnerTopicInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerTopic'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    delete:
      tags:
        - PartnerTopics
      summary: Delete a partner topic.
      description: Delete existing partner topic.
      operationId: PartnerTopics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - PartnerTopics
      summary: Update a partner topic.
      description: Asynchronously updates a partner topic with the specified parameters.
      operationId: PartnerTopics_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      requestBody:
        description: PartnerTopic update information.
        required: true
        x-ms-requestBody-name: partnerTopicUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerTopicUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Partner Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerTopics?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerTopics
      summary: List partner topics under an Azure subscription.
      description: List all the partner topics under an Azure subscription.
      operationId: PartnerTopics_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics?api-version=2024-06-01-preview:
    get:
      tags:
        - PartnerTopics
      summary: List partner topics under a resource group.
      description: List all the partner topics under a resource group.
      operationId: PartnerTopics_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/activate?api-version=2024-06-01-preview:
    post:
      tags:
        - PartnerTopics
      summary: Activate a partner topic.
      description: Activate a newly created partner topic.
      operationId: PartnerTopics_Activate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/deactivate?api-version=2024-06-01-preview:
    post:
      tags:
        - PartnerTopics
      summary: Deactivate a partner topic.
      description: Deactivate specific partner topic.
      operationId: PartnerTopics_Deactivate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{resourceType}/{resourceName}/networkSecurityPerimeterConfigurations/{perimeterGuid}.{associationName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PerimeterAssociationProxies
      summary: Get a specific network security perimeter configuration.
      description: Get a specific network security perimeter configuration with a topic or domain.
      operationId: NetworkSecurityPerimeterConfigurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The type of the resource. This can be either \'topics\', or \'domains\'.
          required: true
          schema:
            enum:
              - topics
              - domains
            x-ms-enum:
              name: NetworkSecurityPerimeterResourceType
              modelAsString: true
            type: string
        - name: resourceName
          in: path
          description: The name of the resource (namely, either, the topic name or domain name).
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: perimeterGuid
          in: path
          description: Unique identifier for perimeter
          required: true
          schema:
            type: string
        - name: associationName
          in: path
          description: Association name to association network security perimeter resource to profile
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{resourceType}/{resourceName}/networkSecurityPerimeterConfigurations/{perimeterGuid}.{associationName}/reconcile?api-version=2024-06-01-preview:
    post:
      tags:
        - PerimeterAssociationProxies
      summary: Reconcile a specific network security perimeter configuration for a given network security perimeter association.
      description: Reconcile a specific network security perimeter configuration for a given network security perimeter association with a topic or domain.
      operationId: NetworkSecurityPerimeterConfigurations_Reconcile
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The type of the resource. This can be either \'topics\' or \'domains\'.
          required: true
          schema:
            enum:
              - topics
              - domains
            x-ms-enum:
              name: NetworkSecurityPerimeterResourceType
              modelAsString: true
            type: string
        - name: resourceName
          in: path
          description: The name of the resource (namely, either, the topic name or domain name).
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: perimeterGuid
          in: path
          description: Unique identifier for perimeter
          required: true
          schema:
            type: string
        - name: associationName
          in: path
          description: Association name to association network security perimeter resource to profile
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{resourceType}/{resourceName}/networkSecurityPerimeterConfigurations?api-version=2024-06-01-preview:
    get:
      tags:
        - PerimeterAssociationProxies
      summary: Get all network security perimeter configurations for resource.
      description: Get all network security perimeter configurations associated with a topic or domain.
      operationId: NetworkSecurityPerimeterConfigurations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The type of the resource. This can be either \'topics\' or \'domains\'.
          required: true
          schema:
            enum:
              - topics
              - domains
            x-ms-enum:
              name: NetworkSecurityPerimeterResourceType
              modelAsString: true
            type: string
        - name: resourceName
          in: path
          description: The name of the resource (namely, either, the topic name or domain name).
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationList'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/permissionBindings/{permissionBindingName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PermissionBindings
      summary: Get a permission binding.
      description: Get properties of a permission binding.
      operationId: PermissionBindings_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: permissionBindingName
          in: path
          description: Name of the permission binding.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBinding'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PermissionBindings
      summary: Create or update a permission binding.
      description: Create or update a permission binding with the specified parameters.
      operationId: PermissionBindings_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: permissionBindingName
          in: path
          description: The permission binding name.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Permission binding information.
        required: true
        x-ms-requestBody-name: permissionBindingInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionBinding'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBinding'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBinding'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - PermissionBindings
      summary: Delete a permission binding.
      description: Delete an existing permission binding.
      operationId: PermissionBindings_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: permissionBindingName
          in: path
          description: Name of the permission binding.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/permissionBindings?api-version=2024-06-01-preview:
    get:
      tags:
        - PermissionBindings
      summary: List all permission bindings under a namespace.
      description: Get all the permission bindings under a namespace.
      operationId: PermissionBindings_ListByNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBindingsListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      summary: Get a specific private endpoint connection.
      description: Get a specific private endpoint connection under a topic, domain, or partner namespace or namespace.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
              - namespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
          required: true
          schema:
            type: string
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - PrivateEndpointConnections
      summary: Update a specific private endpoint connection.
      description: Update a specific private endpoint connection under a topic, domain or partner namespace.
      operationId: PrivateEndpointConnections_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
              - namespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
          required: true
          schema:
            type: string
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection connection.
          required: true
          schema:
            type: string
      requestBody:
        description: The private endpoint connection object to update.
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - PrivateEndpointConnections
      summary: Delete a specific private endpoint connection.
      description: Delete a specific private endpoint connection under a topic, domain, or partner namespace or namespace.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
              - namespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
          required: true
          schema:
            type: string
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection connection.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections?api-version=2024-06-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      summary: Lists all private endpoint connections under a resource.
      description: Get all private endpoint connections under a topic, domain, or partner namespace or namespace.
      operationId: PrivateEndpointConnections_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
              - namespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}?api-version=2024-06-01-preview:
    get:
      tags:
        - PrivateLinkResources
      summary: Get a private link resource.
      description: Get properties of a private link resource.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
          required: true
          schema:
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
          required: true
          schema:
            type: string
        - name: privateLinkResourceName
          in: path
          description: The name of private link resource will be either topic, domain, partnerNamespace or namespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources?api-version=2024-06-01-preview:
    get:
      tags:
        - PrivateLinkResources
      summary: List private link resources under specific topic, domain, or partner namespace or namespace.
      description: List all the private link resources under a topic, domain, or partner namespace or namespace.
      operationId: PrivateLinkResources_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
          required: true
          schema:
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace or namespace name).
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourcesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}?api-version=2024-06-01-preview:
    get:
      tags:
        - SystemTopics
      summary: Get a system topic.
      description: Get properties of a system topic.
      operationId: SystemTopics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - SystemTopics
      summary: Create a system topic.
      description: Asynchronously creates a new system topic with the specified parameters.
      operationId: SystemTopics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      requestBody:
        description: System Topic information.
        required: true
        x-ms-requestBody-name: systemTopicInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemTopic'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - SystemTopics
      summary: Delete a system topic.
      description: Delete existing system topic.
      operationId: SystemTopics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - SystemTopics
      summary: Update a system topic.
      description: Asynchronously updates a system topic with the specified parameters.
      operationId: SystemTopics_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      requestBody:
        description: SystemTopic update information.
        required: true
        x-ms-requestBody-name: systemTopicUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemTopicUpdateParameters'
      responses:
        '200':
          description: System Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        '201':
          description: System Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/systemTopics?api-version=2024-06-01-preview:
    get:
      tags:
        - SystemTopics
      summary: List system topics under an Azure subscription.
      description: List all the system topics under an Azure subscription.
      operationId: SystemTopics_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics?api-version=2024-06-01-preview:
    get:
      tags:
        - SystemTopics
      summary: List system topics under a resource group.
      description: List all the system topics under a resource group.
      operationId: SystemTopics_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}?api-version=2024-06-01-preview:
    get:
      tags:
        - Topics
      summary: Get a topic.
      description: Get properties of a topic.
      operationId: Topics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
    put:
      tags:
        - Topics
      summary: Create a topic.
      description: Asynchronously creates a new topic with the specified parameters.
      operationId: Topics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Topic information.
        required: true
        x-ms-requestBody-name: topicInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    delete:
      tags:
        - Topics
      summary: Delete a topic.
      description: Delete existing topic.
      operationId: Topics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
    patch:
      tags:
        - Topics
      summary: Update a topic.
      description: Asynchronously updates a topic with the specified parameters.
      operationId: Topics_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Topic update information.
        required: true
        x-ms-requestBody-name: topicUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics?api-version=2024-06-01-preview:
    get:
      tags:
        - Topics
      summary: List topics under an Azure subscription.
      description: List all the topics under an Azure subscription.
      operationId: Topics_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics?api-version=2024-06-01-preview:
    get:
      tags:
        - Topics
      summary: List topics under a resource group.
      description: List all the topics under a resource group.
      operationId: Topics_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/listKeys?api-version=2024-06-01-preview:
    post:
      tags:
        - Topics
      summary: List keys for a topic.
      description: List the two keys used to publish to a topic.
      operationId: TopicsSharedAccessKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-original-operationId: Topics_ListSharedAccessKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/regenerateKey?api-version=2024-06-01-preview:
    post:
      tags:
        - Topics
      summary: Regenerate key for a topic.
      description: Regenerate a shared access key for a topic.
      operationId: Topics_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSharedAccessKeys'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes?api-version=2024-06-01-preview:
    get:
      tags:
        - Topics
      summary: List topic event types.
      description: List event types for a topic.
      operationId: TopicsEventTypes_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: providerNamespace
          in: path
          description: Namespace of the provider of the topic.
          required: true
          schema:
            type: string
        - name: resourceTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Topics_ListEventTypes
  /{scope}/providers/Microsoft.EventGrid/extensionTopics/default?api-version=2024-06-01-preview:
    get:
      tags:
        - Topics
      summary: Get properties of an extension topic.
      description: Get the properties of an extension topic.
      operationId: ExtensionTopics_Get
      parameters:
        - name: scope
          in: path
          description: The identifier of the resource to which extension topic is queried. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for Azure resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topicSpaces/{topicSpaceName}?api-version=2024-06-01-preview:
    get:
      tags:
        - TopicSpaces
      summary: Get a topic space.
      description: Get properties of a topic space.
      operationId: TopicSpaces_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicSpaceName
          in: path
          description: Name of the Topic space.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSpace'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - TopicSpaces
      summary: Create or update a topic space.
      description: Create or update a topic space with the specified parameters.
      operationId: TopicSpaces_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicSpaceName
          in: path
          description: The topic space name.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      requestBody:
        description: Topic space information.
        required: true
        x-ms-requestBody-name: topicSpaceInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicSpace'
      responses:
        '200':
          description: Create or update request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSpace'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSpace'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - TopicSpaces
      summary: Delete a topic space.
      description: Delete an existing topic space.
      operationId: TopicSpaces_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicSpaceName
          in: path
          description: Name of the Topic space.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topicSpaces?api-version=2024-06-01-preview:
    get:
      tags:
        - TopicSpaces
      summary: List all topic spaces under a namespace.
      description: Get all the topic spaces under a namespace.
      operationId: TopicSpaces_ListByNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSpacesListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.EventGrid/topicTypes?api-version=2024-06-01-preview:
    get:
      tags:
        - TopicTypes
      summary: List topic types.
      description: List all registered topic types.
      operationId: TopicTypes_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicTypesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
  /providers/Microsoft.EventGrid/topicTypes/{topicTypeName}?api-version=2024-06-01-preview:
    get:
      tags:
        - TopicTypes
      summary: Get a topic type.
      description: Get information about a topic type.
      operationId: TopicTypes_Get
      parameters:
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicTypeInfo'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
  /providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventTypes?api-version=2024-06-01-preview:
    get:
      tags:
        - TopicTypes
      summary: List event types.
      description: List event types for a topic type.
      operationId: TopicTypesEventTypes_List
      parameters:
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: TopicTypes_ListEventTypes
  /providers/Microsoft.EventGrid/verifiedPartners/{verifiedPartnerName}?api-version=2024-06-01-preview:
    get:
      tags:
        - VerifiedPartners
      summary: Get a verified partner.
      description: Get properties of a verified partner.
      operationId: VerifiedPartners_Get
      parameters:
        - name: verifiedPartnerName
          in: path
          description: Name of the verified partner.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiedPartner'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
  /providers/Microsoft.EventGrid/verifiedPartners?api-version=2024-06-01-preview:
    get:
      tags:
        - VerifiedPartners
      summary: List all verified partners.
      description: Get a list of all verified partners.
      operationId: VerifiedPartners_List
      parameters:
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiedPartnersListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/validateCustomDomainOwnership?api-version=2024-06-01-preview:
    post:
      tags:
        - Namespaces
      summary: Validate ownership for all custom domains in a namespace.
      description: Performs ownership validation via checking TXT records for all custom domains in a namespace.
      operationId: Namespaces_ValidateCustomDomainOwnership
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the Namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomainOwnershipValidationResult'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces/{namespaceName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl?api-version=2024-06-01-preview:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription of a namespace topic.
      description: Get the full endpoint URL for an event subscription of a namespace topic.
      operationId: NamespaceTopicEventSubscriptionsFullUrl_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: Name of the namespace.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: topicName
          in: path
          description: Name of the namespace topic.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9-]*$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionFullUrl'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NamespaceTopicEventSubscriptions_GetFullUrl
